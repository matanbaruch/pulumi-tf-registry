// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNodes(args: GetNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetNodesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("squaredup:index/getNodes:getNodes", {
        "allowNoData": args.allowNoData,
        "dataSourceId": args.dataSourceId,
        "nodeName": args.nodeName,
        "nodeSourceId": args.nodeSourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesArgs {
    allowNoData?: boolean;
    dataSourceId: string;
    nodeName?: string;
    nodeSourceId?: string;
}

/**
 * A collection of values returned by getNodes.
 */
export interface GetNodesResult {
    readonly allowNoData?: boolean;
    readonly dataSourceId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nodeName?: string;
    readonly nodeProperties: outputs.GetNodesNodeProperty[];
    readonly nodeSourceId?: string;
}
export function getNodesOutput(args: GetNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodesResult> {
    return pulumi.output(args).apply((a: any) => getNodes(a, opts))
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesOutputArgs {
    allowNoData?: pulumi.Input<boolean>;
    dataSourceId: pulumi.Input<string>;
    nodeName?: pulumi.Input<string>;
    nodeSourceId?: pulumi.Input<string>;
}
