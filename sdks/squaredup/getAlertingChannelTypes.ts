// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAlertingChannelTypes(args?: GetAlertingChannelTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertingChannelTypesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("squaredup:index/getAlertingChannelTypes:getAlertingChannelTypes", {
        "displayName": args.displayName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAlertingChannelTypes.
 */
export interface GetAlertingChannelTypesArgs {
    displayName?: string;
}

/**
 * A collection of values returned by getAlertingChannelTypes.
 */
export interface GetAlertingChannelTypesResult {
    readonly alertingChannelTypes: outputs.GetAlertingChannelTypesAlertingChannelType[];
    readonly displayName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getAlertingChannelTypesOutput(args?: GetAlertingChannelTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertingChannelTypesResult> {
    return pulumi.output(args).apply((a: any) => getAlertingChannelTypes(a, opts))
}

/**
 * A collection of arguments for invoking getAlertingChannelTypes.
 */
export interface GetAlertingChannelTypesOutputArgs {
    displayName?: pulumi.Input<string>;
}
