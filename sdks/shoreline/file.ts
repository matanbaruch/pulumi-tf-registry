// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class File extends pulumi.CustomResource {
    /**
     * Get an existing File resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileState, opts?: pulumi.CustomResourceOptions): File {
        return new File(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'shoreline:index/file:File';

    /**
     * Returns true if the given object is an instance of File.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is File {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === File.__pulumiType;
    }

    /**
     * Cryptographic hash (e.g. md5) of a File Resource.
     */
    public /*out*/ readonly checksum!: pulumi.Output<string>;
    /**
     * A user-friendly explanation of an object.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Target location for a copied distributed File object. See [Op: cp](https://docs.shoreline.io/op/commands/cp).
     */
    public readonly destinationPath!: pulumi.Output<string>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Internal representation of a distributed File object's data (computed).
     */
    public /*out*/ readonly fileData!: pulumi.Output<string>;
    /**
     * Length, in bytes, of a distributed File object (computed)
     */
    public /*out*/ readonly fileLength!: pulumi.Output<number>;
    /**
     * The inline file data of a distributed File object. (conflicts with input_file)
     */
    public readonly inlineData!: pulumi.Output<string | undefined>;
    /**
     * The local source of a distributed File object. (conflicts with inline_data)
     */
    public readonly inputFile!: pulumi.Output<string | undefined>;
    /**
     * The md5 checksum of a file, e.g. filemd5("${path.module}/data/example-file.txt")
     */
    public readonly md5!: pulumi.Output<string | undefined>;
    /**
     * The File's permissions, like 'chmod', in octal (e.g. '0644').
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The File's ownership, like 'chown' (e.g. 'user:group').
     */
    public readonly owner!: pulumi.Output<string | undefined>;
    /**
     * A set of Resources (e.g. host, pod, container), optionally filtered on tags or dynamic conditions.
     */
    public readonly resourceQuery!: pulumi.Output<string>;
    /**
     * The type of object (i.e., Alarm, Action, Bot, Metric, Resource, or File).
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a File resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileArgs | FileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileState | undefined;
            resourceInputs["checksum"] = state ? state.checksum : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationPath"] = state ? state.destinationPath : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["fileData"] = state ? state.fileData : undefined;
            resourceInputs["fileLength"] = state ? state.fileLength : undefined;
            resourceInputs["inlineData"] = state ? state.inlineData : undefined;
            resourceInputs["inputFile"] = state ? state.inputFile : undefined;
            resourceInputs["md5"] = state ? state.md5 : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["resourceQuery"] = state ? state.resourceQuery : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as FileArgs | undefined;
            if ((!args || args.destinationPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationPath'");
            }
            if ((!args || args.resourceQuery === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceQuery'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationPath"] = args ? args.destinationPath : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["inlineData"] = args ? args.inlineData : undefined;
            resourceInputs["inputFile"] = args ? args.inputFile : undefined;
            resourceInputs["md5"] = args ? args.md5 : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["resourceQuery"] = args ? args.resourceQuery : undefined;
            resourceInputs["checksum"] = undefined /*out*/;
            resourceInputs["fileData"] = undefined /*out*/;
            resourceInputs["fileLength"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(File.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering File resources.
 */
export interface FileState {
    /**
     * Cryptographic hash (e.g. md5) of a File Resource.
     */
    checksum?: pulumi.Input<string>;
    /**
     * A user-friendly explanation of an object.
     */
    description?: pulumi.Input<string>;
    /**
     * Target location for a copied distributed File object. See [Op: cp](https://docs.shoreline.io/op/commands/cp).
     */
    destinationPath?: pulumi.Input<string>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Internal representation of a distributed File object's data (computed).
     */
    fileData?: pulumi.Input<string>;
    /**
     * Length, in bytes, of a distributed File object (computed)
     */
    fileLength?: pulumi.Input<number>;
    /**
     * The inline file data of a distributed File object. (conflicts with input_file)
     */
    inlineData?: pulumi.Input<string>;
    /**
     * The local source of a distributed File object. (conflicts with inline_data)
     */
    inputFile?: pulumi.Input<string>;
    /**
     * The md5 checksum of a file, e.g. filemd5("${path.module}/data/example-file.txt")
     */
    md5?: pulumi.Input<string>;
    /**
     * The File's permissions, like 'chmod', in octal (e.g. '0644').
     */
    mode?: pulumi.Input<string>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    name?: pulumi.Input<string>;
    /**
     * The File's ownership, like 'chown' (e.g. 'user:group').
     */
    owner?: pulumi.Input<string>;
    /**
     * A set of Resources (e.g. host, pod, container), optionally filtered on tags or dynamic conditions.
     */
    resourceQuery?: pulumi.Input<string>;
    /**
     * The type of object (i.e., Alarm, Action, Bot, Metric, Resource, or File).
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a File resource.
 */
export interface FileArgs {
    /**
     * A user-friendly explanation of an object.
     */
    description?: pulumi.Input<string>;
    /**
     * Target location for a copied distributed File object. See [Op: cp](https://docs.shoreline.io/op/commands/cp).
     */
    destinationPath: pulumi.Input<string>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The inline file data of a distributed File object. (conflicts with input_file)
     */
    inlineData?: pulumi.Input<string>;
    /**
     * The local source of a distributed File object. (conflicts with inline_data)
     */
    inputFile?: pulumi.Input<string>;
    /**
     * The md5 checksum of a file, e.g. filemd5("${path.module}/data/example-file.txt")
     */
    md5?: pulumi.Input<string>;
    /**
     * The File's permissions, like 'chmod', in octal (e.g. '0644').
     */
    mode?: pulumi.Input<string>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    name?: pulumi.Input<string>;
    /**
     * The File's ownership, like 'chown' (e.g. 'user:group').
     */
    owner?: pulumi.Input<string>;
    /**
     * A set of Resources (e.g. host, pod, container), optionally filtered on tags or dynamic conditions.
     */
    resourceQuery: pulumi.Input<string>;
}
