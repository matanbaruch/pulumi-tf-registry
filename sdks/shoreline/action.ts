// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Action extends pulumi.CustomResource {
    /**
     * Get an existing Action resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ActionState, opts?: pulumi.CustomResourceOptions): Action {
        return new Action(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'shoreline:index/action:Action';

    /**
     * Returns true if the given object is an instance of Action.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Action {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Action.__pulumiType;
    }

    /**
     * The list of users who can run an action or notebook. Any user can run if left empty.
     */
    public readonly allowedEntities!: pulumi.Output<string[] | undefined>;
    /**
     * The list of resources on which an action or notebook can run. No restriction, if left empty.
     */
    public readonly allowedResourcesQuery!: pulumi.Output<string | undefined>;
    /**
     * A specific action to run.
     */
    public readonly command!: pulumi.Output<string>;
    /**
     * A string value denoting the slack channel where notifications related to the object should be sent to.
     */
    public readonly communicationChannel!: pulumi.Output<string | undefined>;
    /**
     * A string value denoting the slack workspace where notifications related to the object should be sent to.
     */
    public readonly communicationWorkspace!: pulumi.Output<string | undefined>;
    /**
     * The long description of the Action's completion.
     */
    public readonly completeLongTemplate!: pulumi.Output<string | undefined>;
    /**
     * The short description of the Action's completion.
     */
    public readonly completeShortTemplate!: pulumi.Output<string | undefined>;
    /**
     * UI title of the Action's completion.
     */
    public readonly completeTitleTemplate!: pulumi.Output<string | undefined>;
    /**
     * A user-friendly explanation of an object.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of users who can edit the object (with configure permission). Empty maps to all users.
     */
    public readonly editors!: pulumi.Output<string[] | undefined>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The long description of the Action's error condition.
     */
    public readonly errorLongTemplate!: pulumi.Output<string | undefined>;
    /**
     * The short description of the Action's error condition.
     */
    public readonly errorShortTemplate!: pulumi.Output<string | undefined>;
    /**
     * UI title of the Action's error condition.
     */
    public readonly errorTitleTemplate!: pulumi.Output<string | undefined>;
    /**
     * file object dependencies.
     */
    public readonly fileDeps!: pulumi.Output<string[] | undefined>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Named variables to pass to an object (e.g. an Action).
     */
    public readonly params!: pulumi.Output<string[] | undefined>;
    /**
     * Result environment variable ... an environment variable used to output values through.
     */
    public readonly resEnvVar!: pulumi.Output<string | undefined>;
    /**
     * A set of Resources (e.g. host, pod, container), optionally filtered on tags or dynamic conditions.
     */
    public readonly resourceQuery!: pulumi.Output<string | undefined>;
    public readonly resourceTagsToExports!: pulumi.Output<string[] | undefined>;
    /**
     * The commandline shell to use (e.g. /bin/sh).
     */
    public readonly shell!: pulumi.Output<string | undefined>;
    /**
     * The long description when starting the Action.
     */
    public readonly startLongTemplate!: pulumi.Output<string | undefined>;
    /**
     * The short description when starting the Action.
     */
    public readonly startShortTemplate!: pulumi.Output<string | undefined>;
    /**
     * UI title of the start of the Action.
     */
    public readonly startTitleTemplate!: pulumi.Output<string | undefined>;
    /**
     * Maximum time to wait, in milliseconds. Defaults to `60000`.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * The type of object (i.e., Alarm, Action, Bot, Metric, Resource, or File).
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Action resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ActionArgs | ActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ActionState | undefined;
            resourceInputs["allowedEntities"] = state ? state.allowedEntities : undefined;
            resourceInputs["allowedResourcesQuery"] = state ? state.allowedResourcesQuery : undefined;
            resourceInputs["command"] = state ? state.command : undefined;
            resourceInputs["communicationChannel"] = state ? state.communicationChannel : undefined;
            resourceInputs["communicationWorkspace"] = state ? state.communicationWorkspace : undefined;
            resourceInputs["completeLongTemplate"] = state ? state.completeLongTemplate : undefined;
            resourceInputs["completeShortTemplate"] = state ? state.completeShortTemplate : undefined;
            resourceInputs["completeTitleTemplate"] = state ? state.completeTitleTemplate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["editors"] = state ? state.editors : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["errorLongTemplate"] = state ? state.errorLongTemplate : undefined;
            resourceInputs["errorShortTemplate"] = state ? state.errorShortTemplate : undefined;
            resourceInputs["errorTitleTemplate"] = state ? state.errorTitleTemplate : undefined;
            resourceInputs["fileDeps"] = state ? state.fileDeps : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["params"] = state ? state.params : undefined;
            resourceInputs["resEnvVar"] = state ? state.resEnvVar : undefined;
            resourceInputs["resourceQuery"] = state ? state.resourceQuery : undefined;
            resourceInputs["resourceTagsToExports"] = state ? state.resourceTagsToExports : undefined;
            resourceInputs["shell"] = state ? state.shell : undefined;
            resourceInputs["startLongTemplate"] = state ? state.startLongTemplate : undefined;
            resourceInputs["startShortTemplate"] = state ? state.startShortTemplate : undefined;
            resourceInputs["startTitleTemplate"] = state ? state.startTitleTemplate : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ActionArgs | undefined;
            if ((!args || args.command === undefined) && !opts.urn) {
                throw new Error("Missing required property 'command'");
            }
            resourceInputs["allowedEntities"] = args ? args.allowedEntities : undefined;
            resourceInputs["allowedResourcesQuery"] = args ? args.allowedResourcesQuery : undefined;
            resourceInputs["command"] = args ? args.command : undefined;
            resourceInputs["communicationChannel"] = args ? args.communicationChannel : undefined;
            resourceInputs["communicationWorkspace"] = args ? args.communicationWorkspace : undefined;
            resourceInputs["completeLongTemplate"] = args ? args.completeLongTemplate : undefined;
            resourceInputs["completeShortTemplate"] = args ? args.completeShortTemplate : undefined;
            resourceInputs["completeTitleTemplate"] = args ? args.completeTitleTemplate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["editors"] = args ? args.editors : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["errorLongTemplate"] = args ? args.errorLongTemplate : undefined;
            resourceInputs["errorShortTemplate"] = args ? args.errorShortTemplate : undefined;
            resourceInputs["errorTitleTemplate"] = args ? args.errorTitleTemplate : undefined;
            resourceInputs["fileDeps"] = args ? args.fileDeps : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["params"] = args ? args.params : undefined;
            resourceInputs["resEnvVar"] = args ? args.resEnvVar : undefined;
            resourceInputs["resourceQuery"] = args ? args.resourceQuery : undefined;
            resourceInputs["resourceTagsToExports"] = args ? args.resourceTagsToExports : undefined;
            resourceInputs["shell"] = args ? args.shell : undefined;
            resourceInputs["startLongTemplate"] = args ? args.startLongTemplate : undefined;
            resourceInputs["startShortTemplate"] = args ? args.startShortTemplate : undefined;
            resourceInputs["startTitleTemplate"] = args ? args.startTitleTemplate : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Action.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Action resources.
 */
export interface ActionState {
    /**
     * The list of users who can run an action or notebook. Any user can run if left empty.
     */
    allowedEntities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of resources on which an action or notebook can run. No restriction, if left empty.
     */
    allowedResourcesQuery?: pulumi.Input<string>;
    /**
     * A specific action to run.
     */
    command?: pulumi.Input<string>;
    /**
     * A string value denoting the slack channel where notifications related to the object should be sent to.
     */
    communicationChannel?: pulumi.Input<string>;
    /**
     * A string value denoting the slack workspace where notifications related to the object should be sent to.
     */
    communicationWorkspace?: pulumi.Input<string>;
    /**
     * The long description of the Action's completion.
     */
    completeLongTemplate?: pulumi.Input<string>;
    /**
     * The short description of the Action's completion.
     */
    completeShortTemplate?: pulumi.Input<string>;
    /**
     * UI title of the Action's completion.
     */
    completeTitleTemplate?: pulumi.Input<string>;
    /**
     * A user-friendly explanation of an object.
     */
    description?: pulumi.Input<string>;
    /**
     * List of users who can edit the object (with configure permission). Empty maps to all users.
     */
    editors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The long description of the Action's error condition.
     */
    errorLongTemplate?: pulumi.Input<string>;
    /**
     * The short description of the Action's error condition.
     */
    errorShortTemplate?: pulumi.Input<string>;
    /**
     * UI title of the Action's error condition.
     */
    errorTitleTemplate?: pulumi.Input<string>;
    /**
     * file object dependencies.
     */
    fileDeps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    name?: pulumi.Input<string>;
    /**
     * Named variables to pass to an object (e.g. an Action).
     */
    params?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Result environment variable ... an environment variable used to output values through.
     */
    resEnvVar?: pulumi.Input<string>;
    /**
     * A set of Resources (e.g. host, pod, container), optionally filtered on tags or dynamic conditions.
     */
    resourceQuery?: pulumi.Input<string>;
    resourceTagsToExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The commandline shell to use (e.g. /bin/sh).
     */
    shell?: pulumi.Input<string>;
    /**
     * The long description when starting the Action.
     */
    startLongTemplate?: pulumi.Input<string>;
    /**
     * The short description when starting the Action.
     */
    startShortTemplate?: pulumi.Input<string>;
    /**
     * UI title of the start of the Action.
     */
    startTitleTemplate?: pulumi.Input<string>;
    /**
     * Maximum time to wait, in milliseconds. Defaults to `60000`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The type of object (i.e., Alarm, Action, Bot, Metric, Resource, or File).
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Action resource.
 */
export interface ActionArgs {
    /**
     * The list of users who can run an action or notebook. Any user can run if left empty.
     */
    allowedEntities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of resources on which an action or notebook can run. No restriction, if left empty.
     */
    allowedResourcesQuery?: pulumi.Input<string>;
    /**
     * A specific action to run.
     */
    command: pulumi.Input<string>;
    /**
     * A string value denoting the slack channel where notifications related to the object should be sent to.
     */
    communicationChannel?: pulumi.Input<string>;
    /**
     * A string value denoting the slack workspace where notifications related to the object should be sent to.
     */
    communicationWorkspace?: pulumi.Input<string>;
    /**
     * The long description of the Action's completion.
     */
    completeLongTemplate?: pulumi.Input<string>;
    /**
     * The short description of the Action's completion.
     */
    completeShortTemplate?: pulumi.Input<string>;
    /**
     * UI title of the Action's completion.
     */
    completeTitleTemplate?: pulumi.Input<string>;
    /**
     * A user-friendly explanation of an object.
     */
    description?: pulumi.Input<string>;
    /**
     * List of users who can edit the object (with configure permission). Empty maps to all users.
     */
    editors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The long description of the Action's error condition.
     */
    errorLongTemplate?: pulumi.Input<string>;
    /**
     * The short description of the Action's error condition.
     */
    errorShortTemplate?: pulumi.Input<string>;
    /**
     * UI title of the Action's error condition.
     */
    errorTitleTemplate?: pulumi.Input<string>;
    /**
     * file object dependencies.
     */
    fileDeps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    name?: pulumi.Input<string>;
    /**
     * Named variables to pass to an object (e.g. an Action).
     */
    params?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Result environment variable ... an environment variable used to output values through.
     */
    resEnvVar?: pulumi.Input<string>;
    /**
     * A set of Resources (e.g. host, pod, container), optionally filtered on tags or dynamic conditions.
     */
    resourceQuery?: pulumi.Input<string>;
    resourceTagsToExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The commandline shell to use (e.g. /bin/sh).
     */
    shell?: pulumi.Input<string>;
    /**
     * The long description when starting the Action.
     */
    startLongTemplate?: pulumi.Input<string>;
    /**
     * The short description when starting the Action.
     */
    startShortTemplate?: pulumi.Input<string>;
    /**
     * UI title of the start of the Action.
     */
    startTitleTemplate?: pulumi.Input<string>;
    /**
     * Maximum time to wait, in milliseconds. Defaults to `60000`.
     */
    timeout?: pulumi.Input<number>;
}
