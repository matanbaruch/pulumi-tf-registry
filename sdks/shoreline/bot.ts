// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Bot extends pulumi.CustomResource {
    /**
     * Get an existing Bot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BotState, opts?: pulumi.CustomResourceOptions): Bot {
        return new Bot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'shoreline:index/bot:Bot';

    /**
     * Returns true if the given object is an instance of Bot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bot.__pulumiType;
    }

    public readonly alarmResourceQuery!: pulumi.Output<string | undefined>;
    /**
     * A specific action to run.
     */
    public readonly command!: pulumi.Output<string>;
    /**
     * A string value denoting the slack channel where notifications related to the object should be sent to.
     */
    public readonly communicationChannel!: pulumi.Output<string | undefined>;
    /**
     * A string value denoting the slack workspace where notifications related to the object should be sent to.
     */
    public readonly communicationWorkspace!: pulumi.Output<string | undefined>;
    /**
     * A user-friendly explanation of an object.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Used to tag 'datadog' monitor triggers vs 'shoreline' alarms (default).
     */
    public readonly eventType!: pulumi.Output<string | undefined>;
    /**
     * General class for an Action or Bot (e.g., custom, standard, metric, or system check). Defaults to `custom`.
     */
    public readonly family!: pulumi.Output<string | undefined>;
    /**
     * The name/symbol of a Shoreline integration involved in triggering the bot.
     */
    public readonly integrationName!: pulumi.Output<string | undefined>;
    /**
     * For 'datadog' monitor triggered bots, the DD monitor identifier.
     */
    public readonly monitorId!: pulumi.Output<string | undefined>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The type of object (i.e., Alarm, Action, Bot, Metric, Resource, or File).
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Bot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BotArgs | BotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BotState | undefined;
            resourceInputs["alarmResourceQuery"] = state ? state.alarmResourceQuery : undefined;
            resourceInputs["command"] = state ? state.command : undefined;
            resourceInputs["communicationChannel"] = state ? state.communicationChannel : undefined;
            resourceInputs["communicationWorkspace"] = state ? state.communicationWorkspace : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["eventType"] = state ? state.eventType : undefined;
            resourceInputs["family"] = state ? state.family : undefined;
            resourceInputs["integrationName"] = state ? state.integrationName : undefined;
            resourceInputs["monitorId"] = state ? state.monitorId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as BotArgs | undefined;
            if ((!args || args.command === undefined) && !opts.urn) {
                throw new Error("Missing required property 'command'");
            }
            resourceInputs["alarmResourceQuery"] = args ? args.alarmResourceQuery : undefined;
            resourceInputs["command"] = args ? args.command : undefined;
            resourceInputs["communicationChannel"] = args ? args.communicationChannel : undefined;
            resourceInputs["communicationWorkspace"] = args ? args.communicationWorkspace : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["eventType"] = args ? args.eventType : undefined;
            resourceInputs["family"] = args ? args.family : undefined;
            resourceInputs["integrationName"] = args ? args.integrationName : undefined;
            resourceInputs["monitorId"] = args ? args.monitorId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bot.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Bot resources.
 */
export interface BotState {
    alarmResourceQuery?: pulumi.Input<string>;
    /**
     * A specific action to run.
     */
    command?: pulumi.Input<string>;
    /**
     * A string value denoting the slack channel where notifications related to the object should be sent to.
     */
    communicationChannel?: pulumi.Input<string>;
    /**
     * A string value denoting the slack workspace where notifications related to the object should be sent to.
     */
    communicationWorkspace?: pulumi.Input<string>;
    /**
     * A user-friendly explanation of an object.
     */
    description?: pulumi.Input<string>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Used to tag 'datadog' monitor triggers vs 'shoreline' alarms (default).
     */
    eventType?: pulumi.Input<string>;
    /**
     * General class for an Action or Bot (e.g., custom, standard, metric, or system check). Defaults to `custom`.
     */
    family?: pulumi.Input<string>;
    /**
     * The name/symbol of a Shoreline integration involved in triggering the bot.
     */
    integrationName?: pulumi.Input<string>;
    /**
     * For 'datadog' monitor triggered bots, the DD monitor identifier.
     */
    monitorId?: pulumi.Input<string>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    name?: pulumi.Input<string>;
    /**
     * The type of object (i.e., Alarm, Action, Bot, Metric, Resource, or File).
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Bot resource.
 */
export interface BotArgs {
    alarmResourceQuery?: pulumi.Input<string>;
    /**
     * A specific action to run.
     */
    command: pulumi.Input<string>;
    /**
     * A string value denoting the slack channel where notifications related to the object should be sent to.
     */
    communicationChannel?: pulumi.Input<string>;
    /**
     * A string value denoting the slack workspace where notifications related to the object should be sent to.
     */
    communicationWorkspace?: pulumi.Input<string>;
    /**
     * A user-friendly explanation of an object.
     */
    description?: pulumi.Input<string>;
    /**
     * If the object is currently enabled or disabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Used to tag 'datadog' monitor triggers vs 'shoreline' alarms (default).
     */
    eventType?: pulumi.Input<string>;
    /**
     * General class for an Action or Bot (e.g., custom, standard, metric, or system check). Defaults to `custom`.
     */
    family?: pulumi.Input<string>;
    /**
     * The name/symbol of a Shoreline integration involved in triggering the bot.
     */
    integrationName?: pulumi.Input<string>;
    /**
     * For 'datadog' monitor triggered bots, the DD monitor identifier.
     */
    monitorId?: pulumi.Input<string>;
    /**
     * The name/symbol for the object within Shoreline and the op language (must be unique, only alphanumeric/underscore).
     */
    name?: pulumi.Input<string>;
}
