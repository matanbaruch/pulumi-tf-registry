// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProfileDiagnostics extends pulumi.CustomResource {
    /**
     * Get an existing ProfileDiagnostics resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileDiagnosticsState, opts?: pulumi.CustomResourceOptions): ProfileDiagnostics {
        return new ProfileDiagnostics(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'valtix:index/profileDiagnostics:ProfileDiagnostics';

    /**
     * Returns true if the given object is an instance of ProfileDiagnostics.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProfileDiagnostics {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProfileDiagnostics.__pulumiType;
    }

    public readonly awsS3Bucket!: pulumi.Output<string | undefined>;
    public readonly azureBlobContainerName!: pulumi.Output<string | undefined>;
    public readonly azureStorageAccessKey!: pulumi.Output<string | undefined>;
    public readonly azureStorageAccntName!: pulumi.Output<string | undefined>;
    public readonly cspType!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly profileId!: pulumi.Output<number>;

    /**
     * Create a ProfileDiagnostics resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileDiagnosticsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileDiagnosticsArgs | ProfileDiagnosticsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProfileDiagnosticsState | undefined;
            resourceInputs["awsS3Bucket"] = state ? state.awsS3Bucket : undefined;
            resourceInputs["azureBlobContainerName"] = state ? state.azureBlobContainerName : undefined;
            resourceInputs["azureStorageAccessKey"] = state ? state.azureStorageAccessKey : undefined;
            resourceInputs["azureStorageAccntName"] = state ? state.azureStorageAccntName : undefined;
            resourceInputs["cspType"] = state ? state.cspType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
        } else {
            const args = argsOrState as ProfileDiagnosticsArgs | undefined;
            if ((!args || args.cspType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cspType'");
            }
            resourceInputs["awsS3Bucket"] = args ? args.awsS3Bucket : undefined;
            resourceInputs["azureBlobContainerName"] = args ? args.azureBlobContainerName : undefined;
            resourceInputs["azureStorageAccessKey"] = args ? args.azureStorageAccessKey : undefined;
            resourceInputs["azureStorageAccntName"] = args ? args.azureStorageAccntName : undefined;
            resourceInputs["cspType"] = args ? args.cspType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profileId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProfileDiagnostics.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProfileDiagnostics resources.
 */
export interface ProfileDiagnosticsState {
    awsS3Bucket?: pulumi.Input<string>;
    azureBlobContainerName?: pulumi.Input<string>;
    azureStorageAccessKey?: pulumi.Input<string>;
    azureStorageAccntName?: pulumi.Input<string>;
    cspType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    profileId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ProfileDiagnostics resource.
 */
export interface ProfileDiagnosticsArgs {
    awsS3Bucket?: pulumi.Input<string>;
    azureBlobContainerName?: pulumi.Input<string>;
    azureStorageAccessKey?: pulumi.Input<string>;
    azureStorageAccntName?: pulumi.Input<string>;
    cspType: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
