// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProfileFqdn extends pulumi.CustomResource {
    /**
     * Get an existing ProfileFqdn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileFqdnState, opts?: pulumi.CustomResourceOptions): ProfileFqdn {
        return new ProfileFqdn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'valtix:index/profileFqdn:ProfileFqdn';

    /**
     * Returns true if the given object is an instance of ProfileFqdn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProfileFqdn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProfileFqdn.__pulumiType;
    }

    public readonly defaultFqdnFilter!: pulumi.Output<outputs.ProfileFqdnDefaultFqdnFilter | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly fqdnFilterLists!: pulumi.Output<outputs.ProfileFqdnFqdnFilterList[] | undefined>;
    public readonly fqdnGroupIds!: pulumi.Output<number[] | undefined>;
    public readonly groupMemberIds!: pulumi.Output<number[] | undefined>;
    public readonly mode!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly noFqdnDeny!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly profileId!: pulumi.Output<number>;
    public readonly type!: pulumi.Output<string | undefined>;
    public readonly uncategorizedFqdnFilter!: pulumi.Output<outputs.ProfileFqdnUncategorizedFqdnFilter | undefined>;

    /**
     * Create a ProfileFqdn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProfileFqdnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileFqdnArgs | ProfileFqdnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProfileFqdnState | undefined;
            resourceInputs["defaultFqdnFilter"] = state ? state.defaultFqdnFilter : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fqdnFilterLists"] = state ? state.fqdnFilterLists : undefined;
            resourceInputs["fqdnGroupIds"] = state ? state.fqdnGroupIds : undefined;
            resourceInputs["groupMemberIds"] = state ? state.groupMemberIds : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noFqdnDeny"] = state ? state.noFqdnDeny : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uncategorizedFqdnFilter"] = state ? state.uncategorizedFqdnFilter : undefined;
        } else {
            const args = argsOrState as ProfileFqdnArgs | undefined;
            resourceInputs["defaultFqdnFilter"] = args ? args.defaultFqdnFilter : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fqdnFilterLists"] = args ? args.fqdnFilterLists : undefined;
            resourceInputs["fqdnGroupIds"] = args ? args.fqdnGroupIds : undefined;
            resourceInputs["groupMemberIds"] = args ? args.groupMemberIds : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noFqdnDeny"] = args ? args.noFqdnDeny : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uncategorizedFqdnFilter"] = args ? args.uncategorizedFqdnFilter : undefined;
            resourceInputs["profileId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProfileFqdn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProfileFqdn resources.
 */
export interface ProfileFqdnState {
    defaultFqdnFilter?: pulumi.Input<inputs.ProfileFqdnDefaultFqdnFilter>;
    description?: pulumi.Input<string>;
    fqdnFilterLists?: pulumi.Input<pulumi.Input<inputs.ProfileFqdnFqdnFilterList>[]>;
    fqdnGroupIds?: pulumi.Input<pulumi.Input<number>[]>;
    groupMemberIds?: pulumi.Input<pulumi.Input<number>[]>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    noFqdnDeny?: pulumi.Input<boolean>;
    profileId?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
    uncategorizedFqdnFilter?: pulumi.Input<inputs.ProfileFqdnUncategorizedFqdnFilter>;
}

/**
 * The set of arguments for constructing a ProfileFqdn resource.
 */
export interface ProfileFqdnArgs {
    defaultFqdnFilter?: pulumi.Input<inputs.ProfileFqdnDefaultFqdnFilter>;
    description?: pulumi.Input<string>;
    fqdnFilterLists?: pulumi.Input<pulumi.Input<inputs.ProfileFqdnFqdnFilterList>[]>;
    fqdnGroupIds?: pulumi.Input<pulumi.Input<number>[]>;
    groupMemberIds?: pulumi.Input<pulumi.Input<number>[]>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    noFqdnDeny?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    uncategorizedFqdnFilter?: pulumi.Input<inputs.ProfileFqdnUncategorizedFqdnFilter>;
}
