// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SpokeVpc extends pulumi.CustomResource {
    /**
     * Get an existing SpokeVpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpokeVpcState, opts?: pulumi.CustomResourceOptions): SpokeVpc {
        return new SpokeVpc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'valtix:index/spokeVpc:SpokeVpc';

    /**
     * Returns true if the given object is an instance of SpokeVpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpokeVpc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpokeVpc.__pulumiType;
    }

    public readonly serviceVpcId!: pulumi.Output<number>;
    public readonly spokeVpcCspAccountName!: pulumi.Output<string | undefined>;
    public readonly spokeVpcId!: pulumi.Output<string>;
    public readonly spokeVpcRegion!: pulumi.Output<string | undefined>;
    public readonly transitGatewayAttachmentSubnets!: pulumi.Output<string[] | undefined>;

    /**
     * Create a SpokeVpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpokeVpcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpokeVpcArgs | SpokeVpcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpokeVpcState | undefined;
            resourceInputs["serviceVpcId"] = state ? state.serviceVpcId : undefined;
            resourceInputs["spokeVpcCspAccountName"] = state ? state.spokeVpcCspAccountName : undefined;
            resourceInputs["spokeVpcId"] = state ? state.spokeVpcId : undefined;
            resourceInputs["spokeVpcRegion"] = state ? state.spokeVpcRegion : undefined;
            resourceInputs["transitGatewayAttachmentSubnets"] = state ? state.transitGatewayAttachmentSubnets : undefined;
        } else {
            const args = argsOrState as SpokeVpcArgs | undefined;
            if ((!args || args.serviceVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceVpcId'");
            }
            if ((!args || args.spokeVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spokeVpcId'");
            }
            resourceInputs["serviceVpcId"] = args ? args.serviceVpcId : undefined;
            resourceInputs["spokeVpcCspAccountName"] = args ? args.spokeVpcCspAccountName : undefined;
            resourceInputs["spokeVpcId"] = args ? args.spokeVpcId : undefined;
            resourceInputs["spokeVpcRegion"] = args ? args.spokeVpcRegion : undefined;
            resourceInputs["transitGatewayAttachmentSubnets"] = args ? args.transitGatewayAttachmentSubnets : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpokeVpc.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SpokeVpc resources.
 */
export interface SpokeVpcState {
    serviceVpcId?: pulumi.Input<number>;
    spokeVpcCspAccountName?: pulumi.Input<string>;
    spokeVpcId?: pulumi.Input<string>;
    spokeVpcRegion?: pulumi.Input<string>;
    transitGatewayAttachmentSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SpokeVpc resource.
 */
export interface SpokeVpcArgs {
    serviceVpcId: pulumi.Input<number>;
    spokeVpcCspAccountName?: pulumi.Input<string>;
    spokeVpcId: pulumi.Input<string>;
    spokeVpcRegion?: pulumi.Input<string>;
    transitGatewayAttachmentSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}
