// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGateway(args: GetGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("valtix:index/getGateway:getGateway", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGateway.
 */
export interface GetGatewayArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getGateway.
 */
export interface GetGatewayResult {
    readonly gatewayEndpoint: string;
    readonly gatewayGwlbEndpoints: outputs.GetGatewayGatewayGwlbEndpoint[];
    readonly gwlbServiceId: string;
    readonly gwlbServiceName: string;
    readonly id: string;
    readonly name: string;
}
export function getGatewayOutput(args: GetGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayResult> {
    return pulumi.output(args).apply((a: any) => getGateway(a, opts))
}

/**
 * A collection of arguments for invoking getGateway.
 */
export interface GetGatewayOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
