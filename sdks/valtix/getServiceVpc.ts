// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceVpc(args: GetServiceVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceVpcResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("valtix:index/getServiceVpc:getServiceVpc", {
        "cspAccountName": args.cspAccountName,
        "id": args.id,
        "region": args.region,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceVpc.
 */
export interface GetServiceVpcArgs {
    cspAccountName: string;
    id?: string;
    region: string;
    vpcId: string;
}

/**
 * A collection of values returned by getServiceVpc.
 */
export interface GetServiceVpcResult {
    readonly cspAccountName: string;
    readonly id: string;
    readonly region: string;
    readonly serviceVpcId: number;
    readonly vpcId: string;
}
export function getServiceVpcOutput(args: GetServiceVpcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceVpcResult> {
    return pulumi.output(args).apply((a: any) => getServiceVpc(a, opts))
}

/**
 * A collection of arguments for invoking getServiceVpc.
 */
export interface GetServiceVpcOutputArgs {
    cspAccountName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
