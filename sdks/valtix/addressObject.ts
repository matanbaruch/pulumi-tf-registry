// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AddressObject extends pulumi.CustomResource {
    /**
     * Get an existing AddressObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddressObjectState, opts?: pulumi.CustomResourceOptions): AddressObject {
        return new AddressObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'valtix:index/addressObject:AddressObject';

    /**
     * Returns true if the given object is an instance of AddressObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AddressObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AddressObject.__pulumiType;
    }

    public readonly addressGroupIds!: pulumi.Output<number[] | undefined>;
    public /*out*/ readonly addressId!: pulumi.Output<number>;
    public readonly applicationSecurityGroupId!: pulumi.Output<string | undefined>;
    public readonly backendAddress!: pulumi.Output<boolean | undefined>;
    public readonly cspAccountName!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly instanceId!: pulumi.Output<string | undefined>;
    public readonly matchXff!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly origin!: pulumi.Output<string | undefined>;
    public readonly region!: pulumi.Output<string>;
    public readonly resourceGroup!: pulumi.Output<string | undefined>;
    public readonly saasType!: pulumi.Output<string | undefined>;
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    public readonly serviceEndpointName!: pulumi.Output<string | undefined>;
    public readonly subnetId!: pulumi.Output<string | undefined>;
    public readonly tagKey!: pulumi.Output<string | undefined>;
    public readonly tagLists!: pulumi.Output<outputs.AddressObjectTagList[] | undefined>;
    public readonly tagValue!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly values!: pulumi.Output<string[] | undefined>;
    public readonly vpcId!: pulumi.Output<string | undefined>;

    /**
     * Create a AddressObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AddressObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AddressObjectArgs | AddressObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AddressObjectState | undefined;
            resourceInputs["addressGroupIds"] = state ? state.addressGroupIds : undefined;
            resourceInputs["addressId"] = state ? state.addressId : undefined;
            resourceInputs["applicationSecurityGroupId"] = state ? state.applicationSecurityGroupId : undefined;
            resourceInputs["backendAddress"] = state ? state.backendAddress : undefined;
            resourceInputs["cspAccountName"] = state ? state.cspAccountName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["matchXff"] = state ? state.matchXff : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceGroup"] = state ? state.resourceGroup : undefined;
            resourceInputs["saasType"] = state ? state.saasType : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["serviceEndpointName"] = state ? state.serviceEndpointName : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tagKey"] = state ? state.tagKey : undefined;
            resourceInputs["tagLists"] = state ? state.tagLists : undefined;
            resourceInputs["tagValue"] = state ? state.tagValue : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["values"] = state ? state.values : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AddressObjectArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["addressGroupIds"] = args ? args.addressGroupIds : undefined;
            resourceInputs["applicationSecurityGroupId"] = args ? args.applicationSecurityGroupId : undefined;
            resourceInputs["backendAddress"] = args ? args.backendAddress : undefined;
            resourceInputs["cspAccountName"] = args ? args.cspAccountName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["matchXff"] = args ? args.matchXff : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            resourceInputs["saasType"] = args ? args.saasType : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["serviceEndpointName"] = args ? args.serviceEndpointName : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tagKey"] = args ? args.tagKey : undefined;
            resourceInputs["tagLists"] = args ? args.tagLists : undefined;
            resourceInputs["tagValue"] = args ? args.tagValue : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["values"] = args ? args.values : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["addressId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AddressObject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AddressObject resources.
 */
export interface AddressObjectState {
    addressGroupIds?: pulumi.Input<pulumi.Input<number>[]>;
    addressId?: pulumi.Input<number>;
    applicationSecurityGroupId?: pulumi.Input<string>;
    backendAddress?: pulumi.Input<boolean>;
    cspAccountName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    matchXff?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    origin?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    saasType?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    serviceEndpointName?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    tagKey?: pulumi.Input<string>;
    tagLists?: pulumi.Input<pulumi.Input<inputs.AddressObjectTagList>[]>;
    tagValue?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AddressObject resource.
 */
export interface AddressObjectArgs {
    addressGroupIds?: pulumi.Input<pulumi.Input<number>[]>;
    applicationSecurityGroupId?: pulumi.Input<string>;
    backendAddress?: pulumi.Input<boolean>;
    cspAccountName?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    matchXff?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    origin?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    saasType?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    serviceEndpointName?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    tagKey?: pulumi.Input<string>;
    tagLists?: pulumi.Input<pulumi.Input<inputs.AddressObjectTagList>[]>;
    tagValue?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
    vpcId?: pulumi.Input<string>;
}
