// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnClientUsername(args: GetMsgVpnClientUsernameArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnClientUsernameResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getMsgVpnClientUsername:getMsgVpnClientUsername", {
        "clientUsername": args.clientUsername,
        "msgVpnName": args.msgVpnName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnClientUsername.
 */
export interface GetMsgVpnClientUsernameArgs {
    clientUsername: string;
    msgVpnName: string;
}

/**
 * A collection of values returned by getMsgVpnClientUsername.
 */
export interface GetMsgVpnClientUsernameResult {
    readonly aclProfileName: string;
    readonly clientProfileName: string;
    readonly clientUsername: string;
    readonly enabled: boolean;
    readonly guaranteedEndpointPermissionOverrideEnabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnName: string;
    readonly subscriptionManagerEnabled: boolean;
}
export function getMsgVpnClientUsernameOutput(args: GetMsgVpnClientUsernameOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnClientUsernameResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnClientUsername(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnClientUsername.
 */
export interface GetMsgVpnClientUsernameOutputArgs {
    clientUsername: pulumi.Input<string>;
    msgVpnName: pulumi.Input<string>;
}
