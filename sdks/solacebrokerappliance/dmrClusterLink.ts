// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DmrClusterLink extends pulumi.CustomResource {
    /**
     * Get an existing DmrClusterLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmrClusterLinkState, opts?: pulumi.CustomResourceOptions): DmrClusterLink {
        return new DmrClusterLink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebrokerappliance:index/dmrClusterLink:DmrClusterLink';

    /**
     * Returns true if the given object is an instance of DmrClusterLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmrClusterLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmrClusterLink.__pulumiType;
    }

    /**
     * The password used to authenticate with the remote node when using basic internal authentication. If this per-Link
     * password is not configured, the Cluster's password is used instead. This attribute is absent from a GET and not updated
     * when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config
     * reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively enabled
     * may be service impacting as enabled will be temporarily set to false to apply the change. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `""`.
     */
    public readonly authenticationBasicPassword!: pulumi.Output<string | undefined>;
    /**
     * The authentication scheme to be used by the Link which initiates connections to the remote node. Modifying this
     * attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * enabled will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `"basic"`. The allowed values and their meaning are: <pre> "basic" - Basic
     * Authentication Scheme (via username and password). "client-certificate" - Client Certificate Authentication Scheme (via
     * certificate file or content). </pre>
     */
    public readonly authenticationScheme!: pulumi.Output<string | undefined>;
    /**
     * The maximum depth of the "Control 1" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    public readonly clientProfileQueueControl1MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Control 1" (C-1) priority queue, regardless of the
     * `client_profile_queue_control1_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    public readonly clientProfileQueueControl1MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Direct 1" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    public readonly clientProfileQueueDirect1MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Direct 1" (D-1) priority queue, regardless of the
     * `client_profile_queue_direct1_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    public readonly clientProfileQueueDirect1MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Direct 2" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    public readonly clientProfileQueueDirect2MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Direct 2" (D-2) priority queue, regardless of the
     * `client_profile_queue_direct2_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    public readonly clientProfileQueueDirect2MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Direct 3" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    public readonly clientProfileQueueDirect3MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Direct 3" (D-3) priority queue, regardless of the
     * `client_profile_queue_direct3_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    public readonly clientProfileQueueDirect3MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Guaranteed 1" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message
     * data. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    public readonly clientProfileQueueGuaranteed1MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Guaranteed 1" (G-1) priority queue, regardless of the
     * `client_profile_queue_guaranteed1_max_depth` value. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `255`.
     */
    public readonly clientProfileQueueGuaranteed1MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The TCP initial congestion window size, in multiples of the TCP Maximum Segment Size (MSS). Changing the value from its
     * default of 2 results in non-compliance with RFC 2581. Contact support before changing this value. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `2`.
     */
    public readonly clientProfileTcpCongestionWindowSize!: pulumi.Output<number | undefined>;
    /**
     * The number of TCP keepalive retransmissions to be carried out before declaring that the remote end is not available.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `5`.
     */
    public readonly clientProfileTcpKeepaliveCount!: pulumi.Output<number | undefined>;
    /**
     * The amount of time a connection must remain idle before TCP begins sending keepalive probes, in seconds. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `3`.
     */
    public readonly clientProfileTcpKeepaliveIdleTime!: pulumi.Output<number | undefined>;
    /**
     * The amount of time between TCP keepalive retransmissions when no acknowledgment is received, in seconds. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `1`.
     */
    public readonly clientProfileTcpKeepaliveInterval!: pulumi.Output<number | undefined>;
    /**
     * The TCP maximum segment size, in bytes. Changes are applied to all existing connections. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `1460`.
     */
    public readonly clientProfileTcpMaxSegmentSize!: pulumi.Output<number | undefined>;
    /**
     * The TCP maximum window size, in kilobytes. Changes are applied to all existing connections. This setting is ignored on
     * the software broker. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `256`.
     */
    public readonly clientProfileTcpMaxWindowSize!: pulumi.Output<number | undefined>;
    /**
     * The number of retry attempts to establish a connection before moving on to the next remote Message VPN. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `0`. Available since SEMP API version 2.41.
     */
    public readonly connectionRetryCount!: pulumi.Output<number | undefined>;
    /**
     * The number of seconds the broker waits for the bridge connection to be established before attempting a new connection.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `3`. Available since SEMP
     * API version 2.41.
     */
    public readonly connectionRetryDelay!: pulumi.Output<number | undefined>;
    /**
     * The name of the Cluster.
     */
    public readonly dmrClusterName!: pulumi.Output<string>;
    /**
     * The number of outstanding guaranteed messages that can be sent over the Link before acknowledgment is received by the
     * sender. Modifying this attribute while the object (or the relevant part of the object) is administratively enabled may
     * be service impacting as enabled will be temporarily set to false to apply the change. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `255`.
     */
    public readonly egressFlowWindowSize!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable the Link. When disabled, subscription sets of this and the remote node are not kept up-to-date, and
     * messages are not exchanged with the remote node. Published guaranteed messages will be queued up for future delivery
     * based on current subscription sets. Changes to this attribute are synchronized to HA mates via config-sync. The default
     * value is `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The initiator of the Link's TCP connections. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `"lexical"`. The
     * allowed values and their meaning are: <pre> "lexical" - The "higher" node-name initiates. "local" - The local node
     * initiates. "remote" - The remote node initiates. </pre>
     */
    public readonly initiator!: pulumi.Output<string | undefined>;
    /**
     * The name of the Dead Message Queue (DMQ) used by the Queue for discarded messages. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `"#DEAD_MSG_QUEUE"`.
     */
    public readonly queueDeadMsgQueue!: pulumi.Output<string | undefined>;
    /**
     * The thresholds for the message spool usage event of the Queue, relative to `queue_max_msg_spool_usage`.
     */
    public readonly queueEventSpoolUsageThreshold!: pulumi.Output<outputs.DmrClusterLinkQueueEventSpoolUsageThreshold | undefined>;
    /**
     * The maximum number of messages delivered but not acknowledged per flow for the Queue. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `1000000`.
     */
    public readonly queueMaxDeliveredUnackedMsgsPerFlow!: pulumi.Output<number | undefined>;
    /**
     * The maximum message spool usage by the Queue (quota), in megabytes (MB). Changes to this attribute are synchronized to
     * HA mates via config-sync. The default value is `800000`.
     */
    public readonly queueMaxMsgSpoolUsage!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of times the Queue will attempt redelivery of a message prior to it being discarded or moved to the
     * DMQ. A value of 0 means to retry forever. Changes to this attribute are synchronized to HA mates via config-sync. The
     * default value is `0`.
     */
    public readonly queueMaxRedeliveryCount!: pulumi.Output<number | undefined>;
    /**
     * The maximum time in seconds a message can stay in the Queue when `queue_respect_ttl_enabled` is `true`. A message
     * expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queue_max_ttl` configured for
     * the Queue, is exceeded. A value of 0 disables expiry. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `0`.
     */
    public readonly queueMaxTtl!: pulumi.Output<number | undefined>;
    /**
     * Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause
     * the message to not be delivered to any destination and Transacted Session commits to fail. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `"always"`. The allowed values and their meaning are:
     * <pre> "never" - Silently discard messages. "when-queue-enabled" - NACK each message discard back to the client, except
     * messages that are discarded because an endpoint is administratively disabled. "always" - NACK each message discard back
     * to the client, including messages that are discarded because an endpoint is administratively disabled. </pre>
     */
    public readonly queueRejectMsgToSenderOnDiscardBehavior!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable the respecting of the time-to-live (TTL) for messages in the Queue. When enabled, expired messages are
     * discarded or moved to the DMQ. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `false`.
     */
    public readonly queueRespectTtlEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the node at the remote end of the Link.
     */
    public readonly remoteNodeName!: pulumi.Output<string>;
    /**
     * The span of the Link, either internal or external. Internal Links connect nodes within the same Cluster. External Links
     * connect nodes within different Clusters. Modifying this attribute while the object (or the relevant part of the object)
     * is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `"external"`. The allowed
     * values and their meaning are: <pre> "internal" - Link to same cluster. "external" - Link to other cluster. </pre>
     */
    public readonly span!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable compression on the Link. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `false`.
     */
    public readonly transportCompressedEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable encryption (TLS) on the Link. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `false`.
     */
    public readonly transportTlsEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a DmrClusterLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmrClusterLinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmrClusterLinkArgs | DmrClusterLinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmrClusterLinkState | undefined;
            resourceInputs["authenticationBasicPassword"] = state ? state.authenticationBasicPassword : undefined;
            resourceInputs["authenticationScheme"] = state ? state.authenticationScheme : undefined;
            resourceInputs["clientProfileQueueControl1MaxDepth"] = state ? state.clientProfileQueueControl1MaxDepth : undefined;
            resourceInputs["clientProfileQueueControl1MinMsgBurst"] = state ? state.clientProfileQueueControl1MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueDirect1MaxDepth"] = state ? state.clientProfileQueueDirect1MaxDepth : undefined;
            resourceInputs["clientProfileQueueDirect1MinMsgBurst"] = state ? state.clientProfileQueueDirect1MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueDirect2MaxDepth"] = state ? state.clientProfileQueueDirect2MaxDepth : undefined;
            resourceInputs["clientProfileQueueDirect2MinMsgBurst"] = state ? state.clientProfileQueueDirect2MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueDirect3MaxDepth"] = state ? state.clientProfileQueueDirect3MaxDepth : undefined;
            resourceInputs["clientProfileQueueDirect3MinMsgBurst"] = state ? state.clientProfileQueueDirect3MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueGuaranteed1MaxDepth"] = state ? state.clientProfileQueueGuaranteed1MaxDepth : undefined;
            resourceInputs["clientProfileQueueGuaranteed1MinMsgBurst"] = state ? state.clientProfileQueueGuaranteed1MinMsgBurst : undefined;
            resourceInputs["clientProfileTcpCongestionWindowSize"] = state ? state.clientProfileTcpCongestionWindowSize : undefined;
            resourceInputs["clientProfileTcpKeepaliveCount"] = state ? state.clientProfileTcpKeepaliveCount : undefined;
            resourceInputs["clientProfileTcpKeepaliveIdleTime"] = state ? state.clientProfileTcpKeepaliveIdleTime : undefined;
            resourceInputs["clientProfileTcpKeepaliveInterval"] = state ? state.clientProfileTcpKeepaliveInterval : undefined;
            resourceInputs["clientProfileTcpMaxSegmentSize"] = state ? state.clientProfileTcpMaxSegmentSize : undefined;
            resourceInputs["clientProfileTcpMaxWindowSize"] = state ? state.clientProfileTcpMaxWindowSize : undefined;
            resourceInputs["connectionRetryCount"] = state ? state.connectionRetryCount : undefined;
            resourceInputs["connectionRetryDelay"] = state ? state.connectionRetryDelay : undefined;
            resourceInputs["dmrClusterName"] = state ? state.dmrClusterName : undefined;
            resourceInputs["egressFlowWindowSize"] = state ? state.egressFlowWindowSize : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["initiator"] = state ? state.initiator : undefined;
            resourceInputs["queueDeadMsgQueue"] = state ? state.queueDeadMsgQueue : undefined;
            resourceInputs["queueEventSpoolUsageThreshold"] = state ? state.queueEventSpoolUsageThreshold : undefined;
            resourceInputs["queueMaxDeliveredUnackedMsgsPerFlow"] = state ? state.queueMaxDeliveredUnackedMsgsPerFlow : undefined;
            resourceInputs["queueMaxMsgSpoolUsage"] = state ? state.queueMaxMsgSpoolUsage : undefined;
            resourceInputs["queueMaxRedeliveryCount"] = state ? state.queueMaxRedeliveryCount : undefined;
            resourceInputs["queueMaxTtl"] = state ? state.queueMaxTtl : undefined;
            resourceInputs["queueRejectMsgToSenderOnDiscardBehavior"] = state ? state.queueRejectMsgToSenderOnDiscardBehavior : undefined;
            resourceInputs["queueRespectTtlEnabled"] = state ? state.queueRespectTtlEnabled : undefined;
            resourceInputs["remoteNodeName"] = state ? state.remoteNodeName : undefined;
            resourceInputs["span"] = state ? state.span : undefined;
            resourceInputs["transportCompressedEnabled"] = state ? state.transportCompressedEnabled : undefined;
            resourceInputs["transportTlsEnabled"] = state ? state.transportTlsEnabled : undefined;
        } else {
            const args = argsOrState as DmrClusterLinkArgs | undefined;
            if ((!args || args.dmrClusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dmrClusterName'");
            }
            if ((!args || args.remoteNodeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteNodeName'");
            }
            resourceInputs["authenticationBasicPassword"] = args?.authenticationBasicPassword ? pulumi.secret(args.authenticationBasicPassword) : undefined;
            resourceInputs["authenticationScheme"] = args ? args.authenticationScheme : undefined;
            resourceInputs["clientProfileQueueControl1MaxDepth"] = args ? args.clientProfileQueueControl1MaxDepth : undefined;
            resourceInputs["clientProfileQueueControl1MinMsgBurst"] = args ? args.clientProfileQueueControl1MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueDirect1MaxDepth"] = args ? args.clientProfileQueueDirect1MaxDepth : undefined;
            resourceInputs["clientProfileQueueDirect1MinMsgBurst"] = args ? args.clientProfileQueueDirect1MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueDirect2MaxDepth"] = args ? args.clientProfileQueueDirect2MaxDepth : undefined;
            resourceInputs["clientProfileQueueDirect2MinMsgBurst"] = args ? args.clientProfileQueueDirect2MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueDirect3MaxDepth"] = args ? args.clientProfileQueueDirect3MaxDepth : undefined;
            resourceInputs["clientProfileQueueDirect3MinMsgBurst"] = args ? args.clientProfileQueueDirect3MinMsgBurst : undefined;
            resourceInputs["clientProfileQueueGuaranteed1MaxDepth"] = args ? args.clientProfileQueueGuaranteed1MaxDepth : undefined;
            resourceInputs["clientProfileQueueGuaranteed1MinMsgBurst"] = args ? args.clientProfileQueueGuaranteed1MinMsgBurst : undefined;
            resourceInputs["clientProfileTcpCongestionWindowSize"] = args ? args.clientProfileTcpCongestionWindowSize : undefined;
            resourceInputs["clientProfileTcpKeepaliveCount"] = args ? args.clientProfileTcpKeepaliveCount : undefined;
            resourceInputs["clientProfileTcpKeepaliveIdleTime"] = args ? args.clientProfileTcpKeepaliveIdleTime : undefined;
            resourceInputs["clientProfileTcpKeepaliveInterval"] = args ? args.clientProfileTcpKeepaliveInterval : undefined;
            resourceInputs["clientProfileTcpMaxSegmentSize"] = args ? args.clientProfileTcpMaxSegmentSize : undefined;
            resourceInputs["clientProfileTcpMaxWindowSize"] = args ? args.clientProfileTcpMaxWindowSize : undefined;
            resourceInputs["connectionRetryCount"] = args ? args.connectionRetryCount : undefined;
            resourceInputs["connectionRetryDelay"] = args ? args.connectionRetryDelay : undefined;
            resourceInputs["dmrClusterName"] = args ? args.dmrClusterName : undefined;
            resourceInputs["egressFlowWindowSize"] = args ? args.egressFlowWindowSize : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["initiator"] = args ? args.initiator : undefined;
            resourceInputs["queueDeadMsgQueue"] = args ? args.queueDeadMsgQueue : undefined;
            resourceInputs["queueEventSpoolUsageThreshold"] = args ? args.queueEventSpoolUsageThreshold : undefined;
            resourceInputs["queueMaxDeliveredUnackedMsgsPerFlow"] = args ? args.queueMaxDeliveredUnackedMsgsPerFlow : undefined;
            resourceInputs["queueMaxMsgSpoolUsage"] = args ? args.queueMaxMsgSpoolUsage : undefined;
            resourceInputs["queueMaxRedeliveryCount"] = args ? args.queueMaxRedeliveryCount : undefined;
            resourceInputs["queueMaxTtl"] = args ? args.queueMaxTtl : undefined;
            resourceInputs["queueRejectMsgToSenderOnDiscardBehavior"] = args ? args.queueRejectMsgToSenderOnDiscardBehavior : undefined;
            resourceInputs["queueRespectTtlEnabled"] = args ? args.queueRespectTtlEnabled : undefined;
            resourceInputs["remoteNodeName"] = args ? args.remoteNodeName : undefined;
            resourceInputs["span"] = args ? args.span : undefined;
            resourceInputs["transportCompressedEnabled"] = args ? args.transportCompressedEnabled : undefined;
            resourceInputs["transportTlsEnabled"] = args ? args.transportTlsEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authenticationBasicPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DmrClusterLink.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DmrClusterLink resources.
 */
export interface DmrClusterLinkState {
    /**
     * The password used to authenticate with the remote node when using basic internal authentication. If this per-Link
     * password is not configured, the Cluster's password is used instead. This attribute is absent from a GET and not updated
     * when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config
     * reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively enabled
     * may be service impacting as enabled will be temporarily set to false to apply the change. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `""`.
     */
    authenticationBasicPassword?: pulumi.Input<string>;
    /**
     * The authentication scheme to be used by the Link which initiates connections to the remote node. Modifying this
     * attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * enabled will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `"basic"`. The allowed values and their meaning are: <pre> "basic" - Basic
     * Authentication Scheme (via username and password). "client-certificate" - Client Certificate Authentication Scheme (via
     * certificate file or content). </pre>
     */
    authenticationScheme?: pulumi.Input<string>;
    /**
     * The maximum depth of the "Control 1" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueControl1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Control 1" (C-1) priority queue, regardless of the
     * `client_profile_queue_control1_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueControl1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 1" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueDirect1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 1" (D-1) priority queue, regardless of the
     * `client_profile_queue_direct1_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueDirect1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 2" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueDirect2MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 2" (D-2) priority queue, regardless of the
     * `client_profile_queue_direct2_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueDirect2MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 3" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueDirect3MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 3" (D-3) priority queue, regardless of the
     * `client_profile_queue_direct3_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueDirect3MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Guaranteed 1" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message
     * data. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueGuaranteed1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Guaranteed 1" (G-1) priority queue, regardless of the
     * `client_profile_queue_guaranteed1_max_depth` value. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `255`.
     */
    clientProfileQueueGuaranteed1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The TCP initial congestion window size, in multiples of the TCP Maximum Segment Size (MSS). Changing the value from its
     * default of 2 results in non-compliance with RFC 2581. Contact support before changing this value. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `2`.
     */
    clientProfileTcpCongestionWindowSize?: pulumi.Input<number>;
    /**
     * The number of TCP keepalive retransmissions to be carried out before declaring that the remote end is not available.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `5`.
     */
    clientProfileTcpKeepaliveCount?: pulumi.Input<number>;
    /**
     * The amount of time a connection must remain idle before TCP begins sending keepalive probes, in seconds. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `3`.
     */
    clientProfileTcpKeepaliveIdleTime?: pulumi.Input<number>;
    /**
     * The amount of time between TCP keepalive retransmissions when no acknowledgment is received, in seconds. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `1`.
     */
    clientProfileTcpKeepaliveInterval?: pulumi.Input<number>;
    /**
     * The TCP maximum segment size, in bytes. Changes are applied to all existing connections. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `1460`.
     */
    clientProfileTcpMaxSegmentSize?: pulumi.Input<number>;
    /**
     * The TCP maximum window size, in kilobytes. Changes are applied to all existing connections. This setting is ignored on
     * the software broker. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `256`.
     */
    clientProfileTcpMaxWindowSize?: pulumi.Input<number>;
    /**
     * The number of retry attempts to establish a connection before moving on to the next remote Message VPN. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `0`. Available since SEMP API version 2.41.
     */
    connectionRetryCount?: pulumi.Input<number>;
    /**
     * The number of seconds the broker waits for the bridge connection to be established before attempting a new connection.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `3`. Available since SEMP
     * API version 2.41.
     */
    connectionRetryDelay?: pulumi.Input<number>;
    /**
     * The name of the Cluster.
     */
    dmrClusterName?: pulumi.Input<string>;
    /**
     * The number of outstanding guaranteed messages that can be sent over the Link before acknowledgment is received by the
     * sender. Modifying this attribute while the object (or the relevant part of the object) is administratively enabled may
     * be service impacting as enabled will be temporarily set to false to apply the change. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `255`.
     */
    egressFlowWindowSize?: pulumi.Input<number>;
    /**
     * Enable or disable the Link. When disabled, subscription sets of this and the remote node are not kept up-to-date, and
     * messages are not exchanged with the remote node. Published guaranteed messages will be queued up for future delivery
     * based on current subscription sets. Changes to this attribute are synchronized to HA mates via config-sync. The default
     * value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The initiator of the Link's TCP connections. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `"lexical"`. The
     * allowed values and their meaning are: <pre> "lexical" - The "higher" node-name initiates. "local" - The local node
     * initiates. "remote" - The remote node initiates. </pre>
     */
    initiator?: pulumi.Input<string>;
    /**
     * The name of the Dead Message Queue (DMQ) used by the Queue for discarded messages. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `"#DEAD_MSG_QUEUE"`.
     */
    queueDeadMsgQueue?: pulumi.Input<string>;
    /**
     * The thresholds for the message spool usage event of the Queue, relative to `queue_max_msg_spool_usage`.
     */
    queueEventSpoolUsageThreshold?: pulumi.Input<inputs.DmrClusterLinkQueueEventSpoolUsageThreshold>;
    /**
     * The maximum number of messages delivered but not acknowledged per flow for the Queue. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `1000000`.
     */
    queueMaxDeliveredUnackedMsgsPerFlow?: pulumi.Input<number>;
    /**
     * The maximum message spool usage by the Queue (quota), in megabytes (MB). Changes to this attribute are synchronized to
     * HA mates via config-sync. The default value is `800000`.
     */
    queueMaxMsgSpoolUsage?: pulumi.Input<number>;
    /**
     * The maximum number of times the Queue will attempt redelivery of a message prior to it being discarded or moved to the
     * DMQ. A value of 0 means to retry forever. Changes to this attribute are synchronized to HA mates via config-sync. The
     * default value is `0`.
     */
    queueMaxRedeliveryCount?: pulumi.Input<number>;
    /**
     * The maximum time in seconds a message can stay in the Queue when `queue_respect_ttl_enabled` is `true`. A message
     * expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queue_max_ttl` configured for
     * the Queue, is exceeded. A value of 0 disables expiry. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `0`.
     */
    queueMaxTtl?: pulumi.Input<number>;
    /**
     * Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause
     * the message to not be delivered to any destination and Transacted Session commits to fail. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `"always"`. The allowed values and their meaning are:
     * <pre> "never" - Silently discard messages. "when-queue-enabled" - NACK each message discard back to the client, except
     * messages that are discarded because an endpoint is administratively disabled. "always" - NACK each message discard back
     * to the client, including messages that are discarded because an endpoint is administratively disabled. </pre>
     */
    queueRejectMsgToSenderOnDiscardBehavior?: pulumi.Input<string>;
    /**
     * Enable or disable the respecting of the time-to-live (TTL) for messages in the Queue. When enabled, expired messages are
     * discarded or moved to the DMQ. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `false`.
     */
    queueRespectTtlEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the node at the remote end of the Link.
     */
    remoteNodeName?: pulumi.Input<string>;
    /**
     * The span of the Link, either internal or external. Internal Links connect nodes within the same Cluster. External Links
     * connect nodes within different Clusters. Modifying this attribute while the object (or the relevant part of the object)
     * is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `"external"`. The allowed
     * values and their meaning are: <pre> "internal" - Link to same cluster. "external" - Link to other cluster. </pre>
     */
    span?: pulumi.Input<string>;
    /**
     * Enable or disable compression on the Link. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `false`.
     */
    transportCompressedEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable encryption (TLS) on the Link. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `false`.
     */
    transportTlsEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DmrClusterLink resource.
 */
export interface DmrClusterLinkArgs {
    /**
     * The password used to authenticate with the remote node when using basic internal authentication. If this per-Link
     * password is not configured, the Cluster's password is used instead. This attribute is absent from a GET and not updated
     * when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config
     * reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively enabled
     * may be service impacting as enabled will be temporarily set to false to apply the change. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `""`.
     */
    authenticationBasicPassword?: pulumi.Input<string>;
    /**
     * The authentication scheme to be used by the Link which initiates connections to the remote node. Modifying this
     * attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * enabled will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `"basic"`. The allowed values and their meaning are: <pre> "basic" - Basic
     * Authentication Scheme (via username and password). "client-certificate" - Client Certificate Authentication Scheme (via
     * certificate file or content). </pre>
     */
    authenticationScheme?: pulumi.Input<string>;
    /**
     * The maximum depth of the "Control 1" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueControl1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Control 1" (C-1) priority queue, regardless of the
     * `client_profile_queue_control1_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueControl1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 1" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueDirect1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 1" (D-1) priority queue, regardless of the
     * `client_profile_queue_direct1_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueDirect1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 2" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueDirect2MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 2" (D-2) priority queue, regardless of the
     * `client_profile_queue_direct2_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueDirect2MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 3" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueDirect3MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 3" (D-3) priority queue, regardless of the
     * `client_profile_queue_direct3_max_depth` value. Changes to this attribute are synchronized to HA mates via config-sync.
     * The default value is `4`.
     */
    clientProfileQueueDirect3MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Guaranteed 1" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message
     * data. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `20000`.
     */
    clientProfileQueueGuaranteed1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Guaranteed 1" (G-1) priority queue, regardless of the
     * `client_profile_queue_guaranteed1_max_depth` value. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `255`.
     */
    clientProfileQueueGuaranteed1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The TCP initial congestion window size, in multiples of the TCP Maximum Segment Size (MSS). Changing the value from its
     * default of 2 results in non-compliance with RFC 2581. Contact support before changing this value. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `2`.
     */
    clientProfileTcpCongestionWindowSize?: pulumi.Input<number>;
    /**
     * The number of TCP keepalive retransmissions to be carried out before declaring that the remote end is not available.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `5`.
     */
    clientProfileTcpKeepaliveCount?: pulumi.Input<number>;
    /**
     * The amount of time a connection must remain idle before TCP begins sending keepalive probes, in seconds. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `3`.
     */
    clientProfileTcpKeepaliveIdleTime?: pulumi.Input<number>;
    /**
     * The amount of time between TCP keepalive retransmissions when no acknowledgment is received, in seconds. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `1`.
     */
    clientProfileTcpKeepaliveInterval?: pulumi.Input<number>;
    /**
     * The TCP maximum segment size, in bytes. Changes are applied to all existing connections. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `1460`.
     */
    clientProfileTcpMaxSegmentSize?: pulumi.Input<number>;
    /**
     * The TCP maximum window size, in kilobytes. Changes are applied to all existing connections. This setting is ignored on
     * the software broker. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `256`.
     */
    clientProfileTcpMaxWindowSize?: pulumi.Input<number>;
    /**
     * The number of retry attempts to establish a connection before moving on to the next remote Message VPN. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `0`. Available since SEMP API version 2.41.
     */
    connectionRetryCount?: pulumi.Input<number>;
    /**
     * The number of seconds the broker waits for the bridge connection to be established before attempting a new connection.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `3`. Available since SEMP
     * API version 2.41.
     */
    connectionRetryDelay?: pulumi.Input<number>;
    /**
     * The name of the Cluster.
     */
    dmrClusterName: pulumi.Input<string>;
    /**
     * The number of outstanding guaranteed messages that can be sent over the Link before acknowledgment is received by the
     * sender. Modifying this attribute while the object (or the relevant part of the object) is administratively enabled may
     * be service impacting as enabled will be temporarily set to false to apply the change. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `255`.
     */
    egressFlowWindowSize?: pulumi.Input<number>;
    /**
     * Enable or disable the Link. When disabled, subscription sets of this and the remote node are not kept up-to-date, and
     * messages are not exchanged with the remote node. Published guaranteed messages will be queued up for future delivery
     * based on current subscription sets. Changes to this attribute are synchronized to HA mates via config-sync. The default
     * value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The initiator of the Link's TCP connections. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `"lexical"`. The
     * allowed values and their meaning are: <pre> "lexical" - The "higher" node-name initiates. "local" - The local node
     * initiates. "remote" - The remote node initiates. </pre>
     */
    initiator?: pulumi.Input<string>;
    /**
     * The name of the Dead Message Queue (DMQ) used by the Queue for discarded messages. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `"#DEAD_MSG_QUEUE"`.
     */
    queueDeadMsgQueue?: pulumi.Input<string>;
    /**
     * The thresholds for the message spool usage event of the Queue, relative to `queue_max_msg_spool_usage`.
     */
    queueEventSpoolUsageThreshold?: pulumi.Input<inputs.DmrClusterLinkQueueEventSpoolUsageThreshold>;
    /**
     * The maximum number of messages delivered but not acknowledged per flow for the Queue. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `1000000`.
     */
    queueMaxDeliveredUnackedMsgsPerFlow?: pulumi.Input<number>;
    /**
     * The maximum message spool usage by the Queue (quota), in megabytes (MB). Changes to this attribute are synchronized to
     * HA mates via config-sync. The default value is `800000`.
     */
    queueMaxMsgSpoolUsage?: pulumi.Input<number>;
    /**
     * The maximum number of times the Queue will attempt redelivery of a message prior to it being discarded or moved to the
     * DMQ. A value of 0 means to retry forever. Changes to this attribute are synchronized to HA mates via config-sync. The
     * default value is `0`.
     */
    queueMaxRedeliveryCount?: pulumi.Input<number>;
    /**
     * The maximum time in seconds a message can stay in the Queue when `queue_respect_ttl_enabled` is `true`. A message
     * expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queue_max_ttl` configured for
     * the Queue, is exceeded. A value of 0 disables expiry. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `0`.
     */
    queueMaxTtl?: pulumi.Input<number>;
    /**
     * Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause
     * the message to not be delivered to any destination and Transacted Session commits to fail. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `"always"`. The allowed values and their meaning are:
     * <pre> "never" - Silently discard messages. "when-queue-enabled" - NACK each message discard back to the client, except
     * messages that are discarded because an endpoint is administratively disabled. "always" - NACK each message discard back
     * to the client, including messages that are discarded because an endpoint is administratively disabled. </pre>
     */
    queueRejectMsgToSenderOnDiscardBehavior?: pulumi.Input<string>;
    /**
     * Enable or disable the respecting of the time-to-live (TTL) for messages in the Queue. When enabled, expired messages are
     * discarded or moved to the DMQ. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `false`.
     */
    queueRespectTtlEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the node at the remote end of the Link.
     */
    remoteNodeName: pulumi.Input<string>;
    /**
     * The span of the Link, either internal or external. Internal Links connect nodes within the same Cluster. External Links
     * connect nodes within different Clusters. Modifying this attribute while the object (or the relevant part of the object)
     * is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates via config-sync. The default value is `"external"`. The allowed
     * values and their meaning are: <pre> "internal" - Link to same cluster. "external" - Link to other cluster. </pre>
     */
    span?: pulumi.Input<string>;
    /**
     * Enable or disable compression on the Link. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `false`.
     */
    transportCompressedEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable encryption (TLS) on the Link. Modifying this attribute while the object (or the relevant part of the
     * object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply the
     * change. Changes to this attribute are synchronized to HA mates via config-sync. The default value is `false`.
     */
    transportTlsEnabled?: pulumi.Input<boolean>;
}
