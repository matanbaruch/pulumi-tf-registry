// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProxy(args: GetProxyArgs, opts?: pulumi.InvokeOptions): Promise<GetProxyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getProxy:getProxy", {
        "proxyName": args.proxyName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProxy.
 */
export interface GetProxyArgs {
    proxyName: string;
}

/**
 * A collection of values returned by getProxy.
 */
export interface GetProxyResult {
    readonly authenticationBasicUsername: string;
    readonly authenticationScheme: string;
    readonly enabled: boolean;
    readonly host: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly port: number;
    readonly proxyName: string;
    readonly proxyType: string;
}
export function getProxyOutput(args: GetProxyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProxyResult> {
    return pulumi.output(args).apply((a: any) => getProxy(a, opts))
}

/**
 * A collection of arguments for invoking getProxy.
 */
export interface GetProxyOutputArgs {
    proxyName: pulumi.Input<string>;
}
