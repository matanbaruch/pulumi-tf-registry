// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnReplicatedTopic(args: GetMsgVpnReplicatedTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnReplicatedTopicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getMsgVpnReplicatedTopic:getMsgVpnReplicatedTopic", {
        "msgVpnName": args.msgVpnName,
        "replicatedTopic": args.replicatedTopic,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnReplicatedTopic.
 */
export interface GetMsgVpnReplicatedTopicArgs {
    msgVpnName: string;
    replicatedTopic: string;
}

/**
 * A collection of values returned by getMsgVpnReplicatedTopic.
 */
export interface GetMsgVpnReplicatedTopicResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnName: string;
    readonly replicatedTopic: string;
    readonly replicationMode: string;
}
export function getMsgVpnReplicatedTopicOutput(args: GetMsgVpnReplicatedTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnReplicatedTopicResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnReplicatedTopic(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnReplicatedTopic.
 */
export interface GetMsgVpnReplicatedTopicOutputArgs {
    msgVpnName: pulumi.Input<string>;
    replicatedTopic: pulumi.Input<string>;
}
