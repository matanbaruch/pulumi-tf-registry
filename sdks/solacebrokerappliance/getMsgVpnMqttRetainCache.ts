// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnMqttRetainCache(args: GetMsgVpnMqttRetainCacheArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnMqttRetainCacheResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getMsgVpnMqttRetainCache:getMsgVpnMqttRetainCache", {
        "cacheName": args.cacheName,
        "msgVpnName": args.msgVpnName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnMqttRetainCache.
 */
export interface GetMsgVpnMqttRetainCacheArgs {
    cacheName: string;
    msgVpnName: string;
}

/**
 * A collection of values returned by getMsgVpnMqttRetainCache.
 */
export interface GetMsgVpnMqttRetainCacheResult {
    readonly cacheName: string;
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgLifetime: number;
    readonly msgVpnName: string;
}
export function getMsgVpnMqttRetainCacheOutput(args: GetMsgVpnMqttRetainCacheOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnMqttRetainCacheResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnMqttRetainCache(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnMqttRetainCache.
 */
export interface GetMsgVpnMqttRetainCacheOutputArgs {
    cacheName: pulumi.Input<string>;
    msgVpnName: pulumi.Input<string>;
}
