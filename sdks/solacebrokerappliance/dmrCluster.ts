// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DmrCluster extends pulumi.CustomResource {
    /**
     * Get an existing DmrCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmrClusterState, opts?: pulumi.CustomResourceOptions): DmrCluster {
        return new DmrCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebrokerappliance:index/dmrCluster:DmrCluster';

    /**
     * Returns true if the given object is an instance of DmrCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmrCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmrCluster.__pulumiType;
    }

    /**
     * Enable or disable basic authentication for Cluster Links. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `true`.
     */
    public readonly authenticationBasicEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The password used to authenticate incoming Cluster Links when using basic internal authentication. The same password is
     * also used by outgoing Cluster Links if a per-Link password is not configured. This attribute is absent from a GET and
     * not updated when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API
     * `Config reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively
     * enabled may be service impacting as enabled will be temporarily set to false to apply the change. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `""`.
     */
    public readonly authenticationBasicPassword!: pulumi.Output<string | undefined>;
    /**
     * The type of basic authentication to use for Cluster Links. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `"internal"`. The allowed values and their meaning are: <pre> "internal" - Use locally
     * configured password. "none" - No authentication. </pre>
     */
    public readonly authenticationBasicType!: pulumi.Output<string | undefined>;
    /**
     * The PEM formatted content for the client certificate used to login to the remote node. It must consist of a private key
     * and between one and three certificates comprising the certificate trust chain. This attribute is absent from a GET and
     * not updated when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API
     * `Config reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively
     * enabled may be service impacting as enabled will be temporarily set to false to apply the change. The default value is
     * `""`.
     */
    public readonly authenticationClientCertContent!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable client certificate authentication for Cluster Links. Changes to this attribute are synchronized to HA
     * mates via config-sync. The default value is `true`.
     */
    public readonly authenticationClientCertEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The password for the client certificate. This attribute is absent from a GET and not updated when absent in a PUT,
     * subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Modifying this
     * attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * enabled will be temporarily set to false to apply the change. The default value is `""`.
     */
    public readonly authenticationClientCertPassword!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable direct messaging only. Guaranteed messages will not be transmitted through the cluster. The default
     * value is `false`. Note that this attribute requires replacement of the resource when updated.
     */
    public readonly directOnlyEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Cluster.
     */
    public readonly dmrClusterName!: pulumi.Output<string>;
    /**
     * Enable or disable the Cluster. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The maximum allowed depth of a certificate chain. The depth of a chain is defined as the number of signing CA
     * certificates that are present in the chain back to a trusted self-signed root CA certificate. Changes to this attribute
     * are synchronized to HA mates via config-sync. The default value is `3`.
     */
    public readonly tlsServerCertMaxChainDepth!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable the validation of the "Not Before" and "Not After" validity dates in the certificate. When disabled,
     * the certificate is accepted even if the certificate is not valid based on these dates. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `true`.
     */
    public readonly tlsServerCertValidateDateEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable the standard TLS authentication mechanism of verifying the name used to connect to the bridge. If
     * enabled, the name used to connect to the bridge is checked against the names specified in the certificate returned by
     * the remote broker. Legacy Common Name validation is not performed if Server Certificate Name Validation is enabled, even
     * if Common Name validation is also enabled. Changes to this attribute are synchronized to HA mates via config-sync. The
     * default value is `true`. Available since SEMP API version 2.18.
     */
    public readonly tlsServerCertValidateNameEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a DmrCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmrClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmrClusterArgs | DmrClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmrClusterState | undefined;
            resourceInputs["authenticationBasicEnabled"] = state ? state.authenticationBasicEnabled : undefined;
            resourceInputs["authenticationBasicPassword"] = state ? state.authenticationBasicPassword : undefined;
            resourceInputs["authenticationBasicType"] = state ? state.authenticationBasicType : undefined;
            resourceInputs["authenticationClientCertContent"] = state ? state.authenticationClientCertContent : undefined;
            resourceInputs["authenticationClientCertEnabled"] = state ? state.authenticationClientCertEnabled : undefined;
            resourceInputs["authenticationClientCertPassword"] = state ? state.authenticationClientCertPassword : undefined;
            resourceInputs["directOnlyEnabled"] = state ? state.directOnlyEnabled : undefined;
            resourceInputs["dmrClusterName"] = state ? state.dmrClusterName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["tlsServerCertMaxChainDepth"] = state ? state.tlsServerCertMaxChainDepth : undefined;
            resourceInputs["tlsServerCertValidateDateEnabled"] = state ? state.tlsServerCertValidateDateEnabled : undefined;
            resourceInputs["tlsServerCertValidateNameEnabled"] = state ? state.tlsServerCertValidateNameEnabled : undefined;
        } else {
            const args = argsOrState as DmrClusterArgs | undefined;
            if ((!args || args.dmrClusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dmrClusterName'");
            }
            resourceInputs["authenticationBasicEnabled"] = args ? args.authenticationBasicEnabled : undefined;
            resourceInputs["authenticationBasicPassword"] = args?.authenticationBasicPassword ? pulumi.secret(args.authenticationBasicPassword) : undefined;
            resourceInputs["authenticationBasicType"] = args ? args.authenticationBasicType : undefined;
            resourceInputs["authenticationClientCertContent"] = args?.authenticationClientCertContent ? pulumi.secret(args.authenticationClientCertContent) : undefined;
            resourceInputs["authenticationClientCertEnabled"] = args ? args.authenticationClientCertEnabled : undefined;
            resourceInputs["authenticationClientCertPassword"] = args?.authenticationClientCertPassword ? pulumi.secret(args.authenticationClientCertPassword) : undefined;
            resourceInputs["directOnlyEnabled"] = args ? args.directOnlyEnabled : undefined;
            resourceInputs["dmrClusterName"] = args ? args.dmrClusterName : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["tlsServerCertMaxChainDepth"] = args ? args.tlsServerCertMaxChainDepth : undefined;
            resourceInputs["tlsServerCertValidateDateEnabled"] = args ? args.tlsServerCertValidateDateEnabled : undefined;
            resourceInputs["tlsServerCertValidateNameEnabled"] = args ? args.tlsServerCertValidateNameEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authenticationBasicPassword", "authenticationClientCertContent", "authenticationClientCertPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DmrCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DmrCluster resources.
 */
export interface DmrClusterState {
    /**
     * Enable or disable basic authentication for Cluster Links. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `true`.
     */
    authenticationBasicEnabled?: pulumi.Input<boolean>;
    /**
     * The password used to authenticate incoming Cluster Links when using basic internal authentication. The same password is
     * also used by outgoing Cluster Links if a per-Link password is not configured. This attribute is absent from a GET and
     * not updated when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API
     * `Config reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively
     * enabled may be service impacting as enabled will be temporarily set to false to apply the change. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `""`.
     */
    authenticationBasicPassword?: pulumi.Input<string>;
    /**
     * The type of basic authentication to use for Cluster Links. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `"internal"`. The allowed values and their meaning are: <pre> "internal" - Use locally
     * configured password. "none" - No authentication. </pre>
     */
    authenticationBasicType?: pulumi.Input<string>;
    /**
     * The PEM formatted content for the client certificate used to login to the remote node. It must consist of a private key
     * and between one and three certificates comprising the certificate trust chain. This attribute is absent from a GET and
     * not updated when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API
     * `Config reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively
     * enabled may be service impacting as enabled will be temporarily set to false to apply the change. The default value is
     * `""`.
     */
    authenticationClientCertContent?: pulumi.Input<string>;
    /**
     * Enable or disable client certificate authentication for Cluster Links. Changes to this attribute are synchronized to HA
     * mates via config-sync. The default value is `true`.
     */
    authenticationClientCertEnabled?: pulumi.Input<boolean>;
    /**
     * The password for the client certificate. This attribute is absent from a GET and not updated when absent in a PUT,
     * subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Modifying this
     * attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * enabled will be temporarily set to false to apply the change. The default value is `""`.
     */
    authenticationClientCertPassword?: pulumi.Input<string>;
    /**
     * Enable or disable direct messaging only. Guaranteed messages will not be transmitted through the cluster. The default
     * value is `false`. Note that this attribute requires replacement of the resource when updated.
     */
    directOnlyEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Cluster.
     */
    dmrClusterName?: pulumi.Input<string>;
    /**
     * Enable or disable the Cluster. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The maximum allowed depth of a certificate chain. The depth of a chain is defined as the number of signing CA
     * certificates that are present in the chain back to a trusted self-signed root CA certificate. Changes to this attribute
     * are synchronized to HA mates via config-sync. The default value is `3`.
     */
    tlsServerCertMaxChainDepth?: pulumi.Input<number>;
    /**
     * Enable or disable the validation of the "Not Before" and "Not After" validity dates in the certificate. When disabled,
     * the certificate is accepted even if the certificate is not valid based on these dates. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `true`.
     */
    tlsServerCertValidateDateEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable the standard TLS authentication mechanism of verifying the name used to connect to the bridge. If
     * enabled, the name used to connect to the bridge is checked against the names specified in the certificate returned by
     * the remote broker. Legacy Common Name validation is not performed if Server Certificate Name Validation is enabled, even
     * if Common Name validation is also enabled. Changes to this attribute are synchronized to HA mates via config-sync. The
     * default value is `true`. Available since SEMP API version 2.18.
     */
    tlsServerCertValidateNameEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DmrCluster resource.
 */
export interface DmrClusterArgs {
    /**
     * Enable or disable basic authentication for Cluster Links. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `true`.
     */
    authenticationBasicEnabled?: pulumi.Input<boolean>;
    /**
     * The password used to authenticate incoming Cluster Links when using basic internal authentication. The same password is
     * also used by outgoing Cluster Links if a per-Link password is not configured. This attribute is absent from a GET and
     * not updated when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API
     * `Config reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively
     * enabled may be service impacting as enabled will be temporarily set to false to apply the change. Changes to this
     * attribute are synchronized to HA mates via config-sync. The default value is `""`.
     */
    authenticationBasicPassword?: pulumi.Input<string>;
    /**
     * The type of basic authentication to use for Cluster Links. Changes to this attribute are synchronized to HA mates via
     * config-sync. The default value is `"internal"`. The allowed values and their meaning are: <pre> "internal" - Use locally
     * configured password. "none" - No authentication. </pre>
     */
    authenticationBasicType?: pulumi.Input<string>;
    /**
     * The PEM formatted content for the client certificate used to login to the remote node. It must consist of a private key
     * and between one and three certificates comprising the certificate trust chain. This attribute is absent from a GET and
     * not updated when absent in a PUT, subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API
     * `Config reference`). Modifying this attribute while the object (or the relevant part of the object) is administratively
     * enabled may be service impacting as enabled will be temporarily set to false to apply the change. The default value is
     * `""`.
     */
    authenticationClientCertContent?: pulumi.Input<string>;
    /**
     * Enable or disable client certificate authentication for Cluster Links. Changes to this attribute are synchronized to HA
     * mates via config-sync. The default value is `true`.
     */
    authenticationClientCertEnabled?: pulumi.Input<boolean>;
    /**
     * The password for the client certificate. This attribute is absent from a GET and not updated when absent in a PUT,
     * subject to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Modifying this
     * attribute while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * enabled will be temporarily set to false to apply the change. The default value is `""`.
     */
    authenticationClientCertPassword?: pulumi.Input<string>;
    /**
     * Enable or disable direct messaging only. Guaranteed messages will not be transmitted through the cluster. The default
     * value is `false`. Note that this attribute requires replacement of the resource when updated.
     */
    directOnlyEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Cluster.
     */
    dmrClusterName: pulumi.Input<string>;
    /**
     * Enable or disable the Cluster. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The maximum allowed depth of a certificate chain. The depth of a chain is defined as the number of signing CA
     * certificates that are present in the chain back to a trusted self-signed root CA certificate. Changes to this attribute
     * are synchronized to HA mates via config-sync. The default value is `3`.
     */
    tlsServerCertMaxChainDepth?: pulumi.Input<number>;
    /**
     * Enable or disable the validation of the "Not Before" and "Not After" validity dates in the certificate. When disabled,
     * the certificate is accepted even if the certificate is not valid based on these dates. Changes to this attribute are
     * synchronized to HA mates via config-sync. The default value is `true`.
     */
    tlsServerCertValidateDateEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable the standard TLS authentication mechanism of verifying the name used to connect to the bridge. If
     * enabled, the name used to connect to the bridge is checked against the names specified in the certificate returned by
     * the remote broker. Legacy Common Name validation is not performed if Server Certificate Name Validation is enabled, even
     * if Common Name validation is also enabled. Changes to this attribute are synchronized to HA mates via config-sync. The
     * default value is `true`. Available since SEMP API version 2.18.
     */
    tlsServerCertValidateNameEnabled?: pulumi.Input<boolean>;
}
