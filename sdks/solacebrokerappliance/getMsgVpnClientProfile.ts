// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMsgVpnClientProfile(args: GetMsgVpnClientProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnClientProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getMsgVpnClientProfile:getMsgVpnClientProfile", {
        "clientProfileName": args.clientProfileName,
        "msgVpnName": args.msgVpnName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnClientProfile.
 */
export interface GetMsgVpnClientProfileArgs {
    clientProfileName: string;
    msgVpnName: string;
}

/**
 * A collection of values returned by getMsgVpnClientProfile.
 */
export interface GetMsgVpnClientProfileResult {
    readonly allowBridgeConnectionsEnabled: boolean;
    readonly allowGuaranteedEndpointCreateDurability: string;
    readonly allowGuaranteedEndpointCreateEnabled: boolean;
    readonly allowGuaranteedMsgReceiveEnabled: boolean;
    readonly allowGuaranteedMsgSendEnabled: boolean;
    readonly allowSharedSubscriptionsEnabled: boolean;
    readonly allowTransactedSessionsEnabled: boolean;
    readonly apiQueueManagementCopyFromOnCreateTemplateName: string;
    readonly apiTopicEndpointManagementCopyFromOnCreateTemplateName: string;
    readonly clientProfileName: string;
    readonly compressionEnabled: boolean;
    readonly elidingDelay: number;
    readonly elidingEnabled: boolean;
    readonly elidingMaxTopicCount: number;
    readonly eventClientProvisionedEndpointSpoolUsageThreshold: outputs.GetMsgVpnClientProfileEventClientProvisionedEndpointSpoolUsageThreshold;
    readonly eventConnectionCountPerClientUsernameThreshold: outputs.GetMsgVpnClientProfileEventConnectionCountPerClientUsernameThreshold;
    readonly eventEgressFlowCountThreshold: outputs.GetMsgVpnClientProfileEventEgressFlowCountThreshold;
    readonly eventEndpointCountPerClientUsernameThreshold: outputs.GetMsgVpnClientProfileEventEndpointCountPerClientUsernameThreshold;
    readonly eventIngressFlowCountThreshold: outputs.GetMsgVpnClientProfileEventIngressFlowCountThreshold;
    readonly eventServiceSmfConnectionCountPerClientUsernameThreshold: outputs.GetMsgVpnClientProfileEventServiceSmfConnectionCountPerClientUsernameThreshold;
    readonly eventServiceWebConnectionCountPerClientUsernameThreshold: outputs.GetMsgVpnClientProfileEventServiceWebConnectionCountPerClientUsernameThreshold;
    readonly eventSubscriptionCountThreshold: outputs.GetMsgVpnClientProfileEventSubscriptionCountThreshold;
    readonly eventTransactedSessionCountThreshold: outputs.GetMsgVpnClientProfileEventTransactedSessionCountThreshold;
    readonly eventTransactionCountThreshold: outputs.GetMsgVpnClientProfileEventTransactionCountThreshold;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maxConnectionCountPerClientUsername: number;
    readonly maxEgressFlowCount: number;
    readonly maxEndpointCountPerClientUsername: number;
    readonly maxIngressFlowCount: number;
    readonly maxMsgsPerTransaction: number;
    readonly maxSubscriptionCount: number;
    readonly maxTransactedSessionCount: number;
    readonly maxTransactionCount: number;
    readonly msgVpnName: string;
    readonly queueControl1MaxDepth: number;
    readonly queueControl1MinMsgBurst: number;
    readonly queueDirect1MaxDepth: number;
    readonly queueDirect1MinMsgBurst: number;
    readonly queueDirect2MaxDepth: number;
    readonly queueDirect2MinMsgBurst: number;
    readonly queueDirect3MaxDepth: number;
    readonly queueDirect3MinMsgBurst: number;
    readonly queueGuaranteed1MaxDepth: number;
    readonly queueGuaranteed1MinMsgBurst: number;
    readonly rejectMsgToSenderOnNoSubscriptionMatchEnabled: boolean;
    readonly replicationAllowClientConnectWhenStandbyEnabled: boolean;
    readonly serviceMinKeepaliveTimeout: number;
    readonly serviceSmfMaxConnectionCountPerClientUsername: number;
    readonly serviceSmfMinKeepaliveEnabled: boolean;
    readonly serviceWebInactiveTimeout: number;
    readonly serviceWebMaxConnectionCountPerClientUsername: number;
    readonly serviceWebMaxPayload: number;
    readonly tcpCongestionWindowSize: number;
    readonly tcpKeepaliveCount: number;
    readonly tcpKeepaliveIdleTime: number;
    readonly tcpKeepaliveInterval: number;
    readonly tcpMaxSegmentSize: number;
    readonly tcpMaxWindowSize: number;
    readonly tlsAllowDowngradeToPlainTextEnabled: boolean;
}
export function getMsgVpnClientProfileOutput(args: GetMsgVpnClientProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnClientProfileResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnClientProfile(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnClientProfile.
 */
export interface GetMsgVpnClientProfileOutputArgs {
    clientProfileName: pulumi.Input<string>;
    msgVpnName: pulumi.Input<string>;
}
