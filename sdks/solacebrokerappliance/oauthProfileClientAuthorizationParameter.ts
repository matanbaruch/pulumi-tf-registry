// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OauthProfileClientAuthorizationParameter extends pulumi.CustomResource {
    /**
     * Get an existing OauthProfileClientAuthorizationParameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OauthProfileClientAuthorizationParameterState, opts?: pulumi.CustomResourceOptions): OauthProfileClientAuthorizationParameter {
        return new OauthProfileClientAuthorizationParameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebrokerappliance:index/oauthProfileClientAuthorizationParameter:OauthProfileClientAuthorizationParameter';

    /**
     * Returns true if the given object is an instance of OauthProfileClientAuthorizationParameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OauthProfileClientAuthorizationParameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OauthProfileClientAuthorizationParameter.__pulumiType;
    }

    /**
     * The name of the authorization parameter.
     */
    public readonly authorizationParameterName!: pulumi.Output<string>;
    /**
     * The authorization parameter value. Changes to this attribute are synchronized to HA mates via config-sync. The default
     * value is `""`.
     */
    public readonly authorizationParameterValue!: pulumi.Output<string | undefined>;
    /**
     * The name of the OAuth profile.
     */
    public readonly oauthProfileName!: pulumi.Output<string>;

    /**
     * Create a OauthProfileClientAuthorizationParameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OauthProfileClientAuthorizationParameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OauthProfileClientAuthorizationParameterArgs | OauthProfileClientAuthorizationParameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OauthProfileClientAuthorizationParameterState | undefined;
            resourceInputs["authorizationParameterName"] = state ? state.authorizationParameterName : undefined;
            resourceInputs["authorizationParameterValue"] = state ? state.authorizationParameterValue : undefined;
            resourceInputs["oauthProfileName"] = state ? state.oauthProfileName : undefined;
        } else {
            const args = argsOrState as OauthProfileClientAuthorizationParameterArgs | undefined;
            if ((!args || args.authorizationParameterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authorizationParameterName'");
            }
            if ((!args || args.oauthProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oauthProfileName'");
            }
            resourceInputs["authorizationParameterName"] = args ? args.authorizationParameterName : undefined;
            resourceInputs["authorizationParameterValue"] = args ? args.authorizationParameterValue : undefined;
            resourceInputs["oauthProfileName"] = args ? args.oauthProfileName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OauthProfileClientAuthorizationParameter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OauthProfileClientAuthorizationParameter resources.
 */
export interface OauthProfileClientAuthorizationParameterState {
    /**
     * The name of the authorization parameter.
     */
    authorizationParameterName?: pulumi.Input<string>;
    /**
     * The authorization parameter value. Changes to this attribute are synchronized to HA mates via config-sync. The default
     * value is `""`.
     */
    authorizationParameterValue?: pulumi.Input<string>;
    /**
     * The name of the OAuth profile.
     */
    oauthProfileName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OauthProfileClientAuthorizationParameter resource.
 */
export interface OauthProfileClientAuthorizationParameterArgs {
    /**
     * The name of the authorization parameter.
     */
    authorizationParameterName: pulumi.Input<string>;
    /**
     * The authorization parameter value. Changes to this attribute are synchronized to HA mates via config-sync. The default
     * value is `""`.
     */
    authorizationParameterValue?: pulumi.Input<string>;
    /**
     * The name of the OAuth profile.
     */
    oauthProfileName: pulumi.Input<string>;
}
