// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DmrClusterCertMatchingRuleAttributeFilter extends pulumi.CustomResource {
    /**
     * Get an existing DmrClusterCertMatchingRuleAttributeFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmrClusterCertMatchingRuleAttributeFilterState, opts?: pulumi.CustomResourceOptions): DmrClusterCertMatchingRuleAttributeFilter {
        return new DmrClusterCertMatchingRuleAttributeFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebrokerappliance:index/dmrClusterCertMatchingRuleAttributeFilter:DmrClusterCertMatchingRuleAttributeFilter';

    /**
     * Returns true if the given object is an instance of DmrClusterCertMatchingRuleAttributeFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmrClusterCertMatchingRuleAttributeFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmrClusterCertMatchingRuleAttributeFilter.__pulumiType;
    }

    /**
     * Link Attribute to be tested. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `""`.
     */
    public readonly attributeName!: pulumi.Output<string | undefined>;
    /**
     * Expected attribute value. Changes to this attribute are synchronized to HA mates via config-sync. The default value is
     * `""`.
     */
    public readonly attributeValue!: pulumi.Output<string | undefined>;
    /**
     * The name of the Cluster.
     */
    public readonly dmrClusterName!: pulumi.Output<string>;
    /**
     * The name of the filter.
     */
    public readonly filterName!: pulumi.Output<string>;
    /**
     * The name of the rule.
     */
    public readonly ruleName!: pulumi.Output<string>;

    /**
     * Create a DmrClusterCertMatchingRuleAttributeFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmrClusterCertMatchingRuleAttributeFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmrClusterCertMatchingRuleAttributeFilterArgs | DmrClusterCertMatchingRuleAttributeFilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmrClusterCertMatchingRuleAttributeFilterState | undefined;
            resourceInputs["attributeName"] = state ? state.attributeName : undefined;
            resourceInputs["attributeValue"] = state ? state.attributeValue : undefined;
            resourceInputs["dmrClusterName"] = state ? state.dmrClusterName : undefined;
            resourceInputs["filterName"] = state ? state.filterName : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
        } else {
            const args = argsOrState as DmrClusterCertMatchingRuleAttributeFilterArgs | undefined;
            if ((!args || args.dmrClusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dmrClusterName'");
            }
            if ((!args || args.filterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filterName'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["attributeName"] = args ? args.attributeName : undefined;
            resourceInputs["attributeValue"] = args ? args.attributeValue : undefined;
            resourceInputs["dmrClusterName"] = args ? args.dmrClusterName : undefined;
            resourceInputs["filterName"] = args ? args.filterName : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmrClusterCertMatchingRuleAttributeFilter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DmrClusterCertMatchingRuleAttributeFilter resources.
 */
export interface DmrClusterCertMatchingRuleAttributeFilterState {
    /**
     * Link Attribute to be tested. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `""`.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * Expected attribute value. Changes to this attribute are synchronized to HA mates via config-sync. The default value is
     * `""`.
     */
    attributeValue?: pulumi.Input<string>;
    /**
     * The name of the Cluster.
     */
    dmrClusterName?: pulumi.Input<string>;
    /**
     * The name of the filter.
     */
    filterName?: pulumi.Input<string>;
    /**
     * The name of the rule.
     */
    ruleName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DmrClusterCertMatchingRuleAttributeFilter resource.
 */
export interface DmrClusterCertMatchingRuleAttributeFilterArgs {
    /**
     * Link Attribute to be tested. Changes to this attribute are synchronized to HA mates via config-sync. The default value
     * is `""`.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * Expected attribute value. Changes to this attribute are synchronized to HA mates via config-sync. The default value is
     * `""`.
     */
    attributeValue?: pulumi.Input<string>;
    /**
     * The name of the Cluster.
     */
    dmrClusterName: pulumi.Input<string>;
    /**
     * The name of the filter.
     */
    filterName: pulumi.Input<string>;
    /**
     * The name of the rule.
     */
    ruleName: pulumi.Input<string>;
}
