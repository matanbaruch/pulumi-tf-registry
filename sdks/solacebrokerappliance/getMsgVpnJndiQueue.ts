// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnJndiQueue(args: GetMsgVpnJndiQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnJndiQueueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getMsgVpnJndiQueue:getMsgVpnJndiQueue", {
        "msgVpnName": args.msgVpnName,
        "queueName": args.queueName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnJndiQueue.
 */
export interface GetMsgVpnJndiQueueArgs {
    msgVpnName: string;
    queueName: string;
}

/**
 * A collection of values returned by getMsgVpnJndiQueue.
 */
export interface GetMsgVpnJndiQueueResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnName: string;
    readonly physicalName: string;
    readonly queueName: string;
}
export function getMsgVpnJndiQueueOutput(args: GetMsgVpnJndiQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnJndiQueueResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnJndiQueue(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnJndiQueue.
 */
export interface GetMsgVpnJndiQueueOutputArgs {
    msgVpnName: pulumi.Input<string>;
    queueName: pulumi.Input<string>;
}
