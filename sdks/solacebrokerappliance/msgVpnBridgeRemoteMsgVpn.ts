// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MsgVpnBridgeRemoteMsgVpn extends pulumi.CustomResource {
    /**
     * Get an existing MsgVpnBridgeRemoteMsgVpn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MsgVpnBridgeRemoteMsgVpnState, opts?: pulumi.CustomResourceOptions): MsgVpnBridgeRemoteMsgVpn {
        return new MsgVpnBridgeRemoteMsgVpn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebrokerappliance:index/msgVpnBridgeRemoteMsgVpn:MsgVpnBridgeRemoteMsgVpn';

    /**
     * Returns true if the given object is an instance of MsgVpnBridgeRemoteMsgVpn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MsgVpnBridgeRemoteMsgVpn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MsgVpnBridgeRemoteMsgVpn.__pulumiType;
    }

    /**
     * The name of the Bridge.
     */
    public readonly bridgeName!: pulumi.Output<string>;
    /**
     * The virtual router of the Bridge. The allowed values and their meaning are: <pre> "primary" - The Bridge is used for the
     * primary virtual router. "backup" - The Bridge is used for the backup virtual router. "auto" - The Bridge is
     * automatically assigned a virtual router at creation, depending on the broker's active-standby role. </pre>
     */
    public readonly bridgeVirtualRouter!: pulumi.Output<string>;
    /**
     * The Client Username the Bridge uses to login to the remote Message VPN. This per remote Message VPN value overrides the
     * value provided for the Bridge overall. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    public readonly clientUsername!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable data compression for the remote Message VPN connection. Modifying this attribute while the object (or
     * the relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set
     * to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    public readonly compressedDataEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The preference given to incoming connections from remote Message VPN hosts, from 1 (highest priority) to 4 (lowest
     * priority). Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `4`.
     */
    public readonly connectOrder!: pulumi.Output<number | undefined>;
    /**
     * The number of outstanding guaranteed messages that can be transmitted over the remote Message VPN connection before an
     * acknowledgment is received. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `255`.
     */
    public readonly egressFlowWindowSize!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable the remote Message VPN. Changes to this attribute are synchronized to HA mates and replication sites
     * via config-sync. The default value is `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Message VPN.
     */
    public readonly msgVpnName!: pulumi.Output<string>;
    /**
     * The password for the Client Username. This attribute is absent from a GET and not updated when absent in a PUT, subject
     * to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Modifying this attribute
     * while the object (or the relevant part of the object) is administratively enabled may be service impacting as enabled
     * will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `""`.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The queue binding of the Bridge in the remote Message VPN. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `""`.
     */
    public readonly queueBinding!: pulumi.Output<string | undefined>;
    /**
     * The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface
     * is chosen automatically (recommended), but if specified, `remote_msg_vpn_location` must not be a virtual router name.
     */
    public readonly remoteMsgVpnInterface!: pulumi.Output<string | undefined>;
    /**
     * The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name
     * (starting with "v:").
     */
    public readonly remoteMsgVpnLocation!: pulumi.Output<string>;
    /**
     * The name of the remote Message VPN.
     */
    public readonly remoteMsgVpnName!: pulumi.Output<string>;
    /**
     * Enable or disable encryption (TLS) for the remote Message VPN connection. Modifying this attribute while the object (or
     * the relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set
     * to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    public readonly tlsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The Client Profile for the unidirectional Bridge of the remote Message VPN. The Client Profile must exist in the local
     * Message VPN, and it is used only for the TCP parameters. Note that the default client profile has a TCP maximum window
     * size of 2 MB. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `"#client-profile"`.
     */
    public readonly unidirectionalClientProfile!: pulumi.Output<string | undefined>;

    /**
     * Create a MsgVpnBridgeRemoteMsgVpn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MsgVpnBridgeRemoteMsgVpnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MsgVpnBridgeRemoteMsgVpnArgs | MsgVpnBridgeRemoteMsgVpnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MsgVpnBridgeRemoteMsgVpnState | undefined;
            resourceInputs["bridgeName"] = state ? state.bridgeName : undefined;
            resourceInputs["bridgeVirtualRouter"] = state ? state.bridgeVirtualRouter : undefined;
            resourceInputs["clientUsername"] = state ? state.clientUsername : undefined;
            resourceInputs["compressedDataEnabled"] = state ? state.compressedDataEnabled : undefined;
            resourceInputs["connectOrder"] = state ? state.connectOrder : undefined;
            resourceInputs["egressFlowWindowSize"] = state ? state.egressFlowWindowSize : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["msgVpnName"] = state ? state.msgVpnName : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["queueBinding"] = state ? state.queueBinding : undefined;
            resourceInputs["remoteMsgVpnInterface"] = state ? state.remoteMsgVpnInterface : undefined;
            resourceInputs["remoteMsgVpnLocation"] = state ? state.remoteMsgVpnLocation : undefined;
            resourceInputs["remoteMsgVpnName"] = state ? state.remoteMsgVpnName : undefined;
            resourceInputs["tlsEnabled"] = state ? state.tlsEnabled : undefined;
            resourceInputs["unidirectionalClientProfile"] = state ? state.unidirectionalClientProfile : undefined;
        } else {
            const args = argsOrState as MsgVpnBridgeRemoteMsgVpnArgs | undefined;
            if ((!args || args.bridgeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bridgeName'");
            }
            if ((!args || args.bridgeVirtualRouter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bridgeVirtualRouter'");
            }
            if ((!args || args.msgVpnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'msgVpnName'");
            }
            if ((!args || args.remoteMsgVpnLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteMsgVpnLocation'");
            }
            if ((!args || args.remoteMsgVpnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteMsgVpnName'");
            }
            resourceInputs["bridgeName"] = args ? args.bridgeName : undefined;
            resourceInputs["bridgeVirtualRouter"] = args ? args.bridgeVirtualRouter : undefined;
            resourceInputs["clientUsername"] = args ? args.clientUsername : undefined;
            resourceInputs["compressedDataEnabled"] = args ? args.compressedDataEnabled : undefined;
            resourceInputs["connectOrder"] = args ? args.connectOrder : undefined;
            resourceInputs["egressFlowWindowSize"] = args ? args.egressFlowWindowSize : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["msgVpnName"] = args ? args.msgVpnName : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["queueBinding"] = args ? args.queueBinding : undefined;
            resourceInputs["remoteMsgVpnInterface"] = args ? args.remoteMsgVpnInterface : undefined;
            resourceInputs["remoteMsgVpnLocation"] = args ? args.remoteMsgVpnLocation : undefined;
            resourceInputs["remoteMsgVpnName"] = args ? args.remoteMsgVpnName : undefined;
            resourceInputs["tlsEnabled"] = args ? args.tlsEnabled : undefined;
            resourceInputs["unidirectionalClientProfile"] = args ? args.unidirectionalClientProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MsgVpnBridgeRemoteMsgVpn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MsgVpnBridgeRemoteMsgVpn resources.
 */
export interface MsgVpnBridgeRemoteMsgVpnState {
    /**
     * The name of the Bridge.
     */
    bridgeName?: pulumi.Input<string>;
    /**
     * The virtual router of the Bridge. The allowed values and their meaning are: <pre> "primary" - The Bridge is used for the
     * primary virtual router. "backup" - The Bridge is used for the backup virtual router. "auto" - The Bridge is
     * automatically assigned a virtual router at creation, depending on the broker's active-standby role. </pre>
     */
    bridgeVirtualRouter?: pulumi.Input<string>;
    /**
     * The Client Username the Bridge uses to login to the remote Message VPN. This per remote Message VPN value overrides the
     * value provided for the Bridge overall. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    clientUsername?: pulumi.Input<string>;
    /**
     * Enable or disable data compression for the remote Message VPN connection. Modifying this attribute while the object (or
     * the relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set
     * to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    compressedDataEnabled?: pulumi.Input<boolean>;
    /**
     * The preference given to incoming connections from remote Message VPN hosts, from 1 (highest priority) to 4 (lowest
     * priority). Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `4`.
     */
    connectOrder?: pulumi.Input<number>;
    /**
     * The number of outstanding guaranteed messages that can be transmitted over the remote Message VPN connection before an
     * acknowledgment is received. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `255`.
     */
    egressFlowWindowSize?: pulumi.Input<number>;
    /**
     * Enable or disable the remote Message VPN. Changes to this attribute are synchronized to HA mates and replication sites
     * via config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName?: pulumi.Input<string>;
    /**
     * The password for the Client Username. This attribute is absent from a GET and not updated when absent in a PUT, subject
     * to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Modifying this attribute
     * while the object (or the relevant part of the object) is administratively enabled may be service impacting as enabled
     * will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `""`.
     */
    password?: pulumi.Input<string>;
    /**
     * The queue binding of the Bridge in the remote Message VPN. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `""`.
     */
    queueBinding?: pulumi.Input<string>;
    /**
     * The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface
     * is chosen automatically (recommended), but if specified, `remote_msg_vpn_location` must not be a virtual router name.
     */
    remoteMsgVpnInterface?: pulumi.Input<string>;
    /**
     * The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name
     * (starting with "v:").
     */
    remoteMsgVpnLocation?: pulumi.Input<string>;
    /**
     * The name of the remote Message VPN.
     */
    remoteMsgVpnName?: pulumi.Input<string>;
    /**
     * Enable or disable encryption (TLS) for the remote Message VPN connection. Modifying this attribute while the object (or
     * the relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set
     * to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    tlsEnabled?: pulumi.Input<boolean>;
    /**
     * The Client Profile for the unidirectional Bridge of the remote Message VPN. The Client Profile must exist in the local
     * Message VPN, and it is used only for the TCP parameters. Note that the default client profile has a TCP maximum window
     * size of 2 MB. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `"#client-profile"`.
     */
    unidirectionalClientProfile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MsgVpnBridgeRemoteMsgVpn resource.
 */
export interface MsgVpnBridgeRemoteMsgVpnArgs {
    /**
     * The name of the Bridge.
     */
    bridgeName: pulumi.Input<string>;
    /**
     * The virtual router of the Bridge. The allowed values and their meaning are: <pre> "primary" - The Bridge is used for the
     * primary virtual router. "backup" - The Bridge is used for the backup virtual router. "auto" - The Bridge is
     * automatically assigned a virtual router at creation, depending on the broker's active-standby role. </pre>
     */
    bridgeVirtualRouter: pulumi.Input<string>;
    /**
     * The Client Username the Bridge uses to login to the remote Message VPN. This per remote Message VPN value overrides the
     * value provided for the Bridge overall. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    clientUsername?: pulumi.Input<string>;
    /**
     * Enable or disable data compression for the remote Message VPN connection. Modifying this attribute while the object (or
     * the relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set
     * to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    compressedDataEnabled?: pulumi.Input<boolean>;
    /**
     * The preference given to incoming connections from remote Message VPN hosts, from 1 (highest priority) to 4 (lowest
     * priority). Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `4`.
     */
    connectOrder?: pulumi.Input<number>;
    /**
     * The number of outstanding guaranteed messages that can be transmitted over the remote Message VPN connection before an
     * acknowledgment is received. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `255`.
     */
    egressFlowWindowSize?: pulumi.Input<number>;
    /**
     * Enable or disable the remote Message VPN. Changes to this attribute are synchronized to HA mates and replication sites
     * via config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName: pulumi.Input<string>;
    /**
     * The password for the Client Username. This attribute is absent from a GET and not updated when absent in a PUT, subject
     * to the exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Modifying this attribute
     * while the object (or the relevant part of the object) is administratively enabled may be service impacting as enabled
     * will be temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `""`.
     */
    password?: pulumi.Input<string>;
    /**
     * The queue binding of the Bridge in the remote Message VPN. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `""`.
     */
    queueBinding?: pulumi.Input<string>;
    /**
     * The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface
     * is chosen automatically (recommended), but if specified, `remote_msg_vpn_location` must not be a virtual router name.
     */
    remoteMsgVpnInterface?: pulumi.Input<string>;
    /**
     * The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name
     * (starting with "v:").
     */
    remoteMsgVpnLocation: pulumi.Input<string>;
    /**
     * The name of the remote Message VPN.
     */
    remoteMsgVpnName: pulumi.Input<string>;
    /**
     * Enable or disable encryption (TLS) for the remote Message VPN connection. Modifying this attribute while the object (or
     * the relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set
     * to false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    tlsEnabled?: pulumi.Input<boolean>;
    /**
     * The Client Profile for the unidirectional Bridge of the remote Message VPN. The Client Profile must exist in the local
     * Message VPN, and it is used only for the TCP parameters. Note that the default client profile has a TCP maximum window
     * size of 2 MB. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `"#client-profile"`.
     */
    unidirectionalClientProfile?: pulumi.Input<string>;
}
