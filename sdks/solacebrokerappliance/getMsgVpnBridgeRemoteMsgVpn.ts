// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnBridgeRemoteMsgVpn(args: GetMsgVpnBridgeRemoteMsgVpnArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnBridgeRemoteMsgVpnResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getMsgVpnBridgeRemoteMsgVpn:getMsgVpnBridgeRemoteMsgVpn", {
        "bridgeName": args.bridgeName,
        "bridgeVirtualRouter": args.bridgeVirtualRouter,
        "msgVpnName": args.msgVpnName,
        "remoteMsgVpnInterface": args.remoteMsgVpnInterface,
        "remoteMsgVpnLocation": args.remoteMsgVpnLocation,
        "remoteMsgVpnName": args.remoteMsgVpnName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnBridgeRemoteMsgVpn.
 */
export interface GetMsgVpnBridgeRemoteMsgVpnArgs {
    bridgeName: string;
    bridgeVirtualRouter: string;
    msgVpnName: string;
    remoteMsgVpnInterface: string;
    remoteMsgVpnLocation: string;
    remoteMsgVpnName: string;
}

/**
 * A collection of values returned by getMsgVpnBridgeRemoteMsgVpn.
 */
export interface GetMsgVpnBridgeRemoteMsgVpnResult {
    readonly bridgeName: string;
    readonly bridgeVirtualRouter: string;
    readonly clientUsername: string;
    readonly compressedDataEnabled: boolean;
    readonly connectOrder: number;
    readonly egressFlowWindowSize: number;
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnName: string;
    readonly queueBinding: string;
    readonly remoteMsgVpnInterface: string;
    readonly remoteMsgVpnLocation: string;
    readonly remoteMsgVpnName: string;
    readonly tlsEnabled: boolean;
    readonly unidirectionalClientProfile: string;
}
export function getMsgVpnBridgeRemoteMsgVpnOutput(args: GetMsgVpnBridgeRemoteMsgVpnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnBridgeRemoteMsgVpnResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnBridgeRemoteMsgVpn(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnBridgeRemoteMsgVpn.
 */
export interface GetMsgVpnBridgeRemoteMsgVpnOutputArgs {
    bridgeName: pulumi.Input<string>;
    bridgeVirtualRouter: pulumi.Input<string>;
    msgVpnName: pulumi.Input<string>;
    remoteMsgVpnInterface: pulumi.Input<string>;
    remoteMsgVpnLocation: pulumi.Input<string>;
    remoteMsgVpnName: pulumi.Input<string>;
}
