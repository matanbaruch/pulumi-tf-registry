// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOauthProfileAccessLevelGroup(args: GetOauthProfileAccessLevelGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetOauthProfileAccessLevelGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getOauthProfileAccessLevelGroup:getOauthProfileAccessLevelGroup", {
        "groupName": args.groupName,
        "oauthProfileName": args.oauthProfileName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOauthProfileAccessLevelGroup.
 */
export interface GetOauthProfileAccessLevelGroupArgs {
    groupName: string;
    oauthProfileName: string;
}

/**
 * A collection of values returned by getOauthProfileAccessLevelGroup.
 */
export interface GetOauthProfileAccessLevelGroupResult {
    readonly description: string;
    readonly globalAccessLevel: string;
    readonly groupName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnAccessLevel: string;
    readonly oauthProfileName: string;
}
export function getOauthProfileAccessLevelGroupOutput(args: GetOauthProfileAccessLevelGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOauthProfileAccessLevelGroupResult> {
    return pulumi.output(args).apply((a: any) => getOauthProfileAccessLevelGroup(a, opts))
}

/**
 * A collection of arguments for invoking getOauthProfileAccessLevelGroup.
 */
export interface GetOauthProfileAccessLevelGroupOutputArgs {
    groupName: pulumi.Input<string>;
    oauthProfileName: pulumi.Input<string>;
}
