// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDmrClusterLinkAttribute(args: GetDmrClusterLinkAttributeArgs, opts?: pulumi.InvokeOptions): Promise<GetDmrClusterLinkAttributeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getDmrClusterLinkAttribute:getDmrClusterLinkAttribute", {
        "attributeName": args.attributeName,
        "attributeValue": args.attributeValue,
        "dmrClusterName": args.dmrClusterName,
        "remoteNodeName": args.remoteNodeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDmrClusterLinkAttribute.
 */
export interface GetDmrClusterLinkAttributeArgs {
    attributeName: string;
    attributeValue: string;
    dmrClusterName: string;
    remoteNodeName: string;
}

/**
 * A collection of values returned by getDmrClusterLinkAttribute.
 */
export interface GetDmrClusterLinkAttributeResult {
    readonly attributeName: string;
    readonly attributeValue: string;
    readonly dmrClusterName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly remoteNodeName: string;
}
export function getDmrClusterLinkAttributeOutput(args: GetDmrClusterLinkAttributeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDmrClusterLinkAttributeResult> {
    return pulumi.output(args).apply((a: any) => getDmrClusterLinkAttribute(a, opts))
}

/**
 * A collection of arguments for invoking getDmrClusterLinkAttribute.
 */
export interface GetDmrClusterLinkAttributeOutputArgs {
    attributeName: pulumi.Input<string>;
    attributeValue: pulumi.Input<string>;
    dmrClusterName: pulumi.Input<string>;
    remoteNodeName: pulumi.Input<string>;
}
