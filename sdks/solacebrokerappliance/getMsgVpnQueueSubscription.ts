// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnQueueSubscription(args: GetMsgVpnQueueSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnQueueSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getMsgVpnQueueSubscription:getMsgVpnQueueSubscription", {
        "msgVpnName": args.msgVpnName,
        "queueName": args.queueName,
        "subscriptionTopic": args.subscriptionTopic,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnQueueSubscription.
 */
export interface GetMsgVpnQueueSubscriptionArgs {
    msgVpnName: string;
    queueName: string;
    subscriptionTopic: string;
}

/**
 * A collection of values returned by getMsgVpnQueueSubscription.
 */
export interface GetMsgVpnQueueSubscriptionResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnName: string;
    readonly queueName: string;
    readonly subscriptionTopic: string;
}
export function getMsgVpnQueueSubscriptionOutput(args: GetMsgVpnQueueSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnQueueSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnQueueSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnQueueSubscription.
 */
export interface GetMsgVpnQueueSubscriptionOutputArgs {
    msgVpnName: pulumi.Input<string>;
    queueName: pulumi.Input<string>;
    subscriptionTopic: pulumi.Input<string>;
}
