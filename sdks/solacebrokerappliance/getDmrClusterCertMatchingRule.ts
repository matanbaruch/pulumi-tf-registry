// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDmrClusterCertMatchingRule(args: GetDmrClusterCertMatchingRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetDmrClusterCertMatchingRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebrokerappliance:index/getDmrClusterCertMatchingRule:getDmrClusterCertMatchingRule", {
        "dmrClusterName": args.dmrClusterName,
        "ruleName": args.ruleName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDmrClusterCertMatchingRule.
 */
export interface GetDmrClusterCertMatchingRuleArgs {
    dmrClusterName: string;
    ruleName: string;
}

/**
 * A collection of values returned by getDmrClusterCertMatchingRule.
 */
export interface GetDmrClusterCertMatchingRuleResult {
    readonly dmrClusterName: string;
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ruleName: string;
}
export function getDmrClusterCertMatchingRuleOutput(args: GetDmrClusterCertMatchingRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDmrClusterCertMatchingRuleResult> {
    return pulumi.output(args).apply((a: any) => getDmrClusterCertMatchingRule(a, opts))
}

/**
 * A collection of arguments for invoking getDmrClusterCertMatchingRule.
 */
export interface GetDmrClusterCertMatchingRuleOutputArgs {
    dmrClusterName: pulumi.Input<string>;
    ruleName: pulumi.Input<string>;
}
