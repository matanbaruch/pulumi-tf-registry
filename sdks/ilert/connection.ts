// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionState, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ilert:index/connection:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    public readonly alertSource!: pulumi.Output<outputs.ConnectionAlertSource>;
    public readonly autotask!: pulumi.Output<outputs.ConnectionAutotask | undefined>;
    public readonly awsLambda!: pulumi.Output<outputs.ConnectionAwsLambda | undefined>;
    public readonly azureFaas!: pulumi.Output<outputs.ConnectionAzureFaas | undefined>;
    public readonly connector!: pulumi.Output<outputs.ConnectionConnector>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly datadog!: pulumi.Output<outputs.ConnectionDatadog | undefined>;
    public readonly email!: pulumi.Output<outputs.ConnectionEmail | undefined>;
    public readonly github!: pulumi.Output<outputs.ConnectionGithub | undefined>;
    public readonly googleFaas!: pulumi.Output<outputs.ConnectionGoogleFaas | undefined>;
    public readonly jira!: pulumi.Output<outputs.ConnectionJira | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly servicenow!: pulumi.Output<outputs.ConnectionServicenow | undefined>;
    public readonly slack!: pulumi.Output<outputs.ConnectionSlack | undefined>;
    public readonly statusPageIo!: pulumi.Output<outputs.ConnectionStatusPageIo | undefined>;
    public readonly sysdig!: pulumi.Output<outputs.ConnectionSysdig | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ConnectionTimeouts | undefined>;
    public readonly topdesk!: pulumi.Output<outputs.ConnectionTopdesk | undefined>;
    public readonly triggerMode!: pulumi.Output<string | undefined>;
    public readonly triggerTypes!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    public readonly webhook!: pulumi.Output<outputs.ConnectionWebhook | undefined>;
    public readonly zammad!: pulumi.Output<outputs.ConnectionZammad | undefined>;
    public readonly zapier!: pulumi.Output<outputs.ConnectionZapier | undefined>;
    public readonly zendesk!: pulumi.Output<outputs.ConnectionZendesk | undefined>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionArgs | ConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionState | undefined;
            resourceInputs["alertSource"] = state ? state.alertSource : undefined;
            resourceInputs["autotask"] = state ? state.autotask : undefined;
            resourceInputs["awsLambda"] = state ? state.awsLambda : undefined;
            resourceInputs["azureFaas"] = state ? state.azureFaas : undefined;
            resourceInputs["connector"] = state ? state.connector : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["datadog"] = state ? state.datadog : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["github"] = state ? state.github : undefined;
            resourceInputs["googleFaas"] = state ? state.googleFaas : undefined;
            resourceInputs["jira"] = state ? state.jira : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["servicenow"] = state ? state.servicenow : undefined;
            resourceInputs["slack"] = state ? state.slack : undefined;
            resourceInputs["statusPageIo"] = state ? state.statusPageIo : undefined;
            resourceInputs["sysdig"] = state ? state.sysdig : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["topdesk"] = state ? state.topdesk : undefined;
            resourceInputs["triggerMode"] = state ? state.triggerMode : undefined;
            resourceInputs["triggerTypes"] = state ? state.triggerTypes : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["webhook"] = state ? state.webhook : undefined;
            resourceInputs["zammad"] = state ? state.zammad : undefined;
            resourceInputs["zapier"] = state ? state.zapier : undefined;
            resourceInputs["zendesk"] = state ? state.zendesk : undefined;
        } else {
            const args = argsOrState as ConnectionArgs | undefined;
            if ((!args || args.alertSource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alertSource'");
            }
            if ((!args || args.connector === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connector'");
            }
            resourceInputs["alertSource"] = args ? args.alertSource : undefined;
            resourceInputs["autotask"] = args ? args.autotask : undefined;
            resourceInputs["awsLambda"] = args ? args.awsLambda : undefined;
            resourceInputs["azureFaas"] = args ? args.azureFaas : undefined;
            resourceInputs["connector"] = args ? args.connector : undefined;
            resourceInputs["datadog"] = args ? args.datadog : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["github"] = args ? args.github : undefined;
            resourceInputs["googleFaas"] = args ? args.googleFaas : undefined;
            resourceInputs["jira"] = args ? args.jira : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["servicenow"] = args ? args.servicenow : undefined;
            resourceInputs["slack"] = args ? args.slack : undefined;
            resourceInputs["statusPageIo"] = args ? args.statusPageIo : undefined;
            resourceInputs["sysdig"] = args ? args.sysdig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["topdesk"] = args ? args.topdesk : undefined;
            resourceInputs["triggerMode"] = args ? args.triggerMode : undefined;
            resourceInputs["triggerTypes"] = args ? args.triggerTypes : undefined;
            resourceInputs["webhook"] = args ? args.webhook : undefined;
            resourceInputs["zammad"] = args ? args.zammad : undefined;
            resourceInputs["zapier"] = args ? args.zapier : undefined;
            resourceInputs["zendesk"] = args ? args.zendesk : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Connection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Connection resources.
 */
export interface ConnectionState {
    alertSource?: pulumi.Input<inputs.ConnectionAlertSource>;
    autotask?: pulumi.Input<inputs.ConnectionAutotask>;
    awsLambda?: pulumi.Input<inputs.ConnectionAwsLambda>;
    azureFaas?: pulumi.Input<inputs.ConnectionAzureFaas>;
    connector?: pulumi.Input<inputs.ConnectionConnector>;
    createdAt?: pulumi.Input<string>;
    datadog?: pulumi.Input<inputs.ConnectionDatadog>;
    email?: pulumi.Input<inputs.ConnectionEmail>;
    github?: pulumi.Input<inputs.ConnectionGithub>;
    googleFaas?: pulumi.Input<inputs.ConnectionGoogleFaas>;
    jira?: pulumi.Input<inputs.ConnectionJira>;
    name?: pulumi.Input<string>;
    servicenow?: pulumi.Input<inputs.ConnectionServicenow>;
    slack?: pulumi.Input<inputs.ConnectionSlack>;
    statusPageIo?: pulumi.Input<inputs.ConnectionStatusPageIo>;
    sysdig?: pulumi.Input<inputs.ConnectionSysdig>;
    timeouts?: pulumi.Input<inputs.ConnectionTimeouts>;
    topdesk?: pulumi.Input<inputs.ConnectionTopdesk>;
    triggerMode?: pulumi.Input<string>;
    triggerTypes?: pulumi.Input<pulumi.Input<string>[]>;
    updatedAt?: pulumi.Input<string>;
    webhook?: pulumi.Input<inputs.ConnectionWebhook>;
    zammad?: pulumi.Input<inputs.ConnectionZammad>;
    zapier?: pulumi.Input<inputs.ConnectionZapier>;
    zendesk?: pulumi.Input<inputs.ConnectionZendesk>;
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    alertSource: pulumi.Input<inputs.ConnectionAlertSource>;
    autotask?: pulumi.Input<inputs.ConnectionAutotask>;
    awsLambda?: pulumi.Input<inputs.ConnectionAwsLambda>;
    azureFaas?: pulumi.Input<inputs.ConnectionAzureFaas>;
    connector: pulumi.Input<inputs.ConnectionConnector>;
    datadog?: pulumi.Input<inputs.ConnectionDatadog>;
    email?: pulumi.Input<inputs.ConnectionEmail>;
    github?: pulumi.Input<inputs.ConnectionGithub>;
    googleFaas?: pulumi.Input<inputs.ConnectionGoogleFaas>;
    jira?: pulumi.Input<inputs.ConnectionJira>;
    name?: pulumi.Input<string>;
    servicenow?: pulumi.Input<inputs.ConnectionServicenow>;
    slack?: pulumi.Input<inputs.ConnectionSlack>;
    statusPageIo?: pulumi.Input<inputs.ConnectionStatusPageIo>;
    sysdig?: pulumi.Input<inputs.ConnectionSysdig>;
    timeouts?: pulumi.Input<inputs.ConnectionTimeouts>;
    topdesk?: pulumi.Input<inputs.ConnectionTopdesk>;
    triggerMode?: pulumi.Input<string>;
    triggerTypes?: pulumi.Input<pulumi.Input<string>[]>;
    webhook?: pulumi.Input<inputs.ConnectionWebhook>;
    zammad?: pulumi.Input<inputs.ConnectionZammad>;
    zapier?: pulumi.Input<inputs.ConnectionZapier>;
    zendesk?: pulumi.Input<inputs.ConnectionZendesk>;
}
