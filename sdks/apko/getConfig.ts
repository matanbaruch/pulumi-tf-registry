// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConfig(args?: GetConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apko:index/getConfig:getConfig", {
        "configContents": args.configContents,
        "defaultAnnotations": args.defaultAnnotations,
        "extraPackages": args.extraPackages,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigArgs {
    configContents?: string;
    defaultAnnotations?: {[key: string]: string};
    extraPackages?: string[];
}

/**
 * A collection of values returned by getConfig.
 */
export interface GetConfigResult {
    readonly config: outputs.GetConfigConfig;
    readonly configContents?: string;
    readonly defaultAnnotations?: {[key: string]: string};
    readonly extraPackages?: string[];
    readonly id: string;
}
export function getConfigOutput(args?: GetConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigResult> {
    return pulumi.output(args).apply((a: any) => getConfig(a, opts))
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigOutputArgs {
    configContents?: pulumi.Input<string>;
    defaultAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    extraPackages?: pulumi.Input<pulumi.Input<string>[]>;
}
