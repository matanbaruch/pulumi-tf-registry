// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHostPciDevice(args: GetHostPciDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetHostPciDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getHostPciDevice:getHostPciDevice", {
        "classId": args.classId,
        "hostId": args.hostId,
        "id": args.id,
        "nameRegex": args.nameRegex,
        "vendorId": args.vendorId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostPciDevice.
 */
export interface GetHostPciDeviceArgs {
    classId?: string;
    hostId: string;
    id?: string;
    nameRegex?: string;
    vendorId?: string;
}

/**
 * A collection of values returned by getHostPciDevice.
 */
export interface GetHostPciDeviceResult {
    readonly classId?: string;
    readonly hostId: string;
    readonly id: string;
    readonly name: string;
    readonly nameRegex?: string;
    readonly vendorId?: string;
}
export function getHostPciDeviceOutput(args: GetHostPciDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostPciDeviceResult> {
    return pulumi.output(args).apply((a: any) => getHostPciDevice(a, opts))
}

/**
 * A collection of arguments for invoking getHostPciDevice.
 */
export interface GetHostPciDeviceOutputArgs {
    classId?: pulumi.Input<string>;
    hostId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    vendorId?: pulumi.Input<string>;
}
