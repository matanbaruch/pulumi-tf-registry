// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOvfVmTemplate(args: GetOvfVmTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetOvfVmTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getOvfVmTemplate:getOvfVmTemplate", {
        "allowUnverifiedSslCert": args.allowUnverifiedSslCert,
        "datastoreId": args.datastoreId,
        "deploymentOption": args.deploymentOption,
        "diskProvisioning": args.diskProvisioning,
        "enableHiddenProperties": args.enableHiddenProperties,
        "folder": args.folder,
        "hostSystemId": args.hostSystemId,
        "id": args.id,
        "ipAllocationPolicy": args.ipAllocationPolicy,
        "ipProtocol": args.ipProtocol,
        "localOvfPath": args.localOvfPath,
        "name": args.name,
        "ovfNetworkMap": args.ovfNetworkMap,
        "remoteOvfUrl": args.remoteOvfUrl,
        "resourcePoolId": args.resourcePoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOvfVmTemplate.
 */
export interface GetOvfVmTemplateArgs {
    allowUnverifiedSslCert?: boolean;
    datastoreId?: string;
    deploymentOption?: string;
    diskProvisioning?: string;
    enableHiddenProperties?: boolean;
    folder?: string;
    hostSystemId: string;
    id?: string;
    ipAllocationPolicy?: string;
    ipProtocol?: string;
    localOvfPath?: string;
    name: string;
    ovfNetworkMap?: {[key: string]: string};
    remoteOvfUrl?: string;
    resourcePoolId: string;
}

/**
 * A collection of values returned by getOvfVmTemplate.
 */
export interface GetOvfVmTemplateResult {
    readonly allowUnverifiedSslCert?: boolean;
    readonly alternateGuestName: string;
    readonly annotation: string;
    readonly cpuHotAddEnabled: boolean;
    readonly cpuHotRemoveEnabled: boolean;
    readonly cpuPerformanceCountersEnabled: boolean;
    readonly datastoreId?: string;
    readonly deploymentOption?: string;
    readonly diskProvisioning?: string;
    readonly enableHiddenProperties?: boolean;
    readonly firmware: string;
    readonly folder?: string;
    readonly guestId: string;
    readonly hostSystemId: string;
    readonly id: string;
    readonly ideControllerCount: number;
    readonly ipAllocationPolicy?: string;
    readonly ipProtocol?: string;
    readonly localOvfPath?: string;
    readonly memory: number;
    readonly memoryHotAddEnabled: boolean;
    readonly name: string;
    readonly nestedHvEnabled: boolean;
    readonly numCoresPerSocket: number;
    readonly numCpus: number;
    readonly ovfNetworkMap?: {[key: string]: string};
    readonly remoteOvfUrl?: string;
    readonly resourcePoolId: string;
    readonly sataControllerCount: number;
    readonly scsiControllerCount: number;
    readonly scsiType: string;
    readonly swapPlacementPolicy: string;
}
export function getOvfVmTemplateOutput(args: GetOvfVmTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOvfVmTemplateResult> {
    return pulumi.output(args).apply((a: any) => getOvfVmTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getOvfVmTemplate.
 */
export interface GetOvfVmTemplateOutputArgs {
    allowUnverifiedSslCert?: pulumi.Input<boolean>;
    datastoreId?: pulumi.Input<string>;
    deploymentOption?: pulumi.Input<string>;
    diskProvisioning?: pulumi.Input<string>;
    enableHiddenProperties?: pulumi.Input<boolean>;
    folder?: pulumi.Input<string>;
    hostSystemId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipAllocationPolicy?: pulumi.Input<string>;
    ipProtocol?: pulumi.Input<string>;
    localOvfPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    ovfNetworkMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    remoteOvfUrl?: pulumi.Input<string>;
    resourcePoolId: pulumi.Input<string>;
}
