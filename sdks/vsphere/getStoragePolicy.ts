// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStoragePolicy(args: GetStoragePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetStoragePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getStoragePolicy:getStoragePolicy", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStoragePolicy.
 */
export interface GetStoragePolicyArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getStoragePolicy.
 */
export interface GetStoragePolicyResult {
    readonly id: string;
    readonly name: string;
}
export function getStoragePolicyOutput(args: GetStoragePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStoragePolicyResult> {
    return pulumi.output(args).apply((a: any) => getStoragePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getStoragePolicy.
 */
export interface GetStoragePolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
