// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHost(args: GetHostArgs, opts?: pulumi.InvokeOptions): Promise<GetHostResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getHost:getHost", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHost.
 */
export interface GetHostArgs {
    datacenterId: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getHost.
 */
export interface GetHostResult {
    readonly datacenterId: string;
    readonly id: string;
    readonly name?: string;
    readonly resourcePoolId: string;
}
export function getHostOutput(args: GetHostOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostResult> {
    return pulumi.output(args).apply((a: any) => getHost(a, opts))
}

/**
 * A collection of arguments for invoking getHost.
 */
export interface GetHostOutputArgs {
    datacenterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
