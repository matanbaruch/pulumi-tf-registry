// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getResourcePool(args?: GetResourcePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcePoolResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getResourcePool:getResourcePool", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourcePool.
 */
export interface GetResourcePoolArgs {
    datacenterId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getResourcePool.
 */
export interface GetResourcePoolResult {
    readonly datacenterId?: string;
    readonly id: string;
    readonly name?: string;
}
export function getResourcePoolOutput(args?: GetResourcePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcePoolResult> {
    return pulumi.output(args).apply((a: any) => getResourcePool(a, opts))
}

/**
 * A collection of arguments for invoking getResourcePool.
 */
export interface GetResourcePoolOutputArgs {
    datacenterId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
