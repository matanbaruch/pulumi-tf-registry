// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHostThumbprint(args: GetHostThumbprintArgs, opts?: pulumi.InvokeOptions): Promise<GetHostThumbprintResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getHostThumbprint:getHostThumbprint", {
        "address": args.address,
        "id": args.id,
        "insecure": args.insecure,
        "port": args.port,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHostThumbprint.
 */
export interface GetHostThumbprintArgs {
    address: string;
    id?: string;
    insecure?: boolean;
    port?: string;
}

/**
 * A collection of values returned by getHostThumbprint.
 */
export interface GetHostThumbprintResult {
    readonly address: string;
    readonly id: string;
    readonly insecure?: boolean;
    readonly port?: string;
}
export function getHostThumbprintOutput(args: GetHostThumbprintOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostThumbprintResult> {
    return pulumi.output(args).apply((a: any) => getHostThumbprint(a, opts))
}

/**
 * A collection of arguments for invoking getHostThumbprint.
 */
export interface GetHostThumbprintOutputArgs {
    address: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    insecure?: pulumi.Input<boolean>;
    port?: pulumi.Input<string>;
}
