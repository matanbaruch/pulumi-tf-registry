// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLicense(args: GetLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetLicenseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vsphere:index/getLicense:getLicense", {
        "licenseKey": args.licenseKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLicense.
 */
export interface GetLicenseArgs {
    licenseKey: string;
}

/**
 * A collection of values returned by getLicense.
 */
export interface GetLicenseResult {
    readonly editionKey: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly licenseKey: string;
    readonly name: string;
    readonly total: number;
    readonly used: number;
}
export function getLicenseOutput(args: GetLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicenseResult> {
    return pulumi.output(args).apply((a: any) => getLicense(a, opts))
}

/**
 * A collection of arguments for invoking getLicense.
 */
export interface GetLicenseOutputArgs {
    licenseKey: pulumi.Input<string>;
}
