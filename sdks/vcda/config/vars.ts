// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("vcda");

/**
 * The local password of the appliance.
 */
export declare const localPassword: string | undefined;
Object.defineProperty(exports, "localPassword", {
    get() {
        return __config.get("localPassword");
    },
    enumerable: true,
});

/**
 * The local user of the appliance.
 */
export declare const localUser: string | undefined;
Object.defineProperty(exports, "localUser", {
    get() {
        return __config.get("localUser");
    },
    enumerable: true,
});

/**
 * The IP address of either the Cloud Director Replication Management Appliance or the vCenter Replication Management
 * Appliance.
 */
export declare const vcdaIp: string | undefined;
Object.defineProperty(exports, "vcdaIp", {
    get() {
        return __config.get("vcdaIp");
    },
    enumerable: true,
});

/**
 * When set, the vSphere client establishes an insecure TLS connection without performing certificate validations.
 */
export declare const vsphereAllowUnverifiedSsl: boolean | undefined;
Object.defineProperty(exports, "vsphereAllowUnverifiedSsl", {
    get() {
        return __config.getObject<boolean>("vsphereAllowUnverifiedSsl");
    },
    enumerable: true,
});

/**
 * The password of the user for performing vSphere API operations.
 */
export declare const vspherePassword: string | undefined;
Object.defineProperty(exports, "vspherePassword", {
    get() {
        return __config.get("vspherePassword");
    },
    enumerable: true,
});

/**
 * The vSphere server name for performing vSphere API operations.
 */
export declare const vsphereServer: string | undefined;
Object.defineProperty(exports, "vsphereServer", {
    get() {
        return __config.get("vsphereServer");
    },
    enumerable: true,
});

/**
 * The user name for performing vSphere API operations.
 */
export declare const vsphereUser: string | undefined;
Object.defineProperty(exports, "vsphereUser", {
    get() {
        return __config.get("vsphereUser");
    },
    enumerable: true,
});

