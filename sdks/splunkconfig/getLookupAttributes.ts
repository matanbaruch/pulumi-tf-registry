// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLookupAttributes(args: GetLookupAttributesArgs, opts?: pulumi.InvokeOptions): Promise<GetLookupAttributesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("splunkconfig:index/getLookupAttributes:getLookupAttributes", {
        "id": args.id,
        "lookupName": args.lookupName,
        "rowNumberField": args.rowNumberField,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLookupAttributes.
 */
export interface GetLookupAttributesArgs {
    id?: string;
    lookupName: string;
    rowNumberField?: string;
}

/**
 * A collection of values returned by getLookupAttributes.
 */
export interface GetLookupAttributesResult {
    readonly fieldNames: string[];
    readonly id: string;
    readonly lookupName: string;
    readonly rowNumberField?: string;
    readonly rows: {[key: string]: string}[];
}
export function getLookupAttributesOutput(args: GetLookupAttributesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLookupAttributesResult> {
    return pulumi.output(args).apply((a: any) => getLookupAttributes(a, opts))
}

/**
 * A collection of arguments for invoking getLookupAttributes.
 */
export interface GetLookupAttributesOutputArgs {
    id?: pulumi.Input<string>;
    lookupName: pulumi.Input<string>;
    rowNumberField?: pulumi.Input<string>;
}
