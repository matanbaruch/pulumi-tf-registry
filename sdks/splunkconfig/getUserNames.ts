// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUserNames(args?: GetUserNamesArgs, opts?: pulumi.InvokeOptions): Promise<GetUserNamesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("splunkconfig:index/getUserNames:getUserNames", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserNames.
 */
export interface GetUserNamesArgs {
    id?: string;
}

/**
 * A collection of values returned by getUserNames.
 */
export interface GetUserNamesResult {
    readonly id: string;
    readonly userNames: string[];
}
export function getUserNamesOutput(args?: GetUserNamesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserNamesResult> {
    return pulumi.output(args).apply((a: any) => getUserNames(a, opts))
}

/**
 * A collection of arguments for invoking getUserNames.
 */
export interface GetUserNamesOutputArgs {
    id?: pulumi.Input<string>;
}
