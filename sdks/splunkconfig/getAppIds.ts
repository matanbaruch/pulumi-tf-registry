// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAppIds(args?: GetAppIdsArgs, opts?: pulumi.InvokeOptions): Promise<GetAppIdsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("splunkconfig:index/getAppIds:getAppIds", {
        "excludeTags": args.excludeTags,
        "id": args.id,
        "requireTags": args.requireTags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppIds.
 */
export interface GetAppIdsArgs {
    excludeTags?: inputs.GetAppIdsExcludeTag[];
    id?: string;
    requireTags?: inputs.GetAppIdsRequireTag[];
}

/**
 * A collection of values returned by getAppIds.
 */
export interface GetAppIdsResult {
    readonly appIds: string[];
    readonly excludeTags?: outputs.GetAppIdsExcludeTag[];
    readonly id: string;
    readonly requireTags?: outputs.GetAppIdsRequireTag[];
}
export function getAppIdsOutput(args?: GetAppIdsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppIdsResult> {
    return pulumi.output(args).apply((a: any) => getAppIds(a, opts))
}

/**
 * A collection of arguments for invoking getAppIds.
 */
export interface GetAppIdsOutputArgs {
    excludeTags?: pulumi.Input<pulumi.Input<inputs.GetAppIdsExcludeTagArgs>[]>;
    id?: pulumi.Input<string>;
    requireTags?: pulumi.Input<pulumi.Input<inputs.GetAppIdsRequireTagArgs>[]>;
}
