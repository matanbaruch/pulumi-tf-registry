// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppAttributes(args: GetAppAttributesArgs, opts?: pulumi.InvokeOptions): Promise<GetAppAttributesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("splunkconfig:index/getAppAttributes:getAppAttributes", {
        "appId": args.appId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppAttributes.
 */
export interface GetAppAttributesArgs {
    appId: string;
    id?: string;
}

/**
 * A collection of values returned by getAppAttributes.
 */
export interface GetAppAttributesResult {
    readonly aclReads: string[];
    readonly aclSharing: string;
    readonly aclWrites: string[];
    readonly appId: string;
    readonly author: string;
    readonly checkForUpdates: boolean;
    readonly description: string;
    readonly id: string;
    readonly isVisible: boolean;
    readonly name: string;
    readonly version: string;
}
export function getAppAttributesOutput(args: GetAppAttributesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppAttributesResult> {
    return pulumi.output(args).apply((a: any) => getAppAttributes(a, opts))
}

/**
 * A collection of arguments for invoking getAppAttributes.
 */
export interface GetAppAttributesOutputArgs {
    appId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
