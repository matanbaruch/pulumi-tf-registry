// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EmployeeperformanceExternalmetricsDefinitions extends pulumi.CustomResource {
    /**
     * Get an existing EmployeeperformanceExternalmetricsDefinitions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmployeeperformanceExternalmetricsDefinitionsState, opts?: pulumi.CustomResourceOptions): EmployeeperformanceExternalmetricsDefinitions {
        return new EmployeeperformanceExternalmetricsDefinitions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/employeeperformanceExternalmetricsDefinitions:EmployeeperformanceExternalmetricsDefinitions';

    /**
     * Returns true if the given object is an instance of EmployeeperformanceExternalmetricsDefinitions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmployeeperformanceExternalmetricsDefinitions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmployeeperformanceExternalmetricsDefinitions.__pulumiType;
    }

    /**
     * The default objective type of the External Metric Definition
     */
    public readonly defaultObjectiveType!: pulumi.Output<string>;
    /**
     * True if the External Metric Definition is enabled
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The name of the External Metric Definition
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The decimal precision of the External Metric Definition. Must be at least 0 and at most 5
     */
    public readonly precision!: pulumi.Output<number>;
    /**
     * The unit of the External Metric Definition. Note: Changing the unit property will cause the external metric object to be
     * dropped and recreated with a new ID.
     */
    public readonly unit!: pulumi.Output<string>;
    /**
     * The unit definition of the External Metric Definition. Note: Changing the unit definition property will cause the
     * external metric object to be dropped and recreated with a new ID.
     */
    public readonly unitDefinition!: pulumi.Output<string | undefined>;

    /**
     * Create a EmployeeperformanceExternalmetricsDefinitions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmployeeperformanceExternalmetricsDefinitionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmployeeperformanceExternalmetricsDefinitionsArgs | EmployeeperformanceExternalmetricsDefinitionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmployeeperformanceExternalmetricsDefinitionsState | undefined;
            resourceInputs["defaultObjectiveType"] = state ? state.defaultObjectiveType : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["precision"] = state ? state.precision : undefined;
            resourceInputs["unit"] = state ? state.unit : undefined;
            resourceInputs["unitDefinition"] = state ? state.unitDefinition : undefined;
        } else {
            const args = argsOrState as EmployeeperformanceExternalmetricsDefinitionsArgs | undefined;
            if ((!args || args.defaultObjectiveType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultObjectiveType'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.precision === undefined) && !opts.urn) {
                throw new Error("Missing required property 'precision'");
            }
            if ((!args || args.unit === undefined) && !opts.urn) {
                throw new Error("Missing required property 'unit'");
            }
            resourceInputs["defaultObjectiveType"] = args ? args.defaultObjectiveType : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["precision"] = args ? args.precision : undefined;
            resourceInputs["unit"] = args ? args.unit : undefined;
            resourceInputs["unitDefinition"] = args ? args.unitDefinition : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmployeeperformanceExternalmetricsDefinitions.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EmployeeperformanceExternalmetricsDefinitions resources.
 */
export interface EmployeeperformanceExternalmetricsDefinitionsState {
    /**
     * The default objective type of the External Metric Definition
     */
    defaultObjectiveType?: pulumi.Input<string>;
    /**
     * True if the External Metric Definition is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the External Metric Definition
     */
    name?: pulumi.Input<string>;
    /**
     * The decimal precision of the External Metric Definition. Must be at least 0 and at most 5
     */
    precision?: pulumi.Input<number>;
    /**
     * The unit of the External Metric Definition. Note: Changing the unit property will cause the external metric object to be
     * dropped and recreated with a new ID.
     */
    unit?: pulumi.Input<string>;
    /**
     * The unit definition of the External Metric Definition. Note: Changing the unit definition property will cause the
     * external metric object to be dropped and recreated with a new ID.
     */
    unitDefinition?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmployeeperformanceExternalmetricsDefinitions resource.
 */
export interface EmployeeperformanceExternalmetricsDefinitionsArgs {
    /**
     * The default objective type of the External Metric Definition
     */
    defaultObjectiveType: pulumi.Input<string>;
    /**
     * True if the External Metric Definition is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The name of the External Metric Definition
     */
    name?: pulumi.Input<string>;
    /**
     * The decimal precision of the External Metric Definition. Must be at least 0 and at most 5
     */
    precision: pulumi.Input<number>;
    /**
     * The unit of the External Metric Definition. Note: Changing the unit property will cause the external metric object to be
     * dropped and recreated with a new ID.
     */
    unit: pulumi.Input<string>;
    /**
     * The unit definition of the External Metric Definition. Note: Changing the unit definition property will cause the
     * external metric object to be dropped and recreated with a new ID.
     */
    unitDefinition?: pulumi.Input<string>;
}
