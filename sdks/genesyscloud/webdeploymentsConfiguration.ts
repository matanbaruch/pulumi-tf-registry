// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WebdeploymentsConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing WebdeploymentsConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebdeploymentsConfigurationState, opts?: pulumi.CustomResourceOptions): WebdeploymentsConfiguration {
        return new WebdeploymentsConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/webdeploymentsConfiguration:WebdeploymentsConfiguration';

    /**
     * Returns true if the given object is an instance of WebdeploymentsConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebdeploymentsConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebdeploymentsConfiguration.__pulumiType;
    }

    /**
     * Settings for authenticated webdeployments.
     */
    public readonly authenticationSettings!: pulumi.Output<outputs.WebdeploymentsConfigurationAuthenticationSettings | undefined>;
    /**
     * Settings concerning cobrowse
     */
    public readonly cobrowse!: pulumi.Output<outputs.WebdeploymentsConfigurationCobrowse | undefined>;
    /**
     * The localization settings for homescreen app
     */
    public readonly customI18nLabels!: pulumi.Output<outputs.WebdeploymentsConfigurationCustomI18nLabel[] | undefined>;
    /**
     * The default language to use for the configuration.
     */
    public readonly defaultLanguage!: pulumi.Output<string>;
    /**
     * Deployment description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Headless Mode Support which Controls UI components. When enabled, native UI components will be disabled and allows for
     * custom-built UI.
     */
    public readonly headlessModeEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Settings concerning journey events
     */
    public readonly journeyEvents!: pulumi.Output<outputs.WebdeploymentsConfigurationJourneyEvents | undefined>;
    /**
     * A list of languages supported on the configuration.
     */
    public readonly languages!: pulumi.Output<string[]>;
    /**
     * Settings concerning messenger
     */
    public readonly messenger!: pulumi.Output<outputs.WebdeploymentsConfigurationMessenger | undefined>;
    /**
     * Deployment name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Settings concerning position
     */
    public readonly position!: pulumi.Output<outputs.WebdeploymentsConfigurationPosition | undefined>;
    /**
     * The current status of the deployment. Valid values: Pending, Active, Inactive, Error, Deleting.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Settings concerning knowledge portal (previously support center)
     */
    public readonly supportCenter!: pulumi.Output<outputs.WebdeploymentsConfigurationSupportCenter | undefined>;
    /**
     * The version of the configuration.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a WebdeploymentsConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebdeploymentsConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebdeploymentsConfigurationArgs | WebdeploymentsConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebdeploymentsConfigurationState | undefined;
            resourceInputs["authenticationSettings"] = state ? state.authenticationSettings : undefined;
            resourceInputs["cobrowse"] = state ? state.cobrowse : undefined;
            resourceInputs["customI18nLabels"] = state ? state.customI18nLabels : undefined;
            resourceInputs["defaultLanguage"] = state ? state.defaultLanguage : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["headlessModeEnabled"] = state ? state.headlessModeEnabled : undefined;
            resourceInputs["journeyEvents"] = state ? state.journeyEvents : undefined;
            resourceInputs["languages"] = state ? state.languages : undefined;
            resourceInputs["messenger"] = state ? state.messenger : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["position"] = state ? state.position : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["supportCenter"] = state ? state.supportCenter : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as WebdeploymentsConfigurationArgs | undefined;
            if ((!args || args.defaultLanguage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultLanguage'");
            }
            if ((!args || args.languages === undefined) && !opts.urn) {
                throw new Error("Missing required property 'languages'");
            }
            resourceInputs["authenticationSettings"] = args ? args.authenticationSettings : undefined;
            resourceInputs["cobrowse"] = args ? args.cobrowse : undefined;
            resourceInputs["customI18nLabels"] = args ? args.customI18nLabels : undefined;
            resourceInputs["defaultLanguage"] = args ? args.defaultLanguage : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["headlessModeEnabled"] = args ? args.headlessModeEnabled : undefined;
            resourceInputs["journeyEvents"] = args ? args.journeyEvents : undefined;
            resourceInputs["languages"] = args ? args.languages : undefined;
            resourceInputs["messenger"] = args ? args.messenger : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["position"] = args ? args.position : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["supportCenter"] = args ? args.supportCenter : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebdeploymentsConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WebdeploymentsConfiguration resources.
 */
export interface WebdeploymentsConfigurationState {
    /**
     * Settings for authenticated webdeployments.
     */
    authenticationSettings?: pulumi.Input<inputs.WebdeploymentsConfigurationAuthenticationSettings>;
    /**
     * Settings concerning cobrowse
     */
    cobrowse?: pulumi.Input<inputs.WebdeploymentsConfigurationCobrowse>;
    /**
     * The localization settings for homescreen app
     */
    customI18nLabels?: pulumi.Input<pulumi.Input<inputs.WebdeploymentsConfigurationCustomI18nLabel>[]>;
    /**
     * The default language to use for the configuration.
     */
    defaultLanguage?: pulumi.Input<string>;
    /**
     * Deployment description
     */
    description?: pulumi.Input<string>;
    /**
     * Headless Mode Support which Controls UI components. When enabled, native UI components will be disabled and allows for
     * custom-built UI.
     */
    headlessModeEnabled?: pulumi.Input<boolean>;
    /**
     * Settings concerning journey events
     */
    journeyEvents?: pulumi.Input<inputs.WebdeploymentsConfigurationJourneyEvents>;
    /**
     * A list of languages supported on the configuration.
     */
    languages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Settings concerning messenger
     */
    messenger?: pulumi.Input<inputs.WebdeploymentsConfigurationMessenger>;
    /**
     * Deployment name
     */
    name?: pulumi.Input<string>;
    /**
     * Settings concerning position
     */
    position?: pulumi.Input<inputs.WebdeploymentsConfigurationPosition>;
    /**
     * The current status of the deployment. Valid values: Pending, Active, Inactive, Error, Deleting.
     */
    status?: pulumi.Input<string>;
    /**
     * Settings concerning knowledge portal (previously support center)
     */
    supportCenter?: pulumi.Input<inputs.WebdeploymentsConfigurationSupportCenter>;
    /**
     * The version of the configuration.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebdeploymentsConfiguration resource.
 */
export interface WebdeploymentsConfigurationArgs {
    /**
     * Settings for authenticated webdeployments.
     */
    authenticationSettings?: pulumi.Input<inputs.WebdeploymentsConfigurationAuthenticationSettings>;
    /**
     * Settings concerning cobrowse
     */
    cobrowse?: pulumi.Input<inputs.WebdeploymentsConfigurationCobrowse>;
    /**
     * The localization settings for homescreen app
     */
    customI18nLabels?: pulumi.Input<pulumi.Input<inputs.WebdeploymentsConfigurationCustomI18nLabel>[]>;
    /**
     * The default language to use for the configuration.
     */
    defaultLanguage: pulumi.Input<string>;
    /**
     * Deployment description
     */
    description?: pulumi.Input<string>;
    /**
     * Headless Mode Support which Controls UI components. When enabled, native UI components will be disabled and allows for
     * custom-built UI.
     */
    headlessModeEnabled?: pulumi.Input<boolean>;
    /**
     * Settings concerning journey events
     */
    journeyEvents?: pulumi.Input<inputs.WebdeploymentsConfigurationJourneyEvents>;
    /**
     * A list of languages supported on the configuration.
     */
    languages: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Settings concerning messenger
     */
    messenger?: pulumi.Input<inputs.WebdeploymentsConfigurationMessenger>;
    /**
     * Deployment name
     */
    name?: pulumi.Input<string>;
    /**
     * Settings concerning position
     */
    position?: pulumi.Input<inputs.WebdeploymentsConfigurationPosition>;
    /**
     * The current status of the deployment. Valid values: Pending, Active, Inactive, Error, Deleting.
     */
    status?: pulumi.Input<string>;
    /**
     * Settings concerning knowledge portal (previously support center)
     */
    supportCenter?: pulumi.Input<inputs.WebdeploymentsConfigurationSupportCenter>;
}
