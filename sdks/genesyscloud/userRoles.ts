// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class UserRoles extends pulumi.CustomResource {
    /**
     * Get an existing UserRoles resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserRolesState, opts?: pulumi.CustomResourceOptions): UserRoles {
        return new UserRoles(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/userRoles:UserRoles';

    /**
     * Returns true if the given object is an instance of UserRoles.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserRoles {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserRoles.__pulumiType;
    }

    /**
     * Roles and their divisions assigned to this user.
     */
    public readonly roles!: pulumi.Output<outputs.UserRolesRole[] | undefined>;
    /**
     * User ID that will be managed by this resource. Changing the user_id attribute will cause the roles object to be dropped
     * and recreated with a new ID.
     */
    public readonly userId!: pulumi.Output<string>;

    /**
     * Create a UserRoles resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserRolesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserRolesArgs | UserRolesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserRolesState | undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as UserRolesArgs | undefined;
            if ((!args || args.userId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["roles"] = args ? args.roles : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserRoles.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering UserRoles resources.
 */
export interface UserRolesState {
    /**
     * Roles and their divisions assigned to this user.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.UserRolesRole>[]>;
    /**
     * User ID that will be managed by this resource. Changing the user_id attribute will cause the roles object to be dropped
     * and recreated with a new ID.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserRoles resource.
 */
export interface UserRolesArgs {
    /**
     * Roles and their divisions assigned to this user.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.UserRolesRole>[]>;
    /**
     * User ID that will be managed by this resource. Changing the user_id attribute will cause the roles object to be dropped
     * and recreated with a new ID.
     */
    userId: pulumi.Input<string>;
}
