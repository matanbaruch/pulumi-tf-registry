// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RoutingEmailRoute extends pulumi.CustomResource {
    /**
     * Get an existing RoutingEmailRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingEmailRouteState, opts?: pulumi.CustomResourceOptions): RoutingEmailRoute {
        return new RoutingEmailRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/routingEmailRoute:RoutingEmailRoute';

    /**
     * Returns true if the given object is an instance of RoutingEmailRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutingEmailRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutingEmailRoute.__pulumiType;
    }

    /**
     * The recipients that should be automatically blind copied on outbound emails associated with this route. This should not
     * be set if reply_email_address is specified.
     */
    public readonly autoBccs!: pulumi.Output<outputs.RoutingEmailRouteAutoBcc[] | undefined>;
    /**
     * ID of the routing domain such as: 'example.com'. Changing the domain_id attribute will cause the email_route object to
     * be dropped and recreated with a new ID.
     */
    public readonly domainId!: pulumi.Output<string>;
    /**
     * The flow to use for processing the email. This should not be set if a queue_id is specified.
     */
    public readonly flowId!: pulumi.Output<string | undefined>;
    /**
     * The sender email to use for outgoing replies. This should not be set if reply_email_address is specified.
     */
    public readonly fromEmail!: pulumi.Output<string | undefined>;
    /**
     * The sender name to use for outgoing replies.
     */
    public readonly fromName!: pulumi.Output<string>;
    /**
     * The language to use for routing.
     */
    public readonly languageId!: pulumi.Output<string | undefined>;
    /**
     * The search pattern that the mailbox name should match.
     */
    public readonly pattern!: pulumi.Output<string>;
    /**
     * The priority to use for routing.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * The queue to route the emails to. This should not be set if a flow_id is specified.
     */
    public readonly queueId!: pulumi.Output<string | undefined>;
    /**
     * The route to use for email replies. This should not be set if from_email or auto_bcc are specified.
     */
    public readonly replyEmailAddress!: pulumi.Output<outputs.RoutingEmailRouteReplyEmailAddress | undefined>;
    /**
     * The skills to use for routing.
     */
    public readonly skillIds!: pulumi.Output<string[] | undefined>;
    /**
     * The flow to use for processing inbound emails that have been marked as spam.
     */
    public readonly spamFlowId!: pulumi.Output<string | undefined>;

    /**
     * Create a RoutingEmailRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoutingEmailRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutingEmailRouteArgs | RoutingEmailRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutingEmailRouteState | undefined;
            resourceInputs["autoBccs"] = state ? state.autoBccs : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["flowId"] = state ? state.flowId : undefined;
            resourceInputs["fromEmail"] = state ? state.fromEmail : undefined;
            resourceInputs["fromName"] = state ? state.fromName : undefined;
            resourceInputs["languageId"] = state ? state.languageId : undefined;
            resourceInputs["pattern"] = state ? state.pattern : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["queueId"] = state ? state.queueId : undefined;
            resourceInputs["replyEmailAddress"] = state ? state.replyEmailAddress : undefined;
            resourceInputs["skillIds"] = state ? state.skillIds : undefined;
            resourceInputs["spamFlowId"] = state ? state.spamFlowId : undefined;
        } else {
            const args = argsOrState as RoutingEmailRouteArgs | undefined;
            if ((!args || args.domainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainId'");
            }
            if ((!args || args.fromName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fromName'");
            }
            if ((!args || args.pattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pattern'");
            }
            resourceInputs["autoBccs"] = args ? args.autoBccs : undefined;
            resourceInputs["domainId"] = args ? args.domainId : undefined;
            resourceInputs["flowId"] = args ? args.flowId : undefined;
            resourceInputs["fromEmail"] = args ? args.fromEmail : undefined;
            resourceInputs["fromName"] = args ? args.fromName : undefined;
            resourceInputs["languageId"] = args ? args.languageId : undefined;
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["queueId"] = args ? args.queueId : undefined;
            resourceInputs["replyEmailAddress"] = args ? args.replyEmailAddress : undefined;
            resourceInputs["skillIds"] = args ? args.skillIds : undefined;
            resourceInputs["spamFlowId"] = args ? args.spamFlowId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutingEmailRoute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoutingEmailRoute resources.
 */
export interface RoutingEmailRouteState {
    /**
     * The recipients that should be automatically blind copied on outbound emails associated with this route. This should not
     * be set if reply_email_address is specified.
     */
    autoBccs?: pulumi.Input<pulumi.Input<inputs.RoutingEmailRouteAutoBcc>[]>;
    /**
     * ID of the routing domain such as: 'example.com'. Changing the domain_id attribute will cause the email_route object to
     * be dropped and recreated with a new ID.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The flow to use for processing the email. This should not be set if a queue_id is specified.
     */
    flowId?: pulumi.Input<string>;
    /**
     * The sender email to use for outgoing replies. This should not be set if reply_email_address is specified.
     */
    fromEmail?: pulumi.Input<string>;
    /**
     * The sender name to use for outgoing replies.
     */
    fromName?: pulumi.Input<string>;
    /**
     * The language to use for routing.
     */
    languageId?: pulumi.Input<string>;
    /**
     * The search pattern that the mailbox name should match.
     */
    pattern?: pulumi.Input<string>;
    /**
     * The priority to use for routing.
     */
    priority?: pulumi.Input<number>;
    /**
     * The queue to route the emails to. This should not be set if a flow_id is specified.
     */
    queueId?: pulumi.Input<string>;
    /**
     * The route to use for email replies. This should not be set if from_email or auto_bcc are specified.
     */
    replyEmailAddress?: pulumi.Input<inputs.RoutingEmailRouteReplyEmailAddress>;
    /**
     * The skills to use for routing.
     */
    skillIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The flow to use for processing inbound emails that have been marked as spam.
     */
    spamFlowId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoutingEmailRoute resource.
 */
export interface RoutingEmailRouteArgs {
    /**
     * The recipients that should be automatically blind copied on outbound emails associated with this route. This should not
     * be set if reply_email_address is specified.
     */
    autoBccs?: pulumi.Input<pulumi.Input<inputs.RoutingEmailRouteAutoBcc>[]>;
    /**
     * ID of the routing domain such as: 'example.com'. Changing the domain_id attribute will cause the email_route object to
     * be dropped and recreated with a new ID.
     */
    domainId: pulumi.Input<string>;
    /**
     * The flow to use for processing the email. This should not be set if a queue_id is specified.
     */
    flowId?: pulumi.Input<string>;
    /**
     * The sender email to use for outgoing replies. This should not be set if reply_email_address is specified.
     */
    fromEmail?: pulumi.Input<string>;
    /**
     * The sender name to use for outgoing replies.
     */
    fromName: pulumi.Input<string>;
    /**
     * The language to use for routing.
     */
    languageId?: pulumi.Input<string>;
    /**
     * The search pattern that the mailbox name should match.
     */
    pattern: pulumi.Input<string>;
    /**
     * The priority to use for routing.
     */
    priority?: pulumi.Input<number>;
    /**
     * The queue to route the emails to. This should not be set if a flow_id is specified.
     */
    queueId?: pulumi.Input<string>;
    /**
     * The route to use for email replies. This should not be set if from_email or auto_bcc are specified.
     */
    replyEmailAddress?: pulumi.Input<inputs.RoutingEmailRouteReplyEmailAddress>;
    /**
     * The skills to use for routing.
     */
    skillIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The flow to use for processing inbound emails that have been marked as spam.
     */
    spamFlowId?: pulumi.Input<string>;
}
