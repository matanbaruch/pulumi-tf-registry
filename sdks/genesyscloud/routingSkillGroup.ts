// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RoutingSkillGroup extends pulumi.CustomResource {
    /**
     * Get an existing RoutingSkillGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingSkillGroupState, opts?: pulumi.CustomResourceOptions): RoutingSkillGroup {
        return new RoutingSkillGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/routingSkillGroup:RoutingSkillGroup';

    /**
     * Returns true if the given object is an instance of RoutingSkillGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutingSkillGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutingSkillGroup.__pulumiType;
    }

    /**
     * Description of the skill group
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The division to which this entity belongs
     */
    public readonly divisionId!: pulumi.Output<string>;
    /**
     * The IDs of member divisions to add or remove for this skill group. An empty array means all divisions will be removed,
     * '*' means all divisions will be added.
     */
    public readonly memberDivisionIds!: pulumi.Output<string[] | undefined>;
    /**
     * The group name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * JSON encoded array of rules that will be used to determine group membership.
     */
    public readonly skillConditions!: pulumi.Output<string>;

    /**
     * Create a RoutingSkillGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoutingSkillGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutingSkillGroupArgs | RoutingSkillGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutingSkillGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["divisionId"] = state ? state.divisionId : undefined;
            resourceInputs["memberDivisionIds"] = state ? state.memberDivisionIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["skillConditions"] = state ? state.skillConditions : undefined;
        } else {
            const args = argsOrState as RoutingSkillGroupArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["divisionId"] = args ? args.divisionId : undefined;
            resourceInputs["memberDivisionIds"] = args ? args.memberDivisionIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["skillConditions"] = args ? args.skillConditions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutingSkillGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoutingSkillGroup resources.
 */
export interface RoutingSkillGroupState {
    /**
     * Description of the skill group
     */
    description?: pulumi.Input<string>;
    /**
     * The division to which this entity belongs
     */
    divisionId?: pulumi.Input<string>;
    /**
     * The IDs of member divisions to add or remove for this skill group. An empty array means all divisions will be removed,
     * '*' means all divisions will be added.
     */
    memberDivisionIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The group name
     */
    name?: pulumi.Input<string>;
    /**
     * JSON encoded array of rules that will be used to determine group membership.
     */
    skillConditions?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoutingSkillGroup resource.
 */
export interface RoutingSkillGroupArgs {
    /**
     * Description of the skill group
     */
    description?: pulumi.Input<string>;
    /**
     * The division to which this entity belongs
     */
    divisionId?: pulumi.Input<string>;
    /**
     * The IDs of member divisions to add or remove for this skill group. An empty array means all divisions will be removed,
     * '*' means all divisions will be added.
     */
    memberDivisionIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The group name
     */
    name?: pulumi.Input<string>;
    /**
     * JSON encoded array of rules that will be used to determine group membership.
     */
    skillConditions?: pulumi.Input<string>;
}
