// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OutboundCampaignrule extends pulumi.CustomResource {
    /**
     * Get an existing OutboundCampaignrule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OutboundCampaignruleState, opts?: pulumi.CustomResourceOptions): OutboundCampaignrule {
        return new OutboundCampaignrule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/outboundCampaignrule:OutboundCampaignrule';

    /**
     * Returns true if the given object is an instance of OutboundCampaignrule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OutboundCampaignrule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OutboundCampaignrule.__pulumiType;
    }

    /**
     * The list of actions that are executed if the conditions are satisfied.
     */
    public readonly campaignRuleActions!: pulumi.Output<outputs.OutboundCampaignruleCampaignRuleAction[]>;
    /**
     * The list of conditions that are evaluated on the entities.
     */
    public readonly campaignRuleConditions!: pulumi.Output<outputs.OutboundCampaignruleCampaignRuleCondition[]>;
    /**
     * The list of entities that this campaign rule monitors.
     */
    public readonly campaignRuleEntities!: pulumi.Output<outputs.OutboundCampaignruleCampaignRuleEntities>;
    /**
     * Whether or not this campaign rule is currently enabled. Defaults to `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Whether actions are executed if any condition is met, or only when all conditions are met. Defaults to `false`.
     */
    public readonly matchAnyConditions!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the campaign rule.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a OutboundCampaignrule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OutboundCampaignruleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OutboundCampaignruleArgs | OutboundCampaignruleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OutboundCampaignruleState | undefined;
            resourceInputs["campaignRuleActions"] = state ? state.campaignRuleActions : undefined;
            resourceInputs["campaignRuleConditions"] = state ? state.campaignRuleConditions : undefined;
            resourceInputs["campaignRuleEntities"] = state ? state.campaignRuleEntities : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["matchAnyConditions"] = state ? state.matchAnyConditions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as OutboundCampaignruleArgs | undefined;
            if ((!args || args.campaignRuleActions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'campaignRuleActions'");
            }
            if ((!args || args.campaignRuleConditions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'campaignRuleConditions'");
            }
            if ((!args || args.campaignRuleEntities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'campaignRuleEntities'");
            }
            resourceInputs["campaignRuleActions"] = args ? args.campaignRuleActions : undefined;
            resourceInputs["campaignRuleConditions"] = args ? args.campaignRuleConditions : undefined;
            resourceInputs["campaignRuleEntities"] = args ? args.campaignRuleEntities : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["matchAnyConditions"] = args ? args.matchAnyConditions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OutboundCampaignrule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OutboundCampaignrule resources.
 */
export interface OutboundCampaignruleState {
    /**
     * The list of actions that are executed if the conditions are satisfied.
     */
    campaignRuleActions?: pulumi.Input<pulumi.Input<inputs.OutboundCampaignruleCampaignRuleAction>[]>;
    /**
     * The list of conditions that are evaluated on the entities.
     */
    campaignRuleConditions?: pulumi.Input<pulumi.Input<inputs.OutboundCampaignruleCampaignRuleCondition>[]>;
    /**
     * The list of entities that this campaign rule monitors.
     */
    campaignRuleEntities?: pulumi.Input<inputs.OutboundCampaignruleCampaignRuleEntities>;
    /**
     * Whether or not this campaign rule is currently enabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Whether actions are executed if any condition is met, or only when all conditions are met. Defaults to `false`.
     */
    matchAnyConditions?: pulumi.Input<boolean>;
    /**
     * The name of the campaign rule.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OutboundCampaignrule resource.
 */
export interface OutboundCampaignruleArgs {
    /**
     * The list of actions that are executed if the conditions are satisfied.
     */
    campaignRuleActions: pulumi.Input<pulumi.Input<inputs.OutboundCampaignruleCampaignRuleAction>[]>;
    /**
     * The list of conditions that are evaluated on the entities.
     */
    campaignRuleConditions: pulumi.Input<pulumi.Input<inputs.OutboundCampaignruleCampaignRuleCondition>[]>;
    /**
     * The list of entities that this campaign rule monitors.
     */
    campaignRuleEntities: pulumi.Input<inputs.OutboundCampaignruleCampaignRuleEntities>;
    /**
     * Whether or not this campaign rule is currently enabled. Defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Whether actions are executed if any condition is met, or only when all conditions are met. Defaults to `false`.
     */
    matchAnyConditions?: pulumi.Input<boolean>;
    /**
     * The name of the campaign rule.
     */
    name?: pulumi.Input<string>;
}
