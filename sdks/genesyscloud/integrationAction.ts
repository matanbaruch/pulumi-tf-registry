// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IntegrationAction extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationActionState, opts?: pulumi.CustomResourceOptions): IntegrationAction {
        return new IntegrationAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/integrationAction:IntegrationAction';

    /**
     * Returns true if the given object is an instance of IntegrationAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationAction.__pulumiType;
    }

    /**
     * Category of action. Can be up to 256 characters long.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Configuration of outbound request.
     */
    public readonly configRequest!: pulumi.Output<outputs.IntegrationActionConfigRequest | undefined>;
    /**
     * Configuration of response processing.
     */
    public readonly configResponse!: pulumi.Output<outputs.IntegrationActionConfigResponse | undefined>;
    /**
     * Optional 1-60 second timeout enforced on the execution or test of this action. This setting is invalid for Custom
     * Authentication Actions.
     */
    public readonly configTimeoutSeconds!: pulumi.Output<number | undefined>;
    /**
     * JSON Schema that defines the body of the request that the client (edge/architect/postman) is sending to the service, on
     * the /execute path. Changing the contract_input attribute will cause the existing integration_action to be dropped and
     * recreated with a new ID.
     */
    public readonly contractInput!: pulumi.Output<string>;
    /**
     * JSON schema that defines the transformed, successful result that will be sent back to the caller. Changing the
     * contract_output attribute will cause the existing integration_action to be dropped and recreated with a new ID.
     */
    public readonly contractOutput!: pulumi.Output<string>;
    /**
     * The ID of the integration this action is associated with. Changing the integration_id attribute will cause the existing
     * integration_action to be dropped and recreated with a new ID.
     */
    public readonly integrationId!: pulumi.Output<string>;
    /**
     * Name of the action. Can be up to 256 characters long
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indication of whether or not the action is designed to accept sensitive data. Changing the secure attribute will cause
     * the existing integration_action to be dropped and recreated with a new ID. Defaults to `false`.
     */
    public readonly secure!: pulumi.Output<boolean | undefined>;

    /**
     * Create a IntegrationAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationActionArgs | IntegrationActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationActionState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["configRequest"] = state ? state.configRequest : undefined;
            resourceInputs["configResponse"] = state ? state.configResponse : undefined;
            resourceInputs["configTimeoutSeconds"] = state ? state.configTimeoutSeconds : undefined;
            resourceInputs["contractInput"] = state ? state.contractInput : undefined;
            resourceInputs["contractOutput"] = state ? state.contractOutput : undefined;
            resourceInputs["integrationId"] = state ? state.integrationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["secure"] = state ? state.secure : undefined;
        } else {
            const args = argsOrState as IntegrationActionArgs | undefined;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.contractInput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contractInput'");
            }
            if ((!args || args.contractOutput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contractOutput'");
            }
            if ((!args || args.integrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationId'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["configRequest"] = args ? args.configRequest : undefined;
            resourceInputs["configResponse"] = args ? args.configResponse : undefined;
            resourceInputs["configTimeoutSeconds"] = args ? args.configTimeoutSeconds : undefined;
            resourceInputs["contractInput"] = args ? args.contractInput : undefined;
            resourceInputs["contractOutput"] = args ? args.contractOutput : undefined;
            resourceInputs["integrationId"] = args ? args.integrationId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["secure"] = args ? args.secure : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationAction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IntegrationAction resources.
 */
export interface IntegrationActionState {
    /**
     * Category of action. Can be up to 256 characters long.
     */
    category?: pulumi.Input<string>;
    /**
     * Configuration of outbound request.
     */
    configRequest?: pulumi.Input<inputs.IntegrationActionConfigRequest>;
    /**
     * Configuration of response processing.
     */
    configResponse?: pulumi.Input<inputs.IntegrationActionConfigResponse>;
    /**
     * Optional 1-60 second timeout enforced on the execution or test of this action. This setting is invalid for Custom
     * Authentication Actions.
     */
    configTimeoutSeconds?: pulumi.Input<number>;
    /**
     * JSON Schema that defines the body of the request that the client (edge/architect/postman) is sending to the service, on
     * the /execute path. Changing the contract_input attribute will cause the existing integration_action to be dropped and
     * recreated with a new ID.
     */
    contractInput?: pulumi.Input<string>;
    /**
     * JSON schema that defines the transformed, successful result that will be sent back to the caller. Changing the
     * contract_output attribute will cause the existing integration_action to be dropped and recreated with a new ID.
     */
    contractOutput?: pulumi.Input<string>;
    /**
     * The ID of the integration this action is associated with. Changing the integration_id attribute will cause the existing
     * integration_action to be dropped and recreated with a new ID.
     */
    integrationId?: pulumi.Input<string>;
    /**
     * Name of the action. Can be up to 256 characters long
     */
    name?: pulumi.Input<string>;
    /**
     * Indication of whether or not the action is designed to accept sensitive data. Changing the secure attribute will cause
     * the existing integration_action to be dropped and recreated with a new ID. Defaults to `false`.
     */
    secure?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a IntegrationAction resource.
 */
export interface IntegrationActionArgs {
    /**
     * Category of action. Can be up to 256 characters long.
     */
    category: pulumi.Input<string>;
    /**
     * Configuration of outbound request.
     */
    configRequest?: pulumi.Input<inputs.IntegrationActionConfigRequest>;
    /**
     * Configuration of response processing.
     */
    configResponse?: pulumi.Input<inputs.IntegrationActionConfigResponse>;
    /**
     * Optional 1-60 second timeout enforced on the execution or test of this action. This setting is invalid for Custom
     * Authentication Actions.
     */
    configTimeoutSeconds?: pulumi.Input<number>;
    /**
     * JSON Schema that defines the body of the request that the client (edge/architect/postman) is sending to the service, on
     * the /execute path. Changing the contract_input attribute will cause the existing integration_action to be dropped and
     * recreated with a new ID.
     */
    contractInput: pulumi.Input<string>;
    /**
     * JSON schema that defines the transformed, successful result that will be sent back to the caller. Changing the
     * contract_output attribute will cause the existing integration_action to be dropped and recreated with a new ID.
     */
    contractOutput: pulumi.Input<string>;
    /**
     * The ID of the integration this action is associated with. Changing the integration_id attribute will cause the existing
     * integration_action to be dropped and recreated with a new ID.
     */
    integrationId: pulumi.Input<string>;
    /**
     * Name of the action. Can be up to 256 characters long
     */
    name?: pulumi.Input<string>;
    /**
     * Indication of whether or not the action is designed to accept sensitive data. Changing the secure attribute will cause
     * the existing integration_action to be dropped and recreated with a new ID. Defaults to `false`.
     */
    secure?: pulumi.Input<boolean>;
}
