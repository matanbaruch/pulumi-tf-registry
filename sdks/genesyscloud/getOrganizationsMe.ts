// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationsMe(args?: GetOrganizationsMeArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationsMeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("genesyscloud:index/getOrganizationsMe:getOrganizationsMe", {
        "defaultCountryCode": args.defaultCountryCode,
        "defaultLanguage": args.defaultLanguage,
        "defaultSiteId": args.defaultSiteId,
        "domain": args.domain,
        "id": args.id,
        "name": args.name,
        "productPlatform": args.productPlatform,
        "supportUri": args.supportUri,
        "thirdPartyOrgName": args.thirdPartyOrgName,
        "voicemailEnabled": args.voicemailEnabled,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationsMe.
 */
export interface GetOrganizationsMeArgs {
    defaultCountryCode?: string;
    defaultLanguage?: string;
    defaultSiteId?: string;
    domain?: string;
    id?: string;
    name?: string;
    productPlatform?: string;
    supportUri?: string;
    thirdPartyOrgName?: string;
    voicemailEnabled?: boolean;
}

/**
 * A collection of values returned by getOrganizationsMe.
 */
export interface GetOrganizationsMeResult {
    readonly defaultCountryCode: string;
    readonly defaultLanguage: string;
    readonly defaultSiteId: string;
    readonly domain: string;
    readonly id: string;
    readonly name: string;
    readonly productPlatform: string;
    readonly supportUri: string;
    readonly thirdPartyOrgName: string;
    readonly voicemailEnabled: boolean;
}
export function getOrganizationsMeOutput(args?: GetOrganizationsMeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationsMeResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationsMe(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationsMe.
 */
export interface GetOrganizationsMeOutputArgs {
    defaultCountryCode?: pulumi.Input<string>;
    defaultLanguage?: pulumi.Input<string>;
    defaultSiteId?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    productPlatform?: pulumi.Input<string>;
    supportUri?: pulumi.Input<string>;
    thirdPartyOrgName?: pulumi.Input<string>;
    voicemailEnabled?: pulumi.Input<boolean>;
}
