// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OrganizationAuthenticationSettings extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationAuthenticationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationAuthenticationSettingsState, opts?: pulumi.CustomResourceOptions): OrganizationAuthenticationSettings {
        return new OrganizationAuthenticationSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/organizationAuthenticationSettings:OrganizationAuthenticationSettings';

    /**
     * Returns true if the given object is an instance of OrganizationAuthenticationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationAuthenticationSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationAuthenticationSettings.__pulumiType;
    }

    /**
     * Indicates whether the domain allowlist is enabled.
     */
    public readonly domainAllowlistEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The list of domains that will be allowed to embed Genesys Cloud applications.
     */
    public readonly domainAllowlists!: pulumi.Output<string[] | undefined>;
    /**
     * The list of IP addresses that will be allowed to authenticate with Genesys Cloud. Warning: Changing these will result in
     * only allowing specified ip Addresses to log in and will invalidate credentials with a different ip address
     */
    public readonly ipAddressAllowlists!: pulumi.Output<string[] | undefined>;
    /**
     * Indicates whether multi-factor authentication is required.
     */
    public readonly multifactorAuthenticationRequired!: pulumi.Output<boolean | undefined>;
    /**
     * The password requirements for the organization.
     */
    public readonly passwordRequirements!: pulumi.Output<outputs.OrganizationAuthenticationSettingsPasswordRequirements | undefined>;

    /**
     * Create a OrganizationAuthenticationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationAuthenticationSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationAuthenticationSettingsArgs | OrganizationAuthenticationSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationAuthenticationSettingsState | undefined;
            resourceInputs["domainAllowlistEnabled"] = state ? state.domainAllowlistEnabled : undefined;
            resourceInputs["domainAllowlists"] = state ? state.domainAllowlists : undefined;
            resourceInputs["ipAddressAllowlists"] = state ? state.ipAddressAllowlists : undefined;
            resourceInputs["multifactorAuthenticationRequired"] = state ? state.multifactorAuthenticationRequired : undefined;
            resourceInputs["passwordRequirements"] = state ? state.passwordRequirements : undefined;
        } else {
            const args = argsOrState as OrganizationAuthenticationSettingsArgs | undefined;
            resourceInputs["domainAllowlistEnabled"] = args ? args.domainAllowlistEnabled : undefined;
            resourceInputs["domainAllowlists"] = args ? args.domainAllowlists : undefined;
            resourceInputs["ipAddressAllowlists"] = args ? args.ipAddressAllowlists : undefined;
            resourceInputs["multifactorAuthenticationRequired"] = args ? args.multifactorAuthenticationRequired : undefined;
            resourceInputs["passwordRequirements"] = args ? args.passwordRequirements : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationAuthenticationSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationAuthenticationSettings resources.
 */
export interface OrganizationAuthenticationSettingsState {
    /**
     * Indicates whether the domain allowlist is enabled.
     */
    domainAllowlistEnabled?: pulumi.Input<boolean>;
    /**
     * The list of domains that will be allowed to embed Genesys Cloud applications.
     */
    domainAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of IP addresses that will be allowed to authenticate with Genesys Cloud. Warning: Changing these will result in
     * only allowing specified ip Addresses to log in and will invalidate credentials with a different ip address
     */
    ipAddressAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether multi-factor authentication is required.
     */
    multifactorAuthenticationRequired?: pulumi.Input<boolean>;
    /**
     * The password requirements for the organization.
     */
    passwordRequirements?: pulumi.Input<inputs.OrganizationAuthenticationSettingsPasswordRequirements>;
}

/**
 * The set of arguments for constructing a OrganizationAuthenticationSettings resource.
 */
export interface OrganizationAuthenticationSettingsArgs {
    /**
     * Indicates whether the domain allowlist is enabled.
     */
    domainAllowlistEnabled?: pulumi.Input<boolean>;
    /**
     * The list of domains that will be allowed to embed Genesys Cloud applications.
     */
    domainAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of IP addresses that will be allowed to authenticate with Genesys Cloud. Warning: Changing these will result in
     * only allowing specified ip Addresses to log in and will invalidate credentials with a different ip address
     */
    ipAddressAllowlists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether multi-factor authentication is required.
     */
    multifactorAuthenticationRequired?: pulumi.Input<boolean>;
    /**
     * The password requirements for the organization.
     */
    passwordRequirements?: pulumi.Input<inputs.OrganizationAuthenticationSettingsPasswordRequirements>;
}
