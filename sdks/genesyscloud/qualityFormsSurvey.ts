// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class QualityFormsSurvey extends pulumi.CustomResource {
    /**
     * Get an existing QualityFormsSurvey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QualityFormsSurveyState, opts?: pulumi.CustomResourceOptions): QualityFormsSurvey {
        return new QualityFormsSurvey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/qualityFormsSurvey:QualityFormsSurvey';

    /**
     * Returns true if the given object is an instance of QualityFormsSurvey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QualityFormsSurvey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QualityFormsSurvey.__pulumiType;
    }

    /**
     * Is this form disabled Defaults to `false`.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Markdown text for the bottom of the form.
     */
    public readonly footer!: pulumi.Output<string | undefined>;
    /**
     * Markdown text for the top of the form.
     */
    public readonly header!: pulumi.Output<string | undefined>;
    /**
     * Language for survey viewer localization. Currently localized languages: da, de, en-US, es, fi, fr, it, ja, ko, nl, no,
     * pl, pt-BR, sv, th, tr, zh-CH, zh-TW
     */
    public readonly language!: pulumi.Output<string>;
    /**
     * The name of the entity.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies if the survey form is published. Defaults to `false`.
     */
    public readonly published!: pulumi.Output<boolean | undefined>;
    /**
     * A list of question groups.
     */
    public readonly questionGroups!: pulumi.Output<outputs.QualityFormsSurveyQuestionGroup[]>;

    /**
     * Create a QualityFormsSurvey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QualityFormsSurveyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QualityFormsSurveyArgs | QualityFormsSurveyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QualityFormsSurveyState | undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["footer"] = state ? state.footer : undefined;
            resourceInputs["header"] = state ? state.header : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["published"] = state ? state.published : undefined;
            resourceInputs["questionGroups"] = state ? state.questionGroups : undefined;
        } else {
            const args = argsOrState as QualityFormsSurveyArgs | undefined;
            if ((!args || args.language === undefined) && !opts.urn) {
                throw new Error("Missing required property 'language'");
            }
            if ((!args || args.questionGroups === undefined) && !opts.urn) {
                throw new Error("Missing required property 'questionGroups'");
            }
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["footer"] = args ? args.footer : undefined;
            resourceInputs["header"] = args ? args.header : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["published"] = args ? args.published : undefined;
            resourceInputs["questionGroups"] = args ? args.questionGroups : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QualityFormsSurvey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering QualityFormsSurvey resources.
 */
export interface QualityFormsSurveyState {
    /**
     * Is this form disabled Defaults to `false`.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Markdown text for the bottom of the form.
     */
    footer?: pulumi.Input<string>;
    /**
     * Markdown text for the top of the form.
     */
    header?: pulumi.Input<string>;
    /**
     * Language for survey viewer localization. Currently localized languages: da, de, en-US, es, fi, fr, it, ja, ko, nl, no,
     * pl, pt-BR, sv, th, tr, zh-CH, zh-TW
     */
    language?: pulumi.Input<string>;
    /**
     * The name of the entity.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies if the survey form is published. Defaults to `false`.
     */
    published?: pulumi.Input<boolean>;
    /**
     * A list of question groups.
     */
    questionGroups?: pulumi.Input<pulumi.Input<inputs.QualityFormsSurveyQuestionGroup>[]>;
}

/**
 * The set of arguments for constructing a QualityFormsSurvey resource.
 */
export interface QualityFormsSurveyArgs {
    /**
     * Is this form disabled Defaults to `false`.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Markdown text for the bottom of the form.
     */
    footer?: pulumi.Input<string>;
    /**
     * Markdown text for the top of the form.
     */
    header?: pulumi.Input<string>;
    /**
     * Language for survey viewer localization. Currently localized languages: da, de, en-US, es, fi, fr, it, ja, ko, nl, no,
     * pl, pt-BR, sv, th, tr, zh-CH, zh-TW
     */
    language: pulumi.Input<string>;
    /**
     * The name of the entity.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies if the survey form is published. Defaults to `false`.
     */
    published?: pulumi.Input<boolean>;
    /**
     * A list of question groups.
     */
    questionGroups: pulumi.Input<pulumi.Input<inputs.QualityFormsSurveyQuestionGroup>[]>;
}
