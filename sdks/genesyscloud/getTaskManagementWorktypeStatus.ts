// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTaskManagementWorktypeStatus(args: GetTaskManagementWorktypeStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskManagementWorktypeStatusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("genesyscloud:index/getTaskManagementWorktypeStatus:getTaskManagementWorktypeStatus", {
        "id": args.id,
        "name": args.name,
        "worktypeId": args.worktypeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTaskManagementWorktypeStatus.
 */
export interface GetTaskManagementWorktypeStatusArgs {
    id?: string;
    name: string;
    worktypeId: string;
}

/**
 * A collection of values returned by getTaskManagementWorktypeStatus.
 */
export interface GetTaskManagementWorktypeStatusResult {
    readonly id: string;
    readonly name: string;
    readonly worktypeId: string;
}
export function getTaskManagementWorktypeStatusOutput(args: GetTaskManagementWorktypeStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTaskManagementWorktypeStatusResult> {
    return pulumi.output(args).apply((a: any) => getTaskManagementWorktypeStatus(a, opts))
}

/**
 * A collection of arguments for invoking getTaskManagementWorktypeStatus.
 */
export interface GetTaskManagementWorktypeStatusOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    worktypeId: pulumi.Input<string>;
}
