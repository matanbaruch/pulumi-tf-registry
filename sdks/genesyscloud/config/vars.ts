// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("genesyscloud");

/**
 * A string that the OAuth client uses to make requests. Can be set with the `GENESYSCLOUD_ACCESS_TOKEN` environment
 * variable.
 */
export declare const accessToken: string | undefined;
Object.defineProperty(exports, "accessToken", {
    get() {
        return __config.get("accessToken");
    },
    enumerable: true,
});

/**
 * AWS region where org exists. e.g. us-east-1. Can be set with the `GENESYSCLOUD_REGION` environment variable.
 */
export declare const awsRegion: string | undefined;
Object.defineProperty(exports, "awsRegion", {
    get() {
        return __config.get("awsRegion");
    },
    enumerable: true,
});

/**
 * OAuthClient ID found on the OAuth page of Admin UI. Can be set with the `GENESYSCLOUD_OAUTHCLIENT_ID` environment
 * variable.
 */
export declare const oauthclientId: string | undefined;
Object.defineProperty(exports, "oauthclientId", {
    get() {
        return __config.get("oauthclientId");
    },
    enumerable: true,
});

/**
 * OAuthClient secret found on the OAuth page of Admin UI. Can be set with the `GENESYSCLOUD_OAUTHCLIENT_SECRET`
 * environment variable.
 */
export declare const oauthclientSecret: string | undefined;
Object.defineProperty(exports, "oauthclientSecret", {
    get() {
        return __config.get("oauthclientSecret");
    },
    enumerable: true,
});

export declare const proxy: outputs.config.Proxy | undefined;
Object.defineProperty(exports, "proxy", {
    get() {
        return __config.getObject<outputs.config.Proxy>("proxy");
    },
    enumerable: true,
});

/**
 * Enables debug tracing in the Genesys Cloud SDK. Output will be written to the local file 'sdk_debug.log'. Can be set
 * with the `GENESYSCLOUD_SDK_DEBUG` environment variable.
 */
export declare const sdkDebug: boolean | undefined;
Object.defineProperty(exports, "sdkDebug", {
    get() {
        return __config.getObject<boolean>("sdkDebug");
    },
    enumerable: true,
});

/**
 * Specifies the file path for the log file. Can be set with the `GENESYSCLOUD_SDK_DEBUG_FILE_PATH` environment variable.
 * Default value is sdk_debug.log
 */
export declare const sdkDebugFilePath: string | undefined;
Object.defineProperty(exports, "sdkDebugFilePath", {
    get() {
        return __config.get("sdkDebugFilePath");
    },
    enumerable: true,
});

/**
 * Specifies the data format of the 'sdk_debug.log'. Only applicable if sdk_debug is true. Can be set with the
 * `GENESYSCLOUD_SDK_DEBUG_FORMAT` environment variable. Default value is Text.
 */
export declare const sdkDebugFormat: string | undefined;
Object.defineProperty(exports, "sdkDebugFormat", {
    get() {
        return __config.get("sdkDebugFormat");
    },
    enumerable: true,
});

/**
 * Max number of OAuth tokens in the token pool. Can be set with the `GENESYSCLOUD_TOKEN_POOL_SIZE` environment variable.
 */
export declare const tokenPoolSize: number | undefined;
Object.defineProperty(exports, "tokenPoolSize", {
    get() {
        return __config.getObject<number>("tokenPoolSize");
    },
    enumerable: true,
});

