// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProcessautomationTrigger extends pulumi.CustomResource {
    /**
     * Get an existing ProcessautomationTrigger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProcessautomationTriggerState, opts?: pulumi.CustomResourceOptions): ProcessautomationTrigger {
        return new ProcessautomationTrigger(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/processautomationTrigger:ProcessautomationTrigger';

    /**
     * Returns true if the given object is an instance of ProcessautomationTrigger.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProcessautomationTrigger {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProcessautomationTrigger.__pulumiType;
    }

    /**
     * How long to delay processing of a trigger after an event passes the match criteria. Must be an number between 60 and 900
     * inclusive. Only one of event_ttl_seconds or delay_by_seconds can be set.
     */
    public readonly delayBySeconds!: pulumi.Output<number | undefined>;
    /**
     * A description of the trigger
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether or not the trigger should be fired on events
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * How old an event can be to fire the trigger. Must be an number greater than or equal to 10. Only one of
     * event_ttl_seconds or delay_by_seconds can be set.
     */
    public readonly eventTtlSeconds!: pulumi.Output<number | undefined>;
    /**
     * Match criteria that controls when the trigger will fire. NOTE: The match_criteria field type has changed from a complex
     * object to a string. This was done to allow for complex JSON object definitions.
     */
    public readonly matchCriteria!: pulumi.Output<string | undefined>;
    /**
     * Name of the Trigger
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Target the trigger will invoke when fired
     */
    public readonly target!: pulumi.Output<outputs.ProcessautomationTriggerTarget>;
    /**
     * Topic name that will fire trigger. Changing the topic_name attribute will cause the processautomation_trigger object to
     * be dropped and recreated with a new ID.
     */
    public readonly topicName!: pulumi.Output<string>;

    /**
     * Create a ProcessautomationTrigger resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProcessautomationTriggerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProcessautomationTriggerArgs | ProcessautomationTriggerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProcessautomationTriggerState | undefined;
            resourceInputs["delayBySeconds"] = state ? state.delayBySeconds : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["eventTtlSeconds"] = state ? state.eventTtlSeconds : undefined;
            resourceInputs["matchCriteria"] = state ? state.matchCriteria : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
            resourceInputs["topicName"] = state ? state.topicName : undefined;
        } else {
            const args = argsOrState as ProcessautomationTriggerArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.target === undefined) && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            if ((!args || args.topicName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'topicName'");
            }
            resourceInputs["delayBySeconds"] = args ? args.delayBySeconds : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["eventTtlSeconds"] = args ? args.eventTtlSeconds : undefined;
            resourceInputs["matchCriteria"] = args ? args.matchCriteria : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["topicName"] = args ? args.topicName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProcessautomationTrigger.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProcessautomationTrigger resources.
 */
export interface ProcessautomationTriggerState {
    /**
     * How long to delay processing of a trigger after an event passes the match criteria. Must be an number between 60 and 900
     * inclusive. Only one of event_ttl_seconds or delay_by_seconds can be set.
     */
    delayBySeconds?: pulumi.Input<number>;
    /**
     * A description of the trigger
     */
    description?: pulumi.Input<string>;
    /**
     * Whether or not the trigger should be fired on events
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * How old an event can be to fire the trigger. Must be an number greater than or equal to 10. Only one of
     * event_ttl_seconds or delay_by_seconds can be set.
     */
    eventTtlSeconds?: pulumi.Input<number>;
    /**
     * Match criteria that controls when the trigger will fire. NOTE: The match_criteria field type has changed from a complex
     * object to a string. This was done to allow for complex JSON object definitions.
     */
    matchCriteria?: pulumi.Input<string>;
    /**
     * Name of the Trigger
     */
    name?: pulumi.Input<string>;
    /**
     * Target the trigger will invoke when fired
     */
    target?: pulumi.Input<inputs.ProcessautomationTriggerTarget>;
    /**
     * Topic name that will fire trigger. Changing the topic_name attribute will cause the processautomation_trigger object to
     * be dropped and recreated with a new ID.
     */
    topicName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProcessautomationTrigger resource.
 */
export interface ProcessautomationTriggerArgs {
    /**
     * How long to delay processing of a trigger after an event passes the match criteria. Must be an number between 60 and 900
     * inclusive. Only one of event_ttl_seconds or delay_by_seconds can be set.
     */
    delayBySeconds?: pulumi.Input<number>;
    /**
     * A description of the trigger
     */
    description?: pulumi.Input<string>;
    /**
     * Whether or not the trigger should be fired on events
     */
    enabled: pulumi.Input<boolean>;
    /**
     * How old an event can be to fire the trigger. Must be an number greater than or equal to 10. Only one of
     * event_ttl_seconds or delay_by_seconds can be set.
     */
    eventTtlSeconds?: pulumi.Input<number>;
    /**
     * Match criteria that controls when the trigger will fire. NOTE: The match_criteria field type has changed from a complex
     * object to a string. This was done to allow for complex JSON object definitions.
     */
    matchCriteria?: pulumi.Input<string>;
    /**
     * Name of the Trigger
     */
    name?: pulumi.Input<string>;
    /**
     * Target the trigger will invoke when fired
     */
    target: pulumi.Input<inputs.ProcessautomationTriggerTarget>;
    /**
     * Topic name that will fire trigger. Changing the topic_name attribute will cause the processautomation_trigger object to
     * be dropped and recreated with a new ID.
     */
    topicName: pulumi.Input<string>;
}
