// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RoutingQueue extends pulumi.CustomResource {
    /**
     * Get an existing RoutingQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingQueueState, opts?: pulumi.CustomResourceOptions): RoutingQueue {
        return new RoutingQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/routingQueue:RoutingQueue';

    /**
     * Returns true if the given object is an instance of RoutingQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutingQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutingQueue.__pulumiType;
    }

    /**
     * The amount of time the agent can stay in ACW. Only set when ACW is MANDATORY_TIMEOUT, MANDATORY_FORCED_TIMEOUT or
     * AGENT_REQUESTED.
     */
    public readonly acwTimeoutMs!: pulumi.Output<number>;
    /**
     * This field controls how the UI prompts the agent for a wrapup (MANDATORY | OPTIONAL | MANDATORY_TIMEOUT |
     * MANDATORY_FORCED_TIMEOUT | AGENT_REQUESTED). Defaults to `MANDATORY_TIMEOUT`.
     */
    public readonly acwWrapupPrompt!: pulumi.Output<string | undefined>;
    /**
     * Agent Owned Routing.
     */
    public readonly agentOwnedRouting!: pulumi.Output<outputs.RoutingQueueAgentOwnedRouting | undefined>;
    /**
     * Specifies whether the configured whisper should play for all ACD calls, or only for those which are auto-answered.
     * Defaults to `true`.
     */
    public readonly autoAnswerOnly!: pulumi.Output<boolean | undefined>;
    /**
     * The bullseye ring settings for the queue.
     */
    public readonly bullseyeRings!: pulumi.Output<outputs.RoutingQueueBullseyeRing[] | undefined>;
    /**
     * The name to use for caller identification for outbound calls from this queue.
     */
    public readonly callingPartyName!: pulumi.Output<string | undefined>;
    /**
     * The phone number to use for caller identification for outbound calls from this queue.
     */
    public readonly callingPartyNumber!: pulumi.Output<string | undefined>;
    /**
     * The Conditional Group Routing settings for the queue.
     *
     * @deprecated Deprecated
     */
    public readonly conditionalGroupRoutingRules!: pulumi.Output<outputs.RoutingQueueConditionalGroupRoutingRule[] | undefined>;
    /**
     * The default script IDs for each communication type. Communication types: (CALL | CALLBACK | CHAT | COBROWSE | EMAIL |
     * MESSAGE | SOCIAL_EXPRESSION | VIDEO | SCREENSHARE)
     */
    public readonly defaultScriptIds!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Queue description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Used by the System to set Direct Routing settings for a system Direct Routing queue.
     */
    public readonly directRouting!: pulumi.Output<outputs.RoutingQueueDirectRouting | undefined>;
    /**
     * The division to which this queue will belong. If not set, the home division will be used.
     */
    public readonly divisionId!: pulumi.Output<string>;
    /**
     * The in-queue flow ID to use for email conversations waiting in queue.
     */
    public readonly emailInQueueFlowId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether audio monitoring is enabled for this queue.
     */
    public readonly enableAudioMonitoring!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether manual assignment is enabled for this queue. Defaults to `false`.
     */
    public readonly enableManualAssignment!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether voice transcription is enabled for this queue. Defaults to `false`.
     */
    public readonly enableTranscription!: pulumi.Output<boolean | undefined>;
    /**
     * List of group ids assigned to the queue
     */
    public readonly groups!: pulumi.Output<string[] | undefined>;
    /**
     * Call media settings.
     */
    public readonly mediaSettingsCall!: pulumi.Output<outputs.RoutingQueueMediaSettingsCall | undefined>;
    /**
     * Callback media settings.
     */
    public readonly mediaSettingsCallback!: pulumi.Output<outputs.RoutingQueueMediaSettingsCallback | undefined>;
    /**
     * Chat media settings.
     */
    public readonly mediaSettingsChat!: pulumi.Output<outputs.RoutingQueueMediaSettingsChat | undefined>;
    /**
     * Email media settings.
     */
    public readonly mediaSettingsEmail!: pulumi.Output<outputs.RoutingQueueMediaSettingsEmail | undefined>;
    /**
     * Message media settings.
     */
    public readonly mediaSettingsMessage!: pulumi.Output<outputs.RoutingQueueMediaSettingsMessage | undefined>;
    /**
     * Users in the queue. If not set, this resource will not manage members. If a user is already assigned to this queue via a
     * group, attempting to assign them using this field will cause an error to be thrown.
     */
    public readonly members!: pulumi.Output<outputs.RoutingQueueMember[]>;
    /**
     * The in-queue flow ID to use for message conversations waiting in queue.
     */
    public readonly messageInQueueFlowId!: pulumi.Output<string | undefined>;
    /**
     * Queue name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The audio to be played when calls on this queue are on hold. If not configured, the default on-hold music will play.
     */
    public readonly onHoldPromptId!: pulumi.Output<string | undefined>;
    /**
     * The outbound email address settings for this queue.
     *
     * @deprecated Deprecated
     */
    public readonly outboundEmailAddress!: pulumi.Output<outputs.RoutingQueueOutboundEmailAddress | undefined>;
    /**
     * The unique ID of the outbound messaging SMS address for the queue.
     */
    public readonly outboundMessagingSmsAddressId!: pulumi.Output<string | undefined>;
    /**
     * The in-queue flow ID to use for call conversations waiting in queue.
     */
    public readonly queueFlowId!: pulumi.Output<string | undefined>;
    /**
     * The routing rules for the queue, used for routing to known or preferred agents.
     */
    public readonly routingRules!: pulumi.Output<outputs.RoutingQueueRoutingRule[] | undefined>;
    /**
     * The Scoring Method for the queue. Defaults to TimestampAndPriority. Defaults to `TimestampAndPriority`.
     */
    public readonly scoringMethod!: pulumi.Output<string | undefined>;
    /**
     * The skill evaluation method to use when routing conversations (NONE | BEST | ALL). Defaults to `ALL`.
     */
    public readonly skillEvaluationMethod!: pulumi.Output<string | undefined>;
    /**
     * List of skill group ids assigned to the queue.
     */
    public readonly skillGroups!: pulumi.Output<string[] | undefined>;
    /**
     * Indicates whether recording in-queue calls is suppressed for this queue. Defaults to `true`.
     */
    public readonly suppressInQueueCallRecording!: pulumi.Output<boolean | undefined>;
    /**
     * List of ids assigned to the queue
     */
    public readonly teams!: pulumi.Output<string[] | undefined>;
    /**
     * The prompt ID used for whisper on the queue, if configured.
     */
    public readonly whisperPromptId!: pulumi.Output<string | undefined>;
    /**
     * IDs of wrapup codes assigned to this queue. If not set, this resource will not manage wrapup codes.
     */
    public readonly wrapupCodes!: pulumi.Output<string[]>;

    /**
     * Create a RoutingQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoutingQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutingQueueArgs | RoutingQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutingQueueState | undefined;
            resourceInputs["acwTimeoutMs"] = state ? state.acwTimeoutMs : undefined;
            resourceInputs["acwWrapupPrompt"] = state ? state.acwWrapupPrompt : undefined;
            resourceInputs["agentOwnedRouting"] = state ? state.agentOwnedRouting : undefined;
            resourceInputs["autoAnswerOnly"] = state ? state.autoAnswerOnly : undefined;
            resourceInputs["bullseyeRings"] = state ? state.bullseyeRings : undefined;
            resourceInputs["callingPartyName"] = state ? state.callingPartyName : undefined;
            resourceInputs["callingPartyNumber"] = state ? state.callingPartyNumber : undefined;
            resourceInputs["conditionalGroupRoutingRules"] = state ? state.conditionalGroupRoutingRules : undefined;
            resourceInputs["defaultScriptIds"] = state ? state.defaultScriptIds : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["directRouting"] = state ? state.directRouting : undefined;
            resourceInputs["divisionId"] = state ? state.divisionId : undefined;
            resourceInputs["emailInQueueFlowId"] = state ? state.emailInQueueFlowId : undefined;
            resourceInputs["enableAudioMonitoring"] = state ? state.enableAudioMonitoring : undefined;
            resourceInputs["enableManualAssignment"] = state ? state.enableManualAssignment : undefined;
            resourceInputs["enableTranscription"] = state ? state.enableTranscription : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["mediaSettingsCall"] = state ? state.mediaSettingsCall : undefined;
            resourceInputs["mediaSettingsCallback"] = state ? state.mediaSettingsCallback : undefined;
            resourceInputs["mediaSettingsChat"] = state ? state.mediaSettingsChat : undefined;
            resourceInputs["mediaSettingsEmail"] = state ? state.mediaSettingsEmail : undefined;
            resourceInputs["mediaSettingsMessage"] = state ? state.mediaSettingsMessage : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["messageInQueueFlowId"] = state ? state.messageInQueueFlowId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onHoldPromptId"] = state ? state.onHoldPromptId : undefined;
            resourceInputs["outboundEmailAddress"] = state ? state.outboundEmailAddress : undefined;
            resourceInputs["outboundMessagingSmsAddressId"] = state ? state.outboundMessagingSmsAddressId : undefined;
            resourceInputs["queueFlowId"] = state ? state.queueFlowId : undefined;
            resourceInputs["routingRules"] = state ? state.routingRules : undefined;
            resourceInputs["scoringMethod"] = state ? state.scoringMethod : undefined;
            resourceInputs["skillEvaluationMethod"] = state ? state.skillEvaluationMethod : undefined;
            resourceInputs["skillGroups"] = state ? state.skillGroups : undefined;
            resourceInputs["suppressInQueueCallRecording"] = state ? state.suppressInQueueCallRecording : undefined;
            resourceInputs["teams"] = state ? state.teams : undefined;
            resourceInputs["whisperPromptId"] = state ? state.whisperPromptId : undefined;
            resourceInputs["wrapupCodes"] = state ? state.wrapupCodes : undefined;
        } else {
            const args = argsOrState as RoutingQueueArgs | undefined;
            resourceInputs["acwTimeoutMs"] = args ? args.acwTimeoutMs : undefined;
            resourceInputs["acwWrapupPrompt"] = args ? args.acwWrapupPrompt : undefined;
            resourceInputs["agentOwnedRouting"] = args ? args.agentOwnedRouting : undefined;
            resourceInputs["autoAnswerOnly"] = args ? args.autoAnswerOnly : undefined;
            resourceInputs["bullseyeRings"] = args ? args.bullseyeRings : undefined;
            resourceInputs["callingPartyName"] = args ? args.callingPartyName : undefined;
            resourceInputs["callingPartyNumber"] = args ? args.callingPartyNumber : undefined;
            resourceInputs["conditionalGroupRoutingRules"] = args ? args.conditionalGroupRoutingRules : undefined;
            resourceInputs["defaultScriptIds"] = args ? args.defaultScriptIds : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["directRouting"] = args ? args.directRouting : undefined;
            resourceInputs["divisionId"] = args ? args.divisionId : undefined;
            resourceInputs["emailInQueueFlowId"] = args ? args.emailInQueueFlowId : undefined;
            resourceInputs["enableAudioMonitoring"] = args ? args.enableAudioMonitoring : undefined;
            resourceInputs["enableManualAssignment"] = args ? args.enableManualAssignment : undefined;
            resourceInputs["enableTranscription"] = args ? args.enableTranscription : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["mediaSettingsCall"] = args ? args.mediaSettingsCall : undefined;
            resourceInputs["mediaSettingsCallback"] = args ? args.mediaSettingsCallback : undefined;
            resourceInputs["mediaSettingsChat"] = args ? args.mediaSettingsChat : undefined;
            resourceInputs["mediaSettingsEmail"] = args ? args.mediaSettingsEmail : undefined;
            resourceInputs["mediaSettingsMessage"] = args ? args.mediaSettingsMessage : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["messageInQueueFlowId"] = args ? args.messageInQueueFlowId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onHoldPromptId"] = args ? args.onHoldPromptId : undefined;
            resourceInputs["outboundEmailAddress"] = args ? args.outboundEmailAddress : undefined;
            resourceInputs["outboundMessagingSmsAddressId"] = args ? args.outboundMessagingSmsAddressId : undefined;
            resourceInputs["queueFlowId"] = args ? args.queueFlowId : undefined;
            resourceInputs["routingRules"] = args ? args.routingRules : undefined;
            resourceInputs["scoringMethod"] = args ? args.scoringMethod : undefined;
            resourceInputs["skillEvaluationMethod"] = args ? args.skillEvaluationMethod : undefined;
            resourceInputs["skillGroups"] = args ? args.skillGroups : undefined;
            resourceInputs["suppressInQueueCallRecording"] = args ? args.suppressInQueueCallRecording : undefined;
            resourceInputs["teams"] = args ? args.teams : undefined;
            resourceInputs["whisperPromptId"] = args ? args.whisperPromptId : undefined;
            resourceInputs["wrapupCodes"] = args ? args.wrapupCodes : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutingQueue.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoutingQueue resources.
 */
export interface RoutingQueueState {
    /**
     * The amount of time the agent can stay in ACW. Only set when ACW is MANDATORY_TIMEOUT, MANDATORY_FORCED_TIMEOUT or
     * AGENT_REQUESTED.
     */
    acwTimeoutMs?: pulumi.Input<number>;
    /**
     * This field controls how the UI prompts the agent for a wrapup (MANDATORY | OPTIONAL | MANDATORY_TIMEOUT |
     * MANDATORY_FORCED_TIMEOUT | AGENT_REQUESTED). Defaults to `MANDATORY_TIMEOUT`.
     */
    acwWrapupPrompt?: pulumi.Input<string>;
    /**
     * Agent Owned Routing.
     */
    agentOwnedRouting?: pulumi.Input<inputs.RoutingQueueAgentOwnedRouting>;
    /**
     * Specifies whether the configured whisper should play for all ACD calls, or only for those which are auto-answered.
     * Defaults to `true`.
     */
    autoAnswerOnly?: pulumi.Input<boolean>;
    /**
     * The bullseye ring settings for the queue.
     */
    bullseyeRings?: pulumi.Input<pulumi.Input<inputs.RoutingQueueBullseyeRing>[]>;
    /**
     * The name to use for caller identification for outbound calls from this queue.
     */
    callingPartyName?: pulumi.Input<string>;
    /**
     * The phone number to use for caller identification for outbound calls from this queue.
     */
    callingPartyNumber?: pulumi.Input<string>;
    /**
     * The Conditional Group Routing settings for the queue.
     *
     * @deprecated Deprecated
     */
    conditionalGroupRoutingRules?: pulumi.Input<pulumi.Input<inputs.RoutingQueueConditionalGroupRoutingRule>[]>;
    /**
     * The default script IDs for each communication type. Communication types: (CALL | CALLBACK | CHAT | COBROWSE | EMAIL |
     * MESSAGE | SOCIAL_EXPRESSION | VIDEO | SCREENSHARE)
     */
    defaultScriptIds?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Queue description.
     */
    description?: pulumi.Input<string>;
    /**
     * Used by the System to set Direct Routing settings for a system Direct Routing queue.
     */
    directRouting?: pulumi.Input<inputs.RoutingQueueDirectRouting>;
    /**
     * The division to which this queue will belong. If not set, the home division will be used.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * The in-queue flow ID to use for email conversations waiting in queue.
     */
    emailInQueueFlowId?: pulumi.Input<string>;
    /**
     * Indicates whether audio monitoring is enabled for this queue.
     */
    enableAudioMonitoring?: pulumi.Input<boolean>;
    /**
     * Indicates whether manual assignment is enabled for this queue. Defaults to `false`.
     */
    enableManualAssignment?: pulumi.Input<boolean>;
    /**
     * Indicates whether voice transcription is enabled for this queue. Defaults to `false`.
     */
    enableTranscription?: pulumi.Input<boolean>;
    /**
     * List of group ids assigned to the queue
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Call media settings.
     */
    mediaSettingsCall?: pulumi.Input<inputs.RoutingQueueMediaSettingsCall>;
    /**
     * Callback media settings.
     */
    mediaSettingsCallback?: pulumi.Input<inputs.RoutingQueueMediaSettingsCallback>;
    /**
     * Chat media settings.
     */
    mediaSettingsChat?: pulumi.Input<inputs.RoutingQueueMediaSettingsChat>;
    /**
     * Email media settings.
     */
    mediaSettingsEmail?: pulumi.Input<inputs.RoutingQueueMediaSettingsEmail>;
    /**
     * Message media settings.
     */
    mediaSettingsMessage?: pulumi.Input<inputs.RoutingQueueMediaSettingsMessage>;
    /**
     * Users in the queue. If not set, this resource will not manage members. If a user is already assigned to this queue via a
     * group, attempting to assign them using this field will cause an error to be thrown.
     */
    members?: pulumi.Input<pulumi.Input<inputs.RoutingQueueMember>[]>;
    /**
     * The in-queue flow ID to use for message conversations waiting in queue.
     */
    messageInQueueFlowId?: pulumi.Input<string>;
    /**
     * Queue name.
     */
    name?: pulumi.Input<string>;
    /**
     * The audio to be played when calls on this queue are on hold. If not configured, the default on-hold music will play.
     */
    onHoldPromptId?: pulumi.Input<string>;
    /**
     * The outbound email address settings for this queue.
     *
     * @deprecated Deprecated
     */
    outboundEmailAddress?: pulumi.Input<inputs.RoutingQueueOutboundEmailAddress>;
    /**
     * The unique ID of the outbound messaging SMS address for the queue.
     */
    outboundMessagingSmsAddressId?: pulumi.Input<string>;
    /**
     * The in-queue flow ID to use for call conversations waiting in queue.
     */
    queueFlowId?: pulumi.Input<string>;
    /**
     * The routing rules for the queue, used for routing to known or preferred agents.
     */
    routingRules?: pulumi.Input<pulumi.Input<inputs.RoutingQueueRoutingRule>[]>;
    /**
     * The Scoring Method for the queue. Defaults to TimestampAndPriority. Defaults to `TimestampAndPriority`.
     */
    scoringMethod?: pulumi.Input<string>;
    /**
     * The skill evaluation method to use when routing conversations (NONE | BEST | ALL). Defaults to `ALL`.
     */
    skillEvaluationMethod?: pulumi.Input<string>;
    /**
     * List of skill group ids assigned to the queue.
     */
    skillGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether recording in-queue calls is suppressed for this queue. Defaults to `true`.
     */
    suppressInQueueCallRecording?: pulumi.Input<boolean>;
    /**
     * List of ids assigned to the queue
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The prompt ID used for whisper on the queue, if configured.
     */
    whisperPromptId?: pulumi.Input<string>;
    /**
     * IDs of wrapup codes assigned to this queue. If not set, this resource will not manage wrapup codes.
     */
    wrapupCodes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a RoutingQueue resource.
 */
export interface RoutingQueueArgs {
    /**
     * The amount of time the agent can stay in ACW. Only set when ACW is MANDATORY_TIMEOUT, MANDATORY_FORCED_TIMEOUT or
     * AGENT_REQUESTED.
     */
    acwTimeoutMs?: pulumi.Input<number>;
    /**
     * This field controls how the UI prompts the agent for a wrapup (MANDATORY | OPTIONAL | MANDATORY_TIMEOUT |
     * MANDATORY_FORCED_TIMEOUT | AGENT_REQUESTED). Defaults to `MANDATORY_TIMEOUT`.
     */
    acwWrapupPrompt?: pulumi.Input<string>;
    /**
     * Agent Owned Routing.
     */
    agentOwnedRouting?: pulumi.Input<inputs.RoutingQueueAgentOwnedRouting>;
    /**
     * Specifies whether the configured whisper should play for all ACD calls, or only for those which are auto-answered.
     * Defaults to `true`.
     */
    autoAnswerOnly?: pulumi.Input<boolean>;
    /**
     * The bullseye ring settings for the queue.
     */
    bullseyeRings?: pulumi.Input<pulumi.Input<inputs.RoutingQueueBullseyeRing>[]>;
    /**
     * The name to use for caller identification for outbound calls from this queue.
     */
    callingPartyName?: pulumi.Input<string>;
    /**
     * The phone number to use for caller identification for outbound calls from this queue.
     */
    callingPartyNumber?: pulumi.Input<string>;
    /**
     * The Conditional Group Routing settings for the queue.
     *
     * @deprecated Deprecated
     */
    conditionalGroupRoutingRules?: pulumi.Input<pulumi.Input<inputs.RoutingQueueConditionalGroupRoutingRule>[]>;
    /**
     * The default script IDs for each communication type. Communication types: (CALL | CALLBACK | CHAT | COBROWSE | EMAIL |
     * MESSAGE | SOCIAL_EXPRESSION | VIDEO | SCREENSHARE)
     */
    defaultScriptIds?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Queue description.
     */
    description?: pulumi.Input<string>;
    /**
     * Used by the System to set Direct Routing settings for a system Direct Routing queue.
     */
    directRouting?: pulumi.Input<inputs.RoutingQueueDirectRouting>;
    /**
     * The division to which this queue will belong. If not set, the home division will be used.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * The in-queue flow ID to use for email conversations waiting in queue.
     */
    emailInQueueFlowId?: pulumi.Input<string>;
    /**
     * Indicates whether audio monitoring is enabled for this queue.
     */
    enableAudioMonitoring?: pulumi.Input<boolean>;
    /**
     * Indicates whether manual assignment is enabled for this queue. Defaults to `false`.
     */
    enableManualAssignment?: pulumi.Input<boolean>;
    /**
     * Indicates whether voice transcription is enabled for this queue. Defaults to `false`.
     */
    enableTranscription?: pulumi.Input<boolean>;
    /**
     * List of group ids assigned to the queue
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Call media settings.
     */
    mediaSettingsCall?: pulumi.Input<inputs.RoutingQueueMediaSettingsCall>;
    /**
     * Callback media settings.
     */
    mediaSettingsCallback?: pulumi.Input<inputs.RoutingQueueMediaSettingsCallback>;
    /**
     * Chat media settings.
     */
    mediaSettingsChat?: pulumi.Input<inputs.RoutingQueueMediaSettingsChat>;
    /**
     * Email media settings.
     */
    mediaSettingsEmail?: pulumi.Input<inputs.RoutingQueueMediaSettingsEmail>;
    /**
     * Message media settings.
     */
    mediaSettingsMessage?: pulumi.Input<inputs.RoutingQueueMediaSettingsMessage>;
    /**
     * Users in the queue. If not set, this resource will not manage members. If a user is already assigned to this queue via a
     * group, attempting to assign them using this field will cause an error to be thrown.
     */
    members?: pulumi.Input<pulumi.Input<inputs.RoutingQueueMember>[]>;
    /**
     * The in-queue flow ID to use for message conversations waiting in queue.
     */
    messageInQueueFlowId?: pulumi.Input<string>;
    /**
     * Queue name.
     */
    name?: pulumi.Input<string>;
    /**
     * The audio to be played when calls on this queue are on hold. If not configured, the default on-hold music will play.
     */
    onHoldPromptId?: pulumi.Input<string>;
    /**
     * The outbound email address settings for this queue.
     *
     * @deprecated Deprecated
     */
    outboundEmailAddress?: pulumi.Input<inputs.RoutingQueueOutboundEmailAddress>;
    /**
     * The unique ID of the outbound messaging SMS address for the queue.
     */
    outboundMessagingSmsAddressId?: pulumi.Input<string>;
    /**
     * The in-queue flow ID to use for call conversations waiting in queue.
     */
    queueFlowId?: pulumi.Input<string>;
    /**
     * The routing rules for the queue, used for routing to known or preferred agents.
     */
    routingRules?: pulumi.Input<pulumi.Input<inputs.RoutingQueueRoutingRule>[]>;
    /**
     * The Scoring Method for the queue. Defaults to TimestampAndPriority. Defaults to `TimestampAndPriority`.
     */
    scoringMethod?: pulumi.Input<string>;
    /**
     * The skill evaluation method to use when routing conversations (NONE | BEST | ALL). Defaults to `ALL`.
     */
    skillEvaluationMethod?: pulumi.Input<string>;
    /**
     * List of skill group ids assigned to the queue.
     */
    skillGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether recording in-queue calls is suppressed for this queue. Defaults to `true`.
     */
    suppressInQueueCallRecording?: pulumi.Input<boolean>;
    /**
     * List of ids assigned to the queue
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The prompt ID used for whisper on the queue, if configured.
     */
    whisperPromptId?: pulumi.Input<string>;
    /**
     * IDs of wrapup codes assigned to this queue. If not set, this resource will not manage wrapup codes.
     */
    wrapupCodes?: pulumi.Input<pulumi.Input<string>[]>;
}
