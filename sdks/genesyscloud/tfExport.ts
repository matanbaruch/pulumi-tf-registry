// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TfExport extends pulumi.CustomResource {
    /**
     * Get an existing TfExport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TfExportState, opts?: pulumi.CustomResourceOptions): TfExport {
        return new TfExport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/tfExport:TfExport';

    /**
     * Returns true if the given object is an instance of TfExport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TfExport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TfExport.__pulumiType;
    }

    /**
     * Compress exported results using zip format Defaults to `false`.
     */
    public readonly compress!: pulumi.Output<boolean | undefined>;
    /**
     * Directory where the config and state files will be exported. Defaults to `./genesyscloud`.
     */
    public readonly directory!: pulumi.Output<string | undefined>;
    /**
     * Adds a "depends_on" attribute to genesyscloud.Flow resources with a list of resources that are referenced inside the
     * flow configuration . This also resolves and exports all the dependent resources for any given resource. Defaults to
     * `false`.
     */
    public readonly enableDependencyResolution!: pulumi.Output<boolean | undefined>;
    /**
     * Attributes to exclude from the config when exporting resources. Each value should be of the form
     * {resource_name}.{attribute}, e.g. 'genesyscloud_user.skills'. Excluded attributes must be optional.
     */
    public readonly excludeAttributes!: pulumi.Output<string[] | undefined>;
    /**
     * Exclude resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    public readonly excludeFilterResources!: pulumi.Output<string[] | undefined>;
    /**
     * Export the config as HCL. Defaults to `false`.
     */
    public readonly exportAsHcl!: pulumi.Output<boolean | undefined>;
    /**
     * Ignore Cyclic Dependencies when building the flows and do not throw an error Defaults to `true`.
     */
    public readonly ignoreCyclicDeps!: pulumi.Output<boolean | undefined>;
    /**
     * Include only resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    public readonly includeFilterResources!: pulumi.Output<string[] | undefined>;
    public readonly includeStateFile!: pulumi.Output<boolean | undefined>;
    /**
     * Log permission/product issues rather than fail. Defaults to `false`.
     */
    public readonly logPermissionErrors!: pulumi.Output<boolean | undefined>;
    /**
     * Include only resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    public readonly replaceWithDatasources!: pulumi.Output<string[] | undefined>;
    /**
     * Resource types to export, e.g. 'genesyscloud_user'. Defaults to all exportable types. NOTE: This field is deprecated and
     * will be removed in future release. Please use the include_filter_resources or exclude_filter_resources attribute.
     *
     * @deprecated Deprecated
     */
    public readonly resourceTypes!: pulumi.Output<string[] | undefined>;
    public readonly splitFilesByResource!: pulumi.Output<boolean | undefined>;

    /**
     * Create a TfExport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TfExportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TfExportArgs | TfExportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TfExportState | undefined;
            resourceInputs["compress"] = state ? state.compress : undefined;
            resourceInputs["directory"] = state ? state.directory : undefined;
            resourceInputs["enableDependencyResolution"] = state ? state.enableDependencyResolution : undefined;
            resourceInputs["excludeAttributes"] = state ? state.excludeAttributes : undefined;
            resourceInputs["excludeFilterResources"] = state ? state.excludeFilterResources : undefined;
            resourceInputs["exportAsHcl"] = state ? state.exportAsHcl : undefined;
            resourceInputs["ignoreCyclicDeps"] = state ? state.ignoreCyclicDeps : undefined;
            resourceInputs["includeFilterResources"] = state ? state.includeFilterResources : undefined;
            resourceInputs["includeStateFile"] = state ? state.includeStateFile : undefined;
            resourceInputs["logPermissionErrors"] = state ? state.logPermissionErrors : undefined;
            resourceInputs["replaceWithDatasources"] = state ? state.replaceWithDatasources : undefined;
            resourceInputs["resourceTypes"] = state ? state.resourceTypes : undefined;
            resourceInputs["splitFilesByResource"] = state ? state.splitFilesByResource : undefined;
        } else {
            const args = argsOrState as TfExportArgs | undefined;
            resourceInputs["compress"] = args ? args.compress : undefined;
            resourceInputs["directory"] = args ? args.directory : undefined;
            resourceInputs["enableDependencyResolution"] = args ? args.enableDependencyResolution : undefined;
            resourceInputs["excludeAttributes"] = args ? args.excludeAttributes : undefined;
            resourceInputs["excludeFilterResources"] = args ? args.excludeFilterResources : undefined;
            resourceInputs["exportAsHcl"] = args ? args.exportAsHcl : undefined;
            resourceInputs["ignoreCyclicDeps"] = args ? args.ignoreCyclicDeps : undefined;
            resourceInputs["includeFilterResources"] = args ? args.includeFilterResources : undefined;
            resourceInputs["includeStateFile"] = args ? args.includeStateFile : undefined;
            resourceInputs["logPermissionErrors"] = args ? args.logPermissionErrors : undefined;
            resourceInputs["replaceWithDatasources"] = args ? args.replaceWithDatasources : undefined;
            resourceInputs["resourceTypes"] = args ? args.resourceTypes : undefined;
            resourceInputs["splitFilesByResource"] = args ? args.splitFilesByResource : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TfExport.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TfExport resources.
 */
export interface TfExportState {
    /**
     * Compress exported results using zip format Defaults to `false`.
     */
    compress?: pulumi.Input<boolean>;
    /**
     * Directory where the config and state files will be exported. Defaults to `./genesyscloud`.
     */
    directory?: pulumi.Input<string>;
    /**
     * Adds a "depends_on" attribute to genesyscloud.Flow resources with a list of resources that are referenced inside the
     * flow configuration . This also resolves and exports all the dependent resources for any given resource. Defaults to
     * `false`.
     */
    enableDependencyResolution?: pulumi.Input<boolean>;
    /**
     * Attributes to exclude from the config when exporting resources. Each value should be of the form
     * {resource_name}.{attribute}, e.g. 'genesyscloud_user.skills'. Excluded attributes must be optional.
     */
    excludeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Exclude resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    excludeFilterResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Export the config as HCL. Defaults to `false`.
     */
    exportAsHcl?: pulumi.Input<boolean>;
    /**
     * Ignore Cyclic Dependencies when building the flows and do not throw an error Defaults to `true`.
     */
    ignoreCyclicDeps?: pulumi.Input<boolean>;
    /**
     * Include only resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    includeFilterResources?: pulumi.Input<pulumi.Input<string>[]>;
    includeStateFile?: pulumi.Input<boolean>;
    /**
     * Log permission/product issues rather than fail. Defaults to `false`.
     */
    logPermissionErrors?: pulumi.Input<boolean>;
    /**
     * Include only resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    replaceWithDatasources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource types to export, e.g. 'genesyscloud_user'. Defaults to all exportable types. NOTE: This field is deprecated and
     * will be removed in future release. Please use the include_filter_resources or exclude_filter_resources attribute.
     *
     * @deprecated Deprecated
     */
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    splitFilesByResource?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a TfExport resource.
 */
export interface TfExportArgs {
    /**
     * Compress exported results using zip format Defaults to `false`.
     */
    compress?: pulumi.Input<boolean>;
    /**
     * Directory where the config and state files will be exported. Defaults to `./genesyscloud`.
     */
    directory?: pulumi.Input<string>;
    /**
     * Adds a "depends_on" attribute to genesyscloud.Flow resources with a list of resources that are referenced inside the
     * flow configuration . This also resolves and exports all the dependent resources for any given resource. Defaults to
     * `false`.
     */
    enableDependencyResolution?: pulumi.Input<boolean>;
    /**
     * Attributes to exclude from the config when exporting resources. Each value should be of the form
     * {resource_name}.{attribute}, e.g. 'genesyscloud_user.skills'. Excluded attributes must be optional.
     */
    excludeAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Exclude resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    excludeFilterResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Export the config as HCL. Defaults to `false`.
     */
    exportAsHcl?: pulumi.Input<boolean>;
    /**
     * Ignore Cyclic Dependencies when building the flows and do not throw an error Defaults to `true`.
     */
    ignoreCyclicDeps?: pulumi.Input<boolean>;
    /**
     * Include only resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    includeFilterResources?: pulumi.Input<pulumi.Input<string>[]>;
    includeStateFile?: pulumi.Input<boolean>;
    /**
     * Log permission/product issues rather than fail. Defaults to `false`.
     */
    logPermissionErrors?: pulumi.Input<boolean>;
    /**
     * Include only resources that match either a resource type or a resource type::regular expression. See export guide for
     * additional information
     */
    replaceWithDatasources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource types to export, e.g. 'genesyscloud_user'. Defaults to all exportable types. NOTE: This field is deprecated and
     * will be removed in future release. Please use the include_filter_resources or exclude_filter_resources attribute.
     *
     * @deprecated Deprecated
     */
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    splitFilesByResource?: pulumi.Input<boolean>;
}
