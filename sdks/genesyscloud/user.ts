// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * Enable ACD auto-answer. Defaults to `false`.
     */
    public readonly acdAutoAnswer!: pulumi.Output<boolean | undefined>;
    /**
     * The address settings for this user. If not set, this resource will not manage addresses.
     */
    public readonly addresses!: pulumi.Output<outputs.UserAddress[]>;
    /**
     * Certifications for this user. If not set, this resource will not manage certifications.
     */
    public readonly certifications!: pulumi.Output<string[]>;
    /**
     * User's department.
     */
    public readonly department!: pulumi.Output<string | undefined>;
    /**
     * The division to which this user will belong. If not set, the home division will be used.
     */
    public readonly divisionId!: pulumi.Output<string>;
    /**
     * User's primary email and username.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * The employer info for this user. If not set, this resource will not manage employer info.
     */
    public readonly employerInfos!: pulumi.Output<outputs.UserEmployerInfo[]>;
    /**
     * The user placement at each site location. If not set, this resource will not manage user locations.
     */
    public readonly locations!: pulumi.Output<outputs.UserLocation[]>;
    /**
     * User ID of this user's manager.
     */
    public readonly manager!: pulumi.Output<string | undefined>;
    /**
     * User's full name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * User's password. If specified, this is only set on user create.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Profile skills for this user. If not set, this resource will not manage profile skills.
     */
    public readonly profileSkills!: pulumi.Output<string[]>;
    /**
     * Languages and proficiencies for this user. If not set, this resource will not manage user languages.
     */
    public readonly routingLanguages!: pulumi.Output<outputs.UserRoutingLanguage[]>;
    /**
     * Skills and proficiencies for this user. If not set, this resource will not manage user skills.
     */
    public readonly routingSkills!: pulumi.Output<outputs.UserRoutingSkill[]>;
    /**
     * The routing utilization settings for this user. If empty list, the org default settings are used. If not set, this
     * resource will not manage the users's utilization settings.
     */
    public readonly routingUtilizations!: pulumi.Output<outputs.UserRoutingUtilization[]>;
    /**
     * User's state (active | inactive). Default is 'active'. Defaults to `active`.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * User's title.
     */
    public readonly title!: pulumi.Output<string | undefined>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["acdAutoAnswer"] = state ? state.acdAutoAnswer : undefined;
            resourceInputs["addresses"] = state ? state.addresses : undefined;
            resourceInputs["certifications"] = state ? state.certifications : undefined;
            resourceInputs["department"] = state ? state.department : undefined;
            resourceInputs["divisionId"] = state ? state.divisionId : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["employerInfos"] = state ? state.employerInfos : undefined;
            resourceInputs["locations"] = state ? state.locations : undefined;
            resourceInputs["manager"] = state ? state.manager : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["profileSkills"] = state ? state.profileSkills : undefined;
            resourceInputs["routingLanguages"] = state ? state.routingLanguages : undefined;
            resourceInputs["routingSkills"] = state ? state.routingSkills : undefined;
            resourceInputs["routingUtilizations"] = state ? state.routingUtilizations : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            resourceInputs["acdAutoAnswer"] = args ? args.acdAutoAnswer : undefined;
            resourceInputs["addresses"] = args ? args.addresses : undefined;
            resourceInputs["certifications"] = args ? args.certifications : undefined;
            resourceInputs["department"] = args ? args.department : undefined;
            resourceInputs["divisionId"] = args ? args.divisionId : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["employerInfos"] = args ? args.employerInfos : undefined;
            resourceInputs["locations"] = args ? args.locations : undefined;
            resourceInputs["manager"] = args ? args.manager : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["profileSkills"] = args ? args.profileSkills : undefined;
            resourceInputs["routingLanguages"] = args ? args.routingLanguages : undefined;
            resourceInputs["routingSkills"] = args ? args.routingSkills : undefined;
            resourceInputs["routingUtilizations"] = args ? args.routingUtilizations : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(User.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * Enable ACD auto-answer. Defaults to `false`.
     */
    acdAutoAnswer?: pulumi.Input<boolean>;
    /**
     * The address settings for this user. If not set, this resource will not manage addresses.
     */
    addresses?: pulumi.Input<pulumi.Input<inputs.UserAddress>[]>;
    /**
     * Certifications for this user. If not set, this resource will not manage certifications.
     */
    certifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User's department.
     */
    department?: pulumi.Input<string>;
    /**
     * The division to which this user will belong. If not set, the home division will be used.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * User's primary email and username.
     */
    email?: pulumi.Input<string>;
    /**
     * The employer info for this user. If not set, this resource will not manage employer info.
     */
    employerInfos?: pulumi.Input<pulumi.Input<inputs.UserEmployerInfo>[]>;
    /**
     * The user placement at each site location. If not set, this resource will not manage user locations.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.UserLocation>[]>;
    /**
     * User ID of this user's manager.
     */
    manager?: pulumi.Input<string>;
    /**
     * User's full name.
     */
    name?: pulumi.Input<string>;
    /**
     * User's password. If specified, this is only set on user create.
     */
    password?: pulumi.Input<string>;
    /**
     * Profile skills for this user. If not set, this resource will not manage profile skills.
     */
    profileSkills?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Languages and proficiencies for this user. If not set, this resource will not manage user languages.
     */
    routingLanguages?: pulumi.Input<pulumi.Input<inputs.UserRoutingLanguage>[]>;
    /**
     * Skills and proficiencies for this user. If not set, this resource will not manage user skills.
     */
    routingSkills?: pulumi.Input<pulumi.Input<inputs.UserRoutingSkill>[]>;
    /**
     * The routing utilization settings for this user. If empty list, the org default settings are used. If not set, this
     * resource will not manage the users's utilization settings.
     */
    routingUtilizations?: pulumi.Input<pulumi.Input<inputs.UserRoutingUtilization>[]>;
    /**
     * User's state (active | inactive). Default is 'active'. Defaults to `active`.
     */
    state?: pulumi.Input<string>;
    /**
     * User's title.
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * Enable ACD auto-answer. Defaults to `false`.
     */
    acdAutoAnswer?: pulumi.Input<boolean>;
    /**
     * The address settings for this user. If not set, this resource will not manage addresses.
     */
    addresses?: pulumi.Input<pulumi.Input<inputs.UserAddress>[]>;
    /**
     * Certifications for this user. If not set, this resource will not manage certifications.
     */
    certifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User's department.
     */
    department?: pulumi.Input<string>;
    /**
     * The division to which this user will belong. If not set, the home division will be used.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * User's primary email and username.
     */
    email: pulumi.Input<string>;
    /**
     * The employer info for this user. If not set, this resource will not manage employer info.
     */
    employerInfos?: pulumi.Input<pulumi.Input<inputs.UserEmployerInfo>[]>;
    /**
     * The user placement at each site location. If not set, this resource will not manage user locations.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.UserLocation>[]>;
    /**
     * User ID of this user's manager.
     */
    manager?: pulumi.Input<string>;
    /**
     * User's full name.
     */
    name?: pulumi.Input<string>;
    /**
     * User's password. If specified, this is only set on user create.
     */
    password?: pulumi.Input<string>;
    /**
     * Profile skills for this user. If not set, this resource will not manage profile skills.
     */
    profileSkills?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Languages and proficiencies for this user. If not set, this resource will not manage user languages.
     */
    routingLanguages?: pulumi.Input<pulumi.Input<inputs.UserRoutingLanguage>[]>;
    /**
     * Skills and proficiencies for this user. If not set, this resource will not manage user skills.
     */
    routingSkills?: pulumi.Input<pulumi.Input<inputs.UserRoutingSkill>[]>;
    /**
     * The routing utilization settings for this user. If empty list, the org default settings are used. If not set, this
     * resource will not manage the users's utilization settings.
     */
    routingUtilizations?: pulumi.Input<pulumi.Input<inputs.UserRoutingUtilization>[]>;
    /**
     * User's state (active | inactive). Default is 'active'. Defaults to `active`.
     */
    state?: pulumi.Input<string>;
    /**
     * User's title.
     */
    title?: pulumi.Input<string>;
}
