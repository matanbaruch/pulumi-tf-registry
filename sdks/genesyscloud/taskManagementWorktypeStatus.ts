// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TaskManagementWorktypeStatus extends pulumi.CustomResource {
    /**
     * Get an existing TaskManagementWorktypeStatus resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TaskManagementWorktypeStatusState, opts?: pulumi.CustomResourceOptions): TaskManagementWorktypeStatus {
        return new TaskManagementWorktypeStatus(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/taskManagementWorktypeStatus:TaskManagementWorktypeStatus';

    /**
     * Returns true if the given object is an instance of TaskManagementWorktypeStatus.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TaskManagementWorktypeStatus {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TaskManagementWorktypeStatus.__pulumiType;
    }

    /**
     * The Category of the Status. Changing the category will cause the resource to be dropped and recreated with a new id.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * This status is the default status for Workitems created from this Worktype. Only one status can be set as the default
     * status at a time. Once set there must always be a default status. The default can not be deleted.
     */
    public readonly default!: pulumi.Output<boolean | undefined>;
    /**
     * Default destination status to which this Status will transition to if auto status transition enabled.
     */
    public readonly defaultDestinationStatusId!: pulumi.Output<string | undefined>;
    /**
     * The description of the Status.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A list of destination Statuses where a Workitem with this Status can transition to. If the list is empty Workitems with
     * this Status can transition to all other Statuses defined on the Worktype. A Status can have a maximum of 24
     * destinations.
     */
    public readonly destinationStatusIds!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the status.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Delay in seconds for auto status transition. Required if default_destination_status_id is provided.
     */
    public readonly statusTransitionDelaySeconds!: pulumi.Output<number | undefined>;
    /**
     * Time is represented as an ISO-8601 string without a timezone. For example: HH:mm:ss
     */
    public readonly statusTransitionTime!: pulumi.Output<string | undefined>;
    /**
     * The id of the worktype this status belongs to. Changing this attribute will cause the status to be dropped and
     * recreated.
     */
    public readonly worktypeId!: pulumi.Output<string>;

    /**
     * Create a TaskManagementWorktypeStatus resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TaskManagementWorktypeStatusArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TaskManagementWorktypeStatusArgs | TaskManagementWorktypeStatusState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TaskManagementWorktypeStatusState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["defaultDestinationStatusId"] = state ? state.defaultDestinationStatusId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationStatusIds"] = state ? state.destinationStatusIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["statusTransitionDelaySeconds"] = state ? state.statusTransitionDelaySeconds : undefined;
            resourceInputs["statusTransitionTime"] = state ? state.statusTransitionTime : undefined;
            resourceInputs["worktypeId"] = state ? state.worktypeId : undefined;
        } else {
            const args = argsOrState as TaskManagementWorktypeStatusArgs | undefined;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            if ((!args || args.worktypeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'worktypeId'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["defaultDestinationStatusId"] = args ? args.defaultDestinationStatusId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationStatusIds"] = args ? args.destinationStatusIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["statusTransitionDelaySeconds"] = args ? args.statusTransitionDelaySeconds : undefined;
            resourceInputs["statusTransitionTime"] = args ? args.statusTransitionTime : undefined;
            resourceInputs["worktypeId"] = args ? args.worktypeId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TaskManagementWorktypeStatus.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TaskManagementWorktypeStatus resources.
 */
export interface TaskManagementWorktypeStatusState {
    /**
     * The Category of the Status. Changing the category will cause the resource to be dropped and recreated with a new id.
     */
    category?: pulumi.Input<string>;
    /**
     * This status is the default status for Workitems created from this Worktype. Only one status can be set as the default
     * status at a time. Once set there must always be a default status. The default can not be deleted.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Default destination status to which this Status will transition to if auto status transition enabled.
     */
    defaultDestinationStatusId?: pulumi.Input<string>;
    /**
     * The description of the Status.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of destination Statuses where a Workitem with this Status can transition to. If the list is empty Workitems with
     * this Status can transition to all other Statuses defined on the Worktype. A Status can have a maximum of 24
     * destinations.
     */
    destinationStatusIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the status.
     */
    name?: pulumi.Input<string>;
    /**
     * Delay in seconds for auto status transition. Required if default_destination_status_id is provided.
     */
    statusTransitionDelaySeconds?: pulumi.Input<number>;
    /**
     * Time is represented as an ISO-8601 string without a timezone. For example: HH:mm:ss
     */
    statusTransitionTime?: pulumi.Input<string>;
    /**
     * The id of the worktype this status belongs to. Changing this attribute will cause the status to be dropped and
     * recreated.
     */
    worktypeId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TaskManagementWorktypeStatus resource.
 */
export interface TaskManagementWorktypeStatusArgs {
    /**
     * The Category of the Status. Changing the category will cause the resource to be dropped and recreated with a new id.
     */
    category: pulumi.Input<string>;
    /**
     * This status is the default status for Workitems created from this Worktype. Only one status can be set as the default
     * status at a time. Once set there must always be a default status. The default can not be deleted.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Default destination status to which this Status will transition to if auto status transition enabled.
     */
    defaultDestinationStatusId?: pulumi.Input<string>;
    /**
     * The description of the Status.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of destination Statuses where a Workitem with this Status can transition to. If the list is empty Workitems with
     * this Status can transition to all other Statuses defined on the Worktype. A Status can have a maximum of 24
     * destinations.
     */
    destinationStatusIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the status.
     */
    name?: pulumi.Input<string>;
    /**
     * Delay in seconds for auto status transition. Required if default_destination_status_id is provided.
     */
    statusTransitionDelaySeconds?: pulumi.Input<number>;
    /**
     * Time is represented as an ISO-8601 string without a timezone. For example: HH:mm:ss
     */
    statusTransitionTime?: pulumi.Input<string>;
    /**
     * The id of the worktype this status belongs to. Changing this attribute will cause the status to be dropped and
     * recreated.
     */
    worktypeId: pulumi.Input<string>;
}
