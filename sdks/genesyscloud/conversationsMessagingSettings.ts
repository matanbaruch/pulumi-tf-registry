// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConversationsMessagingSettings extends pulumi.CustomResource {
    /**
     * Get an existing ConversationsMessagingSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConversationsMessagingSettingsState, opts?: pulumi.CustomResourceOptions): ConversationsMessagingSettings {
        return new ConversationsMessagingSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/conversationsMessagingSettings:ConversationsMessagingSettings';

    /**
     * Returns true if the given object is an instance of ConversationsMessagingSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConversationsMessagingSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConversationsMessagingSettings.__pulumiType;
    }

    /**
     * Settings relating to message contents
     */
    public readonly content!: pulumi.Output<outputs.ConversationsMessagingSettingsContent | undefined>;
    /**
     * Settings relating to events which may occur
     */
    public readonly event!: pulumi.Output<outputs.ConversationsMessagingSettingsEvent | undefined>;
    /**
     * The messaging Setting profile name
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a ConversationsMessagingSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConversationsMessagingSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConversationsMessagingSettingsArgs | ConversationsMessagingSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConversationsMessagingSettingsState | undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["event"] = state ? state.event : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ConversationsMessagingSettingsArgs | undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["event"] = args ? args.event : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConversationsMessagingSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConversationsMessagingSettings resources.
 */
export interface ConversationsMessagingSettingsState {
    /**
     * Settings relating to message contents
     */
    content?: pulumi.Input<inputs.ConversationsMessagingSettingsContent>;
    /**
     * Settings relating to events which may occur
     */
    event?: pulumi.Input<inputs.ConversationsMessagingSettingsEvent>;
    /**
     * The messaging Setting profile name
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConversationsMessagingSettings resource.
 */
export interface ConversationsMessagingSettingsArgs {
    /**
     * Settings relating to message contents
     */
    content?: pulumi.Input<inputs.ConversationsMessagingSettingsContent>;
    /**
     * Settings relating to events which may occur
     */
    event?: pulumi.Input<inputs.ConversationsMessagingSettingsEvent>;
    /**
     * The messaging Setting profile name
     */
    name?: pulumi.Input<string>;
}
