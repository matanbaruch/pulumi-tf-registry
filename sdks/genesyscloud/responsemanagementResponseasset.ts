// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ResponsemanagementResponseasset extends pulumi.CustomResource {
    /**
     * Get an existing ResponsemanagementResponseasset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResponsemanagementResponseassetState, opts?: pulumi.CustomResourceOptions): ResponsemanagementResponseasset {
        return new ResponsemanagementResponseasset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/responsemanagementResponseasset:ResponsemanagementResponseasset';

    /**
     * Returns true if the given object is an instance of ResponsemanagementResponseasset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResponsemanagementResponseasset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResponsemanagementResponseasset.__pulumiType;
    }

    /**
     * Division to associate to this asset. Can only be used with this division.
     */
    public readonly divisionId!: pulumi.Output<string>;
    /**
     * Hash value of the response asset file content. Used to detect changes.
     */
    public readonly fileContentHash!: pulumi.Output<string>;
    /**
     * Name of the file to upload. Changing the name attribute will cause the existing response asset to be dropped and
     * recreated with a new ID. It must not start with a dot and not end with a forward slash. The following characters are not
     * allowed: \{^}%`]">[~<#|
     */
    public readonly filename!: pulumi.Output<string>;

    /**
     * Create a ResponsemanagementResponseasset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResponsemanagementResponseassetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResponsemanagementResponseassetArgs | ResponsemanagementResponseassetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResponsemanagementResponseassetState | undefined;
            resourceInputs["divisionId"] = state ? state.divisionId : undefined;
            resourceInputs["fileContentHash"] = state ? state.fileContentHash : undefined;
            resourceInputs["filename"] = state ? state.filename : undefined;
        } else {
            const args = argsOrState as ResponsemanagementResponseassetArgs | undefined;
            if ((!args || args.fileContentHash === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileContentHash'");
            }
            if ((!args || args.filename === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filename'");
            }
            resourceInputs["divisionId"] = args ? args.divisionId : undefined;
            resourceInputs["fileContentHash"] = args ? args.fileContentHash : undefined;
            resourceInputs["filename"] = args ? args.filename : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResponsemanagementResponseasset.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ResponsemanagementResponseasset resources.
 */
export interface ResponsemanagementResponseassetState {
    /**
     * Division to associate to this asset. Can only be used with this division.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * Hash value of the response asset file content. Used to detect changes.
     */
    fileContentHash?: pulumi.Input<string>;
    /**
     * Name of the file to upload. Changing the name attribute will cause the existing response asset to be dropped and
     * recreated with a new ID. It must not start with a dot and not end with a forward slash. The following characters are not
     * allowed: \{^}%`]">[~<#|
     */
    filename?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResponsemanagementResponseasset resource.
 */
export interface ResponsemanagementResponseassetArgs {
    /**
     * Division to associate to this asset. Can only be used with this division.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * Hash value of the response asset file content. Used to detect changes.
     */
    fileContentHash: pulumi.Input<string>;
    /**
     * Name of the file to upload. Changing the name attribute will cause the existing response asset to be dropped and
     * recreated with a new ID. It must not start with a dot and not end with a forward slash. The following characters are not
     * allowed: \{^}%`]">[~<#|
     */
    filename: pulumi.Input<string>;
}
