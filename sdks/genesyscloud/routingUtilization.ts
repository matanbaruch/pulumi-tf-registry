// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RoutingUtilization extends pulumi.CustomResource {
    /**
     * Get an existing RoutingUtilization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingUtilizationState, opts?: pulumi.CustomResourceOptions): RoutingUtilization {
        return new RoutingUtilization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/routingUtilization:RoutingUtilization';

    /**
     * Returns true if the given object is an instance of RoutingUtilization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutingUtilization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutingUtilization.__pulumiType;
    }

    /**
     * Call media settings. If not set, this reverts to the default media type settings.
     */
    public readonly call!: pulumi.Output<outputs.RoutingUtilizationCall | undefined>;
    /**
     * Callback media settings. If not set, this reverts to the default media type settings.
     */
    public readonly callback!: pulumi.Output<outputs.RoutingUtilizationCallback | undefined>;
    /**
     * Chat media settings. If not set, this reverts to the default media type settings.
     */
    public readonly chat!: pulumi.Output<outputs.RoutingUtilizationChat | undefined>;
    /**
     * Email media settings. If not set, this reverts to the default media type settings.
     */
    public readonly email!: pulumi.Output<outputs.RoutingUtilizationEmail | undefined>;
    /**
     * Label utilization settings. If not set, default label settings will be applied.
     */
    public readonly labelUtilizations!: pulumi.Output<outputs.RoutingUtilizationLabelUtilization[] | undefined>;
    /**
     * Message media settings. If not set, this reverts to the default media type settings.
     */
    public readonly message!: pulumi.Output<outputs.RoutingUtilizationMessage | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.RoutingUtilizationTimeouts | undefined>;

    /**
     * Create a RoutingUtilization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoutingUtilizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutingUtilizationArgs | RoutingUtilizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutingUtilizationState | undefined;
            resourceInputs["call"] = state ? state.call : undefined;
            resourceInputs["callback"] = state ? state.callback : undefined;
            resourceInputs["chat"] = state ? state.chat : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["labelUtilizations"] = state ? state.labelUtilizations : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as RoutingUtilizationArgs | undefined;
            resourceInputs["call"] = args ? args.call : undefined;
            resourceInputs["callback"] = args ? args.callback : undefined;
            resourceInputs["chat"] = args ? args.chat : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["labelUtilizations"] = args ? args.labelUtilizations : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutingUtilization.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoutingUtilization resources.
 */
export interface RoutingUtilizationState {
    /**
     * Call media settings. If not set, this reverts to the default media type settings.
     */
    call?: pulumi.Input<inputs.RoutingUtilizationCall>;
    /**
     * Callback media settings. If not set, this reverts to the default media type settings.
     */
    callback?: pulumi.Input<inputs.RoutingUtilizationCallback>;
    /**
     * Chat media settings. If not set, this reverts to the default media type settings.
     */
    chat?: pulumi.Input<inputs.RoutingUtilizationChat>;
    /**
     * Email media settings. If not set, this reverts to the default media type settings.
     */
    email?: pulumi.Input<inputs.RoutingUtilizationEmail>;
    /**
     * Label utilization settings. If not set, default label settings will be applied.
     */
    labelUtilizations?: pulumi.Input<pulumi.Input<inputs.RoutingUtilizationLabelUtilization>[]>;
    /**
     * Message media settings. If not set, this reverts to the default media type settings.
     */
    message?: pulumi.Input<inputs.RoutingUtilizationMessage>;
    timeouts?: pulumi.Input<inputs.RoutingUtilizationTimeouts>;
}

/**
 * The set of arguments for constructing a RoutingUtilization resource.
 */
export interface RoutingUtilizationArgs {
    /**
     * Call media settings. If not set, this reverts to the default media type settings.
     */
    call?: pulumi.Input<inputs.RoutingUtilizationCall>;
    /**
     * Callback media settings. If not set, this reverts to the default media type settings.
     */
    callback?: pulumi.Input<inputs.RoutingUtilizationCallback>;
    /**
     * Chat media settings. If not set, this reverts to the default media type settings.
     */
    chat?: pulumi.Input<inputs.RoutingUtilizationChat>;
    /**
     * Email media settings. If not set, this reverts to the default media type settings.
     */
    email?: pulumi.Input<inputs.RoutingUtilizationEmail>;
    /**
     * Label utilization settings. If not set, default label settings will be applied.
     */
    labelUtilizations?: pulumi.Input<pulumi.Input<inputs.RoutingUtilizationLabelUtilization>[]>;
    /**
     * Message media settings. If not set, this reverts to the default media type settings.
     */
    message?: pulumi.Input<inputs.RoutingUtilizationMessage>;
    timeouts?: pulumi.Input<inputs.RoutingUtilizationTimeouts>;
}
