// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WidgetDeployment extends pulumi.CustomResource {
    /**
     * Get an existing WidgetDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WidgetDeploymentState, opts?: pulumi.CustomResourceOptions): WidgetDeployment {
        return new WidgetDeployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/widgetDeployment:WidgetDeployment';

    /**
     * Returns true if the given object is an instance of WidgetDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WidgetDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WidgetDeployment.__pulumiType;
    }

    /**
     * The list of domains that are approved to use this Deployment; the list will be added to CORS headers for ease of web use
     */
    public readonly allowedDomains!: pulumi.Output<string[] | undefined>;
    /**
     * When true, the customer members starting a chat must be authenticated by supplying their JWT to the create operation.
     */
    public readonly authenticationRequired!: pulumi.Output<boolean>;
    /**
     * The V1 and V1-http client configuration options that should be made available to the clients of this Deployment.
     *
     * @deprecated Deprecated
     */
    public readonly clientConfig!: pulumi.Output<outputs.WidgetDeploymentClientConfig | undefined>;
    /**
     * The type of display widget for which this Deployment is configured, which controls the administrator settings shown.
     * Valid values: v1, v1-http, v2, third-party
     */
    public readonly clientType!: pulumi.Output<string>;
    /**
     * Widget Deployment description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * When true, all create chat operations using this Deployment will be rejected.
     */
    public readonly disabled!: pulumi.Output<boolean>;
    /**
     * The Inbound Chat Flow to run when new chats are initiated under this Deployment
     */
    public readonly flowId!: pulumi.Output<string | undefined>;
    /**
     * Name of the Widget Deployment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The third party client configuration options that should be made available to the clients of this Deployment.
     */
    public readonly thirdPartyClientConfig!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The v2 client configuration options that should be made available to the clients of this Deployment.
     */
    public readonly v2ClientConfig!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a WidgetDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WidgetDeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WidgetDeploymentArgs | WidgetDeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WidgetDeploymentState | undefined;
            resourceInputs["allowedDomains"] = state ? state.allowedDomains : undefined;
            resourceInputs["authenticationRequired"] = state ? state.authenticationRequired : undefined;
            resourceInputs["clientConfig"] = state ? state.clientConfig : undefined;
            resourceInputs["clientType"] = state ? state.clientType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["flowId"] = state ? state.flowId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["thirdPartyClientConfig"] = state ? state.thirdPartyClientConfig : undefined;
            resourceInputs["v2ClientConfig"] = state ? state.v2ClientConfig : undefined;
        } else {
            const args = argsOrState as WidgetDeploymentArgs | undefined;
            if ((!args || args.authenticationRequired === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationRequired'");
            }
            if ((!args || args.clientType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientType'");
            }
            if ((!args || args.disabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'disabled'");
            }
            resourceInputs["allowedDomains"] = args ? args.allowedDomains : undefined;
            resourceInputs["authenticationRequired"] = args ? args.authenticationRequired : undefined;
            resourceInputs["clientConfig"] = args ? args.clientConfig : undefined;
            resourceInputs["clientType"] = args ? args.clientType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["flowId"] = args ? args.flowId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["thirdPartyClientConfig"] = args ? args.thirdPartyClientConfig : undefined;
            resourceInputs["v2ClientConfig"] = args ? args.v2ClientConfig : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WidgetDeployment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WidgetDeployment resources.
 */
export interface WidgetDeploymentState {
    /**
     * The list of domains that are approved to use this Deployment; the list will be added to CORS headers for ease of web use
     */
    allowedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When true, the customer members starting a chat must be authenticated by supplying their JWT to the create operation.
     */
    authenticationRequired?: pulumi.Input<boolean>;
    /**
     * The V1 and V1-http client configuration options that should be made available to the clients of this Deployment.
     *
     * @deprecated Deprecated
     */
    clientConfig?: pulumi.Input<inputs.WidgetDeploymentClientConfig>;
    /**
     * The type of display widget for which this Deployment is configured, which controls the administrator settings shown.
     * Valid values: v1, v1-http, v2, third-party
     */
    clientType?: pulumi.Input<string>;
    /**
     * Widget Deployment description.
     */
    description?: pulumi.Input<string>;
    /**
     * When true, all create chat operations using this Deployment will be rejected.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * The Inbound Chat Flow to run when new chats are initiated under this Deployment
     */
    flowId?: pulumi.Input<string>;
    /**
     * Name of the Widget Deployment.
     */
    name?: pulumi.Input<string>;
    /**
     * The third party client configuration options that should be made available to the clients of this Deployment.
     */
    thirdPartyClientConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The v2 client configuration options that should be made available to the clients of this Deployment.
     */
    v2ClientConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a WidgetDeployment resource.
 */
export interface WidgetDeploymentArgs {
    /**
     * The list of domains that are approved to use this Deployment; the list will be added to CORS headers for ease of web use
     */
    allowedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When true, the customer members starting a chat must be authenticated by supplying their JWT to the create operation.
     */
    authenticationRequired: pulumi.Input<boolean>;
    /**
     * The V1 and V1-http client configuration options that should be made available to the clients of this Deployment.
     *
     * @deprecated Deprecated
     */
    clientConfig?: pulumi.Input<inputs.WidgetDeploymentClientConfig>;
    /**
     * The type of display widget for which this Deployment is configured, which controls the administrator settings shown.
     * Valid values: v1, v1-http, v2, third-party
     */
    clientType: pulumi.Input<string>;
    /**
     * Widget Deployment description.
     */
    description?: pulumi.Input<string>;
    /**
     * When true, all create chat operations using this Deployment will be rejected.
     */
    disabled: pulumi.Input<boolean>;
    /**
     * The Inbound Chat Flow to run when new chats are initiated under this Deployment
     */
    flowId?: pulumi.Input<string>;
    /**
     * Name of the Widget Deployment.
     */
    name?: pulumi.Input<string>;
    /**
     * The third party client configuration options that should be made available to the clients of this Deployment.
     */
    thirdPartyClientConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The v2 client configuration options that should be made available to the clients of this Deployment.
     */
    v2ClientConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
