// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OutboundDnclist extends pulumi.CustomResource {
    /**
     * Get an existing OutboundDnclist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OutboundDnclistState, opts?: pulumi.CustomResourceOptions): OutboundDnclist {
        return new OutboundDnclist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'genesyscloud:index/outboundDnclist:OutboundDnclist';

    /**
     * Returns true if the given object is an instance of OutboundDnclist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OutboundDnclist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OutboundDnclist.__pulumiType;
    }

    /**
     * A dnc.com campaignId. Optional if the dncSourceType is dnc.com.
     */
    public readonly campaignId!: pulumi.Output<string | undefined>;
    /**
     * The contact method. Required if dncSourceType is rds.
     */
    public readonly contactMethod!: pulumi.Output<string>;
    /**
     * The division this DNC List belongs to.
     */
    public readonly divisionId!: pulumi.Output<string>;
    /**
     * The list of dnc.com codes to be treated as DNC. Required if the dncSourceType is dnc.com.
     */
    public readonly dncCodes!: pulumi.Output<string[] | undefined>;
    /**
     * The type of the DNC List. Changing the dnc_source_attribute will cause the outbound_dnclist object to be dropped and
     * recreated with new ID.
     */
    public readonly dncSourceType!: pulumi.Output<string>;
    /**
     * Rows to add to the DNC list. To emulate removing phone numbers, you can set expiration_date to a date in the past.
     */
    public readonly entries!: pulumi.Output<outputs.OutboundDnclistEntry[] | undefined>;
    /**
     * A gryphon license number. Required if the dncSourceType is gryphon.
     */
    public readonly licenseId!: pulumi.Output<string | undefined>;
    /**
     * A dnc.com loginId. Required if the dncSourceType is dnc.com.
     */
    public readonly loginId!: pulumi.Output<string | undefined>;
    /**
     * The name of the DncList.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a OutboundDnclist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OutboundDnclistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OutboundDnclistArgs | OutboundDnclistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OutboundDnclistState | undefined;
            resourceInputs["campaignId"] = state ? state.campaignId : undefined;
            resourceInputs["contactMethod"] = state ? state.contactMethod : undefined;
            resourceInputs["divisionId"] = state ? state.divisionId : undefined;
            resourceInputs["dncCodes"] = state ? state.dncCodes : undefined;
            resourceInputs["dncSourceType"] = state ? state.dncSourceType : undefined;
            resourceInputs["entries"] = state ? state.entries : undefined;
            resourceInputs["licenseId"] = state ? state.licenseId : undefined;
            resourceInputs["loginId"] = state ? state.loginId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as OutboundDnclistArgs | undefined;
            if ((!args || args.dncSourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dncSourceType'");
            }
            resourceInputs["campaignId"] = args ? args.campaignId : undefined;
            resourceInputs["contactMethod"] = args ? args.contactMethod : undefined;
            resourceInputs["divisionId"] = args ? args.divisionId : undefined;
            resourceInputs["dncCodes"] = args ? args.dncCodes : undefined;
            resourceInputs["dncSourceType"] = args ? args.dncSourceType : undefined;
            resourceInputs["entries"] = args ? args.entries : undefined;
            resourceInputs["licenseId"] = args ? args.licenseId : undefined;
            resourceInputs["loginId"] = args ? args.loginId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OutboundDnclist.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OutboundDnclist resources.
 */
export interface OutboundDnclistState {
    /**
     * A dnc.com campaignId. Optional if the dncSourceType is dnc.com.
     */
    campaignId?: pulumi.Input<string>;
    /**
     * The contact method. Required if dncSourceType is rds.
     */
    contactMethod?: pulumi.Input<string>;
    /**
     * The division this DNC List belongs to.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * The list of dnc.com codes to be treated as DNC. Required if the dncSourceType is dnc.com.
     */
    dncCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the DNC List. Changing the dnc_source_attribute will cause the outbound_dnclist object to be dropped and
     * recreated with new ID.
     */
    dncSourceType?: pulumi.Input<string>;
    /**
     * Rows to add to the DNC list. To emulate removing phone numbers, you can set expiration_date to a date in the past.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.OutboundDnclistEntry>[]>;
    /**
     * A gryphon license number. Required if the dncSourceType is gryphon.
     */
    licenseId?: pulumi.Input<string>;
    /**
     * A dnc.com loginId. Required if the dncSourceType is dnc.com.
     */
    loginId?: pulumi.Input<string>;
    /**
     * The name of the DncList.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OutboundDnclist resource.
 */
export interface OutboundDnclistArgs {
    /**
     * A dnc.com campaignId. Optional if the dncSourceType is dnc.com.
     */
    campaignId?: pulumi.Input<string>;
    /**
     * The contact method. Required if dncSourceType is rds.
     */
    contactMethod?: pulumi.Input<string>;
    /**
     * The division this DNC List belongs to.
     */
    divisionId?: pulumi.Input<string>;
    /**
     * The list of dnc.com codes to be treated as DNC. Required if the dncSourceType is dnc.com.
     */
    dncCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the DNC List. Changing the dnc_source_attribute will cause the outbound_dnclist object to be dropped and
     * recreated with new ID.
     */
    dncSourceType: pulumi.Input<string>;
    /**
     * Rows to add to the DNC list. To emulate removing phone numbers, you can set expiration_date to a date in the past.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.OutboundDnclistEntry>[]>;
    /**
     * A gryphon license number. Required if the dncSourceType is gryphon.
     */
    licenseId?: pulumi.Input<string>;
    /**
     * A dnc.com loginId. Required if the dncSourceType is dnc.com.
     */
    loginId?: pulumi.Input<string>;
    /**
     * The name of the DncList.
     */
    name?: pulumi.Input<string>;
}
