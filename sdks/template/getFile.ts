// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFile(args?: GetFileArgs, opts?: pulumi.InvokeOptions): Promise<GetFileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("template:index/getFile:getFile", {
        "filename": args.filename,
        "id": args.id,
        "template": args.template,
        "vars": args.vars,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFile.
 */
export interface GetFileArgs {
    filename?: string;
    id?: string;
    template?: string;
    vars?: {[key: string]: string};
}

/**
 * A collection of values returned by getFile.
 */
export interface GetFileResult {
    readonly filename?: string;
    readonly id: string;
    readonly rendered: string;
    readonly template?: string;
    readonly vars?: {[key: string]: string};
}
export function getFileOutput(args?: GetFileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileResult> {
    return pulumi.output(args).apply((a: any) => getFile(a, opts))
}

/**
 * A collection of arguments for invoking getFile.
 */
export interface GetFileOutputArgs {
    filename?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    template?: pulumi.Input<string>;
    vars?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
