// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudinitConfig(args: GetCloudinitConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudinitConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("template:index/getCloudinitConfig:getCloudinitConfig", {
        "base64Encode": args.base64Encode,
        "gzip": args.gzip,
        "id": args.id,
        "parts": args.parts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudinitConfig.
 */
export interface GetCloudinitConfigArgs {
    base64Encode?: boolean;
    gzip?: boolean;
    id?: string;
    parts: inputs.GetCloudinitConfigPart[];
}

/**
 * A collection of values returned by getCloudinitConfig.
 */
export interface GetCloudinitConfigResult {
    readonly base64Encode?: boolean;
    readonly gzip?: boolean;
    readonly id: string;
    readonly parts: outputs.GetCloudinitConfigPart[];
    readonly rendered: string;
}
export function getCloudinitConfigOutput(args: GetCloudinitConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudinitConfigResult> {
    return pulumi.output(args).apply((a: any) => getCloudinitConfig(a, opts))
}

/**
 * A collection of arguments for invoking getCloudinitConfig.
 */
export interface GetCloudinitConfigOutputArgs {
    base64Encode?: pulumi.Input<boolean>;
    gzip?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    parts: pulumi.Input<pulumi.Input<inputs.GetCloudinitConfigPartArgs>[]>;
}
