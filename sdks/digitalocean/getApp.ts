// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApp(args: GetAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getApp:getApp", {
        "appId": args.appId,
        "dedicatedIps": args.dedicatedIps,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApp.
 */
export interface GetAppArgs {
    appId: string;
    dedicatedIps?: inputs.GetAppDedicatedIp[];
    id?: string;
}

/**
 * A collection of values returned by getApp.
 */
export interface GetAppResult {
    readonly activeDeploymentId: string;
    readonly appId: string;
    readonly createdAt: string;
    readonly dedicatedIps?: outputs.GetAppDedicatedIp[];
    readonly defaultIngress: string;
    readonly id: string;
    readonly liveUrl: string;
    readonly projectId: string;
    readonly specs: outputs.GetAppSpec[];
    readonly updatedAt: string;
    readonly urn: string;
}
export function getAppOutput(args: GetAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppResult> {
    return pulumi.output(args).apply((a: any) => getApp(a, opts))
}

/**
 * A collection of arguments for invoking getApp.
 */
export interface GetAppOutputArgs {
    appId: pulumi.Input<string>;
    dedicatedIps?: pulumi.Input<pulumi.Input<inputs.GetAppDedicatedIpArgs>[]>;
    id?: pulumi.Input<string>;
}
