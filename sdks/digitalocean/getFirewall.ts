// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewall(args: GetFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getFirewall:getFirewall", {
        "dropletIds": args.dropletIds,
        "firewallId": args.firewallId,
        "id": args.id,
        "inboundRules": args.inboundRules,
        "outboundRules": args.outboundRules,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallArgs {
    dropletIds?: number[];
    firewallId: string;
    id?: string;
    inboundRules?: inputs.GetFirewallInboundRule[];
    outboundRules?: inputs.GetFirewallOutboundRule[];
    tags?: string[];
}

/**
 * A collection of values returned by getFirewall.
 */
export interface GetFirewallResult {
    readonly createdAt: string;
    readonly dropletIds: number[];
    readonly firewallId: string;
    readonly id: string;
    readonly inboundRules?: outputs.GetFirewallInboundRule[];
    readonly name: string;
    readonly outboundRules?: outputs.GetFirewallOutboundRule[];
    readonly pendingChanges: outputs.GetFirewallPendingChange[];
    readonly status: string;
    readonly tags: string[];
}
export function getFirewallOutput(args: GetFirewallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallResult> {
    return pulumi.output(args).apply((a: any) => getFirewall(a, opts))
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallOutputArgs {
    dropletIds?: pulumi.Input<pulumi.Input<number>[]>;
    firewallId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inboundRules?: pulumi.Input<pulumi.Input<inputs.GetFirewallInboundRuleArgs>[]>;
    outboundRules?: pulumi.Input<pulumi.Input<inputs.GetFirewallOutboundRuleArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
