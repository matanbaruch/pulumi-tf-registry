// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKubernetesVersions(args?: GetKubernetesVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesVersionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getKubernetesVersions:getKubernetesVersions", {
        "id": args.id,
        "versionPrefix": args.versionPrefix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesVersions.
 */
export interface GetKubernetesVersionsArgs {
    id?: string;
    versionPrefix?: string;
}

/**
 * A collection of values returned by getKubernetesVersions.
 */
export interface GetKubernetesVersionsResult {
    readonly id: string;
    readonly latestVersion: string;
    readonly validVersions: string[];
    readonly versionPrefix?: string;
}
export function getKubernetesVersionsOutput(args?: GetKubernetesVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesVersionsResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesVersions(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesVersions.
 */
export interface GetKubernetesVersionsOutputArgs {
    id?: pulumi.Input<string>;
    versionPrefix?: pulumi.Input<string>;
}
