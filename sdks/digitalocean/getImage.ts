// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getImage(args?: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getImage:getImage", {
        "id": args.id,
        "name": args.name,
        "slug": args.slug,
        "source": args.source,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    id?: number;
    name?: string;
    slug?: string;
    source?: string;
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    readonly created: string;
    readonly description: string;
    readonly distribution: string;
    readonly errorMessage: string;
    readonly id: number;
    readonly image: string;
    readonly minDiskSize: number;
    readonly name: string;
    readonly private: boolean;
    readonly regions: string[];
    readonly sizeGigabytes: number;
    readonly slug: string;
    readonly source?: string;
    readonly status: string;
    readonly tags: string[];
    readonly type: string;
}
export function getImageOutput(args?: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult> {
    return pulumi.output(args).apply((a: any) => getImage(a, opts))
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    slug?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
}
