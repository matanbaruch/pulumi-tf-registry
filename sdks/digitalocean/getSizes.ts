// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSizes(args?: GetSizesArgs, opts?: pulumi.InvokeOptions): Promise<GetSizesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getSizes:getSizes", {
        "filters": args.filters,
        "id": args.id,
        "sorts": args.sorts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSizes.
 */
export interface GetSizesArgs {
    filters?: inputs.GetSizesFilter[];
    id?: string;
    sorts?: inputs.GetSizesSort[];
}

/**
 * A collection of values returned by getSizes.
 */
export interface GetSizesResult {
    readonly filters?: outputs.GetSizesFilter[];
    readonly id: string;
    readonly sizes: outputs.GetSizesSize[];
    readonly sorts?: outputs.GetSizesSort[];
}
export function getSizesOutput(args?: GetSizesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSizesResult> {
    return pulumi.output(args).apply((a: any) => getSizes(a, opts))
}

/**
 * A collection of arguments for invoking getSizes.
 */
export interface GetSizesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetSizesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    sorts?: pulumi.Input<pulumi.Input<inputs.GetSizesSortArgs>[]>;
}
