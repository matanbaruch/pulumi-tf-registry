// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDroplets(args?: GetDropletsArgs, opts?: pulumi.InvokeOptions): Promise<GetDropletsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getDroplets:getDroplets", {
        "filters": args.filters,
        "id": args.id,
        "sorts": args.sorts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDroplets.
 */
export interface GetDropletsArgs {
    filters?: inputs.GetDropletsFilter[];
    id?: string;
    sorts?: inputs.GetDropletsSort[];
}

/**
 * A collection of values returned by getDroplets.
 */
export interface GetDropletsResult {
    readonly droplets: outputs.GetDropletsDroplet[];
    readonly filters?: outputs.GetDropletsFilter[];
    readonly id: string;
    readonly sorts?: outputs.GetDropletsSort[];
}
export function getDropletsOutput(args?: GetDropletsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDropletsResult> {
    return pulumi.output(args).apply((a: any) => getDroplets(a, opts))
}

/**
 * A collection of arguments for invoking getDroplets.
 */
export interface GetDropletsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDropletsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    sorts?: pulumi.Input<pulumi.Input<inputs.GetDropletsSortArgs>[]>;
}
