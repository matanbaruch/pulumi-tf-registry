// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getReservedIp(args: GetReservedIpArgs, opts?: pulumi.InvokeOptions): Promise<GetReservedIpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getReservedIp:getReservedIp", {
        "id": args.id,
        "ipAddress": args.ipAddress,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReservedIp.
 */
export interface GetReservedIpArgs {
    id?: string;
    ipAddress: string;
}

/**
 * A collection of values returned by getReservedIp.
 */
export interface GetReservedIpResult {
    readonly dropletId: number;
    readonly id: string;
    readonly ipAddress: string;
    readonly region: string;
    readonly urn: string;
}
export function getReservedIpOutput(args: GetReservedIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReservedIpResult> {
    return pulumi.output(args).apply((a: any) => getReservedIp(a, opts))
}

/**
 * A collection of arguments for invoking getReservedIp.
 */
export interface GetReservedIpOutputArgs {
    id?: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
}
