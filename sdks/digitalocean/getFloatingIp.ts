// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFloatingIp(args: GetFloatingIpArgs, opts?: pulumi.InvokeOptions): Promise<GetFloatingIpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getFloatingIp:getFloatingIp", {
        "id": args.id,
        "ipAddress": args.ipAddress,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFloatingIp.
 */
export interface GetFloatingIpArgs {
    id?: string;
    ipAddress: string;
}

/**
 * A collection of values returned by getFloatingIp.
 */
export interface GetFloatingIpResult {
    readonly dropletId: number;
    readonly id: string;
    readonly ipAddress: string;
    readonly region: string;
    readonly urn: string;
}
export function getFloatingIpOutput(args: GetFloatingIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFloatingIpResult> {
    return pulumi.output(args).apply((a: any) => getFloatingIp(a, opts))
}

/**
 * A collection of arguments for invoking getFloatingIp.
 */
export interface GetFloatingIpOutputArgs {
    id?: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
}
