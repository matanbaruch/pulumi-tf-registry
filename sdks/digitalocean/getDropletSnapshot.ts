// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDropletSnapshot(args?: GetDropletSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetDropletSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getDropletSnapshot:getDropletSnapshot", {
        "id": args.id,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDropletSnapshot.
 */
export interface GetDropletSnapshotArgs {
    id?: string;
    mostRecent?: boolean;
    name?: string;
    nameRegex?: string;
    region?: string;
}

/**
 * A collection of values returned by getDropletSnapshot.
 */
export interface GetDropletSnapshotResult {
    readonly createdAt: string;
    readonly dropletId: string;
    readonly id: string;
    readonly minDiskSize: number;
    readonly mostRecent?: boolean;
    readonly name?: string;
    readonly nameRegex?: string;
    readonly region?: string;
    readonly regions: string[];
    readonly size: number;
}
export function getDropletSnapshotOutput(args?: GetDropletSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDropletSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getDropletSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getDropletSnapshot.
 */
export interface GetDropletSnapshotOutputArgs {
    id?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
