// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseUser(args: GetDatabaseUserArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getDatabaseUser:getDatabaseUser", {
        "clusterId": args.clusterId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseUser.
 */
export interface GetDatabaseUserArgs {
    clusterId: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getDatabaseUser.
 */
export interface GetDatabaseUserResult {
    readonly accessCert: string;
    readonly accessKey: string;
    readonly clusterId: string;
    readonly id: string;
    readonly mysqlAuthPlugin: string;
    readonly name: string;
    readonly password: string;
    readonly role: string;
    readonly settings: outputs.GetDatabaseUserSetting[];
}
export function getDatabaseUserOutput(args: GetDatabaseUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseUserResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseUser(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseUser.
 */
export interface GetDatabaseUserOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
