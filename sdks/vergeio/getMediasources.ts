// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediasources(args?: GetMediasourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetMediasourcesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vergeio:index/getMediasources:getMediasources", {
        "filterName": args.filterName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediasources.
 */
export interface GetMediasourcesArgs {
    filterName?: string;
    id?: string;
}

/**
 * A collection of values returned by getMediasources.
 */
export interface GetMediasourcesResult {
    readonly filterName?: string;
    readonly id: string;
    readonly mediasources: outputs.GetMediasourcesMediasource[];
}
export function getMediasourcesOutput(args?: GetMediasourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediasourcesResult> {
    return pulumi.output(args).apply((a: any) => getMediasources(a, opts))
}

/**
 * A collection of arguments for invoking getMediasources.
 */
export interface GetMediasourcesOutputArgs {
    filterName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
