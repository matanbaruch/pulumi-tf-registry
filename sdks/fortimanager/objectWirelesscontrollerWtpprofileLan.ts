// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectWirelesscontrollerWtpprofileLan extends pulumi.CustomResource {
    /**
     * Get an existing ObjectWirelesscontrollerWtpprofileLan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectWirelesscontrollerWtpprofileLanState, opts?: pulumi.CustomResourceOptions): ObjectWirelesscontrollerWtpprofileLan {
        return new ObjectWirelesscontrollerWtpprofileLan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectWirelesscontrollerWtpprofileLan:ObjectWirelesscontrollerWtpprofileLan';

    /**
     * Returns true if the given object is an instance of ObjectWirelesscontrollerWtpprofileLan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectWirelesscontrollerWtpprofileLan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectWirelesscontrollerWtpprofileLan.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly port1Mode!: pulumi.Output<string | undefined>;
    public readonly port1Ssid!: pulumi.Output<string | undefined>;
    public readonly port2Mode!: pulumi.Output<string | undefined>;
    public readonly port2Ssid!: pulumi.Output<string | undefined>;
    public readonly port3Mode!: pulumi.Output<string | undefined>;
    public readonly port3Ssid!: pulumi.Output<string | undefined>;
    public readonly port4Mode!: pulumi.Output<string | undefined>;
    public readonly port4Ssid!: pulumi.Output<string | undefined>;
    public readonly port5Mode!: pulumi.Output<string | undefined>;
    public readonly port5Ssid!: pulumi.Output<string | undefined>;
    public readonly port6Mode!: pulumi.Output<string | undefined>;
    public readonly port6Ssid!: pulumi.Output<string | undefined>;
    public readonly port7Mode!: pulumi.Output<string | undefined>;
    public readonly port7Ssid!: pulumi.Output<string | undefined>;
    public readonly port8Mode!: pulumi.Output<string | undefined>;
    public readonly port8Ssid!: pulumi.Output<string | undefined>;
    public readonly portEslMode!: pulumi.Output<string>;
    public readonly portEslSsid!: pulumi.Output<string | undefined>;
    public readonly portMode!: pulumi.Output<string | undefined>;
    public readonly portSsid!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly wtpProfile!: pulumi.Output<string>;

    /**
     * Create a ObjectWirelesscontrollerWtpprofileLan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectWirelesscontrollerWtpprofileLanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectWirelesscontrollerWtpprofileLanArgs | ObjectWirelesscontrollerWtpprofileLanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectWirelesscontrollerWtpprofileLanState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["port1Mode"] = state ? state.port1Mode : undefined;
            resourceInputs["port1Ssid"] = state ? state.port1Ssid : undefined;
            resourceInputs["port2Mode"] = state ? state.port2Mode : undefined;
            resourceInputs["port2Ssid"] = state ? state.port2Ssid : undefined;
            resourceInputs["port3Mode"] = state ? state.port3Mode : undefined;
            resourceInputs["port3Ssid"] = state ? state.port3Ssid : undefined;
            resourceInputs["port4Mode"] = state ? state.port4Mode : undefined;
            resourceInputs["port4Ssid"] = state ? state.port4Ssid : undefined;
            resourceInputs["port5Mode"] = state ? state.port5Mode : undefined;
            resourceInputs["port5Ssid"] = state ? state.port5Ssid : undefined;
            resourceInputs["port6Mode"] = state ? state.port6Mode : undefined;
            resourceInputs["port6Ssid"] = state ? state.port6Ssid : undefined;
            resourceInputs["port7Mode"] = state ? state.port7Mode : undefined;
            resourceInputs["port7Ssid"] = state ? state.port7Ssid : undefined;
            resourceInputs["port8Mode"] = state ? state.port8Mode : undefined;
            resourceInputs["port8Ssid"] = state ? state.port8Ssid : undefined;
            resourceInputs["portEslMode"] = state ? state.portEslMode : undefined;
            resourceInputs["portEslSsid"] = state ? state.portEslSsid : undefined;
            resourceInputs["portMode"] = state ? state.portMode : undefined;
            resourceInputs["portSsid"] = state ? state.portSsid : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["wtpProfile"] = state ? state.wtpProfile : undefined;
        } else {
            const args = argsOrState as ObjectWirelesscontrollerWtpprofileLanArgs | undefined;
            if ((!args || args.wtpProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wtpProfile'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["port1Mode"] = args ? args.port1Mode : undefined;
            resourceInputs["port1Ssid"] = args ? args.port1Ssid : undefined;
            resourceInputs["port2Mode"] = args ? args.port2Mode : undefined;
            resourceInputs["port2Ssid"] = args ? args.port2Ssid : undefined;
            resourceInputs["port3Mode"] = args ? args.port3Mode : undefined;
            resourceInputs["port3Ssid"] = args ? args.port3Ssid : undefined;
            resourceInputs["port4Mode"] = args ? args.port4Mode : undefined;
            resourceInputs["port4Ssid"] = args ? args.port4Ssid : undefined;
            resourceInputs["port5Mode"] = args ? args.port5Mode : undefined;
            resourceInputs["port5Ssid"] = args ? args.port5Ssid : undefined;
            resourceInputs["port6Mode"] = args ? args.port6Mode : undefined;
            resourceInputs["port6Ssid"] = args ? args.port6Ssid : undefined;
            resourceInputs["port7Mode"] = args ? args.port7Mode : undefined;
            resourceInputs["port7Ssid"] = args ? args.port7Ssid : undefined;
            resourceInputs["port8Mode"] = args ? args.port8Mode : undefined;
            resourceInputs["port8Ssid"] = args ? args.port8Ssid : undefined;
            resourceInputs["portEslMode"] = args ? args.portEslMode : undefined;
            resourceInputs["portEslSsid"] = args ? args.portEslSsid : undefined;
            resourceInputs["portMode"] = args ? args.portMode : undefined;
            resourceInputs["portSsid"] = args ? args.portSsid : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["wtpProfile"] = args ? args.wtpProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectWirelesscontrollerWtpprofileLan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectWirelesscontrollerWtpprofileLan resources.
 */
export interface ObjectWirelesscontrollerWtpprofileLanState {
    adom?: pulumi.Input<string>;
    port1Mode?: pulumi.Input<string>;
    port1Ssid?: pulumi.Input<string>;
    port2Mode?: pulumi.Input<string>;
    port2Ssid?: pulumi.Input<string>;
    port3Mode?: pulumi.Input<string>;
    port3Ssid?: pulumi.Input<string>;
    port4Mode?: pulumi.Input<string>;
    port4Ssid?: pulumi.Input<string>;
    port5Mode?: pulumi.Input<string>;
    port5Ssid?: pulumi.Input<string>;
    port6Mode?: pulumi.Input<string>;
    port6Ssid?: pulumi.Input<string>;
    port7Mode?: pulumi.Input<string>;
    port7Ssid?: pulumi.Input<string>;
    port8Mode?: pulumi.Input<string>;
    port8Ssid?: pulumi.Input<string>;
    portEslMode?: pulumi.Input<string>;
    portEslSsid?: pulumi.Input<string>;
    portMode?: pulumi.Input<string>;
    portSsid?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    wtpProfile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectWirelesscontrollerWtpprofileLan resource.
 */
export interface ObjectWirelesscontrollerWtpprofileLanArgs {
    adom?: pulumi.Input<string>;
    port1Mode?: pulumi.Input<string>;
    port1Ssid?: pulumi.Input<string>;
    port2Mode?: pulumi.Input<string>;
    port2Ssid?: pulumi.Input<string>;
    port3Mode?: pulumi.Input<string>;
    port3Ssid?: pulumi.Input<string>;
    port4Mode?: pulumi.Input<string>;
    port4Ssid?: pulumi.Input<string>;
    port5Mode?: pulumi.Input<string>;
    port5Ssid?: pulumi.Input<string>;
    port6Mode?: pulumi.Input<string>;
    port6Ssid?: pulumi.Input<string>;
    port7Mode?: pulumi.Input<string>;
    port7Ssid?: pulumi.Input<string>;
    port8Mode?: pulumi.Input<string>;
    port8Ssid?: pulumi.Input<string>;
    portEslMode?: pulumi.Input<string>;
    portEslSsid?: pulumi.Input<string>;
    portMode?: pulumi.Input<string>;
    portSsid?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    wtpProfile: pulumi.Input<string>;
}
