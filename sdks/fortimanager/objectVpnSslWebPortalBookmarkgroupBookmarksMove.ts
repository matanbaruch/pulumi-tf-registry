// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectVpnSslWebPortalBookmarkgroupBookmarksMove extends pulumi.CustomResource {
    /**
     * Get an existing ObjectVpnSslWebPortalBookmarkgroupBookmarksMove resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveState, opts?: pulumi.CustomResourceOptions): ObjectVpnSslWebPortalBookmarkgroupBookmarksMove {
        return new ObjectVpnSslWebPortalBookmarkgroupBookmarksMove(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectVpnSslWebPortalBookmarkgroupBookmarksMove:ObjectVpnSslWebPortalBookmarkgroupBookmarksMove';

    /**
     * Returns true if the given object is an instance of ObjectVpnSslWebPortalBookmarkgroupBookmarksMove.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectVpnSslWebPortalBookmarkgroupBookmarksMove {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectVpnSslWebPortalBookmarkgroupBookmarksMove.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly bookmarkGroup!: pulumi.Output<string>;
    public readonly bookmarks!: pulumi.Output<string>;
    public readonly option!: pulumi.Output<string>;
    public readonly portal!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly statePos!: pulumi.Output<string>;
    public readonly target!: pulumi.Output<string>;

    /**
     * Create a ObjectVpnSslWebPortalBookmarkgroupBookmarksMove resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveArgs | ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["bookmarkGroup"] = state ? state.bookmarkGroup : undefined;
            resourceInputs["bookmarks"] = state ? state.bookmarks : undefined;
            resourceInputs["option"] = state ? state.option : undefined;
            resourceInputs["portal"] = state ? state.portal : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["statePos"] = state ? state.statePos : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
        } else {
            const args = argsOrState as ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveArgs | undefined;
            if ((!args || args.bookmarkGroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bookmarkGroup'");
            }
            if ((!args || args.bookmarks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bookmarks'");
            }
            if ((!args || args.option === undefined) && !opts.urn) {
                throw new Error("Missing required property 'option'");
            }
            if ((!args || args.portal === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portal'");
            }
            if ((!args || args.target === undefined) && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["bookmarkGroup"] = args ? args.bookmarkGroup : undefined;
            resourceInputs["bookmarks"] = args ? args.bookmarks : undefined;
            resourceInputs["option"] = args ? args.option : undefined;
            resourceInputs["portal"] = args ? args.portal : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["statePos"] = args ? args.statePos : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectVpnSslWebPortalBookmarkgroupBookmarksMove.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectVpnSslWebPortalBookmarkgroupBookmarksMove resources.
 */
export interface ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveState {
    adom?: pulumi.Input<string>;
    bookmarkGroup?: pulumi.Input<string>;
    bookmarks?: pulumi.Input<string>;
    option?: pulumi.Input<string>;
    portal?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    statePos?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectVpnSslWebPortalBookmarkgroupBookmarksMove resource.
 */
export interface ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveArgs {
    adom?: pulumi.Input<string>;
    bookmarkGroup: pulumi.Input<string>;
    bookmarks: pulumi.Input<string>;
    option: pulumi.Input<string>;
    portal: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    statePos?: pulumi.Input<string>;
    target: pulumi.Input<string>;
}
