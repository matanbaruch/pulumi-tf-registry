// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectVideofilterProfile extends pulumi.CustomResource {
    /**
     * Get an existing ObjectVideofilterProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectVideofilterProfileState, opts?: pulumi.CustomResourceOptions): ObjectVideofilterProfile {
        return new ObjectVideofilterProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectVideofilterProfile:ObjectVideofilterProfile';

    /**
     * Returns true if the given object is an instance of ObjectVideofilterProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectVideofilterProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectVideofilterProfile.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly dailymotion!: pulumi.Output<string>;
    public readonly defaultAction!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly filters!: pulumi.Output<outputs.ObjectVideofilterProfileFilter[] | undefined>;
    public readonly fortiguardCategory!: pulumi.Output<outputs.ObjectVideofilterProfileFortiguardCategory | undefined>;
    public readonly log!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly replacemsgGroup!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly vimeo!: pulumi.Output<string>;
    public readonly vimeoRestrict!: pulumi.Output<string | undefined>;
    public readonly youtube!: pulumi.Output<string>;
    public readonly youtubeChannelFilter!: pulumi.Output<string | undefined>;
    public readonly youtubeRestrict!: pulumi.Output<string>;

    /**
     * Create a ObjectVideofilterProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectVideofilterProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectVideofilterProfileArgs | ObjectVideofilterProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectVideofilterProfileState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dailymotion"] = state ? state.dailymotion : undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["fortiguardCategory"] = state ? state.fortiguardCategory : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["replacemsgGroup"] = state ? state.replacemsgGroup : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["vimeo"] = state ? state.vimeo : undefined;
            resourceInputs["vimeoRestrict"] = state ? state.vimeoRestrict : undefined;
            resourceInputs["youtube"] = state ? state.youtube : undefined;
            resourceInputs["youtubeChannelFilter"] = state ? state.youtubeChannelFilter : undefined;
            resourceInputs["youtubeRestrict"] = state ? state.youtubeRestrict : undefined;
        } else {
            const args = argsOrState as ObjectVideofilterProfileArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dailymotion"] = args ? args.dailymotion : undefined;
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["fortiguardCategory"] = args ? args.fortiguardCategory : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replacemsgGroup"] = args ? args.replacemsgGroup : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["vimeo"] = args ? args.vimeo : undefined;
            resourceInputs["vimeoRestrict"] = args ? args.vimeoRestrict : undefined;
            resourceInputs["youtube"] = args ? args.youtube : undefined;
            resourceInputs["youtubeChannelFilter"] = args ? args.youtubeChannelFilter : undefined;
            resourceInputs["youtubeRestrict"] = args ? args.youtubeRestrict : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectVideofilterProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectVideofilterProfile resources.
 */
export interface ObjectVideofilterProfileState {
    adom?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    dailymotion?: pulumi.Input<string>;
    defaultAction?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.ObjectVideofilterProfileFilter>[]>;
    fortiguardCategory?: pulumi.Input<inputs.ObjectVideofilterProfileFortiguardCategory>;
    log?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    replacemsgGroup?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    vimeo?: pulumi.Input<string>;
    vimeoRestrict?: pulumi.Input<string>;
    youtube?: pulumi.Input<string>;
    youtubeChannelFilter?: pulumi.Input<string>;
    youtubeRestrict?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectVideofilterProfile resource.
 */
export interface ObjectVideofilterProfileArgs {
    adom?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    dailymotion?: pulumi.Input<string>;
    defaultAction?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.ObjectVideofilterProfileFilter>[]>;
    fortiguardCategory?: pulumi.Input<inputs.ObjectVideofilterProfileFortiguardCategory>;
    log?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    replacemsgGroup?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    vimeo?: pulumi.Input<string>;
    vimeoRestrict?: pulumi.Input<string>;
    youtube?: pulumi.Input<string>;
    youtubeChannelFilter?: pulumi.Input<string>;
    youtubeRestrict?: pulumi.Input<string>;
}
