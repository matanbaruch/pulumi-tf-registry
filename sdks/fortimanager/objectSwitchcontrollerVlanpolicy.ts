// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectSwitchcontrollerVlanpolicy extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSwitchcontrollerVlanpolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSwitchcontrollerVlanpolicyState, opts?: pulumi.CustomResourceOptions): ObjectSwitchcontrollerVlanpolicy {
        return new ObjectSwitchcontrollerVlanpolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSwitchcontrollerVlanpolicy:ObjectSwitchcontrollerVlanpolicy';

    /**
     * Returns true if the given object is an instance of ObjectSwitchcontrollerVlanpolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSwitchcontrollerVlanpolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSwitchcontrollerVlanpolicy.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly allowedVlans!: pulumi.Output<string[]>;
    public readonly allowedVlansAll!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly discardMode!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly untaggedVlans!: pulumi.Output<string[]>;
    public readonly vlan!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectSwitchcontrollerVlanpolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSwitchcontrollerVlanpolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSwitchcontrollerVlanpolicyArgs | ObjectSwitchcontrollerVlanpolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSwitchcontrollerVlanpolicyState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["allowedVlans"] = state ? state.allowedVlans : undefined;
            resourceInputs["allowedVlansAll"] = state ? state.allowedVlansAll : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["discardMode"] = state ? state.discardMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["untaggedVlans"] = state ? state.untaggedVlans : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as ObjectSwitchcontrollerVlanpolicyArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["allowedVlans"] = args ? args.allowedVlans : undefined;
            resourceInputs["allowedVlansAll"] = args ? args.allowedVlansAll : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["discardMode"] = args ? args.discardMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["untaggedVlans"] = args ? args.untaggedVlans : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSwitchcontrollerVlanpolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSwitchcontrollerVlanpolicy resources.
 */
export interface ObjectSwitchcontrollerVlanpolicyState {
    adom?: pulumi.Input<string>;
    allowedVlans?: pulumi.Input<pulumi.Input<string>[]>;
    allowedVlansAll?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    discardMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    untaggedVlans?: pulumi.Input<pulumi.Input<string>[]>;
    vlan?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectSwitchcontrollerVlanpolicy resource.
 */
export interface ObjectSwitchcontrollerVlanpolicyArgs {
    adom?: pulumi.Input<string>;
    allowedVlans?: pulumi.Input<pulumi.Input<string>[]>;
    allowedVlansAll?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    discardMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    untaggedVlans?: pulumi.Input<pulumi.Input<string>[]>;
    vlan?: pulumi.Input<string>;
}
