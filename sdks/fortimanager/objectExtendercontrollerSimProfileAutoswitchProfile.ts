// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectExtendercontrollerSimProfileAutoswitchProfile extends pulumi.CustomResource {
    /**
     * Get an existing ObjectExtendercontrollerSimProfileAutoswitchProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectExtendercontrollerSimProfileAutoswitchProfileState, opts?: pulumi.CustomResourceOptions): ObjectExtendercontrollerSimProfileAutoswitchProfile {
        return new ObjectExtendercontrollerSimProfileAutoswitchProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectExtendercontrollerSimProfileAutoswitchProfile:ObjectExtendercontrollerSimProfileAutoswitchProfile';

    /**
     * Returns true if the given object is an instance of ObjectExtendercontrollerSimProfileAutoswitchProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectExtendercontrollerSimProfileAutoswitchProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectExtendercontrollerSimProfileAutoswitchProfile.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly dataplan!: pulumi.Output<string>;
    public readonly disconnect!: pulumi.Output<string>;
    public readonly disconnectPeriod!: pulumi.Output<number>;
    public readonly disconnectThreshold!: pulumi.Output<number>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly signal!: pulumi.Output<string>;
    public readonly simProfile!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly switchBackTime!: pulumi.Output<string>;
    public readonly switchBackTimer!: pulumi.Output<number>;
    public readonly switchBacks!: pulumi.Output<string[]>;

    /**
     * Create a ObjectExtendercontrollerSimProfileAutoswitchProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectExtendercontrollerSimProfileAutoswitchProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectExtendercontrollerSimProfileAutoswitchProfileArgs | ObjectExtendercontrollerSimProfileAutoswitchProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectExtendercontrollerSimProfileAutoswitchProfileState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["dataplan"] = state ? state.dataplan : undefined;
            resourceInputs["disconnect"] = state ? state.disconnect : undefined;
            resourceInputs["disconnectPeriod"] = state ? state.disconnectPeriod : undefined;
            resourceInputs["disconnectThreshold"] = state ? state.disconnectThreshold : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["signal"] = state ? state.signal : undefined;
            resourceInputs["simProfile"] = state ? state.simProfile : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["switchBackTime"] = state ? state.switchBackTime : undefined;
            resourceInputs["switchBackTimer"] = state ? state.switchBackTimer : undefined;
            resourceInputs["switchBacks"] = state ? state.switchBacks : undefined;
        } else {
            const args = argsOrState as ObjectExtendercontrollerSimProfileAutoswitchProfileArgs | undefined;
            if ((!args || args.simProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'simProfile'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["dataplan"] = args ? args.dataplan : undefined;
            resourceInputs["disconnect"] = args ? args.disconnect : undefined;
            resourceInputs["disconnectPeriod"] = args ? args.disconnectPeriod : undefined;
            resourceInputs["disconnectThreshold"] = args ? args.disconnectThreshold : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["signal"] = args ? args.signal : undefined;
            resourceInputs["simProfile"] = args ? args.simProfile : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["switchBackTime"] = args ? args.switchBackTime : undefined;
            resourceInputs["switchBackTimer"] = args ? args.switchBackTimer : undefined;
            resourceInputs["switchBacks"] = args ? args.switchBacks : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectExtendercontrollerSimProfileAutoswitchProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectExtendercontrollerSimProfileAutoswitchProfile resources.
 */
export interface ObjectExtendercontrollerSimProfileAutoswitchProfileState {
    adom?: pulumi.Input<string>;
    dataplan?: pulumi.Input<string>;
    disconnect?: pulumi.Input<string>;
    disconnectPeriod?: pulumi.Input<number>;
    disconnectThreshold?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    signal?: pulumi.Input<string>;
    simProfile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    switchBackTime?: pulumi.Input<string>;
    switchBackTimer?: pulumi.Input<number>;
    switchBacks?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ObjectExtendercontrollerSimProfileAutoswitchProfile resource.
 */
export interface ObjectExtendercontrollerSimProfileAutoswitchProfileArgs {
    adom?: pulumi.Input<string>;
    dataplan?: pulumi.Input<string>;
    disconnect?: pulumi.Input<string>;
    disconnectPeriod?: pulumi.Input<number>;
    disconnectThreshold?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    signal?: pulumi.Input<string>;
    simProfile: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    switchBackTime?: pulumi.Input<string>;
    switchBackTimer?: pulumi.Input<number>;
    switchBacks?: pulumi.Input<pulumi.Input<string>[]>;
}
