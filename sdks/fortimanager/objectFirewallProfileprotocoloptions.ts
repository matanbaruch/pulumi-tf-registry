// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectFirewallProfileprotocoloptions extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallProfileprotocoloptions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallProfileprotocoloptionsState, opts?: pulumi.CustomResourceOptions): ObjectFirewallProfileprotocoloptions {
        return new ObjectFirewallProfileprotocoloptions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallProfileprotocoloptions:ObjectFirewallProfileprotocoloptions';

    /**
     * Returns true if the given object is an instance of ObjectFirewallProfileprotocoloptions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallProfileprotocoloptions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallProfileprotocoloptions.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly cifs!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsCifs | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly dns!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsDns | undefined>;
    public readonly featureSet!: pulumi.Output<string>;
    public readonly ftp!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsFtp | undefined>;
    public readonly http!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsHttp | undefined>;
    public readonly imap!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsImap | undefined>;
    public readonly mailSignature!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsMailSignature | undefined>;
    public readonly mapi!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsMapi | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nntp!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsNntp | undefined>;
    public readonly oversizeLog!: pulumi.Output<string>;
    public readonly pop3!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsPop3 | undefined>;
    public readonly replacemsgGroup!: pulumi.Output<string | undefined>;
    public readonly rpcOverHttp!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly smtp!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsSmtp | undefined>;
    public readonly ssh!: pulumi.Output<outputs.ObjectFirewallProfileprotocoloptionsSsh | undefined>;
    public readonly switchingProtocolsLog!: pulumi.Output<string>;

    /**
     * Create a ObjectFirewallProfileprotocoloptions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectFirewallProfileprotocoloptionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallProfileprotocoloptionsArgs | ObjectFirewallProfileprotocoloptionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallProfileprotocoloptionsState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["cifs"] = state ? state.cifs : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dns"] = state ? state.dns : undefined;
            resourceInputs["featureSet"] = state ? state.featureSet : undefined;
            resourceInputs["ftp"] = state ? state.ftp : undefined;
            resourceInputs["http"] = state ? state.http : undefined;
            resourceInputs["imap"] = state ? state.imap : undefined;
            resourceInputs["mailSignature"] = state ? state.mailSignature : undefined;
            resourceInputs["mapi"] = state ? state.mapi : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nntp"] = state ? state.nntp : undefined;
            resourceInputs["oversizeLog"] = state ? state.oversizeLog : undefined;
            resourceInputs["pop3"] = state ? state.pop3 : undefined;
            resourceInputs["replacemsgGroup"] = state ? state.replacemsgGroup : undefined;
            resourceInputs["rpcOverHttp"] = state ? state.rpcOverHttp : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["smtp"] = state ? state.smtp : undefined;
            resourceInputs["ssh"] = state ? state.ssh : undefined;
            resourceInputs["switchingProtocolsLog"] = state ? state.switchingProtocolsLog : undefined;
        } else {
            const args = argsOrState as ObjectFirewallProfileprotocoloptionsArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["cifs"] = args ? args.cifs : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dns"] = args ? args.dns : undefined;
            resourceInputs["featureSet"] = args ? args.featureSet : undefined;
            resourceInputs["ftp"] = args ? args.ftp : undefined;
            resourceInputs["http"] = args ? args.http : undefined;
            resourceInputs["imap"] = args ? args.imap : undefined;
            resourceInputs["mailSignature"] = args ? args.mailSignature : undefined;
            resourceInputs["mapi"] = args ? args.mapi : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nntp"] = args ? args.nntp : undefined;
            resourceInputs["oversizeLog"] = args ? args.oversizeLog : undefined;
            resourceInputs["pop3"] = args ? args.pop3 : undefined;
            resourceInputs["replacemsgGroup"] = args ? args.replacemsgGroup : undefined;
            resourceInputs["rpcOverHttp"] = args ? args.rpcOverHttp : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["smtp"] = args ? args.smtp : undefined;
            resourceInputs["ssh"] = args ? args.ssh : undefined;
            resourceInputs["switchingProtocolsLog"] = args ? args.switchingProtocolsLog : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallProfileprotocoloptions.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallProfileprotocoloptions resources.
 */
export interface ObjectFirewallProfileprotocoloptionsState {
    adom?: pulumi.Input<string>;
    cifs?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsCifs>;
    comment?: pulumi.Input<string>;
    dns?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsDns>;
    featureSet?: pulumi.Input<string>;
    ftp?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsFtp>;
    http?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsHttp>;
    imap?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsImap>;
    mailSignature?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsMailSignature>;
    mapi?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsMapi>;
    name?: pulumi.Input<string>;
    nntp?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsNntp>;
    oversizeLog?: pulumi.Input<string>;
    pop3?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsPop3>;
    replacemsgGroup?: pulumi.Input<string>;
    rpcOverHttp?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    smtp?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsSmtp>;
    ssh?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsSsh>;
    switchingProtocolsLog?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFirewallProfileprotocoloptions resource.
 */
export interface ObjectFirewallProfileprotocoloptionsArgs {
    adom?: pulumi.Input<string>;
    cifs?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsCifs>;
    comment?: pulumi.Input<string>;
    dns?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsDns>;
    featureSet?: pulumi.Input<string>;
    ftp?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsFtp>;
    http?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsHttp>;
    imap?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsImap>;
    mailSignature?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsMailSignature>;
    mapi?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsMapi>;
    name?: pulumi.Input<string>;
    nntp?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsNntp>;
    oversizeLog?: pulumi.Input<string>;
    pop3?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsPop3>;
    replacemsgGroup?: pulumi.Input<string>;
    rpcOverHttp?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    smtp?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsSmtp>;
    ssh?: pulumi.Input<inputs.ObjectFirewallProfileprotocoloptionsSsh>;
    switchingProtocolsLog?: pulumi.Input<string>;
}
