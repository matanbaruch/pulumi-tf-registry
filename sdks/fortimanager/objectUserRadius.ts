// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectUserRadius extends pulumi.CustomResource {
    /**
     * Get an existing ObjectUserRadius resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectUserRadiusState, opts?: pulumi.CustomResourceOptions): ObjectUserRadius {
        return new ObjectUserRadius(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectUserRadius:ObjectUserRadius';

    /**
     * Returns true if the given object is an instance of ObjectUserRadius.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectUserRadius {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectUserRadius.__pulumiType;
    }

    public readonly accountKeyCertField!: pulumi.Output<string>;
    public readonly accountKeyProcessing!: pulumi.Output<string>;
    public readonly accountingServers!: pulumi.Output<outputs.ObjectUserRadiusAccountingServer[] | undefined>;
    public readonly acctAllServers!: pulumi.Output<string>;
    public readonly acctInterimInterval!: pulumi.Output<number | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly allUsergroup!: pulumi.Output<string>;
    public readonly authType!: pulumi.Output<string>;
    public readonly caCert!: pulumi.Output<string | undefined>;
    public readonly callStationIdType!: pulumi.Output<string>;
    public readonly classes!: pulumi.Output<string[]>;
    public readonly clientCert!: pulumi.Output<string | undefined>;
    public readonly delimiter!: pulumi.Output<string>;
    public readonly dynamicMappings!: pulumi.Output<outputs.ObjectUserRadiusDynamicMapping[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly groupOverrideAttrType!: pulumi.Output<string | undefined>;
    public readonly h3cCompatibility!: pulumi.Output<string>;
    public readonly interface!: pulumi.Output<string | undefined>;
    public readonly interfaceSelectMethod!: pulumi.Output<string>;
    public readonly macCase!: pulumi.Output<string>;
    public readonly macPasswordDelimiter!: pulumi.Output<string>;
    public readonly macUsernameDelimiter!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nasId!: pulumi.Output<string | undefined>;
    public readonly nasIdType!: pulumi.Output<string>;
    public readonly nasIp!: pulumi.Output<string>;
    public readonly passwordEncoding!: pulumi.Output<string>;
    public readonly passwordRenewal!: pulumi.Output<string>;
    public readonly radiusCoa!: pulumi.Output<string>;
    public readonly radiusPort!: pulumi.Output<number | undefined>;
    public readonly rsso!: pulumi.Output<string>;
    public readonly rssoContextTimeout!: pulumi.Output<number | undefined>;
    public readonly rssoEndpointAttribute!: pulumi.Output<string | undefined>;
    public readonly rssoEndpointBlockAttribute!: pulumi.Output<string | undefined>;
    public readonly rssoEpOneIpOnly!: pulumi.Output<string>;
    public readonly rssoFlushIpSession!: pulumi.Output<string | undefined>;
    public readonly rssoLogFlags!: pulumi.Output<string[]>;
    public readonly rssoLogPeriod!: pulumi.Output<number | undefined>;
    public readonly rssoRadiusResponse!: pulumi.Output<string | undefined>;
    public readonly rssoRadiusServerPort!: pulumi.Output<number | undefined>;
    public readonly rssoSecrets!: pulumi.Output<string[]>;
    public readonly rssoValidateRequestSecret!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly secondarySecrets!: pulumi.Output<string[]>;
    public readonly secondaryServer!: pulumi.Output<string | undefined>;
    public readonly secrets!: pulumi.Output<string[]>;
    public readonly server!: pulumi.Output<string | undefined>;
    public readonly serverIdentityCheck!: pulumi.Output<string>;
    public readonly sourceIp!: pulumi.Output<string | undefined>;
    public readonly ssoAttribute!: pulumi.Output<string | undefined>;
    public readonly ssoAttributeKey!: pulumi.Output<string | undefined>;
    public readonly ssoAttributeValueOverride!: pulumi.Output<string>;
    public readonly statusTtl!: pulumi.Output<number>;
    public readonly switchControllerAcctFastFramedipDetect!: pulumi.Output<number>;
    public readonly switchControllerNasIpDynamic!: pulumi.Output<string>;
    public readonly switchControllerServiceTypes!: pulumi.Output<string[]>;
    public readonly tertiarySecrets!: pulumi.Output<string[]>;
    public readonly tertiaryServer!: pulumi.Output<string | undefined>;
    public readonly timeout!: pulumi.Output<number>;
    public readonly tlsMinProtoVersion!: pulumi.Output<string>;
    public readonly transportProtocol!: pulumi.Output<string>;
    public readonly useManagementVdom!: pulumi.Output<string>;
    public readonly usernameCaseSensitive!: pulumi.Output<string>;

    /**
     * Create a ObjectUserRadius resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectUserRadiusArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectUserRadiusArgs | ObjectUserRadiusState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectUserRadiusState | undefined;
            resourceInputs["accountKeyCertField"] = state ? state.accountKeyCertField : undefined;
            resourceInputs["accountKeyProcessing"] = state ? state.accountKeyProcessing : undefined;
            resourceInputs["accountingServers"] = state ? state.accountingServers : undefined;
            resourceInputs["acctAllServers"] = state ? state.acctAllServers : undefined;
            resourceInputs["acctInterimInterval"] = state ? state.acctInterimInterval : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["allUsergroup"] = state ? state.allUsergroup : undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["caCert"] = state ? state.caCert : undefined;
            resourceInputs["callStationIdType"] = state ? state.callStationIdType : undefined;
            resourceInputs["classes"] = state ? state.classes : undefined;
            resourceInputs["clientCert"] = state ? state.clientCert : undefined;
            resourceInputs["delimiter"] = state ? state.delimiter : undefined;
            resourceInputs["dynamicMappings"] = state ? state.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["groupOverrideAttrType"] = state ? state.groupOverrideAttrType : undefined;
            resourceInputs["h3cCompatibility"] = state ? state.h3cCompatibility : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = state ? state.interfaceSelectMethod : undefined;
            resourceInputs["macCase"] = state ? state.macCase : undefined;
            resourceInputs["macPasswordDelimiter"] = state ? state.macPasswordDelimiter : undefined;
            resourceInputs["macUsernameDelimiter"] = state ? state.macUsernameDelimiter : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nasId"] = state ? state.nasId : undefined;
            resourceInputs["nasIdType"] = state ? state.nasIdType : undefined;
            resourceInputs["nasIp"] = state ? state.nasIp : undefined;
            resourceInputs["passwordEncoding"] = state ? state.passwordEncoding : undefined;
            resourceInputs["passwordRenewal"] = state ? state.passwordRenewal : undefined;
            resourceInputs["radiusCoa"] = state ? state.radiusCoa : undefined;
            resourceInputs["radiusPort"] = state ? state.radiusPort : undefined;
            resourceInputs["rsso"] = state ? state.rsso : undefined;
            resourceInputs["rssoContextTimeout"] = state ? state.rssoContextTimeout : undefined;
            resourceInputs["rssoEndpointAttribute"] = state ? state.rssoEndpointAttribute : undefined;
            resourceInputs["rssoEndpointBlockAttribute"] = state ? state.rssoEndpointBlockAttribute : undefined;
            resourceInputs["rssoEpOneIpOnly"] = state ? state.rssoEpOneIpOnly : undefined;
            resourceInputs["rssoFlushIpSession"] = state ? state.rssoFlushIpSession : undefined;
            resourceInputs["rssoLogFlags"] = state ? state.rssoLogFlags : undefined;
            resourceInputs["rssoLogPeriod"] = state ? state.rssoLogPeriod : undefined;
            resourceInputs["rssoRadiusResponse"] = state ? state.rssoRadiusResponse : undefined;
            resourceInputs["rssoRadiusServerPort"] = state ? state.rssoRadiusServerPort : undefined;
            resourceInputs["rssoSecrets"] = state ? state.rssoSecrets : undefined;
            resourceInputs["rssoValidateRequestSecret"] = state ? state.rssoValidateRequestSecret : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["secondarySecrets"] = state ? state.secondarySecrets : undefined;
            resourceInputs["secondaryServer"] = state ? state.secondaryServer : undefined;
            resourceInputs["secrets"] = state ? state.secrets : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serverIdentityCheck"] = state ? state.serverIdentityCheck : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["ssoAttribute"] = state ? state.ssoAttribute : undefined;
            resourceInputs["ssoAttributeKey"] = state ? state.ssoAttributeKey : undefined;
            resourceInputs["ssoAttributeValueOverride"] = state ? state.ssoAttributeValueOverride : undefined;
            resourceInputs["statusTtl"] = state ? state.statusTtl : undefined;
            resourceInputs["switchControllerAcctFastFramedipDetect"] = state ? state.switchControllerAcctFastFramedipDetect : undefined;
            resourceInputs["switchControllerNasIpDynamic"] = state ? state.switchControllerNasIpDynamic : undefined;
            resourceInputs["switchControllerServiceTypes"] = state ? state.switchControllerServiceTypes : undefined;
            resourceInputs["tertiarySecrets"] = state ? state.tertiarySecrets : undefined;
            resourceInputs["tertiaryServer"] = state ? state.tertiaryServer : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["tlsMinProtoVersion"] = state ? state.tlsMinProtoVersion : undefined;
            resourceInputs["transportProtocol"] = state ? state.transportProtocol : undefined;
            resourceInputs["useManagementVdom"] = state ? state.useManagementVdom : undefined;
            resourceInputs["usernameCaseSensitive"] = state ? state.usernameCaseSensitive : undefined;
        } else {
            const args = argsOrState as ObjectUserRadiusArgs | undefined;
            resourceInputs["accountKeyCertField"] = args ? args.accountKeyCertField : undefined;
            resourceInputs["accountKeyProcessing"] = args ? args.accountKeyProcessing : undefined;
            resourceInputs["accountingServers"] = args ? args.accountingServers : undefined;
            resourceInputs["acctAllServers"] = args ? args.acctAllServers : undefined;
            resourceInputs["acctInterimInterval"] = args ? args.acctInterimInterval : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["allUsergroup"] = args ? args.allUsergroup : undefined;
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["caCert"] = args ? args.caCert : undefined;
            resourceInputs["callStationIdType"] = args ? args.callStationIdType : undefined;
            resourceInputs["classes"] = args ? args.classes : undefined;
            resourceInputs["clientCert"] = args ? args.clientCert : undefined;
            resourceInputs["delimiter"] = args ? args.delimiter : undefined;
            resourceInputs["dynamicMappings"] = args ? args.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["groupOverrideAttrType"] = args ? args.groupOverrideAttrType : undefined;
            resourceInputs["h3cCompatibility"] = args ? args.h3cCompatibility : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = args ? args.interfaceSelectMethod : undefined;
            resourceInputs["macCase"] = args ? args.macCase : undefined;
            resourceInputs["macPasswordDelimiter"] = args ? args.macPasswordDelimiter : undefined;
            resourceInputs["macUsernameDelimiter"] = args ? args.macUsernameDelimiter : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nasId"] = args ? args.nasId : undefined;
            resourceInputs["nasIdType"] = args ? args.nasIdType : undefined;
            resourceInputs["nasIp"] = args ? args.nasIp : undefined;
            resourceInputs["passwordEncoding"] = args ? args.passwordEncoding : undefined;
            resourceInputs["passwordRenewal"] = args ? args.passwordRenewal : undefined;
            resourceInputs["radiusCoa"] = args ? args.radiusCoa : undefined;
            resourceInputs["radiusPort"] = args ? args.radiusPort : undefined;
            resourceInputs["rsso"] = args ? args.rsso : undefined;
            resourceInputs["rssoContextTimeout"] = args ? args.rssoContextTimeout : undefined;
            resourceInputs["rssoEndpointAttribute"] = args ? args.rssoEndpointAttribute : undefined;
            resourceInputs["rssoEndpointBlockAttribute"] = args ? args.rssoEndpointBlockAttribute : undefined;
            resourceInputs["rssoEpOneIpOnly"] = args ? args.rssoEpOneIpOnly : undefined;
            resourceInputs["rssoFlushIpSession"] = args ? args.rssoFlushIpSession : undefined;
            resourceInputs["rssoLogFlags"] = args ? args.rssoLogFlags : undefined;
            resourceInputs["rssoLogPeriod"] = args ? args.rssoLogPeriod : undefined;
            resourceInputs["rssoRadiusResponse"] = args ? args.rssoRadiusResponse : undefined;
            resourceInputs["rssoRadiusServerPort"] = args ? args.rssoRadiusServerPort : undefined;
            resourceInputs["rssoSecrets"] = args?.rssoSecrets ? pulumi.secret(args.rssoSecrets) : undefined;
            resourceInputs["rssoValidateRequestSecret"] = args ? args.rssoValidateRequestSecret : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["secondarySecrets"] = args?.secondarySecrets ? pulumi.secret(args.secondarySecrets) : undefined;
            resourceInputs["secondaryServer"] = args ? args.secondaryServer : undefined;
            resourceInputs["secrets"] = args?.secrets ? pulumi.secret(args.secrets) : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["serverIdentityCheck"] = args ? args.serverIdentityCheck : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["ssoAttribute"] = args ? args.ssoAttribute : undefined;
            resourceInputs["ssoAttributeKey"] = args ? args.ssoAttributeKey : undefined;
            resourceInputs["ssoAttributeValueOverride"] = args ? args.ssoAttributeValueOverride : undefined;
            resourceInputs["statusTtl"] = args ? args.statusTtl : undefined;
            resourceInputs["switchControllerAcctFastFramedipDetect"] = args ? args.switchControllerAcctFastFramedipDetect : undefined;
            resourceInputs["switchControllerNasIpDynamic"] = args ? args.switchControllerNasIpDynamic : undefined;
            resourceInputs["switchControllerServiceTypes"] = args ? args.switchControllerServiceTypes : undefined;
            resourceInputs["tertiarySecrets"] = args?.tertiarySecrets ? pulumi.secret(args.tertiarySecrets) : undefined;
            resourceInputs["tertiaryServer"] = args ? args.tertiaryServer : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["tlsMinProtoVersion"] = args ? args.tlsMinProtoVersion : undefined;
            resourceInputs["transportProtocol"] = args ? args.transportProtocol : undefined;
            resourceInputs["useManagementVdom"] = args ? args.useManagementVdom : undefined;
            resourceInputs["usernameCaseSensitive"] = args ? args.usernameCaseSensitive : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["rssoSecrets", "secondarySecrets", "secrets", "tertiarySecrets"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectUserRadius.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectUserRadius resources.
 */
export interface ObjectUserRadiusState {
    accountKeyCertField?: pulumi.Input<string>;
    accountKeyProcessing?: pulumi.Input<string>;
    accountingServers?: pulumi.Input<pulumi.Input<inputs.ObjectUserRadiusAccountingServer>[]>;
    acctAllServers?: pulumi.Input<string>;
    acctInterimInterval?: pulumi.Input<number>;
    adom?: pulumi.Input<string>;
    allUsergroup?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    caCert?: pulumi.Input<string>;
    callStationIdType?: pulumi.Input<string>;
    classes?: pulumi.Input<pulumi.Input<string>[]>;
    clientCert?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectUserRadiusDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    groupOverrideAttrType?: pulumi.Input<string>;
    h3cCompatibility?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    interfaceSelectMethod?: pulumi.Input<string>;
    macCase?: pulumi.Input<string>;
    macPasswordDelimiter?: pulumi.Input<string>;
    macUsernameDelimiter?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nasId?: pulumi.Input<string>;
    nasIdType?: pulumi.Input<string>;
    nasIp?: pulumi.Input<string>;
    passwordEncoding?: pulumi.Input<string>;
    passwordRenewal?: pulumi.Input<string>;
    radiusCoa?: pulumi.Input<string>;
    radiusPort?: pulumi.Input<number>;
    rsso?: pulumi.Input<string>;
    rssoContextTimeout?: pulumi.Input<number>;
    rssoEndpointAttribute?: pulumi.Input<string>;
    rssoEndpointBlockAttribute?: pulumi.Input<string>;
    rssoEpOneIpOnly?: pulumi.Input<string>;
    rssoFlushIpSession?: pulumi.Input<string>;
    rssoLogFlags?: pulumi.Input<pulumi.Input<string>[]>;
    rssoLogPeriod?: pulumi.Input<number>;
    rssoRadiusResponse?: pulumi.Input<string>;
    rssoRadiusServerPort?: pulumi.Input<number>;
    rssoSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    rssoValidateRequestSecret?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    secondarySecrets?: pulumi.Input<pulumi.Input<string>[]>;
    secondaryServer?: pulumi.Input<string>;
    secrets?: pulumi.Input<pulumi.Input<string>[]>;
    server?: pulumi.Input<string>;
    serverIdentityCheck?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    ssoAttribute?: pulumi.Input<string>;
    ssoAttributeKey?: pulumi.Input<string>;
    ssoAttributeValueOverride?: pulumi.Input<string>;
    statusTtl?: pulumi.Input<number>;
    switchControllerAcctFastFramedipDetect?: pulumi.Input<number>;
    switchControllerNasIpDynamic?: pulumi.Input<string>;
    switchControllerServiceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    tertiarySecrets?: pulumi.Input<pulumi.Input<string>[]>;
    tertiaryServer?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
    tlsMinProtoVersion?: pulumi.Input<string>;
    transportProtocol?: pulumi.Input<string>;
    useManagementVdom?: pulumi.Input<string>;
    usernameCaseSensitive?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectUserRadius resource.
 */
export interface ObjectUserRadiusArgs {
    accountKeyCertField?: pulumi.Input<string>;
    accountKeyProcessing?: pulumi.Input<string>;
    accountingServers?: pulumi.Input<pulumi.Input<inputs.ObjectUserRadiusAccountingServer>[]>;
    acctAllServers?: pulumi.Input<string>;
    acctInterimInterval?: pulumi.Input<number>;
    adom?: pulumi.Input<string>;
    allUsergroup?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    caCert?: pulumi.Input<string>;
    callStationIdType?: pulumi.Input<string>;
    classes?: pulumi.Input<pulumi.Input<string>[]>;
    clientCert?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectUserRadiusDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    groupOverrideAttrType?: pulumi.Input<string>;
    h3cCompatibility?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    interfaceSelectMethod?: pulumi.Input<string>;
    macCase?: pulumi.Input<string>;
    macPasswordDelimiter?: pulumi.Input<string>;
    macUsernameDelimiter?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nasId?: pulumi.Input<string>;
    nasIdType?: pulumi.Input<string>;
    nasIp?: pulumi.Input<string>;
    passwordEncoding?: pulumi.Input<string>;
    passwordRenewal?: pulumi.Input<string>;
    radiusCoa?: pulumi.Input<string>;
    radiusPort?: pulumi.Input<number>;
    rsso?: pulumi.Input<string>;
    rssoContextTimeout?: pulumi.Input<number>;
    rssoEndpointAttribute?: pulumi.Input<string>;
    rssoEndpointBlockAttribute?: pulumi.Input<string>;
    rssoEpOneIpOnly?: pulumi.Input<string>;
    rssoFlushIpSession?: pulumi.Input<string>;
    rssoLogFlags?: pulumi.Input<pulumi.Input<string>[]>;
    rssoLogPeriod?: pulumi.Input<number>;
    rssoRadiusResponse?: pulumi.Input<string>;
    rssoRadiusServerPort?: pulumi.Input<number>;
    rssoSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    rssoValidateRequestSecret?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    secondarySecrets?: pulumi.Input<pulumi.Input<string>[]>;
    secondaryServer?: pulumi.Input<string>;
    secrets?: pulumi.Input<pulumi.Input<string>[]>;
    server?: pulumi.Input<string>;
    serverIdentityCheck?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    ssoAttribute?: pulumi.Input<string>;
    ssoAttributeKey?: pulumi.Input<string>;
    ssoAttributeValueOverride?: pulumi.Input<string>;
    statusTtl?: pulumi.Input<number>;
    switchControllerAcctFastFramedipDetect?: pulumi.Input<number>;
    switchControllerNasIpDynamic?: pulumi.Input<string>;
    switchControllerServiceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    tertiarySecrets?: pulumi.Input<pulumi.Input<string>[]>;
    tertiaryServer?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
    tlsMinProtoVersion?: pulumi.Input<string>;
    transportProtocol?: pulumi.Input<string>;
    useManagementVdom?: pulumi.Input<string>;
    usernameCaseSensitive?: pulumi.Input<string>;
}
