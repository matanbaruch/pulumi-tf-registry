// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectFirewallIppool extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallIppool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallIppoolState, opts?: pulumi.CustomResourceOptions): ObjectFirewallIppool {
        return new ObjectFirewallIppool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallIppool:ObjectFirewallIppool';

    /**
     * Returns true if the given object is an instance of ObjectFirewallIppool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallIppool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallIppool.__pulumiType;
    }

    public readonly addNat64Route!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly arpIntf!: pulumi.Output<string | undefined>;
    public readonly arpReply!: pulumi.Output<string>;
    public readonly associatedInterface!: pulumi.Output<string | undefined>;
    public readonly blockSize!: pulumi.Output<number | undefined>;
    public readonly cgnBlockSize!: pulumi.Output<number>;
    public readonly cgnClientEndip!: pulumi.Output<string | undefined>;
    public readonly cgnClientIpv6shift!: pulumi.Output<number | undefined>;
    public readonly cgnClientStartip!: pulumi.Output<string | undefined>;
    public readonly cgnFixedalloc!: pulumi.Output<string>;
    public readonly cgnOverload!: pulumi.Output<string>;
    public readonly cgnPortEnd!: pulumi.Output<number>;
    public readonly cgnPortStart!: pulumi.Output<number>;
    public readonly cgnSpa!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly dynamicMappings!: pulumi.Output<outputs.ObjectFirewallIppoolDynamicMapping[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly endip!: pulumi.Output<string | undefined>;
    public readonly endport!: pulumi.Output<number>;
    public readonly excludeIps!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly nat64!: pulumi.Output<string>;
    public readonly numBlocksPerUser!: pulumi.Output<number | undefined>;
    public readonly pbaInterimLog!: pulumi.Output<number | undefined>;
    public readonly pbaTimeout!: pulumi.Output<number | undefined>;
    public readonly permitAnyHost!: pulumi.Output<string | undefined>;
    public readonly portPerUser!: pulumi.Output<number | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sourceEndip!: pulumi.Output<string | undefined>;
    public readonly sourceStartip!: pulumi.Output<string | undefined>;
    public readonly startip!: pulumi.Output<string | undefined>;
    public readonly startport!: pulumi.Output<number>;
    public readonly subnetBroadcastInIppool!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly utilizationAlarmClear!: pulumi.Output<number>;
    public readonly utilizationAlarmRaise!: pulumi.Output<number>;

    /**
     * Create a ObjectFirewallIppool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectFirewallIppoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallIppoolArgs | ObjectFirewallIppoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallIppoolState | undefined;
            resourceInputs["addNat64Route"] = state ? state.addNat64Route : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["arpIntf"] = state ? state.arpIntf : undefined;
            resourceInputs["arpReply"] = state ? state.arpReply : undefined;
            resourceInputs["associatedInterface"] = state ? state.associatedInterface : undefined;
            resourceInputs["blockSize"] = state ? state.blockSize : undefined;
            resourceInputs["cgnBlockSize"] = state ? state.cgnBlockSize : undefined;
            resourceInputs["cgnClientEndip"] = state ? state.cgnClientEndip : undefined;
            resourceInputs["cgnClientIpv6shift"] = state ? state.cgnClientIpv6shift : undefined;
            resourceInputs["cgnClientStartip"] = state ? state.cgnClientStartip : undefined;
            resourceInputs["cgnFixedalloc"] = state ? state.cgnFixedalloc : undefined;
            resourceInputs["cgnOverload"] = state ? state.cgnOverload : undefined;
            resourceInputs["cgnPortEnd"] = state ? state.cgnPortEnd : undefined;
            resourceInputs["cgnPortStart"] = state ? state.cgnPortStart : undefined;
            resourceInputs["cgnSpa"] = state ? state.cgnSpa : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["dynamicMappings"] = state ? state.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["endip"] = state ? state.endip : undefined;
            resourceInputs["endport"] = state ? state.endport : undefined;
            resourceInputs["excludeIps"] = state ? state.excludeIps : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nat64"] = state ? state.nat64 : undefined;
            resourceInputs["numBlocksPerUser"] = state ? state.numBlocksPerUser : undefined;
            resourceInputs["pbaInterimLog"] = state ? state.pbaInterimLog : undefined;
            resourceInputs["pbaTimeout"] = state ? state.pbaTimeout : undefined;
            resourceInputs["permitAnyHost"] = state ? state.permitAnyHost : undefined;
            resourceInputs["portPerUser"] = state ? state.portPerUser : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sourceEndip"] = state ? state.sourceEndip : undefined;
            resourceInputs["sourceStartip"] = state ? state.sourceStartip : undefined;
            resourceInputs["startip"] = state ? state.startip : undefined;
            resourceInputs["startport"] = state ? state.startport : undefined;
            resourceInputs["subnetBroadcastInIppool"] = state ? state.subnetBroadcastInIppool : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["utilizationAlarmClear"] = state ? state.utilizationAlarmClear : undefined;
            resourceInputs["utilizationAlarmRaise"] = state ? state.utilizationAlarmRaise : undefined;
        } else {
            const args = argsOrState as ObjectFirewallIppoolArgs | undefined;
            resourceInputs["addNat64Route"] = args ? args.addNat64Route : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["arpIntf"] = args ? args.arpIntf : undefined;
            resourceInputs["arpReply"] = args ? args.arpReply : undefined;
            resourceInputs["associatedInterface"] = args ? args.associatedInterface : undefined;
            resourceInputs["blockSize"] = args ? args.blockSize : undefined;
            resourceInputs["cgnBlockSize"] = args ? args.cgnBlockSize : undefined;
            resourceInputs["cgnClientEndip"] = args ? args.cgnClientEndip : undefined;
            resourceInputs["cgnClientIpv6shift"] = args ? args.cgnClientIpv6shift : undefined;
            resourceInputs["cgnClientStartip"] = args ? args.cgnClientStartip : undefined;
            resourceInputs["cgnFixedalloc"] = args ? args.cgnFixedalloc : undefined;
            resourceInputs["cgnOverload"] = args ? args.cgnOverload : undefined;
            resourceInputs["cgnPortEnd"] = args ? args.cgnPortEnd : undefined;
            resourceInputs["cgnPortStart"] = args ? args.cgnPortStart : undefined;
            resourceInputs["cgnSpa"] = args ? args.cgnSpa : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["dynamicMappings"] = args ? args.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["endip"] = args ? args.endip : undefined;
            resourceInputs["endport"] = args ? args.endport : undefined;
            resourceInputs["excludeIps"] = args ? args.excludeIps : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nat64"] = args ? args.nat64 : undefined;
            resourceInputs["numBlocksPerUser"] = args ? args.numBlocksPerUser : undefined;
            resourceInputs["pbaInterimLog"] = args ? args.pbaInterimLog : undefined;
            resourceInputs["pbaTimeout"] = args ? args.pbaTimeout : undefined;
            resourceInputs["permitAnyHost"] = args ? args.permitAnyHost : undefined;
            resourceInputs["portPerUser"] = args ? args.portPerUser : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sourceEndip"] = args ? args.sourceEndip : undefined;
            resourceInputs["sourceStartip"] = args ? args.sourceStartip : undefined;
            resourceInputs["startip"] = args ? args.startip : undefined;
            resourceInputs["startport"] = args ? args.startport : undefined;
            resourceInputs["subnetBroadcastInIppool"] = args ? args.subnetBroadcastInIppool : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["utilizationAlarmClear"] = args ? args.utilizationAlarmClear : undefined;
            resourceInputs["utilizationAlarmRaise"] = args ? args.utilizationAlarmRaise : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallIppool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallIppool resources.
 */
export interface ObjectFirewallIppoolState {
    addNat64Route?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    arpIntf?: pulumi.Input<string>;
    arpReply?: pulumi.Input<string>;
    associatedInterface?: pulumi.Input<string>;
    blockSize?: pulumi.Input<number>;
    cgnBlockSize?: pulumi.Input<number>;
    cgnClientEndip?: pulumi.Input<string>;
    cgnClientIpv6shift?: pulumi.Input<number>;
    cgnClientStartip?: pulumi.Input<string>;
    cgnFixedalloc?: pulumi.Input<string>;
    cgnOverload?: pulumi.Input<string>;
    cgnPortEnd?: pulumi.Input<number>;
    cgnPortStart?: pulumi.Input<number>;
    cgnSpa?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallIppoolDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    endip?: pulumi.Input<string>;
    endport?: pulumi.Input<number>;
    excludeIps?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    nat64?: pulumi.Input<string>;
    numBlocksPerUser?: pulumi.Input<number>;
    pbaInterimLog?: pulumi.Input<number>;
    pbaTimeout?: pulumi.Input<number>;
    permitAnyHost?: pulumi.Input<string>;
    portPerUser?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    sourceEndip?: pulumi.Input<string>;
    sourceStartip?: pulumi.Input<string>;
    startip?: pulumi.Input<string>;
    startport?: pulumi.Input<number>;
    subnetBroadcastInIppool?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    utilizationAlarmClear?: pulumi.Input<number>;
    utilizationAlarmRaise?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ObjectFirewallIppool resource.
 */
export interface ObjectFirewallIppoolArgs {
    addNat64Route?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    arpIntf?: pulumi.Input<string>;
    arpReply?: pulumi.Input<string>;
    associatedInterface?: pulumi.Input<string>;
    blockSize?: pulumi.Input<number>;
    cgnBlockSize?: pulumi.Input<number>;
    cgnClientEndip?: pulumi.Input<string>;
    cgnClientIpv6shift?: pulumi.Input<number>;
    cgnClientStartip?: pulumi.Input<string>;
    cgnFixedalloc?: pulumi.Input<string>;
    cgnOverload?: pulumi.Input<string>;
    cgnPortEnd?: pulumi.Input<number>;
    cgnPortStart?: pulumi.Input<number>;
    cgnSpa?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallIppoolDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    endip?: pulumi.Input<string>;
    endport?: pulumi.Input<number>;
    excludeIps?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    nat64?: pulumi.Input<string>;
    numBlocksPerUser?: pulumi.Input<number>;
    pbaInterimLog?: pulumi.Input<number>;
    pbaTimeout?: pulumi.Input<number>;
    permitAnyHost?: pulumi.Input<string>;
    portPerUser?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    sourceEndip?: pulumi.Input<string>;
    sourceStartip?: pulumi.Input<string>;
    startip?: pulumi.Input<string>;
    startport?: pulumi.Input<number>;
    subnetBroadcastInIppool?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    utilizationAlarmClear?: pulumi.Input<number>;
    utilizationAlarmRaise?: pulumi.Input<number>;
}
