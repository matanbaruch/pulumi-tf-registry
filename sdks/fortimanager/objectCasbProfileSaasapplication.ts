// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectCasbProfileSaasapplication extends pulumi.CustomResource {
    /**
     * Get an existing ObjectCasbProfileSaasapplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectCasbProfileSaasapplicationState, opts?: pulumi.CustomResourceOptions): ObjectCasbProfileSaasapplication {
        return new ObjectCasbProfileSaasapplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectCasbProfileSaasapplication:ObjectCasbProfileSaasapplication';

    /**
     * Returns true if the given object is an instance of ObjectCasbProfileSaasapplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectCasbProfileSaasapplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectCasbProfileSaasapplication.__pulumiType;
    }

    public readonly accessRules!: pulumi.Output<outputs.ObjectCasbProfileSaasapplicationAccessRule[] | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly customControls!: pulumi.Output<outputs.ObjectCasbProfileSaasapplicationCustomControl[] | undefined>;
    public readonly domainControl!: pulumi.Output<string>;
    public readonly domainControlDomains!: pulumi.Output<string[]>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly log!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly profile!: pulumi.Output<string>;
    public readonly safeSearch!: pulumi.Output<string>;
    public readonly safeSearchControls!: pulumi.Output<string[]>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly tenantControl!: pulumi.Output<string>;
    public readonly tenantControlTenants!: pulumi.Output<string[]>;

    /**
     * Create a ObjectCasbProfileSaasapplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectCasbProfileSaasapplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectCasbProfileSaasapplicationArgs | ObjectCasbProfileSaasapplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectCasbProfileSaasapplicationState | undefined;
            resourceInputs["accessRules"] = state ? state.accessRules : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["customControls"] = state ? state.customControls : undefined;
            resourceInputs["domainControl"] = state ? state.domainControl : undefined;
            resourceInputs["domainControlDomains"] = state ? state.domainControlDomains : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["safeSearch"] = state ? state.safeSearch : undefined;
            resourceInputs["safeSearchControls"] = state ? state.safeSearchControls : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tenantControl"] = state ? state.tenantControl : undefined;
            resourceInputs["tenantControlTenants"] = state ? state.tenantControlTenants : undefined;
        } else {
            const args = argsOrState as ObjectCasbProfileSaasapplicationArgs | undefined;
            if ((!args || args.profile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profile'");
            }
            resourceInputs["accessRules"] = args ? args.accessRules : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["customControls"] = args ? args.customControls : undefined;
            resourceInputs["domainControl"] = args ? args.domainControl : undefined;
            resourceInputs["domainControlDomains"] = args ? args.domainControlDomains : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["safeSearch"] = args ? args.safeSearch : undefined;
            resourceInputs["safeSearchControls"] = args ? args.safeSearchControls : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tenantControl"] = args ? args.tenantControl : undefined;
            resourceInputs["tenantControlTenants"] = args ? args.tenantControlTenants : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectCasbProfileSaasapplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectCasbProfileSaasapplication resources.
 */
export interface ObjectCasbProfileSaasapplicationState {
    accessRules?: pulumi.Input<pulumi.Input<inputs.ObjectCasbProfileSaasapplicationAccessRule>[]>;
    adom?: pulumi.Input<string>;
    customControls?: pulumi.Input<pulumi.Input<inputs.ObjectCasbProfileSaasapplicationCustomControl>[]>;
    domainControl?: pulumi.Input<string>;
    domainControlDomains?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    profile?: pulumi.Input<string>;
    safeSearch?: pulumi.Input<string>;
    safeSearchControls?: pulumi.Input<pulumi.Input<string>[]>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tenantControl?: pulumi.Input<string>;
    tenantControlTenants?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ObjectCasbProfileSaasapplication resource.
 */
export interface ObjectCasbProfileSaasapplicationArgs {
    accessRules?: pulumi.Input<pulumi.Input<inputs.ObjectCasbProfileSaasapplicationAccessRule>[]>;
    adom?: pulumi.Input<string>;
    customControls?: pulumi.Input<pulumi.Input<inputs.ObjectCasbProfileSaasapplicationCustomControl>[]>;
    domainControl?: pulumi.Input<string>;
    domainControlDomains?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    profile: pulumi.Input<string>;
    safeSearch?: pulumi.Input<string>;
    safeSearchControls?: pulumi.Input<pulumi.Input<string>[]>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tenantControl?: pulumi.Input<string>;
    tenantControlTenants?: pulumi.Input<pulumi.Input<string>[]>;
}
