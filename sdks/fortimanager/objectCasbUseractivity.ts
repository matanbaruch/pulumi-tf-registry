// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectCasbUseractivity extends pulumi.CustomResource {
    /**
     * Get an existing ObjectCasbUseractivity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectCasbUseractivityState, opts?: pulumi.CustomResourceOptions): ObjectCasbUseractivity {
        return new ObjectCasbUseractivity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectCasbUseractivity:ObjectCasbUseractivity';

    /**
     * Returns true if the given object is an instance of ObjectCasbUseractivity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectCasbUseractivity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectCasbUseractivity.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly application!: pulumi.Output<string | undefined>;
    public readonly casbName!: pulumi.Output<string | undefined>;
    public readonly category!: pulumi.Output<string>;
    public readonly controlOptions!: pulumi.Output<outputs.ObjectCasbUseractivityControlOption[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly matchStrategy!: pulumi.Output<string>;
    public readonly matches!: pulumi.Output<outputs.ObjectCasbUseractivityMatch[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a ObjectCasbUseractivity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectCasbUseractivityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectCasbUseractivityArgs | ObjectCasbUseractivityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectCasbUseractivityState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["application"] = state ? state.application : undefined;
            resourceInputs["casbName"] = state ? state.casbName : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["controlOptions"] = state ? state.controlOptions : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["matchStrategy"] = state ? state.matchStrategy : undefined;
            resourceInputs["matches"] = state ? state.matches : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as ObjectCasbUseractivityArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["application"] = args ? args.application : undefined;
            resourceInputs["casbName"] = args ? args.casbName : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["controlOptions"] = args ? args.controlOptions : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["matchStrategy"] = args ? args.matchStrategy : undefined;
            resourceInputs["matches"] = args ? args.matches : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectCasbUseractivity.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectCasbUseractivity resources.
 */
export interface ObjectCasbUseractivityState {
    adom?: pulumi.Input<string>;
    application?: pulumi.Input<string>;
    casbName?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    controlOptions?: pulumi.Input<pulumi.Input<inputs.ObjectCasbUseractivityControlOption>[]>;
    description?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    matchStrategy?: pulumi.Input<string>;
    matches?: pulumi.Input<pulumi.Input<inputs.ObjectCasbUseractivityMatch>[]>;
    name?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectCasbUseractivity resource.
 */
export interface ObjectCasbUseractivityArgs {
    adom?: pulumi.Input<string>;
    application?: pulumi.Input<string>;
    casbName?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    controlOptions?: pulumi.Input<pulumi.Input<inputs.ObjectCasbUseractivityControlOption>[]>;
    description?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    matchStrategy?: pulumi.Input<string>;
    matches?: pulumi.Input<pulumi.Input<inputs.ObjectCasbUseractivityMatch>[]>;
    name?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
