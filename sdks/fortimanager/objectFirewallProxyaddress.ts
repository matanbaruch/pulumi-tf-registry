// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectFirewallProxyaddress extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallProxyaddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallProxyaddressState, opts?: pulumi.CustomResourceOptions): ObjectFirewallProxyaddress {
        return new ObjectFirewallProxyaddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallProxyaddress:ObjectFirewallProxyaddress';

    /**
     * Returns true if the given object is an instance of ObjectFirewallProxyaddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallProxyaddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallProxyaddress.__pulumiType;
    }

    public readonly _imageBase64!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly applications!: pulumi.Output<string[]>;
    public readonly caseSensitivity!: pulumi.Output<string>;
    public readonly category!: pulumi.Output<string | undefined>;
    public readonly color!: pulumi.Output<number | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly header!: pulumi.Output<string | undefined>;
    public readonly headerGroups!: pulumi.Output<outputs.ObjectFirewallProxyaddressHeaderGroup[] | undefined>;
    public readonly headerName!: pulumi.Output<string | undefined>;
    public readonly host!: pulumi.Output<string | undefined>;
    public readonly hostRegex!: pulumi.Output<string | undefined>;
    public readonly methods!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly path!: pulumi.Output<string | undefined>;
    public readonly query!: pulumi.Output<string | undefined>;
    public readonly referrer!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly taggings!: pulumi.Output<outputs.ObjectFirewallProxyaddressTagging[] | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly uaMaxVer!: pulumi.Output<string | undefined>;
    public readonly uaMinVer!: pulumi.Output<string | undefined>;
    public readonly uas!: pulumi.Output<string[]>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly visibility!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectFirewallProxyaddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectFirewallProxyaddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallProxyaddressArgs | ObjectFirewallProxyaddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallProxyaddressState | undefined;
            resourceInputs["_imageBase64"] = state ? state._imageBase64 : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["caseSensitivity"] = state ? state.caseSensitivity : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["header"] = state ? state.header : undefined;
            resourceInputs["headerGroups"] = state ? state.headerGroups : undefined;
            resourceInputs["headerName"] = state ? state.headerName : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["hostRegex"] = state ? state.hostRegex : undefined;
            resourceInputs["methods"] = state ? state.methods : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["query"] = state ? state.query : undefined;
            resourceInputs["referrer"] = state ? state.referrer : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["taggings"] = state ? state.taggings : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uaMaxVer"] = state ? state.uaMaxVer : undefined;
            resourceInputs["uaMinVer"] = state ? state.uaMinVer : undefined;
            resourceInputs["uas"] = state ? state.uas : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["visibility"] = state ? state.visibility : undefined;
        } else {
            const args = argsOrState as ObjectFirewallProxyaddressArgs | undefined;
            resourceInputs["_imageBase64"] = args ? args._imageBase64 : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["caseSensitivity"] = args ? args.caseSensitivity : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["header"] = args ? args.header : undefined;
            resourceInputs["headerGroups"] = args ? args.headerGroups : undefined;
            resourceInputs["headerName"] = args ? args.headerName : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["hostRegex"] = args ? args.hostRegex : undefined;
            resourceInputs["methods"] = args ? args.methods : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["referrer"] = args ? args.referrer : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["taggings"] = args ? args.taggings : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uaMaxVer"] = args ? args.uaMaxVer : undefined;
            resourceInputs["uaMinVer"] = args ? args.uaMinVer : undefined;
            resourceInputs["uas"] = args ? args.uas : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallProxyaddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallProxyaddress resources.
 */
export interface ObjectFirewallProxyaddressState {
    _imageBase64?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    caseSensitivity?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    header?: pulumi.Input<string>;
    headerGroups?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallProxyaddressHeaderGroup>[]>;
    headerName?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    hostRegex?: pulumi.Input<string>;
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    referrer?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    taggings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallProxyaddressTagging>[]>;
    type?: pulumi.Input<string>;
    uaMaxVer?: pulumi.Input<string>;
    uaMinVer?: pulumi.Input<string>;
    uas?: pulumi.Input<pulumi.Input<string>[]>;
    uuid?: pulumi.Input<string>;
    visibility?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFirewallProxyaddress resource.
 */
export interface ObjectFirewallProxyaddressArgs {
    _imageBase64?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    caseSensitivity?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    header?: pulumi.Input<string>;
    headerGroups?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallProxyaddressHeaderGroup>[]>;
    headerName?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    hostRegex?: pulumi.Input<string>;
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    referrer?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    taggings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallProxyaddressTagging>[]>;
    type?: pulumi.Input<string>;
    uaMaxVer?: pulumi.Input<string>;
    uaMinVer?: pulumi.Input<string>;
    uas?: pulumi.Input<pulumi.Input<string>[]>;
    uuid?: pulumi.Input<string>;
    visibility?: pulumi.Input<string>;
}
