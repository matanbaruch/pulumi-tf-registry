// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectSystemExternalresource extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSystemExternalresource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSystemExternalresourceState, opts?: pulumi.CustomResourceOptions): ObjectSystemExternalresource {
        return new ObjectSystemExternalresource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSystemExternalresource:ObjectSystemExternalresource';

    /**
     * Returns true if the given object is an instance of ObjectSystemExternalresource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSystemExternalresource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSystemExternalresource.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly category!: pulumi.Output<number | undefined>;
    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly interface!: pulumi.Output<string | undefined>;
    public readonly interfaceSelectMethod!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly refreshRate!: pulumi.Output<number>;
    public readonly resource!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly serverIdentityCheck!: pulumi.Output<string>;
    public readonly sourceIp!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly updateMethod!: pulumi.Output<string>;
    public readonly userAgent!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string | undefined>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a ObjectSystemExternalresource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSystemExternalresourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSystemExternalresourceArgs | ObjectSystemExternalresourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSystemExternalresourceState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = state ? state.interfaceSelectMethod : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["refreshRate"] = state ? state.refreshRate : undefined;
            resourceInputs["resource"] = state ? state.resource : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["serverIdentityCheck"] = state ? state.serverIdentityCheck : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateMethod"] = state ? state.updateMethod : undefined;
            resourceInputs["userAgent"] = state ? state.userAgent : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as ObjectSystemExternalresourceArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = args ? args.interfaceSelectMethod : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["refreshRate"] = args ? args.refreshRate : undefined;
            resourceInputs["resource"] = args ? args.resource : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["serverIdentityCheck"] = args ? args.serverIdentityCheck : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updateMethod"] = args ? args.updateMethod : undefined;
            resourceInputs["userAgent"] = args ? args.userAgent : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectSystemExternalresource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSystemExternalresource resources.
 */
export interface ObjectSystemExternalresourceState {
    adom?: pulumi.Input<string>;
    category?: pulumi.Input<number>;
    comments?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    interfaceSelectMethod?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    refreshRate?: pulumi.Input<number>;
    resource?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    serverIdentityCheck?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateMethod?: pulumi.Input<string>;
    userAgent?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectSystemExternalresource resource.
 */
export interface ObjectSystemExternalresourceArgs {
    adom?: pulumi.Input<string>;
    category?: pulumi.Input<number>;
    comments?: pulumi.Input<string>;
    interface?: pulumi.Input<string>;
    interfaceSelectMethod?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    refreshRate?: pulumi.Input<number>;
    resource?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    serverIdentityCheck?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateMethod?: pulumi.Input<string>;
    userAgent?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
