// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PackagesFirewallDospolicy6Anomaly extends pulumi.CustomResource {
    /**
     * Get an existing PackagesFirewallDospolicy6Anomaly resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PackagesFirewallDospolicy6AnomalyState, opts?: pulumi.CustomResourceOptions): PackagesFirewallDospolicy6Anomaly {
        return new PackagesFirewallDospolicy6Anomaly(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/packagesFirewallDospolicy6Anomaly:PackagesFirewallDospolicy6Anomaly';

    /**
     * Returns true if the given object is an instance of PackagesFirewallDospolicy6Anomaly.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PackagesFirewallDospolicy6Anomaly {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PackagesFirewallDospolicy6Anomaly.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly dosPolicy6!: pulumi.Output<string>;
    public readonly log!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly pkg!: pulumi.Output<string>;
    public readonly pkgFolderPath!: pulumi.Output<string | undefined>;
    public readonly quarantine!: pulumi.Output<string>;
    public readonly quarantineExpiry!: pulumi.Output<string | undefined>;
    public readonly quarantineLog!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly synproxyTcpMss!: pulumi.Output<string | undefined>;
    public readonly synproxyTcpSack!: pulumi.Output<string | undefined>;
    public readonly synproxyTcpTimestamp!: pulumi.Output<string | undefined>;
    public readonly synproxyTcpWindow!: pulumi.Output<string | undefined>;
    public readonly synproxyTcpWindowscale!: pulumi.Output<string | undefined>;
    public readonly synproxyTos!: pulumi.Output<string | undefined>;
    public readonly synproxyTtl!: pulumi.Output<string | undefined>;
    public readonly threshold!: pulumi.Output<number | undefined>;
    public readonly thresholddefault!: pulumi.Output<number | undefined>;

    /**
     * Create a PackagesFirewallDospolicy6Anomaly resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PackagesFirewallDospolicy6AnomalyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PackagesFirewallDospolicy6AnomalyArgs | PackagesFirewallDospolicy6AnomalyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PackagesFirewallDospolicy6AnomalyState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["dosPolicy6"] = state ? state.dosPolicy6 : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pkg"] = state ? state.pkg : undefined;
            resourceInputs["pkgFolderPath"] = state ? state.pkgFolderPath : undefined;
            resourceInputs["quarantine"] = state ? state.quarantine : undefined;
            resourceInputs["quarantineExpiry"] = state ? state.quarantineExpiry : undefined;
            resourceInputs["quarantineLog"] = state ? state.quarantineLog : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["synproxyTcpMss"] = state ? state.synproxyTcpMss : undefined;
            resourceInputs["synproxyTcpSack"] = state ? state.synproxyTcpSack : undefined;
            resourceInputs["synproxyTcpTimestamp"] = state ? state.synproxyTcpTimestamp : undefined;
            resourceInputs["synproxyTcpWindow"] = state ? state.synproxyTcpWindow : undefined;
            resourceInputs["synproxyTcpWindowscale"] = state ? state.synproxyTcpWindowscale : undefined;
            resourceInputs["synproxyTos"] = state ? state.synproxyTos : undefined;
            resourceInputs["synproxyTtl"] = state ? state.synproxyTtl : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
            resourceInputs["thresholddefault"] = state ? state.thresholddefault : undefined;
        } else {
            const args = argsOrState as PackagesFirewallDospolicy6AnomalyArgs | undefined;
            if ((!args || args.dosPolicy6 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dosPolicy6'");
            }
            if ((!args || args.pkg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pkg'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["dosPolicy6"] = args ? args.dosPolicy6 : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pkg"] = args ? args.pkg : undefined;
            resourceInputs["pkgFolderPath"] = args ? args.pkgFolderPath : undefined;
            resourceInputs["quarantine"] = args ? args.quarantine : undefined;
            resourceInputs["quarantineExpiry"] = args ? args.quarantineExpiry : undefined;
            resourceInputs["quarantineLog"] = args ? args.quarantineLog : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["synproxyTcpMss"] = args ? args.synproxyTcpMss : undefined;
            resourceInputs["synproxyTcpSack"] = args ? args.synproxyTcpSack : undefined;
            resourceInputs["synproxyTcpTimestamp"] = args ? args.synproxyTcpTimestamp : undefined;
            resourceInputs["synproxyTcpWindow"] = args ? args.synproxyTcpWindow : undefined;
            resourceInputs["synproxyTcpWindowscale"] = args ? args.synproxyTcpWindowscale : undefined;
            resourceInputs["synproxyTos"] = args ? args.synproxyTos : undefined;
            resourceInputs["synproxyTtl"] = args ? args.synproxyTtl : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["thresholddefault"] = args ? args.thresholddefault : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PackagesFirewallDospolicy6Anomaly.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PackagesFirewallDospolicy6Anomaly resources.
 */
export interface PackagesFirewallDospolicy6AnomalyState {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    dosPolicy6?: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pkg?: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    quarantine?: pulumi.Input<string>;
    quarantineExpiry?: pulumi.Input<string>;
    quarantineLog?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    synproxyTcpMss?: pulumi.Input<string>;
    synproxyTcpSack?: pulumi.Input<string>;
    synproxyTcpTimestamp?: pulumi.Input<string>;
    synproxyTcpWindow?: pulumi.Input<string>;
    synproxyTcpWindowscale?: pulumi.Input<string>;
    synproxyTos?: pulumi.Input<string>;
    synproxyTtl?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholddefault?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PackagesFirewallDospolicy6Anomaly resource.
 */
export interface PackagesFirewallDospolicy6AnomalyArgs {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    dosPolicy6: pulumi.Input<string>;
    log?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pkg: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    quarantine?: pulumi.Input<string>;
    quarantineExpiry?: pulumi.Input<string>;
    quarantineLog?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    synproxyTcpMss?: pulumi.Input<string>;
    synproxyTcpSack?: pulumi.Input<string>;
    synproxyTcpTimestamp?: pulumi.Input<string>;
    synproxyTcpWindow?: pulumi.Input<string>;
    synproxyTcpWindowscale?: pulumi.Input<string>;
    synproxyTos?: pulumi.Input<string>;
    synproxyTtl?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholddefault?: pulumi.Input<number>;
}
