// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemAlertevent extends pulumi.CustomResource {
    /**
     * Get an existing SystemAlertevent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAlerteventState, opts?: pulumi.CustomResourceOptions): SystemAlertevent {
        return new SystemAlertevent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/systemAlertevent:SystemAlertevent';

    /**
     * Returns true if the given object is an instance of SystemAlertevent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAlertevent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAlertevent.__pulumiType;
    }

    public readonly alertDestinations!: pulumi.Output<outputs.SystemAlerteventAlertDestination[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly enableGenericTexts!: pulumi.Output<string[]>;
    public readonly enableSeverityFilters!: pulumi.Output<string[]>;
    public readonly eventTimePeriod!: pulumi.Output<string>;
    public readonly genericText!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly numEvents!: pulumi.Output<string>;
    public readonly severityFilter!: pulumi.Output<string>;
    public readonly severityLevelComps!: pulumi.Output<string[]>;
    public readonly severityLevelLogs!: pulumi.Output<string[]>;

    /**
     * Create a SystemAlertevent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAlerteventArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAlerteventArgs | SystemAlerteventState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAlerteventState | undefined;
            resourceInputs["alertDestinations"] = state ? state.alertDestinations : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["enableGenericTexts"] = state ? state.enableGenericTexts : undefined;
            resourceInputs["enableSeverityFilters"] = state ? state.enableSeverityFilters : undefined;
            resourceInputs["eventTimePeriod"] = state ? state.eventTimePeriod : undefined;
            resourceInputs["genericText"] = state ? state.genericText : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numEvents"] = state ? state.numEvents : undefined;
            resourceInputs["severityFilter"] = state ? state.severityFilter : undefined;
            resourceInputs["severityLevelComps"] = state ? state.severityLevelComps : undefined;
            resourceInputs["severityLevelLogs"] = state ? state.severityLevelLogs : undefined;
        } else {
            const args = argsOrState as SystemAlerteventArgs | undefined;
            resourceInputs["alertDestinations"] = args ? args.alertDestinations : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["enableGenericTexts"] = args ? args.enableGenericTexts : undefined;
            resourceInputs["enableSeverityFilters"] = args ? args.enableSeverityFilters : undefined;
            resourceInputs["eventTimePeriod"] = args ? args.eventTimePeriod : undefined;
            resourceInputs["genericText"] = args ? args.genericText : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numEvents"] = args ? args.numEvents : undefined;
            resourceInputs["severityFilter"] = args ? args.severityFilter : undefined;
            resourceInputs["severityLevelComps"] = args ? args.severityLevelComps : undefined;
            resourceInputs["severityLevelLogs"] = args ? args.severityLevelLogs : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemAlertevent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemAlertevent resources.
 */
export interface SystemAlerteventState {
    alertDestinations?: pulumi.Input<pulumi.Input<inputs.SystemAlerteventAlertDestination>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    enableGenericTexts?: pulumi.Input<pulumi.Input<string>[]>;
    enableSeverityFilters?: pulumi.Input<pulumi.Input<string>[]>;
    eventTimePeriod?: pulumi.Input<string>;
    genericText?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numEvents?: pulumi.Input<string>;
    severityFilter?: pulumi.Input<string>;
    severityLevelComps?: pulumi.Input<pulumi.Input<string>[]>;
    severityLevelLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SystemAlertevent resource.
 */
export interface SystemAlerteventArgs {
    alertDestinations?: pulumi.Input<pulumi.Input<inputs.SystemAlerteventAlertDestination>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    enableGenericTexts?: pulumi.Input<pulumi.Input<string>[]>;
    enableSeverityFilters?: pulumi.Input<pulumi.Input<string>[]>;
    eventTimePeriod?: pulumi.Input<string>;
    genericText?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numEvents?: pulumi.Input<string>;
    severityFilter?: pulumi.Input<string>;
    severityLevelComps?: pulumi.Input<pulumi.Input<string>[]>;
    severityLevelLogs?: pulumi.Input<pulumi.Input<string>[]>;
}
