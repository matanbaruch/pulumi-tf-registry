// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectFirewallSslsshprofileSsh extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallSslsshprofileSsh resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallSslsshprofileSshState, opts?: pulumi.CustomResourceOptions): ObjectFirewallSslsshprofileSsh {
        return new ObjectFirewallSslsshprofileSsh(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallSslsshprofileSsh:ObjectFirewallSslsshprofileSsh';

    /**
     * Returns true if the given object is an instance of ObjectFirewallSslsshprofileSsh.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallSslsshprofileSsh {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallSslsshprofileSsh.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly inspectAll!: pulumi.Output<string>;
    public readonly ports!: pulumi.Output<number[]>;
    public readonly proxyAfterTcpHandshake!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sshAlgorithm!: pulumi.Output<string>;
    public readonly sshPolicyCheck!: pulumi.Output<string | undefined>;
    public readonly sshTunPolicyCheck!: pulumi.Output<string>;
    public readonly sslSshProfile!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly unsupportedVersion!: pulumi.Output<string>;

    /**
     * Create a ObjectFirewallSslsshprofileSsh resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectFirewallSslsshprofileSshArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallSslsshprofileSshArgs | ObjectFirewallSslsshprofileSshState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallSslsshprofileSshState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["inspectAll"] = state ? state.inspectAll : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["proxyAfterTcpHandshake"] = state ? state.proxyAfterTcpHandshake : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sshAlgorithm"] = state ? state.sshAlgorithm : undefined;
            resourceInputs["sshPolicyCheck"] = state ? state.sshPolicyCheck : undefined;
            resourceInputs["sshTunPolicyCheck"] = state ? state.sshTunPolicyCheck : undefined;
            resourceInputs["sslSshProfile"] = state ? state.sslSshProfile : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["unsupportedVersion"] = state ? state.unsupportedVersion : undefined;
        } else {
            const args = argsOrState as ObjectFirewallSslsshprofileSshArgs | undefined;
            if ((!args || args.sslSshProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sslSshProfile'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["inspectAll"] = args ? args.inspectAll : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["proxyAfterTcpHandshake"] = args ? args.proxyAfterTcpHandshake : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sshAlgorithm"] = args ? args.sshAlgorithm : undefined;
            resourceInputs["sshPolicyCheck"] = args ? args.sshPolicyCheck : undefined;
            resourceInputs["sshTunPolicyCheck"] = args ? args.sshTunPolicyCheck : undefined;
            resourceInputs["sslSshProfile"] = args ? args.sslSshProfile : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["unsupportedVersion"] = args ? args.unsupportedVersion : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallSslsshprofileSsh.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallSslsshprofileSsh resources.
 */
export interface ObjectFirewallSslsshprofileSshState {
    adom?: pulumi.Input<string>;
    inspectAll?: pulumi.Input<string>;
    ports?: pulumi.Input<pulumi.Input<number>[]>;
    proxyAfterTcpHandshake?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sshAlgorithm?: pulumi.Input<string>;
    sshPolicyCheck?: pulumi.Input<string>;
    sshTunPolicyCheck?: pulumi.Input<string>;
    sslSshProfile?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    unsupportedVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFirewallSslsshprofileSsh resource.
 */
export interface ObjectFirewallSslsshprofileSshArgs {
    adom?: pulumi.Input<string>;
    inspectAll?: pulumi.Input<string>;
    ports?: pulumi.Input<pulumi.Input<number>[]>;
    proxyAfterTcpHandshake?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sshAlgorithm?: pulumi.Input<string>;
    sshPolicyCheck?: pulumi.Input<string>;
    sshTunPolicyCheck?: pulumi.Input<string>;
    sslSshProfile: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    unsupportedVersion?: pulumi.Input<string>;
}
