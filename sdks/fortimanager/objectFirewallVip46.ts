// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectFirewallVip46 extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallVip46 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallVip46State, opts?: pulumi.CustomResourceOptions): ObjectFirewallVip46 {
        return new ObjectFirewallVip46(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallVip46:ObjectFirewallVip46';

    /**
     * Returns true if the given object is an instance of ObjectFirewallVip46.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallVip46 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallVip46.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly arpReply!: pulumi.Output<string>;
    public readonly color!: pulumi.Output<number | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly dynamicMappings!: pulumi.Output<outputs.ObjectFirewallVip46DynamicMapping[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly extip!: pulumi.Output<string | undefined>;
    public readonly extport!: pulumi.Output<string>;
    public readonly fosid!: pulumi.Output<number | undefined>;
    public readonly ldbMethod!: pulumi.Output<string>;
    public readonly mappedip!: pulumi.Output<string | undefined>;
    public readonly mappedport!: pulumi.Output<string>;
    public readonly monitors!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly portforward!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly realservers!: pulumi.Output<outputs.ObjectFirewallVip46Realserver[] | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly serverType!: pulumi.Output<string | undefined>;
    public readonly srcFilters!: pulumi.Output<string[]>;
    public readonly srcintfFilter!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a ObjectFirewallVip46 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectFirewallVip46Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallVip46Args | ObjectFirewallVip46State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallVip46State | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["arpReply"] = state ? state.arpReply : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dynamicMappings"] = state ? state.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["extip"] = state ? state.extip : undefined;
            resourceInputs["extport"] = state ? state.extport : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["ldbMethod"] = state ? state.ldbMethod : undefined;
            resourceInputs["mappedip"] = state ? state.mappedip : undefined;
            resourceInputs["mappedport"] = state ? state.mappedport : undefined;
            resourceInputs["monitors"] = state ? state.monitors : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portforward"] = state ? state.portforward : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["realservers"] = state ? state.realservers : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["serverType"] = state ? state.serverType : undefined;
            resourceInputs["srcFilters"] = state ? state.srcFilters : undefined;
            resourceInputs["srcintfFilter"] = state ? state.srcintfFilter : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as ObjectFirewallVip46Args | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["arpReply"] = args ? args.arpReply : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dynamicMappings"] = args ? args.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["extip"] = args ? args.extip : undefined;
            resourceInputs["extport"] = args ? args.extport : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["ldbMethod"] = args ? args.ldbMethod : undefined;
            resourceInputs["mappedip"] = args ? args.mappedip : undefined;
            resourceInputs["mappedport"] = args ? args.mappedport : undefined;
            resourceInputs["monitors"] = args ? args.monitors : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portforward"] = args ? args.portforward : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["realservers"] = args ? args.realservers : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["serverType"] = args ? args.serverType : undefined;
            resourceInputs["srcFilters"] = args ? args.srcFilters : undefined;
            resourceInputs["srcintfFilter"] = args ? args.srcintfFilter : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallVip46.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallVip46 resources.
 */
export interface ObjectFirewallVip46State {
    adom?: pulumi.Input<string>;
    arpReply?: pulumi.Input<string>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip46DynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    extip?: pulumi.Input<string>;
    extport?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    ldbMethod?: pulumi.Input<string>;
    mappedip?: pulumi.Input<string>;
    mappedport?: pulumi.Input<string>;
    monitors?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    portforward?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    realservers?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip46Realserver>[]>;
    scopetype?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    srcFilters?: pulumi.Input<pulumi.Input<string>[]>;
    srcintfFilter?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFirewallVip46 resource.
 */
export interface ObjectFirewallVip46Args {
    adom?: pulumi.Input<string>;
    arpReply?: pulumi.Input<string>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip46DynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    extip?: pulumi.Input<string>;
    extport?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    ldbMethod?: pulumi.Input<string>;
    mappedip?: pulumi.Input<string>;
    mappedport?: pulumi.Input<string>;
    monitors?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    portforward?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    realservers?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip46Realserver>[]>;
    scopetype?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    srcFilters?: pulumi.Input<pulumi.Input<string>[]>;
    srcintfFilter?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
