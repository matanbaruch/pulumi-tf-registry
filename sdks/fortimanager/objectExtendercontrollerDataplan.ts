// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectExtendercontrollerDataplan extends pulumi.CustomResource {
    /**
     * Get an existing ObjectExtendercontrollerDataplan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectExtendercontrollerDataplanState, opts?: pulumi.CustomResourceOptions): ObjectExtendercontrollerDataplan {
        return new ObjectExtendercontrollerDataplan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectExtendercontrollerDataplan:ObjectExtendercontrollerDataplan';

    /**
     * Returns true if the given object is an instance of ObjectExtendercontrollerDataplan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectExtendercontrollerDataplan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectExtendercontrollerDataplan.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly apn!: pulumi.Output<string | undefined>;
    public readonly authType!: pulumi.Output<string>;
    public readonly billingDate!: pulumi.Output<number>;
    public readonly capacity!: pulumi.Output<number | undefined>;
    public readonly carrier!: pulumi.Output<string | undefined>;
    public readonly iccid!: pulumi.Output<string | undefined>;
    public readonly modemId!: pulumi.Output<string>;
    public readonly monthlyFee!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly overage!: pulumi.Output<string>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly pdn!: pulumi.Output<string>;
    public readonly preferredSubnet!: pulumi.Output<number>;
    public readonly privateNetwork!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly signalPeriod!: pulumi.Output<number>;
    public readonly signalThreshold!: pulumi.Output<number>;
    public readonly slot!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectExtendercontrollerDataplan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectExtendercontrollerDataplanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectExtendercontrollerDataplanArgs | ObjectExtendercontrollerDataplanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectExtendercontrollerDataplanState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["apn"] = state ? state.apn : undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["billingDate"] = state ? state.billingDate : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["carrier"] = state ? state.carrier : undefined;
            resourceInputs["iccid"] = state ? state.iccid : undefined;
            resourceInputs["modemId"] = state ? state.modemId : undefined;
            resourceInputs["monthlyFee"] = state ? state.monthlyFee : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overage"] = state ? state.overage : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["pdn"] = state ? state.pdn : undefined;
            resourceInputs["preferredSubnet"] = state ? state.preferredSubnet : undefined;
            resourceInputs["privateNetwork"] = state ? state.privateNetwork : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["signalPeriod"] = state ? state.signalPeriod : undefined;
            resourceInputs["signalThreshold"] = state ? state.signalThreshold : undefined;
            resourceInputs["slot"] = state ? state.slot : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as ObjectExtendercontrollerDataplanArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["apn"] = args ? args.apn : undefined;
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["billingDate"] = args ? args.billingDate : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["carrier"] = args ? args.carrier : undefined;
            resourceInputs["iccid"] = args ? args.iccid : undefined;
            resourceInputs["modemId"] = args ? args.modemId : undefined;
            resourceInputs["monthlyFee"] = args ? args.monthlyFee : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overage"] = args ? args.overage : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["pdn"] = args ? args.pdn : undefined;
            resourceInputs["preferredSubnet"] = args ? args.preferredSubnet : undefined;
            resourceInputs["privateNetwork"] = args ? args.privateNetwork : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["signalPeriod"] = args ? args.signalPeriod : undefined;
            resourceInputs["signalThreshold"] = args ? args.signalThreshold : undefined;
            resourceInputs["slot"] = args ? args.slot : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectExtendercontrollerDataplan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectExtendercontrollerDataplan resources.
 */
export interface ObjectExtendercontrollerDataplanState {
    adom?: pulumi.Input<string>;
    apn?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    billingDate?: pulumi.Input<number>;
    capacity?: pulumi.Input<number>;
    carrier?: pulumi.Input<string>;
    iccid?: pulumi.Input<string>;
    modemId?: pulumi.Input<string>;
    monthlyFee?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    overage?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    pdn?: pulumi.Input<string>;
    preferredSubnet?: pulumi.Input<number>;
    privateNetwork?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    signalPeriod?: pulumi.Input<number>;
    signalThreshold?: pulumi.Input<number>;
    slot?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectExtendercontrollerDataplan resource.
 */
export interface ObjectExtendercontrollerDataplanArgs {
    adom?: pulumi.Input<string>;
    apn?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    billingDate?: pulumi.Input<number>;
    capacity?: pulumi.Input<number>;
    carrier?: pulumi.Input<string>;
    iccid?: pulumi.Input<string>;
    modemId?: pulumi.Input<string>;
    monthlyFee?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    overage?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    pdn?: pulumi.Input<string>;
    preferredSubnet?: pulumi.Input<number>;
    privateNetwork?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    signalPeriod?: pulumi.Input<number>;
    signalThreshold?: pulumi.Input<number>;
    slot?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
