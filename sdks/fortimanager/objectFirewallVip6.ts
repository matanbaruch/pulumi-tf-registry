// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectFirewallVip6 extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallVip6 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallVip6State, opts?: pulumi.CustomResourceOptions): ObjectFirewallVip6 {
        return new ObjectFirewallVip6(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallVip6:ObjectFirewallVip6';

    /**
     * Returns true if the given object is an instance of ObjectFirewallVip6.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallVip6 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallVip6.__pulumiType;
    }

    public readonly addNat64Route!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly arpReply!: pulumi.Output<string>;
    public readonly color!: pulumi.Output<number | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly dynamicMappings!: pulumi.Output<outputs.ObjectFirewallVip6DynamicMapping[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly embeddedIpv4Address!: pulumi.Output<string>;
    public readonly extip!: pulumi.Output<string | undefined>;
    public readonly extport!: pulumi.Output<string>;
    public readonly fosid!: pulumi.Output<number | undefined>;
    public readonly h2Support!: pulumi.Output<string>;
    public readonly h3Support!: pulumi.Output<string>;
    public readonly httpCookieAge!: pulumi.Output<number>;
    public readonly httpCookieDomain!: pulumi.Output<string | undefined>;
    public readonly httpCookieDomainFromHost!: pulumi.Output<string>;
    public readonly httpCookieGeneration!: pulumi.Output<number | undefined>;
    public readonly httpCookiePath!: pulumi.Output<string | undefined>;
    public readonly httpCookieShare!: pulumi.Output<string>;
    public readonly httpIpHeader!: pulumi.Output<string>;
    public readonly httpIpHeaderName!: pulumi.Output<string | undefined>;
    public readonly httpMultiplex!: pulumi.Output<string>;
    public readonly httpRedirect!: pulumi.Output<string>;
    public readonly httpsCookieSecure!: pulumi.Output<string>;
    public readonly ipv4Mappedip!: pulumi.Output<string | undefined>;
    public readonly ipv4Mappedport!: pulumi.Output<string>;
    public readonly ldbMethod!: pulumi.Output<string>;
    public readonly mappedips!: pulumi.Output<string[]>;
    public readonly mappedport!: pulumi.Output<string>;
    public readonly maxEmbryonicConnections!: pulumi.Output<number>;
    public readonly monitor!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nat64!: pulumi.Output<string>;
    public readonly nat66!: pulumi.Output<string>;
    public readonly natSourceVip!: pulumi.Output<string>;
    public readonly ndpReply!: pulumi.Output<string>;
    public readonly outlookWebAccess!: pulumi.Output<string>;
    public readonly persistence!: pulumi.Output<string>;
    public readonly portforward!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly quic!: pulumi.Output<outputs.ObjectFirewallVip6Quic | undefined>;
    public readonly realservers!: pulumi.Output<outputs.ObjectFirewallVip6Realserver[] | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly serverType!: pulumi.Output<string | undefined>;
    public readonly srcFilters!: pulumi.Output<string[]>;
    public readonly srcVipFilter!: pulumi.Output<string>;
    public readonly sslAcceptFfdheGroups!: pulumi.Output<string>;
    public readonly sslAlgorithm!: pulumi.Output<string | undefined>;
    public readonly sslCertificate!: pulumi.Output<string | undefined>;
    public readonly sslCipherSuites!: pulumi.Output<outputs.ObjectFirewallVip6SslCipherSuite[] | undefined>;
    public readonly sslClientFallback!: pulumi.Output<string>;
    public readonly sslClientRekeyCount!: pulumi.Output<number | undefined>;
    public readonly sslClientRenegotiation!: pulumi.Output<string | undefined>;
    public readonly sslClientSessionStateMax!: pulumi.Output<number | undefined>;
    public readonly sslClientSessionStateTimeout!: pulumi.Output<number | undefined>;
    public readonly sslClientSessionStateType!: pulumi.Output<string | undefined>;
    public readonly sslDhBits!: pulumi.Output<string | undefined>;
    public readonly sslHpkp!: pulumi.Output<string | undefined>;
    public readonly sslHpkpAge!: pulumi.Output<number | undefined>;
    public readonly sslHpkpBackup!: pulumi.Output<string | undefined>;
    public readonly sslHpkpIncludeSubdomains!: pulumi.Output<string | undefined>;
    public readonly sslHpkpPrimary!: pulumi.Output<string | undefined>;
    public readonly sslHpkpReportUri!: pulumi.Output<string | undefined>;
    public readonly sslHsts!: pulumi.Output<string>;
    public readonly sslHstsAge!: pulumi.Output<number>;
    public readonly sslHstsIncludeSubdomains!: pulumi.Output<string>;
    public readonly sslHttpLocationConversion!: pulumi.Output<string>;
    public readonly sslHttpMatchHost!: pulumi.Output<string | undefined>;
    public readonly sslMaxVersion!: pulumi.Output<string | undefined>;
    public readonly sslMinVersion!: pulumi.Output<string | undefined>;
    public readonly sslMode!: pulumi.Output<string | undefined>;
    public readonly sslPfs!: pulumi.Output<string | undefined>;
    public readonly sslSendEmptyFrags!: pulumi.Output<string | undefined>;
    public readonly sslServerAlgorithm!: pulumi.Output<string>;
    public readonly sslServerCipherSuites!: pulumi.Output<outputs.ObjectFirewallVip6SslServerCipherSuite[] | undefined>;
    public readonly sslServerMaxVersion!: pulumi.Output<string>;
    public readonly sslServerMinVersion!: pulumi.Output<string>;
    public readonly sslServerRenegotiation!: pulumi.Output<string>;
    public readonly sslServerSessionStateMax!: pulumi.Output<number | undefined>;
    public readonly sslServerSessionStateTimeout!: pulumi.Output<number | undefined>;
    public readonly sslServerSessionStateType!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly weblogicServer!: pulumi.Output<string>;
    public readonly websphereServer!: pulumi.Output<string>;

    /**
     * Create a ObjectFirewallVip6 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectFirewallVip6Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallVip6Args | ObjectFirewallVip6State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallVip6State | undefined;
            resourceInputs["addNat64Route"] = state ? state.addNat64Route : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["arpReply"] = state ? state.arpReply : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dynamicMappings"] = state ? state.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["embeddedIpv4Address"] = state ? state.embeddedIpv4Address : undefined;
            resourceInputs["extip"] = state ? state.extip : undefined;
            resourceInputs["extport"] = state ? state.extport : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["h2Support"] = state ? state.h2Support : undefined;
            resourceInputs["h3Support"] = state ? state.h3Support : undefined;
            resourceInputs["httpCookieAge"] = state ? state.httpCookieAge : undefined;
            resourceInputs["httpCookieDomain"] = state ? state.httpCookieDomain : undefined;
            resourceInputs["httpCookieDomainFromHost"] = state ? state.httpCookieDomainFromHost : undefined;
            resourceInputs["httpCookieGeneration"] = state ? state.httpCookieGeneration : undefined;
            resourceInputs["httpCookiePath"] = state ? state.httpCookiePath : undefined;
            resourceInputs["httpCookieShare"] = state ? state.httpCookieShare : undefined;
            resourceInputs["httpIpHeader"] = state ? state.httpIpHeader : undefined;
            resourceInputs["httpIpHeaderName"] = state ? state.httpIpHeaderName : undefined;
            resourceInputs["httpMultiplex"] = state ? state.httpMultiplex : undefined;
            resourceInputs["httpRedirect"] = state ? state.httpRedirect : undefined;
            resourceInputs["httpsCookieSecure"] = state ? state.httpsCookieSecure : undefined;
            resourceInputs["ipv4Mappedip"] = state ? state.ipv4Mappedip : undefined;
            resourceInputs["ipv4Mappedport"] = state ? state.ipv4Mappedport : undefined;
            resourceInputs["ldbMethod"] = state ? state.ldbMethod : undefined;
            resourceInputs["mappedips"] = state ? state.mappedips : undefined;
            resourceInputs["mappedport"] = state ? state.mappedport : undefined;
            resourceInputs["maxEmbryonicConnections"] = state ? state.maxEmbryonicConnections : undefined;
            resourceInputs["monitor"] = state ? state.monitor : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nat64"] = state ? state.nat64 : undefined;
            resourceInputs["nat66"] = state ? state.nat66 : undefined;
            resourceInputs["natSourceVip"] = state ? state.natSourceVip : undefined;
            resourceInputs["ndpReply"] = state ? state.ndpReply : undefined;
            resourceInputs["outlookWebAccess"] = state ? state.outlookWebAccess : undefined;
            resourceInputs["persistence"] = state ? state.persistence : undefined;
            resourceInputs["portforward"] = state ? state.portforward : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["quic"] = state ? state.quic : undefined;
            resourceInputs["realservers"] = state ? state.realservers : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["serverType"] = state ? state.serverType : undefined;
            resourceInputs["srcFilters"] = state ? state.srcFilters : undefined;
            resourceInputs["srcVipFilter"] = state ? state.srcVipFilter : undefined;
            resourceInputs["sslAcceptFfdheGroups"] = state ? state.sslAcceptFfdheGroups : undefined;
            resourceInputs["sslAlgorithm"] = state ? state.sslAlgorithm : undefined;
            resourceInputs["sslCertificate"] = state ? state.sslCertificate : undefined;
            resourceInputs["sslCipherSuites"] = state ? state.sslCipherSuites : undefined;
            resourceInputs["sslClientFallback"] = state ? state.sslClientFallback : undefined;
            resourceInputs["sslClientRekeyCount"] = state ? state.sslClientRekeyCount : undefined;
            resourceInputs["sslClientRenegotiation"] = state ? state.sslClientRenegotiation : undefined;
            resourceInputs["sslClientSessionStateMax"] = state ? state.sslClientSessionStateMax : undefined;
            resourceInputs["sslClientSessionStateTimeout"] = state ? state.sslClientSessionStateTimeout : undefined;
            resourceInputs["sslClientSessionStateType"] = state ? state.sslClientSessionStateType : undefined;
            resourceInputs["sslDhBits"] = state ? state.sslDhBits : undefined;
            resourceInputs["sslHpkp"] = state ? state.sslHpkp : undefined;
            resourceInputs["sslHpkpAge"] = state ? state.sslHpkpAge : undefined;
            resourceInputs["sslHpkpBackup"] = state ? state.sslHpkpBackup : undefined;
            resourceInputs["sslHpkpIncludeSubdomains"] = state ? state.sslHpkpIncludeSubdomains : undefined;
            resourceInputs["sslHpkpPrimary"] = state ? state.sslHpkpPrimary : undefined;
            resourceInputs["sslHpkpReportUri"] = state ? state.sslHpkpReportUri : undefined;
            resourceInputs["sslHsts"] = state ? state.sslHsts : undefined;
            resourceInputs["sslHstsAge"] = state ? state.sslHstsAge : undefined;
            resourceInputs["sslHstsIncludeSubdomains"] = state ? state.sslHstsIncludeSubdomains : undefined;
            resourceInputs["sslHttpLocationConversion"] = state ? state.sslHttpLocationConversion : undefined;
            resourceInputs["sslHttpMatchHost"] = state ? state.sslHttpMatchHost : undefined;
            resourceInputs["sslMaxVersion"] = state ? state.sslMaxVersion : undefined;
            resourceInputs["sslMinVersion"] = state ? state.sslMinVersion : undefined;
            resourceInputs["sslMode"] = state ? state.sslMode : undefined;
            resourceInputs["sslPfs"] = state ? state.sslPfs : undefined;
            resourceInputs["sslSendEmptyFrags"] = state ? state.sslSendEmptyFrags : undefined;
            resourceInputs["sslServerAlgorithm"] = state ? state.sslServerAlgorithm : undefined;
            resourceInputs["sslServerCipherSuites"] = state ? state.sslServerCipherSuites : undefined;
            resourceInputs["sslServerMaxVersion"] = state ? state.sslServerMaxVersion : undefined;
            resourceInputs["sslServerMinVersion"] = state ? state.sslServerMinVersion : undefined;
            resourceInputs["sslServerRenegotiation"] = state ? state.sslServerRenegotiation : undefined;
            resourceInputs["sslServerSessionStateMax"] = state ? state.sslServerSessionStateMax : undefined;
            resourceInputs["sslServerSessionStateTimeout"] = state ? state.sslServerSessionStateTimeout : undefined;
            resourceInputs["sslServerSessionStateType"] = state ? state.sslServerSessionStateType : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["weblogicServer"] = state ? state.weblogicServer : undefined;
            resourceInputs["websphereServer"] = state ? state.websphereServer : undefined;
        } else {
            const args = argsOrState as ObjectFirewallVip6Args | undefined;
            resourceInputs["addNat64Route"] = args ? args.addNat64Route : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["arpReply"] = args ? args.arpReply : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dynamicMappings"] = args ? args.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["embeddedIpv4Address"] = args ? args.embeddedIpv4Address : undefined;
            resourceInputs["extip"] = args ? args.extip : undefined;
            resourceInputs["extport"] = args ? args.extport : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["h2Support"] = args ? args.h2Support : undefined;
            resourceInputs["h3Support"] = args ? args.h3Support : undefined;
            resourceInputs["httpCookieAge"] = args ? args.httpCookieAge : undefined;
            resourceInputs["httpCookieDomain"] = args ? args.httpCookieDomain : undefined;
            resourceInputs["httpCookieDomainFromHost"] = args ? args.httpCookieDomainFromHost : undefined;
            resourceInputs["httpCookieGeneration"] = args ? args.httpCookieGeneration : undefined;
            resourceInputs["httpCookiePath"] = args ? args.httpCookiePath : undefined;
            resourceInputs["httpCookieShare"] = args ? args.httpCookieShare : undefined;
            resourceInputs["httpIpHeader"] = args ? args.httpIpHeader : undefined;
            resourceInputs["httpIpHeaderName"] = args ? args.httpIpHeaderName : undefined;
            resourceInputs["httpMultiplex"] = args ? args.httpMultiplex : undefined;
            resourceInputs["httpRedirect"] = args ? args.httpRedirect : undefined;
            resourceInputs["httpsCookieSecure"] = args ? args.httpsCookieSecure : undefined;
            resourceInputs["ipv4Mappedip"] = args ? args.ipv4Mappedip : undefined;
            resourceInputs["ipv4Mappedport"] = args ? args.ipv4Mappedport : undefined;
            resourceInputs["ldbMethod"] = args ? args.ldbMethod : undefined;
            resourceInputs["mappedips"] = args ? args.mappedips : undefined;
            resourceInputs["mappedport"] = args ? args.mappedport : undefined;
            resourceInputs["maxEmbryonicConnections"] = args ? args.maxEmbryonicConnections : undefined;
            resourceInputs["monitor"] = args ? args.monitor : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nat64"] = args ? args.nat64 : undefined;
            resourceInputs["nat66"] = args ? args.nat66 : undefined;
            resourceInputs["natSourceVip"] = args ? args.natSourceVip : undefined;
            resourceInputs["ndpReply"] = args ? args.ndpReply : undefined;
            resourceInputs["outlookWebAccess"] = args ? args.outlookWebAccess : undefined;
            resourceInputs["persistence"] = args ? args.persistence : undefined;
            resourceInputs["portforward"] = args ? args.portforward : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["quic"] = args ? args.quic : undefined;
            resourceInputs["realservers"] = args ? args.realservers : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["serverType"] = args ? args.serverType : undefined;
            resourceInputs["srcFilters"] = args ? args.srcFilters : undefined;
            resourceInputs["srcVipFilter"] = args ? args.srcVipFilter : undefined;
            resourceInputs["sslAcceptFfdheGroups"] = args ? args.sslAcceptFfdheGroups : undefined;
            resourceInputs["sslAlgorithm"] = args ? args.sslAlgorithm : undefined;
            resourceInputs["sslCertificate"] = args ? args.sslCertificate : undefined;
            resourceInputs["sslCipherSuites"] = args ? args.sslCipherSuites : undefined;
            resourceInputs["sslClientFallback"] = args ? args.sslClientFallback : undefined;
            resourceInputs["sslClientRekeyCount"] = args ? args.sslClientRekeyCount : undefined;
            resourceInputs["sslClientRenegotiation"] = args ? args.sslClientRenegotiation : undefined;
            resourceInputs["sslClientSessionStateMax"] = args ? args.sslClientSessionStateMax : undefined;
            resourceInputs["sslClientSessionStateTimeout"] = args ? args.sslClientSessionStateTimeout : undefined;
            resourceInputs["sslClientSessionStateType"] = args ? args.sslClientSessionStateType : undefined;
            resourceInputs["sslDhBits"] = args ? args.sslDhBits : undefined;
            resourceInputs["sslHpkp"] = args ? args.sslHpkp : undefined;
            resourceInputs["sslHpkpAge"] = args ? args.sslHpkpAge : undefined;
            resourceInputs["sslHpkpBackup"] = args ? args.sslHpkpBackup : undefined;
            resourceInputs["sslHpkpIncludeSubdomains"] = args ? args.sslHpkpIncludeSubdomains : undefined;
            resourceInputs["sslHpkpPrimary"] = args ? args.sslHpkpPrimary : undefined;
            resourceInputs["sslHpkpReportUri"] = args ? args.sslHpkpReportUri : undefined;
            resourceInputs["sslHsts"] = args ? args.sslHsts : undefined;
            resourceInputs["sslHstsAge"] = args ? args.sslHstsAge : undefined;
            resourceInputs["sslHstsIncludeSubdomains"] = args ? args.sslHstsIncludeSubdomains : undefined;
            resourceInputs["sslHttpLocationConversion"] = args ? args.sslHttpLocationConversion : undefined;
            resourceInputs["sslHttpMatchHost"] = args ? args.sslHttpMatchHost : undefined;
            resourceInputs["sslMaxVersion"] = args ? args.sslMaxVersion : undefined;
            resourceInputs["sslMinVersion"] = args ? args.sslMinVersion : undefined;
            resourceInputs["sslMode"] = args ? args.sslMode : undefined;
            resourceInputs["sslPfs"] = args ? args.sslPfs : undefined;
            resourceInputs["sslSendEmptyFrags"] = args ? args.sslSendEmptyFrags : undefined;
            resourceInputs["sslServerAlgorithm"] = args ? args.sslServerAlgorithm : undefined;
            resourceInputs["sslServerCipherSuites"] = args ? args.sslServerCipherSuites : undefined;
            resourceInputs["sslServerMaxVersion"] = args ? args.sslServerMaxVersion : undefined;
            resourceInputs["sslServerMinVersion"] = args ? args.sslServerMinVersion : undefined;
            resourceInputs["sslServerRenegotiation"] = args ? args.sslServerRenegotiation : undefined;
            resourceInputs["sslServerSessionStateMax"] = args ? args.sslServerSessionStateMax : undefined;
            resourceInputs["sslServerSessionStateTimeout"] = args ? args.sslServerSessionStateTimeout : undefined;
            resourceInputs["sslServerSessionStateType"] = args ? args.sslServerSessionStateType : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["weblogicServer"] = args ? args.weblogicServer : undefined;
            resourceInputs["websphereServer"] = args ? args.websphereServer : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallVip6.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallVip6 resources.
 */
export interface ObjectFirewallVip6State {
    addNat64Route?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    arpReply?: pulumi.Input<string>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6DynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    embeddedIpv4Address?: pulumi.Input<string>;
    extip?: pulumi.Input<string>;
    extport?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    h2Support?: pulumi.Input<string>;
    h3Support?: pulumi.Input<string>;
    httpCookieAge?: pulumi.Input<number>;
    httpCookieDomain?: pulumi.Input<string>;
    httpCookieDomainFromHost?: pulumi.Input<string>;
    httpCookieGeneration?: pulumi.Input<number>;
    httpCookiePath?: pulumi.Input<string>;
    httpCookieShare?: pulumi.Input<string>;
    httpIpHeader?: pulumi.Input<string>;
    httpIpHeaderName?: pulumi.Input<string>;
    httpMultiplex?: pulumi.Input<string>;
    httpRedirect?: pulumi.Input<string>;
    httpsCookieSecure?: pulumi.Input<string>;
    ipv4Mappedip?: pulumi.Input<string>;
    ipv4Mappedport?: pulumi.Input<string>;
    ldbMethod?: pulumi.Input<string>;
    mappedips?: pulumi.Input<pulumi.Input<string>[]>;
    mappedport?: pulumi.Input<string>;
    maxEmbryonicConnections?: pulumi.Input<number>;
    monitor?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nat64?: pulumi.Input<string>;
    nat66?: pulumi.Input<string>;
    natSourceVip?: pulumi.Input<string>;
    ndpReply?: pulumi.Input<string>;
    outlookWebAccess?: pulumi.Input<string>;
    persistence?: pulumi.Input<string>;
    portforward?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    quic?: pulumi.Input<inputs.ObjectFirewallVip6Quic>;
    realservers?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6Realserver>[]>;
    scopetype?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    srcFilters?: pulumi.Input<pulumi.Input<string>[]>;
    srcVipFilter?: pulumi.Input<string>;
    sslAcceptFfdheGroups?: pulumi.Input<string>;
    sslAlgorithm?: pulumi.Input<string>;
    sslCertificate?: pulumi.Input<string>;
    sslCipherSuites?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6SslCipherSuite>[]>;
    sslClientFallback?: pulumi.Input<string>;
    sslClientRekeyCount?: pulumi.Input<number>;
    sslClientRenegotiation?: pulumi.Input<string>;
    sslClientSessionStateMax?: pulumi.Input<number>;
    sslClientSessionStateTimeout?: pulumi.Input<number>;
    sslClientSessionStateType?: pulumi.Input<string>;
    sslDhBits?: pulumi.Input<string>;
    sslHpkp?: pulumi.Input<string>;
    sslHpkpAge?: pulumi.Input<number>;
    sslHpkpBackup?: pulumi.Input<string>;
    sslHpkpIncludeSubdomains?: pulumi.Input<string>;
    sslHpkpPrimary?: pulumi.Input<string>;
    sslHpkpReportUri?: pulumi.Input<string>;
    sslHsts?: pulumi.Input<string>;
    sslHstsAge?: pulumi.Input<number>;
    sslHstsIncludeSubdomains?: pulumi.Input<string>;
    sslHttpLocationConversion?: pulumi.Input<string>;
    sslHttpMatchHost?: pulumi.Input<string>;
    sslMaxVersion?: pulumi.Input<string>;
    sslMinVersion?: pulumi.Input<string>;
    sslMode?: pulumi.Input<string>;
    sslPfs?: pulumi.Input<string>;
    sslSendEmptyFrags?: pulumi.Input<string>;
    sslServerAlgorithm?: pulumi.Input<string>;
    sslServerCipherSuites?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6SslServerCipherSuite>[]>;
    sslServerMaxVersion?: pulumi.Input<string>;
    sslServerMinVersion?: pulumi.Input<string>;
    sslServerRenegotiation?: pulumi.Input<string>;
    sslServerSessionStateMax?: pulumi.Input<number>;
    sslServerSessionStateTimeout?: pulumi.Input<number>;
    sslServerSessionStateType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    weblogicServer?: pulumi.Input<string>;
    websphereServer?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFirewallVip6 resource.
 */
export interface ObjectFirewallVip6Args {
    addNat64Route?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    arpReply?: pulumi.Input<string>;
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6DynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    embeddedIpv4Address?: pulumi.Input<string>;
    extip?: pulumi.Input<string>;
    extport?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    h2Support?: pulumi.Input<string>;
    h3Support?: pulumi.Input<string>;
    httpCookieAge?: pulumi.Input<number>;
    httpCookieDomain?: pulumi.Input<string>;
    httpCookieDomainFromHost?: pulumi.Input<string>;
    httpCookieGeneration?: pulumi.Input<number>;
    httpCookiePath?: pulumi.Input<string>;
    httpCookieShare?: pulumi.Input<string>;
    httpIpHeader?: pulumi.Input<string>;
    httpIpHeaderName?: pulumi.Input<string>;
    httpMultiplex?: pulumi.Input<string>;
    httpRedirect?: pulumi.Input<string>;
    httpsCookieSecure?: pulumi.Input<string>;
    ipv4Mappedip?: pulumi.Input<string>;
    ipv4Mappedport?: pulumi.Input<string>;
    ldbMethod?: pulumi.Input<string>;
    mappedips?: pulumi.Input<pulumi.Input<string>[]>;
    mappedport?: pulumi.Input<string>;
    maxEmbryonicConnections?: pulumi.Input<number>;
    monitor?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nat64?: pulumi.Input<string>;
    nat66?: pulumi.Input<string>;
    natSourceVip?: pulumi.Input<string>;
    ndpReply?: pulumi.Input<string>;
    outlookWebAccess?: pulumi.Input<string>;
    persistence?: pulumi.Input<string>;
    portforward?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    quic?: pulumi.Input<inputs.ObjectFirewallVip6Quic>;
    realservers?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6Realserver>[]>;
    scopetype?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    srcFilters?: pulumi.Input<pulumi.Input<string>[]>;
    srcVipFilter?: pulumi.Input<string>;
    sslAcceptFfdheGroups?: pulumi.Input<string>;
    sslAlgorithm?: pulumi.Input<string>;
    sslCertificate?: pulumi.Input<string>;
    sslCipherSuites?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6SslCipherSuite>[]>;
    sslClientFallback?: pulumi.Input<string>;
    sslClientRekeyCount?: pulumi.Input<number>;
    sslClientRenegotiation?: pulumi.Input<string>;
    sslClientSessionStateMax?: pulumi.Input<number>;
    sslClientSessionStateTimeout?: pulumi.Input<number>;
    sslClientSessionStateType?: pulumi.Input<string>;
    sslDhBits?: pulumi.Input<string>;
    sslHpkp?: pulumi.Input<string>;
    sslHpkpAge?: pulumi.Input<number>;
    sslHpkpBackup?: pulumi.Input<string>;
    sslHpkpIncludeSubdomains?: pulumi.Input<string>;
    sslHpkpPrimary?: pulumi.Input<string>;
    sslHpkpReportUri?: pulumi.Input<string>;
    sslHsts?: pulumi.Input<string>;
    sslHstsAge?: pulumi.Input<number>;
    sslHstsIncludeSubdomains?: pulumi.Input<string>;
    sslHttpLocationConversion?: pulumi.Input<string>;
    sslHttpMatchHost?: pulumi.Input<string>;
    sslMaxVersion?: pulumi.Input<string>;
    sslMinVersion?: pulumi.Input<string>;
    sslMode?: pulumi.Input<string>;
    sslPfs?: pulumi.Input<string>;
    sslSendEmptyFrags?: pulumi.Input<string>;
    sslServerAlgorithm?: pulumi.Input<string>;
    sslServerCipherSuites?: pulumi.Input<pulumi.Input<inputs.ObjectFirewallVip6SslServerCipherSuite>[]>;
    sslServerMaxVersion?: pulumi.Input<string>;
    sslServerMinVersion?: pulumi.Input<string>;
    sslServerRenegotiation?: pulumi.Input<string>;
    sslServerSessionStateMax?: pulumi.Input<number>;
    sslServerSessionStateTimeout?: pulumi.Input<number>;
    sslServerSessionStateType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    weblogicServer?: pulumi.Input<string>;
    websphereServer?: pulumi.Input<string>;
}
