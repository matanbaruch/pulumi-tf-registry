// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PackagesGlobalFooterShapingpolicy extends pulumi.CustomResource {
    /**
     * Get an existing PackagesGlobalFooterShapingpolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PackagesGlobalFooterShapingpolicyState, opts?: pulumi.CustomResourceOptions): PackagesGlobalFooterShapingpolicy {
        return new PackagesGlobalFooterShapingpolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/packagesGlobalFooterShapingpolicy:PackagesGlobalFooterShapingpolicy';

    /**
     * Returns true if the given object is an instance of PackagesGlobalFooterShapingpolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PackagesGlobalFooterShapingpolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PackagesGlobalFooterShapingpolicy.__pulumiType;
    }

    public readonly appCategory!: pulumi.Output<string | undefined>;
    public readonly appGroup!: pulumi.Output<string | undefined>;
    public readonly applications!: pulumi.Output<number[]>;
    public readonly classId!: pulumi.Output<string>;
    public readonly classIdReverse!: pulumi.Output<number | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly cos!: pulumi.Output<string>;
    public readonly cosMask!: pulumi.Output<string>;
    public readonly diffservForward!: pulumi.Output<string>;
    public readonly diffservReverse!: pulumi.Output<string>;
    public readonly diffservcodeForward!: pulumi.Output<string | undefined>;
    public readonly diffservcodeRev!: pulumi.Output<string | undefined>;
    public readonly dstaddr!: pulumi.Output<string | undefined>;
    public readonly dstaddr6!: pulumi.Output<string | undefined>;
    public readonly dstintf!: pulumi.Output<string | undefined>;
    public readonly fosid!: pulumi.Output<number>;
    public readonly groups!: pulumi.Output<string | undefined>;
    public readonly internetService!: pulumi.Output<string>;
    public readonly internetServiceCustom!: pulumi.Output<string | undefined>;
    public readonly internetServiceCustomGroup!: pulumi.Output<string | undefined>;
    public readonly internetServiceGroup!: pulumi.Output<string | undefined>;
    public readonly internetServiceId!: pulumi.Output<string | undefined>;
    public readonly internetServiceName!: pulumi.Output<string | undefined>;
    public readonly internetServiceSrc!: pulumi.Output<string>;
    public readonly internetServiceSrcCustom!: pulumi.Output<string | undefined>;
    public readonly internetServiceSrcCustomGroup!: pulumi.Output<string | undefined>;
    public readonly internetServiceSrcGroup!: pulumi.Output<string | undefined>;
    public readonly internetServiceSrcId!: pulumi.Output<string | undefined>;
    public readonly internetServiceSrcName!: pulumi.Output<string | undefined>;
    public readonly ipVersion!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly perIpShaper!: pulumi.Output<string | undefined>;
    public readonly pkg!: pulumi.Output<string>;
    public readonly pkgFolderPath!: pulumi.Output<string | undefined>;
    public readonly schedule!: pulumi.Output<string | undefined>;
    public readonly service!: pulumi.Output<string | undefined>;
    public readonly serviceType!: pulumi.Output<string | undefined>;
    public readonly srcaddr!: pulumi.Output<string | undefined>;
    public readonly srcaddr6!: pulumi.Output<string | undefined>;
    public readonly srcintf!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly tos!: pulumi.Output<string>;
    public readonly tosMask!: pulumi.Output<string>;
    public readonly tosNegate!: pulumi.Output<string>;
    public readonly trafficShaper!: pulumi.Output<string | undefined>;
    public readonly trafficShaperReverse!: pulumi.Output<string | undefined>;
    public readonly trafficType!: pulumi.Output<string>;
    public readonly urlCategory!: pulumi.Output<string | undefined>;
    public readonly users!: pulumi.Output<string | undefined>;
    public readonly uuid!: pulumi.Output<string>;
    public readonly uuidIdx!: pulumi.Output<number | undefined>;

    /**
     * Create a PackagesGlobalFooterShapingpolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PackagesGlobalFooterShapingpolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PackagesGlobalFooterShapingpolicyArgs | PackagesGlobalFooterShapingpolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PackagesGlobalFooterShapingpolicyState | undefined;
            resourceInputs["appCategory"] = state ? state.appCategory : undefined;
            resourceInputs["appGroup"] = state ? state.appGroup : undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["classIdReverse"] = state ? state.classIdReverse : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["cos"] = state ? state.cos : undefined;
            resourceInputs["cosMask"] = state ? state.cosMask : undefined;
            resourceInputs["diffservForward"] = state ? state.diffservForward : undefined;
            resourceInputs["diffservReverse"] = state ? state.diffservReverse : undefined;
            resourceInputs["diffservcodeForward"] = state ? state.diffservcodeForward : undefined;
            resourceInputs["diffservcodeRev"] = state ? state.diffservcodeRev : undefined;
            resourceInputs["dstaddr"] = state ? state.dstaddr : undefined;
            resourceInputs["dstaddr6"] = state ? state.dstaddr6 : undefined;
            resourceInputs["dstintf"] = state ? state.dstintf : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["internetService"] = state ? state.internetService : undefined;
            resourceInputs["internetServiceCustom"] = state ? state.internetServiceCustom : undefined;
            resourceInputs["internetServiceCustomGroup"] = state ? state.internetServiceCustomGroup : undefined;
            resourceInputs["internetServiceGroup"] = state ? state.internetServiceGroup : undefined;
            resourceInputs["internetServiceId"] = state ? state.internetServiceId : undefined;
            resourceInputs["internetServiceName"] = state ? state.internetServiceName : undefined;
            resourceInputs["internetServiceSrc"] = state ? state.internetServiceSrc : undefined;
            resourceInputs["internetServiceSrcCustom"] = state ? state.internetServiceSrcCustom : undefined;
            resourceInputs["internetServiceSrcCustomGroup"] = state ? state.internetServiceSrcCustomGroup : undefined;
            resourceInputs["internetServiceSrcGroup"] = state ? state.internetServiceSrcGroup : undefined;
            resourceInputs["internetServiceSrcId"] = state ? state.internetServiceSrcId : undefined;
            resourceInputs["internetServiceSrcName"] = state ? state.internetServiceSrcName : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["perIpShaper"] = state ? state.perIpShaper : undefined;
            resourceInputs["pkg"] = state ? state.pkg : undefined;
            resourceInputs["pkgFolderPath"] = state ? state.pkgFolderPath : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["serviceType"] = state ? state.serviceType : undefined;
            resourceInputs["srcaddr"] = state ? state.srcaddr : undefined;
            resourceInputs["srcaddr6"] = state ? state.srcaddr6 : undefined;
            resourceInputs["srcintf"] = state ? state.srcintf : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tos"] = state ? state.tos : undefined;
            resourceInputs["tosMask"] = state ? state.tosMask : undefined;
            resourceInputs["tosNegate"] = state ? state.tosNegate : undefined;
            resourceInputs["trafficShaper"] = state ? state.trafficShaper : undefined;
            resourceInputs["trafficShaperReverse"] = state ? state.trafficShaperReverse : undefined;
            resourceInputs["trafficType"] = state ? state.trafficType : undefined;
            resourceInputs["urlCategory"] = state ? state.urlCategory : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["uuidIdx"] = state ? state.uuidIdx : undefined;
        } else {
            const args = argsOrState as PackagesGlobalFooterShapingpolicyArgs | undefined;
            if ((!args || args.pkg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pkg'");
            }
            resourceInputs["appCategory"] = args ? args.appCategory : undefined;
            resourceInputs["appGroup"] = args ? args.appGroup : undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["classIdReverse"] = args ? args.classIdReverse : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["cos"] = args ? args.cos : undefined;
            resourceInputs["cosMask"] = args ? args.cosMask : undefined;
            resourceInputs["diffservForward"] = args ? args.diffservForward : undefined;
            resourceInputs["diffservReverse"] = args ? args.diffservReverse : undefined;
            resourceInputs["diffservcodeForward"] = args ? args.diffservcodeForward : undefined;
            resourceInputs["diffservcodeRev"] = args ? args.diffservcodeRev : undefined;
            resourceInputs["dstaddr"] = args ? args.dstaddr : undefined;
            resourceInputs["dstaddr6"] = args ? args.dstaddr6 : undefined;
            resourceInputs["dstintf"] = args ? args.dstintf : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["internetService"] = args ? args.internetService : undefined;
            resourceInputs["internetServiceCustom"] = args ? args.internetServiceCustom : undefined;
            resourceInputs["internetServiceCustomGroup"] = args ? args.internetServiceCustomGroup : undefined;
            resourceInputs["internetServiceGroup"] = args ? args.internetServiceGroup : undefined;
            resourceInputs["internetServiceId"] = args ? args.internetServiceId : undefined;
            resourceInputs["internetServiceName"] = args ? args.internetServiceName : undefined;
            resourceInputs["internetServiceSrc"] = args ? args.internetServiceSrc : undefined;
            resourceInputs["internetServiceSrcCustom"] = args ? args.internetServiceSrcCustom : undefined;
            resourceInputs["internetServiceSrcCustomGroup"] = args ? args.internetServiceSrcCustomGroup : undefined;
            resourceInputs["internetServiceSrcGroup"] = args ? args.internetServiceSrcGroup : undefined;
            resourceInputs["internetServiceSrcId"] = args ? args.internetServiceSrcId : undefined;
            resourceInputs["internetServiceSrcName"] = args ? args.internetServiceSrcName : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["perIpShaper"] = args ? args.perIpShaper : undefined;
            resourceInputs["pkg"] = args ? args.pkg : undefined;
            resourceInputs["pkgFolderPath"] = args ? args.pkgFolderPath : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["serviceType"] = args ? args.serviceType : undefined;
            resourceInputs["srcaddr"] = args ? args.srcaddr : undefined;
            resourceInputs["srcaddr6"] = args ? args.srcaddr6 : undefined;
            resourceInputs["srcintf"] = args ? args.srcintf : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tos"] = args ? args.tos : undefined;
            resourceInputs["tosMask"] = args ? args.tosMask : undefined;
            resourceInputs["tosNegate"] = args ? args.tosNegate : undefined;
            resourceInputs["trafficShaper"] = args ? args.trafficShaper : undefined;
            resourceInputs["trafficShaperReverse"] = args ? args.trafficShaperReverse : undefined;
            resourceInputs["trafficType"] = args ? args.trafficType : undefined;
            resourceInputs["urlCategory"] = args ? args.urlCategory : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["uuidIdx"] = args ? args.uuidIdx : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PackagesGlobalFooterShapingpolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PackagesGlobalFooterShapingpolicy resources.
 */
export interface PackagesGlobalFooterShapingpolicyState {
    appCategory?: pulumi.Input<string>;
    appGroup?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<number>[]>;
    classId?: pulumi.Input<string>;
    classIdReverse?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    cos?: pulumi.Input<string>;
    cosMask?: pulumi.Input<string>;
    diffservForward?: pulumi.Input<string>;
    diffservReverse?: pulumi.Input<string>;
    diffservcodeForward?: pulumi.Input<string>;
    diffservcodeRev?: pulumi.Input<string>;
    dstaddr?: pulumi.Input<string>;
    dstaddr6?: pulumi.Input<string>;
    dstintf?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    groups?: pulumi.Input<string>;
    internetService?: pulumi.Input<string>;
    internetServiceCustom?: pulumi.Input<string>;
    internetServiceCustomGroup?: pulumi.Input<string>;
    internetServiceGroup?: pulumi.Input<string>;
    internetServiceId?: pulumi.Input<string>;
    internetServiceName?: pulumi.Input<string>;
    internetServiceSrc?: pulumi.Input<string>;
    internetServiceSrcCustom?: pulumi.Input<string>;
    internetServiceSrcCustomGroup?: pulumi.Input<string>;
    internetServiceSrcGroup?: pulumi.Input<string>;
    internetServiceSrcId?: pulumi.Input<string>;
    internetServiceSrcName?: pulumi.Input<string>;
    ipVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    perIpShaper?: pulumi.Input<string>;
    pkg?: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    srcaddr?: pulumi.Input<string>;
    srcaddr6?: pulumi.Input<string>;
    srcintf?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tos?: pulumi.Input<string>;
    tosMask?: pulumi.Input<string>;
    tosNegate?: pulumi.Input<string>;
    trafficShaper?: pulumi.Input<string>;
    trafficShaperReverse?: pulumi.Input<string>;
    trafficType?: pulumi.Input<string>;
    urlCategory?: pulumi.Input<string>;
    users?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    uuidIdx?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PackagesGlobalFooterShapingpolicy resource.
 */
export interface PackagesGlobalFooterShapingpolicyArgs {
    appCategory?: pulumi.Input<string>;
    appGroup?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<number>[]>;
    classId?: pulumi.Input<string>;
    classIdReverse?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    cos?: pulumi.Input<string>;
    cosMask?: pulumi.Input<string>;
    diffservForward?: pulumi.Input<string>;
    diffservReverse?: pulumi.Input<string>;
    diffservcodeForward?: pulumi.Input<string>;
    diffservcodeRev?: pulumi.Input<string>;
    dstaddr?: pulumi.Input<string>;
    dstaddr6?: pulumi.Input<string>;
    dstintf?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    groups?: pulumi.Input<string>;
    internetService?: pulumi.Input<string>;
    internetServiceCustom?: pulumi.Input<string>;
    internetServiceCustomGroup?: pulumi.Input<string>;
    internetServiceGroup?: pulumi.Input<string>;
    internetServiceId?: pulumi.Input<string>;
    internetServiceName?: pulumi.Input<string>;
    internetServiceSrc?: pulumi.Input<string>;
    internetServiceSrcCustom?: pulumi.Input<string>;
    internetServiceSrcCustomGroup?: pulumi.Input<string>;
    internetServiceSrcGroup?: pulumi.Input<string>;
    internetServiceSrcId?: pulumi.Input<string>;
    internetServiceSrcName?: pulumi.Input<string>;
    ipVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    perIpShaper?: pulumi.Input<string>;
    pkg: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
    srcaddr?: pulumi.Input<string>;
    srcaddr6?: pulumi.Input<string>;
    srcintf?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tos?: pulumi.Input<string>;
    tosMask?: pulumi.Input<string>;
    tosNegate?: pulumi.Input<string>;
    trafficShaper?: pulumi.Input<string>;
    trafficShaperReverse?: pulumi.Input<string>;
    trafficType?: pulumi.Input<string>;
    urlCategory?: pulumi.Input<string>;
    users?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    uuidIdx?: pulumi.Input<number>;
}
