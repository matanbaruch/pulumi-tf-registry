// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemAdminLdap extends pulumi.CustomResource {
    /**
     * Get an existing SystemAdminLdap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAdminLdapState, opts?: pulumi.CustomResourceOptions): SystemAdminLdap {
        return new SystemAdminLdap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/systemAdminLdap:SystemAdminLdap';

    /**
     * Returns true if the given object is an instance of SystemAdminLdap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAdminLdap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAdminLdap.__pulumiType;
    }

    public readonly adomAccess!: pulumi.Output<string>;
    public readonly adomAttr!: pulumi.Output<string | undefined>;
    public readonly attributes!: pulumi.Output<string>;
    public readonly caCert!: pulumi.Output<string | undefined>;
    public readonly cnid!: pulumi.Output<string>;
    public readonly connectTimeout!: pulumi.Output<number>;
    public readonly dn!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly filter!: pulumi.Output<string>;
    public readonly fmgadoms!: pulumi.Output<outputs.SystemAdminLdapFmgadom[] | undefined>;
    public readonly group!: pulumi.Output<string | undefined>;
    public readonly memberofAttr!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly port!: pulumi.Output<number>;
    public readonly profileAttr!: pulumi.Output<string | undefined>;
    public readonly secondaryServer!: pulumi.Output<string | undefined>;
    public readonly secure!: pulumi.Output<string>;
    public readonly server!: pulumi.Output<string | undefined>;
    public readonly tertiaryServer!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemAdminLdap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAdminLdapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAdminLdapArgs | SystemAdminLdapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAdminLdapState | undefined;
            resourceInputs["adomAccess"] = state ? state.adomAccess : undefined;
            resourceInputs["adomAttr"] = state ? state.adomAttr : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["caCert"] = state ? state.caCert : undefined;
            resourceInputs["cnid"] = state ? state.cnid : undefined;
            resourceInputs["connectTimeout"] = state ? state.connectTimeout : undefined;
            resourceInputs["dn"] = state ? state.dn : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["fmgadoms"] = state ? state.fmgadoms : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["memberofAttr"] = state ? state.memberofAttr : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["profileAttr"] = state ? state.profileAttr : undefined;
            resourceInputs["secondaryServer"] = state ? state.secondaryServer : undefined;
            resourceInputs["secure"] = state ? state.secure : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["tertiaryServer"] = state ? state.tertiaryServer : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as SystemAdminLdapArgs | undefined;
            resourceInputs["adomAccess"] = args ? args.adomAccess : undefined;
            resourceInputs["adomAttr"] = args ? args.adomAttr : undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["caCert"] = args ? args.caCert : undefined;
            resourceInputs["cnid"] = args ? args.cnid : undefined;
            resourceInputs["connectTimeout"] = args ? args.connectTimeout : undefined;
            resourceInputs["dn"] = args ? args.dn : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["fmgadoms"] = args ? args.fmgadoms : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["memberofAttr"] = args ? args.memberofAttr : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["profileAttr"] = args ? args.profileAttr : undefined;
            resourceInputs["secondaryServer"] = args ? args.secondaryServer : undefined;
            resourceInputs["secure"] = args ? args.secure : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["tertiaryServer"] = args ? args.tertiaryServer : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemAdminLdap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemAdminLdap resources.
 */
export interface SystemAdminLdapState {
    adomAccess?: pulumi.Input<string>;
    adomAttr?: pulumi.Input<string>;
    attributes?: pulumi.Input<string>;
    caCert?: pulumi.Input<string>;
    cnid?: pulumi.Input<string>;
    connectTimeout?: pulumi.Input<number>;
    dn?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    fmgadoms?: pulumi.Input<pulumi.Input<inputs.SystemAdminLdapFmgadom>[]>;
    group?: pulumi.Input<string>;
    memberofAttr?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    profileAttr?: pulumi.Input<string>;
    secondaryServer?: pulumi.Input<string>;
    secure?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    tertiaryServer?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemAdminLdap resource.
 */
export interface SystemAdminLdapArgs {
    adomAccess?: pulumi.Input<string>;
    adomAttr?: pulumi.Input<string>;
    attributes?: pulumi.Input<string>;
    caCert?: pulumi.Input<string>;
    cnid?: pulumi.Input<string>;
    connectTimeout?: pulumi.Input<number>;
    dn?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    fmgadoms?: pulumi.Input<pulumi.Input<inputs.SystemAdminLdapFmgadom>[]>;
    group?: pulumi.Input<string>;
    memberofAttr?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    profileAttr?: pulumi.Input<string>;
    secondaryServer?: pulumi.Input<string>;
    secure?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    tertiaryServer?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
