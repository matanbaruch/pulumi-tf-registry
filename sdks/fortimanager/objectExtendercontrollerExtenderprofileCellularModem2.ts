// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectExtendercontrollerExtenderprofileCellularModem2 extends pulumi.CustomResource {
    /**
     * Get an existing ObjectExtendercontrollerExtenderprofileCellularModem2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectExtendercontrollerExtenderprofileCellularModem2State, opts?: pulumi.CustomResourceOptions): ObjectExtendercontrollerExtenderprofileCellularModem2 {
        return new ObjectExtendercontrollerExtenderprofileCellularModem2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectExtendercontrollerExtenderprofileCellularModem2:ObjectExtendercontrollerExtenderprofileCellularModem2';

    /**
     * Returns true if the given object is an instance of ObjectExtendercontrollerExtenderprofileCellularModem2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectExtendercontrollerExtenderprofileCellularModem2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectExtendercontrollerExtenderprofileCellularModem2.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly autoSwitch!: pulumi.Output<outputs.ObjectExtendercontrollerExtenderprofileCellularModem2AutoSwitch | undefined>;
    public readonly connStatus!: pulumi.Output<number | undefined>;
    public readonly defaultSim!: pulumi.Output<string>;
    public readonly extenderProfile!: pulumi.Output<string>;
    public readonly gps!: pulumi.Output<string>;
    public readonly modemId!: pulumi.Output<number>;
    public readonly preferredCarrier!: pulumi.Output<string | undefined>;
    public readonly redundantIntf!: pulumi.Output<string | undefined>;
    public readonly redundantMode!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sim1Pin!: pulumi.Output<string>;
    public readonly sim1PinCodes!: pulumi.Output<string[]>;
    public readonly sim2Pin!: pulumi.Output<string>;
    public readonly sim2PinCodes!: pulumi.Output<string[]>;

    /**
     * Create a ObjectExtendercontrollerExtenderprofileCellularModem2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectExtendercontrollerExtenderprofileCellularModem2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectExtendercontrollerExtenderprofileCellularModem2Args | ObjectExtendercontrollerExtenderprofileCellularModem2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectExtendercontrollerExtenderprofileCellularModem2State | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["autoSwitch"] = state ? state.autoSwitch : undefined;
            resourceInputs["connStatus"] = state ? state.connStatus : undefined;
            resourceInputs["defaultSim"] = state ? state.defaultSim : undefined;
            resourceInputs["extenderProfile"] = state ? state.extenderProfile : undefined;
            resourceInputs["gps"] = state ? state.gps : undefined;
            resourceInputs["modemId"] = state ? state.modemId : undefined;
            resourceInputs["preferredCarrier"] = state ? state.preferredCarrier : undefined;
            resourceInputs["redundantIntf"] = state ? state.redundantIntf : undefined;
            resourceInputs["redundantMode"] = state ? state.redundantMode : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sim1Pin"] = state ? state.sim1Pin : undefined;
            resourceInputs["sim1PinCodes"] = state ? state.sim1PinCodes : undefined;
            resourceInputs["sim2Pin"] = state ? state.sim2Pin : undefined;
            resourceInputs["sim2PinCodes"] = state ? state.sim2PinCodes : undefined;
        } else {
            const args = argsOrState as ObjectExtendercontrollerExtenderprofileCellularModem2Args | undefined;
            if ((!args || args.extenderProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'extenderProfile'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["autoSwitch"] = args ? args.autoSwitch : undefined;
            resourceInputs["connStatus"] = args ? args.connStatus : undefined;
            resourceInputs["defaultSim"] = args ? args.defaultSim : undefined;
            resourceInputs["extenderProfile"] = args ? args.extenderProfile : undefined;
            resourceInputs["gps"] = args ? args.gps : undefined;
            resourceInputs["modemId"] = args ? args.modemId : undefined;
            resourceInputs["preferredCarrier"] = args ? args.preferredCarrier : undefined;
            resourceInputs["redundantIntf"] = args ? args.redundantIntf : undefined;
            resourceInputs["redundantMode"] = args ? args.redundantMode : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sim1Pin"] = args ? args.sim1Pin : undefined;
            resourceInputs["sim1PinCodes"] = args?.sim1PinCodes ? pulumi.secret(args.sim1PinCodes) : undefined;
            resourceInputs["sim2Pin"] = args ? args.sim2Pin : undefined;
            resourceInputs["sim2PinCodes"] = args?.sim2PinCodes ? pulumi.secret(args.sim2PinCodes) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["sim1PinCodes", "sim2PinCodes"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectExtendercontrollerExtenderprofileCellularModem2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectExtendercontrollerExtenderprofileCellularModem2 resources.
 */
export interface ObjectExtendercontrollerExtenderprofileCellularModem2State {
    adom?: pulumi.Input<string>;
    autoSwitch?: pulumi.Input<inputs.ObjectExtendercontrollerExtenderprofileCellularModem2AutoSwitch>;
    connStatus?: pulumi.Input<number>;
    defaultSim?: pulumi.Input<string>;
    extenderProfile?: pulumi.Input<string>;
    gps?: pulumi.Input<string>;
    modemId?: pulumi.Input<number>;
    preferredCarrier?: pulumi.Input<string>;
    redundantIntf?: pulumi.Input<string>;
    redundantMode?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sim1Pin?: pulumi.Input<string>;
    sim1PinCodes?: pulumi.Input<pulumi.Input<string>[]>;
    sim2Pin?: pulumi.Input<string>;
    sim2PinCodes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ObjectExtendercontrollerExtenderprofileCellularModem2 resource.
 */
export interface ObjectExtendercontrollerExtenderprofileCellularModem2Args {
    adom?: pulumi.Input<string>;
    autoSwitch?: pulumi.Input<inputs.ObjectExtendercontrollerExtenderprofileCellularModem2AutoSwitch>;
    connStatus?: pulumi.Input<number>;
    defaultSim?: pulumi.Input<string>;
    extenderProfile: pulumi.Input<string>;
    gps?: pulumi.Input<string>;
    modemId?: pulumi.Input<number>;
    preferredCarrier?: pulumi.Input<string>;
    redundantIntf?: pulumi.Input<string>;
    redundantMode?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sim1Pin?: pulumi.Input<string>;
    sim1PinCodes?: pulumi.Input<pulumi.Input<string>[]>;
    sim2Pin?: pulumi.Input<string>;
    sim2PinCodes?: pulumi.Input<pulumi.Input<string>[]>;
}
