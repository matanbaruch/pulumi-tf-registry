// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectFirewallSslsshprofileSslexempt extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallSslsshprofileSslexempt resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallSslsshprofileSslexemptState, opts?: pulumi.CustomResourceOptions): ObjectFirewallSslsshprofileSslexempt {
        return new ObjectFirewallSslsshprofileSslexempt(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallSslsshprofileSslexempt:ObjectFirewallSslsshprofileSslexempt';

    /**
     * Returns true if the given object is an instance of ObjectFirewallSslsshprofileSslexempt.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallSslsshprofileSslexempt {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallSslsshprofileSslexempt.__pulumiType;
    }

    public readonly address!: pulumi.Output<string | undefined>;
    public readonly address6!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly fortiguardCategories!: pulumi.Output<string[]>;
    public readonly fosid!: pulumi.Output<number>;
    public readonly regex!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sslSshProfile!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly wildcardFqdns!: pulumi.Output<string[]>;

    /**
     * Create a ObjectFirewallSslsshprofileSslexempt resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectFirewallSslsshprofileSslexemptArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallSslsshprofileSslexemptArgs | ObjectFirewallSslsshprofileSslexemptState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallSslsshprofileSslexemptState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["address6"] = state ? state.address6 : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["fortiguardCategories"] = state ? state.fortiguardCategories : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["regex"] = state ? state.regex : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sslSshProfile"] = state ? state.sslSshProfile : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["wildcardFqdns"] = state ? state.wildcardFqdns : undefined;
        } else {
            const args = argsOrState as ObjectFirewallSslsshprofileSslexemptArgs | undefined;
            if ((!args || args.sslSshProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sslSshProfile'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["address6"] = args ? args.address6 : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["fortiguardCategories"] = args ? args.fortiguardCategories : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["regex"] = args ? args.regex : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sslSshProfile"] = args ? args.sslSshProfile : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["wildcardFqdns"] = args ? args.wildcardFqdns : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallSslsshprofileSslexempt.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallSslsshprofileSslexempt resources.
 */
export interface ObjectFirewallSslsshprofileSslexemptState {
    address?: pulumi.Input<string>;
    address6?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    fortiguardCategories?: pulumi.Input<pulumi.Input<string>[]>;
    fosid?: pulumi.Input<number>;
    regex?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sslSshProfile?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    wildcardFqdns?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ObjectFirewallSslsshprofileSslexempt resource.
 */
export interface ObjectFirewallSslsshprofileSslexemptArgs {
    address?: pulumi.Input<string>;
    address6?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    fortiguardCategories?: pulumi.Input<pulumi.Input<string>[]>;
    fosid?: pulumi.Input<number>;
    regex?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sslSshProfile: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    wildcardFqdns?: pulumi.Input<pulumi.Input<string>[]>;
}
