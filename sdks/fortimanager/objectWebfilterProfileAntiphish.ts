// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectWebfilterProfileAntiphish extends pulumi.CustomResource {
    /**
     * Get an existing ObjectWebfilterProfileAntiphish resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectWebfilterProfileAntiphishState, opts?: pulumi.CustomResourceOptions): ObjectWebfilterProfileAntiphish {
        return new ObjectWebfilterProfileAntiphish(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectWebfilterProfileAntiphish:ObjectWebfilterProfileAntiphish';

    /**
     * Returns true if the given object is an instance of ObjectWebfilterProfileAntiphish.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectWebfilterProfileAntiphish {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectWebfilterProfileAntiphish.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly authentication!: pulumi.Output<string>;
    public readonly checkBasicAuth!: pulumi.Output<string>;
    public readonly checkUri!: pulumi.Output<string>;
    public readonly checkUsernameOnly!: pulumi.Output<string>;
    public readonly customPatterns!: pulumi.Output<outputs.ObjectWebfilterProfileAntiphishCustomPattern[] | undefined>;
    public readonly defaultAction!: pulumi.Output<string>;
    public readonly domainController!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly inspectionEntries!: pulumi.Output<outputs.ObjectWebfilterProfileAntiphishInspectionEntry[] | undefined>;
    public readonly ldap!: pulumi.Output<string | undefined>;
    public readonly maxBodyLen!: pulumi.Output<number>;
    public readonly profile!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a ObjectWebfilterProfileAntiphish resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectWebfilterProfileAntiphishArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectWebfilterProfileAntiphishArgs | ObjectWebfilterProfileAntiphishState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectWebfilterProfileAntiphishState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["checkBasicAuth"] = state ? state.checkBasicAuth : undefined;
            resourceInputs["checkUri"] = state ? state.checkUri : undefined;
            resourceInputs["checkUsernameOnly"] = state ? state.checkUsernameOnly : undefined;
            resourceInputs["customPatterns"] = state ? state.customPatterns : undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["domainController"] = state ? state.domainController : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["inspectionEntries"] = state ? state.inspectionEntries : undefined;
            resourceInputs["ldap"] = state ? state.ldap : undefined;
            resourceInputs["maxBodyLen"] = state ? state.maxBodyLen : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ObjectWebfilterProfileAntiphishArgs | undefined;
            if ((!args || args.profile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profile'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["checkBasicAuth"] = args ? args.checkBasicAuth : undefined;
            resourceInputs["checkUri"] = args ? args.checkUri : undefined;
            resourceInputs["checkUsernameOnly"] = args ? args.checkUsernameOnly : undefined;
            resourceInputs["customPatterns"] = args ? args.customPatterns : undefined;
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["domainController"] = args ? args.domainController : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["inspectionEntries"] = args ? args.inspectionEntries : undefined;
            resourceInputs["ldap"] = args ? args.ldap : undefined;
            resourceInputs["maxBodyLen"] = args ? args.maxBodyLen : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectWebfilterProfileAntiphish.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectWebfilterProfileAntiphish resources.
 */
export interface ObjectWebfilterProfileAntiphishState {
    adom?: pulumi.Input<string>;
    authentication?: pulumi.Input<string>;
    checkBasicAuth?: pulumi.Input<string>;
    checkUri?: pulumi.Input<string>;
    checkUsernameOnly?: pulumi.Input<string>;
    customPatterns?: pulumi.Input<pulumi.Input<inputs.ObjectWebfilterProfileAntiphishCustomPattern>[]>;
    defaultAction?: pulumi.Input<string>;
    domainController?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    inspectionEntries?: pulumi.Input<pulumi.Input<inputs.ObjectWebfilterProfileAntiphishInspectionEntry>[]>;
    ldap?: pulumi.Input<string>;
    maxBodyLen?: pulumi.Input<number>;
    profile?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectWebfilterProfileAntiphish resource.
 */
export interface ObjectWebfilterProfileAntiphishArgs {
    adom?: pulumi.Input<string>;
    authentication?: pulumi.Input<string>;
    checkBasicAuth?: pulumi.Input<string>;
    checkUri?: pulumi.Input<string>;
    checkUsernameOnly?: pulumi.Input<string>;
    customPatterns?: pulumi.Input<pulumi.Input<inputs.ObjectWebfilterProfileAntiphishCustomPattern>[]>;
    defaultAction?: pulumi.Input<string>;
    domainController?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    inspectionEntries?: pulumi.Input<pulumi.Input<inputs.ObjectWebfilterProfileAntiphishInspectionEntry>[]>;
    ldap?: pulumi.Input<string>;
    maxBodyLen?: pulumi.Input<number>;
    profile: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
