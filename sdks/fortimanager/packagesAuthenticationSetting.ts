// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PackagesAuthenticationSetting extends pulumi.CustomResource {
    /**
     * Get an existing PackagesAuthenticationSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PackagesAuthenticationSettingState, opts?: pulumi.CustomResourceOptions): PackagesAuthenticationSetting {
        return new PackagesAuthenticationSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/packagesAuthenticationSetting:PackagesAuthenticationSetting';

    /**
     * Returns true if the given object is an instance of PackagesAuthenticationSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PackagesAuthenticationSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PackagesAuthenticationSetting.__pulumiType;
    }

    public readonly activeAuthScheme!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly authHttps!: pulumi.Output<string>;
    public readonly captivePortal!: pulumi.Output<string | undefined>;
    public readonly captivePortal6!: pulumi.Output<string | undefined>;
    public readonly captivePortalIp!: pulumi.Output<string | undefined>;
    public readonly captivePortalIp6!: pulumi.Output<string | undefined>;
    public readonly captivePortalPort!: pulumi.Output<number>;
    public readonly captivePortalSslPort!: pulumi.Output<number>;
    public readonly captivePortalType!: pulumi.Output<string>;
    public readonly certAuth!: pulumi.Output<string>;
    public readonly certCaptivePortal!: pulumi.Output<string | undefined>;
    public readonly certCaptivePortalIp!: pulumi.Output<string>;
    public readonly certCaptivePortalPort!: pulumi.Output<number>;
    public readonly cookieMaxAge!: pulumi.Output<number>;
    public readonly cookieRefreshDiv!: pulumi.Output<number>;
    public readonly devRange!: pulumi.Output<string | undefined>;
    public readonly ipAuthCookie!: pulumi.Output<string>;
    public readonly persistentCookie!: pulumi.Output<string>;
    public readonly pkg!: pulumi.Output<string>;
    public readonly pkgFolderPath!: pulumi.Output<string | undefined>;
    public readonly rewriteHttpsPort!: pulumi.Output<number | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly ssoAuthScheme!: pulumi.Output<string | undefined>;
    public readonly updateTime!: pulumi.Output<string>;
    public readonly userCertCa!: pulumi.Output<string | undefined>;

    /**
     * Create a PackagesAuthenticationSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PackagesAuthenticationSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PackagesAuthenticationSettingArgs | PackagesAuthenticationSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PackagesAuthenticationSettingState | undefined;
            resourceInputs["activeAuthScheme"] = state ? state.activeAuthScheme : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["authHttps"] = state ? state.authHttps : undefined;
            resourceInputs["captivePortal"] = state ? state.captivePortal : undefined;
            resourceInputs["captivePortal6"] = state ? state.captivePortal6 : undefined;
            resourceInputs["captivePortalIp"] = state ? state.captivePortalIp : undefined;
            resourceInputs["captivePortalIp6"] = state ? state.captivePortalIp6 : undefined;
            resourceInputs["captivePortalPort"] = state ? state.captivePortalPort : undefined;
            resourceInputs["captivePortalSslPort"] = state ? state.captivePortalSslPort : undefined;
            resourceInputs["captivePortalType"] = state ? state.captivePortalType : undefined;
            resourceInputs["certAuth"] = state ? state.certAuth : undefined;
            resourceInputs["certCaptivePortal"] = state ? state.certCaptivePortal : undefined;
            resourceInputs["certCaptivePortalIp"] = state ? state.certCaptivePortalIp : undefined;
            resourceInputs["certCaptivePortalPort"] = state ? state.certCaptivePortalPort : undefined;
            resourceInputs["cookieMaxAge"] = state ? state.cookieMaxAge : undefined;
            resourceInputs["cookieRefreshDiv"] = state ? state.cookieRefreshDiv : undefined;
            resourceInputs["devRange"] = state ? state.devRange : undefined;
            resourceInputs["ipAuthCookie"] = state ? state.ipAuthCookie : undefined;
            resourceInputs["persistentCookie"] = state ? state.persistentCookie : undefined;
            resourceInputs["pkg"] = state ? state.pkg : undefined;
            resourceInputs["pkgFolderPath"] = state ? state.pkgFolderPath : undefined;
            resourceInputs["rewriteHttpsPort"] = state ? state.rewriteHttpsPort : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["ssoAuthScheme"] = state ? state.ssoAuthScheme : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["userCertCa"] = state ? state.userCertCa : undefined;
        } else {
            const args = argsOrState as PackagesAuthenticationSettingArgs | undefined;
            if ((!args || args.pkg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pkg'");
            }
            resourceInputs["activeAuthScheme"] = args ? args.activeAuthScheme : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["authHttps"] = args ? args.authHttps : undefined;
            resourceInputs["captivePortal"] = args ? args.captivePortal : undefined;
            resourceInputs["captivePortal6"] = args ? args.captivePortal6 : undefined;
            resourceInputs["captivePortalIp"] = args ? args.captivePortalIp : undefined;
            resourceInputs["captivePortalIp6"] = args ? args.captivePortalIp6 : undefined;
            resourceInputs["captivePortalPort"] = args ? args.captivePortalPort : undefined;
            resourceInputs["captivePortalSslPort"] = args ? args.captivePortalSslPort : undefined;
            resourceInputs["captivePortalType"] = args ? args.captivePortalType : undefined;
            resourceInputs["certAuth"] = args ? args.certAuth : undefined;
            resourceInputs["certCaptivePortal"] = args ? args.certCaptivePortal : undefined;
            resourceInputs["certCaptivePortalIp"] = args ? args.certCaptivePortalIp : undefined;
            resourceInputs["certCaptivePortalPort"] = args ? args.certCaptivePortalPort : undefined;
            resourceInputs["cookieMaxAge"] = args ? args.cookieMaxAge : undefined;
            resourceInputs["cookieRefreshDiv"] = args ? args.cookieRefreshDiv : undefined;
            resourceInputs["devRange"] = args ? args.devRange : undefined;
            resourceInputs["ipAuthCookie"] = args ? args.ipAuthCookie : undefined;
            resourceInputs["persistentCookie"] = args ? args.persistentCookie : undefined;
            resourceInputs["pkg"] = args ? args.pkg : undefined;
            resourceInputs["pkgFolderPath"] = args ? args.pkgFolderPath : undefined;
            resourceInputs["rewriteHttpsPort"] = args ? args.rewriteHttpsPort : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["ssoAuthScheme"] = args ? args.ssoAuthScheme : undefined;
            resourceInputs["updateTime"] = args ? args.updateTime : undefined;
            resourceInputs["userCertCa"] = args ? args.userCertCa : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PackagesAuthenticationSetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PackagesAuthenticationSetting resources.
 */
export interface PackagesAuthenticationSettingState {
    activeAuthScheme?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    authHttps?: pulumi.Input<string>;
    captivePortal?: pulumi.Input<string>;
    captivePortal6?: pulumi.Input<string>;
    captivePortalIp?: pulumi.Input<string>;
    captivePortalIp6?: pulumi.Input<string>;
    captivePortalPort?: pulumi.Input<number>;
    captivePortalSslPort?: pulumi.Input<number>;
    captivePortalType?: pulumi.Input<string>;
    certAuth?: pulumi.Input<string>;
    certCaptivePortal?: pulumi.Input<string>;
    certCaptivePortalIp?: pulumi.Input<string>;
    certCaptivePortalPort?: pulumi.Input<number>;
    cookieMaxAge?: pulumi.Input<number>;
    cookieRefreshDiv?: pulumi.Input<number>;
    devRange?: pulumi.Input<string>;
    ipAuthCookie?: pulumi.Input<string>;
    persistentCookie?: pulumi.Input<string>;
    pkg?: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    rewriteHttpsPort?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    ssoAuthScheme?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    userCertCa?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PackagesAuthenticationSetting resource.
 */
export interface PackagesAuthenticationSettingArgs {
    activeAuthScheme?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    authHttps?: pulumi.Input<string>;
    captivePortal?: pulumi.Input<string>;
    captivePortal6?: pulumi.Input<string>;
    captivePortalIp?: pulumi.Input<string>;
    captivePortalIp6?: pulumi.Input<string>;
    captivePortalPort?: pulumi.Input<number>;
    captivePortalSslPort?: pulumi.Input<number>;
    captivePortalType?: pulumi.Input<string>;
    certAuth?: pulumi.Input<string>;
    certCaptivePortal?: pulumi.Input<string>;
    certCaptivePortalIp?: pulumi.Input<string>;
    certCaptivePortalPort?: pulumi.Input<number>;
    cookieMaxAge?: pulumi.Input<number>;
    cookieRefreshDiv?: pulumi.Input<number>;
    devRange?: pulumi.Input<string>;
    ipAuthCookie?: pulumi.Input<string>;
    persistentCookie?: pulumi.Input<string>;
    pkg: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    rewriteHttpsPort?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    ssoAuthScheme?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    userCertCa?: pulumi.Input<string>;
}
