// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemSql extends pulumi.CustomResource {
    /**
     * Get an existing SystemSql resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSqlState, opts?: pulumi.CustomResourceOptions): SystemSql {
        return new SystemSql(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/systemSql:SystemSql';

    /**
     * Returns true if the given object is an instance of SystemSql.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSql {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSql.__pulumiType;
    }

    public readonly backgroundRebuild!: pulumi.Output<string>;
    public readonly compressTableMinAge!: pulumi.Output<number>;
    public readonly customIndices!: pulumi.Output<outputs.SystemSqlCustomIndex[] | undefined>;
    public readonly customSkipidxes!: pulumi.Output<outputs.SystemSqlCustomSkipidx[] | undefined>;
    public readonly databaseName!: pulumi.Output<string | undefined>;
    public readonly databaseType!: pulumi.Output<string>;
    public readonly deviceCountHigh!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly eventTablePartitionTime!: pulumi.Output<number | undefined>;
    public readonly fctTablePartitionTime!: pulumi.Output<number>;
    public readonly logtypes!: pulumi.Output<string[]>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly promptSqlUpgrade!: pulumi.Output<string>;
    public readonly rebuildEvent!: pulumi.Output<string>;
    public readonly rebuildEventStartTimes!: pulumi.Output<string[]>;
    public readonly server!: pulumi.Output<string | undefined>;
    public readonly startTimes!: pulumi.Output<string[]>;
    public readonly status!: pulumi.Output<string>;
    public readonly textSearchIndex!: pulumi.Output<string>;
    public readonly trafficTablePartitionTime!: pulumi.Output<number | undefined>;
    public readonly tsIndexFields!: pulumi.Output<outputs.SystemSqlTsIndexField[] | undefined>;
    public readonly username!: pulumi.Output<string | undefined>;
    public readonly utmTablePartitionTime!: pulumi.Output<number | undefined>;

    /**
     * Create a SystemSql resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSqlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSqlArgs | SystemSqlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSqlState | undefined;
            resourceInputs["backgroundRebuild"] = state ? state.backgroundRebuild : undefined;
            resourceInputs["compressTableMinAge"] = state ? state.compressTableMinAge : undefined;
            resourceInputs["customIndices"] = state ? state.customIndices : undefined;
            resourceInputs["customSkipidxes"] = state ? state.customSkipidxes : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["databaseType"] = state ? state.databaseType : undefined;
            resourceInputs["deviceCountHigh"] = state ? state.deviceCountHigh : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["eventTablePartitionTime"] = state ? state.eventTablePartitionTime : undefined;
            resourceInputs["fctTablePartitionTime"] = state ? state.fctTablePartitionTime : undefined;
            resourceInputs["logtypes"] = state ? state.logtypes : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["promptSqlUpgrade"] = state ? state.promptSqlUpgrade : undefined;
            resourceInputs["rebuildEvent"] = state ? state.rebuildEvent : undefined;
            resourceInputs["rebuildEventStartTimes"] = state ? state.rebuildEventStartTimes : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["startTimes"] = state ? state.startTimes : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["textSearchIndex"] = state ? state.textSearchIndex : undefined;
            resourceInputs["trafficTablePartitionTime"] = state ? state.trafficTablePartitionTime : undefined;
            resourceInputs["tsIndexFields"] = state ? state.tsIndexFields : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["utmTablePartitionTime"] = state ? state.utmTablePartitionTime : undefined;
        } else {
            const args = argsOrState as SystemSqlArgs | undefined;
            resourceInputs["backgroundRebuild"] = args ? args.backgroundRebuild : undefined;
            resourceInputs["compressTableMinAge"] = args ? args.compressTableMinAge : undefined;
            resourceInputs["customIndices"] = args ? args.customIndices : undefined;
            resourceInputs["customSkipidxes"] = args ? args.customSkipidxes : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["databaseType"] = args ? args.databaseType : undefined;
            resourceInputs["deviceCountHigh"] = args ? args.deviceCountHigh : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["eventTablePartitionTime"] = args ? args.eventTablePartitionTime : undefined;
            resourceInputs["fctTablePartitionTime"] = args ? args.fctTablePartitionTime : undefined;
            resourceInputs["logtypes"] = args ? args.logtypes : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["promptSqlUpgrade"] = args ? args.promptSqlUpgrade : undefined;
            resourceInputs["rebuildEvent"] = args ? args.rebuildEvent : undefined;
            resourceInputs["rebuildEventStartTimes"] = args ? args.rebuildEventStartTimes : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["startTimes"] = args ? args.startTimes : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["textSearchIndex"] = args ? args.textSearchIndex : undefined;
            resourceInputs["trafficTablePartitionTime"] = args ? args.trafficTablePartitionTime : undefined;
            resourceInputs["tsIndexFields"] = args ? args.tsIndexFields : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["utmTablePartitionTime"] = args ? args.utmTablePartitionTime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemSql.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemSql resources.
 */
export interface SystemSqlState {
    backgroundRebuild?: pulumi.Input<string>;
    compressTableMinAge?: pulumi.Input<number>;
    customIndices?: pulumi.Input<pulumi.Input<inputs.SystemSqlCustomIndex>[]>;
    customSkipidxes?: pulumi.Input<pulumi.Input<inputs.SystemSqlCustomSkipidx>[]>;
    databaseName?: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    deviceCountHigh?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eventTablePartitionTime?: pulumi.Input<number>;
    fctTablePartitionTime?: pulumi.Input<number>;
    logtypes?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    promptSqlUpgrade?: pulumi.Input<string>;
    rebuildEvent?: pulumi.Input<string>;
    rebuildEventStartTimes?: pulumi.Input<pulumi.Input<string>[]>;
    server?: pulumi.Input<string>;
    startTimes?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    textSearchIndex?: pulumi.Input<string>;
    trafficTablePartitionTime?: pulumi.Input<number>;
    tsIndexFields?: pulumi.Input<pulumi.Input<inputs.SystemSqlTsIndexField>[]>;
    username?: pulumi.Input<string>;
    utmTablePartitionTime?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemSql resource.
 */
export interface SystemSqlArgs {
    backgroundRebuild?: pulumi.Input<string>;
    compressTableMinAge?: pulumi.Input<number>;
    customIndices?: pulumi.Input<pulumi.Input<inputs.SystemSqlCustomIndex>[]>;
    customSkipidxes?: pulumi.Input<pulumi.Input<inputs.SystemSqlCustomSkipidx>[]>;
    databaseName?: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    deviceCountHigh?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eventTablePartitionTime?: pulumi.Input<number>;
    fctTablePartitionTime?: pulumi.Input<number>;
    logtypes?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    promptSqlUpgrade?: pulumi.Input<string>;
    rebuildEvent?: pulumi.Input<string>;
    rebuildEventStartTimes?: pulumi.Input<pulumi.Input<string>[]>;
    server?: pulumi.Input<string>;
    startTimes?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    textSearchIndex?: pulumi.Input<string>;
    trafficTablePartitionTime?: pulumi.Input<number>;
    tsIndexFields?: pulumi.Input<pulumi.Input<inputs.SystemSqlTsIndexField>[]>;
    username?: pulumi.Input<string>;
    utmTablePartitionTime?: pulumi.Input<number>;
}
