// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WantempSystemSdwanHealthcheck extends pulumi.CustomResource {
    /**
     * Get an existing WantempSystemSdwanHealthcheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WantempSystemSdwanHealthcheckState, opts?: pulumi.CustomResourceOptions): WantempSystemSdwanHealthcheck {
        return new WantempSystemSdwanHealthcheck(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/wantempSystemSdwanHealthcheck:WantempSystemSdwanHealthcheck';

    /**
     * Returns true if the given object is an instance of WantempSystemSdwanHealthcheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WantempSystemSdwanHealthcheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WantempSystemSdwanHealthcheck.__pulumiType;
    }

    public readonly _dynamicServer!: pulumi.Output<string | undefined>;
    public readonly addrMode!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly classId!: pulumi.Output<string | undefined>;
    public readonly detectMode!: pulumi.Output<string>;
    public readonly diffservcode!: pulumi.Output<string>;
    public readonly dnsMatchIp!: pulumi.Output<string>;
    public readonly dnsRequestDomain!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly embedMeasuredHealth!: pulumi.Output<string>;
    public readonly failtime!: pulumi.Output<number>;
    public readonly ftpFile!: pulumi.Output<string | undefined>;
    public readonly ftpMode!: pulumi.Output<string>;
    public readonly haPriority!: pulumi.Output<number>;
    public readonly httpAgent!: pulumi.Output<string>;
    public readonly httpGet!: pulumi.Output<string | undefined>;
    public readonly httpMatch!: pulumi.Output<string | undefined>;
    public readonly interval!: pulumi.Output<number>;
    public readonly members!: pulumi.Output<string[]>;
    public readonly mosCodec!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly packetSize!: pulumi.Output<number | undefined>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly probeCount!: pulumi.Output<number>;
    public readonly probePackets!: pulumi.Output<string>;
    public readonly probeTimeout!: pulumi.Output<number>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly qualityMeasuredMethod!: pulumi.Output<string>;
    public readonly recoverytime!: pulumi.Output<number>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly securityMode!: pulumi.Output<string | undefined>;
    public readonly servers!: pulumi.Output<string[]>;
    public readonly slaFailLogPeriod!: pulumi.Output<number | undefined>;
    public readonly slaIdRedistribute!: pulumi.Output<number | undefined>;
    public readonly slaPassLogPeriod!: pulumi.Output<number | undefined>;
    public readonly slas!: pulumi.Output<outputs.WantempSystemSdwanHealthcheckSla[] | undefined>;
    public readonly source!: pulumi.Output<string>;
    public readonly source6!: pulumi.Output<string>;
    public readonly systemDns!: pulumi.Output<string>;
    public readonly thresholdAlertJitter!: pulumi.Output<number | undefined>;
    public readonly thresholdAlertLatency!: pulumi.Output<number | undefined>;
    public readonly thresholdAlertPacketloss!: pulumi.Output<number | undefined>;
    public readonly thresholdWarningJitter!: pulumi.Output<number | undefined>;
    public readonly thresholdWarningLatency!: pulumi.Output<number | undefined>;
    public readonly thresholdWarningPacketloss!: pulumi.Output<number | undefined>;
    public readonly updateCascadeInterface!: pulumi.Output<string>;
    public readonly updateStaticRoute!: pulumi.Output<string>;
    public readonly user!: pulumi.Output<string | undefined>;
    public readonly vrf!: pulumi.Output<number | undefined>;
    public readonly wanprof!: pulumi.Output<string>;

    /**
     * Create a WantempSystemSdwanHealthcheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WantempSystemSdwanHealthcheckArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WantempSystemSdwanHealthcheckArgs | WantempSystemSdwanHealthcheckState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WantempSystemSdwanHealthcheckState | undefined;
            resourceInputs["_dynamicServer"] = state ? state._dynamicServer : undefined;
            resourceInputs["addrMode"] = state ? state.addrMode : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["detectMode"] = state ? state.detectMode : undefined;
            resourceInputs["diffservcode"] = state ? state.diffservcode : undefined;
            resourceInputs["dnsMatchIp"] = state ? state.dnsMatchIp : undefined;
            resourceInputs["dnsRequestDomain"] = state ? state.dnsRequestDomain : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["embedMeasuredHealth"] = state ? state.embedMeasuredHealth : undefined;
            resourceInputs["failtime"] = state ? state.failtime : undefined;
            resourceInputs["ftpFile"] = state ? state.ftpFile : undefined;
            resourceInputs["ftpMode"] = state ? state.ftpMode : undefined;
            resourceInputs["haPriority"] = state ? state.haPriority : undefined;
            resourceInputs["httpAgent"] = state ? state.httpAgent : undefined;
            resourceInputs["httpGet"] = state ? state.httpGet : undefined;
            resourceInputs["httpMatch"] = state ? state.httpMatch : undefined;
            resourceInputs["interval"] = state ? state.interval : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["mosCodec"] = state ? state.mosCodec : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packetSize"] = state ? state.packetSize : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["probeCount"] = state ? state.probeCount : undefined;
            resourceInputs["probePackets"] = state ? state.probePackets : undefined;
            resourceInputs["probeTimeout"] = state ? state.probeTimeout : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["qualityMeasuredMethod"] = state ? state.qualityMeasuredMethod : undefined;
            resourceInputs["recoverytime"] = state ? state.recoverytime : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["securityMode"] = state ? state.securityMode : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["slaFailLogPeriod"] = state ? state.slaFailLogPeriod : undefined;
            resourceInputs["slaIdRedistribute"] = state ? state.slaIdRedistribute : undefined;
            resourceInputs["slaPassLogPeriod"] = state ? state.slaPassLogPeriod : undefined;
            resourceInputs["slas"] = state ? state.slas : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["source6"] = state ? state.source6 : undefined;
            resourceInputs["systemDns"] = state ? state.systemDns : undefined;
            resourceInputs["thresholdAlertJitter"] = state ? state.thresholdAlertJitter : undefined;
            resourceInputs["thresholdAlertLatency"] = state ? state.thresholdAlertLatency : undefined;
            resourceInputs["thresholdAlertPacketloss"] = state ? state.thresholdAlertPacketloss : undefined;
            resourceInputs["thresholdWarningJitter"] = state ? state.thresholdWarningJitter : undefined;
            resourceInputs["thresholdWarningLatency"] = state ? state.thresholdWarningLatency : undefined;
            resourceInputs["thresholdWarningPacketloss"] = state ? state.thresholdWarningPacketloss : undefined;
            resourceInputs["updateCascadeInterface"] = state ? state.updateCascadeInterface : undefined;
            resourceInputs["updateStaticRoute"] = state ? state.updateStaticRoute : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
            resourceInputs["vrf"] = state ? state.vrf : undefined;
            resourceInputs["wanprof"] = state ? state.wanprof : undefined;
        } else {
            const args = argsOrState as WantempSystemSdwanHealthcheckArgs | undefined;
            if ((!args || args.wanprof === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wanprof'");
            }
            resourceInputs["_dynamicServer"] = args ? args._dynamicServer : undefined;
            resourceInputs["addrMode"] = args ? args.addrMode : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["detectMode"] = args ? args.detectMode : undefined;
            resourceInputs["diffservcode"] = args ? args.diffservcode : undefined;
            resourceInputs["dnsMatchIp"] = args ? args.dnsMatchIp : undefined;
            resourceInputs["dnsRequestDomain"] = args ? args.dnsRequestDomain : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["embedMeasuredHealth"] = args ? args.embedMeasuredHealth : undefined;
            resourceInputs["failtime"] = args ? args.failtime : undefined;
            resourceInputs["ftpFile"] = args ? args.ftpFile : undefined;
            resourceInputs["ftpMode"] = args ? args.ftpMode : undefined;
            resourceInputs["haPriority"] = args ? args.haPriority : undefined;
            resourceInputs["httpAgent"] = args ? args.httpAgent : undefined;
            resourceInputs["httpGet"] = args ? args.httpGet : undefined;
            resourceInputs["httpMatch"] = args ? args.httpMatch : undefined;
            resourceInputs["interval"] = args ? args.interval : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["mosCodec"] = args ? args.mosCodec : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packetSize"] = args ? args.packetSize : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["probeCount"] = args ? args.probeCount : undefined;
            resourceInputs["probePackets"] = args ? args.probePackets : undefined;
            resourceInputs["probeTimeout"] = args ? args.probeTimeout : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["qualityMeasuredMethod"] = args ? args.qualityMeasuredMethod : undefined;
            resourceInputs["recoverytime"] = args ? args.recoverytime : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["securityMode"] = args ? args.securityMode : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["slaFailLogPeriod"] = args ? args.slaFailLogPeriod : undefined;
            resourceInputs["slaIdRedistribute"] = args ? args.slaIdRedistribute : undefined;
            resourceInputs["slaPassLogPeriod"] = args ? args.slaPassLogPeriod : undefined;
            resourceInputs["slas"] = args ? args.slas : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["source6"] = args ? args.source6 : undefined;
            resourceInputs["systemDns"] = args ? args.systemDns : undefined;
            resourceInputs["thresholdAlertJitter"] = args ? args.thresholdAlertJitter : undefined;
            resourceInputs["thresholdAlertLatency"] = args ? args.thresholdAlertLatency : undefined;
            resourceInputs["thresholdAlertPacketloss"] = args ? args.thresholdAlertPacketloss : undefined;
            resourceInputs["thresholdWarningJitter"] = args ? args.thresholdWarningJitter : undefined;
            resourceInputs["thresholdWarningLatency"] = args ? args.thresholdWarningLatency : undefined;
            resourceInputs["thresholdWarningPacketloss"] = args ? args.thresholdWarningPacketloss : undefined;
            resourceInputs["updateCascadeInterface"] = args ? args.updateCascadeInterface : undefined;
            resourceInputs["updateStaticRoute"] = args ? args.updateStaticRoute : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
            resourceInputs["vrf"] = args ? args.vrf : undefined;
            resourceInputs["wanprof"] = args ? args.wanprof : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(WantempSystemSdwanHealthcheck.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WantempSystemSdwanHealthcheck resources.
 */
export interface WantempSystemSdwanHealthcheckState {
    _dynamicServer?: pulumi.Input<string>;
    addrMode?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    detectMode?: pulumi.Input<string>;
    diffservcode?: pulumi.Input<string>;
    dnsMatchIp?: pulumi.Input<string>;
    dnsRequestDomain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    embedMeasuredHealth?: pulumi.Input<string>;
    failtime?: pulumi.Input<number>;
    ftpFile?: pulumi.Input<string>;
    ftpMode?: pulumi.Input<string>;
    haPriority?: pulumi.Input<number>;
    httpAgent?: pulumi.Input<string>;
    httpGet?: pulumi.Input<string>;
    httpMatch?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    members?: pulumi.Input<pulumi.Input<string>[]>;
    mosCodec?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    packetSize?: pulumi.Input<number>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    probeCount?: pulumi.Input<number>;
    probePackets?: pulumi.Input<string>;
    probeTimeout?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    qualityMeasuredMethod?: pulumi.Input<string>;
    recoverytime?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    securityMode?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<string>[]>;
    slaFailLogPeriod?: pulumi.Input<number>;
    slaIdRedistribute?: pulumi.Input<number>;
    slaPassLogPeriod?: pulumi.Input<number>;
    slas?: pulumi.Input<pulumi.Input<inputs.WantempSystemSdwanHealthcheckSla>[]>;
    source?: pulumi.Input<string>;
    source6?: pulumi.Input<string>;
    systemDns?: pulumi.Input<string>;
    thresholdAlertJitter?: pulumi.Input<number>;
    thresholdAlertLatency?: pulumi.Input<number>;
    thresholdAlertPacketloss?: pulumi.Input<number>;
    thresholdWarningJitter?: pulumi.Input<number>;
    thresholdWarningLatency?: pulumi.Input<number>;
    thresholdWarningPacketloss?: pulumi.Input<number>;
    updateCascadeInterface?: pulumi.Input<string>;
    updateStaticRoute?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
    vrf?: pulumi.Input<number>;
    wanprof?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WantempSystemSdwanHealthcheck resource.
 */
export interface WantempSystemSdwanHealthcheckArgs {
    _dynamicServer?: pulumi.Input<string>;
    addrMode?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    detectMode?: pulumi.Input<string>;
    diffservcode?: pulumi.Input<string>;
    dnsMatchIp?: pulumi.Input<string>;
    dnsRequestDomain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    embedMeasuredHealth?: pulumi.Input<string>;
    failtime?: pulumi.Input<number>;
    ftpFile?: pulumi.Input<string>;
    ftpMode?: pulumi.Input<string>;
    haPriority?: pulumi.Input<number>;
    httpAgent?: pulumi.Input<string>;
    httpGet?: pulumi.Input<string>;
    httpMatch?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    members?: pulumi.Input<pulumi.Input<string>[]>;
    mosCodec?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    packetSize?: pulumi.Input<number>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    probeCount?: pulumi.Input<number>;
    probePackets?: pulumi.Input<string>;
    probeTimeout?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    qualityMeasuredMethod?: pulumi.Input<string>;
    recoverytime?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    securityMode?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<string>[]>;
    slaFailLogPeriod?: pulumi.Input<number>;
    slaIdRedistribute?: pulumi.Input<number>;
    slaPassLogPeriod?: pulumi.Input<number>;
    slas?: pulumi.Input<pulumi.Input<inputs.WantempSystemSdwanHealthcheckSla>[]>;
    source?: pulumi.Input<string>;
    source6?: pulumi.Input<string>;
    systemDns?: pulumi.Input<string>;
    thresholdAlertJitter?: pulumi.Input<number>;
    thresholdAlertLatency?: pulumi.Input<number>;
    thresholdAlertPacketloss?: pulumi.Input<number>;
    thresholdWarningJitter?: pulumi.Input<number>;
    thresholdWarningLatency?: pulumi.Input<number>;
    thresholdWarningPacketloss?: pulumi.Input<number>;
    updateCascadeInterface?: pulumi.Input<string>;
    updateStaticRoute?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
    vrf?: pulumi.Input<number>;
    wanprof: pulumi.Input<string>;
}
