// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { DvmCmdAddDeviceArgs, DvmCmdAddDeviceState } from "./dvmCmdAddDevice";
export type DvmCmdAddDevice = import("./dvmCmdAddDevice").DvmCmdAddDevice;
export const DvmCmdAddDevice: typeof import("./dvmCmdAddDevice").DvmCmdAddDevice = null as any;
utilities.lazyLoad(exports, ["DvmCmdAddDevice"], () => require("./dvmCmdAddDevice"));

export { DvmCmdAddDevlistArgs, DvmCmdAddDevlistState } from "./dvmCmdAddDevlist";
export type DvmCmdAddDevlist = import("./dvmCmdAddDevlist").DvmCmdAddDevlist;
export const DvmCmdAddDevlist: typeof import("./dvmCmdAddDevlist").DvmCmdAddDevlist = null as any;
utilities.lazyLoad(exports, ["DvmCmdAddDevlist"], () => require("./dvmCmdAddDevlist"));

export { DvmCmdDelDeviceArgs, DvmCmdDelDeviceState } from "./dvmCmdDelDevice";
export type DvmCmdDelDevice = import("./dvmCmdDelDevice").DvmCmdDelDevice;
export const DvmCmdDelDevice: typeof import("./dvmCmdDelDevice").DvmCmdDelDevice = null as any;
utilities.lazyLoad(exports, ["DvmCmdDelDevice"], () => require("./dvmCmdDelDevice"));

export { DvmCmdDelDevlistArgs, DvmCmdDelDevlistState } from "./dvmCmdDelDevlist";
export type DvmCmdDelDevlist = import("./dvmCmdDelDevlist").DvmCmdDelDevlist;
export const DvmCmdDelDevlist: typeof import("./dvmCmdDelDevlist").DvmCmdDelDevlist = null as any;
utilities.lazyLoad(exports, ["DvmCmdDelDevlist"], () => require("./dvmCmdDelDevlist"));

export { DvmCmdUpdateDeviceArgs, DvmCmdUpdateDeviceState } from "./dvmCmdUpdateDevice";
export type DvmCmdUpdateDevice = import("./dvmCmdUpdateDevice").DvmCmdUpdateDevice;
export const DvmCmdUpdateDevice: typeof import("./dvmCmdUpdateDevice").DvmCmdUpdateDevice = null as any;
utilities.lazyLoad(exports, ["DvmCmdUpdateDevice"], () => require("./dvmCmdUpdateDevice"));

export { DvmCmdUpdateDevlistArgs, DvmCmdUpdateDevlistState } from "./dvmCmdUpdateDevlist";
export type DvmCmdUpdateDevlist = import("./dvmCmdUpdateDevlist").DvmCmdUpdateDevlist;
export const DvmCmdUpdateDevlist: typeof import("./dvmCmdUpdateDevlist").DvmCmdUpdateDevlist = null as any;
utilities.lazyLoad(exports, ["DvmCmdUpdateDevlist"], () => require("./dvmCmdUpdateDevlist"));

export { DvmdbAdomArgs, DvmdbAdomState } from "./dvmdbAdom";
export type DvmdbAdom = import("./dvmdbAdom").DvmdbAdom;
export const DvmdbAdom: typeof import("./dvmdbAdom").DvmdbAdom = null as any;
utilities.lazyLoad(exports, ["DvmdbAdom"], () => require("./dvmdbAdom"));

export { DvmdbGroupArgs, DvmdbGroupState } from "./dvmdbGroup";
export type DvmdbGroup = import("./dvmdbGroup").DvmdbGroup;
export const DvmdbGroup: typeof import("./dvmdbGroup").DvmdbGroup = null as any;
utilities.lazyLoad(exports, ["DvmdbGroup"], () => require("./dvmdbGroup"));

export { DvmdbRevisionArgs, DvmdbRevisionState } from "./dvmdbRevision";
export type DvmdbRevision = import("./dvmdbRevision").DvmdbRevision;
export const DvmdbRevision: typeof import("./dvmdbRevision").DvmdbRevision = null as any;
utilities.lazyLoad(exports, ["DvmdbRevision"], () => require("./dvmdbRevision"));

export { DvmdbScriptArgs, DvmdbScriptState } from "./dvmdbScript";
export type DvmdbScript = import("./dvmdbScript").DvmdbScript;
export const DvmdbScript: typeof import("./dvmdbScript").DvmdbScript = null as any;
utilities.lazyLoad(exports, ["DvmdbScript"], () => require("./dvmdbScript"));

export { DvmdbScriptExecuteArgs, DvmdbScriptExecuteState } from "./dvmdbScriptExecute";
export type DvmdbScriptExecute = import("./dvmdbScriptExecute").DvmdbScriptExecute;
export const DvmdbScriptExecute: typeof import("./dvmdbScriptExecute").DvmdbScriptExecute = null as any;
utilities.lazyLoad(exports, ["DvmdbScriptExecute"], () => require("./dvmdbScriptExecute"));

export { ExecWorkspaceActionArgs, ExecWorkspaceActionState } from "./execWorkspaceAction";
export type ExecWorkspaceAction = import("./execWorkspaceAction").ExecWorkspaceAction;
export const ExecWorkspaceAction: typeof import("./execWorkspaceAction").ExecWorkspaceAction = null as any;
utilities.lazyLoad(exports, ["ExecWorkspaceAction"], () => require("./execWorkspaceAction"));

export { FmupdateAnalyzerVirusreportArgs, FmupdateAnalyzerVirusreportState } from "./fmupdateAnalyzerVirusreport";
export type FmupdateAnalyzerVirusreport = import("./fmupdateAnalyzerVirusreport").FmupdateAnalyzerVirusreport;
export const FmupdateAnalyzerVirusreport: typeof import("./fmupdateAnalyzerVirusreport").FmupdateAnalyzerVirusreport = null as any;
utilities.lazyLoad(exports, ["FmupdateAnalyzerVirusreport"], () => require("./fmupdateAnalyzerVirusreport"));

export { FmupdateAvipsAdvancedlogArgs, FmupdateAvipsAdvancedlogState } from "./fmupdateAvipsAdvancedlog";
export type FmupdateAvipsAdvancedlog = import("./fmupdateAvipsAdvancedlog").FmupdateAvipsAdvancedlog;
export const FmupdateAvipsAdvancedlog: typeof import("./fmupdateAvipsAdvancedlog").FmupdateAvipsAdvancedlog = null as any;
utilities.lazyLoad(exports, ["FmupdateAvipsAdvancedlog"], () => require("./fmupdateAvipsAdvancedlog"));

export { FmupdateAvipsWebproxyArgs, FmupdateAvipsWebproxyState } from "./fmupdateAvipsWebproxy";
export type FmupdateAvipsWebproxy = import("./fmupdateAvipsWebproxy").FmupdateAvipsWebproxy;
export const FmupdateAvipsWebproxy: typeof import("./fmupdateAvipsWebproxy").FmupdateAvipsWebproxy = null as any;
utilities.lazyLoad(exports, ["FmupdateAvipsWebproxy"], () => require("./fmupdateAvipsWebproxy"));

export { FmupdateCustomurllistArgs, FmupdateCustomurllistState } from "./fmupdateCustomurllist";
export type FmupdateCustomurllist = import("./fmupdateCustomurllist").FmupdateCustomurllist;
export const FmupdateCustomurllist: typeof import("./fmupdateCustomurllist").FmupdateCustomurllist = null as any;
utilities.lazyLoad(exports, ["FmupdateCustomurllist"], () => require("./fmupdateCustomurllist"));

export { FmupdateDiskquotaArgs, FmupdateDiskquotaState } from "./fmupdateDiskquota";
export type FmupdateDiskquota = import("./fmupdateDiskquota").FmupdateDiskquota;
export const FmupdateDiskquota: typeof import("./fmupdateDiskquota").FmupdateDiskquota = null as any;
utilities.lazyLoad(exports, ["FmupdateDiskquota"], () => require("./fmupdateDiskquota"));

export { FmupdateFctservicesArgs, FmupdateFctservicesState } from "./fmupdateFctservices";
export type FmupdateFctservices = import("./fmupdateFctservices").FmupdateFctservices;
export const FmupdateFctservices: typeof import("./fmupdateFctservices").FmupdateFctservices = null as any;
utilities.lazyLoad(exports, ["FmupdateFctservices"], () => require("./fmupdateFctservices"));

export { FmupdateFdssettingArgs, FmupdateFdssettingState } from "./fmupdateFdssetting";
export type FmupdateFdssetting = import("./fmupdateFdssetting").FmupdateFdssetting;
export const FmupdateFdssetting: typeof import("./fmupdateFdssetting").FmupdateFdssetting = null as any;
utilities.lazyLoad(exports, ["FmupdateFdssetting"], () => require("./fmupdateFdssetting"));

export { FmupdateFdssettingPushoverrideArgs, FmupdateFdssettingPushoverrideState } from "./fmupdateFdssettingPushoverride";
export type FmupdateFdssettingPushoverride = import("./fmupdateFdssettingPushoverride").FmupdateFdssettingPushoverride;
export const FmupdateFdssettingPushoverride: typeof import("./fmupdateFdssettingPushoverride").FmupdateFdssettingPushoverride = null as any;
utilities.lazyLoad(exports, ["FmupdateFdssettingPushoverride"], () => require("./fmupdateFdssettingPushoverride"));

export { FmupdateFdssettingPushoverridetoclientArgs, FmupdateFdssettingPushoverridetoclientState } from "./fmupdateFdssettingPushoverridetoclient";
export type FmupdateFdssettingPushoverridetoclient = import("./fmupdateFdssettingPushoverridetoclient").FmupdateFdssettingPushoverridetoclient;
export const FmupdateFdssettingPushoverridetoclient: typeof import("./fmupdateFdssettingPushoverridetoclient").FmupdateFdssettingPushoverridetoclient = null as any;
utilities.lazyLoad(exports, ["FmupdateFdssettingPushoverridetoclient"], () => require("./fmupdateFdssettingPushoverridetoclient"));

export { FmupdateFdssettingServeroverrideArgs, FmupdateFdssettingServeroverrideState } from "./fmupdateFdssettingServeroverride";
export type FmupdateFdssettingServeroverride = import("./fmupdateFdssettingServeroverride").FmupdateFdssettingServeroverride;
export const FmupdateFdssettingServeroverride: typeof import("./fmupdateFdssettingServeroverride").FmupdateFdssettingServeroverride = null as any;
utilities.lazyLoad(exports, ["FmupdateFdssettingServeroverride"], () => require("./fmupdateFdssettingServeroverride"));

export { FmupdateFdssettingUpdatescheduleArgs, FmupdateFdssettingUpdatescheduleState } from "./fmupdateFdssettingUpdateschedule";
export type FmupdateFdssettingUpdateschedule = import("./fmupdateFdssettingUpdateschedule").FmupdateFdssettingUpdateschedule;
export const FmupdateFdssettingUpdateschedule: typeof import("./fmupdateFdssettingUpdateschedule").FmupdateFdssettingUpdateschedule = null as any;
utilities.lazyLoad(exports, ["FmupdateFdssettingUpdateschedule"], () => require("./fmupdateFdssettingUpdateschedule"));

export { FmupdateFwmsettingArgs, FmupdateFwmsettingState } from "./fmupdateFwmsetting";
export type FmupdateFwmsetting = import("./fmupdateFwmsetting").FmupdateFwmsetting;
export const FmupdateFwmsetting: typeof import("./fmupdateFwmsetting").FmupdateFwmsetting = null as any;
utilities.lazyLoad(exports, ["FmupdateFwmsetting"], () => require("./fmupdateFwmsetting"));

export { FmupdateFwmsettingUpgradetimeoutArgs, FmupdateFwmsettingUpgradetimeoutState } from "./fmupdateFwmsettingUpgradetimeout";
export type FmupdateFwmsettingUpgradetimeout = import("./fmupdateFwmsettingUpgradetimeout").FmupdateFwmsettingUpgradetimeout;
export const FmupdateFwmsettingUpgradetimeout: typeof import("./fmupdateFwmsettingUpgradetimeout").FmupdateFwmsettingUpgradetimeout = null as any;
utilities.lazyLoad(exports, ["FmupdateFwmsettingUpgradetimeout"], () => require("./fmupdateFwmsettingUpgradetimeout"));

export { FmupdateMultilayerArgs, FmupdateMultilayerState } from "./fmupdateMultilayer";
export type FmupdateMultilayer = import("./fmupdateMultilayer").FmupdateMultilayer;
export const FmupdateMultilayer: typeof import("./fmupdateMultilayer").FmupdateMultilayer = null as any;
utilities.lazyLoad(exports, ["FmupdateMultilayer"], () => require("./fmupdateMultilayer"));

export { FmupdatePublicnetworkArgs, FmupdatePublicnetworkState } from "./fmupdatePublicnetwork";
export type FmupdatePublicnetwork = import("./fmupdatePublicnetwork").FmupdatePublicnetwork;
export const FmupdatePublicnetwork: typeof import("./fmupdatePublicnetwork").FmupdatePublicnetwork = null as any;
utilities.lazyLoad(exports, ["FmupdatePublicnetwork"], () => require("./fmupdatePublicnetwork"));

export { FmupdateServeraccessprioritiesArgs, FmupdateServeraccessprioritiesState } from "./fmupdateServeraccesspriorities";
export type FmupdateServeraccesspriorities = import("./fmupdateServeraccesspriorities").FmupdateServeraccesspriorities;
export const FmupdateServeraccesspriorities: typeof import("./fmupdateServeraccesspriorities").FmupdateServeraccesspriorities = null as any;
utilities.lazyLoad(exports, ["FmupdateServeraccesspriorities"], () => require("./fmupdateServeraccesspriorities"));

export { FmupdateServeroverridestatusArgs, FmupdateServeroverridestatusState } from "./fmupdateServeroverridestatus";
export type FmupdateServeroverridestatus = import("./fmupdateServeroverridestatus").FmupdateServeroverridestatus;
export const FmupdateServeroverridestatus: typeof import("./fmupdateServeroverridestatus").FmupdateServeroverridestatus = null as any;
utilities.lazyLoad(exports, ["FmupdateServeroverridestatus"], () => require("./fmupdateServeroverridestatus"));

export { FmupdateServiceArgs, FmupdateServiceState } from "./fmupdateService";
export type FmupdateService = import("./fmupdateService").FmupdateService;
export const FmupdateService: typeof import("./fmupdateService").FmupdateService = null as any;
utilities.lazyLoad(exports, ["FmupdateService"], () => require("./fmupdateService"));

export { FmupdateWebspamFgdsettingArgs, FmupdateWebspamFgdsettingState } from "./fmupdateWebspamFgdsetting";
export type FmupdateWebspamFgdsetting = import("./fmupdateWebspamFgdsetting").FmupdateWebspamFgdsetting;
export const FmupdateWebspamFgdsetting: typeof import("./fmupdateWebspamFgdsetting").FmupdateWebspamFgdsetting = null as any;
utilities.lazyLoad(exports, ["FmupdateWebspamFgdsetting"], () => require("./fmupdateWebspamFgdsetting"));

export { FmupdateWebspamWebproxyArgs, FmupdateWebspamWebproxyState } from "./fmupdateWebspamWebproxy";
export type FmupdateWebspamWebproxy = import("./fmupdateWebspamWebproxy").FmupdateWebspamWebproxy;
export const FmupdateWebspamWebproxy: typeof import("./fmupdateWebspamWebproxy").FmupdateWebspamWebproxy = null as any;
utilities.lazyLoad(exports, ["FmupdateWebspamWebproxy"], () => require("./fmupdateWebspamWebproxy"));

export { JsonGenericApiArgs, JsonGenericApiState } from "./jsonGenericApi";
export type JsonGenericApi = import("./jsonGenericApi").JsonGenericApi;
export const JsonGenericApi: typeof import("./jsonGenericApi").JsonGenericApi = null as any;
utilities.lazyLoad(exports, ["JsonGenericApi"], () => require("./jsonGenericApi"));

export { ObjectAdomOptionsArgs, ObjectAdomOptionsState } from "./objectAdomOptions";
export type ObjectAdomOptions = import("./objectAdomOptions").ObjectAdomOptions;
export const ObjectAdomOptions: typeof import("./objectAdomOptions").ObjectAdomOptions = null as any;
utilities.lazyLoad(exports, ["ObjectAdomOptions"], () => require("./objectAdomOptions"));

export { ObjectAntivirusMmschecksumArgs, ObjectAntivirusMmschecksumState } from "./objectAntivirusMmschecksum";
export type ObjectAntivirusMmschecksum = import("./objectAntivirusMmschecksum").ObjectAntivirusMmschecksum;
export const ObjectAntivirusMmschecksum: typeof import("./objectAntivirusMmschecksum").ObjectAntivirusMmschecksum = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusMmschecksum"], () => require("./objectAntivirusMmschecksum"));

export { ObjectAntivirusNotificationArgs, ObjectAntivirusNotificationState } from "./objectAntivirusNotification";
export type ObjectAntivirusNotification = import("./objectAntivirusNotification").ObjectAntivirusNotification;
export const ObjectAntivirusNotification: typeof import("./objectAntivirusNotification").ObjectAntivirusNotification = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusNotification"], () => require("./objectAntivirusNotification"));

export { ObjectAntivirusProfileArgs, ObjectAntivirusProfileState } from "./objectAntivirusProfile";
export type ObjectAntivirusProfile = import("./objectAntivirusProfile").ObjectAntivirusProfile;
export const ObjectAntivirusProfile: typeof import("./objectAntivirusProfile").ObjectAntivirusProfile = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfile"], () => require("./objectAntivirusProfile"));

export { ObjectAntivirusProfileCifsArgs, ObjectAntivirusProfileCifsState } from "./objectAntivirusProfileCifs";
export type ObjectAntivirusProfileCifs = import("./objectAntivirusProfileCifs").ObjectAntivirusProfileCifs;
export const ObjectAntivirusProfileCifs: typeof import("./objectAntivirusProfileCifs").ObjectAntivirusProfileCifs = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileCifs"], () => require("./objectAntivirusProfileCifs"));

export { ObjectAntivirusProfileContentdisarmArgs, ObjectAntivirusProfileContentdisarmState } from "./objectAntivirusProfileContentdisarm";
export type ObjectAntivirusProfileContentdisarm = import("./objectAntivirusProfileContentdisarm").ObjectAntivirusProfileContentdisarm;
export const ObjectAntivirusProfileContentdisarm: typeof import("./objectAntivirusProfileContentdisarm").ObjectAntivirusProfileContentdisarm = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileContentdisarm"], () => require("./objectAntivirusProfileContentdisarm"));

export { ObjectAntivirusProfileFtpArgs, ObjectAntivirusProfileFtpState } from "./objectAntivirusProfileFtp";
export type ObjectAntivirusProfileFtp = import("./objectAntivirusProfileFtp").ObjectAntivirusProfileFtp;
export const ObjectAntivirusProfileFtp: typeof import("./objectAntivirusProfileFtp").ObjectAntivirusProfileFtp = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileFtp"], () => require("./objectAntivirusProfileFtp"));

export { ObjectAntivirusProfileHttpArgs, ObjectAntivirusProfileHttpState } from "./objectAntivirusProfileHttp";
export type ObjectAntivirusProfileHttp = import("./objectAntivirusProfileHttp").ObjectAntivirusProfileHttp;
export const ObjectAntivirusProfileHttp: typeof import("./objectAntivirusProfileHttp").ObjectAntivirusProfileHttp = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileHttp"], () => require("./objectAntivirusProfileHttp"));

export { ObjectAntivirusProfileImapArgs, ObjectAntivirusProfileImapState } from "./objectAntivirusProfileImap";
export type ObjectAntivirusProfileImap = import("./objectAntivirusProfileImap").ObjectAntivirusProfileImap;
export const ObjectAntivirusProfileImap: typeof import("./objectAntivirusProfileImap").ObjectAntivirusProfileImap = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileImap"], () => require("./objectAntivirusProfileImap"));

export { ObjectAntivirusProfileMapiArgs, ObjectAntivirusProfileMapiState } from "./objectAntivirusProfileMapi";
export type ObjectAntivirusProfileMapi = import("./objectAntivirusProfileMapi").ObjectAntivirusProfileMapi;
export const ObjectAntivirusProfileMapi: typeof import("./objectAntivirusProfileMapi").ObjectAntivirusProfileMapi = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileMapi"], () => require("./objectAntivirusProfileMapi"));

export { ObjectAntivirusProfileNacquarArgs, ObjectAntivirusProfileNacquarState } from "./objectAntivirusProfileNacquar";
export type ObjectAntivirusProfileNacquar = import("./objectAntivirusProfileNacquar").ObjectAntivirusProfileNacquar;
export const ObjectAntivirusProfileNacquar: typeof import("./objectAntivirusProfileNacquar").ObjectAntivirusProfileNacquar = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileNacquar"], () => require("./objectAntivirusProfileNacquar"));

export { ObjectAntivirusProfileNntpArgs, ObjectAntivirusProfileNntpState } from "./objectAntivirusProfileNntp";
export type ObjectAntivirusProfileNntp = import("./objectAntivirusProfileNntp").ObjectAntivirusProfileNntp;
export const ObjectAntivirusProfileNntp: typeof import("./objectAntivirusProfileNntp").ObjectAntivirusProfileNntp = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileNntp"], () => require("./objectAntivirusProfileNntp"));

export { ObjectAntivirusProfileOutbreakpreventionArgs, ObjectAntivirusProfileOutbreakpreventionState } from "./objectAntivirusProfileOutbreakprevention";
export type ObjectAntivirusProfileOutbreakprevention = import("./objectAntivirusProfileOutbreakprevention").ObjectAntivirusProfileOutbreakprevention;
export const ObjectAntivirusProfileOutbreakprevention: typeof import("./objectAntivirusProfileOutbreakprevention").ObjectAntivirusProfileOutbreakprevention = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileOutbreakprevention"], () => require("./objectAntivirusProfileOutbreakprevention"));

export { ObjectAntivirusProfilePop3Args, ObjectAntivirusProfilePop3State } from "./objectAntivirusProfilePop3";
export type ObjectAntivirusProfilePop3 = import("./objectAntivirusProfilePop3").ObjectAntivirusProfilePop3;
export const ObjectAntivirusProfilePop3: typeof import("./objectAntivirusProfilePop3").ObjectAntivirusProfilePop3 = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfilePop3"], () => require("./objectAntivirusProfilePop3"));

export { ObjectAntivirusProfileSmtpArgs, ObjectAntivirusProfileSmtpState } from "./objectAntivirusProfileSmtp";
export type ObjectAntivirusProfileSmtp = import("./objectAntivirusProfileSmtp").ObjectAntivirusProfileSmtp;
export const ObjectAntivirusProfileSmtp: typeof import("./objectAntivirusProfileSmtp").ObjectAntivirusProfileSmtp = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileSmtp"], () => require("./objectAntivirusProfileSmtp"));

export { ObjectAntivirusProfileSshArgs, ObjectAntivirusProfileSshState } from "./objectAntivirusProfileSsh";
export type ObjectAntivirusProfileSsh = import("./objectAntivirusProfileSsh").ObjectAntivirusProfileSsh;
export const ObjectAntivirusProfileSsh: typeof import("./objectAntivirusProfileSsh").ObjectAntivirusProfileSsh = null as any;
utilities.lazyLoad(exports, ["ObjectAntivirusProfileSsh"], () => require("./objectAntivirusProfileSsh"));

export { ObjectApplicationCategoriesArgs, ObjectApplicationCategoriesState } from "./objectApplicationCategories";
export type ObjectApplicationCategories = import("./objectApplicationCategories").ObjectApplicationCategories;
export const ObjectApplicationCategories: typeof import("./objectApplicationCategories").ObjectApplicationCategories = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationCategories"], () => require("./objectApplicationCategories"));

export { ObjectApplicationCustomArgs, ObjectApplicationCustomState } from "./objectApplicationCustom";
export type ObjectApplicationCustom = import("./objectApplicationCustom").ObjectApplicationCustom;
export const ObjectApplicationCustom: typeof import("./objectApplicationCustom").ObjectApplicationCustom = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationCustom"], () => require("./objectApplicationCustom"));

export { ObjectApplicationGroupArgs, ObjectApplicationGroupState } from "./objectApplicationGroup";
export type ObjectApplicationGroup = import("./objectApplicationGroup").ObjectApplicationGroup;
export const ObjectApplicationGroup: typeof import("./objectApplicationGroup").ObjectApplicationGroup = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationGroup"], () => require("./objectApplicationGroup"));

export { ObjectApplicationListArgs, ObjectApplicationListState } from "./objectApplicationList";
export type ObjectApplicationList = import("./objectApplicationList").ObjectApplicationList;
export const ObjectApplicationList: typeof import("./objectApplicationList").ObjectApplicationList = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationList"], () => require("./objectApplicationList"));

export { ObjectApplicationListDefaultnetworkservicesArgs, ObjectApplicationListDefaultnetworkservicesState } from "./objectApplicationListDefaultnetworkservices";
export type ObjectApplicationListDefaultnetworkservices = import("./objectApplicationListDefaultnetworkservices").ObjectApplicationListDefaultnetworkservices;
export const ObjectApplicationListDefaultnetworkservices: typeof import("./objectApplicationListDefaultnetworkservices").ObjectApplicationListDefaultnetworkservices = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationListDefaultnetworkservices"], () => require("./objectApplicationListDefaultnetworkservices"));

export { ObjectApplicationListDefaultnetworkservicesMoveArgs, ObjectApplicationListDefaultnetworkservicesMoveState } from "./objectApplicationListDefaultnetworkservicesMove";
export type ObjectApplicationListDefaultnetworkservicesMove = import("./objectApplicationListDefaultnetworkservicesMove").ObjectApplicationListDefaultnetworkservicesMove;
export const ObjectApplicationListDefaultnetworkservicesMove: typeof import("./objectApplicationListDefaultnetworkservicesMove").ObjectApplicationListDefaultnetworkservicesMove = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationListDefaultnetworkservicesMove"], () => require("./objectApplicationListDefaultnetworkservicesMove"));

export { ObjectApplicationListEntriesArgs, ObjectApplicationListEntriesState } from "./objectApplicationListEntries";
export type ObjectApplicationListEntries = import("./objectApplicationListEntries").ObjectApplicationListEntries;
export const ObjectApplicationListEntries: typeof import("./objectApplicationListEntries").ObjectApplicationListEntries = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationListEntries"], () => require("./objectApplicationListEntries"));

export { ObjectApplicationListEntriesParametersArgs, ObjectApplicationListEntriesParametersState } from "./objectApplicationListEntriesParameters";
export type ObjectApplicationListEntriesParameters = import("./objectApplicationListEntriesParameters").ObjectApplicationListEntriesParameters;
export const ObjectApplicationListEntriesParameters: typeof import("./objectApplicationListEntriesParameters").ObjectApplicationListEntriesParameters = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationListEntriesParameters"], () => require("./objectApplicationListEntriesParameters"));

export { ObjectApplicationListEntriesParametersMembersArgs, ObjectApplicationListEntriesParametersMembersState } from "./objectApplicationListEntriesParametersMembers";
export type ObjectApplicationListEntriesParametersMembers = import("./objectApplicationListEntriesParametersMembers").ObjectApplicationListEntriesParametersMembers;
export const ObjectApplicationListEntriesParametersMembers: typeof import("./objectApplicationListEntriesParametersMembers").ObjectApplicationListEntriesParametersMembers = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationListEntriesParametersMembers"], () => require("./objectApplicationListEntriesParametersMembers"));

export { ObjectApplicationListEntriesParametersMoveArgs, ObjectApplicationListEntriesParametersMoveState } from "./objectApplicationListEntriesParametersMove";
export type ObjectApplicationListEntriesParametersMove = import("./objectApplicationListEntriesParametersMove").ObjectApplicationListEntriesParametersMove;
export const ObjectApplicationListEntriesParametersMove: typeof import("./objectApplicationListEntriesParametersMove").ObjectApplicationListEntriesParametersMove = null as any;
utilities.lazyLoad(exports, ["ObjectApplicationListEntriesParametersMove"], () => require("./objectApplicationListEntriesParametersMove"));

export { ObjectAuthenticationSchemeArgs, ObjectAuthenticationSchemeState } from "./objectAuthenticationScheme";
export type ObjectAuthenticationScheme = import("./objectAuthenticationScheme").ObjectAuthenticationScheme;
export const ObjectAuthenticationScheme: typeof import("./objectAuthenticationScheme").ObjectAuthenticationScheme = null as any;
utilities.lazyLoad(exports, ["ObjectAuthenticationScheme"], () => require("./objectAuthenticationScheme"));

export { ObjectCasbProfileArgs, ObjectCasbProfileState } from "./objectCasbProfile";
export type ObjectCasbProfile = import("./objectCasbProfile").ObjectCasbProfile;
export const ObjectCasbProfile: typeof import("./objectCasbProfile").ObjectCasbProfile = null as any;
utilities.lazyLoad(exports, ["ObjectCasbProfile"], () => require("./objectCasbProfile"));

export { ObjectCasbProfileMoveArgs, ObjectCasbProfileMoveState } from "./objectCasbProfileMove";
export type ObjectCasbProfileMove = import("./objectCasbProfileMove").ObjectCasbProfileMove;
export const ObjectCasbProfileMove: typeof import("./objectCasbProfileMove").ObjectCasbProfileMove = null as any;
utilities.lazyLoad(exports, ["ObjectCasbProfileMove"], () => require("./objectCasbProfileMove"));

export { ObjectCasbProfileSaasapplicationArgs, ObjectCasbProfileSaasapplicationState } from "./objectCasbProfileSaasapplication";
export type ObjectCasbProfileSaasapplication = import("./objectCasbProfileSaasapplication").ObjectCasbProfileSaasapplication;
export const ObjectCasbProfileSaasapplication: typeof import("./objectCasbProfileSaasapplication").ObjectCasbProfileSaasapplication = null as any;
utilities.lazyLoad(exports, ["ObjectCasbProfileSaasapplication"], () => require("./objectCasbProfileSaasapplication"));

export { ObjectCasbProfileSaasapplicationAccessruleArgs, ObjectCasbProfileSaasapplicationAccessruleState } from "./objectCasbProfileSaasapplicationAccessrule";
export type ObjectCasbProfileSaasapplicationAccessrule = import("./objectCasbProfileSaasapplicationAccessrule").ObjectCasbProfileSaasapplicationAccessrule;
export const ObjectCasbProfileSaasapplicationAccessrule: typeof import("./objectCasbProfileSaasapplicationAccessrule").ObjectCasbProfileSaasapplicationAccessrule = null as any;
utilities.lazyLoad(exports, ["ObjectCasbProfileSaasapplicationAccessrule"], () => require("./objectCasbProfileSaasapplicationAccessrule"));

export { ObjectCasbProfileSaasapplicationCustomcontrolArgs, ObjectCasbProfileSaasapplicationCustomcontrolState } from "./objectCasbProfileSaasapplicationCustomcontrol";
export type ObjectCasbProfileSaasapplicationCustomcontrol = import("./objectCasbProfileSaasapplicationCustomcontrol").ObjectCasbProfileSaasapplicationCustomcontrol;
export const ObjectCasbProfileSaasapplicationCustomcontrol: typeof import("./objectCasbProfileSaasapplicationCustomcontrol").ObjectCasbProfileSaasapplicationCustomcontrol = null as any;
utilities.lazyLoad(exports, ["ObjectCasbProfileSaasapplicationCustomcontrol"], () => require("./objectCasbProfileSaasapplicationCustomcontrol"));

export { ObjectCasbProfileSaasapplicationCustomcontrolOptionArgs, ObjectCasbProfileSaasapplicationCustomcontrolOptionState } from "./objectCasbProfileSaasapplicationCustomcontrolOption";
export type ObjectCasbProfileSaasapplicationCustomcontrolOption = import("./objectCasbProfileSaasapplicationCustomcontrolOption").ObjectCasbProfileSaasapplicationCustomcontrolOption;
export const ObjectCasbProfileSaasapplicationCustomcontrolOption: typeof import("./objectCasbProfileSaasapplicationCustomcontrolOption").ObjectCasbProfileSaasapplicationCustomcontrolOption = null as any;
utilities.lazyLoad(exports, ["ObjectCasbProfileSaasapplicationCustomcontrolOption"], () => require("./objectCasbProfileSaasapplicationCustomcontrolOption"));

export { ObjectCasbSaasapplicationArgs, ObjectCasbSaasapplicationState } from "./objectCasbSaasapplication";
export type ObjectCasbSaasapplication = import("./objectCasbSaasapplication").ObjectCasbSaasapplication;
export const ObjectCasbSaasapplication: typeof import("./objectCasbSaasapplication").ObjectCasbSaasapplication = null as any;
utilities.lazyLoad(exports, ["ObjectCasbSaasapplication"], () => require("./objectCasbSaasapplication"));

export { ObjectCasbSaasapplicationMoveArgs, ObjectCasbSaasapplicationMoveState } from "./objectCasbSaasapplicationMove";
export type ObjectCasbSaasapplicationMove = import("./objectCasbSaasapplicationMove").ObjectCasbSaasapplicationMove;
export const ObjectCasbSaasapplicationMove: typeof import("./objectCasbSaasapplicationMove").ObjectCasbSaasapplicationMove = null as any;
utilities.lazyLoad(exports, ["ObjectCasbSaasapplicationMove"], () => require("./objectCasbSaasapplicationMove"));

export { ObjectCasbUseractivityArgs, ObjectCasbUseractivityState } from "./objectCasbUseractivity";
export type ObjectCasbUseractivity = import("./objectCasbUseractivity").ObjectCasbUseractivity;
export const ObjectCasbUseractivity: typeof import("./objectCasbUseractivity").ObjectCasbUseractivity = null as any;
utilities.lazyLoad(exports, ["ObjectCasbUseractivity"], () => require("./objectCasbUseractivity"));

export { ObjectCasbUseractivityControloptionsArgs, ObjectCasbUseractivityControloptionsState } from "./objectCasbUseractivityControloptions";
export type ObjectCasbUseractivityControloptions = import("./objectCasbUseractivityControloptions").ObjectCasbUseractivityControloptions;
export const ObjectCasbUseractivityControloptions: typeof import("./objectCasbUseractivityControloptions").ObjectCasbUseractivityControloptions = null as any;
utilities.lazyLoad(exports, ["ObjectCasbUseractivityControloptions"], () => require("./objectCasbUseractivityControloptions"));

export { ObjectCasbUseractivityControloptionsOperationsArgs, ObjectCasbUseractivityControloptionsOperationsState } from "./objectCasbUseractivityControloptionsOperations";
export type ObjectCasbUseractivityControloptionsOperations = import("./objectCasbUseractivityControloptionsOperations").ObjectCasbUseractivityControloptionsOperations;
export const ObjectCasbUseractivityControloptionsOperations: typeof import("./objectCasbUseractivityControloptionsOperations").ObjectCasbUseractivityControloptionsOperations = null as any;
utilities.lazyLoad(exports, ["ObjectCasbUseractivityControloptionsOperations"], () => require("./objectCasbUseractivityControloptionsOperations"));

export { ObjectCasbUseractivityMatchArgs, ObjectCasbUseractivityMatchState } from "./objectCasbUseractivityMatch";
export type ObjectCasbUseractivityMatch = import("./objectCasbUseractivityMatch").ObjectCasbUseractivityMatch;
export const ObjectCasbUseractivityMatch: typeof import("./objectCasbUseractivityMatch").ObjectCasbUseractivityMatch = null as any;
utilities.lazyLoad(exports, ["ObjectCasbUseractivityMatch"], () => require("./objectCasbUseractivityMatch"));

export { ObjectCasbUseractivityMatchRulesArgs, ObjectCasbUseractivityMatchRulesState } from "./objectCasbUseractivityMatchRules";
export type ObjectCasbUseractivityMatchRules = import("./objectCasbUseractivityMatchRules").ObjectCasbUseractivityMatchRules;
export const ObjectCasbUseractivityMatchRules: typeof import("./objectCasbUseractivityMatchRules").ObjectCasbUseractivityMatchRules = null as any;
utilities.lazyLoad(exports, ["ObjectCasbUseractivityMatchRules"], () => require("./objectCasbUseractivityMatchRules"));

export { ObjectCasbUseractivityMoveArgs, ObjectCasbUseractivityMoveState } from "./objectCasbUseractivityMove";
export type ObjectCasbUseractivityMove = import("./objectCasbUseractivityMove").ObjectCasbUseractivityMove;
export const ObjectCasbUseractivityMove: typeof import("./objectCasbUseractivityMove").ObjectCasbUseractivityMove = null as any;
utilities.lazyLoad(exports, ["ObjectCasbUseractivityMove"], () => require("./objectCasbUseractivityMove"));

export { ObjectCertificateTemplateArgs, ObjectCertificateTemplateState } from "./objectCertificateTemplate";
export type ObjectCertificateTemplate = import("./objectCertificateTemplate").ObjectCertificateTemplate;
export const ObjectCertificateTemplate: typeof import("./objectCertificateTemplate").ObjectCertificateTemplate = null as any;
utilities.lazyLoad(exports, ["ObjectCertificateTemplate"], () => require("./objectCertificateTemplate"));

export { ObjectCifsDomaincontrollerArgs, ObjectCifsDomaincontrollerState } from "./objectCifsDomaincontroller";
export type ObjectCifsDomaincontroller = import("./objectCifsDomaincontroller").ObjectCifsDomaincontroller;
export const ObjectCifsDomaincontroller: typeof import("./objectCifsDomaincontroller").ObjectCifsDomaincontroller = null as any;
utilities.lazyLoad(exports, ["ObjectCifsDomaincontroller"], () => require("./objectCifsDomaincontroller"));

export { ObjectCifsProfileArgs, ObjectCifsProfileState } from "./objectCifsProfile";
export type ObjectCifsProfile = import("./objectCifsProfile").ObjectCifsProfile;
export const ObjectCifsProfile: typeof import("./objectCifsProfile").ObjectCifsProfile = null as any;
utilities.lazyLoad(exports, ["ObjectCifsProfile"], () => require("./objectCifsProfile"));

export { ObjectCliTemplateArgs, ObjectCliTemplateState } from "./objectCliTemplate";
export type ObjectCliTemplate = import("./objectCliTemplate").ObjectCliTemplate;
export const ObjectCliTemplate: typeof import("./objectCliTemplate").ObjectCliTemplate = null as any;
utilities.lazyLoad(exports, ["ObjectCliTemplate"], () => require("./objectCliTemplate"));

export { ObjectCliTemplategroupArgs, ObjectCliTemplategroupState } from "./objectCliTemplategroup";
export type ObjectCliTemplategroup = import("./objectCliTemplategroup").ObjectCliTemplategroup;
export const ObjectCliTemplategroup: typeof import("./objectCliTemplategroup").ObjectCliTemplategroup = null as any;
utilities.lazyLoad(exports, ["ObjectCliTemplategroup"], () => require("./objectCliTemplategroup"));

export { ObjectCloudOrchestawsArgs, ObjectCloudOrchestawsState } from "./objectCloudOrchestaws";
export type ObjectCloudOrchestaws = import("./objectCloudOrchestaws").ObjectCloudOrchestaws;
export const ObjectCloudOrchestaws: typeof import("./objectCloudOrchestaws").ObjectCloudOrchestaws = null as any;
utilities.lazyLoad(exports, ["ObjectCloudOrchestaws"], () => require("./objectCloudOrchestaws"));

export { ObjectCloudOrchestawsconnectorArgs, ObjectCloudOrchestawsconnectorState } from "./objectCloudOrchestawsconnector";
export type ObjectCloudOrchestawsconnector = import("./objectCloudOrchestawsconnector").ObjectCloudOrchestawsconnector;
export const ObjectCloudOrchestawsconnector: typeof import("./objectCloudOrchestawsconnector").ObjectCloudOrchestawsconnector = null as any;
utilities.lazyLoad(exports, ["ObjectCloudOrchestawsconnector"], () => require("./objectCloudOrchestawsconnector"));

export { ObjectCloudOrchestawstemplateAutoscaleexistingvpcArgs, ObjectCloudOrchestawstemplateAutoscaleexistingvpcState } from "./objectCloudOrchestawstemplateAutoscaleexistingvpc";
export type ObjectCloudOrchestawstemplateAutoscaleexistingvpc = import("./objectCloudOrchestawstemplateAutoscaleexistingvpc").ObjectCloudOrchestawstemplateAutoscaleexistingvpc;
export const ObjectCloudOrchestawstemplateAutoscaleexistingvpc: typeof import("./objectCloudOrchestawstemplateAutoscaleexistingvpc").ObjectCloudOrchestawstemplateAutoscaleexistingvpc = null as any;
utilities.lazyLoad(exports, ["ObjectCloudOrchestawstemplateAutoscaleexistingvpc"], () => require("./objectCloudOrchestawstemplateAutoscaleexistingvpc"));

export { ObjectCloudOrchestawstemplateAutoscalenewvpcArgs, ObjectCloudOrchestawstemplateAutoscalenewvpcState } from "./objectCloudOrchestawstemplateAutoscalenewvpc";
export type ObjectCloudOrchestawstemplateAutoscalenewvpc = import("./objectCloudOrchestawstemplateAutoscalenewvpc").ObjectCloudOrchestawstemplateAutoscalenewvpc;
export const ObjectCloudOrchestawstemplateAutoscalenewvpc: typeof import("./objectCloudOrchestawstemplateAutoscalenewvpc").ObjectCloudOrchestawstemplateAutoscalenewvpc = null as any;
utilities.lazyLoad(exports, ["ObjectCloudOrchestawstemplateAutoscalenewvpc"], () => require("./objectCloudOrchestawstemplateAutoscalenewvpc"));

export { ObjectCloudOrchestawstemplateAutoscaletgwnewvpcArgs, ObjectCloudOrchestawstemplateAutoscaletgwnewvpcState } from "./objectCloudOrchestawstemplateAutoscaletgwnewvpc";
export type ObjectCloudOrchestawstemplateAutoscaletgwnewvpc = import("./objectCloudOrchestawstemplateAutoscaletgwnewvpc").ObjectCloudOrchestawstemplateAutoscaletgwnewvpc;
export const ObjectCloudOrchestawstemplateAutoscaletgwnewvpc: typeof import("./objectCloudOrchestawstemplateAutoscaletgwnewvpc").ObjectCloudOrchestawstemplateAutoscaletgwnewvpc = null as any;
utilities.lazyLoad(exports, ["ObjectCloudOrchestawstemplateAutoscaletgwnewvpc"], () => require("./objectCloudOrchestawstemplateAutoscaletgwnewvpc"));

export { ObjectCloudOrchestrationArgs, ObjectCloudOrchestrationState } from "./objectCloudOrchestration";
export type ObjectCloudOrchestration = import("./objectCloudOrchestration").ObjectCloudOrchestration;
export const ObjectCloudOrchestration: typeof import("./objectCloudOrchestration").ObjectCloudOrchestration = null as any;
utilities.lazyLoad(exports, ["ObjectCloudOrchestration"], () => require("./objectCloudOrchestration"));

export { ObjectCredentialstoreDomaincontrollerArgs, ObjectCredentialstoreDomaincontrollerState } from "./objectCredentialstoreDomaincontroller";
export type ObjectCredentialstoreDomaincontroller = import("./objectCredentialstoreDomaincontroller").ObjectCredentialstoreDomaincontroller;
export const ObjectCredentialstoreDomaincontroller: typeof import("./objectCredentialstoreDomaincontroller").ObjectCredentialstoreDomaincontroller = null as any;
utilities.lazyLoad(exports, ["ObjectCredentialstoreDomaincontroller"], () => require("./objectCredentialstoreDomaincontroller"));

export { ObjectDiameterfilterProfileArgs, ObjectDiameterfilterProfileState } from "./objectDiameterfilterProfile";
export type ObjectDiameterfilterProfile = import("./objectDiameterfilterProfile").ObjectDiameterfilterProfile;
export const ObjectDiameterfilterProfile: typeof import("./objectDiameterfilterProfile").ObjectDiameterfilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectDiameterfilterProfile"], () => require("./objectDiameterfilterProfile"));

export { ObjectDlpDatatypeArgs, ObjectDlpDatatypeState } from "./objectDlpDatatype";
export type ObjectDlpDatatype = import("./objectDlpDatatype").ObjectDlpDatatype;
export const ObjectDlpDatatype: typeof import("./objectDlpDatatype").ObjectDlpDatatype = null as any;
utilities.lazyLoad(exports, ["ObjectDlpDatatype"], () => require("./objectDlpDatatype"));

export { ObjectDlpDictionaryArgs, ObjectDlpDictionaryState } from "./objectDlpDictionary";
export type ObjectDlpDictionary = import("./objectDlpDictionary").ObjectDlpDictionary;
export const ObjectDlpDictionary: typeof import("./objectDlpDictionary").ObjectDlpDictionary = null as any;
utilities.lazyLoad(exports, ["ObjectDlpDictionary"], () => require("./objectDlpDictionary"));

export { ObjectDlpDictionaryEntriesArgs, ObjectDlpDictionaryEntriesState } from "./objectDlpDictionaryEntries";
export type ObjectDlpDictionaryEntries = import("./objectDlpDictionaryEntries").ObjectDlpDictionaryEntries;
export const ObjectDlpDictionaryEntries: typeof import("./objectDlpDictionaryEntries").ObjectDlpDictionaryEntries = null as any;
utilities.lazyLoad(exports, ["ObjectDlpDictionaryEntries"], () => require("./objectDlpDictionaryEntries"));

export { ObjectDlpFilepatternArgs, ObjectDlpFilepatternState } from "./objectDlpFilepattern";
export type ObjectDlpFilepattern = import("./objectDlpFilepattern").ObjectDlpFilepattern;
export const ObjectDlpFilepattern: typeof import("./objectDlpFilepattern").ObjectDlpFilepattern = null as any;
utilities.lazyLoad(exports, ["ObjectDlpFilepattern"], () => require("./objectDlpFilepattern"));

export { ObjectDlpFilepatternEntriesArgs, ObjectDlpFilepatternEntriesState } from "./objectDlpFilepatternEntries";
export type ObjectDlpFilepatternEntries = import("./objectDlpFilepatternEntries").ObjectDlpFilepatternEntries;
export const ObjectDlpFilepatternEntries: typeof import("./objectDlpFilepatternEntries").ObjectDlpFilepatternEntries = null as any;
utilities.lazyLoad(exports, ["ObjectDlpFilepatternEntries"], () => require("./objectDlpFilepatternEntries"));

export { ObjectDlpFpsensitivityArgs, ObjectDlpFpsensitivityState } from "./objectDlpFpsensitivity";
export type ObjectDlpFpsensitivity = import("./objectDlpFpsensitivity").ObjectDlpFpsensitivity;
export const ObjectDlpFpsensitivity: typeof import("./objectDlpFpsensitivity").ObjectDlpFpsensitivity = null as any;
utilities.lazyLoad(exports, ["ObjectDlpFpsensitivity"], () => require("./objectDlpFpsensitivity"));

export { ObjectDlpProfileArgs, ObjectDlpProfileState } from "./objectDlpProfile";
export type ObjectDlpProfile = import("./objectDlpProfile").ObjectDlpProfile;
export const ObjectDlpProfile: typeof import("./objectDlpProfile").ObjectDlpProfile = null as any;
utilities.lazyLoad(exports, ["ObjectDlpProfile"], () => require("./objectDlpProfile"));

export { ObjectDlpProfileRuleArgs, ObjectDlpProfileRuleState } from "./objectDlpProfileRule";
export type ObjectDlpProfileRule = import("./objectDlpProfileRule").ObjectDlpProfileRule;
export const ObjectDlpProfileRule: typeof import("./objectDlpProfileRule").ObjectDlpProfileRule = null as any;
utilities.lazyLoad(exports, ["ObjectDlpProfileRule"], () => require("./objectDlpProfileRule"));

export { ObjectDlpProfileRuleMoveArgs, ObjectDlpProfileRuleMoveState } from "./objectDlpProfileRuleMove";
export type ObjectDlpProfileRuleMove = import("./objectDlpProfileRuleMove").ObjectDlpProfileRuleMove;
export const ObjectDlpProfileRuleMove: typeof import("./objectDlpProfileRuleMove").ObjectDlpProfileRuleMove = null as any;
utilities.lazyLoad(exports, ["ObjectDlpProfileRuleMove"], () => require("./objectDlpProfileRuleMove"));

export { ObjectDlpSensitivityArgs, ObjectDlpSensitivityState } from "./objectDlpSensitivity";
export type ObjectDlpSensitivity = import("./objectDlpSensitivity").ObjectDlpSensitivity;
export const ObjectDlpSensitivity: typeof import("./objectDlpSensitivity").ObjectDlpSensitivity = null as any;
utilities.lazyLoad(exports, ["ObjectDlpSensitivity"], () => require("./objectDlpSensitivity"));

export { ObjectDlpSensorArgs, ObjectDlpSensorState } from "./objectDlpSensor";
export type ObjectDlpSensor = import("./objectDlpSensor").ObjectDlpSensor;
export const ObjectDlpSensor: typeof import("./objectDlpSensor").ObjectDlpSensor = null as any;
utilities.lazyLoad(exports, ["ObjectDlpSensor"], () => require("./objectDlpSensor"));

export { ObjectDlpSensorEntriesArgs, ObjectDlpSensorEntriesState } from "./objectDlpSensorEntries";
export type ObjectDlpSensorEntries = import("./objectDlpSensorEntries").ObjectDlpSensorEntries;
export const ObjectDlpSensorEntries: typeof import("./objectDlpSensorEntries").ObjectDlpSensorEntries = null as any;
utilities.lazyLoad(exports, ["ObjectDlpSensorEntries"], () => require("./objectDlpSensorEntries"));

export { ObjectDnsfilterDomainfilterArgs, ObjectDnsfilterDomainfilterState } from "./objectDnsfilterDomainfilter";
export type ObjectDnsfilterDomainfilter = import("./objectDnsfilterDomainfilter").ObjectDnsfilterDomainfilter;
export const ObjectDnsfilterDomainfilter: typeof import("./objectDnsfilterDomainfilter").ObjectDnsfilterDomainfilter = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterDomainfilter"], () => require("./objectDnsfilterDomainfilter"));

export { ObjectDnsfilterDomainfilterEntriesArgs, ObjectDnsfilterDomainfilterEntriesState } from "./objectDnsfilterDomainfilterEntries";
export type ObjectDnsfilterDomainfilterEntries = import("./objectDnsfilterDomainfilterEntries").ObjectDnsfilterDomainfilterEntries;
export const ObjectDnsfilterDomainfilterEntries: typeof import("./objectDnsfilterDomainfilterEntries").ObjectDnsfilterDomainfilterEntries = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterDomainfilterEntries"], () => require("./objectDnsfilterDomainfilterEntries"));

export { ObjectDnsfilterDomainfilterEntriesMoveArgs, ObjectDnsfilterDomainfilterEntriesMoveState } from "./objectDnsfilterDomainfilterEntriesMove";
export type ObjectDnsfilterDomainfilterEntriesMove = import("./objectDnsfilterDomainfilterEntriesMove").ObjectDnsfilterDomainfilterEntriesMove;
export const ObjectDnsfilterDomainfilterEntriesMove: typeof import("./objectDnsfilterDomainfilterEntriesMove").ObjectDnsfilterDomainfilterEntriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterDomainfilterEntriesMove"], () => require("./objectDnsfilterDomainfilterEntriesMove"));

export { ObjectDnsfilterProfileArgs, ObjectDnsfilterProfileState } from "./objectDnsfilterProfile";
export type ObjectDnsfilterProfile = import("./objectDnsfilterProfile").ObjectDnsfilterProfile;
export const ObjectDnsfilterProfile: typeof import("./objectDnsfilterProfile").ObjectDnsfilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterProfile"], () => require("./objectDnsfilterProfile"));

export { ObjectDnsfilterProfileDnstranslationArgs, ObjectDnsfilterProfileDnstranslationState } from "./objectDnsfilterProfileDnstranslation";
export type ObjectDnsfilterProfileDnstranslation = import("./objectDnsfilterProfileDnstranslation").ObjectDnsfilterProfileDnstranslation;
export const ObjectDnsfilterProfileDnstranslation: typeof import("./objectDnsfilterProfileDnstranslation").ObjectDnsfilterProfileDnstranslation = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterProfileDnstranslation"], () => require("./objectDnsfilterProfileDnstranslation"));

export { ObjectDnsfilterProfileDomainfilterArgs, ObjectDnsfilterProfileDomainfilterState } from "./objectDnsfilterProfileDomainfilter";
export type ObjectDnsfilterProfileDomainfilter = import("./objectDnsfilterProfileDomainfilter").ObjectDnsfilterProfileDomainfilter;
export const ObjectDnsfilterProfileDomainfilter: typeof import("./objectDnsfilterProfileDomainfilter").ObjectDnsfilterProfileDomainfilter = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterProfileDomainfilter"], () => require("./objectDnsfilterProfileDomainfilter"));

export { ObjectDnsfilterProfileFtgddnsArgs, ObjectDnsfilterProfileFtgddnsState } from "./objectDnsfilterProfileFtgddns";
export type ObjectDnsfilterProfileFtgddns = import("./objectDnsfilterProfileFtgddns").ObjectDnsfilterProfileFtgddns;
export const ObjectDnsfilterProfileFtgddns: typeof import("./objectDnsfilterProfileFtgddns").ObjectDnsfilterProfileFtgddns = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterProfileFtgddns"], () => require("./objectDnsfilterProfileFtgddns"));

export { ObjectDnsfilterProfileFtgddnsFiltersArgs, ObjectDnsfilterProfileFtgddnsFiltersState } from "./objectDnsfilterProfileFtgddnsFilters";
export type ObjectDnsfilterProfileFtgddnsFilters = import("./objectDnsfilterProfileFtgddnsFilters").ObjectDnsfilterProfileFtgddnsFilters;
export const ObjectDnsfilterProfileFtgddnsFilters: typeof import("./objectDnsfilterProfileFtgddnsFilters").ObjectDnsfilterProfileFtgddnsFilters = null as any;
utilities.lazyLoad(exports, ["ObjectDnsfilterProfileFtgddnsFilters"], () => require("./objectDnsfilterProfileFtgddnsFilters"));

export { ObjectDynamicAddressArgs, ObjectDynamicAddressState } from "./objectDynamicAddress";
export type ObjectDynamicAddress = import("./objectDynamicAddress").ObjectDynamicAddress;
export const ObjectDynamicAddress: typeof import("./objectDynamicAddress").ObjectDynamicAddress = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicAddress"], () => require("./objectDynamicAddress"));

export { ObjectDynamicAddressDynamicAddrMappingArgs, ObjectDynamicAddressDynamicAddrMappingState } from "./objectDynamicAddressDynamicAddrMapping";
export type ObjectDynamicAddressDynamicAddrMapping = import("./objectDynamicAddressDynamicAddrMapping").ObjectDynamicAddressDynamicAddrMapping;
export const ObjectDynamicAddressDynamicAddrMapping: typeof import("./objectDynamicAddressDynamicAddrMapping").ObjectDynamicAddressDynamicAddrMapping = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicAddressDynamicAddrMapping"], () => require("./objectDynamicAddressDynamicAddrMapping"));

export { ObjectDynamicCertificateLocalArgs, ObjectDynamicCertificateLocalState } from "./objectDynamicCertificateLocal";
export type ObjectDynamicCertificateLocal = import("./objectDynamicCertificateLocal").ObjectDynamicCertificateLocal;
export const ObjectDynamicCertificateLocal: typeof import("./objectDynamicCertificateLocal").ObjectDynamicCertificateLocal = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicCertificateLocal"], () => require("./objectDynamicCertificateLocal"));

export { ObjectDynamicInterfaceArgs, ObjectDynamicInterfaceState } from "./objectDynamicInterface";
export type ObjectDynamicInterface = import("./objectDynamicInterface").ObjectDynamicInterface;
export const ObjectDynamicInterface: typeof import("./objectDynamicInterface").ObjectDynamicInterface = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicInterface"], () => require("./objectDynamicInterface"));

export { ObjectDynamicInterfacePlatformMappingArgs, ObjectDynamicInterfacePlatformMappingState } from "./objectDynamicInterfacePlatformMapping";
export type ObjectDynamicInterfacePlatformMapping = import("./objectDynamicInterfacePlatformMapping").ObjectDynamicInterfacePlatformMapping;
export const ObjectDynamicInterfacePlatformMapping: typeof import("./objectDynamicInterfacePlatformMapping").ObjectDynamicInterfacePlatformMapping = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicInterfacePlatformMapping"], () => require("./objectDynamicInterfacePlatformMapping"));

export { ObjectDynamicIppoolArgs, ObjectDynamicIppoolState } from "./objectDynamicIppool";
export type ObjectDynamicIppool = import("./objectDynamicIppool").ObjectDynamicIppool;
export const ObjectDynamicIppool: typeof import("./objectDynamicIppool").ObjectDynamicIppool = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicIppool"], () => require("./objectDynamicIppool"));

export { ObjectDynamicMulticastInterfaceArgs, ObjectDynamicMulticastInterfaceState } from "./objectDynamicMulticastInterface";
export type ObjectDynamicMulticastInterface = import("./objectDynamicMulticastInterface").ObjectDynamicMulticastInterface;
export const ObjectDynamicMulticastInterface: typeof import("./objectDynamicMulticastInterface").ObjectDynamicMulticastInterface = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicMulticastInterface"], () => require("./objectDynamicMulticastInterface"));

export { ObjectDynamicVipArgs, ObjectDynamicVipState } from "./objectDynamicVip";
export type ObjectDynamicVip = import("./objectDynamicVip").ObjectDynamicVip;
export const ObjectDynamicVip: typeof import("./objectDynamicVip").ObjectDynamicVip = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicVip"], () => require("./objectDynamicVip"));

export { ObjectDynamicVpntunnelArgs, ObjectDynamicVpntunnelState } from "./objectDynamicVpntunnel";
export type ObjectDynamicVpntunnel = import("./objectDynamicVpntunnel").ObjectDynamicVpntunnel;
export const ObjectDynamicVpntunnel: typeof import("./objectDynamicVpntunnel").ObjectDynamicVpntunnel = null as any;
utilities.lazyLoad(exports, ["ObjectDynamicVpntunnel"], () => require("./objectDynamicVpntunnel"));

export { ObjectEmailfilterBlockallowlistArgs, ObjectEmailfilterBlockallowlistState } from "./objectEmailfilterBlockallowlist";
export type ObjectEmailfilterBlockallowlist = import("./objectEmailfilterBlockallowlist").ObjectEmailfilterBlockallowlist;
export const ObjectEmailfilterBlockallowlist: typeof import("./objectEmailfilterBlockallowlist").ObjectEmailfilterBlockallowlist = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBlockallowlist"], () => require("./objectEmailfilterBlockallowlist"));

export { ObjectEmailfilterBlockallowlistEntriesArgs, ObjectEmailfilterBlockallowlistEntriesState } from "./objectEmailfilterBlockallowlistEntries";
export type ObjectEmailfilterBlockallowlistEntries = import("./objectEmailfilterBlockallowlistEntries").ObjectEmailfilterBlockallowlistEntries;
export const ObjectEmailfilterBlockallowlistEntries: typeof import("./objectEmailfilterBlockallowlistEntries").ObjectEmailfilterBlockallowlistEntries = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBlockallowlistEntries"], () => require("./objectEmailfilterBlockallowlistEntries"));

export { ObjectEmailfilterBlockallowlistEntriesMoveArgs, ObjectEmailfilterBlockallowlistEntriesMoveState } from "./objectEmailfilterBlockallowlistEntriesMove";
export type ObjectEmailfilterBlockallowlistEntriesMove = import("./objectEmailfilterBlockallowlistEntriesMove").ObjectEmailfilterBlockallowlistEntriesMove;
export const ObjectEmailfilterBlockallowlistEntriesMove: typeof import("./objectEmailfilterBlockallowlistEntriesMove").ObjectEmailfilterBlockallowlistEntriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBlockallowlistEntriesMove"], () => require("./objectEmailfilterBlockallowlistEntriesMove"));

export { ObjectEmailfilterBwlArgs, ObjectEmailfilterBwlState } from "./objectEmailfilterBwl";
export type ObjectEmailfilterBwl = import("./objectEmailfilterBwl").ObjectEmailfilterBwl;
export const ObjectEmailfilterBwl: typeof import("./objectEmailfilterBwl").ObjectEmailfilterBwl = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBwl"], () => require("./objectEmailfilterBwl"));

export { ObjectEmailfilterBwlEntriesArgs, ObjectEmailfilterBwlEntriesState } from "./objectEmailfilterBwlEntries";
export type ObjectEmailfilterBwlEntries = import("./objectEmailfilterBwlEntries").ObjectEmailfilterBwlEntries;
export const ObjectEmailfilterBwlEntries: typeof import("./objectEmailfilterBwlEntries").ObjectEmailfilterBwlEntries = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBwlEntries"], () => require("./objectEmailfilterBwlEntries"));

export { ObjectEmailfilterBwlEntriesMoveArgs, ObjectEmailfilterBwlEntriesMoveState } from "./objectEmailfilterBwlEntriesMove";
export type ObjectEmailfilterBwlEntriesMove = import("./objectEmailfilterBwlEntriesMove").ObjectEmailfilterBwlEntriesMove;
export const ObjectEmailfilterBwlEntriesMove: typeof import("./objectEmailfilterBwlEntriesMove").ObjectEmailfilterBwlEntriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBwlEntriesMove"], () => require("./objectEmailfilterBwlEntriesMove"));

export { ObjectEmailfilterBwordArgs, ObjectEmailfilterBwordState } from "./objectEmailfilterBword";
export type ObjectEmailfilterBword = import("./objectEmailfilterBword").ObjectEmailfilterBword;
export const ObjectEmailfilterBword: typeof import("./objectEmailfilterBword").ObjectEmailfilterBword = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBword"], () => require("./objectEmailfilterBword"));

export { ObjectEmailfilterBwordEntriesArgs, ObjectEmailfilterBwordEntriesState } from "./objectEmailfilterBwordEntries";
export type ObjectEmailfilterBwordEntries = import("./objectEmailfilterBwordEntries").ObjectEmailfilterBwordEntries;
export const ObjectEmailfilterBwordEntries: typeof import("./objectEmailfilterBwordEntries").ObjectEmailfilterBwordEntries = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterBwordEntries"], () => require("./objectEmailfilterBwordEntries"));

export { ObjectEmailfilterDnsblArgs, ObjectEmailfilterDnsblState } from "./objectEmailfilterDnsbl";
export type ObjectEmailfilterDnsbl = import("./objectEmailfilterDnsbl").ObjectEmailfilterDnsbl;
export const ObjectEmailfilterDnsbl: typeof import("./objectEmailfilterDnsbl").ObjectEmailfilterDnsbl = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterDnsbl"], () => require("./objectEmailfilterDnsbl"));

export { ObjectEmailfilterDnsblEntriesArgs, ObjectEmailfilterDnsblEntriesState } from "./objectEmailfilterDnsblEntries";
export type ObjectEmailfilterDnsblEntries = import("./objectEmailfilterDnsblEntries").ObjectEmailfilterDnsblEntries;
export const ObjectEmailfilterDnsblEntries: typeof import("./objectEmailfilterDnsblEntries").ObjectEmailfilterDnsblEntries = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterDnsblEntries"], () => require("./objectEmailfilterDnsblEntries"));

export { ObjectEmailfilterFortishieldArgs, ObjectEmailfilterFortishieldState } from "./objectEmailfilterFortishield";
export type ObjectEmailfilterFortishield = import("./objectEmailfilterFortishield").ObjectEmailfilterFortishield;
export const ObjectEmailfilterFortishield: typeof import("./objectEmailfilterFortishield").ObjectEmailfilterFortishield = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterFortishield"], () => require("./objectEmailfilterFortishield"));

export { ObjectEmailfilterIptrustArgs, ObjectEmailfilterIptrustState } from "./objectEmailfilterIptrust";
export type ObjectEmailfilterIptrust = import("./objectEmailfilterIptrust").ObjectEmailfilterIptrust;
export const ObjectEmailfilterIptrust: typeof import("./objectEmailfilterIptrust").ObjectEmailfilterIptrust = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterIptrust"], () => require("./objectEmailfilterIptrust"));

export { ObjectEmailfilterIptrustEntriesArgs, ObjectEmailfilterIptrustEntriesState } from "./objectEmailfilterIptrustEntries";
export type ObjectEmailfilterIptrustEntries = import("./objectEmailfilterIptrustEntries").ObjectEmailfilterIptrustEntries;
export const ObjectEmailfilterIptrustEntries: typeof import("./objectEmailfilterIptrustEntries").ObjectEmailfilterIptrustEntries = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterIptrustEntries"], () => require("./objectEmailfilterIptrustEntries"));

export { ObjectEmailfilterMheaderArgs, ObjectEmailfilterMheaderState } from "./objectEmailfilterMheader";
export type ObjectEmailfilterMheader = import("./objectEmailfilterMheader").ObjectEmailfilterMheader;
export const ObjectEmailfilterMheader: typeof import("./objectEmailfilterMheader").ObjectEmailfilterMheader = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterMheader"], () => require("./objectEmailfilterMheader"));

export { ObjectEmailfilterMheaderEntriesArgs, ObjectEmailfilterMheaderEntriesState } from "./objectEmailfilterMheaderEntries";
export type ObjectEmailfilterMheaderEntries = import("./objectEmailfilterMheaderEntries").ObjectEmailfilterMheaderEntries;
export const ObjectEmailfilterMheaderEntries: typeof import("./objectEmailfilterMheaderEntries").ObjectEmailfilterMheaderEntries = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterMheaderEntries"], () => require("./objectEmailfilterMheaderEntries"));

export { ObjectEmailfilterOptionsArgs, ObjectEmailfilterOptionsState } from "./objectEmailfilterOptions";
export type ObjectEmailfilterOptions = import("./objectEmailfilterOptions").ObjectEmailfilterOptions;
export const ObjectEmailfilterOptions: typeof import("./objectEmailfilterOptions").ObjectEmailfilterOptions = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterOptions"], () => require("./objectEmailfilterOptions"));

export { ObjectEmailfilterProfileArgs, ObjectEmailfilterProfileState } from "./objectEmailfilterProfile";
export type ObjectEmailfilterProfile = import("./objectEmailfilterProfile").ObjectEmailfilterProfile;
export const ObjectEmailfilterProfile: typeof import("./objectEmailfilterProfile").ObjectEmailfilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterProfile"], () => require("./objectEmailfilterProfile"));

export { ObjectEmailfilterProfileGmailArgs, ObjectEmailfilterProfileGmailState } from "./objectEmailfilterProfileGmail";
export type ObjectEmailfilterProfileGmail = import("./objectEmailfilterProfileGmail").ObjectEmailfilterProfileGmail;
export const ObjectEmailfilterProfileGmail: typeof import("./objectEmailfilterProfileGmail").ObjectEmailfilterProfileGmail = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterProfileGmail"], () => require("./objectEmailfilterProfileGmail"));

export { ObjectEmailfilterProfileImapArgs, ObjectEmailfilterProfileImapState } from "./objectEmailfilterProfileImap";
export type ObjectEmailfilterProfileImap = import("./objectEmailfilterProfileImap").ObjectEmailfilterProfileImap;
export const ObjectEmailfilterProfileImap: typeof import("./objectEmailfilterProfileImap").ObjectEmailfilterProfileImap = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterProfileImap"], () => require("./objectEmailfilterProfileImap"));

export { ObjectEmailfilterProfileMapiArgs, ObjectEmailfilterProfileMapiState } from "./objectEmailfilterProfileMapi";
export type ObjectEmailfilterProfileMapi = import("./objectEmailfilterProfileMapi").ObjectEmailfilterProfileMapi;
export const ObjectEmailfilterProfileMapi: typeof import("./objectEmailfilterProfileMapi").ObjectEmailfilterProfileMapi = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterProfileMapi"], () => require("./objectEmailfilterProfileMapi"));

export { ObjectEmailfilterProfileMsnhotmailArgs, ObjectEmailfilterProfileMsnhotmailState } from "./objectEmailfilterProfileMsnhotmail";
export type ObjectEmailfilterProfileMsnhotmail = import("./objectEmailfilterProfileMsnhotmail").ObjectEmailfilterProfileMsnhotmail;
export const ObjectEmailfilterProfileMsnhotmail: typeof import("./objectEmailfilterProfileMsnhotmail").ObjectEmailfilterProfileMsnhotmail = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterProfileMsnhotmail"], () => require("./objectEmailfilterProfileMsnhotmail"));

export { ObjectEmailfilterProfilePop3Args, ObjectEmailfilterProfilePop3State } from "./objectEmailfilterProfilePop3";
export type ObjectEmailfilterProfilePop3 = import("./objectEmailfilterProfilePop3").ObjectEmailfilterProfilePop3;
export const ObjectEmailfilterProfilePop3: typeof import("./objectEmailfilterProfilePop3").ObjectEmailfilterProfilePop3 = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterProfilePop3"], () => require("./objectEmailfilterProfilePop3"));

export { ObjectEmailfilterProfileSmtpArgs, ObjectEmailfilterProfileSmtpState } from "./objectEmailfilterProfileSmtp";
export type ObjectEmailfilterProfileSmtp = import("./objectEmailfilterProfileSmtp").ObjectEmailfilterProfileSmtp;
export const ObjectEmailfilterProfileSmtp: typeof import("./objectEmailfilterProfileSmtp").ObjectEmailfilterProfileSmtp = null as any;
utilities.lazyLoad(exports, ["ObjectEmailfilterProfileSmtp"], () => require("./objectEmailfilterProfileSmtp"));

export { ObjectEndpointcontrolFctemsArgs, ObjectEndpointcontrolFctemsState } from "./objectEndpointcontrolFctems";
export type ObjectEndpointcontrolFctems = import("./objectEndpointcontrolFctems").ObjectEndpointcontrolFctems;
export const ObjectEndpointcontrolFctems: typeof import("./objectEndpointcontrolFctems").ObjectEndpointcontrolFctems = null as any;
utilities.lazyLoad(exports, ["ObjectEndpointcontrolFctems"], () => require("./objectEndpointcontrolFctems"));

export { ObjectExtendercontrollerDataplanArgs, ObjectExtendercontrollerDataplanState } from "./objectExtendercontrollerDataplan";
export type ObjectExtendercontrollerDataplan = import("./objectExtendercontrollerDataplan").ObjectExtendercontrollerDataplan;
export const ObjectExtendercontrollerDataplan: typeof import("./objectExtendercontrollerDataplan").ObjectExtendercontrollerDataplan = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerDataplan"], () => require("./objectExtendercontrollerDataplan"));

export { ObjectExtendercontrollerExtenderprofileArgs, ObjectExtendercontrollerExtenderprofileState } from "./objectExtendercontrollerExtenderprofile";
export type ObjectExtendercontrollerExtenderprofile = import("./objectExtendercontrollerExtenderprofile").ObjectExtendercontrollerExtenderprofile;
export const ObjectExtendercontrollerExtenderprofile: typeof import("./objectExtendercontrollerExtenderprofile").ObjectExtendercontrollerExtenderprofile = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofile"], () => require("./objectExtendercontrollerExtenderprofile"));

export { ObjectExtendercontrollerExtenderprofileCellularControllerreportArgs, ObjectExtendercontrollerExtenderprofileCellularControllerreportState } from "./objectExtendercontrollerExtenderprofileCellularControllerreport";
export type ObjectExtendercontrollerExtenderprofileCellularControllerreport = import("./objectExtendercontrollerExtenderprofileCellularControllerreport").ObjectExtendercontrollerExtenderprofileCellularControllerreport;
export const ObjectExtendercontrollerExtenderprofileCellularControllerreport: typeof import("./objectExtendercontrollerExtenderprofileCellularControllerreport").ObjectExtendercontrollerExtenderprofileCellularControllerreport = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularControllerreport"], () => require("./objectExtendercontrollerExtenderprofileCellularControllerreport"));

export { ObjectExtendercontrollerExtenderprofileCellularModem1Args, ObjectExtendercontrollerExtenderprofileCellularModem1State } from "./objectExtendercontrollerExtenderprofileCellularModem1";
export type ObjectExtendercontrollerExtenderprofileCellularModem1 = import("./objectExtendercontrollerExtenderprofileCellularModem1").ObjectExtendercontrollerExtenderprofileCellularModem1;
export const ObjectExtendercontrollerExtenderprofileCellularModem1: typeof import("./objectExtendercontrollerExtenderprofileCellularModem1").ObjectExtendercontrollerExtenderprofileCellularModem1 = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularModem1"], () => require("./objectExtendercontrollerExtenderprofileCellularModem1"));

export { ObjectExtendercontrollerExtenderprofileCellularModem1AutoswitchArgs, ObjectExtendercontrollerExtenderprofileCellularModem1AutoswitchState } from "./objectExtendercontrollerExtenderprofileCellularModem1Autoswitch";
export type ObjectExtendercontrollerExtenderprofileCellularModem1Autoswitch = import("./objectExtendercontrollerExtenderprofileCellularModem1Autoswitch").ObjectExtendercontrollerExtenderprofileCellularModem1Autoswitch;
export const ObjectExtendercontrollerExtenderprofileCellularModem1Autoswitch: typeof import("./objectExtendercontrollerExtenderprofileCellularModem1Autoswitch").ObjectExtendercontrollerExtenderprofileCellularModem1Autoswitch = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularModem1Autoswitch"], () => require("./objectExtendercontrollerExtenderprofileCellularModem1Autoswitch"));

export { ObjectExtendercontrollerExtenderprofileCellularModem2Args, ObjectExtendercontrollerExtenderprofileCellularModem2State } from "./objectExtendercontrollerExtenderprofileCellularModem2";
export type ObjectExtendercontrollerExtenderprofileCellularModem2 = import("./objectExtendercontrollerExtenderprofileCellularModem2").ObjectExtendercontrollerExtenderprofileCellularModem2;
export const ObjectExtendercontrollerExtenderprofileCellularModem2: typeof import("./objectExtendercontrollerExtenderprofileCellularModem2").ObjectExtendercontrollerExtenderprofileCellularModem2 = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularModem2"], () => require("./objectExtendercontrollerExtenderprofileCellularModem2"));

export { ObjectExtendercontrollerExtenderprofileCellularModem2AutoswitchArgs, ObjectExtendercontrollerExtenderprofileCellularModem2AutoswitchState } from "./objectExtendercontrollerExtenderprofileCellularModem2Autoswitch";
export type ObjectExtendercontrollerExtenderprofileCellularModem2Autoswitch = import("./objectExtendercontrollerExtenderprofileCellularModem2Autoswitch").ObjectExtendercontrollerExtenderprofileCellularModem2Autoswitch;
export const ObjectExtendercontrollerExtenderprofileCellularModem2Autoswitch: typeof import("./objectExtendercontrollerExtenderprofileCellularModem2Autoswitch").ObjectExtendercontrollerExtenderprofileCellularModem2Autoswitch = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularModem2Autoswitch"], () => require("./objectExtendercontrollerExtenderprofileCellularModem2Autoswitch"));

export { ObjectExtendercontrollerExtenderprofileCellularSmsnotificationArgs, ObjectExtendercontrollerExtenderprofileCellularSmsnotificationState } from "./objectExtendercontrollerExtenderprofileCellularSmsnotification";
export type ObjectExtendercontrollerExtenderprofileCellularSmsnotification = import("./objectExtendercontrollerExtenderprofileCellularSmsnotification").ObjectExtendercontrollerExtenderprofileCellularSmsnotification;
export const ObjectExtendercontrollerExtenderprofileCellularSmsnotification: typeof import("./objectExtendercontrollerExtenderprofileCellularSmsnotification").ObjectExtendercontrollerExtenderprofileCellularSmsnotification = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularSmsnotification"], () => require("./objectExtendercontrollerExtenderprofileCellularSmsnotification"));

export { ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlertArgs, ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlertState } from "./objectExtendercontrollerExtenderprofileCellularSmsnotificationAlert";
export type ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlert = import("./objectExtendercontrollerExtenderprofileCellularSmsnotificationAlert").ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlert;
export const ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlert: typeof import("./objectExtendercontrollerExtenderprofileCellularSmsnotificationAlert").ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlert = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlert"], () => require("./objectExtendercontrollerExtenderprofileCellularSmsnotificationAlert"));

export { ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverArgs, ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverState } from "./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver";
export type ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver = import("./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver").ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver;
export const ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver: typeof import("./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver").ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver"], () => require("./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver"));

export { ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMoveArgs, ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMoveState } from "./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove";
export type ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove = import("./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove").ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove;
export const ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove: typeof import("./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove").ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove"], () => require("./objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove"));

export { ObjectExtendercontrollerExtenderprofileLanextensionArgs, ObjectExtendercontrollerExtenderprofileLanextensionState } from "./objectExtendercontrollerExtenderprofileLanextension";
export type ObjectExtendercontrollerExtenderprofileLanextension = import("./objectExtendercontrollerExtenderprofileLanextension").ObjectExtendercontrollerExtenderprofileLanextension;
export const ObjectExtendercontrollerExtenderprofileLanextension: typeof import("./objectExtendercontrollerExtenderprofileLanextension").ObjectExtendercontrollerExtenderprofileLanextension = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileLanextension"], () => require("./objectExtendercontrollerExtenderprofileLanextension"));

export { ObjectExtendercontrollerExtenderprofileLanextensionBackhaulArgs, ObjectExtendercontrollerExtenderprofileLanextensionBackhaulState } from "./objectExtendercontrollerExtenderprofileLanextensionBackhaul";
export type ObjectExtendercontrollerExtenderprofileLanextensionBackhaul = import("./objectExtendercontrollerExtenderprofileLanextensionBackhaul").ObjectExtendercontrollerExtenderprofileLanextensionBackhaul;
export const ObjectExtendercontrollerExtenderprofileLanextensionBackhaul: typeof import("./objectExtendercontrollerExtenderprofileLanextensionBackhaul").ObjectExtendercontrollerExtenderprofileLanextensionBackhaul = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerExtenderprofileLanextensionBackhaul"], () => require("./objectExtendercontrollerExtenderprofileLanextensionBackhaul"));

export { ObjectExtendercontrollerSimProfileArgs, ObjectExtendercontrollerSimProfileState } from "./objectExtendercontrollerSimProfile";
export type ObjectExtendercontrollerSimProfile = import("./objectExtendercontrollerSimProfile").ObjectExtendercontrollerSimProfile;
export const ObjectExtendercontrollerSimProfile: typeof import("./objectExtendercontrollerSimProfile").ObjectExtendercontrollerSimProfile = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerSimProfile"], () => require("./objectExtendercontrollerSimProfile"));

export { ObjectExtendercontrollerSimProfileAutoswitchProfileArgs, ObjectExtendercontrollerSimProfileAutoswitchProfileState } from "./objectExtendercontrollerSimProfileAutoswitchProfile";
export type ObjectExtendercontrollerSimProfileAutoswitchProfile = import("./objectExtendercontrollerSimProfileAutoswitchProfile").ObjectExtendercontrollerSimProfileAutoswitchProfile;
export const ObjectExtendercontrollerSimProfileAutoswitchProfile: typeof import("./objectExtendercontrollerSimProfileAutoswitchProfile").ObjectExtendercontrollerSimProfileAutoswitchProfile = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerSimProfileAutoswitchProfile"], () => require("./objectExtendercontrollerSimProfileAutoswitchProfile"));

export { ObjectExtendercontrollerTemplateArgs, ObjectExtendercontrollerTemplateState } from "./objectExtendercontrollerTemplate";
export type ObjectExtendercontrollerTemplate = import("./objectExtendercontrollerTemplate").ObjectExtendercontrollerTemplate;
export const ObjectExtendercontrollerTemplate: typeof import("./objectExtendercontrollerTemplate").ObjectExtendercontrollerTemplate = null as any;
utilities.lazyLoad(exports, ["ObjectExtendercontrollerTemplate"], () => require("./objectExtendercontrollerTemplate"));

export { ObjectExtensioncontrollerDataplanArgs, ObjectExtensioncontrollerDataplanState } from "./objectExtensioncontrollerDataplan";
export type ObjectExtensioncontrollerDataplan = import("./objectExtensioncontrollerDataplan").ObjectExtensioncontrollerDataplan;
export const ObjectExtensioncontrollerDataplan: typeof import("./objectExtensioncontrollerDataplan").ObjectExtensioncontrollerDataplan = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerDataplan"], () => require("./objectExtensioncontrollerDataplan"));

export { ObjectExtensioncontrollerExtenderprofileArgs, ObjectExtensioncontrollerExtenderprofileState } from "./objectExtensioncontrollerExtenderprofile";
export type ObjectExtensioncontrollerExtenderprofile = import("./objectExtensioncontrollerExtenderprofile").ObjectExtensioncontrollerExtenderprofile;
export const ObjectExtensioncontrollerExtenderprofile: typeof import("./objectExtensioncontrollerExtenderprofile").ObjectExtensioncontrollerExtenderprofile = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofile"], () => require("./objectExtensioncontrollerExtenderprofile"));

export { ObjectExtensioncontrollerExtenderprofileCellularArgs, ObjectExtensioncontrollerExtenderprofileCellularState } from "./objectExtensioncontrollerExtenderprofileCellular";
export type ObjectExtensioncontrollerExtenderprofileCellular = import("./objectExtensioncontrollerExtenderprofileCellular").ObjectExtensioncontrollerExtenderprofileCellular;
export const ObjectExtensioncontrollerExtenderprofileCellular: typeof import("./objectExtensioncontrollerExtenderprofileCellular").ObjectExtensioncontrollerExtenderprofileCellular = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellular"], () => require("./objectExtensioncontrollerExtenderprofileCellular"));

export { ObjectExtensioncontrollerExtenderprofileCellularControllerreportArgs, ObjectExtensioncontrollerExtenderprofileCellularControllerreportState } from "./objectExtensioncontrollerExtenderprofileCellularControllerreport";
export type ObjectExtensioncontrollerExtenderprofileCellularControllerreport = import("./objectExtensioncontrollerExtenderprofileCellularControllerreport").ObjectExtensioncontrollerExtenderprofileCellularControllerreport;
export const ObjectExtensioncontrollerExtenderprofileCellularControllerreport: typeof import("./objectExtensioncontrollerExtenderprofileCellularControllerreport").ObjectExtensioncontrollerExtenderprofileCellularControllerreport = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularControllerreport"], () => require("./objectExtensioncontrollerExtenderprofileCellularControllerreport"));

export { ObjectExtensioncontrollerExtenderprofileCellularModem1Args, ObjectExtensioncontrollerExtenderprofileCellularModem1State } from "./objectExtensioncontrollerExtenderprofileCellularModem1";
export type ObjectExtensioncontrollerExtenderprofileCellularModem1 = import("./objectExtensioncontrollerExtenderprofileCellularModem1").ObjectExtensioncontrollerExtenderprofileCellularModem1;
export const ObjectExtensioncontrollerExtenderprofileCellularModem1: typeof import("./objectExtensioncontrollerExtenderprofileCellularModem1").ObjectExtensioncontrollerExtenderprofileCellularModem1 = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularModem1"], () => require("./objectExtensioncontrollerExtenderprofileCellularModem1"));

export { ObjectExtensioncontrollerExtenderprofileCellularModem1AutoswitchArgs, ObjectExtensioncontrollerExtenderprofileCellularModem1AutoswitchState } from "./objectExtensioncontrollerExtenderprofileCellularModem1Autoswitch";
export type ObjectExtensioncontrollerExtenderprofileCellularModem1Autoswitch = import("./objectExtensioncontrollerExtenderprofileCellularModem1Autoswitch").ObjectExtensioncontrollerExtenderprofileCellularModem1Autoswitch;
export const ObjectExtensioncontrollerExtenderprofileCellularModem1Autoswitch: typeof import("./objectExtensioncontrollerExtenderprofileCellularModem1Autoswitch").ObjectExtensioncontrollerExtenderprofileCellularModem1Autoswitch = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularModem1Autoswitch"], () => require("./objectExtensioncontrollerExtenderprofileCellularModem1Autoswitch"));

export { ObjectExtensioncontrollerExtenderprofileCellularModem2Args, ObjectExtensioncontrollerExtenderprofileCellularModem2State } from "./objectExtensioncontrollerExtenderprofileCellularModem2";
export type ObjectExtensioncontrollerExtenderprofileCellularModem2 = import("./objectExtensioncontrollerExtenderprofileCellularModem2").ObjectExtensioncontrollerExtenderprofileCellularModem2;
export const ObjectExtensioncontrollerExtenderprofileCellularModem2: typeof import("./objectExtensioncontrollerExtenderprofileCellularModem2").ObjectExtensioncontrollerExtenderprofileCellularModem2 = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularModem2"], () => require("./objectExtensioncontrollerExtenderprofileCellularModem2"));

export { ObjectExtensioncontrollerExtenderprofileCellularModem2AutoswitchArgs, ObjectExtensioncontrollerExtenderprofileCellularModem2AutoswitchState } from "./objectExtensioncontrollerExtenderprofileCellularModem2Autoswitch";
export type ObjectExtensioncontrollerExtenderprofileCellularModem2Autoswitch = import("./objectExtensioncontrollerExtenderprofileCellularModem2Autoswitch").ObjectExtensioncontrollerExtenderprofileCellularModem2Autoswitch;
export const ObjectExtensioncontrollerExtenderprofileCellularModem2Autoswitch: typeof import("./objectExtensioncontrollerExtenderprofileCellularModem2Autoswitch").ObjectExtensioncontrollerExtenderprofileCellularModem2Autoswitch = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularModem2Autoswitch"], () => require("./objectExtensioncontrollerExtenderprofileCellularModem2Autoswitch"));

export { ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationArgs, ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationState } from "./objectExtensioncontrollerExtenderprofileCellularSmsnotification";
export type ObjectExtensioncontrollerExtenderprofileCellularSmsnotification = import("./objectExtensioncontrollerExtenderprofileCellularSmsnotification").ObjectExtensioncontrollerExtenderprofileCellularSmsnotification;
export const ObjectExtensioncontrollerExtenderprofileCellularSmsnotification: typeof import("./objectExtensioncontrollerExtenderprofileCellularSmsnotification").ObjectExtensioncontrollerExtenderprofileCellularSmsnotification = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularSmsnotification"], () => require("./objectExtensioncontrollerExtenderprofileCellularSmsnotification"));

export { ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlertArgs, ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlertState } from "./objectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert";
export type ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert = import("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert").ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert;
export const ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert: typeof import("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert").ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert"], () => require("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert"));

export { ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverArgs, ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverState } from "./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver";
export type ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver = import("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver").ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver;
export const ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver: typeof import("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver").ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver"], () => require("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver"));

export { ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMoveArgs, ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMoveState } from "./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove";
export type ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove = import("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove").ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove;
export const ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove: typeof import("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove").ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove"], () => require("./objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove"));

export { ObjectExtensioncontrollerExtenderprofileLanextensionArgs, ObjectExtensioncontrollerExtenderprofileLanextensionState } from "./objectExtensioncontrollerExtenderprofileLanextension";
export type ObjectExtensioncontrollerExtenderprofileLanextension = import("./objectExtensioncontrollerExtenderprofileLanextension").ObjectExtensioncontrollerExtenderprofileLanextension;
export const ObjectExtensioncontrollerExtenderprofileLanextension: typeof import("./objectExtensioncontrollerExtenderprofileLanextension").ObjectExtensioncontrollerExtenderprofileLanextension = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileLanextension"], () => require("./objectExtensioncontrollerExtenderprofileLanextension"));

export { ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulArgs, ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulState } from "./objectExtensioncontrollerExtenderprofileLanextensionBackhaul";
export type ObjectExtensioncontrollerExtenderprofileLanextensionBackhaul = import("./objectExtensioncontrollerExtenderprofileLanextensionBackhaul").ObjectExtensioncontrollerExtenderprofileLanextensionBackhaul;
export const ObjectExtensioncontrollerExtenderprofileLanextensionBackhaul: typeof import("./objectExtensioncontrollerExtenderprofileLanextensionBackhaul").ObjectExtensioncontrollerExtenderprofileLanextensionBackhaul = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileLanextensionBackhaul"], () => require("./objectExtensioncontrollerExtenderprofileLanextensionBackhaul"));

export { ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMoveArgs, ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMoveState } from "./objectExtensioncontrollerExtenderprofileLanextensionBackhaulMove";
export type ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMove = import("./objectExtensioncontrollerExtenderprofileLanextensionBackhaulMove").ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMove;
export const ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMove: typeof import("./objectExtensioncontrollerExtenderprofileLanextensionBackhaulMove").ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMove = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMove"], () => require("./objectExtensioncontrollerExtenderprofileLanextensionBackhaulMove"));

export { ObjectExtensioncontrollerExtenderprofileWifiArgs, ObjectExtensioncontrollerExtenderprofileWifiState } from "./objectExtensioncontrollerExtenderprofileWifi";
export type ObjectExtensioncontrollerExtenderprofileWifi = import("./objectExtensioncontrollerExtenderprofileWifi").ObjectExtensioncontrollerExtenderprofileWifi;
export const ObjectExtensioncontrollerExtenderprofileWifi: typeof import("./objectExtensioncontrollerExtenderprofileWifi").ObjectExtensioncontrollerExtenderprofileWifi = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileWifi"], () => require("./objectExtensioncontrollerExtenderprofileWifi"));

export { ObjectExtensioncontrollerExtenderprofileWifiRadio1Args, ObjectExtensioncontrollerExtenderprofileWifiRadio1State } from "./objectExtensioncontrollerExtenderprofileWifiRadio1";
export type ObjectExtensioncontrollerExtenderprofileWifiRadio1 = import("./objectExtensioncontrollerExtenderprofileWifiRadio1").ObjectExtensioncontrollerExtenderprofileWifiRadio1;
export const ObjectExtensioncontrollerExtenderprofileWifiRadio1: typeof import("./objectExtensioncontrollerExtenderprofileWifiRadio1").ObjectExtensioncontrollerExtenderprofileWifiRadio1 = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileWifiRadio1"], () => require("./objectExtensioncontrollerExtenderprofileWifiRadio1"));

export { ObjectExtensioncontrollerExtenderprofileWifiRadio2Args, ObjectExtensioncontrollerExtenderprofileWifiRadio2State } from "./objectExtensioncontrollerExtenderprofileWifiRadio2";
export type ObjectExtensioncontrollerExtenderprofileWifiRadio2 = import("./objectExtensioncontrollerExtenderprofileWifiRadio2").ObjectExtensioncontrollerExtenderprofileWifiRadio2;
export const ObjectExtensioncontrollerExtenderprofileWifiRadio2: typeof import("./objectExtensioncontrollerExtenderprofileWifiRadio2").ObjectExtensioncontrollerExtenderprofileWifiRadio2 = null as any;
utilities.lazyLoad(exports, ["ObjectExtensioncontrollerExtenderprofileWifiRadio2"], () => require("./objectExtensioncontrollerExtenderprofileWifiRadio2"));

export { ObjectFilefilterProfileArgs, ObjectFilefilterProfileState } from "./objectFilefilterProfile";
export type ObjectFilefilterProfile = import("./objectFilefilterProfile").ObjectFilefilterProfile;
export const ObjectFilefilterProfile: typeof import("./objectFilefilterProfile").ObjectFilefilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectFilefilterProfile"], () => require("./objectFilefilterProfile"));

export { ObjectFilefilterProfileRulesArgs, ObjectFilefilterProfileRulesState } from "./objectFilefilterProfileRules";
export type ObjectFilefilterProfileRules = import("./objectFilefilterProfileRules").ObjectFilefilterProfileRules;
export const ObjectFilefilterProfileRules: typeof import("./objectFilefilterProfileRules").ObjectFilefilterProfileRules = null as any;
utilities.lazyLoad(exports, ["ObjectFilefilterProfileRules"], () => require("./objectFilefilterProfileRules"));

export { ObjectFilefilterProfileRulesMoveArgs, ObjectFilefilterProfileRulesMoveState } from "./objectFilefilterProfileRulesMove";
export type ObjectFilefilterProfileRulesMove = import("./objectFilefilterProfileRulesMove").ObjectFilefilterProfileRulesMove;
export const ObjectFilefilterProfileRulesMove: typeof import("./objectFilefilterProfileRulesMove").ObjectFilefilterProfileRulesMove = null as any;
utilities.lazyLoad(exports, ["ObjectFilefilterProfileRulesMove"], () => require("./objectFilefilterProfileRulesMove"));

export { ObjectFirewallAccessproxyArgs, ObjectFirewallAccessproxyState } from "./objectFirewallAccessproxy";
export type ObjectFirewallAccessproxy = import("./objectFirewallAccessproxy").ObjectFirewallAccessproxy;
export const ObjectFirewallAccessproxy: typeof import("./objectFirewallAccessproxy").ObjectFirewallAccessproxy = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy"], () => require("./objectFirewallAccessproxy"));

export { ObjectFirewallAccessproxy6Args, ObjectFirewallAccessproxy6State } from "./objectFirewallAccessproxy6";
export type ObjectFirewallAccessproxy6 = import("./objectFirewallAccessproxy6").ObjectFirewallAccessproxy6;
export const ObjectFirewallAccessproxy6: typeof import("./objectFirewallAccessproxy6").ObjectFirewallAccessproxy6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6"], () => require("./objectFirewallAccessproxy6"));

export { ObjectFirewallAccessproxy6ApigatewayArgs, ObjectFirewallAccessproxy6ApigatewayState } from "./objectFirewallAccessproxy6Apigateway";
export type ObjectFirewallAccessproxy6Apigateway = import("./objectFirewallAccessproxy6Apigateway").ObjectFirewallAccessproxy6Apigateway;
export const ObjectFirewallAccessproxy6Apigateway: typeof import("./objectFirewallAccessproxy6Apigateway").ObjectFirewallAccessproxy6Apigateway = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6Apigateway"], () => require("./objectFirewallAccessproxy6Apigateway"));

export { ObjectFirewallAccessproxy6Apigateway6Args, ObjectFirewallAccessproxy6Apigateway6State } from "./objectFirewallAccessproxy6Apigateway6";
export type ObjectFirewallAccessproxy6Apigateway6 = import("./objectFirewallAccessproxy6Apigateway6").ObjectFirewallAccessproxy6Apigateway6;
export const ObjectFirewallAccessproxy6Apigateway6: typeof import("./objectFirewallAccessproxy6Apigateway6").ObjectFirewallAccessproxy6Apigateway6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6Apigateway6"], () => require("./objectFirewallAccessproxy6Apigateway6"));

export { ObjectFirewallAccessproxy6Apigateway6QuicArgs, ObjectFirewallAccessproxy6Apigateway6QuicState } from "./objectFirewallAccessproxy6Apigateway6Quic";
export type ObjectFirewallAccessproxy6Apigateway6Quic = import("./objectFirewallAccessproxy6Apigateway6Quic").ObjectFirewallAccessproxy6Apigateway6Quic;
export const ObjectFirewallAccessproxy6Apigateway6Quic: typeof import("./objectFirewallAccessproxy6Apigateway6Quic").ObjectFirewallAccessproxy6Apigateway6Quic = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6Apigateway6Quic"], () => require("./objectFirewallAccessproxy6Apigateway6Quic"));

export { ObjectFirewallAccessproxy6Apigateway6RealserversArgs, ObjectFirewallAccessproxy6Apigateway6RealserversState } from "./objectFirewallAccessproxy6Apigateway6Realservers";
export type ObjectFirewallAccessproxy6Apigateway6Realservers = import("./objectFirewallAccessproxy6Apigateway6Realservers").ObjectFirewallAccessproxy6Apigateway6Realservers;
export const ObjectFirewallAccessproxy6Apigateway6Realservers: typeof import("./objectFirewallAccessproxy6Apigateway6Realservers").ObjectFirewallAccessproxy6Apigateway6Realservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6Apigateway6Realservers"], () => require("./objectFirewallAccessproxy6Apigateway6Realservers"));

export { ObjectFirewallAccessproxy6Apigateway6SslciphersuitesArgs, ObjectFirewallAccessproxy6Apigateway6SslciphersuitesState } from "./objectFirewallAccessproxy6Apigateway6Sslciphersuites";
export type ObjectFirewallAccessproxy6Apigateway6Sslciphersuites = import("./objectFirewallAccessproxy6Apigateway6Sslciphersuites").ObjectFirewallAccessproxy6Apigateway6Sslciphersuites;
export const ObjectFirewallAccessproxy6Apigateway6Sslciphersuites: typeof import("./objectFirewallAccessproxy6Apigateway6Sslciphersuites").ObjectFirewallAccessproxy6Apigateway6Sslciphersuites = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6Apigateway6Sslciphersuites"], () => require("./objectFirewallAccessproxy6Apigateway6Sslciphersuites"));

export { ObjectFirewallAccessproxy6ApigatewayQuicArgs, ObjectFirewallAccessproxy6ApigatewayQuicState } from "./objectFirewallAccessproxy6ApigatewayQuic";
export type ObjectFirewallAccessproxy6ApigatewayQuic = import("./objectFirewallAccessproxy6ApigatewayQuic").ObjectFirewallAccessproxy6ApigatewayQuic;
export const ObjectFirewallAccessproxy6ApigatewayQuic: typeof import("./objectFirewallAccessproxy6ApigatewayQuic").ObjectFirewallAccessproxy6ApigatewayQuic = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6ApigatewayQuic"], () => require("./objectFirewallAccessproxy6ApigatewayQuic"));

export { ObjectFirewallAccessproxy6ApigatewayRealserversArgs, ObjectFirewallAccessproxy6ApigatewayRealserversState } from "./objectFirewallAccessproxy6ApigatewayRealservers";
export type ObjectFirewallAccessproxy6ApigatewayRealservers = import("./objectFirewallAccessproxy6ApigatewayRealservers").ObjectFirewallAccessproxy6ApigatewayRealservers;
export const ObjectFirewallAccessproxy6ApigatewayRealservers: typeof import("./objectFirewallAccessproxy6ApigatewayRealservers").ObjectFirewallAccessproxy6ApigatewayRealservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6ApigatewayRealservers"], () => require("./objectFirewallAccessproxy6ApigatewayRealservers"));

export { ObjectFirewallAccessproxy6ApigatewaySslciphersuitesArgs, ObjectFirewallAccessproxy6ApigatewaySslciphersuitesState } from "./objectFirewallAccessproxy6ApigatewaySslciphersuites";
export type ObjectFirewallAccessproxy6ApigatewaySslciphersuites = import("./objectFirewallAccessproxy6ApigatewaySslciphersuites").ObjectFirewallAccessproxy6ApigatewaySslciphersuites;
export const ObjectFirewallAccessproxy6ApigatewaySslciphersuites: typeof import("./objectFirewallAccessproxy6ApigatewaySslciphersuites").ObjectFirewallAccessproxy6ApigatewaySslciphersuites = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6ApigatewaySslciphersuites"], () => require("./objectFirewallAccessproxy6ApigatewaySslciphersuites"));

export { ObjectFirewallAccessproxy6MoveArgs, ObjectFirewallAccessproxy6MoveState } from "./objectFirewallAccessproxy6Move";
export type ObjectFirewallAccessproxy6Move = import("./objectFirewallAccessproxy6Move").ObjectFirewallAccessproxy6Move;
export const ObjectFirewallAccessproxy6Move: typeof import("./objectFirewallAccessproxy6Move").ObjectFirewallAccessproxy6Move = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxy6Move"], () => require("./objectFirewallAccessproxy6Move"));

export { ObjectFirewallAccessproxyApigatewayArgs, ObjectFirewallAccessproxyApigatewayState } from "./objectFirewallAccessproxyApigateway";
export type ObjectFirewallAccessproxyApigateway = import("./objectFirewallAccessproxyApigateway").ObjectFirewallAccessproxyApigateway;
export const ObjectFirewallAccessproxyApigateway: typeof import("./objectFirewallAccessproxyApigateway").ObjectFirewallAccessproxyApigateway = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigateway"], () => require("./objectFirewallAccessproxyApigateway"));

export { ObjectFirewallAccessproxyApigateway6Args, ObjectFirewallAccessproxyApigateway6State } from "./objectFirewallAccessproxyApigateway6";
export type ObjectFirewallAccessproxyApigateway6 = import("./objectFirewallAccessproxyApigateway6").ObjectFirewallAccessproxyApigateway6;
export const ObjectFirewallAccessproxyApigateway6: typeof import("./objectFirewallAccessproxyApigateway6").ObjectFirewallAccessproxyApigateway6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigateway6"], () => require("./objectFirewallAccessproxyApigateway6"));

export { ObjectFirewallAccessproxyApigateway6QuicArgs, ObjectFirewallAccessproxyApigateway6QuicState } from "./objectFirewallAccessproxyApigateway6Quic";
export type ObjectFirewallAccessproxyApigateway6Quic = import("./objectFirewallAccessproxyApigateway6Quic").ObjectFirewallAccessproxyApigateway6Quic;
export const ObjectFirewallAccessproxyApigateway6Quic: typeof import("./objectFirewallAccessproxyApigateway6Quic").ObjectFirewallAccessproxyApigateway6Quic = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigateway6Quic"], () => require("./objectFirewallAccessproxyApigateway6Quic"));

export { ObjectFirewallAccessproxyApigateway6RealserversArgs, ObjectFirewallAccessproxyApigateway6RealserversState } from "./objectFirewallAccessproxyApigateway6Realservers";
export type ObjectFirewallAccessproxyApigateway6Realservers = import("./objectFirewallAccessproxyApigateway6Realservers").ObjectFirewallAccessproxyApigateway6Realservers;
export const ObjectFirewallAccessproxyApigateway6Realservers: typeof import("./objectFirewallAccessproxyApigateway6Realservers").ObjectFirewallAccessproxyApigateway6Realservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigateway6Realservers"], () => require("./objectFirewallAccessproxyApigateway6Realservers"));

export { ObjectFirewallAccessproxyApigateway6SslciphersuitesArgs, ObjectFirewallAccessproxyApigateway6SslciphersuitesState } from "./objectFirewallAccessproxyApigateway6Sslciphersuites";
export type ObjectFirewallAccessproxyApigateway6Sslciphersuites = import("./objectFirewallAccessproxyApigateway6Sslciphersuites").ObjectFirewallAccessproxyApigateway6Sslciphersuites;
export const ObjectFirewallAccessproxyApigateway6Sslciphersuites: typeof import("./objectFirewallAccessproxyApigateway6Sslciphersuites").ObjectFirewallAccessproxyApigateway6Sslciphersuites = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigateway6Sslciphersuites"], () => require("./objectFirewallAccessproxyApigateway6Sslciphersuites"));

export { ObjectFirewallAccessproxyApigatewayQuicArgs, ObjectFirewallAccessproxyApigatewayQuicState } from "./objectFirewallAccessproxyApigatewayQuic";
export type ObjectFirewallAccessproxyApigatewayQuic = import("./objectFirewallAccessproxyApigatewayQuic").ObjectFirewallAccessproxyApigatewayQuic;
export const ObjectFirewallAccessproxyApigatewayQuic: typeof import("./objectFirewallAccessproxyApigatewayQuic").ObjectFirewallAccessproxyApigatewayQuic = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigatewayQuic"], () => require("./objectFirewallAccessproxyApigatewayQuic"));

export { ObjectFirewallAccessproxyApigatewayRealserversArgs, ObjectFirewallAccessproxyApigatewayRealserversState } from "./objectFirewallAccessproxyApigatewayRealservers";
export type ObjectFirewallAccessproxyApigatewayRealservers = import("./objectFirewallAccessproxyApigatewayRealservers").ObjectFirewallAccessproxyApigatewayRealservers;
export const ObjectFirewallAccessproxyApigatewayRealservers: typeof import("./objectFirewallAccessproxyApigatewayRealservers").ObjectFirewallAccessproxyApigatewayRealservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigatewayRealservers"], () => require("./objectFirewallAccessproxyApigatewayRealservers"));

export { ObjectFirewallAccessproxyApigatewaySslciphersuitesArgs, ObjectFirewallAccessproxyApigatewaySslciphersuitesState } from "./objectFirewallAccessproxyApigatewaySslciphersuites";
export type ObjectFirewallAccessproxyApigatewaySslciphersuites = import("./objectFirewallAccessproxyApigatewaySslciphersuites").ObjectFirewallAccessproxyApigatewaySslciphersuites;
export const ObjectFirewallAccessproxyApigatewaySslciphersuites: typeof import("./objectFirewallAccessproxyApigatewaySslciphersuites").ObjectFirewallAccessproxyApigatewaySslciphersuites = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyApigatewaySslciphersuites"], () => require("./objectFirewallAccessproxyApigatewaySslciphersuites"));

export { ObjectFirewallAccessproxyMoveArgs, ObjectFirewallAccessproxyMoveState } from "./objectFirewallAccessproxyMove";
export type ObjectFirewallAccessproxyMove = import("./objectFirewallAccessproxyMove").ObjectFirewallAccessproxyMove;
export const ObjectFirewallAccessproxyMove: typeof import("./objectFirewallAccessproxyMove").ObjectFirewallAccessproxyMove = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyMove"], () => require("./objectFirewallAccessproxyMove"));

export { ObjectFirewallAccessproxyRealserversArgs, ObjectFirewallAccessproxyRealserversState } from "./objectFirewallAccessproxyRealservers";
export type ObjectFirewallAccessproxyRealservers = import("./objectFirewallAccessproxyRealservers").ObjectFirewallAccessproxyRealservers;
export const ObjectFirewallAccessproxyRealservers: typeof import("./objectFirewallAccessproxyRealservers").ObjectFirewallAccessproxyRealservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyRealservers"], () => require("./objectFirewallAccessproxyRealservers"));

export { ObjectFirewallAccessproxyServerpubkeyauthsettingsArgs, ObjectFirewallAccessproxyServerpubkeyauthsettingsState } from "./objectFirewallAccessproxyServerpubkeyauthsettings";
export type ObjectFirewallAccessproxyServerpubkeyauthsettings = import("./objectFirewallAccessproxyServerpubkeyauthsettings").ObjectFirewallAccessproxyServerpubkeyauthsettings;
export const ObjectFirewallAccessproxyServerpubkeyauthsettings: typeof import("./objectFirewallAccessproxyServerpubkeyauthsettings").ObjectFirewallAccessproxyServerpubkeyauthsettings = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyServerpubkeyauthsettings"], () => require("./objectFirewallAccessproxyServerpubkeyauthsettings"));

export { ObjectFirewallAccessproxysshclientcertArgs, ObjectFirewallAccessproxysshclientcertState } from "./objectFirewallAccessproxysshclientcert";
export type ObjectFirewallAccessproxysshclientcert = import("./objectFirewallAccessproxysshclientcert").ObjectFirewallAccessproxysshclientcert;
export const ObjectFirewallAccessproxysshclientcert: typeof import("./objectFirewallAccessproxysshclientcert").ObjectFirewallAccessproxysshclientcert = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxysshclientcert"], () => require("./objectFirewallAccessproxysshclientcert"));

export { ObjectFirewallAccessproxysshclientcertCertextensionArgs, ObjectFirewallAccessproxysshclientcertCertextensionState } from "./objectFirewallAccessproxysshclientcertCertextension";
export type ObjectFirewallAccessproxysshclientcertCertextension = import("./objectFirewallAccessproxysshclientcertCertextension").ObjectFirewallAccessproxysshclientcertCertextension;
export const ObjectFirewallAccessproxysshclientcertCertextension: typeof import("./objectFirewallAccessproxysshclientcertCertextension").ObjectFirewallAccessproxysshclientcertCertextension = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxysshclientcertCertextension"], () => require("./objectFirewallAccessproxysshclientcertCertextension"));

export { ObjectFirewallAccessproxysshclientcertMoveArgs, ObjectFirewallAccessproxysshclientcertMoveState } from "./objectFirewallAccessproxysshclientcertMove";
export type ObjectFirewallAccessproxysshclientcertMove = import("./objectFirewallAccessproxysshclientcertMove").ObjectFirewallAccessproxysshclientcertMove;
export const ObjectFirewallAccessproxysshclientcertMove: typeof import("./objectFirewallAccessproxysshclientcertMove").ObjectFirewallAccessproxysshclientcertMove = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxysshclientcertMove"], () => require("./objectFirewallAccessproxysshclientcertMove"));

export { ObjectFirewallAccessproxyvirtualhostArgs, ObjectFirewallAccessproxyvirtualhostState } from "./objectFirewallAccessproxyvirtualhost";
export type ObjectFirewallAccessproxyvirtualhost = import("./objectFirewallAccessproxyvirtualhost").ObjectFirewallAccessproxyvirtualhost;
export const ObjectFirewallAccessproxyvirtualhost: typeof import("./objectFirewallAccessproxyvirtualhost").ObjectFirewallAccessproxyvirtualhost = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAccessproxyvirtualhost"], () => require("./objectFirewallAccessproxyvirtualhost"));

export { ObjectFirewallAddressArgs, ObjectFirewallAddressState } from "./objectFirewallAddress";
export type ObjectFirewallAddress = import("./objectFirewallAddress").ObjectFirewallAddress;
export const ObjectFirewallAddress: typeof import("./objectFirewallAddress").ObjectFirewallAddress = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress"], () => require("./objectFirewallAddress"));

export { ObjectFirewallAddress6Args, ObjectFirewallAddress6State } from "./objectFirewallAddress6";
export type ObjectFirewallAddress6 = import("./objectFirewallAddress6").ObjectFirewallAddress6;
export const ObjectFirewallAddress6: typeof import("./objectFirewallAddress6").ObjectFirewallAddress6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress6"], () => require("./objectFirewallAddress6"));

export { ObjectFirewallAddress6ListArgs, ObjectFirewallAddress6ListState } from "./objectFirewallAddress6List";
export type ObjectFirewallAddress6List = import("./objectFirewallAddress6List").ObjectFirewallAddress6List;
export const ObjectFirewallAddress6List: typeof import("./objectFirewallAddress6List").ObjectFirewallAddress6List = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress6List"], () => require("./objectFirewallAddress6List"));

export { ObjectFirewallAddress6SubnetsegmentArgs, ObjectFirewallAddress6SubnetsegmentState } from "./objectFirewallAddress6Subnetsegment";
export type ObjectFirewallAddress6Subnetsegment = import("./objectFirewallAddress6Subnetsegment").ObjectFirewallAddress6Subnetsegment;
export const ObjectFirewallAddress6Subnetsegment: typeof import("./objectFirewallAddress6Subnetsegment").ObjectFirewallAddress6Subnetsegment = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress6Subnetsegment"], () => require("./objectFirewallAddress6Subnetsegment"));

export { ObjectFirewallAddress6TaggingArgs, ObjectFirewallAddress6TaggingState } from "./objectFirewallAddress6Tagging";
export type ObjectFirewallAddress6Tagging = import("./objectFirewallAddress6Tagging").ObjectFirewallAddress6Tagging;
export const ObjectFirewallAddress6Tagging: typeof import("./objectFirewallAddress6Tagging").ObjectFirewallAddress6Tagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress6Tagging"], () => require("./objectFirewallAddress6Tagging"));

export { ObjectFirewallAddress6templateArgs, ObjectFirewallAddress6templateState } from "./objectFirewallAddress6template";
export type ObjectFirewallAddress6template = import("./objectFirewallAddress6template").ObjectFirewallAddress6template;
export const ObjectFirewallAddress6template: typeof import("./objectFirewallAddress6template").ObjectFirewallAddress6template = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress6template"], () => require("./objectFirewallAddress6template"));

export { ObjectFirewallAddress6templateSubnetsegmentArgs, ObjectFirewallAddress6templateSubnetsegmentState } from "./objectFirewallAddress6templateSubnetsegment";
export type ObjectFirewallAddress6templateSubnetsegment = import("./objectFirewallAddress6templateSubnetsegment").ObjectFirewallAddress6templateSubnetsegment;
export const ObjectFirewallAddress6templateSubnetsegment: typeof import("./objectFirewallAddress6templateSubnetsegment").ObjectFirewallAddress6templateSubnetsegment = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress6templateSubnetsegment"], () => require("./objectFirewallAddress6templateSubnetsegment"));

export { ObjectFirewallAddress6templateSubnetsegmentValuesArgs, ObjectFirewallAddress6templateSubnetsegmentValuesState } from "./objectFirewallAddress6templateSubnetsegmentValues";
export type ObjectFirewallAddress6templateSubnetsegmentValues = import("./objectFirewallAddress6templateSubnetsegmentValues").ObjectFirewallAddress6templateSubnetsegmentValues;
export const ObjectFirewallAddress6templateSubnetsegmentValues: typeof import("./objectFirewallAddress6templateSubnetsegmentValues").ObjectFirewallAddress6templateSubnetsegmentValues = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddress6templateSubnetsegmentValues"], () => require("./objectFirewallAddress6templateSubnetsegmentValues"));

export { ObjectFirewallAddressListArgs, ObjectFirewallAddressListState } from "./objectFirewallAddressList";
export type ObjectFirewallAddressList = import("./objectFirewallAddressList").ObjectFirewallAddressList;
export const ObjectFirewallAddressList: typeof import("./objectFirewallAddressList").ObjectFirewallAddressList = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddressList"], () => require("./objectFirewallAddressList"));

export { ObjectFirewallAddressTaggingArgs, ObjectFirewallAddressTaggingState } from "./objectFirewallAddressTagging";
export type ObjectFirewallAddressTagging = import("./objectFirewallAddressTagging").ObjectFirewallAddressTagging;
export const ObjectFirewallAddressTagging: typeof import("./objectFirewallAddressTagging").ObjectFirewallAddressTagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddressTagging"], () => require("./objectFirewallAddressTagging"));

export { ObjectFirewallAddrgrpArgs, ObjectFirewallAddrgrpState } from "./objectFirewallAddrgrp";
export type ObjectFirewallAddrgrp = import("./objectFirewallAddrgrp").ObjectFirewallAddrgrp;
export const ObjectFirewallAddrgrp: typeof import("./objectFirewallAddrgrp").ObjectFirewallAddrgrp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddrgrp"], () => require("./objectFirewallAddrgrp"));

export { ObjectFirewallAddrgrp6Args, ObjectFirewallAddrgrp6State } from "./objectFirewallAddrgrp6";
export type ObjectFirewallAddrgrp6 = import("./objectFirewallAddrgrp6").ObjectFirewallAddrgrp6;
export const ObjectFirewallAddrgrp6: typeof import("./objectFirewallAddrgrp6").ObjectFirewallAddrgrp6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddrgrp6"], () => require("./objectFirewallAddrgrp6"));

export { ObjectFirewallAddrgrp6TaggingArgs, ObjectFirewallAddrgrp6TaggingState } from "./objectFirewallAddrgrp6Tagging";
export type ObjectFirewallAddrgrp6Tagging = import("./objectFirewallAddrgrp6Tagging").ObjectFirewallAddrgrp6Tagging;
export const ObjectFirewallAddrgrp6Tagging: typeof import("./objectFirewallAddrgrp6Tagging").ObjectFirewallAddrgrp6Tagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddrgrp6Tagging"], () => require("./objectFirewallAddrgrp6Tagging"));

export { ObjectFirewallAddrgrpTaggingArgs, ObjectFirewallAddrgrpTaggingState } from "./objectFirewallAddrgrpTagging";
export type ObjectFirewallAddrgrpTagging = import("./objectFirewallAddrgrpTagging").ObjectFirewallAddrgrpTagging;
export const ObjectFirewallAddrgrpTagging: typeof import("./objectFirewallAddrgrpTagging").ObjectFirewallAddrgrpTagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallAddrgrpTagging"], () => require("./objectFirewallAddrgrpTagging"));

export { ObjectFirewallCarrierendpointbwlArgs, ObjectFirewallCarrierendpointbwlState } from "./objectFirewallCarrierendpointbwl";
export type ObjectFirewallCarrierendpointbwl = import("./objectFirewallCarrierendpointbwl").ObjectFirewallCarrierendpointbwl;
export const ObjectFirewallCarrierendpointbwl: typeof import("./objectFirewallCarrierendpointbwl").ObjectFirewallCarrierendpointbwl = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallCarrierendpointbwl"], () => require("./objectFirewallCarrierendpointbwl"));

export { ObjectFirewallCasbprofileArgs, ObjectFirewallCasbprofileState } from "./objectFirewallCasbprofile";
export type ObjectFirewallCasbprofile = import("./objectFirewallCasbprofile").ObjectFirewallCasbprofile;
export const ObjectFirewallCasbprofile: typeof import("./objectFirewallCasbprofile").ObjectFirewallCasbprofile = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallCasbprofile"], () => require("./objectFirewallCasbprofile"));

export { ObjectFirewallCasbprofileMoveArgs, ObjectFirewallCasbprofileMoveState } from "./objectFirewallCasbprofileMove";
export type ObjectFirewallCasbprofileMove = import("./objectFirewallCasbprofileMove").ObjectFirewallCasbprofileMove;
export const ObjectFirewallCasbprofileMove: typeof import("./objectFirewallCasbprofileMove").ObjectFirewallCasbprofileMove = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallCasbprofileMove"], () => require("./objectFirewallCasbprofileMove"));

export { ObjectFirewallCasbprofileSaasapplicationArgs, ObjectFirewallCasbprofileSaasapplicationState } from "./objectFirewallCasbprofileSaasapplication";
export type ObjectFirewallCasbprofileSaasapplication = import("./objectFirewallCasbprofileSaasapplication").ObjectFirewallCasbprofileSaasapplication;
export const ObjectFirewallCasbprofileSaasapplication: typeof import("./objectFirewallCasbprofileSaasapplication").ObjectFirewallCasbprofileSaasapplication = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallCasbprofileSaasapplication"], () => require("./objectFirewallCasbprofileSaasapplication"));

export { ObjectFirewallCasbprofileSaasapplicationAccessruleArgs, ObjectFirewallCasbprofileSaasapplicationAccessruleState } from "./objectFirewallCasbprofileSaasapplicationAccessrule";
export type ObjectFirewallCasbprofileSaasapplicationAccessrule = import("./objectFirewallCasbprofileSaasapplicationAccessrule").ObjectFirewallCasbprofileSaasapplicationAccessrule;
export const ObjectFirewallCasbprofileSaasapplicationAccessrule: typeof import("./objectFirewallCasbprofileSaasapplicationAccessrule").ObjectFirewallCasbprofileSaasapplicationAccessrule = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallCasbprofileSaasapplicationAccessrule"], () => require("./objectFirewallCasbprofileSaasapplicationAccessrule"));

export { ObjectFirewallCasbprofileSaasapplicationCustomcontrolArgs, ObjectFirewallCasbprofileSaasapplicationCustomcontrolState } from "./objectFirewallCasbprofileSaasapplicationCustomcontrol";
export type ObjectFirewallCasbprofileSaasapplicationCustomcontrol = import("./objectFirewallCasbprofileSaasapplicationCustomcontrol").ObjectFirewallCasbprofileSaasapplicationCustomcontrol;
export const ObjectFirewallCasbprofileSaasapplicationCustomcontrol: typeof import("./objectFirewallCasbprofileSaasapplicationCustomcontrol").ObjectFirewallCasbprofileSaasapplicationCustomcontrol = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallCasbprofileSaasapplicationCustomcontrol"], () => require("./objectFirewallCasbprofileSaasapplicationCustomcontrol"));

export { ObjectFirewallCasbprofileSaasapplicationCustomcontrolOptionArgs, ObjectFirewallCasbprofileSaasapplicationCustomcontrolOptionState } from "./objectFirewallCasbprofileSaasapplicationCustomcontrolOption";
export type ObjectFirewallCasbprofileSaasapplicationCustomcontrolOption = import("./objectFirewallCasbprofileSaasapplicationCustomcontrolOption").ObjectFirewallCasbprofileSaasapplicationCustomcontrolOption;
export const ObjectFirewallCasbprofileSaasapplicationCustomcontrolOption: typeof import("./objectFirewallCasbprofileSaasapplicationCustomcontrolOption").ObjectFirewallCasbprofileSaasapplicationCustomcontrolOption = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallCasbprofileSaasapplicationCustomcontrolOption"], () => require("./objectFirewallCasbprofileSaasapplicationCustomcontrolOption"));

export { ObjectFirewallDecryptedtrafficmirrorArgs, ObjectFirewallDecryptedtrafficmirrorState } from "./objectFirewallDecryptedtrafficmirror";
export type ObjectFirewallDecryptedtrafficmirror = import("./objectFirewallDecryptedtrafficmirror").ObjectFirewallDecryptedtrafficmirror;
export const ObjectFirewallDecryptedtrafficmirror: typeof import("./objectFirewallDecryptedtrafficmirror").ObjectFirewallDecryptedtrafficmirror = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallDecryptedtrafficmirror"], () => require("./objectFirewallDecryptedtrafficmirror"));

export { ObjectFirewallGtpArgs, ObjectFirewallGtpState } from "./objectFirewallGtp";
export type ObjectFirewallGtp = import("./objectFirewallGtp").ObjectFirewallGtp;
export const ObjectFirewallGtp: typeof import("./objectFirewallGtp").ObjectFirewallGtp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtp"], () => require("./objectFirewallGtp"));

export { ObjectFirewallGtpApnArgs, ObjectFirewallGtpApnState } from "./objectFirewallGtpApn";
export type ObjectFirewallGtpApn = import("./objectFirewallGtpApn").ObjectFirewallGtpApn;
export const ObjectFirewallGtpApn: typeof import("./objectFirewallGtpApn").ObjectFirewallGtpApn = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpApn"], () => require("./objectFirewallGtpApn"));

export { ObjectFirewallGtpIeremovepolicyArgs, ObjectFirewallGtpIeremovepolicyState } from "./objectFirewallGtpIeremovepolicy";
export type ObjectFirewallGtpIeremovepolicy = import("./objectFirewallGtpIeremovepolicy").ObjectFirewallGtpIeremovepolicy;
export const ObjectFirewallGtpIeremovepolicy: typeof import("./objectFirewallGtpIeremovepolicy").ObjectFirewallGtpIeremovepolicy = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpIeremovepolicy"], () => require("./objectFirewallGtpIeremovepolicy"));

export { ObjectFirewallGtpIevalidationArgs, ObjectFirewallGtpIevalidationState } from "./objectFirewallGtpIevalidation";
export type ObjectFirewallGtpIevalidation = import("./objectFirewallGtpIevalidation").ObjectFirewallGtpIevalidation;
export const ObjectFirewallGtpIevalidation: typeof import("./objectFirewallGtpIevalidation").ObjectFirewallGtpIevalidation = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpIevalidation"], () => require("./objectFirewallGtpIevalidation"));

export { ObjectFirewallGtpImsiArgs, ObjectFirewallGtpImsiState } from "./objectFirewallGtpImsi";
export type ObjectFirewallGtpImsi = import("./objectFirewallGtpImsi").ObjectFirewallGtpImsi;
export const ObjectFirewallGtpImsi: typeof import("./objectFirewallGtpImsi").ObjectFirewallGtpImsi = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpImsi"], () => require("./objectFirewallGtpImsi"));

export { ObjectFirewallGtpIppolicyArgs, ObjectFirewallGtpIppolicyState } from "./objectFirewallGtpIppolicy";
export type ObjectFirewallGtpIppolicy = import("./objectFirewallGtpIppolicy").ObjectFirewallGtpIppolicy;
export const ObjectFirewallGtpIppolicy: typeof import("./objectFirewallGtpIppolicy").ObjectFirewallGtpIppolicy = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpIppolicy"], () => require("./objectFirewallGtpIppolicy"));

export { ObjectFirewallGtpMessageratelimitArgs, ObjectFirewallGtpMessageratelimitState } from "./objectFirewallGtpMessageratelimit";
export type ObjectFirewallGtpMessageratelimit = import("./objectFirewallGtpMessageratelimit").ObjectFirewallGtpMessageratelimit;
export const ObjectFirewallGtpMessageratelimit: typeof import("./objectFirewallGtpMessageratelimit").ObjectFirewallGtpMessageratelimit = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpMessageratelimit"], () => require("./objectFirewallGtpMessageratelimit"));

export { ObjectFirewallGtpMessageratelimitv0Args, ObjectFirewallGtpMessageratelimitv0State } from "./objectFirewallGtpMessageratelimitv0";
export type ObjectFirewallGtpMessageratelimitv0 = import("./objectFirewallGtpMessageratelimitv0").ObjectFirewallGtpMessageratelimitv0;
export const ObjectFirewallGtpMessageratelimitv0: typeof import("./objectFirewallGtpMessageratelimitv0").ObjectFirewallGtpMessageratelimitv0 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpMessageratelimitv0"], () => require("./objectFirewallGtpMessageratelimitv0"));

export { ObjectFirewallGtpMessageratelimitv1Args, ObjectFirewallGtpMessageratelimitv1State } from "./objectFirewallGtpMessageratelimitv1";
export type ObjectFirewallGtpMessageratelimitv1 = import("./objectFirewallGtpMessageratelimitv1").ObjectFirewallGtpMessageratelimitv1;
export const ObjectFirewallGtpMessageratelimitv1: typeof import("./objectFirewallGtpMessageratelimitv1").ObjectFirewallGtpMessageratelimitv1 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpMessageratelimitv1"], () => require("./objectFirewallGtpMessageratelimitv1"));

export { ObjectFirewallGtpMessageratelimitv2Args, ObjectFirewallGtpMessageratelimitv2State } from "./objectFirewallGtpMessageratelimitv2";
export type ObjectFirewallGtpMessageratelimitv2 = import("./objectFirewallGtpMessageratelimitv2").ObjectFirewallGtpMessageratelimitv2;
export const ObjectFirewallGtpMessageratelimitv2: typeof import("./objectFirewallGtpMessageratelimitv2").ObjectFirewallGtpMessageratelimitv2 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpMessageratelimitv2"], () => require("./objectFirewallGtpMessageratelimitv2"));

export { ObjectFirewallGtpNoippolicyArgs, ObjectFirewallGtpNoippolicyState } from "./objectFirewallGtpNoippolicy";
export type ObjectFirewallGtpNoippolicy = import("./objectFirewallGtpNoippolicy").ObjectFirewallGtpNoippolicy;
export const ObjectFirewallGtpNoippolicy: typeof import("./objectFirewallGtpNoippolicy").ObjectFirewallGtpNoippolicy = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpNoippolicy"], () => require("./objectFirewallGtpNoippolicy"));

export { ObjectFirewallGtpPerapnshaperArgs, ObjectFirewallGtpPerapnshaperState } from "./objectFirewallGtpPerapnshaper";
export type ObjectFirewallGtpPerapnshaper = import("./objectFirewallGtpPerapnshaper").ObjectFirewallGtpPerapnshaper;
export const ObjectFirewallGtpPerapnshaper: typeof import("./objectFirewallGtpPerapnshaper").ObjectFirewallGtpPerapnshaper = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpPerapnshaper"], () => require("./objectFirewallGtpPerapnshaper"));

export { ObjectFirewallGtpPolicyArgs, ObjectFirewallGtpPolicyState } from "./objectFirewallGtpPolicy";
export type ObjectFirewallGtpPolicy = import("./objectFirewallGtpPolicy").ObjectFirewallGtpPolicy;
export const ObjectFirewallGtpPolicy: typeof import("./objectFirewallGtpPolicy").ObjectFirewallGtpPolicy = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpPolicy"], () => require("./objectFirewallGtpPolicy"));

export { ObjectFirewallGtpPolicyv2Args, ObjectFirewallGtpPolicyv2State } from "./objectFirewallGtpPolicyv2";
export type ObjectFirewallGtpPolicyv2 = import("./objectFirewallGtpPolicyv2").ObjectFirewallGtpPolicyv2;
export const ObjectFirewallGtpPolicyv2: typeof import("./objectFirewallGtpPolicyv2").ObjectFirewallGtpPolicyv2 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallGtpPolicyv2"], () => require("./objectFirewallGtpPolicyv2"));

export { ObjectFirewallIdentitybasedrouteArgs, ObjectFirewallIdentitybasedrouteState } from "./objectFirewallIdentitybasedroute";
export type ObjectFirewallIdentitybasedroute = import("./objectFirewallIdentitybasedroute").ObjectFirewallIdentitybasedroute;
export const ObjectFirewallIdentitybasedroute: typeof import("./objectFirewallIdentitybasedroute").ObjectFirewallIdentitybasedroute = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallIdentitybasedroute"], () => require("./objectFirewallIdentitybasedroute"));

export { ObjectFirewallIdentitybasedrouteRuleArgs, ObjectFirewallIdentitybasedrouteRuleState } from "./objectFirewallIdentitybasedrouteRule";
export type ObjectFirewallIdentitybasedrouteRule = import("./objectFirewallIdentitybasedrouteRule").ObjectFirewallIdentitybasedrouteRule;
export const ObjectFirewallIdentitybasedrouteRule: typeof import("./objectFirewallIdentitybasedrouteRule").ObjectFirewallIdentitybasedrouteRule = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallIdentitybasedrouteRule"], () => require("./objectFirewallIdentitybasedrouteRule"));

export { ObjectFirewallInternetserviceArgs, ObjectFirewallInternetserviceState } from "./objectFirewallInternetservice";
export type ObjectFirewallInternetservice = import("./objectFirewallInternetservice").ObjectFirewallInternetservice;
export const ObjectFirewallInternetservice: typeof import("./objectFirewallInternetservice").ObjectFirewallInternetservice = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetservice"], () => require("./objectFirewallInternetservice"));

export { ObjectFirewallInternetserviceEntryArgs, ObjectFirewallInternetserviceEntryState } from "./objectFirewallInternetserviceEntry";
export type ObjectFirewallInternetserviceEntry = import("./objectFirewallInternetserviceEntry").ObjectFirewallInternetserviceEntry;
export const ObjectFirewallInternetserviceEntry: typeof import("./objectFirewallInternetserviceEntry").ObjectFirewallInternetserviceEntry = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetserviceEntry"], () => require("./objectFirewallInternetserviceEntry"));

export { ObjectFirewallInternetserviceadditionArgs, ObjectFirewallInternetserviceadditionState } from "./objectFirewallInternetserviceaddition";
export type ObjectFirewallInternetserviceaddition = import("./objectFirewallInternetserviceaddition").ObjectFirewallInternetserviceaddition;
export const ObjectFirewallInternetserviceaddition: typeof import("./objectFirewallInternetserviceaddition").ObjectFirewallInternetserviceaddition = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetserviceaddition"], () => require("./objectFirewallInternetserviceaddition"));

export { ObjectFirewallInternetserviceadditionEntryArgs, ObjectFirewallInternetserviceadditionEntryState } from "./objectFirewallInternetserviceadditionEntry";
export type ObjectFirewallInternetserviceadditionEntry = import("./objectFirewallInternetserviceadditionEntry").ObjectFirewallInternetserviceadditionEntry;
export const ObjectFirewallInternetserviceadditionEntry: typeof import("./objectFirewallInternetserviceadditionEntry").ObjectFirewallInternetserviceadditionEntry = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetserviceadditionEntry"], () => require("./objectFirewallInternetserviceadditionEntry"));

export { ObjectFirewallInternetserviceadditionEntryPortrangeArgs, ObjectFirewallInternetserviceadditionEntryPortrangeState } from "./objectFirewallInternetserviceadditionEntryPortrange";
export type ObjectFirewallInternetserviceadditionEntryPortrange = import("./objectFirewallInternetserviceadditionEntryPortrange").ObjectFirewallInternetserviceadditionEntryPortrange;
export const ObjectFirewallInternetserviceadditionEntryPortrange: typeof import("./objectFirewallInternetserviceadditionEntryPortrange").ObjectFirewallInternetserviceadditionEntryPortrange = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetserviceadditionEntryPortrange"], () => require("./objectFirewallInternetserviceadditionEntryPortrange"));

export { ObjectFirewallInternetservicecustomArgs, ObjectFirewallInternetservicecustomState } from "./objectFirewallInternetservicecustom";
export type ObjectFirewallInternetservicecustom = import("./objectFirewallInternetservicecustom").ObjectFirewallInternetservicecustom;
export const ObjectFirewallInternetservicecustom: typeof import("./objectFirewallInternetservicecustom").ObjectFirewallInternetservicecustom = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetservicecustom"], () => require("./objectFirewallInternetservicecustom"));

export { ObjectFirewallInternetservicecustomEntryArgs, ObjectFirewallInternetservicecustomEntryState } from "./objectFirewallInternetservicecustomEntry";
export type ObjectFirewallInternetservicecustomEntry = import("./objectFirewallInternetservicecustomEntry").ObjectFirewallInternetservicecustomEntry;
export const ObjectFirewallInternetservicecustomEntry: typeof import("./objectFirewallInternetservicecustomEntry").ObjectFirewallInternetservicecustomEntry = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetservicecustomEntry"], () => require("./objectFirewallInternetservicecustomEntry"));

export { ObjectFirewallInternetservicecustomEntryPortrangeArgs, ObjectFirewallInternetservicecustomEntryPortrangeState } from "./objectFirewallInternetservicecustomEntryPortrange";
export type ObjectFirewallInternetservicecustomEntryPortrange = import("./objectFirewallInternetservicecustomEntryPortrange").ObjectFirewallInternetservicecustomEntryPortrange;
export const ObjectFirewallInternetservicecustomEntryPortrange: typeof import("./objectFirewallInternetservicecustomEntryPortrange").ObjectFirewallInternetservicecustomEntryPortrange = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetservicecustomEntryPortrange"], () => require("./objectFirewallInternetservicecustomEntryPortrange"));

export { ObjectFirewallInternetservicecustomgroupArgs, ObjectFirewallInternetservicecustomgroupState } from "./objectFirewallInternetservicecustomgroup";
export type ObjectFirewallInternetservicecustomgroup = import("./objectFirewallInternetservicecustomgroup").ObjectFirewallInternetservicecustomgroup;
export const ObjectFirewallInternetservicecustomgroup: typeof import("./objectFirewallInternetservicecustomgroup").ObjectFirewallInternetservicecustomgroup = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetservicecustomgroup"], () => require("./objectFirewallInternetservicecustomgroup"));

export { ObjectFirewallInternetservicegroupArgs, ObjectFirewallInternetservicegroupState } from "./objectFirewallInternetservicegroup";
export type ObjectFirewallInternetservicegroup = import("./objectFirewallInternetservicegroup").ObjectFirewallInternetservicegroup;
export const ObjectFirewallInternetservicegroup: typeof import("./objectFirewallInternetservicegroup").ObjectFirewallInternetservicegroup = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetservicegroup"], () => require("./objectFirewallInternetservicegroup"));

export { ObjectFirewallInternetservicenameArgs, ObjectFirewallInternetservicenameState } from "./objectFirewallInternetservicename";
export type ObjectFirewallInternetservicename = import("./objectFirewallInternetservicename").ObjectFirewallInternetservicename;
export const ObjectFirewallInternetservicename: typeof import("./objectFirewallInternetservicename").ObjectFirewallInternetservicename = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallInternetservicename"], () => require("./objectFirewallInternetservicename"));

export { ObjectFirewallIppoolArgs, ObjectFirewallIppoolState } from "./objectFirewallIppool";
export type ObjectFirewallIppool = import("./objectFirewallIppool").ObjectFirewallIppool;
export const ObjectFirewallIppool: typeof import("./objectFirewallIppool").ObjectFirewallIppool = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallIppool"], () => require("./objectFirewallIppool"));

export { ObjectFirewallIppool6Args, ObjectFirewallIppool6State } from "./objectFirewallIppool6";
export type ObjectFirewallIppool6 = import("./objectFirewallIppool6").ObjectFirewallIppool6;
export const ObjectFirewallIppool6: typeof import("./objectFirewallIppool6").ObjectFirewallIppool6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallIppool6"], () => require("./objectFirewallIppool6"));

export { ObjectFirewallIppoolGrpArgs, ObjectFirewallIppoolGrpState } from "./objectFirewallIppoolGrp";
export type ObjectFirewallIppoolGrp = import("./objectFirewallIppoolGrp").ObjectFirewallIppoolGrp;
export const ObjectFirewallIppoolGrp: typeof import("./objectFirewallIppoolGrp").ObjectFirewallIppoolGrp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallIppoolGrp"], () => require("./objectFirewallIppoolGrp"));

export { ObjectFirewallLdbmonitorArgs, ObjectFirewallLdbmonitorState } from "./objectFirewallLdbmonitor";
export type ObjectFirewallLdbmonitor = import("./objectFirewallLdbmonitor").ObjectFirewallLdbmonitor;
export const ObjectFirewallLdbmonitor: typeof import("./objectFirewallLdbmonitor").ObjectFirewallLdbmonitor = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallLdbmonitor"], () => require("./objectFirewallLdbmonitor"));

export { ObjectFirewallMmsprofileArgs, ObjectFirewallMmsprofileState } from "./objectFirewallMmsprofile";
export type ObjectFirewallMmsprofile = import("./objectFirewallMmsprofile").ObjectFirewallMmsprofile;
export const ObjectFirewallMmsprofile: typeof import("./objectFirewallMmsprofile").ObjectFirewallMmsprofile = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallMmsprofile"], () => require("./objectFirewallMmsprofile"));

export { ObjectFirewallMulticastaddressArgs, ObjectFirewallMulticastaddressState } from "./objectFirewallMulticastaddress";
export type ObjectFirewallMulticastaddress = import("./objectFirewallMulticastaddress").ObjectFirewallMulticastaddress;
export const ObjectFirewallMulticastaddress: typeof import("./objectFirewallMulticastaddress").ObjectFirewallMulticastaddress = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallMulticastaddress"], () => require("./objectFirewallMulticastaddress"));

export { ObjectFirewallMulticastaddress6Args, ObjectFirewallMulticastaddress6State } from "./objectFirewallMulticastaddress6";
export type ObjectFirewallMulticastaddress6 = import("./objectFirewallMulticastaddress6").ObjectFirewallMulticastaddress6;
export const ObjectFirewallMulticastaddress6: typeof import("./objectFirewallMulticastaddress6").ObjectFirewallMulticastaddress6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallMulticastaddress6"], () => require("./objectFirewallMulticastaddress6"));

export { ObjectFirewallMulticastaddress6TaggingArgs, ObjectFirewallMulticastaddress6TaggingState } from "./objectFirewallMulticastaddress6Tagging";
export type ObjectFirewallMulticastaddress6Tagging = import("./objectFirewallMulticastaddress6Tagging").ObjectFirewallMulticastaddress6Tagging;
export const ObjectFirewallMulticastaddress6Tagging: typeof import("./objectFirewallMulticastaddress6Tagging").ObjectFirewallMulticastaddress6Tagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallMulticastaddress6Tagging"], () => require("./objectFirewallMulticastaddress6Tagging"));

export { ObjectFirewallMulticastaddressTaggingArgs, ObjectFirewallMulticastaddressTaggingState } from "./objectFirewallMulticastaddressTagging";
export type ObjectFirewallMulticastaddressTagging = import("./objectFirewallMulticastaddressTagging").ObjectFirewallMulticastaddressTagging;
export const ObjectFirewallMulticastaddressTagging: typeof import("./objectFirewallMulticastaddressTagging").ObjectFirewallMulticastaddressTagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallMulticastaddressTagging"], () => require("./objectFirewallMulticastaddressTagging"));

export { ObjectFirewallNetworkservicedynamicArgs, ObjectFirewallNetworkservicedynamicState } from "./objectFirewallNetworkservicedynamic";
export type ObjectFirewallNetworkservicedynamic = import("./objectFirewallNetworkservicedynamic").ObjectFirewallNetworkservicedynamic;
export const ObjectFirewallNetworkservicedynamic: typeof import("./objectFirewallNetworkservicedynamic").ObjectFirewallNetworkservicedynamic = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallNetworkservicedynamic"], () => require("./objectFirewallNetworkservicedynamic"));

export { ObjectFirewallProfilegroupArgs, ObjectFirewallProfilegroupState } from "./objectFirewallProfilegroup";
export type ObjectFirewallProfilegroup = import("./objectFirewallProfilegroup").ObjectFirewallProfilegroup;
export const ObjectFirewallProfilegroup: typeof import("./objectFirewallProfilegroup").ObjectFirewallProfilegroup = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfilegroup"], () => require("./objectFirewallProfilegroup"));

export { ObjectFirewallProfileprotocoloptionsArgs, ObjectFirewallProfileprotocoloptionsState } from "./objectFirewallProfileprotocoloptions";
export type ObjectFirewallProfileprotocoloptions = import("./objectFirewallProfileprotocoloptions").ObjectFirewallProfileprotocoloptions;
export const ObjectFirewallProfileprotocoloptions: typeof import("./objectFirewallProfileprotocoloptions").ObjectFirewallProfileprotocoloptions = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptions"], () => require("./objectFirewallProfileprotocoloptions"));

export { ObjectFirewallProfileprotocoloptionsCifsArgs, ObjectFirewallProfileprotocoloptionsCifsState } from "./objectFirewallProfileprotocoloptionsCifs";
export type ObjectFirewallProfileprotocoloptionsCifs = import("./objectFirewallProfileprotocoloptionsCifs").ObjectFirewallProfileprotocoloptionsCifs;
export const ObjectFirewallProfileprotocoloptionsCifs: typeof import("./objectFirewallProfileprotocoloptionsCifs").ObjectFirewallProfileprotocoloptionsCifs = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsCifs"], () => require("./objectFirewallProfileprotocoloptionsCifs"));

export { ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesArgs, ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesState } from "./objectFirewallProfileprotocoloptionsCifsFilefilterEntries";
export type ObjectFirewallProfileprotocoloptionsCifsFilefilterEntries = import("./objectFirewallProfileprotocoloptionsCifsFilefilterEntries").ObjectFirewallProfileprotocoloptionsCifsFilefilterEntries;
export const ObjectFirewallProfileprotocoloptionsCifsFilefilterEntries: typeof import("./objectFirewallProfileprotocoloptionsCifsFilefilterEntries").ObjectFirewallProfileprotocoloptionsCifsFilefilterEntries = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsCifsFilefilterEntries"], () => require("./objectFirewallProfileprotocoloptionsCifsFilefilterEntries"));

export { ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMoveArgs, ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMoveState } from "./objectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove";
export type ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove = import("./objectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove").ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove;
export const ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove: typeof import("./objectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove").ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove"], () => require("./objectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove"));

export { ObjectFirewallProfileprotocoloptionsCifsServerkeytabArgs, ObjectFirewallProfileprotocoloptionsCifsServerkeytabState } from "./objectFirewallProfileprotocoloptionsCifsServerkeytab";
export type ObjectFirewallProfileprotocoloptionsCifsServerkeytab = import("./objectFirewallProfileprotocoloptionsCifsServerkeytab").ObjectFirewallProfileprotocoloptionsCifsServerkeytab;
export const ObjectFirewallProfileprotocoloptionsCifsServerkeytab: typeof import("./objectFirewallProfileprotocoloptionsCifsServerkeytab").ObjectFirewallProfileprotocoloptionsCifsServerkeytab = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsCifsServerkeytab"], () => require("./objectFirewallProfileprotocoloptionsCifsServerkeytab"));

export { ObjectFirewallProfileprotocoloptionsDnsArgs, ObjectFirewallProfileprotocoloptionsDnsState } from "./objectFirewallProfileprotocoloptionsDns";
export type ObjectFirewallProfileprotocoloptionsDns = import("./objectFirewallProfileprotocoloptionsDns").ObjectFirewallProfileprotocoloptionsDns;
export const ObjectFirewallProfileprotocoloptionsDns: typeof import("./objectFirewallProfileprotocoloptionsDns").ObjectFirewallProfileprotocoloptionsDns = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsDns"], () => require("./objectFirewallProfileprotocoloptionsDns"));

export { ObjectFirewallProfileprotocoloptionsFtpArgs, ObjectFirewallProfileprotocoloptionsFtpState } from "./objectFirewallProfileprotocoloptionsFtp";
export type ObjectFirewallProfileprotocoloptionsFtp = import("./objectFirewallProfileprotocoloptionsFtp").ObjectFirewallProfileprotocoloptionsFtp;
export const ObjectFirewallProfileprotocoloptionsFtp: typeof import("./objectFirewallProfileprotocoloptionsFtp").ObjectFirewallProfileprotocoloptionsFtp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsFtp"], () => require("./objectFirewallProfileprotocoloptionsFtp"));

export { ObjectFirewallProfileprotocoloptionsHttpArgs, ObjectFirewallProfileprotocoloptionsHttpState } from "./objectFirewallProfileprotocoloptionsHttp";
export type ObjectFirewallProfileprotocoloptionsHttp = import("./objectFirewallProfileprotocoloptionsHttp").ObjectFirewallProfileprotocoloptionsHttp;
export const ObjectFirewallProfileprotocoloptionsHttp: typeof import("./objectFirewallProfileprotocoloptionsHttp").ObjectFirewallProfileprotocoloptionsHttp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsHttp"], () => require("./objectFirewallProfileprotocoloptionsHttp"));

export { ObjectFirewallProfileprotocoloptionsImapArgs, ObjectFirewallProfileprotocoloptionsImapState } from "./objectFirewallProfileprotocoloptionsImap";
export type ObjectFirewallProfileprotocoloptionsImap = import("./objectFirewallProfileprotocoloptionsImap").ObjectFirewallProfileprotocoloptionsImap;
export const ObjectFirewallProfileprotocoloptionsImap: typeof import("./objectFirewallProfileprotocoloptionsImap").ObjectFirewallProfileprotocoloptionsImap = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsImap"], () => require("./objectFirewallProfileprotocoloptionsImap"));

export { ObjectFirewallProfileprotocoloptionsMailsignatureArgs, ObjectFirewallProfileprotocoloptionsMailsignatureState } from "./objectFirewallProfileprotocoloptionsMailsignature";
export type ObjectFirewallProfileprotocoloptionsMailsignature = import("./objectFirewallProfileprotocoloptionsMailsignature").ObjectFirewallProfileprotocoloptionsMailsignature;
export const ObjectFirewallProfileprotocoloptionsMailsignature: typeof import("./objectFirewallProfileprotocoloptionsMailsignature").ObjectFirewallProfileprotocoloptionsMailsignature = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsMailsignature"], () => require("./objectFirewallProfileprotocoloptionsMailsignature"));

export { ObjectFirewallProfileprotocoloptionsMapiArgs, ObjectFirewallProfileprotocoloptionsMapiState } from "./objectFirewallProfileprotocoloptionsMapi";
export type ObjectFirewallProfileprotocoloptionsMapi = import("./objectFirewallProfileprotocoloptionsMapi").ObjectFirewallProfileprotocoloptionsMapi;
export const ObjectFirewallProfileprotocoloptionsMapi: typeof import("./objectFirewallProfileprotocoloptionsMapi").ObjectFirewallProfileprotocoloptionsMapi = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsMapi"], () => require("./objectFirewallProfileprotocoloptionsMapi"));

export { ObjectFirewallProfileprotocoloptionsNntpArgs, ObjectFirewallProfileprotocoloptionsNntpState } from "./objectFirewallProfileprotocoloptionsNntp";
export type ObjectFirewallProfileprotocoloptionsNntp = import("./objectFirewallProfileprotocoloptionsNntp").ObjectFirewallProfileprotocoloptionsNntp;
export const ObjectFirewallProfileprotocoloptionsNntp: typeof import("./objectFirewallProfileprotocoloptionsNntp").ObjectFirewallProfileprotocoloptionsNntp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsNntp"], () => require("./objectFirewallProfileprotocoloptionsNntp"));

export { ObjectFirewallProfileprotocoloptionsPop3Args, ObjectFirewallProfileprotocoloptionsPop3State } from "./objectFirewallProfileprotocoloptionsPop3";
export type ObjectFirewallProfileprotocoloptionsPop3 = import("./objectFirewallProfileprotocoloptionsPop3").ObjectFirewallProfileprotocoloptionsPop3;
export const ObjectFirewallProfileprotocoloptionsPop3: typeof import("./objectFirewallProfileprotocoloptionsPop3").ObjectFirewallProfileprotocoloptionsPop3 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsPop3"], () => require("./objectFirewallProfileprotocoloptionsPop3"));

export { ObjectFirewallProfileprotocoloptionsSmtpArgs, ObjectFirewallProfileprotocoloptionsSmtpState } from "./objectFirewallProfileprotocoloptionsSmtp";
export type ObjectFirewallProfileprotocoloptionsSmtp = import("./objectFirewallProfileprotocoloptionsSmtp").ObjectFirewallProfileprotocoloptionsSmtp;
export const ObjectFirewallProfileprotocoloptionsSmtp: typeof import("./objectFirewallProfileprotocoloptionsSmtp").ObjectFirewallProfileprotocoloptionsSmtp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsSmtp"], () => require("./objectFirewallProfileprotocoloptionsSmtp"));

export { ObjectFirewallProfileprotocoloptionsSshArgs, ObjectFirewallProfileprotocoloptionsSshState } from "./objectFirewallProfileprotocoloptionsSsh";
export type ObjectFirewallProfileprotocoloptionsSsh = import("./objectFirewallProfileprotocoloptionsSsh").ObjectFirewallProfileprotocoloptionsSsh;
export const ObjectFirewallProfileprotocoloptionsSsh: typeof import("./objectFirewallProfileprotocoloptionsSsh").ObjectFirewallProfileprotocoloptionsSsh = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProfileprotocoloptionsSsh"], () => require("./objectFirewallProfileprotocoloptionsSsh"));

export { ObjectFirewallProxyaddressArgs, ObjectFirewallProxyaddressState } from "./objectFirewallProxyaddress";
export type ObjectFirewallProxyaddress = import("./objectFirewallProxyaddress").ObjectFirewallProxyaddress;
export const ObjectFirewallProxyaddress: typeof import("./objectFirewallProxyaddress").ObjectFirewallProxyaddress = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProxyaddress"], () => require("./objectFirewallProxyaddress"));

export { ObjectFirewallProxyaddressHeadergroupArgs, ObjectFirewallProxyaddressHeadergroupState } from "./objectFirewallProxyaddressHeadergroup";
export type ObjectFirewallProxyaddressHeadergroup = import("./objectFirewallProxyaddressHeadergroup").ObjectFirewallProxyaddressHeadergroup;
export const ObjectFirewallProxyaddressHeadergroup: typeof import("./objectFirewallProxyaddressHeadergroup").ObjectFirewallProxyaddressHeadergroup = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProxyaddressHeadergroup"], () => require("./objectFirewallProxyaddressHeadergroup"));

export { ObjectFirewallProxyaddressTaggingArgs, ObjectFirewallProxyaddressTaggingState } from "./objectFirewallProxyaddressTagging";
export type ObjectFirewallProxyaddressTagging = import("./objectFirewallProxyaddressTagging").ObjectFirewallProxyaddressTagging;
export const ObjectFirewallProxyaddressTagging: typeof import("./objectFirewallProxyaddressTagging").ObjectFirewallProxyaddressTagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProxyaddressTagging"], () => require("./objectFirewallProxyaddressTagging"));

export { ObjectFirewallProxyaddrgrpArgs, ObjectFirewallProxyaddrgrpState } from "./objectFirewallProxyaddrgrp";
export type ObjectFirewallProxyaddrgrp = import("./objectFirewallProxyaddrgrp").ObjectFirewallProxyaddrgrp;
export const ObjectFirewallProxyaddrgrp: typeof import("./objectFirewallProxyaddrgrp").ObjectFirewallProxyaddrgrp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProxyaddrgrp"], () => require("./objectFirewallProxyaddrgrp"));

export { ObjectFirewallProxyaddrgrpTaggingArgs, ObjectFirewallProxyaddrgrpTaggingState } from "./objectFirewallProxyaddrgrpTagging";
export type ObjectFirewallProxyaddrgrpTagging = import("./objectFirewallProxyaddrgrpTagging").ObjectFirewallProxyaddrgrpTagging;
export const ObjectFirewallProxyaddrgrpTagging: typeof import("./objectFirewallProxyaddrgrpTagging").ObjectFirewallProxyaddrgrpTagging = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallProxyaddrgrpTagging"], () => require("./objectFirewallProxyaddrgrpTagging"));

export { ObjectFirewallScheduleGroupArgs, ObjectFirewallScheduleGroupState } from "./objectFirewallScheduleGroup";
export type ObjectFirewallScheduleGroup = import("./objectFirewallScheduleGroup").ObjectFirewallScheduleGroup;
export const ObjectFirewallScheduleGroup: typeof import("./objectFirewallScheduleGroup").ObjectFirewallScheduleGroup = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallScheduleGroup"], () => require("./objectFirewallScheduleGroup"));

export { ObjectFirewallScheduleOnetimeArgs, ObjectFirewallScheduleOnetimeState } from "./objectFirewallScheduleOnetime";
export type ObjectFirewallScheduleOnetime = import("./objectFirewallScheduleOnetime").ObjectFirewallScheduleOnetime;
export const ObjectFirewallScheduleOnetime: typeof import("./objectFirewallScheduleOnetime").ObjectFirewallScheduleOnetime = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallScheduleOnetime"], () => require("./objectFirewallScheduleOnetime"));

export { ObjectFirewallScheduleRecurringArgs, ObjectFirewallScheduleRecurringState } from "./objectFirewallScheduleRecurring";
export type ObjectFirewallScheduleRecurring = import("./objectFirewallScheduleRecurring").ObjectFirewallScheduleRecurring;
export const ObjectFirewallScheduleRecurring: typeof import("./objectFirewallScheduleRecurring").ObjectFirewallScheduleRecurring = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallScheduleRecurring"], () => require("./objectFirewallScheduleRecurring"));

export { ObjectFirewallServiceCategoryArgs, ObjectFirewallServiceCategoryState } from "./objectFirewallServiceCategory";
export type ObjectFirewallServiceCategory = import("./objectFirewallServiceCategory").ObjectFirewallServiceCategory;
export const ObjectFirewallServiceCategory: typeof import("./objectFirewallServiceCategory").ObjectFirewallServiceCategory = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallServiceCategory"], () => require("./objectFirewallServiceCategory"));

export { ObjectFirewallServiceCustomArgs, ObjectFirewallServiceCustomState } from "./objectFirewallServiceCustom";
export type ObjectFirewallServiceCustom = import("./objectFirewallServiceCustom").ObjectFirewallServiceCustom;
export const ObjectFirewallServiceCustom: typeof import("./objectFirewallServiceCustom").ObjectFirewallServiceCustom = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallServiceCustom"], () => require("./objectFirewallServiceCustom"));

export { ObjectFirewallServiceGroupArgs, ObjectFirewallServiceGroupState } from "./objectFirewallServiceGroup";
export type ObjectFirewallServiceGroup = import("./objectFirewallServiceGroup").ObjectFirewallServiceGroup;
export const ObjectFirewallServiceGroup: typeof import("./objectFirewallServiceGroup").ObjectFirewallServiceGroup = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallServiceGroup"], () => require("./objectFirewallServiceGroup"));

export { ObjectFirewallShaperPeripshaperArgs, ObjectFirewallShaperPeripshaperState } from "./objectFirewallShaperPeripshaper";
export type ObjectFirewallShaperPeripshaper = import("./objectFirewallShaperPeripshaper").ObjectFirewallShaperPeripshaper;
export const ObjectFirewallShaperPeripshaper: typeof import("./objectFirewallShaperPeripshaper").ObjectFirewallShaperPeripshaper = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallShaperPeripshaper"], () => require("./objectFirewallShaperPeripshaper"));

export { ObjectFirewallShaperTrafficshaperArgs, ObjectFirewallShaperTrafficshaperState } from "./objectFirewallShaperTrafficshaper";
export type ObjectFirewallShaperTrafficshaper = import("./objectFirewallShaperTrafficshaper").ObjectFirewallShaperTrafficshaper;
export const ObjectFirewallShaperTrafficshaper: typeof import("./objectFirewallShaperTrafficshaper").ObjectFirewallShaperTrafficshaper = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallShaperTrafficshaper"], () => require("./objectFirewallShaperTrafficshaper"));

export { ObjectFirewallShapingprofileArgs, ObjectFirewallShapingprofileState } from "./objectFirewallShapingprofile";
export type ObjectFirewallShapingprofile = import("./objectFirewallShapingprofile").ObjectFirewallShapingprofile;
export const ObjectFirewallShapingprofile: typeof import("./objectFirewallShapingprofile").ObjectFirewallShapingprofile = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallShapingprofile"], () => require("./objectFirewallShapingprofile"));

export { ObjectFirewallShapingprofileShapingentriesArgs, ObjectFirewallShapingprofileShapingentriesState } from "./objectFirewallShapingprofileShapingentries";
export type ObjectFirewallShapingprofileShapingentries = import("./objectFirewallShapingprofileShapingentries").ObjectFirewallShapingprofileShapingentries;
export const ObjectFirewallShapingprofileShapingentries: typeof import("./objectFirewallShapingprofileShapingentries").ObjectFirewallShapingprofileShapingentries = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallShapingprofileShapingentries"], () => require("./objectFirewallShapingprofileShapingentries"));

export { ObjectFirewallShapingprofileShapingentriesMoveArgs, ObjectFirewallShapingprofileShapingentriesMoveState } from "./objectFirewallShapingprofileShapingentriesMove";
export type ObjectFirewallShapingprofileShapingentriesMove = import("./objectFirewallShapingprofileShapingentriesMove").ObjectFirewallShapingprofileShapingentriesMove;
export const ObjectFirewallShapingprofileShapingentriesMove: typeof import("./objectFirewallShapingprofileShapingentriesMove").ObjectFirewallShapingprofileShapingentriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallShapingprofileShapingentriesMove"], () => require("./objectFirewallShapingprofileShapingentriesMove"));

export { ObjectFirewallSshLocalcaArgs, ObjectFirewallSshLocalcaState } from "./objectFirewallSshLocalca";
export type ObjectFirewallSshLocalca = import("./objectFirewallSshLocalca").ObjectFirewallSshLocalca;
export const ObjectFirewallSshLocalca: typeof import("./objectFirewallSshLocalca").ObjectFirewallSshLocalca = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSshLocalca"], () => require("./objectFirewallSshLocalca"));

export { ObjectFirewallSslsshprofileArgs, ObjectFirewallSslsshprofileState } from "./objectFirewallSslsshprofile";
export type ObjectFirewallSslsshprofile = import("./objectFirewallSslsshprofile").ObjectFirewallSslsshprofile;
export const ObjectFirewallSslsshprofile: typeof import("./objectFirewallSslsshprofile").ObjectFirewallSslsshprofile = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofile"], () => require("./objectFirewallSslsshprofile"));

export { ObjectFirewallSslsshprofileDotArgs, ObjectFirewallSslsshprofileDotState } from "./objectFirewallSslsshprofileDot";
export type ObjectFirewallSslsshprofileDot = import("./objectFirewallSslsshprofileDot").ObjectFirewallSslsshprofileDot;
export const ObjectFirewallSslsshprofileDot: typeof import("./objectFirewallSslsshprofileDot").ObjectFirewallSslsshprofileDot = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileDot"], () => require("./objectFirewallSslsshprofileDot"));

export { ObjectFirewallSslsshprofileEchoutersniArgs, ObjectFirewallSslsshprofileEchoutersniState } from "./objectFirewallSslsshprofileEchoutersni";
export type ObjectFirewallSslsshprofileEchoutersni = import("./objectFirewallSslsshprofileEchoutersni").ObjectFirewallSslsshprofileEchoutersni;
export const ObjectFirewallSslsshprofileEchoutersni: typeof import("./objectFirewallSslsshprofileEchoutersni").ObjectFirewallSslsshprofileEchoutersni = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileEchoutersni"], () => require("./objectFirewallSslsshprofileEchoutersni"));

export { ObjectFirewallSslsshprofileFtpsArgs, ObjectFirewallSslsshprofileFtpsState } from "./objectFirewallSslsshprofileFtps";
export type ObjectFirewallSslsshprofileFtps = import("./objectFirewallSslsshprofileFtps").ObjectFirewallSslsshprofileFtps;
export const ObjectFirewallSslsshprofileFtps: typeof import("./objectFirewallSslsshprofileFtps").ObjectFirewallSslsshprofileFtps = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileFtps"], () => require("./objectFirewallSslsshprofileFtps"));

export { ObjectFirewallSslsshprofileHttpsArgs, ObjectFirewallSslsshprofileHttpsState } from "./objectFirewallSslsshprofileHttps";
export type ObjectFirewallSslsshprofileHttps = import("./objectFirewallSslsshprofileHttps").ObjectFirewallSslsshprofileHttps;
export const ObjectFirewallSslsshprofileHttps: typeof import("./objectFirewallSslsshprofileHttps").ObjectFirewallSslsshprofileHttps = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileHttps"], () => require("./objectFirewallSslsshprofileHttps"));

export { ObjectFirewallSslsshprofileImapsArgs, ObjectFirewallSslsshprofileImapsState } from "./objectFirewallSslsshprofileImaps";
export type ObjectFirewallSslsshprofileImaps = import("./objectFirewallSslsshprofileImaps").ObjectFirewallSslsshprofileImaps;
export const ObjectFirewallSslsshprofileImaps: typeof import("./objectFirewallSslsshprofileImaps").ObjectFirewallSslsshprofileImaps = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileImaps"], () => require("./objectFirewallSslsshprofileImaps"));

export { ObjectFirewallSslsshprofilePop3sArgs, ObjectFirewallSslsshprofilePop3sState } from "./objectFirewallSslsshprofilePop3s";
export type ObjectFirewallSslsshprofilePop3s = import("./objectFirewallSslsshprofilePop3s").ObjectFirewallSslsshprofilePop3s;
export const ObjectFirewallSslsshprofilePop3s: typeof import("./objectFirewallSslsshprofilePop3s").ObjectFirewallSslsshprofilePop3s = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofilePop3s"], () => require("./objectFirewallSslsshprofilePop3s"));

export { ObjectFirewallSslsshprofileSmtpsArgs, ObjectFirewallSslsshprofileSmtpsState } from "./objectFirewallSslsshprofileSmtps";
export type ObjectFirewallSslsshprofileSmtps = import("./objectFirewallSslsshprofileSmtps").ObjectFirewallSslsshprofileSmtps;
export const ObjectFirewallSslsshprofileSmtps: typeof import("./objectFirewallSslsshprofileSmtps").ObjectFirewallSslsshprofileSmtps = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileSmtps"], () => require("./objectFirewallSslsshprofileSmtps"));

export { ObjectFirewallSslsshprofileSshArgs, ObjectFirewallSslsshprofileSshState } from "./objectFirewallSslsshprofileSsh";
export type ObjectFirewallSslsshprofileSsh = import("./objectFirewallSslsshprofileSsh").ObjectFirewallSslsshprofileSsh;
export const ObjectFirewallSslsshprofileSsh: typeof import("./objectFirewallSslsshprofileSsh").ObjectFirewallSslsshprofileSsh = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileSsh"], () => require("./objectFirewallSslsshprofileSsh"));

export { ObjectFirewallSslsshprofileSslArgs, ObjectFirewallSslsshprofileSslState } from "./objectFirewallSslsshprofileSsl";
export type ObjectFirewallSslsshprofileSsl = import("./objectFirewallSslsshprofileSsl").ObjectFirewallSslsshprofileSsl;
export const ObjectFirewallSslsshprofileSsl: typeof import("./objectFirewallSslsshprofileSsl").ObjectFirewallSslsshprofileSsl = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileSsl"], () => require("./objectFirewallSslsshprofileSsl"));

export { ObjectFirewallSslsshprofileSslexemptArgs, ObjectFirewallSslsshprofileSslexemptState } from "./objectFirewallSslsshprofileSslexempt";
export type ObjectFirewallSslsshprofileSslexempt = import("./objectFirewallSslsshprofileSslexempt").ObjectFirewallSslsshprofileSslexempt;
export const ObjectFirewallSslsshprofileSslexempt: typeof import("./objectFirewallSslsshprofileSslexempt").ObjectFirewallSslsshprofileSslexempt = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileSslexempt"], () => require("./objectFirewallSslsshprofileSslexempt"));

export { ObjectFirewallSslsshprofileSslserverArgs, ObjectFirewallSslsshprofileSslserverState } from "./objectFirewallSslsshprofileSslserver";
export type ObjectFirewallSslsshprofileSslserver = import("./objectFirewallSslsshprofileSslserver").ObjectFirewallSslsshprofileSslserver;
export const ObjectFirewallSslsshprofileSslserver: typeof import("./objectFirewallSslsshprofileSslserver").ObjectFirewallSslsshprofileSslserver = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallSslsshprofileSslserver"], () => require("./objectFirewallSslsshprofileSslserver"));

export { ObjectFirewallTrafficclassArgs, ObjectFirewallTrafficclassState } from "./objectFirewallTrafficclass";
export type ObjectFirewallTrafficclass = import("./objectFirewallTrafficclass").ObjectFirewallTrafficclass;
export const ObjectFirewallTrafficclass: typeof import("./objectFirewallTrafficclass").ObjectFirewallTrafficclass = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallTrafficclass"], () => require("./objectFirewallTrafficclass"));

export { ObjectFirewallVendormacArgs, ObjectFirewallVendormacState } from "./objectFirewallVendormac";
export type ObjectFirewallVendormac = import("./objectFirewallVendormac").ObjectFirewallVendormac;
export const ObjectFirewallVendormac: typeof import("./objectFirewallVendormac").ObjectFirewallVendormac = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVendormac"], () => require("./objectFirewallVendormac"));

export { ObjectFirewallVipArgs, ObjectFirewallVipState } from "./objectFirewallVip";
export type ObjectFirewallVip = import("./objectFirewallVip").ObjectFirewallVip;
export const ObjectFirewallVip: typeof import("./objectFirewallVip").ObjectFirewallVip = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip"], () => require("./objectFirewallVip"));

export { ObjectFirewallVip46Args, ObjectFirewallVip46State } from "./objectFirewallVip46";
export type ObjectFirewallVip46 = import("./objectFirewallVip46").ObjectFirewallVip46;
export const ObjectFirewallVip46: typeof import("./objectFirewallVip46").ObjectFirewallVip46 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip46"], () => require("./objectFirewallVip46"));

export { ObjectFirewallVip46RealserversArgs, ObjectFirewallVip46RealserversState } from "./objectFirewallVip46Realservers";
export type ObjectFirewallVip46Realservers = import("./objectFirewallVip46Realservers").ObjectFirewallVip46Realservers;
export const ObjectFirewallVip46Realservers: typeof import("./objectFirewallVip46Realservers").ObjectFirewallVip46Realservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip46Realservers"], () => require("./objectFirewallVip46Realservers"));

export { ObjectFirewallVip6Args, ObjectFirewallVip6State } from "./objectFirewallVip6";
export type ObjectFirewallVip6 = import("./objectFirewallVip6").ObjectFirewallVip6;
export const ObjectFirewallVip6: typeof import("./objectFirewallVip6").ObjectFirewallVip6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip6"], () => require("./objectFirewallVip6"));

export { ObjectFirewallVip64Args, ObjectFirewallVip64State } from "./objectFirewallVip64";
export type ObjectFirewallVip64 = import("./objectFirewallVip64").ObjectFirewallVip64;
export const ObjectFirewallVip64: typeof import("./objectFirewallVip64").ObjectFirewallVip64 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip64"], () => require("./objectFirewallVip64"));

export { ObjectFirewallVip64RealserversArgs, ObjectFirewallVip64RealserversState } from "./objectFirewallVip64Realservers";
export type ObjectFirewallVip64Realservers = import("./objectFirewallVip64Realservers").ObjectFirewallVip64Realservers;
export const ObjectFirewallVip64Realservers: typeof import("./objectFirewallVip64Realservers").ObjectFirewallVip64Realservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip64Realservers"], () => require("./objectFirewallVip64Realservers"));

export { ObjectFirewallVip6QuicArgs, ObjectFirewallVip6QuicState } from "./objectFirewallVip6Quic";
export type ObjectFirewallVip6Quic = import("./objectFirewallVip6Quic").ObjectFirewallVip6Quic;
export const ObjectFirewallVip6Quic: typeof import("./objectFirewallVip6Quic").ObjectFirewallVip6Quic = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip6Quic"], () => require("./objectFirewallVip6Quic"));

export { ObjectFirewallVip6RealserversArgs, ObjectFirewallVip6RealserversState } from "./objectFirewallVip6Realservers";
export type ObjectFirewallVip6Realservers = import("./objectFirewallVip6Realservers").ObjectFirewallVip6Realservers;
export const ObjectFirewallVip6Realservers: typeof import("./objectFirewallVip6Realservers").ObjectFirewallVip6Realservers = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVip6Realservers"], () => require("./objectFirewallVip6Realservers"));

export { ObjectFirewallVipGslbpublicipsArgs, ObjectFirewallVipGslbpublicipsState } from "./objectFirewallVipGslbpublicips";
export type ObjectFirewallVipGslbpublicips = import("./objectFirewallVipGslbpublicips").ObjectFirewallVipGslbpublicips;
export const ObjectFirewallVipGslbpublicips: typeof import("./objectFirewallVipGslbpublicips").ObjectFirewallVipGslbpublicips = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVipGslbpublicips"], () => require("./objectFirewallVipGslbpublicips"));

export { ObjectFirewallVipQuicArgs, ObjectFirewallVipQuicState } from "./objectFirewallVipQuic";
export type ObjectFirewallVipQuic = import("./objectFirewallVipQuic").ObjectFirewallVipQuic;
export const ObjectFirewallVipQuic: typeof import("./objectFirewallVipQuic").ObjectFirewallVipQuic = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVipQuic"], () => require("./objectFirewallVipQuic"));

export { ObjectFirewallVipgrpArgs, ObjectFirewallVipgrpState } from "./objectFirewallVipgrp";
export type ObjectFirewallVipgrp = import("./objectFirewallVipgrp").ObjectFirewallVipgrp;
export const ObjectFirewallVipgrp: typeof import("./objectFirewallVipgrp").ObjectFirewallVipgrp = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVipgrp"], () => require("./objectFirewallVipgrp"));

export { ObjectFirewallVipgrp46Args, ObjectFirewallVipgrp46State } from "./objectFirewallVipgrp46";
export type ObjectFirewallVipgrp46 = import("./objectFirewallVipgrp46").ObjectFirewallVipgrp46;
export const ObjectFirewallVipgrp46: typeof import("./objectFirewallVipgrp46").ObjectFirewallVipgrp46 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVipgrp46"], () => require("./objectFirewallVipgrp46"));

export { ObjectFirewallVipgrp6Args, ObjectFirewallVipgrp6State } from "./objectFirewallVipgrp6";
export type ObjectFirewallVipgrp6 = import("./objectFirewallVipgrp6").ObjectFirewallVipgrp6;
export const ObjectFirewallVipgrp6: typeof import("./objectFirewallVipgrp6").ObjectFirewallVipgrp6 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVipgrp6"], () => require("./objectFirewallVipgrp6"));

export { ObjectFirewallVipgrp64Args, ObjectFirewallVipgrp64State } from "./objectFirewallVipgrp64";
export type ObjectFirewallVipgrp64 = import("./objectFirewallVipgrp64").ObjectFirewallVipgrp64;
export const ObjectFirewallVipgrp64: typeof import("./objectFirewallVipgrp64").ObjectFirewallVipgrp64 = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallVipgrp64"], () => require("./objectFirewallVipgrp64"));

export { ObjectFirewallWildcardfqdnCustomArgs, ObjectFirewallWildcardfqdnCustomState } from "./objectFirewallWildcardfqdnCustom";
export type ObjectFirewallWildcardfqdnCustom = import("./objectFirewallWildcardfqdnCustom").ObjectFirewallWildcardfqdnCustom;
export const ObjectFirewallWildcardfqdnCustom: typeof import("./objectFirewallWildcardfqdnCustom").ObjectFirewallWildcardfqdnCustom = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallWildcardfqdnCustom"], () => require("./objectFirewallWildcardfqdnCustom"));

export { ObjectFirewallWildcardfqdnGroupArgs, ObjectFirewallWildcardfqdnGroupState } from "./objectFirewallWildcardfqdnGroup";
export type ObjectFirewallWildcardfqdnGroup = import("./objectFirewallWildcardfqdnGroup").ObjectFirewallWildcardfqdnGroup;
export const ObjectFirewallWildcardfqdnGroup: typeof import("./objectFirewallWildcardfqdnGroup").ObjectFirewallWildcardfqdnGroup = null as any;
utilities.lazyLoad(exports, ["ObjectFirewallWildcardfqdnGroup"], () => require("./objectFirewallWildcardfqdnGroup"));

export { ObjectFmgDeviceBlueprintArgs, ObjectFmgDeviceBlueprintState } from "./objectFmgDeviceBlueprint";
export type ObjectFmgDeviceBlueprint = import("./objectFmgDeviceBlueprint").ObjectFmgDeviceBlueprint;
export const ObjectFmgDeviceBlueprint: typeof import("./objectFmgDeviceBlueprint").ObjectFmgDeviceBlueprint = null as any;
utilities.lazyLoad(exports, ["ObjectFmgDeviceBlueprint"], () => require("./objectFmgDeviceBlueprint"));

export { ObjectFmgFabricAuthorizationTemplateArgs, ObjectFmgFabricAuthorizationTemplateState } from "./objectFmgFabricAuthorizationTemplate";
export type ObjectFmgFabricAuthorizationTemplate = import("./objectFmgFabricAuthorizationTemplate").ObjectFmgFabricAuthorizationTemplate;
export const ObjectFmgFabricAuthorizationTemplate: typeof import("./objectFmgFabricAuthorizationTemplate").ObjectFmgFabricAuthorizationTemplate = null as any;
utilities.lazyLoad(exports, ["ObjectFmgFabricAuthorizationTemplate"], () => require("./objectFmgFabricAuthorizationTemplate"));

export { ObjectFmgVariableArgs, ObjectFmgVariableState } from "./objectFmgVariable";
export type ObjectFmgVariable = import("./objectFmgVariable").ObjectFmgVariable;
export const ObjectFmgVariable: typeof import("./objectFmgVariable").ObjectFmgVariable = null as any;
utilities.lazyLoad(exports, ["ObjectFmgVariable"], () => require("./objectFmgVariable"));

export { ObjectFspVlanArgs, ObjectFspVlanState } from "./objectFspVlan";
export type ObjectFspVlan = import("./objectFspVlan").ObjectFspVlan;
export const ObjectFspVlan: typeof import("./objectFspVlan").ObjectFspVlan = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlan"], () => require("./objectFspVlan"));

export { ObjectFspVlanInterfaceArgs, ObjectFspVlanInterfaceState } from "./objectFspVlanInterface";
export type ObjectFspVlanInterface = import("./objectFspVlanInterface").ObjectFspVlanInterface;
export const ObjectFspVlanInterface: typeof import("./objectFspVlanInterface").ObjectFspVlanInterface = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlanInterface"], () => require("./objectFspVlanInterface"));

export { ObjectFspVlanInterfaceIpv6Args, ObjectFspVlanInterfaceIpv6State } from "./objectFspVlanInterfaceIpv6";
export type ObjectFspVlanInterfaceIpv6 = import("./objectFspVlanInterfaceIpv6").ObjectFspVlanInterfaceIpv6;
export const ObjectFspVlanInterfaceIpv6: typeof import("./objectFspVlanInterfaceIpv6").ObjectFspVlanInterfaceIpv6 = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlanInterfaceIpv6"], () => require("./objectFspVlanInterfaceIpv6"));

export { ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistArgs, ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistState } from "./objectFspVlanInterfaceIpv6Ip6delegatedprefixlist";
export type ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist = import("./objectFspVlanInterfaceIpv6Ip6delegatedprefixlist").ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist;
export const ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist: typeof import("./objectFspVlanInterfaceIpv6Ip6delegatedprefixlist").ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist"], () => require("./objectFspVlanInterfaceIpv6Ip6delegatedprefixlist"));

export { ObjectFspVlanInterfaceIpv6Ip6extraaddrArgs, ObjectFspVlanInterfaceIpv6Ip6extraaddrState } from "./objectFspVlanInterfaceIpv6Ip6extraaddr";
export type ObjectFspVlanInterfaceIpv6Ip6extraaddr = import("./objectFspVlanInterfaceIpv6Ip6extraaddr").ObjectFspVlanInterfaceIpv6Ip6extraaddr;
export const ObjectFspVlanInterfaceIpv6Ip6extraaddr: typeof import("./objectFspVlanInterfaceIpv6Ip6extraaddr").ObjectFspVlanInterfaceIpv6Ip6extraaddr = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlanInterfaceIpv6Ip6extraaddr"], () => require("./objectFspVlanInterfaceIpv6Ip6extraaddr"));

export { ObjectFspVlanInterfaceIpv6Vrrp6Args, ObjectFspVlanInterfaceIpv6Vrrp6State } from "./objectFspVlanInterfaceIpv6Vrrp6";
export type ObjectFspVlanInterfaceIpv6Vrrp6 = import("./objectFspVlanInterfaceIpv6Vrrp6").ObjectFspVlanInterfaceIpv6Vrrp6;
export const ObjectFspVlanInterfaceIpv6Vrrp6: typeof import("./objectFspVlanInterfaceIpv6Vrrp6").ObjectFspVlanInterfaceIpv6Vrrp6 = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlanInterfaceIpv6Vrrp6"], () => require("./objectFspVlanInterfaceIpv6Vrrp6"));

export { ObjectFspVlanInterfaceSecondaryipArgs, ObjectFspVlanInterfaceSecondaryipState } from "./objectFspVlanInterfaceSecondaryip";
export type ObjectFspVlanInterfaceSecondaryip = import("./objectFspVlanInterfaceSecondaryip").ObjectFspVlanInterfaceSecondaryip;
export const ObjectFspVlanInterfaceSecondaryip: typeof import("./objectFspVlanInterfaceSecondaryip").ObjectFspVlanInterfaceSecondaryip = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlanInterfaceSecondaryip"], () => require("./objectFspVlanInterfaceSecondaryip"));

export { ObjectFspVlanInterfaceVrrpArgs, ObjectFspVlanInterfaceVrrpState } from "./objectFspVlanInterfaceVrrp";
export type ObjectFspVlanInterfaceVrrp = import("./objectFspVlanInterfaceVrrp").ObjectFspVlanInterfaceVrrp;
export const ObjectFspVlanInterfaceVrrp: typeof import("./objectFspVlanInterfaceVrrp").ObjectFspVlanInterfaceVrrp = null as any;
utilities.lazyLoad(exports, ["ObjectFspVlanInterfaceVrrp"], () => require("./objectFspVlanInterfaceVrrp"));

export { ObjectGlobalIpsSensorArgs, ObjectGlobalIpsSensorState } from "./objectGlobalIpsSensor";
export type ObjectGlobalIpsSensor = import("./objectGlobalIpsSensor").ObjectGlobalIpsSensor;
export const ObjectGlobalIpsSensor: typeof import("./objectGlobalIpsSensor").ObjectGlobalIpsSensor = null as any;
utilities.lazyLoad(exports, ["ObjectGlobalIpsSensor"], () => require("./objectGlobalIpsSensor"));

export { ObjectGlobalIpsSensorEntriesArgs, ObjectGlobalIpsSensorEntriesState } from "./objectGlobalIpsSensorEntries";
export type ObjectGlobalIpsSensorEntries = import("./objectGlobalIpsSensorEntries").ObjectGlobalIpsSensorEntries;
export const ObjectGlobalIpsSensorEntries: typeof import("./objectGlobalIpsSensorEntries").ObjectGlobalIpsSensorEntries = null as any;
utilities.lazyLoad(exports, ["ObjectGlobalIpsSensorEntries"], () => require("./objectGlobalIpsSensorEntries"));

export { ObjectGlobalIpsSensorEntriesExemptipArgs, ObjectGlobalIpsSensorEntriesExemptipState } from "./objectGlobalIpsSensorEntriesExemptip";
export type ObjectGlobalIpsSensorEntriesExemptip = import("./objectGlobalIpsSensorEntriesExemptip").ObjectGlobalIpsSensorEntriesExemptip;
export const ObjectGlobalIpsSensorEntriesExemptip: typeof import("./objectGlobalIpsSensorEntriesExemptip").ObjectGlobalIpsSensorEntriesExemptip = null as any;
utilities.lazyLoad(exports, ["ObjectGlobalIpsSensorEntriesExemptip"], () => require("./objectGlobalIpsSensorEntriesExemptip"));

export { ObjectGlobalIpsSensorOverrideArgs, ObjectGlobalIpsSensorOverrideState } from "./objectGlobalIpsSensorOverride";
export type ObjectGlobalIpsSensorOverride = import("./objectGlobalIpsSensorOverride").ObjectGlobalIpsSensorOverride;
export const ObjectGlobalIpsSensorOverride: typeof import("./objectGlobalIpsSensorOverride").ObjectGlobalIpsSensorOverride = null as any;
utilities.lazyLoad(exports, ["ObjectGlobalIpsSensorOverride"], () => require("./objectGlobalIpsSensorOverride"));

export { ObjectIcapProfileArgs, ObjectIcapProfileState } from "./objectIcapProfile";
export type ObjectIcapProfile = import("./objectIcapProfile").ObjectIcapProfile;
export const ObjectIcapProfile: typeof import("./objectIcapProfile").ObjectIcapProfile = null as any;
utilities.lazyLoad(exports, ["ObjectIcapProfile"], () => require("./objectIcapProfile"));

export { ObjectIcapProfileRespmodforwardrulesArgs, ObjectIcapProfileRespmodforwardrulesState } from "./objectIcapProfileRespmodforwardrules";
export type ObjectIcapProfileRespmodforwardrules = import("./objectIcapProfileRespmodforwardrules").ObjectIcapProfileRespmodforwardrules;
export const ObjectIcapProfileRespmodforwardrules: typeof import("./objectIcapProfileRespmodforwardrules").ObjectIcapProfileRespmodforwardrules = null as any;
utilities.lazyLoad(exports, ["ObjectIcapProfileRespmodforwardrules"], () => require("./objectIcapProfileRespmodforwardrules"));

export { ObjectIcapProfileRespmodforwardrulesHeadergroupArgs, ObjectIcapProfileRespmodforwardrulesHeadergroupState } from "./objectIcapProfileRespmodforwardrulesHeadergroup";
export type ObjectIcapProfileRespmodforwardrulesHeadergroup = import("./objectIcapProfileRespmodforwardrulesHeadergroup").ObjectIcapProfileRespmodforwardrulesHeadergroup;
export const ObjectIcapProfileRespmodforwardrulesHeadergroup: typeof import("./objectIcapProfileRespmodforwardrulesHeadergroup").ObjectIcapProfileRespmodforwardrulesHeadergroup = null as any;
utilities.lazyLoad(exports, ["ObjectIcapProfileRespmodforwardrulesHeadergroup"], () => require("./objectIcapProfileRespmodforwardrulesHeadergroup"));

export { ObjectIcapServerArgs, ObjectIcapServerState } from "./objectIcapServer";
export type ObjectIcapServer = import("./objectIcapServer").ObjectIcapServer;
export const ObjectIcapServer: typeof import("./objectIcapServer").ObjectIcapServer = null as any;
utilities.lazyLoad(exports, ["ObjectIcapServer"], () => require("./objectIcapServer"));

export { ObjectIpsCustomArgs, ObjectIpsCustomState } from "./objectIpsCustom";
export type ObjectIpsCustom = import("./objectIpsCustom").ObjectIpsCustom;
export const ObjectIpsCustom: typeof import("./objectIpsCustom").ObjectIpsCustom = null as any;
utilities.lazyLoad(exports, ["ObjectIpsCustom"], () => require("./objectIpsCustom"));

export { ObjectIpsSensorArgs, ObjectIpsSensorState } from "./objectIpsSensor";
export type ObjectIpsSensor = import("./objectIpsSensor").ObjectIpsSensor;
export const ObjectIpsSensor: typeof import("./objectIpsSensor").ObjectIpsSensor = null as any;
utilities.lazyLoad(exports, ["ObjectIpsSensor"], () => require("./objectIpsSensor"));

export { ObjectIpsSensorEntriesArgs, ObjectIpsSensorEntriesState } from "./objectIpsSensorEntries";
export type ObjectIpsSensorEntries = import("./objectIpsSensorEntries").ObjectIpsSensorEntries;
export const ObjectIpsSensorEntries: typeof import("./objectIpsSensorEntries").ObjectIpsSensorEntries = null as any;
utilities.lazyLoad(exports, ["ObjectIpsSensorEntries"], () => require("./objectIpsSensorEntries"));

export { ObjectIpsSensorEntriesExemptipArgs, ObjectIpsSensorEntriesExemptipState } from "./objectIpsSensorEntriesExemptip";
export type ObjectIpsSensorEntriesExemptip = import("./objectIpsSensorEntriesExemptip").ObjectIpsSensorEntriesExemptip;
export const ObjectIpsSensorEntriesExemptip: typeof import("./objectIpsSensorEntriesExemptip").ObjectIpsSensorEntriesExemptip = null as any;
utilities.lazyLoad(exports, ["ObjectIpsSensorEntriesExemptip"], () => require("./objectIpsSensorEntriesExemptip"));

export { ObjectIpsSensorEntriesMoveArgs, ObjectIpsSensorEntriesMoveState } from "./objectIpsSensorEntriesMove";
export type ObjectIpsSensorEntriesMove = import("./objectIpsSensorEntriesMove").ObjectIpsSensorEntriesMove;
export const ObjectIpsSensorEntriesMove: typeof import("./objectIpsSensorEntriesMove").ObjectIpsSensorEntriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectIpsSensorEntriesMove"], () => require("./objectIpsSensorEntriesMove"));

export { ObjectLogCustomfieldArgs, ObjectLogCustomfieldState } from "./objectLogCustomfield";
export type ObjectLogCustomfield = import("./objectLogCustomfield").ObjectLogCustomfield;
export const ObjectLogCustomfield: typeof import("./objectLogCustomfield").ObjectLogCustomfield = null as any;
utilities.lazyLoad(exports, ["ObjectLogCustomfield"], () => require("./objectLogCustomfield"));

export { ObjectLogNpuserverArgs, ObjectLogNpuserverState } from "./objectLogNpuserver";
export type ObjectLogNpuserver = import("./objectLogNpuserver").ObjectLogNpuserver;
export const ObjectLogNpuserver: typeof import("./objectLogNpuserver").ObjectLogNpuserver = null as any;
utilities.lazyLoad(exports, ["ObjectLogNpuserver"], () => require("./objectLogNpuserver"));

export { ObjectLogNpuserverServergroupArgs, ObjectLogNpuserverServergroupState } from "./objectLogNpuserverServergroup";
export type ObjectLogNpuserverServergroup = import("./objectLogNpuserverServergroup").ObjectLogNpuserverServergroup;
export const ObjectLogNpuserverServergroup: typeof import("./objectLogNpuserverServergroup").ObjectLogNpuserverServergroup = null as any;
utilities.lazyLoad(exports, ["ObjectLogNpuserverServergroup"], () => require("./objectLogNpuserverServergroup"));

export { ObjectLogNpuserverServerinfoArgs, ObjectLogNpuserverServerinfoState } from "./objectLogNpuserverServerinfo";
export type ObjectLogNpuserverServerinfo = import("./objectLogNpuserverServerinfo").ObjectLogNpuserverServerinfo;
export const ObjectLogNpuserverServerinfo: typeof import("./objectLogNpuserverServerinfo").ObjectLogNpuserverServerinfo = null as any;
utilities.lazyLoad(exports, ["ObjectLogNpuserverServerinfo"], () => require("./objectLogNpuserverServerinfo"));

export { ObjectRouterAccesslistArgs, ObjectRouterAccesslistState } from "./objectRouterAccesslist";
export type ObjectRouterAccesslist = import("./objectRouterAccesslist").ObjectRouterAccesslist;
export const ObjectRouterAccesslist: typeof import("./objectRouterAccesslist").ObjectRouterAccesslist = null as any;
utilities.lazyLoad(exports, ["ObjectRouterAccesslist"], () => require("./objectRouterAccesslist"));

export { ObjectRouterAccesslist6Args, ObjectRouterAccesslist6State } from "./objectRouterAccesslist6";
export type ObjectRouterAccesslist6 = import("./objectRouterAccesslist6").ObjectRouterAccesslist6;
export const ObjectRouterAccesslist6: typeof import("./objectRouterAccesslist6").ObjectRouterAccesslist6 = null as any;
utilities.lazyLoad(exports, ["ObjectRouterAccesslist6"], () => require("./objectRouterAccesslist6"));

export { ObjectRouterAccesslist6RuleArgs, ObjectRouterAccesslist6RuleState } from "./objectRouterAccesslist6Rule";
export type ObjectRouterAccesslist6Rule = import("./objectRouterAccesslist6Rule").ObjectRouterAccesslist6Rule;
export const ObjectRouterAccesslist6Rule: typeof import("./objectRouterAccesslist6Rule").ObjectRouterAccesslist6Rule = null as any;
utilities.lazyLoad(exports, ["ObjectRouterAccesslist6Rule"], () => require("./objectRouterAccesslist6Rule"));

export { ObjectRouterAccesslistRuleArgs, ObjectRouterAccesslistRuleState } from "./objectRouterAccesslistRule";
export type ObjectRouterAccesslistRule = import("./objectRouterAccesslistRule").ObjectRouterAccesslistRule;
export const ObjectRouterAccesslistRule: typeof import("./objectRouterAccesslistRule").ObjectRouterAccesslistRule = null as any;
utilities.lazyLoad(exports, ["ObjectRouterAccesslistRule"], () => require("./objectRouterAccesslistRule"));

export { ObjectRouterAspathlistArgs, ObjectRouterAspathlistState } from "./objectRouterAspathlist";
export type ObjectRouterAspathlist = import("./objectRouterAspathlist").ObjectRouterAspathlist;
export const ObjectRouterAspathlist: typeof import("./objectRouterAspathlist").ObjectRouterAspathlist = null as any;
utilities.lazyLoad(exports, ["ObjectRouterAspathlist"], () => require("./objectRouterAspathlist"));

export { ObjectRouterAspathlistRuleArgs, ObjectRouterAspathlistRuleState } from "./objectRouterAspathlistRule";
export type ObjectRouterAspathlistRule = import("./objectRouterAspathlistRule").ObjectRouterAspathlistRule;
export const ObjectRouterAspathlistRule: typeof import("./objectRouterAspathlistRule").ObjectRouterAspathlistRule = null as any;
utilities.lazyLoad(exports, ["ObjectRouterAspathlistRule"], () => require("./objectRouterAspathlistRule"));

export { ObjectRouterCommunitylistArgs, ObjectRouterCommunitylistState } from "./objectRouterCommunitylist";
export type ObjectRouterCommunitylist = import("./objectRouterCommunitylist").ObjectRouterCommunitylist;
export const ObjectRouterCommunitylist: typeof import("./objectRouterCommunitylist").ObjectRouterCommunitylist = null as any;
utilities.lazyLoad(exports, ["ObjectRouterCommunitylist"], () => require("./objectRouterCommunitylist"));

export { ObjectRouterCommunitylistRuleArgs, ObjectRouterCommunitylistRuleState } from "./objectRouterCommunitylistRule";
export type ObjectRouterCommunitylistRule = import("./objectRouterCommunitylistRule").ObjectRouterCommunitylistRule;
export const ObjectRouterCommunitylistRule: typeof import("./objectRouterCommunitylistRule").ObjectRouterCommunitylistRule = null as any;
utilities.lazyLoad(exports, ["ObjectRouterCommunitylistRule"], () => require("./objectRouterCommunitylistRule"));

export { ObjectRouterPrefixlistArgs, ObjectRouterPrefixlistState } from "./objectRouterPrefixlist";
export type ObjectRouterPrefixlist = import("./objectRouterPrefixlist").ObjectRouterPrefixlist;
export const ObjectRouterPrefixlist: typeof import("./objectRouterPrefixlist").ObjectRouterPrefixlist = null as any;
utilities.lazyLoad(exports, ["ObjectRouterPrefixlist"], () => require("./objectRouterPrefixlist"));

export { ObjectRouterPrefixlist6Args, ObjectRouterPrefixlist6State } from "./objectRouterPrefixlist6";
export type ObjectRouterPrefixlist6 = import("./objectRouterPrefixlist6").ObjectRouterPrefixlist6;
export const ObjectRouterPrefixlist6: typeof import("./objectRouterPrefixlist6").ObjectRouterPrefixlist6 = null as any;
utilities.lazyLoad(exports, ["ObjectRouterPrefixlist6"], () => require("./objectRouterPrefixlist6"));

export { ObjectRouterPrefixlist6RuleArgs, ObjectRouterPrefixlist6RuleState } from "./objectRouterPrefixlist6Rule";
export type ObjectRouterPrefixlist6Rule = import("./objectRouterPrefixlist6Rule").ObjectRouterPrefixlist6Rule;
export const ObjectRouterPrefixlist6Rule: typeof import("./objectRouterPrefixlist6Rule").ObjectRouterPrefixlist6Rule = null as any;
utilities.lazyLoad(exports, ["ObjectRouterPrefixlist6Rule"], () => require("./objectRouterPrefixlist6Rule"));

export { ObjectRouterPrefixlistRuleArgs, ObjectRouterPrefixlistRuleState } from "./objectRouterPrefixlistRule";
export type ObjectRouterPrefixlistRule = import("./objectRouterPrefixlistRule").ObjectRouterPrefixlistRule;
export const ObjectRouterPrefixlistRule: typeof import("./objectRouterPrefixlistRule").ObjectRouterPrefixlistRule = null as any;
utilities.lazyLoad(exports, ["ObjectRouterPrefixlistRule"], () => require("./objectRouterPrefixlistRule"));

export { ObjectRouterRoutemapArgs, ObjectRouterRoutemapState } from "./objectRouterRoutemap";
export type ObjectRouterRoutemap = import("./objectRouterRoutemap").ObjectRouterRoutemap;
export const ObjectRouterRoutemap: typeof import("./objectRouterRoutemap").ObjectRouterRoutemap = null as any;
utilities.lazyLoad(exports, ["ObjectRouterRoutemap"], () => require("./objectRouterRoutemap"));

export { ObjectRouterRoutemapRuleArgs, ObjectRouterRoutemapRuleState } from "./objectRouterRoutemapRule";
export type ObjectRouterRoutemapRule = import("./objectRouterRoutemapRule").ObjectRouterRoutemapRule;
export const ObjectRouterRoutemapRule: typeof import("./objectRouterRoutemapRule").ObjectRouterRoutemapRule = null as any;
utilities.lazyLoad(exports, ["ObjectRouterRoutemapRule"], () => require("./objectRouterRoutemapRule"));

export { ObjectSctpfilterProfileArgs, ObjectSctpfilterProfileState } from "./objectSctpfilterProfile";
export type ObjectSctpfilterProfile = import("./objectSctpfilterProfile").ObjectSctpfilterProfile;
export const ObjectSctpfilterProfile: typeof import("./objectSctpfilterProfile").ObjectSctpfilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectSctpfilterProfile"], () => require("./objectSctpfilterProfile"));

export { ObjectSctpfilterProfilePpidfiltersArgs, ObjectSctpfilterProfilePpidfiltersState } from "./objectSctpfilterProfilePpidfilters";
export type ObjectSctpfilterProfilePpidfilters = import("./objectSctpfilterProfilePpidfilters").ObjectSctpfilterProfilePpidfilters;
export const ObjectSctpfilterProfilePpidfilters: typeof import("./objectSctpfilterProfilePpidfilters").ObjectSctpfilterProfilePpidfilters = null as any;
utilities.lazyLoad(exports, ["ObjectSctpfilterProfilePpidfilters"], () => require("./objectSctpfilterProfilePpidfilters"));

export { ObjectSpamfilterBwlArgs, ObjectSpamfilterBwlState } from "./objectSpamfilterBwl";
export type ObjectSpamfilterBwl = import("./objectSpamfilterBwl").ObjectSpamfilterBwl;
export const ObjectSpamfilterBwl: typeof import("./objectSpamfilterBwl").ObjectSpamfilterBwl = null as any;
utilities.lazyLoad(exports, ["ObjectSpamfilterBwl"], () => require("./objectSpamfilterBwl"));

export { ObjectSpamfilterBwordArgs, ObjectSpamfilterBwordState } from "./objectSpamfilterBword";
export type ObjectSpamfilterBword = import("./objectSpamfilterBword").ObjectSpamfilterBword;
export const ObjectSpamfilterBword: typeof import("./objectSpamfilterBword").ObjectSpamfilterBword = null as any;
utilities.lazyLoad(exports, ["ObjectSpamfilterBword"], () => require("./objectSpamfilterBword"));

export { ObjectSpamfilterDnsblArgs, ObjectSpamfilterDnsblState } from "./objectSpamfilterDnsbl";
export type ObjectSpamfilterDnsbl = import("./objectSpamfilterDnsbl").ObjectSpamfilterDnsbl;
export const ObjectSpamfilterDnsbl: typeof import("./objectSpamfilterDnsbl").ObjectSpamfilterDnsbl = null as any;
utilities.lazyLoad(exports, ["ObjectSpamfilterDnsbl"], () => require("./objectSpamfilterDnsbl"));

export { ObjectSpamfilterIptrustArgs, ObjectSpamfilterIptrustState } from "./objectSpamfilterIptrust";
export type ObjectSpamfilterIptrust = import("./objectSpamfilterIptrust").ObjectSpamfilterIptrust;
export const ObjectSpamfilterIptrust: typeof import("./objectSpamfilterIptrust").ObjectSpamfilterIptrust = null as any;
utilities.lazyLoad(exports, ["ObjectSpamfilterIptrust"], () => require("./objectSpamfilterIptrust"));

export { ObjectSpamfilterMheaderArgs, ObjectSpamfilterMheaderState } from "./objectSpamfilterMheader";
export type ObjectSpamfilterMheader = import("./objectSpamfilterMheader").ObjectSpamfilterMheader;
export const ObjectSpamfilterMheader: typeof import("./objectSpamfilterMheader").ObjectSpamfilterMheader = null as any;
utilities.lazyLoad(exports, ["ObjectSpamfilterMheader"], () => require("./objectSpamfilterMheader"));

export { ObjectSpamfilterProfileArgs, ObjectSpamfilterProfileState } from "./objectSpamfilterProfile";
export type ObjectSpamfilterProfile = import("./objectSpamfilterProfile").ObjectSpamfilterProfile;
export const ObjectSpamfilterProfile: typeof import("./objectSpamfilterProfile").ObjectSpamfilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectSpamfilterProfile"], () => require("./objectSpamfilterProfile"));

export { ObjectSshfilterProfileArgs, ObjectSshfilterProfileState } from "./objectSshfilterProfile";
export type ObjectSshfilterProfile = import("./objectSshfilterProfile").ObjectSshfilterProfile;
export const ObjectSshfilterProfile: typeof import("./objectSshfilterProfile").ObjectSshfilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectSshfilterProfile"], () => require("./objectSshfilterProfile"));

export { ObjectSshfilterProfileShellcommandsArgs, ObjectSshfilterProfileShellcommandsState } from "./objectSshfilterProfileShellcommands";
export type ObjectSshfilterProfileShellcommands = import("./objectSshfilterProfileShellcommands").ObjectSshfilterProfileShellcommands;
export const ObjectSshfilterProfileShellcommands: typeof import("./objectSshfilterProfileShellcommands").ObjectSshfilterProfileShellcommands = null as any;
utilities.lazyLoad(exports, ["ObjectSshfilterProfileShellcommands"], () => require("./objectSshfilterProfileShellcommands"));

export { ObjectSshfilterProfileShellcommandsMoveArgs, ObjectSshfilterProfileShellcommandsMoveState } from "./objectSshfilterProfileShellcommandsMove";
export type ObjectSshfilterProfileShellcommandsMove = import("./objectSshfilterProfileShellcommandsMove").ObjectSshfilterProfileShellcommandsMove;
export const ObjectSshfilterProfileShellcommandsMove: typeof import("./objectSshfilterProfileShellcommandsMove").ObjectSshfilterProfileShellcommandsMove = null as any;
utilities.lazyLoad(exports, ["ObjectSshfilterProfileShellcommandsMove"], () => require("./objectSshfilterProfileShellcommandsMove"));

export { ObjectSwitchcontrollerAclGroupArgs, ObjectSwitchcontrollerAclGroupState } from "./objectSwitchcontrollerAclGroup";
export type ObjectSwitchcontrollerAclGroup = import("./objectSwitchcontrollerAclGroup").ObjectSwitchcontrollerAclGroup;
export const ObjectSwitchcontrollerAclGroup: typeof import("./objectSwitchcontrollerAclGroup").ObjectSwitchcontrollerAclGroup = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerAclGroup"], () => require("./objectSwitchcontrollerAclGroup"));

export { ObjectSwitchcontrollerAclIngressArgs, ObjectSwitchcontrollerAclIngressState } from "./objectSwitchcontrollerAclIngress";
export type ObjectSwitchcontrollerAclIngress = import("./objectSwitchcontrollerAclIngress").ObjectSwitchcontrollerAclIngress;
export const ObjectSwitchcontrollerAclIngress: typeof import("./objectSwitchcontrollerAclIngress").ObjectSwitchcontrollerAclIngress = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerAclIngress"], () => require("./objectSwitchcontrollerAclIngress"));

export { ObjectSwitchcontrollerAclIngressActionArgs, ObjectSwitchcontrollerAclIngressActionState } from "./objectSwitchcontrollerAclIngressAction";
export type ObjectSwitchcontrollerAclIngressAction = import("./objectSwitchcontrollerAclIngressAction").ObjectSwitchcontrollerAclIngressAction;
export const ObjectSwitchcontrollerAclIngressAction: typeof import("./objectSwitchcontrollerAclIngressAction").ObjectSwitchcontrollerAclIngressAction = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerAclIngressAction"], () => require("./objectSwitchcontrollerAclIngressAction"));

export { ObjectSwitchcontrollerAclIngressClassifierArgs, ObjectSwitchcontrollerAclIngressClassifierState } from "./objectSwitchcontrollerAclIngressClassifier";
export type ObjectSwitchcontrollerAclIngressClassifier = import("./objectSwitchcontrollerAclIngressClassifier").ObjectSwitchcontrollerAclIngressClassifier;
export const ObjectSwitchcontrollerAclIngressClassifier: typeof import("./objectSwitchcontrollerAclIngressClassifier").ObjectSwitchcontrollerAclIngressClassifier = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerAclIngressClassifier"], () => require("./objectSwitchcontrollerAclIngressClassifier"));

export { ObjectSwitchcontrollerCustomcommandArgs, ObjectSwitchcontrollerCustomcommandState } from "./objectSwitchcontrollerCustomcommand";
export type ObjectSwitchcontrollerCustomcommand = import("./objectSwitchcontrollerCustomcommand").ObjectSwitchcontrollerCustomcommand;
export const ObjectSwitchcontrollerCustomcommand: typeof import("./objectSwitchcontrollerCustomcommand").ObjectSwitchcontrollerCustomcommand = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerCustomcommand"], () => require("./objectSwitchcontrollerCustomcommand"));

export { ObjectSwitchcontrollerDslPolicyArgs, ObjectSwitchcontrollerDslPolicyState } from "./objectSwitchcontrollerDslPolicy";
export type ObjectSwitchcontrollerDslPolicy = import("./objectSwitchcontrollerDslPolicy").ObjectSwitchcontrollerDslPolicy;
export const ObjectSwitchcontrollerDslPolicy: typeof import("./objectSwitchcontrollerDslPolicy").ObjectSwitchcontrollerDslPolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerDslPolicy"], () => require("./objectSwitchcontrollerDslPolicy"));

export { ObjectSwitchcontrollerDynamicportpolicyArgs, ObjectSwitchcontrollerDynamicportpolicyState } from "./objectSwitchcontrollerDynamicportpolicy";
export type ObjectSwitchcontrollerDynamicportpolicy = import("./objectSwitchcontrollerDynamicportpolicy").ObjectSwitchcontrollerDynamicportpolicy;
export const ObjectSwitchcontrollerDynamicportpolicy: typeof import("./objectSwitchcontrollerDynamicportpolicy").ObjectSwitchcontrollerDynamicportpolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerDynamicportpolicy"], () => require("./objectSwitchcontrollerDynamicportpolicy"));

export { ObjectSwitchcontrollerDynamicportpolicyPolicyArgs, ObjectSwitchcontrollerDynamicportpolicyPolicyState } from "./objectSwitchcontrollerDynamicportpolicyPolicy";
export type ObjectSwitchcontrollerDynamicportpolicyPolicy = import("./objectSwitchcontrollerDynamicportpolicyPolicy").ObjectSwitchcontrollerDynamicportpolicyPolicy;
export const ObjectSwitchcontrollerDynamicportpolicyPolicy: typeof import("./objectSwitchcontrollerDynamicportpolicyPolicy").ObjectSwitchcontrollerDynamicportpolicyPolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerDynamicportpolicyPolicy"], () => require("./objectSwitchcontrollerDynamicportpolicyPolicy"));

export { ObjectSwitchcontrollerDynamicportpolicyPolicyMoveArgs, ObjectSwitchcontrollerDynamicportpolicyPolicyMoveState } from "./objectSwitchcontrollerDynamicportpolicyPolicyMove";
export type ObjectSwitchcontrollerDynamicportpolicyPolicyMove = import("./objectSwitchcontrollerDynamicportpolicyPolicyMove").ObjectSwitchcontrollerDynamicportpolicyPolicyMove;
export const ObjectSwitchcontrollerDynamicportpolicyPolicyMove: typeof import("./objectSwitchcontrollerDynamicportpolicyPolicyMove").ObjectSwitchcontrollerDynamicportpolicyPolicyMove = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerDynamicportpolicyPolicyMove"], () => require("./objectSwitchcontrollerDynamicportpolicyPolicyMove"));

export { ObjectSwitchcontrollerFortilinksettingsArgs, ObjectSwitchcontrollerFortilinksettingsState } from "./objectSwitchcontrollerFortilinksettings";
export type ObjectSwitchcontrollerFortilinksettings = import("./objectSwitchcontrollerFortilinksettings").ObjectSwitchcontrollerFortilinksettings;
export const ObjectSwitchcontrollerFortilinksettings: typeof import("./objectSwitchcontrollerFortilinksettings").ObjectSwitchcontrollerFortilinksettings = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerFortilinksettings"], () => require("./objectSwitchcontrollerFortilinksettings"));

export { ObjectSwitchcontrollerFortilinksettingsNacportsArgs, ObjectSwitchcontrollerFortilinksettingsNacportsState } from "./objectSwitchcontrollerFortilinksettingsNacports";
export type ObjectSwitchcontrollerFortilinksettingsNacports = import("./objectSwitchcontrollerFortilinksettingsNacports").ObjectSwitchcontrollerFortilinksettingsNacports;
export const ObjectSwitchcontrollerFortilinksettingsNacports: typeof import("./objectSwitchcontrollerFortilinksettingsNacports").ObjectSwitchcontrollerFortilinksettingsNacports = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerFortilinksettingsNacports"], () => require("./objectSwitchcontrollerFortilinksettingsNacports"));

export { ObjectSwitchcontrollerLldpprofileArgs, ObjectSwitchcontrollerLldpprofileState } from "./objectSwitchcontrollerLldpprofile";
export type ObjectSwitchcontrollerLldpprofile = import("./objectSwitchcontrollerLldpprofile").ObjectSwitchcontrollerLldpprofile;
export const ObjectSwitchcontrollerLldpprofile: typeof import("./objectSwitchcontrollerLldpprofile").ObjectSwitchcontrollerLldpprofile = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerLldpprofile"], () => require("./objectSwitchcontrollerLldpprofile"));

export { ObjectSwitchcontrollerLldpprofileCustomtlvsArgs, ObjectSwitchcontrollerLldpprofileCustomtlvsState } from "./objectSwitchcontrollerLldpprofileCustomtlvs";
export type ObjectSwitchcontrollerLldpprofileCustomtlvs = import("./objectSwitchcontrollerLldpprofileCustomtlvs").ObjectSwitchcontrollerLldpprofileCustomtlvs;
export const ObjectSwitchcontrollerLldpprofileCustomtlvs: typeof import("./objectSwitchcontrollerLldpprofileCustomtlvs").ObjectSwitchcontrollerLldpprofileCustomtlvs = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerLldpprofileCustomtlvs"], () => require("./objectSwitchcontrollerLldpprofileCustomtlvs"));

export { ObjectSwitchcontrollerMacpolicyArgs, ObjectSwitchcontrollerMacpolicyState } from "./objectSwitchcontrollerMacpolicy";
export type ObjectSwitchcontrollerMacpolicy = import("./objectSwitchcontrollerMacpolicy").ObjectSwitchcontrollerMacpolicy;
export const ObjectSwitchcontrollerMacpolicy: typeof import("./objectSwitchcontrollerMacpolicy").ObjectSwitchcontrollerMacpolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerMacpolicy"], () => require("./objectSwitchcontrollerMacpolicy"));

export { ObjectSwitchcontrollerManagedswitchArgs, ObjectSwitchcontrollerManagedswitchState } from "./objectSwitchcontrollerManagedswitch";
export type ObjectSwitchcontrollerManagedswitch = import("./objectSwitchcontrollerManagedswitch").ObjectSwitchcontrollerManagedswitch;
export const ObjectSwitchcontrollerManagedswitch: typeof import("./objectSwitchcontrollerManagedswitch").ObjectSwitchcontrollerManagedswitch = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerManagedswitch"], () => require("./objectSwitchcontrollerManagedswitch"));

export { ObjectSwitchcontrollerManagedswitchCustomcommandArgs, ObjectSwitchcontrollerManagedswitchCustomcommandState } from "./objectSwitchcontrollerManagedswitchCustomcommand";
export type ObjectSwitchcontrollerManagedswitchCustomcommand = import("./objectSwitchcontrollerManagedswitchCustomcommand").ObjectSwitchcontrollerManagedswitchCustomcommand;
export const ObjectSwitchcontrollerManagedswitchCustomcommand: typeof import("./objectSwitchcontrollerManagedswitchCustomcommand").ObjectSwitchcontrollerManagedswitchCustomcommand = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerManagedswitchCustomcommand"], () => require("./objectSwitchcontrollerManagedswitchCustomcommand"));

export { ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclientArgs, ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclientState } from "./objectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient";
export type ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient = import("./objectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient").ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient;
export const ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient: typeof import("./objectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient").ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient"], () => require("./objectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient"));

export { ObjectSwitchcontrollerManagedswitchPortsArgs, ObjectSwitchcontrollerManagedswitchPortsState } from "./objectSwitchcontrollerManagedswitchPorts";
export type ObjectSwitchcontrollerManagedswitchPorts = import("./objectSwitchcontrollerManagedswitchPorts").ObjectSwitchcontrollerManagedswitchPorts;
export const ObjectSwitchcontrollerManagedswitchPorts: typeof import("./objectSwitchcontrollerManagedswitchPorts").ObjectSwitchcontrollerManagedswitchPorts = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerManagedswitchPorts"], () => require("./objectSwitchcontrollerManagedswitchPorts"));

export { ObjectSwitchcontrollerManagedswitchVlanArgs, ObjectSwitchcontrollerManagedswitchVlanState } from "./objectSwitchcontrollerManagedswitchVlan";
export type ObjectSwitchcontrollerManagedswitchVlan = import("./objectSwitchcontrollerManagedswitchVlan").ObjectSwitchcontrollerManagedswitchVlan;
export const ObjectSwitchcontrollerManagedswitchVlan: typeof import("./objectSwitchcontrollerManagedswitchVlan").ObjectSwitchcontrollerManagedswitchVlan = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerManagedswitchVlan"], () => require("./objectSwitchcontrollerManagedswitchVlan"));

export { ObjectSwitchcontrollerPtpProfileArgs, ObjectSwitchcontrollerPtpProfileState } from "./objectSwitchcontrollerPtpProfile";
export type ObjectSwitchcontrollerPtpProfile = import("./objectSwitchcontrollerPtpProfile").ObjectSwitchcontrollerPtpProfile;
export const ObjectSwitchcontrollerPtpProfile: typeof import("./objectSwitchcontrollerPtpProfile").ObjectSwitchcontrollerPtpProfile = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerPtpProfile"], () => require("./objectSwitchcontrollerPtpProfile"));

export { ObjectSwitchcontrollerQosDot1pmapArgs, ObjectSwitchcontrollerQosDot1pmapState } from "./objectSwitchcontrollerQosDot1pmap";
export type ObjectSwitchcontrollerQosDot1pmap = import("./objectSwitchcontrollerQosDot1pmap").ObjectSwitchcontrollerQosDot1pmap;
export const ObjectSwitchcontrollerQosDot1pmap: typeof import("./objectSwitchcontrollerQosDot1pmap").ObjectSwitchcontrollerQosDot1pmap = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerQosDot1pmap"], () => require("./objectSwitchcontrollerQosDot1pmap"));

export { ObjectSwitchcontrollerQosIpdscpmapArgs, ObjectSwitchcontrollerQosIpdscpmapState } from "./objectSwitchcontrollerQosIpdscpmap";
export type ObjectSwitchcontrollerQosIpdscpmap = import("./objectSwitchcontrollerQosIpdscpmap").ObjectSwitchcontrollerQosIpdscpmap;
export const ObjectSwitchcontrollerQosIpdscpmap: typeof import("./objectSwitchcontrollerQosIpdscpmap").ObjectSwitchcontrollerQosIpdscpmap = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerQosIpdscpmap"], () => require("./objectSwitchcontrollerQosIpdscpmap"));

export { ObjectSwitchcontrollerQosIpdscpmapMapArgs, ObjectSwitchcontrollerQosIpdscpmapMapState } from "./objectSwitchcontrollerQosIpdscpmapMap";
export type ObjectSwitchcontrollerQosIpdscpmapMap = import("./objectSwitchcontrollerQosIpdscpmapMap").ObjectSwitchcontrollerQosIpdscpmapMap;
export const ObjectSwitchcontrollerQosIpdscpmapMap: typeof import("./objectSwitchcontrollerQosIpdscpmapMap").ObjectSwitchcontrollerQosIpdscpmapMap = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerQosIpdscpmapMap"], () => require("./objectSwitchcontrollerQosIpdscpmapMap"));

export { ObjectSwitchcontrollerQosQospolicyArgs, ObjectSwitchcontrollerQosQospolicyState } from "./objectSwitchcontrollerQosQospolicy";
export type ObjectSwitchcontrollerQosQospolicy = import("./objectSwitchcontrollerQosQospolicy").ObjectSwitchcontrollerQosQospolicy;
export const ObjectSwitchcontrollerQosQospolicy: typeof import("./objectSwitchcontrollerQosQospolicy").ObjectSwitchcontrollerQosQospolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerQosQospolicy"], () => require("./objectSwitchcontrollerQosQospolicy"));

export { ObjectSwitchcontrollerQosQueuepolicyArgs, ObjectSwitchcontrollerQosQueuepolicyState } from "./objectSwitchcontrollerQosQueuepolicy";
export type ObjectSwitchcontrollerQosQueuepolicy = import("./objectSwitchcontrollerQosQueuepolicy").ObjectSwitchcontrollerQosQueuepolicy;
export const ObjectSwitchcontrollerQosQueuepolicy: typeof import("./objectSwitchcontrollerQosQueuepolicy").ObjectSwitchcontrollerQosQueuepolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerQosQueuepolicy"], () => require("./objectSwitchcontrollerQosQueuepolicy"));

export { ObjectSwitchcontrollerSecuritypolicy8021xArgs, ObjectSwitchcontrollerSecuritypolicy8021xState } from "./objectSwitchcontrollerSecuritypolicy8021x";
export type ObjectSwitchcontrollerSecuritypolicy8021x = import("./objectSwitchcontrollerSecuritypolicy8021x").ObjectSwitchcontrollerSecuritypolicy8021x;
export const ObjectSwitchcontrollerSecuritypolicy8021x: typeof import("./objectSwitchcontrollerSecuritypolicy8021x").ObjectSwitchcontrollerSecuritypolicy8021x = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerSecuritypolicy8021x"], () => require("./objectSwitchcontrollerSecuritypolicy8021x"));

export { ObjectSwitchcontrollerSwitchinterfacetagArgs, ObjectSwitchcontrollerSwitchinterfacetagState } from "./objectSwitchcontrollerSwitchinterfacetag";
export type ObjectSwitchcontrollerSwitchinterfacetag = import("./objectSwitchcontrollerSwitchinterfacetag").ObjectSwitchcontrollerSwitchinterfacetag;
export const ObjectSwitchcontrollerSwitchinterfacetag: typeof import("./objectSwitchcontrollerSwitchinterfacetag").ObjectSwitchcontrollerSwitchinterfacetag = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerSwitchinterfacetag"], () => require("./objectSwitchcontrollerSwitchinterfacetag"));

export { ObjectSwitchcontrollerTrafficpolicyArgs, ObjectSwitchcontrollerTrafficpolicyState } from "./objectSwitchcontrollerTrafficpolicy";
export type ObjectSwitchcontrollerTrafficpolicy = import("./objectSwitchcontrollerTrafficpolicy").ObjectSwitchcontrollerTrafficpolicy;
export const ObjectSwitchcontrollerTrafficpolicy: typeof import("./objectSwitchcontrollerTrafficpolicy").ObjectSwitchcontrollerTrafficpolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerTrafficpolicy"], () => require("./objectSwitchcontrollerTrafficpolicy"));

export { ObjectSwitchcontrollerVlanpolicyArgs, ObjectSwitchcontrollerVlanpolicyState } from "./objectSwitchcontrollerVlanpolicy";
export type ObjectSwitchcontrollerVlanpolicy = import("./objectSwitchcontrollerVlanpolicy").ObjectSwitchcontrollerVlanpolicy;
export const ObjectSwitchcontrollerVlanpolicy: typeof import("./objectSwitchcontrollerVlanpolicy").ObjectSwitchcontrollerVlanpolicy = null as any;
utilities.lazyLoad(exports, ["ObjectSwitchcontrollerVlanpolicy"], () => require("./objectSwitchcontrollerVlanpolicy"));

export { ObjectSystemCustomlanguageArgs, ObjectSystemCustomlanguageState } from "./objectSystemCustomlanguage";
export type ObjectSystemCustomlanguage = import("./objectSystemCustomlanguage").ObjectSystemCustomlanguage;
export const ObjectSystemCustomlanguage: typeof import("./objectSystemCustomlanguage").ObjectSystemCustomlanguage = null as any;
utilities.lazyLoad(exports, ["ObjectSystemCustomlanguage"], () => require("./objectSystemCustomlanguage"));

export { ObjectSystemDhcpServerArgs, ObjectSystemDhcpServerState } from "./objectSystemDhcpServer";
export type ObjectSystemDhcpServer = import("./objectSystemDhcpServer").ObjectSystemDhcpServer;
export const ObjectSystemDhcpServer: typeof import("./objectSystemDhcpServer").ObjectSystemDhcpServer = null as any;
utilities.lazyLoad(exports, ["ObjectSystemDhcpServer"], () => require("./objectSystemDhcpServer"));

export { ObjectSystemDhcpServerExcluderangeArgs, ObjectSystemDhcpServerExcluderangeState } from "./objectSystemDhcpServerExcluderange";
export type ObjectSystemDhcpServerExcluderange = import("./objectSystemDhcpServerExcluderange").ObjectSystemDhcpServerExcluderange;
export const ObjectSystemDhcpServerExcluderange: typeof import("./objectSystemDhcpServerExcluderange").ObjectSystemDhcpServerExcluderange = null as any;
utilities.lazyLoad(exports, ["ObjectSystemDhcpServerExcluderange"], () => require("./objectSystemDhcpServerExcluderange"));

export { ObjectSystemDhcpServerIprangeArgs, ObjectSystemDhcpServerIprangeState } from "./objectSystemDhcpServerIprange";
export type ObjectSystemDhcpServerIprange = import("./objectSystemDhcpServerIprange").ObjectSystemDhcpServerIprange;
export const ObjectSystemDhcpServerIprange: typeof import("./objectSystemDhcpServerIprange").ObjectSystemDhcpServerIprange = null as any;
utilities.lazyLoad(exports, ["ObjectSystemDhcpServerIprange"], () => require("./objectSystemDhcpServerIprange"));

export { ObjectSystemDhcpServerOptionsArgs, ObjectSystemDhcpServerOptionsState } from "./objectSystemDhcpServerOptions";
export type ObjectSystemDhcpServerOptions = import("./objectSystemDhcpServerOptions").ObjectSystemDhcpServerOptions;
export const ObjectSystemDhcpServerOptions: typeof import("./objectSystemDhcpServerOptions").ObjectSystemDhcpServerOptions = null as any;
utilities.lazyLoad(exports, ["ObjectSystemDhcpServerOptions"], () => require("./objectSystemDhcpServerOptions"));

export { ObjectSystemDhcpServerReservedaddressArgs, ObjectSystemDhcpServerReservedaddressState } from "./objectSystemDhcpServerReservedaddress";
export type ObjectSystemDhcpServerReservedaddress = import("./objectSystemDhcpServerReservedaddress").ObjectSystemDhcpServerReservedaddress;
export const ObjectSystemDhcpServerReservedaddress: typeof import("./objectSystemDhcpServerReservedaddress").ObjectSystemDhcpServerReservedaddress = null as any;
utilities.lazyLoad(exports, ["ObjectSystemDhcpServerReservedaddress"], () => require("./objectSystemDhcpServerReservedaddress"));

export { ObjectSystemExternalresourceArgs, ObjectSystemExternalresourceState } from "./objectSystemExternalresource";
export type ObjectSystemExternalresource = import("./objectSystemExternalresource").ObjectSystemExternalresource;
export const ObjectSystemExternalresource: typeof import("./objectSystemExternalresource").ObjectSystemExternalresource = null as any;
utilities.lazyLoad(exports, ["ObjectSystemExternalresource"], () => require("./objectSystemExternalresource"));

export { ObjectSystemExternalresourceMoveArgs, ObjectSystemExternalresourceMoveState } from "./objectSystemExternalresourceMove";
export type ObjectSystemExternalresourceMove = import("./objectSystemExternalresourceMove").ObjectSystemExternalresourceMove;
export const ObjectSystemExternalresourceMove: typeof import("./objectSystemExternalresourceMove").ObjectSystemExternalresourceMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemExternalresourceMove"], () => require("./objectSystemExternalresourceMove"));

export { ObjectSystemFortiguardArgs, ObjectSystemFortiguardState } from "./objectSystemFortiguard";
export type ObjectSystemFortiguard = import("./objectSystemFortiguard").ObjectSystemFortiguard;
export const ObjectSystemFortiguard: typeof import("./objectSystemFortiguard").ObjectSystemFortiguard = null as any;
utilities.lazyLoad(exports, ["ObjectSystemFortiguard"], () => require("./objectSystemFortiguard"));

export { ObjectSystemGeoipcountryArgs, ObjectSystemGeoipcountryState } from "./objectSystemGeoipcountry";
export type ObjectSystemGeoipcountry = import("./objectSystemGeoipcountry").ObjectSystemGeoipcountry;
export const ObjectSystemGeoipcountry: typeof import("./objectSystemGeoipcountry").ObjectSystemGeoipcountry = null as any;
utilities.lazyLoad(exports, ["ObjectSystemGeoipcountry"], () => require("./objectSystemGeoipcountry"));

export { ObjectSystemGeoipoverrideArgs, ObjectSystemGeoipoverrideState } from "./objectSystemGeoipoverride";
export type ObjectSystemGeoipoverride = import("./objectSystemGeoipoverride").ObjectSystemGeoipoverride;
export const ObjectSystemGeoipoverride: typeof import("./objectSystemGeoipoverride").ObjectSystemGeoipoverride = null as any;
utilities.lazyLoad(exports, ["ObjectSystemGeoipoverride"], () => require("./objectSystemGeoipoverride"));

export { ObjectSystemGeoipoverrideIp6rangeArgs, ObjectSystemGeoipoverrideIp6rangeState } from "./objectSystemGeoipoverrideIp6range";
export type ObjectSystemGeoipoverrideIp6range = import("./objectSystemGeoipoverrideIp6range").ObjectSystemGeoipoverrideIp6range;
export const ObjectSystemGeoipoverrideIp6range: typeof import("./objectSystemGeoipoverrideIp6range").ObjectSystemGeoipoverrideIp6range = null as any;
utilities.lazyLoad(exports, ["ObjectSystemGeoipoverrideIp6range"], () => require("./objectSystemGeoipoverrideIp6range"));

export { ObjectSystemGeoipoverrideIprangeArgs, ObjectSystemGeoipoverrideIprangeState } from "./objectSystemGeoipoverrideIprange";
export type ObjectSystemGeoipoverrideIprange = import("./objectSystemGeoipoverrideIprange").ObjectSystemGeoipoverrideIprange;
export const ObjectSystemGeoipoverrideIprange: typeof import("./objectSystemGeoipoverrideIprange").ObjectSystemGeoipoverrideIprange = null as any;
utilities.lazyLoad(exports, ["ObjectSystemGeoipoverrideIprange"], () => require("./objectSystemGeoipoverrideIprange"));

export { ObjectSystemMetaArgs, ObjectSystemMetaState } from "./objectSystemMeta";
export type ObjectSystemMeta = import("./objectSystemMeta").ObjectSystemMeta;
export const ObjectSystemMeta: typeof import("./objectSystemMeta").ObjectSystemMeta = null as any;
utilities.lazyLoad(exports, ["ObjectSystemMeta"], () => require("./objectSystemMeta"));

export { ObjectSystemMetaSysMetaFieldsArgs, ObjectSystemMetaSysMetaFieldsState } from "./objectSystemMetaSysMetaFields";
export type ObjectSystemMetaSysMetaFields = import("./objectSystemMetaSysMetaFields").ObjectSystemMetaSysMetaFields;
export const ObjectSystemMetaSysMetaFields: typeof import("./objectSystemMetaSysMetaFields").ObjectSystemMetaSysMetaFields = null as any;
utilities.lazyLoad(exports, ["ObjectSystemMetaSysMetaFields"], () => require("./objectSystemMetaSysMetaFields"));

export { ObjectSystemNpuArgs, ObjectSystemNpuState } from "./objectSystemNpu";
export type ObjectSystemNpu = import("./objectSystemNpu").ObjectSystemNpu;
export const ObjectSystemNpu: typeof import("./objectSystemNpu").ObjectSystemNpu = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpu"], () => require("./objectSystemNpu"));

export { ObjectSystemNpuBackgroundssescanArgs, ObjectSystemNpuBackgroundssescanState } from "./objectSystemNpuBackgroundssescan";
export type ObjectSystemNpuBackgroundssescan = import("./objectSystemNpuBackgroundssescan").ObjectSystemNpuBackgroundssescan;
export const ObjectSystemNpuBackgroundssescan: typeof import("./objectSystemNpuBackgroundssescan").ObjectSystemNpuBackgroundssescan = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuBackgroundssescan"], () => require("./objectSystemNpuBackgroundssescan"));

export { ObjectSystemNpuDosoptionsArgs, ObjectSystemNpuDosoptionsState } from "./objectSystemNpuDosoptions";
export type ObjectSystemNpuDosoptions = import("./objectSystemNpuDosoptions").ObjectSystemNpuDosoptions;
export const ObjectSystemNpuDosoptions: typeof import("./objectSystemNpuDosoptions").ObjectSystemNpuDosoptions = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuDosoptions"], () => require("./objectSystemNpuDosoptions"));

export { ObjectSystemNpuDswdtsprofileArgs, ObjectSystemNpuDswdtsprofileState } from "./objectSystemNpuDswdtsprofile";
export type ObjectSystemNpuDswdtsprofile = import("./objectSystemNpuDswdtsprofile").ObjectSystemNpuDswdtsprofile;
export const ObjectSystemNpuDswdtsprofile: typeof import("./objectSystemNpuDswdtsprofile").ObjectSystemNpuDswdtsprofile = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuDswdtsprofile"], () => require("./objectSystemNpuDswdtsprofile"));

export { ObjectSystemNpuDswqueuedtsprofileArgs, ObjectSystemNpuDswqueuedtsprofileState } from "./objectSystemNpuDswqueuedtsprofile";
export type ObjectSystemNpuDswqueuedtsprofile = import("./objectSystemNpuDswqueuedtsprofile").ObjectSystemNpuDswqueuedtsprofile;
export const ObjectSystemNpuDswqueuedtsprofile: typeof import("./objectSystemNpuDswqueuedtsprofile").ObjectSystemNpuDswqueuedtsprofile = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuDswqueuedtsprofile"], () => require("./objectSystemNpuDswqueuedtsprofile"));

export { ObjectSystemNpuFpanomalyArgs, ObjectSystemNpuFpanomalyState } from "./objectSystemNpuFpanomaly";
export type ObjectSystemNpuFpanomaly = import("./objectSystemNpuFpanomaly").ObjectSystemNpuFpanomaly;
export const ObjectSystemNpuFpanomaly: typeof import("./objectSystemNpuFpanomaly").ObjectSystemNpuFpanomaly = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuFpanomaly"], () => require("./objectSystemNpuFpanomaly"));

export { ObjectSystemNpuHpeArgs, ObjectSystemNpuHpeState } from "./objectSystemNpuHpe";
export type ObjectSystemNpuHpe = import("./objectSystemNpuHpe").ObjectSystemNpuHpe;
export const ObjectSystemNpuHpe: typeof import("./objectSystemNpuHpe").ObjectSystemNpuHpe = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuHpe"], () => require("./objectSystemNpuHpe"));

export { ObjectSystemNpuIcmpratectrlArgs, ObjectSystemNpuIcmpratectrlState } from "./objectSystemNpuIcmpratectrl";
export type ObjectSystemNpuIcmpratectrl = import("./objectSystemNpuIcmpratectrl").ObjectSystemNpuIcmpratectrl;
export const ObjectSystemNpuIcmpratectrl: typeof import("./objectSystemNpuIcmpratectrl").ObjectSystemNpuIcmpratectrl = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuIcmpratectrl"], () => require("./objectSystemNpuIcmpratectrl"));

export { ObjectSystemNpuIpreassemblyArgs, ObjectSystemNpuIpreassemblyState } from "./objectSystemNpuIpreassembly";
export type ObjectSystemNpuIpreassembly = import("./objectSystemNpuIpreassembly").ObjectSystemNpuIpreassembly;
export const ObjectSystemNpuIpreassembly: typeof import("./objectSystemNpuIpreassembly").ObjectSystemNpuIpreassembly = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuIpreassembly"], () => require("./objectSystemNpuIpreassembly"));

export { ObjectSystemNpuIsfnpqueuesArgs, ObjectSystemNpuIsfnpqueuesState } from "./objectSystemNpuIsfnpqueues";
export type ObjectSystemNpuIsfnpqueues = import("./objectSystemNpuIsfnpqueues").ObjectSystemNpuIsfnpqueues;
export const ObjectSystemNpuIsfnpqueues: typeof import("./objectSystemNpuIsfnpqueues").ObjectSystemNpuIsfnpqueues = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuIsfnpqueues"], () => require("./objectSystemNpuIsfnpqueues"));

export { ObjectSystemNpuNpqueuesArgs, ObjectSystemNpuNpqueuesState } from "./objectSystemNpuNpqueues";
export type ObjectSystemNpuNpqueues = import("./objectSystemNpuNpqueues").ObjectSystemNpuNpqueues;
export const ObjectSystemNpuNpqueues: typeof import("./objectSystemNpuNpqueues").ObjectSystemNpuNpqueues = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNpqueues"], () => require("./objectSystemNpuNpqueues"));

export { ObjectSystemNpuNpqueuesEthernettypeArgs, ObjectSystemNpuNpqueuesEthernettypeState } from "./objectSystemNpuNpqueuesEthernettype";
export type ObjectSystemNpuNpqueuesEthernettype = import("./objectSystemNpuNpqueuesEthernettype").ObjectSystemNpuNpqueuesEthernettype;
export const ObjectSystemNpuNpqueuesEthernettype: typeof import("./objectSystemNpuNpqueuesEthernettype").ObjectSystemNpuNpqueuesEthernettype = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNpqueuesEthernettype"], () => require("./objectSystemNpuNpqueuesEthernettype"));

export { ObjectSystemNpuNpqueuesIpprotocolArgs, ObjectSystemNpuNpqueuesIpprotocolState } from "./objectSystemNpuNpqueuesIpprotocol";
export type ObjectSystemNpuNpqueuesIpprotocol = import("./objectSystemNpuNpqueuesIpprotocol").ObjectSystemNpuNpqueuesIpprotocol;
export const ObjectSystemNpuNpqueuesIpprotocol: typeof import("./objectSystemNpuNpqueuesIpprotocol").ObjectSystemNpuNpqueuesIpprotocol = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNpqueuesIpprotocol"], () => require("./objectSystemNpuNpqueuesIpprotocol"));

export { ObjectSystemNpuNpqueuesIpserviceArgs, ObjectSystemNpuNpqueuesIpserviceState } from "./objectSystemNpuNpqueuesIpservice";
export type ObjectSystemNpuNpqueuesIpservice = import("./objectSystemNpuNpqueuesIpservice").ObjectSystemNpuNpqueuesIpservice;
export const ObjectSystemNpuNpqueuesIpservice: typeof import("./objectSystemNpuNpqueuesIpservice").ObjectSystemNpuNpqueuesIpservice = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNpqueuesIpservice"], () => require("./objectSystemNpuNpqueuesIpservice"));

export { ObjectSystemNpuNpqueuesProfileArgs, ObjectSystemNpuNpqueuesProfileState } from "./objectSystemNpuNpqueuesProfile";
export type ObjectSystemNpuNpqueuesProfile = import("./objectSystemNpuNpqueuesProfile").ObjectSystemNpuNpqueuesProfile;
export const ObjectSystemNpuNpqueuesProfile: typeof import("./objectSystemNpuNpqueuesProfile").ObjectSystemNpuNpqueuesProfile = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNpqueuesProfile"], () => require("./objectSystemNpuNpqueuesProfile"));

export { ObjectSystemNpuNpqueuesSchedulerArgs, ObjectSystemNpuNpqueuesSchedulerState } from "./objectSystemNpuNpqueuesScheduler";
export type ObjectSystemNpuNpqueuesScheduler = import("./objectSystemNpuNpqueuesScheduler").ObjectSystemNpuNpqueuesScheduler;
export const ObjectSystemNpuNpqueuesScheduler: typeof import("./objectSystemNpuNpqueuesScheduler").ObjectSystemNpuNpqueuesScheduler = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNpqueuesScheduler"], () => require("./objectSystemNpuNpqueuesScheduler"));

export { ObjectSystemNpuNputcamArgs, ObjectSystemNpuNputcamState } from "./objectSystemNpuNputcam";
export type ObjectSystemNpuNputcam = import("./objectSystemNpuNputcam").ObjectSystemNpuNputcam;
export const ObjectSystemNpuNputcam: typeof import("./objectSystemNpuNputcam").ObjectSystemNpuNputcam = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNputcam"], () => require("./objectSystemNpuNputcam"));

export { ObjectSystemNpuNputcamDataArgs, ObjectSystemNpuNputcamDataState } from "./objectSystemNpuNputcamData";
export type ObjectSystemNpuNputcamData = import("./objectSystemNpuNputcamData").ObjectSystemNpuNputcamData;
export const ObjectSystemNpuNputcamData: typeof import("./objectSystemNpuNputcamData").ObjectSystemNpuNputcamData = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNputcamData"], () => require("./objectSystemNpuNputcamData"));

export { ObjectSystemNpuNputcamMaskArgs, ObjectSystemNpuNputcamMaskState } from "./objectSystemNpuNputcamMask";
export type ObjectSystemNpuNputcamMask = import("./objectSystemNpuNputcamMask").ObjectSystemNpuNputcamMask;
export const ObjectSystemNpuNputcamMask: typeof import("./objectSystemNpuNputcamMask").ObjectSystemNpuNputcamMask = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNputcamMask"], () => require("./objectSystemNpuNputcamMask"));

export { ObjectSystemNpuNputcamMiractArgs, ObjectSystemNpuNputcamMiractState } from "./objectSystemNpuNputcamMiract";
export type ObjectSystemNpuNputcamMiract = import("./objectSystemNpuNputcamMiract").ObjectSystemNpuNputcamMiract;
export const ObjectSystemNpuNputcamMiract: typeof import("./objectSystemNpuNputcamMiract").ObjectSystemNpuNputcamMiract = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNputcamMiract"], () => require("./objectSystemNpuNputcamMiract"));

export { ObjectSystemNpuNputcamPriactArgs, ObjectSystemNpuNputcamPriactState } from "./objectSystemNpuNputcamPriact";
export type ObjectSystemNpuNputcamPriact = import("./objectSystemNpuNputcamPriact").ObjectSystemNpuNputcamPriact;
export const ObjectSystemNpuNputcamPriact: typeof import("./objectSystemNpuNputcamPriact").ObjectSystemNpuNputcamPriact = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNputcamPriact"], () => require("./objectSystemNpuNputcamPriact"));

export { ObjectSystemNpuNputcamSactArgs, ObjectSystemNpuNputcamSactState } from "./objectSystemNpuNputcamSact";
export type ObjectSystemNpuNputcamSact = import("./objectSystemNpuNputcamSact").ObjectSystemNpuNputcamSact;
export const ObjectSystemNpuNputcamSact: typeof import("./objectSystemNpuNputcamSact").ObjectSystemNpuNputcamSact = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNputcamSact"], () => require("./objectSystemNpuNputcamSact"));

export { ObjectSystemNpuNputcamTactArgs, ObjectSystemNpuNputcamTactState } from "./objectSystemNpuNputcamTact";
export type ObjectSystemNpuNputcamTact = import("./objectSystemNpuNputcamTact").ObjectSystemNpuNputcamTact;
export const ObjectSystemNpuNputcamTact: typeof import("./objectSystemNpuNputcamTact").ObjectSystemNpuNputcamTact = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuNputcamTact"], () => require("./objectSystemNpuNputcamTact"));

export { ObjectSystemNpuPortcpumapArgs, ObjectSystemNpuPortcpumapState } from "./objectSystemNpuPortcpumap";
export type ObjectSystemNpuPortcpumap = import("./objectSystemNpuPortcpumap").ObjectSystemNpuPortcpumap;
export const ObjectSystemNpuPortcpumap: typeof import("./objectSystemNpuPortcpumap").ObjectSystemNpuPortcpumap = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuPortcpumap"], () => require("./objectSystemNpuPortcpumap"));

export { ObjectSystemNpuPortnpumapArgs, ObjectSystemNpuPortnpumapState } from "./objectSystemNpuPortnpumap";
export type ObjectSystemNpuPortnpumap = import("./objectSystemNpuPortnpumap").ObjectSystemNpuPortnpumap;
export const ObjectSystemNpuPortnpumap: typeof import("./objectSystemNpuPortnpumap").ObjectSystemNpuPortnpumap = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuPortnpumap"], () => require("./objectSystemNpuPortnpumap"));

export { ObjectSystemNpuPortpathoptionArgs, ObjectSystemNpuPortpathoptionState } from "./objectSystemNpuPortpathoption";
export type ObjectSystemNpuPortpathoption = import("./objectSystemNpuPortpathoption").ObjectSystemNpuPortpathoption;
export const ObjectSystemNpuPortpathoption: typeof import("./objectSystemNpuPortpathoption").ObjectSystemNpuPortpathoption = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuPortpathoption"], () => require("./objectSystemNpuPortpathoption"));

export { ObjectSystemNpuPriorityprotocolArgs, ObjectSystemNpuPriorityprotocolState } from "./objectSystemNpuPriorityprotocol";
export type ObjectSystemNpuPriorityprotocol = import("./objectSystemNpuPriorityprotocol").ObjectSystemNpuPriorityprotocol;
export const ObjectSystemNpuPriorityprotocol: typeof import("./objectSystemNpuPriorityprotocol").ObjectSystemNpuPriorityprotocol = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuPriorityprotocol"], () => require("./objectSystemNpuPriorityprotocol"));

export { ObjectSystemNpuSsehascanArgs, ObjectSystemNpuSsehascanState } from "./objectSystemNpuSsehascan";
export type ObjectSystemNpuSsehascan = import("./objectSystemNpuSsehascan").ObjectSystemNpuSsehascan;
export const ObjectSystemNpuSsehascan: typeof import("./objectSystemNpuSsehascan").ObjectSystemNpuSsehascan = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuSsehascan"], () => require("./objectSystemNpuSsehascan"));

export { ObjectSystemNpuSwehhashArgs, ObjectSystemNpuSwehhashState } from "./objectSystemNpuSwehhash";
export type ObjectSystemNpuSwehhash = import("./objectSystemNpuSwehhash").ObjectSystemNpuSwehhash;
export const ObjectSystemNpuSwehhash: typeof import("./objectSystemNpuSwehhash").ObjectSystemNpuSwehhash = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuSwehhash"], () => require("./objectSystemNpuSwehhash"));

export { ObjectSystemNpuSwtrhashArgs, ObjectSystemNpuSwtrhashState } from "./objectSystemNpuSwtrhash";
export type ObjectSystemNpuSwtrhash = import("./objectSystemNpuSwtrhash").ObjectSystemNpuSwtrhash;
export const ObjectSystemNpuSwtrhash: typeof import("./objectSystemNpuSwtrhash").ObjectSystemNpuSwtrhash = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuSwtrhash"], () => require("./objectSystemNpuSwtrhash"));

export { ObjectSystemNpuTcptimeoutprofileArgs, ObjectSystemNpuTcptimeoutprofileState } from "./objectSystemNpuTcptimeoutprofile";
export type ObjectSystemNpuTcptimeoutprofile = import("./objectSystemNpuTcptimeoutprofile").ObjectSystemNpuTcptimeoutprofile;
export const ObjectSystemNpuTcptimeoutprofile: typeof import("./objectSystemNpuTcptimeoutprofile").ObjectSystemNpuTcptimeoutprofile = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuTcptimeoutprofile"], () => require("./objectSystemNpuTcptimeoutprofile"));

export { ObjectSystemNpuUdptimeoutprofileArgs, ObjectSystemNpuUdptimeoutprofileState } from "./objectSystemNpuUdptimeoutprofile";
export type ObjectSystemNpuUdptimeoutprofile = import("./objectSystemNpuUdptimeoutprofile").ObjectSystemNpuUdptimeoutprofile;
export const ObjectSystemNpuUdptimeoutprofile: typeof import("./objectSystemNpuUdptimeoutprofile").ObjectSystemNpuUdptimeoutprofile = null as any;
utilities.lazyLoad(exports, ["ObjectSystemNpuUdptimeoutprofile"], () => require("./objectSystemNpuUdptimeoutprofile"));

export { ObjectSystemObjecttaggingArgs, ObjectSystemObjecttaggingState } from "./objectSystemObjecttagging";
export type ObjectSystemObjecttagging = import("./objectSystemObjecttagging").ObjectSystemObjecttagging;
export const ObjectSystemObjecttagging: typeof import("./objectSystemObjecttagging").ObjectSystemObjecttagging = null as any;
utilities.lazyLoad(exports, ["ObjectSystemObjecttagging"], () => require("./objectSystemObjecttagging"));

export { ObjectSystemReplacemsggroupArgs, ObjectSystemReplacemsggroupState } from "./objectSystemReplacemsggroup";
export type ObjectSystemReplacemsggroup = import("./objectSystemReplacemsggroup").ObjectSystemReplacemsggroup;
export const ObjectSystemReplacemsggroup: typeof import("./objectSystemReplacemsggroup").ObjectSystemReplacemsggroup = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroup"], () => require("./objectSystemReplacemsggroup"));

export { ObjectSystemReplacemsggroupAdminArgs, ObjectSystemReplacemsggroupAdminState } from "./objectSystemReplacemsggroupAdmin";
export type ObjectSystemReplacemsggroupAdmin = import("./objectSystemReplacemsggroupAdmin").ObjectSystemReplacemsggroupAdmin;
export const ObjectSystemReplacemsggroupAdmin: typeof import("./objectSystemReplacemsggroupAdmin").ObjectSystemReplacemsggroupAdmin = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupAdmin"], () => require("./objectSystemReplacemsggroupAdmin"));

export { ObjectSystemReplacemsggroupAlertmailArgs, ObjectSystemReplacemsggroupAlertmailState } from "./objectSystemReplacemsggroupAlertmail";
export type ObjectSystemReplacemsggroupAlertmail = import("./objectSystemReplacemsggroupAlertmail").ObjectSystemReplacemsggroupAlertmail;
export const ObjectSystemReplacemsggroupAlertmail: typeof import("./objectSystemReplacemsggroupAlertmail").ObjectSystemReplacemsggroupAlertmail = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupAlertmail"], () => require("./objectSystemReplacemsggroupAlertmail"));

export { ObjectSystemReplacemsggroupAuthArgs, ObjectSystemReplacemsggroupAuthState } from "./objectSystemReplacemsggroupAuth";
export type ObjectSystemReplacemsggroupAuth = import("./objectSystemReplacemsggroupAuth").ObjectSystemReplacemsggroupAuth;
export const ObjectSystemReplacemsggroupAuth: typeof import("./objectSystemReplacemsggroupAuth").ObjectSystemReplacemsggroupAuth = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupAuth"], () => require("./objectSystemReplacemsggroupAuth"));

export { ObjectSystemReplacemsggroupAutomationArgs, ObjectSystemReplacemsggroupAutomationState } from "./objectSystemReplacemsggroupAutomation";
export type ObjectSystemReplacemsggroupAutomation = import("./objectSystemReplacemsggroupAutomation").ObjectSystemReplacemsggroupAutomation;
export const ObjectSystemReplacemsggroupAutomation: typeof import("./objectSystemReplacemsggroupAutomation").ObjectSystemReplacemsggroupAutomation = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupAutomation"], () => require("./objectSystemReplacemsggroupAutomation"));

export { ObjectSystemReplacemsggroupCustommessageArgs, ObjectSystemReplacemsggroupCustommessageState } from "./objectSystemReplacemsggroupCustommessage";
export type ObjectSystemReplacemsggroupCustommessage = import("./objectSystemReplacemsggroupCustommessage").ObjectSystemReplacemsggroupCustommessage;
export const ObjectSystemReplacemsggroupCustommessage: typeof import("./objectSystemReplacemsggroupCustommessage").ObjectSystemReplacemsggroupCustommessage = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupCustommessage"], () => require("./objectSystemReplacemsggroupCustommessage"));

export { ObjectSystemReplacemsggroupDevicedetectionportalArgs, ObjectSystemReplacemsggroupDevicedetectionportalState } from "./objectSystemReplacemsggroupDevicedetectionportal";
export type ObjectSystemReplacemsggroupDevicedetectionportal = import("./objectSystemReplacemsggroupDevicedetectionportal").ObjectSystemReplacemsggroupDevicedetectionportal;
export const ObjectSystemReplacemsggroupDevicedetectionportal: typeof import("./objectSystemReplacemsggroupDevicedetectionportal").ObjectSystemReplacemsggroupDevicedetectionportal = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupDevicedetectionportal"], () => require("./objectSystemReplacemsggroupDevicedetectionportal"));

export { ObjectSystemReplacemsggroupFortiguardwfArgs, ObjectSystemReplacemsggroupFortiguardwfState } from "./objectSystemReplacemsggroupFortiguardwf";
export type ObjectSystemReplacemsggroupFortiguardwf = import("./objectSystemReplacemsggroupFortiguardwf").ObjectSystemReplacemsggroupFortiguardwf;
export const ObjectSystemReplacemsggroupFortiguardwf: typeof import("./objectSystemReplacemsggroupFortiguardwf").ObjectSystemReplacemsggroupFortiguardwf = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupFortiguardwf"], () => require("./objectSystemReplacemsggroupFortiguardwf"));

export { ObjectSystemReplacemsggroupFtpArgs, ObjectSystemReplacemsggroupFtpState } from "./objectSystemReplacemsggroupFtp";
export type ObjectSystemReplacemsggroupFtp = import("./objectSystemReplacemsggroupFtp").ObjectSystemReplacemsggroupFtp;
export const ObjectSystemReplacemsggroupFtp: typeof import("./objectSystemReplacemsggroupFtp").ObjectSystemReplacemsggroupFtp = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupFtp"], () => require("./objectSystemReplacemsggroupFtp"));

export { ObjectSystemReplacemsggroupHttpArgs, ObjectSystemReplacemsggroupHttpState } from "./objectSystemReplacemsggroupHttp";
export type ObjectSystemReplacemsggroupHttp = import("./objectSystemReplacemsggroupHttp").ObjectSystemReplacemsggroupHttp;
export const ObjectSystemReplacemsggroupHttp: typeof import("./objectSystemReplacemsggroupHttp").ObjectSystemReplacemsggroupHttp = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupHttp"], () => require("./objectSystemReplacemsggroupHttp"));

export { ObjectSystemReplacemsggroupIcapArgs, ObjectSystemReplacemsggroupIcapState } from "./objectSystemReplacemsggroupIcap";
export type ObjectSystemReplacemsggroupIcap = import("./objectSystemReplacemsggroupIcap").ObjectSystemReplacemsggroupIcap;
export const ObjectSystemReplacemsggroupIcap: typeof import("./objectSystemReplacemsggroupIcap").ObjectSystemReplacemsggroupIcap = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupIcap"], () => require("./objectSystemReplacemsggroupIcap"));

export { ObjectSystemReplacemsggroupMailArgs, ObjectSystemReplacemsggroupMailState } from "./objectSystemReplacemsggroupMail";
export type ObjectSystemReplacemsggroupMail = import("./objectSystemReplacemsggroupMail").ObjectSystemReplacemsggroupMail;
export const ObjectSystemReplacemsggroupMail: typeof import("./objectSystemReplacemsggroupMail").ObjectSystemReplacemsggroupMail = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupMail"], () => require("./objectSystemReplacemsggroupMail"));

export { ObjectSystemReplacemsggroupNacquarArgs, ObjectSystemReplacemsggroupNacquarState } from "./objectSystemReplacemsggroupNacquar";
export type ObjectSystemReplacemsggroupNacquar = import("./objectSystemReplacemsggroupNacquar").ObjectSystemReplacemsggroupNacquar;
export const ObjectSystemReplacemsggroupNacquar: typeof import("./objectSystemReplacemsggroupNacquar").ObjectSystemReplacemsggroupNacquar = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupNacquar"], () => require("./objectSystemReplacemsggroupNacquar"));

export { ObjectSystemReplacemsggroupNntpArgs, ObjectSystemReplacemsggroupNntpState } from "./objectSystemReplacemsggroupNntp";
export type ObjectSystemReplacemsggroupNntp = import("./objectSystemReplacemsggroupNntp").ObjectSystemReplacemsggroupNntp;
export const ObjectSystemReplacemsggroupNntp: typeof import("./objectSystemReplacemsggroupNntp").ObjectSystemReplacemsggroupNntp = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupNntp"], () => require("./objectSystemReplacemsggroupNntp"));

export { ObjectSystemReplacemsggroupSpamArgs, ObjectSystemReplacemsggroupSpamState } from "./objectSystemReplacemsggroupSpam";
export type ObjectSystemReplacemsggroupSpam = import("./objectSystemReplacemsggroupSpam").ObjectSystemReplacemsggroupSpam;
export const ObjectSystemReplacemsggroupSpam: typeof import("./objectSystemReplacemsggroupSpam").ObjectSystemReplacemsggroupSpam = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupSpam"], () => require("./objectSystemReplacemsggroupSpam"));

export { ObjectSystemReplacemsggroupSslvpnArgs, ObjectSystemReplacemsggroupSslvpnState } from "./objectSystemReplacemsggroupSslvpn";
export type ObjectSystemReplacemsggroupSslvpn = import("./objectSystemReplacemsggroupSslvpn").ObjectSystemReplacemsggroupSslvpn;
export const ObjectSystemReplacemsggroupSslvpn: typeof import("./objectSystemReplacemsggroupSslvpn").ObjectSystemReplacemsggroupSslvpn = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupSslvpn"], () => require("./objectSystemReplacemsggroupSslvpn"));

export { ObjectSystemReplacemsggroupTrafficquotaArgs, ObjectSystemReplacemsggroupTrafficquotaState } from "./objectSystemReplacemsggroupTrafficquota";
export type ObjectSystemReplacemsggroupTrafficquota = import("./objectSystemReplacemsggroupTrafficquota").ObjectSystemReplacemsggroupTrafficquota;
export const ObjectSystemReplacemsggroupTrafficquota: typeof import("./objectSystemReplacemsggroupTrafficquota").ObjectSystemReplacemsggroupTrafficquota = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupTrafficquota"], () => require("./objectSystemReplacemsggroupTrafficquota"));

export { ObjectSystemReplacemsggroupUtmArgs, ObjectSystemReplacemsggroupUtmState } from "./objectSystemReplacemsggroupUtm";
export type ObjectSystemReplacemsggroupUtm = import("./objectSystemReplacemsggroupUtm").ObjectSystemReplacemsggroupUtm;
export const ObjectSystemReplacemsggroupUtm: typeof import("./objectSystemReplacemsggroupUtm").ObjectSystemReplacemsggroupUtm = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupUtm"], () => require("./objectSystemReplacemsggroupUtm"));

export { ObjectSystemReplacemsggroupWebproxyArgs, ObjectSystemReplacemsggroupWebproxyState } from "./objectSystemReplacemsggroupWebproxy";
export type ObjectSystemReplacemsggroupWebproxy = import("./objectSystemReplacemsggroupWebproxy").ObjectSystemReplacemsggroupWebproxy;
export const ObjectSystemReplacemsggroupWebproxy: typeof import("./objectSystemReplacemsggroupWebproxy").ObjectSystemReplacemsggroupWebproxy = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsggroupWebproxy"], () => require("./objectSystemReplacemsggroupWebproxy"));

export { ObjectSystemReplacemsgimageArgs, ObjectSystemReplacemsgimageState } from "./objectSystemReplacemsgimage";
export type ObjectSystemReplacemsgimage = import("./objectSystemReplacemsgimage").ObjectSystemReplacemsgimage;
export const ObjectSystemReplacemsgimage: typeof import("./objectSystemReplacemsgimage").ObjectSystemReplacemsgimage = null as any;
utilities.lazyLoad(exports, ["ObjectSystemReplacemsgimage"], () => require("./objectSystemReplacemsgimage"));

export { ObjectSystemSdnconnectorArgs, ObjectSystemSdnconnectorState } from "./objectSystemSdnconnector";
export type ObjectSystemSdnconnector = import("./objectSystemSdnconnector").ObjectSystemSdnconnector;
export const ObjectSystemSdnconnector: typeof import("./objectSystemSdnconnector").ObjectSystemSdnconnector = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnector"], () => require("./objectSystemSdnconnector"));

export { ObjectSystemSdnconnectorCompartmentlistArgs, ObjectSystemSdnconnectorCompartmentlistState } from "./objectSystemSdnconnectorCompartmentlist";
export type ObjectSystemSdnconnectorCompartmentlist = import("./objectSystemSdnconnectorCompartmentlist").ObjectSystemSdnconnectorCompartmentlist;
export const ObjectSystemSdnconnectorCompartmentlist: typeof import("./objectSystemSdnconnectorCompartmentlist").ObjectSystemSdnconnectorCompartmentlist = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorCompartmentlist"], () => require("./objectSystemSdnconnectorCompartmentlist"));

export { ObjectSystemSdnconnectorCompartmentlistMoveArgs, ObjectSystemSdnconnectorCompartmentlistMoveState } from "./objectSystemSdnconnectorCompartmentlistMove";
export type ObjectSystemSdnconnectorCompartmentlistMove = import("./objectSystemSdnconnectorCompartmentlistMove").ObjectSystemSdnconnectorCompartmentlistMove;
export const ObjectSystemSdnconnectorCompartmentlistMove: typeof import("./objectSystemSdnconnectorCompartmentlistMove").ObjectSystemSdnconnectorCompartmentlistMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorCompartmentlistMove"], () => require("./objectSystemSdnconnectorCompartmentlistMove"));

export { ObjectSystemSdnconnectorExternalaccountlistArgs, ObjectSystemSdnconnectorExternalaccountlistState } from "./objectSystemSdnconnectorExternalaccountlist";
export type ObjectSystemSdnconnectorExternalaccountlist = import("./objectSystemSdnconnectorExternalaccountlist").ObjectSystemSdnconnectorExternalaccountlist;
export const ObjectSystemSdnconnectorExternalaccountlist: typeof import("./objectSystemSdnconnectorExternalaccountlist").ObjectSystemSdnconnectorExternalaccountlist = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorExternalaccountlist"], () => require("./objectSystemSdnconnectorExternalaccountlist"));

export { ObjectSystemSdnconnectorExternalaccountlistMoveArgs, ObjectSystemSdnconnectorExternalaccountlistMoveState } from "./objectSystemSdnconnectorExternalaccountlistMove";
export type ObjectSystemSdnconnectorExternalaccountlistMove = import("./objectSystemSdnconnectorExternalaccountlistMove").ObjectSystemSdnconnectorExternalaccountlistMove;
export const ObjectSystemSdnconnectorExternalaccountlistMove: typeof import("./objectSystemSdnconnectorExternalaccountlistMove").ObjectSystemSdnconnectorExternalaccountlistMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorExternalaccountlistMove"], () => require("./objectSystemSdnconnectorExternalaccountlistMove"));

export { ObjectSystemSdnconnectorExternalipArgs, ObjectSystemSdnconnectorExternalipState } from "./objectSystemSdnconnectorExternalip";
export type ObjectSystemSdnconnectorExternalip = import("./objectSystemSdnconnectorExternalip").ObjectSystemSdnconnectorExternalip;
export const ObjectSystemSdnconnectorExternalip: typeof import("./objectSystemSdnconnectorExternalip").ObjectSystemSdnconnectorExternalip = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorExternalip"], () => require("./objectSystemSdnconnectorExternalip"));

export { ObjectSystemSdnconnectorExternalipMoveArgs, ObjectSystemSdnconnectorExternalipMoveState } from "./objectSystemSdnconnectorExternalipMove";
export type ObjectSystemSdnconnectorExternalipMove = import("./objectSystemSdnconnectorExternalipMove").ObjectSystemSdnconnectorExternalipMove;
export const ObjectSystemSdnconnectorExternalipMove: typeof import("./objectSystemSdnconnectorExternalipMove").ObjectSystemSdnconnectorExternalipMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorExternalipMove"], () => require("./objectSystemSdnconnectorExternalipMove"));

export { ObjectSystemSdnconnectorForwardingruleArgs, ObjectSystemSdnconnectorForwardingruleState } from "./objectSystemSdnconnectorForwardingrule";
export type ObjectSystemSdnconnectorForwardingrule = import("./objectSystemSdnconnectorForwardingrule").ObjectSystemSdnconnectorForwardingrule;
export const ObjectSystemSdnconnectorForwardingrule: typeof import("./objectSystemSdnconnectorForwardingrule").ObjectSystemSdnconnectorForwardingrule = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorForwardingrule"], () => require("./objectSystemSdnconnectorForwardingrule"));

export { ObjectSystemSdnconnectorForwardingruleMoveArgs, ObjectSystemSdnconnectorForwardingruleMoveState } from "./objectSystemSdnconnectorForwardingruleMove";
export type ObjectSystemSdnconnectorForwardingruleMove = import("./objectSystemSdnconnectorForwardingruleMove").ObjectSystemSdnconnectorForwardingruleMove;
export const ObjectSystemSdnconnectorForwardingruleMove: typeof import("./objectSystemSdnconnectorForwardingruleMove").ObjectSystemSdnconnectorForwardingruleMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorForwardingruleMove"], () => require("./objectSystemSdnconnectorForwardingruleMove"));

export { ObjectSystemSdnconnectorGcpprojectlistArgs, ObjectSystemSdnconnectorGcpprojectlistState } from "./objectSystemSdnconnectorGcpprojectlist";
export type ObjectSystemSdnconnectorGcpprojectlist = import("./objectSystemSdnconnectorGcpprojectlist").ObjectSystemSdnconnectorGcpprojectlist;
export const ObjectSystemSdnconnectorGcpprojectlist: typeof import("./objectSystemSdnconnectorGcpprojectlist").ObjectSystemSdnconnectorGcpprojectlist = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorGcpprojectlist"], () => require("./objectSystemSdnconnectorGcpprojectlist"));

export { ObjectSystemSdnconnectorGcpprojectlistMoveArgs, ObjectSystemSdnconnectorGcpprojectlistMoveState } from "./objectSystemSdnconnectorGcpprojectlistMove";
export type ObjectSystemSdnconnectorGcpprojectlistMove = import("./objectSystemSdnconnectorGcpprojectlistMove").ObjectSystemSdnconnectorGcpprojectlistMove;
export const ObjectSystemSdnconnectorGcpprojectlistMove: typeof import("./objectSystemSdnconnectorGcpprojectlistMove").ObjectSystemSdnconnectorGcpprojectlistMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorGcpprojectlistMove"], () => require("./objectSystemSdnconnectorGcpprojectlistMove"));

export { ObjectSystemSdnconnectorNicArgs, ObjectSystemSdnconnectorNicState } from "./objectSystemSdnconnectorNic";
export type ObjectSystemSdnconnectorNic = import("./objectSystemSdnconnectorNic").ObjectSystemSdnconnectorNic;
export const ObjectSystemSdnconnectorNic: typeof import("./objectSystemSdnconnectorNic").ObjectSystemSdnconnectorNic = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorNic"], () => require("./objectSystemSdnconnectorNic"));

export { ObjectSystemSdnconnectorNicIpArgs, ObjectSystemSdnconnectorNicIpState } from "./objectSystemSdnconnectorNicIp";
export type ObjectSystemSdnconnectorNicIp = import("./objectSystemSdnconnectorNicIp").ObjectSystemSdnconnectorNicIp;
export const ObjectSystemSdnconnectorNicIp: typeof import("./objectSystemSdnconnectorNicIp").ObjectSystemSdnconnectorNicIp = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorNicIp"], () => require("./objectSystemSdnconnectorNicIp"));

export { ObjectSystemSdnconnectorNicIpMoveArgs, ObjectSystemSdnconnectorNicIpMoveState } from "./objectSystemSdnconnectorNicIpMove";
export type ObjectSystemSdnconnectorNicIpMove = import("./objectSystemSdnconnectorNicIpMove").ObjectSystemSdnconnectorNicIpMove;
export const ObjectSystemSdnconnectorNicIpMove: typeof import("./objectSystemSdnconnectorNicIpMove").ObjectSystemSdnconnectorNicIpMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorNicIpMove"], () => require("./objectSystemSdnconnectorNicIpMove"));

export { ObjectSystemSdnconnectorNicMoveArgs, ObjectSystemSdnconnectorNicMoveState } from "./objectSystemSdnconnectorNicMove";
export type ObjectSystemSdnconnectorNicMove = import("./objectSystemSdnconnectorNicMove").ObjectSystemSdnconnectorNicMove;
export const ObjectSystemSdnconnectorNicMove: typeof import("./objectSystemSdnconnectorNicMove").ObjectSystemSdnconnectorNicMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorNicMove"], () => require("./objectSystemSdnconnectorNicMove"));

export { ObjectSystemSdnconnectorOciregionlistArgs, ObjectSystemSdnconnectorOciregionlistState } from "./objectSystemSdnconnectorOciregionlist";
export type ObjectSystemSdnconnectorOciregionlist = import("./objectSystemSdnconnectorOciregionlist").ObjectSystemSdnconnectorOciregionlist;
export const ObjectSystemSdnconnectorOciregionlist: typeof import("./objectSystemSdnconnectorOciregionlist").ObjectSystemSdnconnectorOciregionlist = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorOciregionlist"], () => require("./objectSystemSdnconnectorOciregionlist"));

export { ObjectSystemSdnconnectorOciregionlistMoveArgs, ObjectSystemSdnconnectorOciregionlistMoveState } from "./objectSystemSdnconnectorOciregionlistMove";
export type ObjectSystemSdnconnectorOciregionlistMove = import("./objectSystemSdnconnectorOciregionlistMove").ObjectSystemSdnconnectorOciregionlistMove;
export const ObjectSystemSdnconnectorOciregionlistMove: typeof import("./objectSystemSdnconnectorOciregionlistMove").ObjectSystemSdnconnectorOciregionlistMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorOciregionlistMove"], () => require("./objectSystemSdnconnectorOciregionlistMove"));

export { ObjectSystemSdnconnectorRouteArgs, ObjectSystemSdnconnectorRouteState } from "./objectSystemSdnconnectorRoute";
export type ObjectSystemSdnconnectorRoute = import("./objectSystemSdnconnectorRoute").ObjectSystemSdnconnectorRoute;
export const ObjectSystemSdnconnectorRoute: typeof import("./objectSystemSdnconnectorRoute").ObjectSystemSdnconnectorRoute = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorRoute"], () => require("./objectSystemSdnconnectorRoute"));

export { ObjectSystemSdnconnectorRouteMoveArgs, ObjectSystemSdnconnectorRouteMoveState } from "./objectSystemSdnconnectorRouteMove";
export type ObjectSystemSdnconnectorRouteMove = import("./objectSystemSdnconnectorRouteMove").ObjectSystemSdnconnectorRouteMove;
export const ObjectSystemSdnconnectorRouteMove: typeof import("./objectSystemSdnconnectorRouteMove").ObjectSystemSdnconnectorRouteMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorRouteMove"], () => require("./objectSystemSdnconnectorRouteMove"));

export { ObjectSystemSdnconnectorRoutetableArgs, ObjectSystemSdnconnectorRoutetableState } from "./objectSystemSdnconnectorRoutetable";
export type ObjectSystemSdnconnectorRoutetable = import("./objectSystemSdnconnectorRoutetable").ObjectSystemSdnconnectorRoutetable;
export const ObjectSystemSdnconnectorRoutetable: typeof import("./objectSystemSdnconnectorRoutetable").ObjectSystemSdnconnectorRoutetable = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorRoutetable"], () => require("./objectSystemSdnconnectorRoutetable"));

export { ObjectSystemSdnconnectorRoutetableMoveArgs, ObjectSystemSdnconnectorRoutetableMoveState } from "./objectSystemSdnconnectorRoutetableMove";
export type ObjectSystemSdnconnectorRoutetableMove = import("./objectSystemSdnconnectorRoutetableMove").ObjectSystemSdnconnectorRoutetableMove;
export const ObjectSystemSdnconnectorRoutetableMove: typeof import("./objectSystemSdnconnectorRoutetableMove").ObjectSystemSdnconnectorRoutetableMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorRoutetableMove"], () => require("./objectSystemSdnconnectorRoutetableMove"));

export { ObjectSystemSdnconnectorRoutetableRouteArgs, ObjectSystemSdnconnectorRoutetableRouteState } from "./objectSystemSdnconnectorRoutetableRoute";
export type ObjectSystemSdnconnectorRoutetableRoute = import("./objectSystemSdnconnectorRoutetableRoute").ObjectSystemSdnconnectorRoutetableRoute;
export const ObjectSystemSdnconnectorRoutetableRoute: typeof import("./objectSystemSdnconnectorRoutetableRoute").ObjectSystemSdnconnectorRoutetableRoute = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorRoutetableRoute"], () => require("./objectSystemSdnconnectorRoutetableRoute"));

export { ObjectSystemSdnconnectorRoutetableRouteMoveArgs, ObjectSystemSdnconnectorRoutetableRouteMoveState } from "./objectSystemSdnconnectorRoutetableRouteMove";
export type ObjectSystemSdnconnectorRoutetableRouteMove = import("./objectSystemSdnconnectorRoutetableRouteMove").ObjectSystemSdnconnectorRoutetableRouteMove;
export const ObjectSystemSdnconnectorRoutetableRouteMove: typeof import("./objectSystemSdnconnectorRoutetableRouteMove").ObjectSystemSdnconnectorRoutetableRouteMove = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnconnectorRoutetableRouteMove"], () => require("./objectSystemSdnconnectorRoutetableRouteMove"));

export { ObjectSystemSdnproxyArgs, ObjectSystemSdnproxyState } from "./objectSystemSdnproxy";
export type ObjectSystemSdnproxy = import("./objectSystemSdnproxy").ObjectSystemSdnproxy;
export const ObjectSystemSdnproxy: typeof import("./objectSystemSdnproxy").ObjectSystemSdnproxy = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSdnproxy"], () => require("./objectSystemSdnproxy"));

export { ObjectSystemSmsserverArgs, ObjectSystemSmsserverState } from "./objectSystemSmsserver";
export type ObjectSystemSmsserver = import("./objectSystemSmsserver").ObjectSystemSmsserver;
export const ObjectSystemSmsserver: typeof import("./objectSystemSmsserver").ObjectSystemSmsserver = null as any;
utilities.lazyLoad(exports, ["ObjectSystemSmsserver"], () => require("./objectSystemSmsserver"));

export { ObjectSystemVirtualwirepairArgs, ObjectSystemVirtualwirepairState } from "./objectSystemVirtualwirepair";
export type ObjectSystemVirtualwirepair = import("./objectSystemVirtualwirepair").ObjectSystemVirtualwirepair;
export const ObjectSystemVirtualwirepair: typeof import("./objectSystemVirtualwirepair").ObjectSystemVirtualwirepair = null as any;
utilities.lazyLoad(exports, ["ObjectSystemVirtualwirepair"], () => require("./objectSystemVirtualwirepair"));

export { ObjectUserAdgrpArgs, ObjectUserAdgrpState } from "./objectUserAdgrp";
export type ObjectUserAdgrp = import("./objectUserAdgrp").ObjectUserAdgrp;
export const ObjectUserAdgrp: typeof import("./objectUserAdgrp").ObjectUserAdgrp = null as any;
utilities.lazyLoad(exports, ["ObjectUserAdgrp"], () => require("./objectUserAdgrp"));

export { ObjectUserCertificateArgs, ObjectUserCertificateState } from "./objectUserCertificate";
export type ObjectUserCertificate = import("./objectUserCertificate").ObjectUserCertificate;
export const ObjectUserCertificate: typeof import("./objectUserCertificate").ObjectUserCertificate = null as any;
utilities.lazyLoad(exports, ["ObjectUserCertificate"], () => require("./objectUserCertificate"));

export { ObjectUserClearpassArgs, ObjectUserClearpassState } from "./objectUserClearpass";
export type ObjectUserClearpass = import("./objectUserClearpass").ObjectUserClearpass;
export const ObjectUserClearpass: typeof import("./objectUserClearpass").ObjectUserClearpass = null as any;
utilities.lazyLoad(exports, ["ObjectUserClearpass"], () => require("./objectUserClearpass"));

export { ObjectUserConnectorArgs, ObjectUserConnectorState } from "./objectUserConnector";
export type ObjectUserConnector = import("./objectUserConnector").ObjectUserConnector;
export const ObjectUserConnector: typeof import("./objectUserConnector").ObjectUserConnector = null as any;
utilities.lazyLoad(exports, ["ObjectUserConnector"], () => require("./objectUserConnector"));

export { ObjectUserDeviceArgs, ObjectUserDeviceState } from "./objectUserDevice";
export type ObjectUserDevice = import("./objectUserDevice").ObjectUserDevice;
export const ObjectUserDevice: typeof import("./objectUserDevice").ObjectUserDevice = null as any;
utilities.lazyLoad(exports, ["ObjectUserDevice"], () => require("./objectUserDevice"));

export { ObjectUserDeviceaccesslistArgs, ObjectUserDeviceaccesslistState } from "./objectUserDeviceaccesslist";
export type ObjectUserDeviceaccesslist = import("./objectUserDeviceaccesslist").ObjectUserDeviceaccesslist;
export const ObjectUserDeviceaccesslist: typeof import("./objectUserDeviceaccesslist").ObjectUserDeviceaccesslist = null as any;
utilities.lazyLoad(exports, ["ObjectUserDeviceaccesslist"], () => require("./objectUserDeviceaccesslist"));

export { ObjectUserDevicecategoryArgs, ObjectUserDevicecategoryState } from "./objectUserDevicecategory";
export type ObjectUserDevicecategory = import("./objectUserDevicecategory").ObjectUserDevicecategory;
export const ObjectUserDevicecategory: typeof import("./objectUserDevicecategory").ObjectUserDevicecategory = null as any;
utilities.lazyLoad(exports, ["ObjectUserDevicecategory"], () => require("./objectUserDevicecategory"));

export { ObjectUserDevicegroupArgs, ObjectUserDevicegroupState } from "./objectUserDevicegroup";
export type ObjectUserDevicegroup = import("./objectUserDevicegroup").ObjectUserDevicegroup;
export const ObjectUserDevicegroup: typeof import("./objectUserDevicegroup").ObjectUserDevicegroup = null as any;
utilities.lazyLoad(exports, ["ObjectUserDevicegroup"], () => require("./objectUserDevicegroup"));

export { ObjectUserDomaincontrollerArgs, ObjectUserDomaincontrollerState } from "./objectUserDomaincontroller";
export type ObjectUserDomaincontroller = import("./objectUserDomaincontroller").ObjectUserDomaincontroller;
export const ObjectUserDomaincontroller: typeof import("./objectUserDomaincontroller").ObjectUserDomaincontroller = null as any;
utilities.lazyLoad(exports, ["ObjectUserDomaincontroller"], () => require("./objectUserDomaincontroller"));

export { ObjectUserDomaincontrollerExtraserverArgs, ObjectUserDomaincontrollerExtraserverState } from "./objectUserDomaincontrollerExtraserver";
export type ObjectUserDomaincontrollerExtraserver = import("./objectUserDomaincontrollerExtraserver").ObjectUserDomaincontrollerExtraserver;
export const ObjectUserDomaincontrollerExtraserver: typeof import("./objectUserDomaincontrollerExtraserver").ObjectUserDomaincontrollerExtraserver = null as any;
utilities.lazyLoad(exports, ["ObjectUserDomaincontrollerExtraserver"], () => require("./objectUserDomaincontrollerExtraserver"));

export { ObjectUserExchangeArgs, ObjectUserExchangeState } from "./objectUserExchange";
export type ObjectUserExchange = import("./objectUserExchange").ObjectUserExchange;
export const ObjectUserExchange: typeof import("./objectUserExchange").ObjectUserExchange = null as any;
utilities.lazyLoad(exports, ["ObjectUserExchange"], () => require("./objectUserExchange"));

export { ObjectUserExternalidentityproviderArgs, ObjectUserExternalidentityproviderState } from "./objectUserExternalidentityprovider";
export type ObjectUserExternalidentityprovider = import("./objectUserExternalidentityprovider").ObjectUserExternalidentityprovider;
export const ObjectUserExternalidentityprovider: typeof import("./objectUserExternalidentityprovider").ObjectUserExternalidentityprovider = null as any;
utilities.lazyLoad(exports, ["ObjectUserExternalidentityprovider"], () => require("./objectUserExternalidentityprovider"));

export { ObjectUserFlexvmArgs, ObjectUserFlexvmState } from "./objectUserFlexvm";
export type ObjectUserFlexvm = import("./objectUserFlexvm").ObjectUserFlexvm;
export const ObjectUserFlexvm: typeof import("./objectUserFlexvm").ObjectUserFlexvm = null as any;
utilities.lazyLoad(exports, ["ObjectUserFlexvm"], () => require("./objectUserFlexvm"));

export { ObjectUserFortitokenArgs, ObjectUserFortitokenState } from "./objectUserFortitoken";
export type ObjectUserFortitoken = import("./objectUserFortitoken").ObjectUserFortitoken;
export const ObjectUserFortitoken: typeof import("./objectUserFortitoken").ObjectUserFortitoken = null as any;
utilities.lazyLoad(exports, ["ObjectUserFortitoken"], () => require("./objectUserFortitoken"));

export { ObjectUserFssoArgs, ObjectUserFssoState } from "./objectUserFsso";
export type ObjectUserFsso = import("./objectUserFsso").ObjectUserFsso;
export const ObjectUserFsso: typeof import("./objectUserFsso").ObjectUserFsso = null as any;
utilities.lazyLoad(exports, ["ObjectUserFsso"], () => require("./objectUserFsso"));

export { ObjectUserFssopollingArgs, ObjectUserFssopollingState } from "./objectUserFssopolling";
export type ObjectUserFssopolling = import("./objectUserFssopolling").ObjectUserFssopolling;
export const ObjectUserFssopolling: typeof import("./objectUserFssopolling").ObjectUserFssopolling = null as any;
utilities.lazyLoad(exports, ["ObjectUserFssopolling"], () => require("./objectUserFssopolling"));

export { ObjectUserFssopollingAdgrpArgs, ObjectUserFssopollingAdgrpState } from "./objectUserFssopollingAdgrp";
export type ObjectUserFssopollingAdgrp = import("./objectUserFssopollingAdgrp").ObjectUserFssopollingAdgrp;
export const ObjectUserFssopollingAdgrp: typeof import("./objectUserFssopollingAdgrp").ObjectUserFssopollingAdgrp = null as any;
utilities.lazyLoad(exports, ["ObjectUserFssopollingAdgrp"], () => require("./objectUserFssopollingAdgrp"));

export { ObjectUserGroupArgs, ObjectUserGroupState } from "./objectUserGroup";
export type ObjectUserGroup = import("./objectUserGroup").ObjectUserGroup;
export const ObjectUserGroup: typeof import("./objectUserGroup").ObjectUserGroup = null as any;
utilities.lazyLoad(exports, ["ObjectUserGroup"], () => require("./objectUserGroup"));

export { ObjectUserGroupMatchArgs, ObjectUserGroupMatchState } from "./objectUserGroupMatch";
export type ObjectUserGroupMatch = import("./objectUserGroupMatch").ObjectUserGroupMatch;
export const ObjectUserGroupMatch: typeof import("./objectUserGroupMatch").ObjectUserGroupMatch = null as any;
utilities.lazyLoad(exports, ["ObjectUserGroupMatch"], () => require("./objectUserGroupMatch"));

export { ObjectUserJsonArgs, ObjectUserJsonState } from "./objectUserJson";
export type ObjectUserJson = import("./objectUserJson").ObjectUserJson;
export const ObjectUserJson: typeof import("./objectUserJson").ObjectUserJson = null as any;
utilities.lazyLoad(exports, ["ObjectUserJson"], () => require("./objectUserJson"));

export { ObjectUserKrbkeytabArgs, ObjectUserKrbkeytabState } from "./objectUserKrbkeytab";
export type ObjectUserKrbkeytab = import("./objectUserKrbkeytab").ObjectUserKrbkeytab;
export const ObjectUserKrbkeytab: typeof import("./objectUserKrbkeytab").ObjectUserKrbkeytab = null as any;
utilities.lazyLoad(exports, ["ObjectUserKrbkeytab"], () => require("./objectUserKrbkeytab"));

export { ObjectUserLdapArgs, ObjectUserLdapState } from "./objectUserLdap";
export type ObjectUserLdap = import("./objectUserLdap").ObjectUserLdap;
export const ObjectUserLdap: typeof import("./objectUserLdap").ObjectUserLdap = null as any;
utilities.lazyLoad(exports, ["ObjectUserLdap"], () => require("./objectUserLdap"));

export { ObjectUserLocalArgs, ObjectUserLocalState } from "./objectUserLocal";
export type ObjectUserLocal = import("./objectUserLocal").ObjectUserLocal;
export const ObjectUserLocal: typeof import("./objectUserLocal").ObjectUserLocal = null as any;
utilities.lazyLoad(exports, ["ObjectUserLocal"], () => require("./objectUserLocal"));

export { ObjectUserNsxArgs, ObjectUserNsxState } from "./objectUserNsx";
export type ObjectUserNsx = import("./objectUserNsx").ObjectUserNsx;
export const ObjectUserNsx: typeof import("./objectUserNsx").ObjectUserNsx = null as any;
utilities.lazyLoad(exports, ["ObjectUserNsx"], () => require("./objectUserNsx"));

export { ObjectUserNsxServiceArgs, ObjectUserNsxServiceState } from "./objectUserNsxService";
export type ObjectUserNsxService = import("./objectUserNsxService").ObjectUserNsxService;
export const ObjectUserNsxService: typeof import("./objectUserNsxService").ObjectUserNsxService = null as any;
utilities.lazyLoad(exports, ["ObjectUserNsxService"], () => require("./objectUserNsxService"));

export { ObjectUserPasswordpolicyArgs, ObjectUserPasswordpolicyState } from "./objectUserPasswordpolicy";
export type ObjectUserPasswordpolicy = import("./objectUserPasswordpolicy").ObjectUserPasswordpolicy;
export const ObjectUserPasswordpolicy: typeof import("./objectUserPasswordpolicy").ObjectUserPasswordpolicy = null as any;
utilities.lazyLoad(exports, ["ObjectUserPasswordpolicy"], () => require("./objectUserPasswordpolicy"));

export { ObjectUserPeerArgs, ObjectUserPeerState } from "./objectUserPeer";
export type ObjectUserPeer = import("./objectUserPeer").ObjectUserPeer;
export const ObjectUserPeer: typeof import("./objectUserPeer").ObjectUserPeer = null as any;
utilities.lazyLoad(exports, ["ObjectUserPeer"], () => require("./objectUserPeer"));

export { ObjectUserPeergrpArgs, ObjectUserPeergrpState } from "./objectUserPeergrp";
export type ObjectUserPeergrp = import("./objectUserPeergrp").ObjectUserPeergrp;
export const ObjectUserPeergrp: typeof import("./objectUserPeergrp").ObjectUserPeergrp = null as any;
utilities.lazyLoad(exports, ["ObjectUserPeergrp"], () => require("./objectUserPeergrp"));

export { ObjectUserPop3Args, ObjectUserPop3State } from "./objectUserPop3";
export type ObjectUserPop3 = import("./objectUserPop3").ObjectUserPop3;
export const ObjectUserPop3: typeof import("./objectUserPop3").ObjectUserPop3 = null as any;
utilities.lazyLoad(exports, ["ObjectUserPop3"], () => require("./objectUserPop3"));

export { ObjectUserPxgridArgs, ObjectUserPxgridState } from "./objectUserPxgrid";
export type ObjectUserPxgrid = import("./objectUserPxgrid").ObjectUserPxgrid;
export const ObjectUserPxgrid: typeof import("./objectUserPxgrid").ObjectUserPxgrid = null as any;
utilities.lazyLoad(exports, ["ObjectUserPxgrid"], () => require("./objectUserPxgrid"));

export { ObjectUserRadiusArgs, ObjectUserRadiusState } from "./objectUserRadius";
export type ObjectUserRadius = import("./objectUserRadius").ObjectUserRadius;
export const ObjectUserRadius: typeof import("./objectUserRadius").ObjectUserRadius = null as any;
utilities.lazyLoad(exports, ["ObjectUserRadius"], () => require("./objectUserRadius"));

export { ObjectUserRadiusAccountingserverArgs, ObjectUserRadiusAccountingserverState } from "./objectUserRadiusAccountingserver";
export type ObjectUserRadiusAccountingserver = import("./objectUserRadiusAccountingserver").ObjectUserRadiusAccountingserver;
export const ObjectUserRadiusAccountingserver: typeof import("./objectUserRadiusAccountingserver").ObjectUserRadiusAccountingserver = null as any;
utilities.lazyLoad(exports, ["ObjectUserRadiusAccountingserver"], () => require("./objectUserRadiusAccountingserver"));

export { ObjectUserSamlArgs, ObjectUserSamlState } from "./objectUserSaml";
export type ObjectUserSaml = import("./objectUserSaml").ObjectUserSaml;
export const ObjectUserSaml: typeof import("./objectUserSaml").ObjectUserSaml = null as any;
utilities.lazyLoad(exports, ["ObjectUserSaml"], () => require("./objectUserSaml"));

export { ObjectUserSecurityexemptlistArgs, ObjectUserSecurityexemptlistState } from "./objectUserSecurityexemptlist";
export type ObjectUserSecurityexemptlist = import("./objectUserSecurityexemptlist").ObjectUserSecurityexemptlist;
export const ObjectUserSecurityexemptlist: typeof import("./objectUserSecurityexemptlist").ObjectUserSecurityexemptlist = null as any;
utilities.lazyLoad(exports, ["ObjectUserSecurityexemptlist"], () => require("./objectUserSecurityexemptlist"));

export { ObjectUserSecurityexemptlistRuleArgs, ObjectUserSecurityexemptlistRuleState } from "./objectUserSecurityexemptlistRule";
export type ObjectUserSecurityexemptlistRule = import("./objectUserSecurityexemptlistRule").ObjectUserSecurityexemptlistRule;
export const ObjectUserSecurityexemptlistRule: typeof import("./objectUserSecurityexemptlistRule").ObjectUserSecurityexemptlistRule = null as any;
utilities.lazyLoad(exports, ["ObjectUserSecurityexemptlistRule"], () => require("./objectUserSecurityexemptlistRule"));

export { ObjectUserTacacsArgs, ObjectUserTacacsState } from "./objectUserTacacs";
export type ObjectUserTacacs = import("./objectUserTacacs").ObjectUserTacacs;
export const ObjectUserTacacs: typeof import("./objectUserTacacs").ObjectUserTacacs = null as any;
utilities.lazyLoad(exports, ["ObjectUserTacacs"], () => require("./objectUserTacacs"));

export { ObjectUserVcenterArgs, ObjectUserVcenterState } from "./objectUserVcenter";
export type ObjectUserVcenter = import("./objectUserVcenter").ObjectUserVcenter;
export const ObjectUserVcenter: typeof import("./objectUserVcenter").ObjectUserVcenter = null as any;
utilities.lazyLoad(exports, ["ObjectUserVcenter"], () => require("./objectUserVcenter"));

export { ObjectUserVcenterRuleArgs, ObjectUserVcenterRuleState } from "./objectUserVcenterRule";
export type ObjectUserVcenterRule = import("./objectUserVcenterRule").ObjectUserVcenterRule;
export const ObjectUserVcenterRule: typeof import("./objectUserVcenterRule").ObjectUserVcenterRule = null as any;
utilities.lazyLoad(exports, ["ObjectUserVcenterRule"], () => require("./objectUserVcenterRule"));

export { ObjectVideofilterKeywordArgs, ObjectVideofilterKeywordState } from "./objectVideofilterKeyword";
export type ObjectVideofilterKeyword = import("./objectVideofilterKeyword").ObjectVideofilterKeyword;
export const ObjectVideofilterKeyword: typeof import("./objectVideofilterKeyword").ObjectVideofilterKeyword = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterKeyword"], () => require("./objectVideofilterKeyword"));

export { ObjectVideofilterKeywordWordArgs, ObjectVideofilterKeywordWordState } from "./objectVideofilterKeywordWord";
export type ObjectVideofilterKeywordWord = import("./objectVideofilterKeywordWord").ObjectVideofilterKeywordWord;
export const ObjectVideofilterKeywordWord: typeof import("./objectVideofilterKeywordWord").ObjectVideofilterKeywordWord = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterKeywordWord"], () => require("./objectVideofilterKeywordWord"));

export { ObjectVideofilterProfileArgs, ObjectVideofilterProfileState } from "./objectVideofilterProfile";
export type ObjectVideofilterProfile = import("./objectVideofilterProfile").ObjectVideofilterProfile;
export const ObjectVideofilterProfile: typeof import("./objectVideofilterProfile").ObjectVideofilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterProfile"], () => require("./objectVideofilterProfile"));

export { ObjectVideofilterProfileFiltersArgs, ObjectVideofilterProfileFiltersState } from "./objectVideofilterProfileFilters";
export type ObjectVideofilterProfileFilters = import("./objectVideofilterProfileFilters").ObjectVideofilterProfileFilters;
export const ObjectVideofilterProfileFilters: typeof import("./objectVideofilterProfileFilters").ObjectVideofilterProfileFilters = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterProfileFilters"], () => require("./objectVideofilterProfileFilters"));

export { ObjectVideofilterProfileFiltersMoveArgs, ObjectVideofilterProfileFiltersMoveState } from "./objectVideofilterProfileFiltersMove";
export type ObjectVideofilterProfileFiltersMove = import("./objectVideofilterProfileFiltersMove").ObjectVideofilterProfileFiltersMove;
export const ObjectVideofilterProfileFiltersMove: typeof import("./objectVideofilterProfileFiltersMove").ObjectVideofilterProfileFiltersMove = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterProfileFiltersMove"], () => require("./objectVideofilterProfileFiltersMove"));

export { ObjectVideofilterProfileFortiguardcategoryArgs, ObjectVideofilterProfileFortiguardcategoryState } from "./objectVideofilterProfileFortiguardcategory";
export type ObjectVideofilterProfileFortiguardcategory = import("./objectVideofilterProfileFortiguardcategory").ObjectVideofilterProfileFortiguardcategory;
export const ObjectVideofilterProfileFortiguardcategory: typeof import("./objectVideofilterProfileFortiguardcategory").ObjectVideofilterProfileFortiguardcategory = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterProfileFortiguardcategory"], () => require("./objectVideofilterProfileFortiguardcategory"));

export { ObjectVideofilterProfileFortiguardcategoryFiltersArgs, ObjectVideofilterProfileFortiguardcategoryFiltersState } from "./objectVideofilterProfileFortiguardcategoryFilters";
export type ObjectVideofilterProfileFortiguardcategoryFilters = import("./objectVideofilterProfileFortiguardcategoryFilters").ObjectVideofilterProfileFortiguardcategoryFilters;
export const ObjectVideofilterProfileFortiguardcategoryFilters: typeof import("./objectVideofilterProfileFortiguardcategoryFilters").ObjectVideofilterProfileFortiguardcategoryFilters = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterProfileFortiguardcategoryFilters"], () => require("./objectVideofilterProfileFortiguardcategoryFilters"));

export { ObjectVideofilterProfileFortiguardcategoryFiltersMoveArgs, ObjectVideofilterProfileFortiguardcategoryFiltersMoveState } from "./objectVideofilterProfileFortiguardcategoryFiltersMove";
export type ObjectVideofilterProfileFortiguardcategoryFiltersMove = import("./objectVideofilterProfileFortiguardcategoryFiltersMove").ObjectVideofilterProfileFortiguardcategoryFiltersMove;
export const ObjectVideofilterProfileFortiguardcategoryFiltersMove: typeof import("./objectVideofilterProfileFortiguardcategoryFiltersMove").ObjectVideofilterProfileFortiguardcategoryFiltersMove = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterProfileFortiguardcategoryFiltersMove"], () => require("./objectVideofilterProfileFortiguardcategoryFiltersMove"));

export { ObjectVideofilterYoutubechannelfilterArgs, ObjectVideofilterYoutubechannelfilterState } from "./objectVideofilterYoutubechannelfilter";
export type ObjectVideofilterYoutubechannelfilter = import("./objectVideofilterYoutubechannelfilter").ObjectVideofilterYoutubechannelfilter;
export const ObjectVideofilterYoutubechannelfilter: typeof import("./objectVideofilterYoutubechannelfilter").ObjectVideofilterYoutubechannelfilter = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterYoutubechannelfilter"], () => require("./objectVideofilterYoutubechannelfilter"));

export { ObjectVideofilterYoutubekeyArgs, ObjectVideofilterYoutubekeyState } from "./objectVideofilterYoutubekey";
export type ObjectVideofilterYoutubekey = import("./objectVideofilterYoutubekey").ObjectVideofilterYoutubekey;
export const ObjectVideofilterYoutubekey: typeof import("./objectVideofilterYoutubekey").ObjectVideofilterYoutubekey = null as any;
utilities.lazyLoad(exports, ["ObjectVideofilterYoutubekey"], () => require("./objectVideofilterYoutubekey"));

export { ObjectVirtualpatchProfileArgs, ObjectVirtualpatchProfileState } from "./objectVirtualpatchProfile";
export type ObjectVirtualpatchProfile = import("./objectVirtualpatchProfile").ObjectVirtualpatchProfile;
export const ObjectVirtualpatchProfile: typeof import("./objectVirtualpatchProfile").ObjectVirtualpatchProfile = null as any;
utilities.lazyLoad(exports, ["ObjectVirtualpatchProfile"], () => require("./objectVirtualpatchProfile"));

export { ObjectVirtualpatchProfileExemptionArgs, ObjectVirtualpatchProfileExemptionState } from "./objectVirtualpatchProfileExemption";
export type ObjectVirtualpatchProfileExemption = import("./objectVirtualpatchProfileExemption").ObjectVirtualpatchProfileExemption;
export const ObjectVirtualpatchProfileExemption: typeof import("./objectVirtualpatchProfileExemption").ObjectVirtualpatchProfileExemption = null as any;
utilities.lazyLoad(exports, ["ObjectVirtualpatchProfileExemption"], () => require("./objectVirtualpatchProfileExemption"));

export { ObjectVoipProfileArgs, ObjectVoipProfileState } from "./objectVoipProfile";
export type ObjectVoipProfile = import("./objectVoipProfile").ObjectVoipProfile;
export const ObjectVoipProfile: typeof import("./objectVoipProfile").ObjectVoipProfile = null as any;
utilities.lazyLoad(exports, ["ObjectVoipProfile"], () => require("./objectVoipProfile"));

export { ObjectVoipProfileMsrpArgs, ObjectVoipProfileMsrpState } from "./objectVoipProfileMsrp";
export type ObjectVoipProfileMsrp = import("./objectVoipProfileMsrp").ObjectVoipProfileMsrp;
export const ObjectVoipProfileMsrp: typeof import("./objectVoipProfileMsrp").ObjectVoipProfileMsrp = null as any;
utilities.lazyLoad(exports, ["ObjectVoipProfileMsrp"], () => require("./objectVoipProfileMsrp"));

export { ObjectVoipProfileSccpArgs, ObjectVoipProfileSccpState } from "./objectVoipProfileSccp";
export type ObjectVoipProfileSccp = import("./objectVoipProfileSccp").ObjectVoipProfileSccp;
export const ObjectVoipProfileSccp: typeof import("./objectVoipProfileSccp").ObjectVoipProfileSccp = null as any;
utilities.lazyLoad(exports, ["ObjectVoipProfileSccp"], () => require("./objectVoipProfileSccp"));

export { ObjectVoipProfileSipArgs, ObjectVoipProfileSipState } from "./objectVoipProfileSip";
export type ObjectVoipProfileSip = import("./objectVoipProfileSip").ObjectVoipProfileSip;
export const ObjectVoipProfileSip: typeof import("./objectVoipProfileSip").ObjectVoipProfileSip = null as any;
utilities.lazyLoad(exports, ["ObjectVoipProfileSip"], () => require("./objectVoipProfileSip"));

export { ObjectVpnCertificateCaArgs, ObjectVpnCertificateCaState } from "./objectVpnCertificateCa";
export type ObjectVpnCertificateCa = import("./objectVpnCertificateCa").ObjectVpnCertificateCa;
export const ObjectVpnCertificateCa: typeof import("./objectVpnCertificateCa").ObjectVpnCertificateCa = null as any;
utilities.lazyLoad(exports, ["ObjectVpnCertificateCa"], () => require("./objectVpnCertificateCa"));

export { ObjectVpnCertificateOcspserverArgs, ObjectVpnCertificateOcspserverState } from "./objectVpnCertificateOcspserver";
export type ObjectVpnCertificateOcspserver = import("./objectVpnCertificateOcspserver").ObjectVpnCertificateOcspserver;
export const ObjectVpnCertificateOcspserver: typeof import("./objectVpnCertificateOcspserver").ObjectVpnCertificateOcspserver = null as any;
utilities.lazyLoad(exports, ["ObjectVpnCertificateOcspserver"], () => require("./objectVpnCertificateOcspserver"));

export { ObjectVpnCertificateRemoteArgs, ObjectVpnCertificateRemoteState } from "./objectVpnCertificateRemote";
export type ObjectVpnCertificateRemote = import("./objectVpnCertificateRemote").ObjectVpnCertificateRemote;
export const ObjectVpnCertificateRemote: typeof import("./objectVpnCertificateRemote").ObjectVpnCertificateRemote = null as any;
utilities.lazyLoad(exports, ["ObjectVpnCertificateRemote"], () => require("./objectVpnCertificateRemote"));

export { ObjectVpnIpsecFecArgs, ObjectVpnIpsecFecState } from "./objectVpnIpsecFec";
export type ObjectVpnIpsecFec = import("./objectVpnIpsecFec").ObjectVpnIpsecFec;
export const ObjectVpnIpsecFec: typeof import("./objectVpnIpsecFec").ObjectVpnIpsecFec = null as any;
utilities.lazyLoad(exports, ["ObjectVpnIpsecFec"], () => require("./objectVpnIpsecFec"));

export { ObjectVpnIpsecFecMappingsArgs, ObjectVpnIpsecFecMappingsState } from "./objectVpnIpsecFecMappings";
export type ObjectVpnIpsecFecMappings = import("./objectVpnIpsecFecMappings").ObjectVpnIpsecFecMappings;
export const ObjectVpnIpsecFecMappings: typeof import("./objectVpnIpsecFecMappings").ObjectVpnIpsecFecMappings = null as any;
utilities.lazyLoad(exports, ["ObjectVpnIpsecFecMappings"], () => require("./objectVpnIpsecFecMappings"));

export { ObjectVpnIpsecFecMappingsMoveArgs, ObjectVpnIpsecFecMappingsMoveState } from "./objectVpnIpsecFecMappingsMove";
export type ObjectVpnIpsecFecMappingsMove = import("./objectVpnIpsecFecMappingsMove").ObjectVpnIpsecFecMappingsMove;
export const ObjectVpnIpsecFecMappingsMove: typeof import("./objectVpnIpsecFecMappingsMove").ObjectVpnIpsecFecMappingsMove = null as any;
utilities.lazyLoad(exports, ["ObjectVpnIpsecFecMappingsMove"], () => require("./objectVpnIpsecFecMappingsMove"));

export { ObjectVpnSslWebHostchecksoftwareArgs, ObjectVpnSslWebHostchecksoftwareState } from "./objectVpnSslWebHostchecksoftware";
export type ObjectVpnSslWebHostchecksoftware = import("./objectVpnSslWebHostchecksoftware").ObjectVpnSslWebHostchecksoftware;
export const ObjectVpnSslWebHostchecksoftware: typeof import("./objectVpnSslWebHostchecksoftware").ObjectVpnSslWebHostchecksoftware = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebHostchecksoftware"], () => require("./objectVpnSslWebHostchecksoftware"));

export { ObjectVpnSslWebHostchecksoftwareCheckitemlistArgs, ObjectVpnSslWebHostchecksoftwareCheckitemlistState } from "./objectVpnSslWebHostchecksoftwareCheckitemlist";
export type ObjectVpnSslWebHostchecksoftwareCheckitemlist = import("./objectVpnSslWebHostchecksoftwareCheckitemlist").ObjectVpnSslWebHostchecksoftwareCheckitemlist;
export const ObjectVpnSslWebHostchecksoftwareCheckitemlist: typeof import("./objectVpnSslWebHostchecksoftwareCheckitemlist").ObjectVpnSslWebHostchecksoftwareCheckitemlist = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebHostchecksoftwareCheckitemlist"], () => require("./objectVpnSslWebHostchecksoftwareCheckitemlist"));

export { ObjectVpnSslWebPortalArgs, ObjectVpnSslWebPortalState } from "./objectVpnSslWebPortal";
export type ObjectVpnSslWebPortal = import("./objectVpnSslWebPortal").ObjectVpnSslWebPortal;
export const ObjectVpnSslWebPortal: typeof import("./objectVpnSslWebPortal").ObjectVpnSslWebPortal = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortal"], () => require("./objectVpnSslWebPortal"));

export { ObjectVpnSslWebPortalBookmarkgroupArgs, ObjectVpnSslWebPortalBookmarkgroupState } from "./objectVpnSslWebPortalBookmarkgroup";
export type ObjectVpnSslWebPortalBookmarkgroup = import("./objectVpnSslWebPortalBookmarkgroup").ObjectVpnSslWebPortalBookmarkgroup;
export const ObjectVpnSslWebPortalBookmarkgroup: typeof import("./objectVpnSslWebPortalBookmarkgroup").ObjectVpnSslWebPortalBookmarkgroup = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalBookmarkgroup"], () => require("./objectVpnSslWebPortalBookmarkgroup"));

export { ObjectVpnSslWebPortalBookmarkgroupBookmarksArgs, ObjectVpnSslWebPortalBookmarkgroupBookmarksState } from "./objectVpnSslWebPortalBookmarkgroupBookmarks";
export type ObjectVpnSslWebPortalBookmarkgroupBookmarks = import("./objectVpnSslWebPortalBookmarkgroupBookmarks").ObjectVpnSslWebPortalBookmarkgroupBookmarks;
export const ObjectVpnSslWebPortalBookmarkgroupBookmarks: typeof import("./objectVpnSslWebPortalBookmarkgroupBookmarks").ObjectVpnSslWebPortalBookmarkgroupBookmarks = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalBookmarkgroupBookmarks"], () => require("./objectVpnSslWebPortalBookmarkgroupBookmarks"));

export { ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdataArgs, ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdataState } from "./objectVpnSslWebPortalBookmarkgroupBookmarksFormdata";
export type ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdata = import("./objectVpnSslWebPortalBookmarkgroupBookmarksFormdata").ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdata;
export const ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdata: typeof import("./objectVpnSslWebPortalBookmarkgroupBookmarksFormdata").ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdata = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdata"], () => require("./objectVpnSslWebPortalBookmarkgroupBookmarksFormdata"));

export { ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveArgs, ObjectVpnSslWebPortalBookmarkgroupBookmarksMoveState } from "./objectVpnSslWebPortalBookmarkgroupBookmarksMove";
export type ObjectVpnSslWebPortalBookmarkgroupBookmarksMove = import("./objectVpnSslWebPortalBookmarkgroupBookmarksMove").ObjectVpnSslWebPortalBookmarkgroupBookmarksMove;
export const ObjectVpnSslWebPortalBookmarkgroupBookmarksMove: typeof import("./objectVpnSslWebPortalBookmarkgroupBookmarksMove").ObjectVpnSslWebPortalBookmarkgroupBookmarksMove = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalBookmarkgroupBookmarksMove"], () => require("./objectVpnSslWebPortalBookmarkgroupBookmarksMove"));

export { ObjectVpnSslWebPortalBookmarkgroupMoveArgs, ObjectVpnSslWebPortalBookmarkgroupMoveState } from "./objectVpnSslWebPortalBookmarkgroupMove";
export type ObjectVpnSslWebPortalBookmarkgroupMove = import("./objectVpnSslWebPortalBookmarkgroupMove").ObjectVpnSslWebPortalBookmarkgroupMove;
export const ObjectVpnSslWebPortalBookmarkgroupMove: typeof import("./objectVpnSslWebPortalBookmarkgroupMove").ObjectVpnSslWebPortalBookmarkgroupMove = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalBookmarkgroupMove"], () => require("./objectVpnSslWebPortalBookmarkgroupMove"));

export { ObjectVpnSslWebPortalLandingpageArgs, ObjectVpnSslWebPortalLandingpageState } from "./objectVpnSslWebPortalLandingpage";
export type ObjectVpnSslWebPortalLandingpage = import("./objectVpnSslWebPortalLandingpage").ObjectVpnSslWebPortalLandingpage;
export const ObjectVpnSslWebPortalLandingpage: typeof import("./objectVpnSslWebPortalLandingpage").ObjectVpnSslWebPortalLandingpage = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalLandingpage"], () => require("./objectVpnSslWebPortalLandingpage"));

export { ObjectVpnSslWebPortalLandingpageFormdataArgs, ObjectVpnSslWebPortalLandingpageFormdataState } from "./objectVpnSslWebPortalLandingpageFormdata";
export type ObjectVpnSslWebPortalLandingpageFormdata = import("./objectVpnSslWebPortalLandingpageFormdata").ObjectVpnSslWebPortalLandingpageFormdata;
export const ObjectVpnSslWebPortalLandingpageFormdata: typeof import("./objectVpnSslWebPortalLandingpageFormdata").ObjectVpnSslWebPortalLandingpageFormdata = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalLandingpageFormdata"], () => require("./objectVpnSslWebPortalLandingpageFormdata"));

export { ObjectVpnSslWebPortalMacaddrcheckruleArgs, ObjectVpnSslWebPortalMacaddrcheckruleState } from "./objectVpnSslWebPortalMacaddrcheckrule";
export type ObjectVpnSslWebPortalMacaddrcheckrule = import("./objectVpnSslWebPortalMacaddrcheckrule").ObjectVpnSslWebPortalMacaddrcheckrule;
export const ObjectVpnSslWebPortalMacaddrcheckrule: typeof import("./objectVpnSslWebPortalMacaddrcheckrule").ObjectVpnSslWebPortalMacaddrcheckrule = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalMacaddrcheckrule"], () => require("./objectVpnSslWebPortalMacaddrcheckrule"));

export { ObjectVpnSslWebPortalSplitdnsArgs, ObjectVpnSslWebPortalSplitdnsState } from "./objectVpnSslWebPortalSplitdns";
export type ObjectVpnSslWebPortalSplitdns = import("./objectVpnSslWebPortalSplitdns").ObjectVpnSslWebPortalSplitdns;
export const ObjectVpnSslWebPortalSplitdns: typeof import("./objectVpnSslWebPortalSplitdns").ObjectVpnSslWebPortalSplitdns = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalSplitdns"], () => require("./objectVpnSslWebPortalSplitdns"));

export { ObjectVpnSslWebPortalSplitdnsMoveArgs, ObjectVpnSslWebPortalSplitdnsMoveState } from "./objectVpnSslWebPortalSplitdnsMove";
export type ObjectVpnSslWebPortalSplitdnsMove = import("./objectVpnSslWebPortalSplitdnsMove").ObjectVpnSslWebPortalSplitdnsMove;
export const ObjectVpnSslWebPortalSplitdnsMove: typeof import("./objectVpnSslWebPortalSplitdnsMove").ObjectVpnSslWebPortalSplitdnsMove = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebPortalSplitdnsMove"], () => require("./objectVpnSslWebPortalSplitdnsMove"));

export { ObjectVpnSslWebRealmArgs, ObjectVpnSslWebRealmState } from "./objectVpnSslWebRealm";
export type ObjectVpnSslWebRealm = import("./objectVpnSslWebRealm").ObjectVpnSslWebRealm;
export const ObjectVpnSslWebRealm: typeof import("./objectVpnSslWebRealm").ObjectVpnSslWebRealm = null as any;
utilities.lazyLoad(exports, ["ObjectVpnSslWebRealm"], () => require("./objectVpnSslWebRealm"));

export { ObjectVpnmgrNodeArgs, ObjectVpnmgrNodeState } from "./objectVpnmgrNode";
export type ObjectVpnmgrNode = import("./objectVpnmgrNode").ObjectVpnmgrNode;
export const ObjectVpnmgrNode: typeof import("./objectVpnmgrNode").ObjectVpnmgrNode = null as any;
utilities.lazyLoad(exports, ["ObjectVpnmgrNode"], () => require("./objectVpnmgrNode"));

export { ObjectVpnmgrNodeIprangeArgs, ObjectVpnmgrNodeIprangeState } from "./objectVpnmgrNodeIprange";
export type ObjectVpnmgrNodeIprange = import("./objectVpnmgrNodeIprange").ObjectVpnmgrNodeIprange;
export const ObjectVpnmgrNodeIprange: typeof import("./objectVpnmgrNodeIprange").ObjectVpnmgrNodeIprange = null as any;
utilities.lazyLoad(exports, ["ObjectVpnmgrNodeIprange"], () => require("./objectVpnmgrNodeIprange"));

export { ObjectVpnmgrNodeIpv4excluderangeArgs, ObjectVpnmgrNodeIpv4excluderangeState } from "./objectVpnmgrNodeIpv4excluderange";
export type ObjectVpnmgrNodeIpv4excluderange = import("./objectVpnmgrNodeIpv4excluderange").ObjectVpnmgrNodeIpv4excluderange;
export const ObjectVpnmgrNodeIpv4excluderange: typeof import("./objectVpnmgrNodeIpv4excluderange").ObjectVpnmgrNodeIpv4excluderange = null as any;
utilities.lazyLoad(exports, ["ObjectVpnmgrNodeIpv4excluderange"], () => require("./objectVpnmgrNodeIpv4excluderange"));

export { ObjectVpnmgrNodeProtectedSubnetArgs, ObjectVpnmgrNodeProtectedSubnetState } from "./objectVpnmgrNodeProtectedSubnet";
export type ObjectVpnmgrNodeProtectedSubnet = import("./objectVpnmgrNodeProtectedSubnet").ObjectVpnmgrNodeProtectedSubnet;
export const ObjectVpnmgrNodeProtectedSubnet: typeof import("./objectVpnmgrNodeProtectedSubnet").ObjectVpnmgrNodeProtectedSubnet = null as any;
utilities.lazyLoad(exports, ["ObjectVpnmgrNodeProtectedSubnet"], () => require("./objectVpnmgrNodeProtectedSubnet"));

export { ObjectVpnmgrNodeSummaryAddrArgs, ObjectVpnmgrNodeSummaryAddrState } from "./objectVpnmgrNodeSummaryAddr";
export type ObjectVpnmgrNodeSummaryAddr = import("./objectVpnmgrNodeSummaryAddr").ObjectVpnmgrNodeSummaryAddr;
export const ObjectVpnmgrNodeSummaryAddr: typeof import("./objectVpnmgrNodeSummaryAddr").ObjectVpnmgrNodeSummaryAddr = null as any;
utilities.lazyLoad(exports, ["ObjectVpnmgrNodeSummaryAddr"], () => require("./objectVpnmgrNodeSummaryAddr"));

export { ObjectWafMainclassArgs, ObjectWafMainclassState } from "./objectWafMainclass";
export type ObjectWafMainclass = import("./objectWafMainclass").ObjectWafMainclass;
export const ObjectWafMainclass: typeof import("./objectWafMainclass").ObjectWafMainclass = null as any;
utilities.lazyLoad(exports, ["ObjectWafMainclass"], () => require("./objectWafMainclass"));

export { ObjectWafProfileArgs, ObjectWafProfileState } from "./objectWafProfile";
export type ObjectWafProfile = import("./objectWafProfile").ObjectWafProfile;
export const ObjectWafProfile: typeof import("./objectWafProfile").ObjectWafProfile = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfile"], () => require("./objectWafProfile"));

export { ObjectWafProfileAddresslistArgs, ObjectWafProfileAddresslistState } from "./objectWafProfileAddresslist";
export type ObjectWafProfileAddresslist = import("./objectWafProfileAddresslist").ObjectWafProfileAddresslist;
export const ObjectWafProfileAddresslist: typeof import("./objectWafProfileAddresslist").ObjectWafProfileAddresslist = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileAddresslist"], () => require("./objectWafProfileAddresslist"));

export { ObjectWafProfileConstraintArgs, ObjectWafProfileConstraintState } from "./objectWafProfileConstraint";
export type ObjectWafProfileConstraint = import("./objectWafProfileConstraint").ObjectWafProfileConstraint;
export const ObjectWafProfileConstraint: typeof import("./objectWafProfileConstraint").ObjectWafProfileConstraint = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraint"], () => require("./objectWafProfileConstraint"));

export { ObjectWafProfileConstraintContentlengthArgs, ObjectWafProfileConstraintContentlengthState } from "./objectWafProfileConstraintContentlength";
export type ObjectWafProfileConstraintContentlength = import("./objectWafProfileConstraintContentlength").ObjectWafProfileConstraintContentlength;
export const ObjectWafProfileConstraintContentlength: typeof import("./objectWafProfileConstraintContentlength").ObjectWafProfileConstraintContentlength = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintContentlength"], () => require("./objectWafProfileConstraintContentlength"));

export { ObjectWafProfileConstraintExceptionArgs, ObjectWafProfileConstraintExceptionState } from "./objectWafProfileConstraintException";
export type ObjectWafProfileConstraintException = import("./objectWafProfileConstraintException").ObjectWafProfileConstraintException;
export const ObjectWafProfileConstraintException: typeof import("./objectWafProfileConstraintException").ObjectWafProfileConstraintException = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintException"], () => require("./objectWafProfileConstraintException"));

export { ObjectWafProfileConstraintHeaderlengthArgs, ObjectWafProfileConstraintHeaderlengthState } from "./objectWafProfileConstraintHeaderlength";
export type ObjectWafProfileConstraintHeaderlength = import("./objectWafProfileConstraintHeaderlength").ObjectWafProfileConstraintHeaderlength;
export const ObjectWafProfileConstraintHeaderlength: typeof import("./objectWafProfileConstraintHeaderlength").ObjectWafProfileConstraintHeaderlength = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintHeaderlength"], () => require("./objectWafProfileConstraintHeaderlength"));

export { ObjectWafProfileConstraintHostnameArgs, ObjectWafProfileConstraintHostnameState } from "./objectWafProfileConstraintHostname";
export type ObjectWafProfileConstraintHostname = import("./objectWafProfileConstraintHostname").ObjectWafProfileConstraintHostname;
export const ObjectWafProfileConstraintHostname: typeof import("./objectWafProfileConstraintHostname").ObjectWafProfileConstraintHostname = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintHostname"], () => require("./objectWafProfileConstraintHostname"));

export { ObjectWafProfileConstraintLinelengthArgs, ObjectWafProfileConstraintLinelengthState } from "./objectWafProfileConstraintLinelength";
export type ObjectWafProfileConstraintLinelength = import("./objectWafProfileConstraintLinelength").ObjectWafProfileConstraintLinelength;
export const ObjectWafProfileConstraintLinelength: typeof import("./objectWafProfileConstraintLinelength").ObjectWafProfileConstraintLinelength = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintLinelength"], () => require("./objectWafProfileConstraintLinelength"));

export { ObjectWafProfileConstraintMalformedArgs, ObjectWafProfileConstraintMalformedState } from "./objectWafProfileConstraintMalformed";
export type ObjectWafProfileConstraintMalformed = import("./objectWafProfileConstraintMalformed").ObjectWafProfileConstraintMalformed;
export const ObjectWafProfileConstraintMalformed: typeof import("./objectWafProfileConstraintMalformed").ObjectWafProfileConstraintMalformed = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintMalformed"], () => require("./objectWafProfileConstraintMalformed"));

export { ObjectWafProfileConstraintMaxcookieArgs, ObjectWafProfileConstraintMaxcookieState } from "./objectWafProfileConstraintMaxcookie";
export type ObjectWafProfileConstraintMaxcookie = import("./objectWafProfileConstraintMaxcookie").ObjectWafProfileConstraintMaxcookie;
export const ObjectWafProfileConstraintMaxcookie: typeof import("./objectWafProfileConstraintMaxcookie").ObjectWafProfileConstraintMaxcookie = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintMaxcookie"], () => require("./objectWafProfileConstraintMaxcookie"));

export { ObjectWafProfileConstraintMaxheaderlineArgs, ObjectWafProfileConstraintMaxheaderlineState } from "./objectWafProfileConstraintMaxheaderline";
export type ObjectWafProfileConstraintMaxheaderline = import("./objectWafProfileConstraintMaxheaderline").ObjectWafProfileConstraintMaxheaderline;
export const ObjectWafProfileConstraintMaxheaderline: typeof import("./objectWafProfileConstraintMaxheaderline").ObjectWafProfileConstraintMaxheaderline = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintMaxheaderline"], () => require("./objectWafProfileConstraintMaxheaderline"));

export { ObjectWafProfileConstraintMaxrangesegmentArgs, ObjectWafProfileConstraintMaxrangesegmentState } from "./objectWafProfileConstraintMaxrangesegment";
export type ObjectWafProfileConstraintMaxrangesegment = import("./objectWafProfileConstraintMaxrangesegment").ObjectWafProfileConstraintMaxrangesegment;
export const ObjectWafProfileConstraintMaxrangesegment: typeof import("./objectWafProfileConstraintMaxrangesegment").ObjectWafProfileConstraintMaxrangesegment = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintMaxrangesegment"], () => require("./objectWafProfileConstraintMaxrangesegment"));

export { ObjectWafProfileConstraintMaxurlparamArgs, ObjectWafProfileConstraintMaxurlparamState } from "./objectWafProfileConstraintMaxurlparam";
export type ObjectWafProfileConstraintMaxurlparam = import("./objectWafProfileConstraintMaxurlparam").ObjectWafProfileConstraintMaxurlparam;
export const ObjectWafProfileConstraintMaxurlparam: typeof import("./objectWafProfileConstraintMaxurlparam").ObjectWafProfileConstraintMaxurlparam = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintMaxurlparam"], () => require("./objectWafProfileConstraintMaxurlparam"));

export { ObjectWafProfileConstraintMethodArgs, ObjectWafProfileConstraintMethodState } from "./objectWafProfileConstraintMethod";
export type ObjectWafProfileConstraintMethod = import("./objectWafProfileConstraintMethod").ObjectWafProfileConstraintMethod;
export const ObjectWafProfileConstraintMethod: typeof import("./objectWafProfileConstraintMethod").ObjectWafProfileConstraintMethod = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintMethod"], () => require("./objectWafProfileConstraintMethod"));

export { ObjectWafProfileConstraintParamlengthArgs, ObjectWafProfileConstraintParamlengthState } from "./objectWafProfileConstraintParamlength";
export type ObjectWafProfileConstraintParamlength = import("./objectWafProfileConstraintParamlength").ObjectWafProfileConstraintParamlength;
export const ObjectWafProfileConstraintParamlength: typeof import("./objectWafProfileConstraintParamlength").ObjectWafProfileConstraintParamlength = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintParamlength"], () => require("./objectWafProfileConstraintParamlength"));

export { ObjectWafProfileConstraintUrlparamlengthArgs, ObjectWafProfileConstraintUrlparamlengthState } from "./objectWafProfileConstraintUrlparamlength";
export type ObjectWafProfileConstraintUrlparamlength = import("./objectWafProfileConstraintUrlparamlength").ObjectWafProfileConstraintUrlparamlength;
export const ObjectWafProfileConstraintUrlparamlength: typeof import("./objectWafProfileConstraintUrlparamlength").ObjectWafProfileConstraintUrlparamlength = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintUrlparamlength"], () => require("./objectWafProfileConstraintUrlparamlength"));

export { ObjectWafProfileConstraintVersionArgs, ObjectWafProfileConstraintVersionState } from "./objectWafProfileConstraintVersion";
export type ObjectWafProfileConstraintVersion = import("./objectWafProfileConstraintVersion").ObjectWafProfileConstraintVersion;
export const ObjectWafProfileConstraintVersion: typeof import("./objectWafProfileConstraintVersion").ObjectWafProfileConstraintVersion = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileConstraintVersion"], () => require("./objectWafProfileConstraintVersion"));

export { ObjectWafProfileMethodArgs, ObjectWafProfileMethodState } from "./objectWafProfileMethod";
export type ObjectWafProfileMethod = import("./objectWafProfileMethod").ObjectWafProfileMethod;
export const ObjectWafProfileMethod: typeof import("./objectWafProfileMethod").ObjectWafProfileMethod = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileMethod"], () => require("./objectWafProfileMethod"));

export { ObjectWafProfileMethodMethodpolicyArgs, ObjectWafProfileMethodMethodpolicyState } from "./objectWafProfileMethodMethodpolicy";
export type ObjectWafProfileMethodMethodpolicy = import("./objectWafProfileMethodMethodpolicy").ObjectWafProfileMethodMethodpolicy;
export const ObjectWafProfileMethodMethodpolicy: typeof import("./objectWafProfileMethodMethodpolicy").ObjectWafProfileMethodMethodpolicy = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileMethodMethodpolicy"], () => require("./objectWafProfileMethodMethodpolicy"));

export { ObjectWafProfileSignatureArgs, ObjectWafProfileSignatureState } from "./objectWafProfileSignature";
export type ObjectWafProfileSignature = import("./objectWafProfileSignature").ObjectWafProfileSignature;
export const ObjectWafProfileSignature: typeof import("./objectWafProfileSignature").ObjectWafProfileSignature = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileSignature"], () => require("./objectWafProfileSignature"));

export { ObjectWafProfileSignatureCustomsignatureArgs, ObjectWafProfileSignatureCustomsignatureState } from "./objectWafProfileSignatureCustomsignature";
export type ObjectWafProfileSignatureCustomsignature = import("./objectWafProfileSignatureCustomsignature").ObjectWafProfileSignatureCustomsignature;
export const ObjectWafProfileSignatureCustomsignature: typeof import("./objectWafProfileSignatureCustomsignature").ObjectWafProfileSignatureCustomsignature = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileSignatureCustomsignature"], () => require("./objectWafProfileSignatureCustomsignature"));

export { ObjectWafProfileUrlaccessArgs, ObjectWafProfileUrlaccessState } from "./objectWafProfileUrlaccess";
export type ObjectWafProfileUrlaccess = import("./objectWafProfileUrlaccess").ObjectWafProfileUrlaccess;
export const ObjectWafProfileUrlaccess: typeof import("./objectWafProfileUrlaccess").ObjectWafProfileUrlaccess = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileUrlaccess"], () => require("./objectWafProfileUrlaccess"));

export { ObjectWafProfileUrlaccessAccesspatternArgs, ObjectWafProfileUrlaccessAccesspatternState } from "./objectWafProfileUrlaccessAccesspattern";
export type ObjectWafProfileUrlaccessAccesspattern = import("./objectWafProfileUrlaccessAccesspattern").ObjectWafProfileUrlaccessAccesspattern;
export const ObjectWafProfileUrlaccessAccesspattern: typeof import("./objectWafProfileUrlaccessAccesspattern").ObjectWafProfileUrlaccessAccesspattern = null as any;
utilities.lazyLoad(exports, ["ObjectWafProfileUrlaccessAccesspattern"], () => require("./objectWafProfileUrlaccessAccesspattern"));

export { ObjectWafSignatureArgs, ObjectWafSignatureState } from "./objectWafSignature";
export type ObjectWafSignature = import("./objectWafSignature").ObjectWafSignature;
export const ObjectWafSignature: typeof import("./objectWafSignature").ObjectWafSignature = null as any;
utilities.lazyLoad(exports, ["ObjectWafSignature"], () => require("./objectWafSignature"));

export { ObjectWafSubclassArgs, ObjectWafSubclassState } from "./objectWafSubclass";
export type ObjectWafSubclass = import("./objectWafSubclass").ObjectWafSubclass;
export const ObjectWafSubclass: typeof import("./objectWafSubclass").ObjectWafSubclass = null as any;
utilities.lazyLoad(exports, ["ObjectWafSubclass"], () => require("./objectWafSubclass"));

export { ObjectWanoptAuthgroupArgs, ObjectWanoptAuthgroupState } from "./objectWanoptAuthgroup";
export type ObjectWanoptAuthgroup = import("./objectWanoptAuthgroup").ObjectWanoptAuthgroup;
export const ObjectWanoptAuthgroup: typeof import("./objectWanoptAuthgroup").ObjectWanoptAuthgroup = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptAuthgroup"], () => require("./objectWanoptAuthgroup"));

export { ObjectWanoptPeerArgs, ObjectWanoptPeerState } from "./objectWanoptPeer";
export type ObjectWanoptPeer = import("./objectWanoptPeer").ObjectWanoptPeer;
export const ObjectWanoptPeer: typeof import("./objectWanoptPeer").ObjectWanoptPeer = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptPeer"], () => require("./objectWanoptPeer"));

export { ObjectWanoptProfileArgs, ObjectWanoptProfileState } from "./objectWanoptProfile";
export type ObjectWanoptProfile = import("./objectWanoptProfile").ObjectWanoptProfile;
export const ObjectWanoptProfile: typeof import("./objectWanoptProfile").ObjectWanoptProfile = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptProfile"], () => require("./objectWanoptProfile"));

export { ObjectWanoptProfileCifsArgs, ObjectWanoptProfileCifsState } from "./objectWanoptProfileCifs";
export type ObjectWanoptProfileCifs = import("./objectWanoptProfileCifs").ObjectWanoptProfileCifs;
export const ObjectWanoptProfileCifs: typeof import("./objectWanoptProfileCifs").ObjectWanoptProfileCifs = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptProfileCifs"], () => require("./objectWanoptProfileCifs"));

export { ObjectWanoptProfileFtpArgs, ObjectWanoptProfileFtpState } from "./objectWanoptProfileFtp";
export type ObjectWanoptProfileFtp = import("./objectWanoptProfileFtp").ObjectWanoptProfileFtp;
export const ObjectWanoptProfileFtp: typeof import("./objectWanoptProfileFtp").ObjectWanoptProfileFtp = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptProfileFtp"], () => require("./objectWanoptProfileFtp"));

export { ObjectWanoptProfileHttpArgs, ObjectWanoptProfileHttpState } from "./objectWanoptProfileHttp";
export type ObjectWanoptProfileHttp = import("./objectWanoptProfileHttp").ObjectWanoptProfileHttp;
export const ObjectWanoptProfileHttp: typeof import("./objectWanoptProfileHttp").ObjectWanoptProfileHttp = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptProfileHttp"], () => require("./objectWanoptProfileHttp"));

export { ObjectWanoptProfileMapiArgs, ObjectWanoptProfileMapiState } from "./objectWanoptProfileMapi";
export type ObjectWanoptProfileMapi = import("./objectWanoptProfileMapi").ObjectWanoptProfileMapi;
export const ObjectWanoptProfileMapi: typeof import("./objectWanoptProfileMapi").ObjectWanoptProfileMapi = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptProfileMapi"], () => require("./objectWanoptProfileMapi"));

export { ObjectWanoptProfileTcpArgs, ObjectWanoptProfileTcpState } from "./objectWanoptProfileTcp";
export type ObjectWanoptProfileTcp = import("./objectWanoptProfileTcp").ObjectWanoptProfileTcp;
export const ObjectWanoptProfileTcp: typeof import("./objectWanoptProfileTcp").ObjectWanoptProfileTcp = null as any;
utilities.lazyLoad(exports, ["ObjectWanoptProfileTcp"], () => require("./objectWanoptProfileTcp"));

export { ObjectWebfilterCategoriesArgs, ObjectWebfilterCategoriesState } from "./objectWebfilterCategories";
export type ObjectWebfilterCategories = import("./objectWebfilterCategories").ObjectWebfilterCategories;
export const ObjectWebfilterCategories: typeof import("./objectWebfilterCategories").ObjectWebfilterCategories = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterCategories"], () => require("./objectWebfilterCategories"));

export { ObjectWebfilterContentArgs, ObjectWebfilterContentState } from "./objectWebfilterContent";
export type ObjectWebfilterContent = import("./objectWebfilterContent").ObjectWebfilterContent;
export const ObjectWebfilterContent: typeof import("./objectWebfilterContent").ObjectWebfilterContent = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterContent"], () => require("./objectWebfilterContent"));

export { ObjectWebfilterContentEntriesArgs, ObjectWebfilterContentEntriesState } from "./objectWebfilterContentEntries";
export type ObjectWebfilterContentEntries = import("./objectWebfilterContentEntries").ObjectWebfilterContentEntries;
export const ObjectWebfilterContentEntries: typeof import("./objectWebfilterContentEntries").ObjectWebfilterContentEntries = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterContentEntries"], () => require("./objectWebfilterContentEntries"));

export { ObjectWebfilterContentheaderArgs, ObjectWebfilterContentheaderState } from "./objectWebfilterContentheader";
export type ObjectWebfilterContentheader = import("./objectWebfilterContentheader").ObjectWebfilterContentheader;
export const ObjectWebfilterContentheader: typeof import("./objectWebfilterContentheader").ObjectWebfilterContentheader = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterContentheader"], () => require("./objectWebfilterContentheader"));

export { ObjectWebfilterContentheaderEntriesArgs, ObjectWebfilterContentheaderEntriesState } from "./objectWebfilterContentheaderEntries";
export type ObjectWebfilterContentheaderEntries = import("./objectWebfilterContentheaderEntries").ObjectWebfilterContentheaderEntries;
export const ObjectWebfilterContentheaderEntries: typeof import("./objectWebfilterContentheaderEntries").ObjectWebfilterContentheaderEntries = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterContentheaderEntries"], () => require("./objectWebfilterContentheaderEntries"));

export { ObjectWebfilterContentheaderEntriesMoveArgs, ObjectWebfilterContentheaderEntriesMoveState } from "./objectWebfilterContentheaderEntriesMove";
export type ObjectWebfilterContentheaderEntriesMove = import("./objectWebfilterContentheaderEntriesMove").ObjectWebfilterContentheaderEntriesMove;
export const ObjectWebfilterContentheaderEntriesMove: typeof import("./objectWebfilterContentheaderEntriesMove").ObjectWebfilterContentheaderEntriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterContentheaderEntriesMove"], () => require("./objectWebfilterContentheaderEntriesMove"));

export { ObjectWebfilterFtgdlocalcatArgs, ObjectWebfilterFtgdlocalcatState } from "./objectWebfilterFtgdlocalcat";
export type ObjectWebfilterFtgdlocalcat = import("./objectWebfilterFtgdlocalcat").ObjectWebfilterFtgdlocalcat;
export const ObjectWebfilterFtgdlocalcat: typeof import("./objectWebfilterFtgdlocalcat").ObjectWebfilterFtgdlocalcat = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterFtgdlocalcat"], () => require("./objectWebfilterFtgdlocalcat"));

export { ObjectWebfilterFtgdlocalratingArgs, ObjectWebfilterFtgdlocalratingState } from "./objectWebfilterFtgdlocalrating";
export type ObjectWebfilterFtgdlocalrating = import("./objectWebfilterFtgdlocalrating").ObjectWebfilterFtgdlocalrating;
export const ObjectWebfilterFtgdlocalrating: typeof import("./objectWebfilterFtgdlocalrating").ObjectWebfilterFtgdlocalrating = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterFtgdlocalrating"], () => require("./objectWebfilterFtgdlocalrating"));

export { ObjectWebfilterProfileArgs, ObjectWebfilterProfileState } from "./objectWebfilterProfile";
export type ObjectWebfilterProfile = import("./objectWebfilterProfile").ObjectWebfilterProfile;
export const ObjectWebfilterProfile: typeof import("./objectWebfilterProfile").ObjectWebfilterProfile = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfile"], () => require("./objectWebfilterProfile"));

export { ObjectWebfilterProfileAntiphishArgs, ObjectWebfilterProfileAntiphishState } from "./objectWebfilterProfileAntiphish";
export type ObjectWebfilterProfileAntiphish = import("./objectWebfilterProfileAntiphish").ObjectWebfilterProfileAntiphish;
export const ObjectWebfilterProfileAntiphish: typeof import("./objectWebfilterProfileAntiphish").ObjectWebfilterProfileAntiphish = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileAntiphish"], () => require("./objectWebfilterProfileAntiphish"));

export { ObjectWebfilterProfileAntiphishCustompatternsArgs, ObjectWebfilterProfileAntiphishCustompatternsState } from "./objectWebfilterProfileAntiphishCustompatterns";
export type ObjectWebfilterProfileAntiphishCustompatterns = import("./objectWebfilterProfileAntiphishCustompatterns").ObjectWebfilterProfileAntiphishCustompatterns;
export const ObjectWebfilterProfileAntiphishCustompatterns: typeof import("./objectWebfilterProfileAntiphishCustompatterns").ObjectWebfilterProfileAntiphishCustompatterns = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileAntiphishCustompatterns"], () => require("./objectWebfilterProfileAntiphishCustompatterns"));

export { ObjectWebfilterProfileAntiphishInspectionentriesArgs, ObjectWebfilterProfileAntiphishInspectionentriesState } from "./objectWebfilterProfileAntiphishInspectionentries";
export type ObjectWebfilterProfileAntiphishInspectionentries = import("./objectWebfilterProfileAntiphishInspectionentries").ObjectWebfilterProfileAntiphishInspectionentries;
export const ObjectWebfilterProfileAntiphishInspectionentries: typeof import("./objectWebfilterProfileAntiphishInspectionentries").ObjectWebfilterProfileAntiphishInspectionentries = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileAntiphishInspectionentries"], () => require("./objectWebfilterProfileAntiphishInspectionentries"));

export { ObjectWebfilterProfileFilefilterEntriesArgs, ObjectWebfilterProfileFilefilterEntriesState } from "./objectWebfilterProfileFilefilterEntries";
export type ObjectWebfilterProfileFilefilterEntries = import("./objectWebfilterProfileFilefilterEntries").ObjectWebfilterProfileFilefilterEntries;
export const ObjectWebfilterProfileFilefilterEntries: typeof import("./objectWebfilterProfileFilefilterEntries").ObjectWebfilterProfileFilefilterEntries = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileFilefilterEntries"], () => require("./objectWebfilterProfileFilefilterEntries"));

export { ObjectWebfilterProfileFtgdwfArgs, ObjectWebfilterProfileFtgdwfState } from "./objectWebfilterProfileFtgdwf";
export type ObjectWebfilterProfileFtgdwf = import("./objectWebfilterProfileFtgdwf").ObjectWebfilterProfileFtgdwf;
export const ObjectWebfilterProfileFtgdwf: typeof import("./objectWebfilterProfileFtgdwf").ObjectWebfilterProfileFtgdwf = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileFtgdwf"], () => require("./objectWebfilterProfileFtgdwf"));

export { ObjectWebfilterProfileFtgdwfFiltersArgs, ObjectWebfilterProfileFtgdwfFiltersState } from "./objectWebfilterProfileFtgdwfFilters";
export type ObjectWebfilterProfileFtgdwfFilters = import("./objectWebfilterProfileFtgdwfFilters").ObjectWebfilterProfileFtgdwfFilters;
export const ObjectWebfilterProfileFtgdwfFilters: typeof import("./objectWebfilterProfileFtgdwfFilters").ObjectWebfilterProfileFtgdwfFilters = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileFtgdwfFilters"], () => require("./objectWebfilterProfileFtgdwfFilters"));

export { ObjectWebfilterProfileOverrideArgs, ObjectWebfilterProfileOverrideState } from "./objectWebfilterProfileOverride";
export type ObjectWebfilterProfileOverride = import("./objectWebfilterProfileOverride").ObjectWebfilterProfileOverride;
export const ObjectWebfilterProfileOverride: typeof import("./objectWebfilterProfileOverride").ObjectWebfilterProfileOverride = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileOverride"], () => require("./objectWebfilterProfileOverride"));

export { ObjectWebfilterProfileUrlextractionArgs, ObjectWebfilterProfileUrlextractionState } from "./objectWebfilterProfileUrlextraction";
export type ObjectWebfilterProfileUrlextraction = import("./objectWebfilterProfileUrlextraction").ObjectWebfilterProfileUrlextraction;
export const ObjectWebfilterProfileUrlextraction: typeof import("./objectWebfilterProfileUrlextraction").ObjectWebfilterProfileUrlextraction = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileUrlextraction"], () => require("./objectWebfilterProfileUrlextraction"));

export { ObjectWebfilterProfileWebArgs, ObjectWebfilterProfileWebState } from "./objectWebfilterProfileWeb";
export type ObjectWebfilterProfileWeb = import("./objectWebfilterProfileWeb").ObjectWebfilterProfileWeb;
export const ObjectWebfilterProfileWeb: typeof import("./objectWebfilterProfileWeb").ObjectWebfilterProfileWeb = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileWeb"], () => require("./objectWebfilterProfileWeb"));

export { ObjectWebfilterProfileYoutubechannelfilterArgs, ObjectWebfilterProfileYoutubechannelfilterState } from "./objectWebfilterProfileYoutubechannelfilter";
export type ObjectWebfilterProfileYoutubechannelfilter = import("./objectWebfilterProfileYoutubechannelfilter").ObjectWebfilterProfileYoutubechannelfilter;
export const ObjectWebfilterProfileYoutubechannelfilter: typeof import("./objectWebfilterProfileYoutubechannelfilter").ObjectWebfilterProfileYoutubechannelfilter = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterProfileYoutubechannelfilter"], () => require("./objectWebfilterProfileYoutubechannelfilter"));

export { ObjectWebfilterUrlfilterArgs, ObjectWebfilterUrlfilterState } from "./objectWebfilterUrlfilter";
export type ObjectWebfilterUrlfilter = import("./objectWebfilterUrlfilter").ObjectWebfilterUrlfilter;
export const ObjectWebfilterUrlfilter: typeof import("./objectWebfilterUrlfilter").ObjectWebfilterUrlfilter = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterUrlfilter"], () => require("./objectWebfilterUrlfilter"));

export { ObjectWebfilterUrlfilterEntriesArgs, ObjectWebfilterUrlfilterEntriesState } from "./objectWebfilterUrlfilterEntries";
export type ObjectWebfilterUrlfilterEntries = import("./objectWebfilterUrlfilterEntries").ObjectWebfilterUrlfilterEntries;
export const ObjectWebfilterUrlfilterEntries: typeof import("./objectWebfilterUrlfilterEntries").ObjectWebfilterUrlfilterEntries = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterUrlfilterEntries"], () => require("./objectWebfilterUrlfilterEntries"));

export { ObjectWebfilterUrlfilterEntriesMoveArgs, ObjectWebfilterUrlfilterEntriesMoveState } from "./objectWebfilterUrlfilterEntriesMove";
export type ObjectWebfilterUrlfilterEntriesMove = import("./objectWebfilterUrlfilterEntriesMove").ObjectWebfilterUrlfilterEntriesMove;
export const ObjectWebfilterUrlfilterEntriesMove: typeof import("./objectWebfilterUrlfilterEntriesMove").ObjectWebfilterUrlfilterEntriesMove = null as any;
utilities.lazyLoad(exports, ["ObjectWebfilterUrlfilterEntriesMove"], () => require("./objectWebfilterUrlfilterEntriesMove"));

export { ObjectWebproxyForwardserverArgs, ObjectWebproxyForwardserverState } from "./objectWebproxyForwardserver";
export type ObjectWebproxyForwardserver = import("./objectWebproxyForwardserver").ObjectWebproxyForwardserver;
export const ObjectWebproxyForwardserver: typeof import("./objectWebproxyForwardserver").ObjectWebproxyForwardserver = null as any;
utilities.lazyLoad(exports, ["ObjectWebproxyForwardserver"], () => require("./objectWebproxyForwardserver"));

export { ObjectWebproxyForwardservergroupArgs, ObjectWebproxyForwardservergroupState } from "./objectWebproxyForwardservergroup";
export type ObjectWebproxyForwardservergroup = import("./objectWebproxyForwardservergroup").ObjectWebproxyForwardservergroup;
export const ObjectWebproxyForwardservergroup: typeof import("./objectWebproxyForwardservergroup").ObjectWebproxyForwardservergroup = null as any;
utilities.lazyLoad(exports, ["ObjectWebproxyForwardservergroup"], () => require("./objectWebproxyForwardservergroup"));

export { ObjectWebproxyProfileArgs, ObjectWebproxyProfileState } from "./objectWebproxyProfile";
export type ObjectWebproxyProfile = import("./objectWebproxyProfile").ObjectWebproxyProfile;
export const ObjectWebproxyProfile: typeof import("./objectWebproxyProfile").ObjectWebproxyProfile = null as any;
utilities.lazyLoad(exports, ["ObjectWebproxyProfile"], () => require("./objectWebproxyProfile"));

export { ObjectWebproxyProfileHeadersArgs, ObjectWebproxyProfileHeadersState } from "./objectWebproxyProfileHeaders";
export type ObjectWebproxyProfileHeaders = import("./objectWebproxyProfileHeaders").ObjectWebproxyProfileHeaders;
export const ObjectWebproxyProfileHeaders: typeof import("./objectWebproxyProfileHeaders").ObjectWebproxyProfileHeaders = null as any;
utilities.lazyLoad(exports, ["ObjectWebproxyProfileHeaders"], () => require("./objectWebproxyProfileHeaders"));

export { ObjectWebproxyWispArgs, ObjectWebproxyWispState } from "./objectWebproxyWisp";
export type ObjectWebproxyWisp = import("./objectWebproxyWisp").ObjectWebproxyWisp;
export const ObjectWebproxyWisp: typeof import("./objectWebproxyWisp").ObjectWebproxyWisp = null as any;
utilities.lazyLoad(exports, ["ObjectWebproxyWisp"], () => require("./objectWebproxyWisp"));

export { ObjectWirelesscontrollerAccesscontrollistArgs, ObjectWirelesscontrollerAccesscontrollistState } from "./objectWirelesscontrollerAccesscontrollist";
export type ObjectWirelesscontrollerAccesscontrollist = import("./objectWirelesscontrollerAccesscontrollist").ObjectWirelesscontrollerAccesscontrollist;
export const ObjectWirelesscontrollerAccesscontrollist: typeof import("./objectWirelesscontrollerAccesscontrollist").ObjectWirelesscontrollerAccesscontrollist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerAccesscontrollist"], () => require("./objectWirelesscontrollerAccesscontrollist"));

export { ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesArgs, ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesState } from "./objectWirelesscontrollerAccesscontrollistLayer3ipv4rules";
export type ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rules = import("./objectWirelesscontrollerAccesscontrollistLayer3ipv4rules").ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rules;
export const ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rules: typeof import("./objectWirelesscontrollerAccesscontrollistLayer3ipv4rules").ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rules = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rules"], () => require("./objectWirelesscontrollerAccesscontrollistLayer3ipv4rules"));

export { ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMoveArgs, ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMoveState } from "./objectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove";
export type ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove = import("./objectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove").ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove;
export const ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove: typeof import("./objectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove").ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove"], () => require("./objectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove"));

export { ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesArgs, ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesState } from "./objectWirelesscontrollerAccesscontrollistLayer3ipv6rules";
export type ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rules = import("./objectWirelesscontrollerAccesscontrollistLayer3ipv6rules").ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rules;
export const ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rules: typeof import("./objectWirelesscontrollerAccesscontrollistLayer3ipv6rules").ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rules = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rules"], () => require("./objectWirelesscontrollerAccesscontrollistLayer3ipv6rules"));

export { ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMoveArgs, ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMoveState } from "./objectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove";
export type ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove = import("./objectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove").ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove;
export const ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove: typeof import("./objectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove").ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove"], () => require("./objectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove"));

export { ObjectWirelesscontrollerAddressArgs, ObjectWirelesscontrollerAddressState } from "./objectWirelesscontrollerAddress";
export type ObjectWirelesscontrollerAddress = import("./objectWirelesscontrollerAddress").ObjectWirelesscontrollerAddress;
export const ObjectWirelesscontrollerAddress: typeof import("./objectWirelesscontrollerAddress").ObjectWirelesscontrollerAddress = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerAddress"], () => require("./objectWirelesscontrollerAddress"));

export { ObjectWirelesscontrollerAddrgrpArgs, ObjectWirelesscontrollerAddrgrpState } from "./objectWirelesscontrollerAddrgrp";
export type ObjectWirelesscontrollerAddrgrp = import("./objectWirelesscontrollerAddrgrp").ObjectWirelesscontrollerAddrgrp;
export const ObjectWirelesscontrollerAddrgrp: typeof import("./objectWirelesscontrollerAddrgrp").ObjectWirelesscontrollerAddrgrp = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerAddrgrp"], () => require("./objectWirelesscontrollerAddrgrp"));

export { ObjectWirelesscontrollerApcfgprofileArgs, ObjectWirelesscontrollerApcfgprofileState } from "./objectWirelesscontrollerApcfgprofile";
export type ObjectWirelesscontrollerApcfgprofile = import("./objectWirelesscontrollerApcfgprofile").ObjectWirelesscontrollerApcfgprofile;
export const ObjectWirelesscontrollerApcfgprofile: typeof import("./objectWirelesscontrollerApcfgprofile").ObjectWirelesscontrollerApcfgprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerApcfgprofile"], () => require("./objectWirelesscontrollerApcfgprofile"));

export { ObjectWirelesscontrollerApcfgprofileCommandlistArgs, ObjectWirelesscontrollerApcfgprofileCommandlistState } from "./objectWirelesscontrollerApcfgprofileCommandlist";
export type ObjectWirelesscontrollerApcfgprofileCommandlist = import("./objectWirelesscontrollerApcfgprofileCommandlist").ObjectWirelesscontrollerApcfgprofileCommandlist;
export const ObjectWirelesscontrollerApcfgprofileCommandlist: typeof import("./objectWirelesscontrollerApcfgprofileCommandlist").ObjectWirelesscontrollerApcfgprofileCommandlist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerApcfgprofileCommandlist"], () => require("./objectWirelesscontrollerApcfgprofileCommandlist"));

export { ObjectWirelesscontrollerApcfgprofileCommandlistMoveArgs, ObjectWirelesscontrollerApcfgprofileCommandlistMoveState } from "./objectWirelesscontrollerApcfgprofileCommandlistMove";
export type ObjectWirelesscontrollerApcfgprofileCommandlistMove = import("./objectWirelesscontrollerApcfgprofileCommandlistMove").ObjectWirelesscontrollerApcfgprofileCommandlistMove;
export const ObjectWirelesscontrollerApcfgprofileCommandlistMove: typeof import("./objectWirelesscontrollerApcfgprofileCommandlistMove").ObjectWirelesscontrollerApcfgprofileCommandlistMove = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerApcfgprofileCommandlistMove"], () => require("./objectWirelesscontrollerApcfgprofileCommandlistMove"));

export { ObjectWirelesscontrollerArrpprofileArgs, ObjectWirelesscontrollerArrpprofileState } from "./objectWirelesscontrollerArrpprofile";
export type ObjectWirelesscontrollerArrpprofile = import("./objectWirelesscontrollerArrpprofile").ObjectWirelesscontrollerArrpprofile;
export const ObjectWirelesscontrollerArrpprofile: typeof import("./objectWirelesscontrollerArrpprofile").ObjectWirelesscontrollerArrpprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerArrpprofile"], () => require("./objectWirelesscontrollerArrpprofile"));

export { ObjectWirelesscontrollerBleprofileArgs, ObjectWirelesscontrollerBleprofileState } from "./objectWirelesscontrollerBleprofile";
export type ObjectWirelesscontrollerBleprofile = import("./objectWirelesscontrollerBleprofile").ObjectWirelesscontrollerBleprofile;
export const ObjectWirelesscontrollerBleprofile: typeof import("./objectWirelesscontrollerBleprofile").ObjectWirelesscontrollerBleprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerBleprofile"], () => require("./objectWirelesscontrollerBleprofile"));

export { ObjectWirelesscontrollerBonjourprofileArgs, ObjectWirelesscontrollerBonjourprofileState } from "./objectWirelesscontrollerBonjourprofile";
export type ObjectWirelesscontrollerBonjourprofile = import("./objectWirelesscontrollerBonjourprofile").ObjectWirelesscontrollerBonjourprofile;
export const ObjectWirelesscontrollerBonjourprofile: typeof import("./objectWirelesscontrollerBonjourprofile").ObjectWirelesscontrollerBonjourprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerBonjourprofile"], () => require("./objectWirelesscontrollerBonjourprofile"));

export { ObjectWirelesscontrollerBonjourprofilePolicylistArgs, ObjectWirelesscontrollerBonjourprofilePolicylistState } from "./objectWirelesscontrollerBonjourprofilePolicylist";
export type ObjectWirelesscontrollerBonjourprofilePolicylist = import("./objectWirelesscontrollerBonjourprofilePolicylist").ObjectWirelesscontrollerBonjourprofilePolicylist;
export const ObjectWirelesscontrollerBonjourprofilePolicylist: typeof import("./objectWirelesscontrollerBonjourprofilePolicylist").ObjectWirelesscontrollerBonjourprofilePolicylist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerBonjourprofilePolicylist"], () => require("./objectWirelesscontrollerBonjourprofilePolicylist"));

export { ObjectWirelesscontrollerBonjourprofilePolicylistMoveArgs, ObjectWirelesscontrollerBonjourprofilePolicylistMoveState } from "./objectWirelesscontrollerBonjourprofilePolicylistMove";
export type ObjectWirelesscontrollerBonjourprofilePolicylistMove = import("./objectWirelesscontrollerBonjourprofilePolicylistMove").ObjectWirelesscontrollerBonjourprofilePolicylistMove;
export const ObjectWirelesscontrollerBonjourprofilePolicylistMove: typeof import("./objectWirelesscontrollerBonjourprofilePolicylistMove").ObjectWirelesscontrollerBonjourprofilePolicylistMove = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerBonjourprofilePolicylistMove"], () => require("./objectWirelesscontrollerBonjourprofilePolicylistMove"));

export { ObjectWirelesscontrollerHotspot20Anqp3gppcellularArgs, ObjectWirelesscontrollerHotspot20Anqp3gppcellularState } from "./objectWirelesscontrollerHotspot20Anqp3gppcellular";
export type ObjectWirelesscontrollerHotspot20Anqp3gppcellular = import("./objectWirelesscontrollerHotspot20Anqp3gppcellular").ObjectWirelesscontrollerHotspot20Anqp3gppcellular;
export const ObjectWirelesscontrollerHotspot20Anqp3gppcellular: typeof import("./objectWirelesscontrollerHotspot20Anqp3gppcellular").ObjectWirelesscontrollerHotspot20Anqp3gppcellular = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqp3gppcellular"], () => require("./objectWirelesscontrollerHotspot20Anqp3gppcellular"));

export { ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclistArgs, ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclistState } from "./objectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist";
export type ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist = import("./objectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist").ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist;
export const ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist: typeof import("./objectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist").ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist"], () => require("./objectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist"));

export { ObjectWirelesscontrollerHotspot20AnqpipaddresstypeArgs, ObjectWirelesscontrollerHotspot20AnqpipaddresstypeState } from "./objectWirelesscontrollerHotspot20Anqpipaddresstype";
export type ObjectWirelesscontrollerHotspot20Anqpipaddresstype = import("./objectWirelesscontrollerHotspot20Anqpipaddresstype").ObjectWirelesscontrollerHotspot20Anqpipaddresstype;
export const ObjectWirelesscontrollerHotspot20Anqpipaddresstype: typeof import("./objectWirelesscontrollerHotspot20Anqpipaddresstype").ObjectWirelesscontrollerHotspot20Anqpipaddresstype = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqpipaddresstype"], () => require("./objectWirelesscontrollerHotspot20Anqpipaddresstype"));

export { ObjectWirelesscontrollerHotspot20AnqpnairealmArgs, ObjectWirelesscontrollerHotspot20AnqpnairealmState } from "./objectWirelesscontrollerHotspot20Anqpnairealm";
export type ObjectWirelesscontrollerHotspot20Anqpnairealm = import("./objectWirelesscontrollerHotspot20Anqpnairealm").ObjectWirelesscontrollerHotspot20Anqpnairealm;
export const ObjectWirelesscontrollerHotspot20Anqpnairealm: typeof import("./objectWirelesscontrollerHotspot20Anqpnairealm").ObjectWirelesscontrollerHotspot20Anqpnairealm = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqpnairealm"], () => require("./objectWirelesscontrollerHotspot20Anqpnairealm"));

export { ObjectWirelesscontrollerHotspot20AnqpnairealmNailistArgs, ObjectWirelesscontrollerHotspot20AnqpnairealmNailistState } from "./objectWirelesscontrollerHotspot20AnqpnairealmNailist";
export type ObjectWirelesscontrollerHotspot20AnqpnairealmNailist = import("./objectWirelesscontrollerHotspot20AnqpnairealmNailist").ObjectWirelesscontrollerHotspot20AnqpnairealmNailist;
export const ObjectWirelesscontrollerHotspot20AnqpnairealmNailist: typeof import("./objectWirelesscontrollerHotspot20AnqpnairealmNailist").ObjectWirelesscontrollerHotspot20AnqpnairealmNailist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20AnqpnairealmNailist"], () => require("./objectWirelesscontrollerHotspot20AnqpnairealmNailist"));

export { ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodArgs, ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodState } from "./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod";
export type ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod = import("./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod").ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod;
export const ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod: typeof import("./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod").ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod"], () => require("./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod"));

export { ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamArgs, ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamState } from "./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam";
export type ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam = import("./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam").ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam;
export const ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam: typeof import("./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam").ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam"], () => require("./objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam"));

export { ObjectWirelesscontrollerHotspot20AnqpnetworkauthtypeArgs, ObjectWirelesscontrollerHotspot20AnqpnetworkauthtypeState } from "./objectWirelesscontrollerHotspot20Anqpnetworkauthtype";
export type ObjectWirelesscontrollerHotspot20Anqpnetworkauthtype = import("./objectWirelesscontrollerHotspot20Anqpnetworkauthtype").ObjectWirelesscontrollerHotspot20Anqpnetworkauthtype;
export const ObjectWirelesscontrollerHotspot20Anqpnetworkauthtype: typeof import("./objectWirelesscontrollerHotspot20Anqpnetworkauthtype").ObjectWirelesscontrollerHotspot20Anqpnetworkauthtype = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqpnetworkauthtype"], () => require("./objectWirelesscontrollerHotspot20Anqpnetworkauthtype"));

export { ObjectWirelesscontrollerHotspot20AnqproamingconsortiumArgs, ObjectWirelesscontrollerHotspot20AnqproamingconsortiumState } from "./objectWirelesscontrollerHotspot20Anqproamingconsortium";
export type ObjectWirelesscontrollerHotspot20Anqproamingconsortium = import("./objectWirelesscontrollerHotspot20Anqproamingconsortium").ObjectWirelesscontrollerHotspot20Anqproamingconsortium;
export const ObjectWirelesscontrollerHotspot20Anqproamingconsortium: typeof import("./objectWirelesscontrollerHotspot20Anqproamingconsortium").ObjectWirelesscontrollerHotspot20Anqproamingconsortium = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqproamingconsortium"], () => require("./objectWirelesscontrollerHotspot20Anqproamingconsortium"));

export { ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilistArgs, ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilistState } from "./objectWirelesscontrollerHotspot20AnqproamingconsortiumOilist";
export type ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilist = import("./objectWirelesscontrollerHotspot20AnqproamingconsortiumOilist").ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilist;
export const ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilist: typeof import("./objectWirelesscontrollerHotspot20AnqproamingconsortiumOilist").ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilist"], () => require("./objectWirelesscontrollerHotspot20AnqproamingconsortiumOilist"));

export { ObjectWirelesscontrollerHotspot20AnqpvenuenameArgs, ObjectWirelesscontrollerHotspot20AnqpvenuenameState } from "./objectWirelesscontrollerHotspot20Anqpvenuename";
export type ObjectWirelesscontrollerHotspot20Anqpvenuename = import("./objectWirelesscontrollerHotspot20Anqpvenuename").ObjectWirelesscontrollerHotspot20Anqpvenuename;
export const ObjectWirelesscontrollerHotspot20Anqpvenuename: typeof import("./objectWirelesscontrollerHotspot20Anqpvenuename").ObjectWirelesscontrollerHotspot20Anqpvenuename = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqpvenuename"], () => require("./objectWirelesscontrollerHotspot20Anqpvenuename"));

export { ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelistArgs, ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelistState } from "./objectWirelesscontrollerHotspot20AnqpvenuenameValuelist";
export type ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelist = import("./objectWirelesscontrollerHotspot20AnqpvenuenameValuelist").ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelist;
export const ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelist: typeof import("./objectWirelesscontrollerHotspot20AnqpvenuenameValuelist").ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelist"], () => require("./objectWirelesscontrollerHotspot20AnqpvenuenameValuelist"));

export { ObjectWirelesscontrollerHotspot20AnqpvenueurlArgs, ObjectWirelesscontrollerHotspot20AnqpvenueurlState } from "./objectWirelesscontrollerHotspot20Anqpvenueurl";
export type ObjectWirelesscontrollerHotspot20Anqpvenueurl = import("./objectWirelesscontrollerHotspot20Anqpvenueurl").ObjectWirelesscontrollerHotspot20Anqpvenueurl;
export const ObjectWirelesscontrollerHotspot20Anqpvenueurl: typeof import("./objectWirelesscontrollerHotspot20Anqpvenueurl").ObjectWirelesscontrollerHotspot20Anqpvenueurl = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Anqpvenueurl"], () => require("./objectWirelesscontrollerHotspot20Anqpvenueurl"));

export { ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelistArgs, ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelistState } from "./objectWirelesscontrollerHotspot20AnqpvenueurlValuelist";
export type ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelist = import("./objectWirelesscontrollerHotspot20AnqpvenueurlValuelist").ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelist;
export const ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelist: typeof import("./objectWirelesscontrollerHotspot20AnqpvenueurlValuelist").ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelist"], () => require("./objectWirelesscontrollerHotspot20AnqpvenueurlValuelist"));

export { ObjectWirelesscontrollerHotspot20H2qpadviceofchargeArgs, ObjectWirelesscontrollerHotspot20H2qpadviceofchargeState } from "./objectWirelesscontrollerHotspot20H2qpadviceofcharge";
export type ObjectWirelesscontrollerHotspot20H2qpadviceofcharge = import("./objectWirelesscontrollerHotspot20H2qpadviceofcharge").ObjectWirelesscontrollerHotspot20H2qpadviceofcharge;
export const ObjectWirelesscontrollerHotspot20H2qpadviceofcharge: typeof import("./objectWirelesscontrollerHotspot20H2qpadviceofcharge").ObjectWirelesscontrollerHotspot20H2qpadviceofcharge = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qpadviceofcharge"], () => require("./objectWirelesscontrollerHotspot20H2qpadviceofcharge"));

export { ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistArgs, ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistState } from "./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist";
export type ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist = import("./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist").ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist;
export const ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist: typeof import("./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist").ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist"], () => require("./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist"));

export { ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfoArgs, ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfoState } from "./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo";
export type ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo = import("./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo").ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo;
export const ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo: typeof import("./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo").ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo"], () => require("./objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo"));

export { ObjectWirelesscontrollerHotspot20H2qpconncapabilityArgs, ObjectWirelesscontrollerHotspot20H2qpconncapabilityState } from "./objectWirelesscontrollerHotspot20H2qpconncapability";
export type ObjectWirelesscontrollerHotspot20H2qpconncapability = import("./objectWirelesscontrollerHotspot20H2qpconncapability").ObjectWirelesscontrollerHotspot20H2qpconncapability;
export const ObjectWirelesscontrollerHotspot20H2qpconncapability: typeof import("./objectWirelesscontrollerHotspot20H2qpconncapability").ObjectWirelesscontrollerHotspot20H2qpconncapability = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qpconncapability"], () => require("./objectWirelesscontrollerHotspot20H2qpconncapability"));

export { ObjectWirelesscontrollerHotspot20H2qpoperatornameArgs, ObjectWirelesscontrollerHotspot20H2qpoperatornameState } from "./objectWirelesscontrollerHotspot20H2qpoperatorname";
export type ObjectWirelesscontrollerHotspot20H2qpoperatorname = import("./objectWirelesscontrollerHotspot20H2qpoperatorname").ObjectWirelesscontrollerHotspot20H2qpoperatorname;
export const ObjectWirelesscontrollerHotspot20H2qpoperatorname: typeof import("./objectWirelesscontrollerHotspot20H2qpoperatorname").ObjectWirelesscontrollerHotspot20H2qpoperatorname = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qpoperatorname"], () => require("./objectWirelesscontrollerHotspot20H2qpoperatorname"));

export { ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelistArgs, ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelistState } from "./objectWirelesscontrollerHotspot20H2qpoperatornameValuelist";
export type ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelist = import("./objectWirelesscontrollerHotspot20H2qpoperatornameValuelist").ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelist;
export const ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelist: typeof import("./objectWirelesscontrollerHotspot20H2qpoperatornameValuelist").ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelist"], () => require("./objectWirelesscontrollerHotspot20H2qpoperatornameValuelist"));

export { ObjectWirelesscontrollerHotspot20H2qposuproviderArgs, ObjectWirelesscontrollerHotspot20H2qposuproviderState } from "./objectWirelesscontrollerHotspot20H2qposuprovider";
export type ObjectWirelesscontrollerHotspot20H2qposuprovider = import("./objectWirelesscontrollerHotspot20H2qposuprovider").ObjectWirelesscontrollerHotspot20H2qposuprovider;
export const ObjectWirelesscontrollerHotspot20H2qposuprovider: typeof import("./objectWirelesscontrollerHotspot20H2qposuprovider").ObjectWirelesscontrollerHotspot20H2qposuprovider = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qposuprovider"], () => require("./objectWirelesscontrollerHotspot20H2qposuprovider"));

export { ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlynameArgs, ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlynameState } from "./objectWirelesscontrollerHotspot20H2qposuproviderFriendlyname";
export type ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlyname = import("./objectWirelesscontrollerHotspot20H2qposuproviderFriendlyname").ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlyname;
export const ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlyname: typeof import("./objectWirelesscontrollerHotspot20H2qposuproviderFriendlyname").ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlyname = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlyname"], () => require("./objectWirelesscontrollerHotspot20H2qposuproviderFriendlyname"));

export { ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescriptionArgs, ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescriptionState } from "./objectWirelesscontrollerHotspot20H2qposuproviderServicedescription";
export type ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescription = import("./objectWirelesscontrollerHotspot20H2qposuproviderServicedescription").ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescription;
export const ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescription: typeof import("./objectWirelesscontrollerHotspot20H2qposuproviderServicedescription").ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescription = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescription"], () => require("./objectWirelesscontrollerHotspot20H2qposuproviderServicedescription"));

export { ObjectWirelesscontrollerHotspot20H2qposuprovidernaiArgs, ObjectWirelesscontrollerHotspot20H2qposuprovidernaiState } from "./objectWirelesscontrollerHotspot20H2qposuprovidernai";
export type ObjectWirelesscontrollerHotspot20H2qposuprovidernai = import("./objectWirelesscontrollerHotspot20H2qposuprovidernai").ObjectWirelesscontrollerHotspot20H2qposuprovidernai;
export const ObjectWirelesscontrollerHotspot20H2qposuprovidernai: typeof import("./objectWirelesscontrollerHotspot20H2qposuprovidernai").ObjectWirelesscontrollerHotspot20H2qposuprovidernai = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qposuprovidernai"], () => require("./objectWirelesscontrollerHotspot20H2qposuprovidernai"));

export { ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailistArgs, ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailistState } from "./objectWirelesscontrollerHotspot20H2qposuprovidernaiNailist";
export type ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailist = import("./objectWirelesscontrollerHotspot20H2qposuprovidernaiNailist").ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailist;
export const ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailist: typeof import("./objectWirelesscontrollerHotspot20H2qposuprovidernaiNailist").ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailist"], () => require("./objectWirelesscontrollerHotspot20H2qposuprovidernaiNailist"));

export { ObjectWirelesscontrollerHotspot20H2qptermsandconditionsArgs, ObjectWirelesscontrollerHotspot20H2qptermsandconditionsState } from "./objectWirelesscontrollerHotspot20H2qptermsandconditions";
export type ObjectWirelesscontrollerHotspot20H2qptermsandconditions = import("./objectWirelesscontrollerHotspot20H2qptermsandconditions").ObjectWirelesscontrollerHotspot20H2qptermsandconditions;
export const ObjectWirelesscontrollerHotspot20H2qptermsandconditions: typeof import("./objectWirelesscontrollerHotspot20H2qptermsandconditions").ObjectWirelesscontrollerHotspot20H2qptermsandconditions = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qptermsandconditions"], () => require("./objectWirelesscontrollerHotspot20H2qptermsandconditions"));

export { ObjectWirelesscontrollerHotspot20H2qpwanmetricArgs, ObjectWirelesscontrollerHotspot20H2qpwanmetricState } from "./objectWirelesscontrollerHotspot20H2qpwanmetric";
export type ObjectWirelesscontrollerHotspot20H2qpwanmetric = import("./objectWirelesscontrollerHotspot20H2qpwanmetric").ObjectWirelesscontrollerHotspot20H2qpwanmetric;
export const ObjectWirelesscontrollerHotspot20H2qpwanmetric: typeof import("./objectWirelesscontrollerHotspot20H2qpwanmetric").ObjectWirelesscontrollerHotspot20H2qpwanmetric = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20H2qpwanmetric"], () => require("./objectWirelesscontrollerHotspot20H2qpwanmetric"));

export { ObjectWirelesscontrollerHotspot20HsprofileArgs, ObjectWirelesscontrollerHotspot20HsprofileState } from "./objectWirelesscontrollerHotspot20Hsprofile";
export type ObjectWirelesscontrollerHotspot20Hsprofile = import("./objectWirelesscontrollerHotspot20Hsprofile").ObjectWirelesscontrollerHotspot20Hsprofile;
export const ObjectWirelesscontrollerHotspot20Hsprofile: typeof import("./objectWirelesscontrollerHotspot20Hsprofile").ObjectWirelesscontrollerHotspot20Hsprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Hsprofile"], () => require("./objectWirelesscontrollerHotspot20Hsprofile"));

export { ObjectWirelesscontrollerHotspot20IconArgs, ObjectWirelesscontrollerHotspot20IconState } from "./objectWirelesscontrollerHotspot20Icon";
export type ObjectWirelesscontrollerHotspot20Icon = import("./objectWirelesscontrollerHotspot20Icon").ObjectWirelesscontrollerHotspot20Icon;
export const ObjectWirelesscontrollerHotspot20Icon: typeof import("./objectWirelesscontrollerHotspot20Icon").ObjectWirelesscontrollerHotspot20Icon = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Icon"], () => require("./objectWirelesscontrollerHotspot20Icon"));

export { ObjectWirelesscontrollerHotspot20IconIconlistArgs, ObjectWirelesscontrollerHotspot20IconIconlistState } from "./objectWirelesscontrollerHotspot20IconIconlist";
export type ObjectWirelesscontrollerHotspot20IconIconlist = import("./objectWirelesscontrollerHotspot20IconIconlist").ObjectWirelesscontrollerHotspot20IconIconlist;
export const ObjectWirelesscontrollerHotspot20IconIconlist: typeof import("./objectWirelesscontrollerHotspot20IconIconlist").ObjectWirelesscontrollerHotspot20IconIconlist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20IconIconlist"], () => require("./objectWirelesscontrollerHotspot20IconIconlist"));

export { ObjectWirelesscontrollerHotspot20QosmapArgs, ObjectWirelesscontrollerHotspot20QosmapState } from "./objectWirelesscontrollerHotspot20Qosmap";
export type ObjectWirelesscontrollerHotspot20Qosmap = import("./objectWirelesscontrollerHotspot20Qosmap").ObjectWirelesscontrollerHotspot20Qosmap;
export const ObjectWirelesscontrollerHotspot20Qosmap: typeof import("./objectWirelesscontrollerHotspot20Qosmap").ObjectWirelesscontrollerHotspot20Qosmap = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20Qosmap"], () => require("./objectWirelesscontrollerHotspot20Qosmap"));

export { ObjectWirelesscontrollerHotspot20QosmapDscpexceptArgs, ObjectWirelesscontrollerHotspot20QosmapDscpexceptState } from "./objectWirelesscontrollerHotspot20QosmapDscpexcept";
export type ObjectWirelesscontrollerHotspot20QosmapDscpexcept = import("./objectWirelesscontrollerHotspot20QosmapDscpexcept").ObjectWirelesscontrollerHotspot20QosmapDscpexcept;
export const ObjectWirelesscontrollerHotspot20QosmapDscpexcept: typeof import("./objectWirelesscontrollerHotspot20QosmapDscpexcept").ObjectWirelesscontrollerHotspot20QosmapDscpexcept = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20QosmapDscpexcept"], () => require("./objectWirelesscontrollerHotspot20QosmapDscpexcept"));

export { ObjectWirelesscontrollerHotspot20QosmapDscprangeArgs, ObjectWirelesscontrollerHotspot20QosmapDscprangeState } from "./objectWirelesscontrollerHotspot20QosmapDscprange";
export type ObjectWirelesscontrollerHotspot20QosmapDscprange = import("./objectWirelesscontrollerHotspot20QosmapDscprange").ObjectWirelesscontrollerHotspot20QosmapDscprange;
export const ObjectWirelesscontrollerHotspot20QosmapDscprange: typeof import("./objectWirelesscontrollerHotspot20QosmapDscprange").ObjectWirelesscontrollerHotspot20QosmapDscprange = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerHotspot20QosmapDscprange"], () => require("./objectWirelesscontrollerHotspot20QosmapDscprange"));

export { ObjectWirelesscontrollerMpskprofileArgs, ObjectWirelesscontrollerMpskprofileState } from "./objectWirelesscontrollerMpskprofile";
export type ObjectWirelesscontrollerMpskprofile = import("./objectWirelesscontrollerMpskprofile").ObjectWirelesscontrollerMpskprofile;
export const ObjectWirelesscontrollerMpskprofile: typeof import("./objectWirelesscontrollerMpskprofile").ObjectWirelesscontrollerMpskprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerMpskprofile"], () => require("./objectWirelesscontrollerMpskprofile"));

export { ObjectWirelesscontrollerMpskprofileMpskgroupArgs, ObjectWirelesscontrollerMpskprofileMpskgroupState } from "./objectWirelesscontrollerMpskprofileMpskgroup";
export type ObjectWirelesscontrollerMpskprofileMpskgroup = import("./objectWirelesscontrollerMpskprofileMpskgroup").ObjectWirelesscontrollerMpskprofileMpskgroup;
export const ObjectWirelesscontrollerMpskprofileMpskgroup: typeof import("./objectWirelesscontrollerMpskprofileMpskgroup").ObjectWirelesscontrollerMpskprofileMpskgroup = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerMpskprofileMpskgroup"], () => require("./objectWirelesscontrollerMpskprofileMpskgroup"));

export { ObjectWirelesscontrollerMpskprofileMpskgroupMoveArgs, ObjectWirelesscontrollerMpskprofileMpskgroupMoveState } from "./objectWirelesscontrollerMpskprofileMpskgroupMove";
export type ObjectWirelesscontrollerMpskprofileMpskgroupMove = import("./objectWirelesscontrollerMpskprofileMpskgroupMove").ObjectWirelesscontrollerMpskprofileMpskgroupMove;
export const ObjectWirelesscontrollerMpskprofileMpskgroupMove: typeof import("./objectWirelesscontrollerMpskprofileMpskgroupMove").ObjectWirelesscontrollerMpskprofileMpskgroupMove = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerMpskprofileMpskgroupMove"], () => require("./objectWirelesscontrollerMpskprofileMpskgroupMove"));

export { ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyArgs, ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyState } from "./objectWirelesscontrollerMpskprofileMpskgroupMpskkey";
export type ObjectWirelesscontrollerMpskprofileMpskgroupMpskkey = import("./objectWirelesscontrollerMpskprofileMpskgroupMpskkey").ObjectWirelesscontrollerMpskprofileMpskgroupMpskkey;
export const ObjectWirelesscontrollerMpskprofileMpskgroupMpskkey: typeof import("./objectWirelesscontrollerMpskprofileMpskgroupMpskkey").ObjectWirelesscontrollerMpskprofileMpskgroupMpskkey = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerMpskprofileMpskgroupMpskkey"], () => require("./objectWirelesscontrollerMpskprofileMpskgroupMpskkey"));

export { ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMoveArgs, ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMoveState } from "./objectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove";
export type ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove = import("./objectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove").ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove;
export const ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove: typeof import("./objectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove").ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove"], () => require("./objectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove"));

export { ObjectWirelesscontrollerNacprofileArgs, ObjectWirelesscontrollerNacprofileState } from "./objectWirelesscontrollerNacprofile";
export type ObjectWirelesscontrollerNacprofile = import("./objectWirelesscontrollerNacprofile").ObjectWirelesscontrollerNacprofile;
export const ObjectWirelesscontrollerNacprofile: typeof import("./objectWirelesscontrollerNacprofile").ObjectWirelesscontrollerNacprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerNacprofile"], () => require("./objectWirelesscontrollerNacprofile"));

export { ObjectWirelesscontrollerQosprofileArgs, ObjectWirelesscontrollerQosprofileState } from "./objectWirelesscontrollerQosprofile";
export type ObjectWirelesscontrollerQosprofile = import("./objectWirelesscontrollerQosprofile").ObjectWirelesscontrollerQosprofile;
export const ObjectWirelesscontrollerQosprofile: typeof import("./objectWirelesscontrollerQosprofile").ObjectWirelesscontrollerQosprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerQosprofile"], () => require("./objectWirelesscontrollerQosprofile"));

export { ObjectWirelesscontrollerSsidpolicyArgs, ObjectWirelesscontrollerSsidpolicyState } from "./objectWirelesscontrollerSsidpolicy";
export type ObjectWirelesscontrollerSsidpolicy = import("./objectWirelesscontrollerSsidpolicy").ObjectWirelesscontrollerSsidpolicy;
export const ObjectWirelesscontrollerSsidpolicy: typeof import("./objectWirelesscontrollerSsidpolicy").ObjectWirelesscontrollerSsidpolicy = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerSsidpolicy"], () => require("./objectWirelesscontrollerSsidpolicy"));

export { ObjectWirelesscontrollerSyslogprofileArgs, ObjectWirelesscontrollerSyslogprofileState } from "./objectWirelesscontrollerSyslogprofile";
export type ObjectWirelesscontrollerSyslogprofile = import("./objectWirelesscontrollerSyslogprofile").ObjectWirelesscontrollerSyslogprofile;
export const ObjectWirelesscontrollerSyslogprofile: typeof import("./objectWirelesscontrollerSyslogprofile").ObjectWirelesscontrollerSyslogprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerSyslogprofile"], () => require("./objectWirelesscontrollerSyslogprofile"));

export { ObjectWirelesscontrollerUtmprofileArgs, ObjectWirelesscontrollerUtmprofileState } from "./objectWirelesscontrollerUtmprofile";
export type ObjectWirelesscontrollerUtmprofile = import("./objectWirelesscontrollerUtmprofile").ObjectWirelesscontrollerUtmprofile;
export const ObjectWirelesscontrollerUtmprofile: typeof import("./objectWirelesscontrollerUtmprofile").ObjectWirelesscontrollerUtmprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerUtmprofile"], () => require("./objectWirelesscontrollerUtmprofile"));

export { ObjectWirelesscontrollerVapArgs, ObjectWirelesscontrollerVapState } from "./objectWirelesscontrollerVap";
export type ObjectWirelesscontrollerVap = import("./objectWirelesscontrollerVap").ObjectWirelesscontrollerVap;
export const ObjectWirelesscontrollerVap: typeof import("./objectWirelesscontrollerVap").ObjectWirelesscontrollerVap = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerVap"], () => require("./objectWirelesscontrollerVap"));

export { ObjectWirelesscontrollerVapMacfilterlistArgs, ObjectWirelesscontrollerVapMacfilterlistState } from "./objectWirelesscontrollerVapMacfilterlist";
export type ObjectWirelesscontrollerVapMacfilterlist = import("./objectWirelesscontrollerVapMacfilterlist").ObjectWirelesscontrollerVapMacfilterlist;
export const ObjectWirelesscontrollerVapMacfilterlist: typeof import("./objectWirelesscontrollerVapMacfilterlist").ObjectWirelesscontrollerVapMacfilterlist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerVapMacfilterlist"], () => require("./objectWirelesscontrollerVapMacfilterlist"));

export { ObjectWirelesscontrollerVapPortalmessageoverridesArgs, ObjectWirelesscontrollerVapPortalmessageoverridesState } from "./objectWirelesscontrollerVapPortalmessageoverrides";
export type ObjectWirelesscontrollerVapPortalmessageoverrides = import("./objectWirelesscontrollerVapPortalmessageoverrides").ObjectWirelesscontrollerVapPortalmessageoverrides;
export const ObjectWirelesscontrollerVapPortalmessageoverrides: typeof import("./objectWirelesscontrollerVapPortalmessageoverrides").ObjectWirelesscontrollerVapPortalmessageoverrides = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerVapPortalmessageoverrides"], () => require("./objectWirelesscontrollerVapPortalmessageoverrides"));

export { ObjectWirelesscontrollerVapVlannameArgs, ObjectWirelesscontrollerVapVlannameState } from "./objectWirelesscontrollerVapVlanname";
export type ObjectWirelesscontrollerVapVlanname = import("./objectWirelesscontrollerVapVlanname").ObjectWirelesscontrollerVapVlanname;
export const ObjectWirelesscontrollerVapVlanname: typeof import("./objectWirelesscontrollerVapVlanname").ObjectWirelesscontrollerVapVlanname = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerVapVlanname"], () => require("./objectWirelesscontrollerVapVlanname"));

export { ObjectWirelesscontrollerVapVlannameMoveArgs, ObjectWirelesscontrollerVapVlannameMoveState } from "./objectWirelesscontrollerVapVlannameMove";
export type ObjectWirelesscontrollerVapVlannameMove = import("./objectWirelesscontrollerVapVlannameMove").ObjectWirelesscontrollerVapVlannameMove;
export const ObjectWirelesscontrollerVapVlannameMove: typeof import("./objectWirelesscontrollerVapVlannameMove").ObjectWirelesscontrollerVapVlannameMove = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerVapVlannameMove"], () => require("./objectWirelesscontrollerVapVlannameMove"));

export { ObjectWirelesscontrollerVapVlanpoolArgs, ObjectWirelesscontrollerVapVlanpoolState } from "./objectWirelesscontrollerVapVlanpool";
export type ObjectWirelesscontrollerVapVlanpool = import("./objectWirelesscontrollerVapVlanpool").ObjectWirelesscontrollerVapVlanpool;
export const ObjectWirelesscontrollerVapVlanpool: typeof import("./objectWirelesscontrollerVapVlanpool").ObjectWirelesscontrollerVapVlanpool = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerVapVlanpool"], () => require("./objectWirelesscontrollerVapVlanpool"));

export { ObjectWirelesscontrollerVapgroupArgs, ObjectWirelesscontrollerVapgroupState } from "./objectWirelesscontrollerVapgroup";
export type ObjectWirelesscontrollerVapgroup = import("./objectWirelesscontrollerVapgroup").ObjectWirelesscontrollerVapgroup;
export const ObjectWirelesscontrollerVapgroup: typeof import("./objectWirelesscontrollerVapgroup").ObjectWirelesscontrollerVapgroup = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerVapgroup"], () => require("./objectWirelesscontrollerVapgroup"));

export { ObjectWirelesscontrollerWagprofileArgs, ObjectWirelesscontrollerWagprofileState } from "./objectWirelesscontrollerWagprofile";
export type ObjectWirelesscontrollerWagprofile = import("./objectWirelesscontrollerWagprofile").ObjectWirelesscontrollerWagprofile;
export const ObjectWirelesscontrollerWagprofile: typeof import("./objectWirelesscontrollerWagprofile").ObjectWirelesscontrollerWagprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWagprofile"], () => require("./objectWirelesscontrollerWagprofile"));

export { ObjectWirelesscontrollerWidsprofileArgs, ObjectWirelesscontrollerWidsprofileState } from "./objectWirelesscontrollerWidsprofile";
export type ObjectWirelesscontrollerWidsprofile = import("./objectWirelesscontrollerWidsprofile").ObjectWirelesscontrollerWidsprofile;
export const ObjectWirelesscontrollerWidsprofile: typeof import("./objectWirelesscontrollerWidsprofile").ObjectWirelesscontrollerWidsprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWidsprofile"], () => require("./objectWirelesscontrollerWidsprofile"));

export { ObjectWirelesscontrollerWtpprofileArgs, ObjectWirelesscontrollerWtpprofileState } from "./objectWirelesscontrollerWtpprofile";
export type ObjectWirelesscontrollerWtpprofile = import("./objectWirelesscontrollerWtpprofile").ObjectWirelesscontrollerWtpprofile;
export const ObjectWirelesscontrollerWtpprofile: typeof import("./objectWirelesscontrollerWtpprofile").ObjectWirelesscontrollerWtpprofile = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofile"], () => require("./objectWirelesscontrollerWtpprofile"));

export { ObjectWirelesscontrollerWtpprofileDenymaclistArgs, ObjectWirelesscontrollerWtpprofileDenymaclistState } from "./objectWirelesscontrollerWtpprofileDenymaclist";
export type ObjectWirelesscontrollerWtpprofileDenymaclist = import("./objectWirelesscontrollerWtpprofileDenymaclist").ObjectWirelesscontrollerWtpprofileDenymaclist;
export const ObjectWirelesscontrollerWtpprofileDenymaclist: typeof import("./objectWirelesscontrollerWtpprofileDenymaclist").ObjectWirelesscontrollerWtpprofileDenymaclist = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileDenymaclist"], () => require("./objectWirelesscontrollerWtpprofileDenymaclist"));

export { ObjectWirelesscontrollerWtpprofileEslsesdongleArgs, ObjectWirelesscontrollerWtpprofileEslsesdongleState } from "./objectWirelesscontrollerWtpprofileEslsesdongle";
export type ObjectWirelesscontrollerWtpprofileEslsesdongle = import("./objectWirelesscontrollerWtpprofileEslsesdongle").ObjectWirelesscontrollerWtpprofileEslsesdongle;
export const ObjectWirelesscontrollerWtpprofileEslsesdongle: typeof import("./objectWirelesscontrollerWtpprofileEslsesdongle").ObjectWirelesscontrollerWtpprofileEslsesdongle = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileEslsesdongle"], () => require("./objectWirelesscontrollerWtpprofileEslsesdongle"));

export { ObjectWirelesscontrollerWtpprofileLanArgs, ObjectWirelesscontrollerWtpprofileLanState } from "./objectWirelesscontrollerWtpprofileLan";
export type ObjectWirelesscontrollerWtpprofileLan = import("./objectWirelesscontrollerWtpprofileLan").ObjectWirelesscontrollerWtpprofileLan;
export const ObjectWirelesscontrollerWtpprofileLan: typeof import("./objectWirelesscontrollerWtpprofileLan").ObjectWirelesscontrollerWtpprofileLan = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileLan"], () => require("./objectWirelesscontrollerWtpprofileLan"));

export { ObjectWirelesscontrollerWtpprofileLbsArgs, ObjectWirelesscontrollerWtpprofileLbsState } from "./objectWirelesscontrollerWtpprofileLbs";
export type ObjectWirelesscontrollerWtpprofileLbs = import("./objectWirelesscontrollerWtpprofileLbs").ObjectWirelesscontrollerWtpprofileLbs;
export const ObjectWirelesscontrollerWtpprofileLbs: typeof import("./objectWirelesscontrollerWtpprofileLbs").ObjectWirelesscontrollerWtpprofileLbs = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileLbs"], () => require("./objectWirelesscontrollerWtpprofileLbs"));

export { ObjectWirelesscontrollerWtpprofilePlatformArgs, ObjectWirelesscontrollerWtpprofilePlatformState } from "./objectWirelesscontrollerWtpprofilePlatform";
export type ObjectWirelesscontrollerWtpprofilePlatform = import("./objectWirelesscontrollerWtpprofilePlatform").ObjectWirelesscontrollerWtpprofilePlatform;
export const ObjectWirelesscontrollerWtpprofilePlatform: typeof import("./objectWirelesscontrollerWtpprofilePlatform").ObjectWirelesscontrollerWtpprofilePlatform = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofilePlatform"], () => require("./objectWirelesscontrollerWtpprofilePlatform"));

export { ObjectWirelesscontrollerWtpprofileRadio1Args, ObjectWirelesscontrollerWtpprofileRadio1State } from "./objectWirelesscontrollerWtpprofileRadio1";
export type ObjectWirelesscontrollerWtpprofileRadio1 = import("./objectWirelesscontrollerWtpprofileRadio1").ObjectWirelesscontrollerWtpprofileRadio1;
export const ObjectWirelesscontrollerWtpprofileRadio1: typeof import("./objectWirelesscontrollerWtpprofileRadio1").ObjectWirelesscontrollerWtpprofileRadio1 = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileRadio1"], () => require("./objectWirelesscontrollerWtpprofileRadio1"));

export { ObjectWirelesscontrollerWtpprofileRadio2Args, ObjectWirelesscontrollerWtpprofileRadio2State } from "./objectWirelesscontrollerWtpprofileRadio2";
export type ObjectWirelesscontrollerWtpprofileRadio2 = import("./objectWirelesscontrollerWtpprofileRadio2").ObjectWirelesscontrollerWtpprofileRadio2;
export const ObjectWirelesscontrollerWtpprofileRadio2: typeof import("./objectWirelesscontrollerWtpprofileRadio2").ObjectWirelesscontrollerWtpprofileRadio2 = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileRadio2"], () => require("./objectWirelesscontrollerWtpprofileRadio2"));

export { ObjectWirelesscontrollerWtpprofileRadio3Args, ObjectWirelesscontrollerWtpprofileRadio3State } from "./objectWirelesscontrollerWtpprofileRadio3";
export type ObjectWirelesscontrollerWtpprofileRadio3 = import("./objectWirelesscontrollerWtpprofileRadio3").ObjectWirelesscontrollerWtpprofileRadio3;
export const ObjectWirelesscontrollerWtpprofileRadio3: typeof import("./objectWirelesscontrollerWtpprofileRadio3").ObjectWirelesscontrollerWtpprofileRadio3 = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileRadio3"], () => require("./objectWirelesscontrollerWtpprofileRadio3"));

export { ObjectWirelesscontrollerWtpprofileRadio4Args, ObjectWirelesscontrollerWtpprofileRadio4State } from "./objectWirelesscontrollerWtpprofileRadio4";
export type ObjectWirelesscontrollerWtpprofileRadio4 = import("./objectWirelesscontrollerWtpprofileRadio4").ObjectWirelesscontrollerWtpprofileRadio4;
export const ObjectWirelesscontrollerWtpprofileRadio4: typeof import("./objectWirelesscontrollerWtpprofileRadio4").ObjectWirelesscontrollerWtpprofileRadio4 = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileRadio4"], () => require("./objectWirelesscontrollerWtpprofileRadio4"));

export { ObjectWirelesscontrollerWtpprofileSplittunnelingaclArgs, ObjectWirelesscontrollerWtpprofileSplittunnelingaclState } from "./objectWirelesscontrollerWtpprofileSplittunnelingacl";
export type ObjectWirelesscontrollerWtpprofileSplittunnelingacl = import("./objectWirelesscontrollerWtpprofileSplittunnelingacl").ObjectWirelesscontrollerWtpprofileSplittunnelingacl;
export const ObjectWirelesscontrollerWtpprofileSplittunnelingacl: typeof import("./objectWirelesscontrollerWtpprofileSplittunnelingacl").ObjectWirelesscontrollerWtpprofileSplittunnelingacl = null as any;
utilities.lazyLoad(exports, ["ObjectWirelesscontrollerWtpprofileSplittunnelingacl"], () => require("./objectWirelesscontrollerWtpprofileSplittunnelingacl"));

export { PackagesAuthenticationRuleArgs, PackagesAuthenticationRuleState } from "./packagesAuthenticationRule";
export type PackagesAuthenticationRule = import("./packagesAuthenticationRule").PackagesAuthenticationRule;
export const PackagesAuthenticationRule: typeof import("./packagesAuthenticationRule").PackagesAuthenticationRule = null as any;
utilities.lazyLoad(exports, ["PackagesAuthenticationRule"], () => require("./packagesAuthenticationRule"));

export { PackagesAuthenticationSettingArgs, PackagesAuthenticationSettingState } from "./packagesAuthenticationSetting";
export type PackagesAuthenticationSetting = import("./packagesAuthenticationSetting").PackagesAuthenticationSetting;
export const PackagesAuthenticationSetting: typeof import("./packagesAuthenticationSetting").PackagesAuthenticationSetting = null as any;
utilities.lazyLoad(exports, ["PackagesAuthenticationSetting"], () => require("./packagesAuthenticationSetting"));

export { PackagesCentralDnatArgs, PackagesCentralDnatState } from "./packagesCentralDnat";
export type PackagesCentralDnat = import("./packagesCentralDnat").PackagesCentralDnat;
export const PackagesCentralDnat: typeof import("./packagesCentralDnat").PackagesCentralDnat = null as any;
utilities.lazyLoad(exports, ["PackagesCentralDnat"], () => require("./packagesCentralDnat"));

export { PackagesCentralDnat6Args, PackagesCentralDnat6State } from "./packagesCentralDnat6";
export type PackagesCentralDnat6 = import("./packagesCentralDnat6").PackagesCentralDnat6;
export const PackagesCentralDnat6: typeof import("./packagesCentralDnat6").PackagesCentralDnat6 = null as any;
utilities.lazyLoad(exports, ["PackagesCentralDnat6"], () => require("./packagesCentralDnat6"));

export { PackagesCentralDnat6MoveArgs, PackagesCentralDnat6MoveState } from "./packagesCentralDnat6Move";
export type PackagesCentralDnat6Move = import("./packagesCentralDnat6Move").PackagesCentralDnat6Move;
export const PackagesCentralDnat6Move: typeof import("./packagesCentralDnat6Move").PackagesCentralDnat6Move = null as any;
utilities.lazyLoad(exports, ["PackagesCentralDnat6Move"], () => require("./packagesCentralDnat6Move"));

export { PackagesCentralDnatMoveArgs, PackagesCentralDnatMoveState } from "./packagesCentralDnatMove";
export type PackagesCentralDnatMove = import("./packagesCentralDnatMove").PackagesCentralDnatMove;
export const PackagesCentralDnatMove: typeof import("./packagesCentralDnatMove").PackagesCentralDnatMove = null as any;
utilities.lazyLoad(exports, ["PackagesCentralDnatMove"], () => require("./packagesCentralDnatMove"));

export { PackagesFirewallAclArgs, PackagesFirewallAclState } from "./packagesFirewallAcl";
export type PackagesFirewallAcl = import("./packagesFirewallAcl").PackagesFirewallAcl;
export const PackagesFirewallAcl: typeof import("./packagesFirewallAcl").PackagesFirewallAcl = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallAcl"], () => require("./packagesFirewallAcl"));

export { PackagesFirewallAcl6Args, PackagesFirewallAcl6State } from "./packagesFirewallAcl6";
export type PackagesFirewallAcl6 = import("./packagesFirewallAcl6").PackagesFirewallAcl6;
export const PackagesFirewallAcl6: typeof import("./packagesFirewallAcl6").PackagesFirewallAcl6 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallAcl6"], () => require("./packagesFirewallAcl6"));

export { PackagesFirewallAcl6MoveArgs, PackagesFirewallAcl6MoveState } from "./packagesFirewallAcl6Move";
export type PackagesFirewallAcl6Move = import("./packagesFirewallAcl6Move").PackagesFirewallAcl6Move;
export const PackagesFirewallAcl6Move: typeof import("./packagesFirewallAcl6Move").PackagesFirewallAcl6Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallAcl6Move"], () => require("./packagesFirewallAcl6Move"));

export { PackagesFirewallAclMoveArgs, PackagesFirewallAclMoveState } from "./packagesFirewallAclMove";
export type PackagesFirewallAclMove = import("./packagesFirewallAclMove").PackagesFirewallAclMove;
export const PackagesFirewallAclMove: typeof import("./packagesFirewallAclMove").PackagesFirewallAclMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallAclMove"], () => require("./packagesFirewallAclMove"));

export { PackagesFirewallCentralsnatmapArgs, PackagesFirewallCentralsnatmapState } from "./packagesFirewallCentralsnatmap";
export type PackagesFirewallCentralsnatmap = import("./packagesFirewallCentralsnatmap").PackagesFirewallCentralsnatmap;
export const PackagesFirewallCentralsnatmap: typeof import("./packagesFirewallCentralsnatmap").PackagesFirewallCentralsnatmap = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallCentralsnatmap"], () => require("./packagesFirewallCentralsnatmap"));

export { PackagesFirewallCentralsnatmapMoveArgs, PackagesFirewallCentralsnatmapMoveState } from "./packagesFirewallCentralsnatmapMove";
export type PackagesFirewallCentralsnatmapMove = import("./packagesFirewallCentralsnatmapMove").PackagesFirewallCentralsnatmapMove;
export const PackagesFirewallCentralsnatmapMove: typeof import("./packagesFirewallCentralsnatmapMove").PackagesFirewallCentralsnatmapMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallCentralsnatmapMove"], () => require("./packagesFirewallCentralsnatmapMove"));

export { PackagesFirewallConsolidatedPolicyArgs, PackagesFirewallConsolidatedPolicyState } from "./packagesFirewallConsolidatedPolicy";
export type PackagesFirewallConsolidatedPolicy = import("./packagesFirewallConsolidatedPolicy").PackagesFirewallConsolidatedPolicy;
export const PackagesFirewallConsolidatedPolicy: typeof import("./packagesFirewallConsolidatedPolicy").PackagesFirewallConsolidatedPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallConsolidatedPolicy"], () => require("./packagesFirewallConsolidatedPolicy"));

export { PackagesFirewallConsolidatedPolicyMoveArgs, PackagesFirewallConsolidatedPolicyMoveState } from "./packagesFirewallConsolidatedPolicyMove";
export type PackagesFirewallConsolidatedPolicyMove = import("./packagesFirewallConsolidatedPolicyMove").PackagesFirewallConsolidatedPolicyMove;
export const PackagesFirewallConsolidatedPolicyMove: typeof import("./packagesFirewallConsolidatedPolicyMove").PackagesFirewallConsolidatedPolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallConsolidatedPolicyMove"], () => require("./packagesFirewallConsolidatedPolicyMove"));

export { PackagesFirewallDospolicyArgs, PackagesFirewallDospolicyState } from "./packagesFirewallDospolicy";
export type PackagesFirewallDospolicy = import("./packagesFirewallDospolicy").PackagesFirewallDospolicy;
export const PackagesFirewallDospolicy: typeof import("./packagesFirewallDospolicy").PackagesFirewallDospolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallDospolicy"], () => require("./packagesFirewallDospolicy"));

export { PackagesFirewallDospolicy6Args, PackagesFirewallDospolicy6State } from "./packagesFirewallDospolicy6";
export type PackagesFirewallDospolicy6 = import("./packagesFirewallDospolicy6").PackagesFirewallDospolicy6;
export const PackagesFirewallDospolicy6: typeof import("./packagesFirewallDospolicy6").PackagesFirewallDospolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallDospolicy6"], () => require("./packagesFirewallDospolicy6"));

export { PackagesFirewallDospolicy6AnomalyArgs, PackagesFirewallDospolicy6AnomalyState } from "./packagesFirewallDospolicy6Anomaly";
export type PackagesFirewallDospolicy6Anomaly = import("./packagesFirewallDospolicy6Anomaly").PackagesFirewallDospolicy6Anomaly;
export const PackagesFirewallDospolicy6Anomaly: typeof import("./packagesFirewallDospolicy6Anomaly").PackagesFirewallDospolicy6Anomaly = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallDospolicy6Anomaly"], () => require("./packagesFirewallDospolicy6Anomaly"));

export { PackagesFirewallDospolicy6MoveArgs, PackagesFirewallDospolicy6MoveState } from "./packagesFirewallDospolicy6Move";
export type PackagesFirewallDospolicy6Move = import("./packagesFirewallDospolicy6Move").PackagesFirewallDospolicy6Move;
export const PackagesFirewallDospolicy6Move: typeof import("./packagesFirewallDospolicy6Move").PackagesFirewallDospolicy6Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallDospolicy6Move"], () => require("./packagesFirewallDospolicy6Move"));

export { PackagesFirewallDospolicyAnomalyArgs, PackagesFirewallDospolicyAnomalyState } from "./packagesFirewallDospolicyAnomaly";
export type PackagesFirewallDospolicyAnomaly = import("./packagesFirewallDospolicyAnomaly").PackagesFirewallDospolicyAnomaly;
export const PackagesFirewallDospolicyAnomaly: typeof import("./packagesFirewallDospolicyAnomaly").PackagesFirewallDospolicyAnomaly = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallDospolicyAnomaly"], () => require("./packagesFirewallDospolicyAnomaly"));

export { PackagesFirewallDospolicyMoveArgs, PackagesFirewallDospolicyMoveState } from "./packagesFirewallDospolicyMove";
export type PackagesFirewallDospolicyMove = import("./packagesFirewallDospolicyMove").PackagesFirewallDospolicyMove;
export const PackagesFirewallDospolicyMove: typeof import("./packagesFirewallDospolicyMove").PackagesFirewallDospolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallDospolicyMove"], () => require("./packagesFirewallDospolicyMove"));

export { PackagesFirewallHyperscalepolicyArgs, PackagesFirewallHyperscalepolicyState } from "./packagesFirewallHyperscalepolicy";
export type PackagesFirewallHyperscalepolicy = import("./packagesFirewallHyperscalepolicy").PackagesFirewallHyperscalepolicy;
export const PackagesFirewallHyperscalepolicy: typeof import("./packagesFirewallHyperscalepolicy").PackagesFirewallHyperscalepolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallHyperscalepolicy"], () => require("./packagesFirewallHyperscalepolicy"));

export { PackagesFirewallHyperscalepolicy46Args, PackagesFirewallHyperscalepolicy46State } from "./packagesFirewallHyperscalepolicy46";
export type PackagesFirewallHyperscalepolicy46 = import("./packagesFirewallHyperscalepolicy46").PackagesFirewallHyperscalepolicy46;
export const PackagesFirewallHyperscalepolicy46: typeof import("./packagesFirewallHyperscalepolicy46").PackagesFirewallHyperscalepolicy46 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallHyperscalepolicy46"], () => require("./packagesFirewallHyperscalepolicy46"));

export { PackagesFirewallHyperscalepolicy6Args, PackagesFirewallHyperscalepolicy6State } from "./packagesFirewallHyperscalepolicy6";
export type PackagesFirewallHyperscalepolicy6 = import("./packagesFirewallHyperscalepolicy6").PackagesFirewallHyperscalepolicy6;
export const PackagesFirewallHyperscalepolicy6: typeof import("./packagesFirewallHyperscalepolicy6").PackagesFirewallHyperscalepolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallHyperscalepolicy6"], () => require("./packagesFirewallHyperscalepolicy6"));

export { PackagesFirewallHyperscalepolicy64Args, PackagesFirewallHyperscalepolicy64State } from "./packagesFirewallHyperscalepolicy64";
export type PackagesFirewallHyperscalepolicy64 = import("./packagesFirewallHyperscalepolicy64").PackagesFirewallHyperscalepolicy64;
export const PackagesFirewallHyperscalepolicy64: typeof import("./packagesFirewallHyperscalepolicy64").PackagesFirewallHyperscalepolicy64 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallHyperscalepolicy64"], () => require("./packagesFirewallHyperscalepolicy64"));

export { PackagesFirewallInterfacepolicyArgs, PackagesFirewallInterfacepolicyState } from "./packagesFirewallInterfacepolicy";
export type PackagesFirewallInterfacepolicy = import("./packagesFirewallInterfacepolicy").PackagesFirewallInterfacepolicy;
export const PackagesFirewallInterfacepolicy: typeof import("./packagesFirewallInterfacepolicy").PackagesFirewallInterfacepolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallInterfacepolicy"], () => require("./packagesFirewallInterfacepolicy"));

export { PackagesFirewallInterfacepolicy6Args, PackagesFirewallInterfacepolicy6State } from "./packagesFirewallInterfacepolicy6";
export type PackagesFirewallInterfacepolicy6 = import("./packagesFirewallInterfacepolicy6").PackagesFirewallInterfacepolicy6;
export const PackagesFirewallInterfacepolicy6: typeof import("./packagesFirewallInterfacepolicy6").PackagesFirewallInterfacepolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallInterfacepolicy6"], () => require("./packagesFirewallInterfacepolicy6"));

export { PackagesFirewallInterfacepolicy6MoveArgs, PackagesFirewallInterfacepolicy6MoveState } from "./packagesFirewallInterfacepolicy6Move";
export type PackagesFirewallInterfacepolicy6Move = import("./packagesFirewallInterfacepolicy6Move").PackagesFirewallInterfacepolicy6Move;
export const PackagesFirewallInterfacepolicy6Move: typeof import("./packagesFirewallInterfacepolicy6Move").PackagesFirewallInterfacepolicy6Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallInterfacepolicy6Move"], () => require("./packagesFirewallInterfacepolicy6Move"));

export { PackagesFirewallInterfacepolicyMoveArgs, PackagesFirewallInterfacepolicyMoveState } from "./packagesFirewallInterfacepolicyMove";
export type PackagesFirewallInterfacepolicyMove = import("./packagesFirewallInterfacepolicyMove").PackagesFirewallInterfacepolicyMove;
export const PackagesFirewallInterfacepolicyMove: typeof import("./packagesFirewallInterfacepolicyMove").PackagesFirewallInterfacepolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallInterfacepolicyMove"], () => require("./packagesFirewallInterfacepolicyMove"));

export { PackagesFirewallLocalinpolicyArgs, PackagesFirewallLocalinpolicyState } from "./packagesFirewallLocalinpolicy";
export type PackagesFirewallLocalinpolicy = import("./packagesFirewallLocalinpolicy").PackagesFirewallLocalinpolicy;
export const PackagesFirewallLocalinpolicy: typeof import("./packagesFirewallLocalinpolicy").PackagesFirewallLocalinpolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallLocalinpolicy"], () => require("./packagesFirewallLocalinpolicy"));

export { PackagesFirewallLocalinpolicy6Args, PackagesFirewallLocalinpolicy6State } from "./packagesFirewallLocalinpolicy6";
export type PackagesFirewallLocalinpolicy6 = import("./packagesFirewallLocalinpolicy6").PackagesFirewallLocalinpolicy6;
export const PackagesFirewallLocalinpolicy6: typeof import("./packagesFirewallLocalinpolicy6").PackagesFirewallLocalinpolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallLocalinpolicy6"], () => require("./packagesFirewallLocalinpolicy6"));

export { PackagesFirewallLocalinpolicy6MoveArgs, PackagesFirewallLocalinpolicy6MoveState } from "./packagesFirewallLocalinpolicy6Move";
export type PackagesFirewallLocalinpolicy6Move = import("./packagesFirewallLocalinpolicy6Move").PackagesFirewallLocalinpolicy6Move;
export const PackagesFirewallLocalinpolicy6Move: typeof import("./packagesFirewallLocalinpolicy6Move").PackagesFirewallLocalinpolicy6Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallLocalinpolicy6Move"], () => require("./packagesFirewallLocalinpolicy6Move"));

export { PackagesFirewallLocalinpolicyMoveArgs, PackagesFirewallLocalinpolicyMoveState } from "./packagesFirewallLocalinpolicyMove";
export type PackagesFirewallLocalinpolicyMove = import("./packagesFirewallLocalinpolicyMove").PackagesFirewallLocalinpolicyMove;
export const PackagesFirewallLocalinpolicyMove: typeof import("./packagesFirewallLocalinpolicyMove").PackagesFirewallLocalinpolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallLocalinpolicyMove"], () => require("./packagesFirewallLocalinpolicyMove"));

export { PackagesFirewallMulticastpolicyArgs, PackagesFirewallMulticastpolicyState } from "./packagesFirewallMulticastpolicy";
export type PackagesFirewallMulticastpolicy = import("./packagesFirewallMulticastpolicy").PackagesFirewallMulticastpolicy;
export const PackagesFirewallMulticastpolicy: typeof import("./packagesFirewallMulticastpolicy").PackagesFirewallMulticastpolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallMulticastpolicy"], () => require("./packagesFirewallMulticastpolicy"));

export { PackagesFirewallMulticastpolicy6Args, PackagesFirewallMulticastpolicy6State } from "./packagesFirewallMulticastpolicy6";
export type PackagesFirewallMulticastpolicy6 = import("./packagesFirewallMulticastpolicy6").PackagesFirewallMulticastpolicy6;
export const PackagesFirewallMulticastpolicy6: typeof import("./packagesFirewallMulticastpolicy6").PackagesFirewallMulticastpolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallMulticastpolicy6"], () => require("./packagesFirewallMulticastpolicy6"));

export { PackagesFirewallMulticastpolicy6MoveArgs, PackagesFirewallMulticastpolicy6MoveState } from "./packagesFirewallMulticastpolicy6Move";
export type PackagesFirewallMulticastpolicy6Move = import("./packagesFirewallMulticastpolicy6Move").PackagesFirewallMulticastpolicy6Move;
export const PackagesFirewallMulticastpolicy6Move: typeof import("./packagesFirewallMulticastpolicy6Move").PackagesFirewallMulticastpolicy6Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallMulticastpolicy6Move"], () => require("./packagesFirewallMulticastpolicy6Move"));

export { PackagesFirewallMulticastpolicyMoveArgs, PackagesFirewallMulticastpolicyMoveState } from "./packagesFirewallMulticastpolicyMove";
export type PackagesFirewallMulticastpolicyMove = import("./packagesFirewallMulticastpolicyMove").PackagesFirewallMulticastpolicyMove;
export const PackagesFirewallMulticastpolicyMove: typeof import("./packagesFirewallMulticastpolicyMove").PackagesFirewallMulticastpolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallMulticastpolicyMove"], () => require("./packagesFirewallMulticastpolicyMove"));

export { PackagesFirewallPolicyArgs, PackagesFirewallPolicyState } from "./packagesFirewallPolicy";
export type PackagesFirewallPolicy = import("./packagesFirewallPolicy").PackagesFirewallPolicy;
export const PackagesFirewallPolicy: typeof import("./packagesFirewallPolicy").PackagesFirewallPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicy"], () => require("./packagesFirewallPolicy"));

export { PackagesFirewallPolicy46Args, PackagesFirewallPolicy46State } from "./packagesFirewallPolicy46";
export type PackagesFirewallPolicy46 = import("./packagesFirewallPolicy46").PackagesFirewallPolicy46;
export const PackagesFirewallPolicy46: typeof import("./packagesFirewallPolicy46").PackagesFirewallPolicy46 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicy46"], () => require("./packagesFirewallPolicy46"));

export { PackagesFirewallPolicy46MoveArgs, PackagesFirewallPolicy46MoveState } from "./packagesFirewallPolicy46Move";
export type PackagesFirewallPolicy46Move = import("./packagesFirewallPolicy46Move").PackagesFirewallPolicy46Move;
export const PackagesFirewallPolicy46Move: typeof import("./packagesFirewallPolicy46Move").PackagesFirewallPolicy46Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicy46Move"], () => require("./packagesFirewallPolicy46Move"));

export { PackagesFirewallPolicy6Args, PackagesFirewallPolicy6State } from "./packagesFirewallPolicy6";
export type PackagesFirewallPolicy6 = import("./packagesFirewallPolicy6").PackagesFirewallPolicy6;
export const PackagesFirewallPolicy6: typeof import("./packagesFirewallPolicy6").PackagesFirewallPolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicy6"], () => require("./packagesFirewallPolicy6"));

export { PackagesFirewallPolicy64Args, PackagesFirewallPolicy64State } from "./packagesFirewallPolicy64";
export type PackagesFirewallPolicy64 = import("./packagesFirewallPolicy64").PackagesFirewallPolicy64;
export const PackagesFirewallPolicy64: typeof import("./packagesFirewallPolicy64").PackagesFirewallPolicy64 = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicy64"], () => require("./packagesFirewallPolicy64"));

export { PackagesFirewallPolicy64MoveArgs, PackagesFirewallPolicy64MoveState } from "./packagesFirewallPolicy64Move";
export type PackagesFirewallPolicy64Move = import("./packagesFirewallPolicy64Move").PackagesFirewallPolicy64Move;
export const PackagesFirewallPolicy64Move: typeof import("./packagesFirewallPolicy64Move").PackagesFirewallPolicy64Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicy64Move"], () => require("./packagesFirewallPolicy64Move"));

export { PackagesFirewallPolicy6MoveArgs, PackagesFirewallPolicy6MoveState } from "./packagesFirewallPolicy6Move";
export type PackagesFirewallPolicy6Move = import("./packagesFirewallPolicy6Move").PackagesFirewallPolicy6Move;
export const PackagesFirewallPolicy6Move: typeof import("./packagesFirewallPolicy6Move").PackagesFirewallPolicy6Move = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicy6Move"], () => require("./packagesFirewallPolicy6Move"));

export { PackagesFirewallPolicyMoveArgs, PackagesFirewallPolicyMoveState } from "./packagesFirewallPolicyMove";
export type PackagesFirewallPolicyMove = import("./packagesFirewallPolicyMove").PackagesFirewallPolicyMove;
export const PackagesFirewallPolicyMove: typeof import("./packagesFirewallPolicyMove").PackagesFirewallPolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallPolicyMove"], () => require("./packagesFirewallPolicyMove"));

export { PackagesFirewallProxypolicyArgs, PackagesFirewallProxypolicyState } from "./packagesFirewallProxypolicy";
export type PackagesFirewallProxypolicy = import("./packagesFirewallProxypolicy").PackagesFirewallProxypolicy;
export const PackagesFirewallProxypolicy: typeof import("./packagesFirewallProxypolicy").PackagesFirewallProxypolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallProxypolicy"], () => require("./packagesFirewallProxypolicy"));

export { PackagesFirewallProxypolicyMoveArgs, PackagesFirewallProxypolicyMoveState } from "./packagesFirewallProxypolicyMove";
export type PackagesFirewallProxypolicyMove = import("./packagesFirewallProxypolicyMove").PackagesFirewallProxypolicyMove;
export const PackagesFirewallProxypolicyMove: typeof import("./packagesFirewallProxypolicyMove").PackagesFirewallProxypolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallProxypolicyMove"], () => require("./packagesFirewallProxypolicyMove"));

export { PackagesFirewallSecuritypolicyArgs, PackagesFirewallSecuritypolicyState } from "./packagesFirewallSecuritypolicy";
export type PackagesFirewallSecuritypolicy = import("./packagesFirewallSecuritypolicy").PackagesFirewallSecuritypolicy;
export const PackagesFirewallSecuritypolicy: typeof import("./packagesFirewallSecuritypolicy").PackagesFirewallSecuritypolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallSecuritypolicy"], () => require("./packagesFirewallSecuritypolicy"));

export { PackagesFirewallSecuritypolicyMoveArgs, PackagesFirewallSecuritypolicyMoveState } from "./packagesFirewallSecuritypolicyMove";
export type PackagesFirewallSecuritypolicyMove = import("./packagesFirewallSecuritypolicyMove").PackagesFirewallSecuritypolicyMove;
export const PackagesFirewallSecuritypolicyMove: typeof import("./packagesFirewallSecuritypolicyMove").PackagesFirewallSecuritypolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallSecuritypolicyMove"], () => require("./packagesFirewallSecuritypolicyMove"));

export { PackagesFirewallShapingpolicyArgs, PackagesFirewallShapingpolicyState } from "./packagesFirewallShapingpolicy";
export type PackagesFirewallShapingpolicy = import("./packagesFirewallShapingpolicy").PackagesFirewallShapingpolicy;
export const PackagesFirewallShapingpolicy: typeof import("./packagesFirewallShapingpolicy").PackagesFirewallShapingpolicy = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallShapingpolicy"], () => require("./packagesFirewallShapingpolicy"));

export { PackagesFirewallShapingpolicyMoveArgs, PackagesFirewallShapingpolicyMoveState } from "./packagesFirewallShapingpolicyMove";
export type PackagesFirewallShapingpolicyMove = import("./packagesFirewallShapingpolicyMove").PackagesFirewallShapingpolicyMove;
export const PackagesFirewallShapingpolicyMove: typeof import("./packagesFirewallShapingpolicyMove").PackagesFirewallShapingpolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesFirewallShapingpolicyMove"], () => require("./packagesFirewallShapingpolicyMove"));

export { PackagesGlobalFooterConsolidatedPolicyArgs, PackagesGlobalFooterConsolidatedPolicyState } from "./packagesGlobalFooterConsolidatedPolicy";
export type PackagesGlobalFooterConsolidatedPolicy = import("./packagesGlobalFooterConsolidatedPolicy").PackagesGlobalFooterConsolidatedPolicy;
export const PackagesGlobalFooterConsolidatedPolicy: typeof import("./packagesGlobalFooterConsolidatedPolicy").PackagesGlobalFooterConsolidatedPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalFooterConsolidatedPolicy"], () => require("./packagesGlobalFooterConsolidatedPolicy"));

export { PackagesGlobalFooterPolicyArgs, PackagesGlobalFooterPolicyState } from "./packagesGlobalFooterPolicy";
export type PackagesGlobalFooterPolicy = import("./packagesGlobalFooterPolicy").PackagesGlobalFooterPolicy;
export const PackagesGlobalFooterPolicy: typeof import("./packagesGlobalFooterPolicy").PackagesGlobalFooterPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalFooterPolicy"], () => require("./packagesGlobalFooterPolicy"));

export { PackagesGlobalFooterPolicy6Args, PackagesGlobalFooterPolicy6State } from "./packagesGlobalFooterPolicy6";
export type PackagesGlobalFooterPolicy6 = import("./packagesGlobalFooterPolicy6").PackagesGlobalFooterPolicy6;
export const PackagesGlobalFooterPolicy6: typeof import("./packagesGlobalFooterPolicy6").PackagesGlobalFooterPolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalFooterPolicy6"], () => require("./packagesGlobalFooterPolicy6"));

export { PackagesGlobalFooterShapingpolicyArgs, PackagesGlobalFooterShapingpolicyState } from "./packagesGlobalFooterShapingpolicy";
export type PackagesGlobalFooterShapingpolicy = import("./packagesGlobalFooterShapingpolicy").PackagesGlobalFooterShapingpolicy;
export const PackagesGlobalFooterShapingpolicy: typeof import("./packagesGlobalFooterShapingpolicy").PackagesGlobalFooterShapingpolicy = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalFooterShapingpolicy"], () => require("./packagesGlobalFooterShapingpolicy"));

export { PackagesGlobalHeaderConsolidatedPolicyArgs, PackagesGlobalHeaderConsolidatedPolicyState } from "./packagesGlobalHeaderConsolidatedPolicy";
export type PackagesGlobalHeaderConsolidatedPolicy = import("./packagesGlobalHeaderConsolidatedPolicy").PackagesGlobalHeaderConsolidatedPolicy;
export const PackagesGlobalHeaderConsolidatedPolicy: typeof import("./packagesGlobalHeaderConsolidatedPolicy").PackagesGlobalHeaderConsolidatedPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalHeaderConsolidatedPolicy"], () => require("./packagesGlobalHeaderConsolidatedPolicy"));

export { PackagesGlobalHeaderPolicyArgs, PackagesGlobalHeaderPolicyState } from "./packagesGlobalHeaderPolicy";
export type PackagesGlobalHeaderPolicy = import("./packagesGlobalHeaderPolicy").PackagesGlobalHeaderPolicy;
export const PackagesGlobalHeaderPolicy: typeof import("./packagesGlobalHeaderPolicy").PackagesGlobalHeaderPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalHeaderPolicy"], () => require("./packagesGlobalHeaderPolicy"));

export { PackagesGlobalHeaderPolicy6Args, PackagesGlobalHeaderPolicy6State } from "./packagesGlobalHeaderPolicy6";
export type PackagesGlobalHeaderPolicy6 = import("./packagesGlobalHeaderPolicy6").PackagesGlobalHeaderPolicy6;
export const PackagesGlobalHeaderPolicy6: typeof import("./packagesGlobalHeaderPolicy6").PackagesGlobalHeaderPolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalHeaderPolicy6"], () => require("./packagesGlobalHeaderPolicy6"));

export { PackagesGlobalHeaderShapingpolicyArgs, PackagesGlobalHeaderShapingpolicyState } from "./packagesGlobalHeaderShapingpolicy";
export type PackagesGlobalHeaderShapingpolicy = import("./packagesGlobalHeaderShapingpolicy").PackagesGlobalHeaderShapingpolicy;
export const PackagesGlobalHeaderShapingpolicy: typeof import("./packagesGlobalHeaderShapingpolicy").PackagesGlobalHeaderShapingpolicy = null as any;
utilities.lazyLoad(exports, ["PackagesGlobalHeaderShapingpolicy"], () => require("./packagesGlobalHeaderShapingpolicy"));

export { PackagesPblockArgs, PackagesPblockState } from "./packagesPblock";
export type PackagesPblock = import("./packagesPblock").PackagesPblock;
export const PackagesPblock: typeof import("./packagesPblock").PackagesPblock = null as any;
utilities.lazyLoad(exports, ["PackagesPblock"], () => require("./packagesPblock"));

export { PackagesPblockFirewallConsolidatedPolicyArgs, PackagesPblockFirewallConsolidatedPolicyState } from "./packagesPblockFirewallConsolidatedPolicy";
export type PackagesPblockFirewallConsolidatedPolicy = import("./packagesPblockFirewallConsolidatedPolicy").PackagesPblockFirewallConsolidatedPolicy;
export const PackagesPblockFirewallConsolidatedPolicy: typeof import("./packagesPblockFirewallConsolidatedPolicy").PackagesPblockFirewallConsolidatedPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesPblockFirewallConsolidatedPolicy"], () => require("./packagesPblockFirewallConsolidatedPolicy"));

export { PackagesPblockFirewallPolicyArgs, PackagesPblockFirewallPolicyState } from "./packagesPblockFirewallPolicy";
export type PackagesPblockFirewallPolicy = import("./packagesPblockFirewallPolicy").PackagesPblockFirewallPolicy;
export const PackagesPblockFirewallPolicy: typeof import("./packagesPblockFirewallPolicy").PackagesPblockFirewallPolicy = null as any;
utilities.lazyLoad(exports, ["PackagesPblockFirewallPolicy"], () => require("./packagesPblockFirewallPolicy"));

export { PackagesPblockFirewallPolicy6Args, PackagesPblockFirewallPolicy6State } from "./packagesPblockFirewallPolicy6";
export type PackagesPblockFirewallPolicy6 = import("./packagesPblockFirewallPolicy6").PackagesPblockFirewallPolicy6;
export const PackagesPblockFirewallPolicy6: typeof import("./packagesPblockFirewallPolicy6").PackagesPblockFirewallPolicy6 = null as any;
utilities.lazyLoad(exports, ["PackagesPblockFirewallPolicy6"], () => require("./packagesPblockFirewallPolicy6"));

export { PackagesPblockFirewallSecuritypolicyArgs, PackagesPblockFirewallSecuritypolicyState } from "./packagesPblockFirewallSecuritypolicy";
export type PackagesPblockFirewallSecuritypolicy = import("./packagesPblockFirewallSecuritypolicy").PackagesPblockFirewallSecuritypolicy;
export const PackagesPblockFirewallSecuritypolicy: typeof import("./packagesPblockFirewallSecuritypolicy").PackagesPblockFirewallSecuritypolicy = null as any;
utilities.lazyLoad(exports, ["PackagesPblockFirewallSecuritypolicy"], () => require("./packagesPblockFirewallSecuritypolicy"));

export { PackagesPkgArgs, PackagesPkgState } from "./packagesPkg";
export type PackagesPkg = import("./packagesPkg").PackagesPkg;
export const PackagesPkg: typeof import("./packagesPkg").PackagesPkg = null as any;
utilities.lazyLoad(exports, ["PackagesPkg"], () => require("./packagesPkg"));

export { PackagesUserNacpolicyArgs, PackagesUserNacpolicyState } from "./packagesUserNacpolicy";
export type PackagesUserNacpolicy = import("./packagesUserNacpolicy").PackagesUserNacpolicy;
export const PackagesUserNacpolicy: typeof import("./packagesUserNacpolicy").PackagesUserNacpolicy = null as any;
utilities.lazyLoad(exports, ["PackagesUserNacpolicy"], () => require("./packagesUserNacpolicy"));

export { PackagesUserNacpolicyMoveArgs, PackagesUserNacpolicyMoveState } from "./packagesUserNacpolicyMove";
export type PackagesUserNacpolicyMove = import("./packagesUserNacpolicyMove").PackagesUserNacpolicyMove;
export const PackagesUserNacpolicyMove: typeof import("./packagesUserNacpolicyMove").PackagesUserNacpolicyMove = null as any;
utilities.lazyLoad(exports, ["PackagesUserNacpolicyMove"], () => require("./packagesUserNacpolicyMove"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { SecurityconsoleAbortArgs, SecurityconsoleAbortState } from "./securityconsoleAbort";
export type SecurityconsoleAbort = import("./securityconsoleAbort").SecurityconsoleAbort;
export const SecurityconsoleAbort: typeof import("./securityconsoleAbort").SecurityconsoleAbort = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleAbort"], () => require("./securityconsoleAbort"));

export { SecurityconsoleAssignPackageArgs, SecurityconsoleAssignPackageState } from "./securityconsoleAssignPackage";
export type SecurityconsoleAssignPackage = import("./securityconsoleAssignPackage").SecurityconsoleAssignPackage;
export const SecurityconsoleAssignPackage: typeof import("./securityconsoleAssignPackage").SecurityconsoleAssignPackage = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleAssignPackage"], () => require("./securityconsoleAssignPackage"));

export { SecurityconsoleInstallDeviceArgs, SecurityconsoleInstallDeviceState } from "./securityconsoleInstallDevice";
export type SecurityconsoleInstallDevice = import("./securityconsoleInstallDevice").SecurityconsoleInstallDevice;
export const SecurityconsoleInstallDevice: typeof import("./securityconsoleInstallDevice").SecurityconsoleInstallDevice = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleInstallDevice"], () => require("./securityconsoleInstallDevice"));

export { SecurityconsoleInstallObjectsV2Args, SecurityconsoleInstallObjectsV2State } from "./securityconsoleInstallObjectsV2";
export type SecurityconsoleInstallObjectsV2 = import("./securityconsoleInstallObjectsV2").SecurityconsoleInstallObjectsV2;
export const SecurityconsoleInstallObjectsV2: typeof import("./securityconsoleInstallObjectsV2").SecurityconsoleInstallObjectsV2 = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleInstallObjectsV2"], () => require("./securityconsoleInstallObjectsV2"));

export { SecurityconsoleInstallPackageArgs, SecurityconsoleInstallPackageState } from "./securityconsoleInstallPackage";
export type SecurityconsoleInstallPackage = import("./securityconsoleInstallPackage").SecurityconsoleInstallPackage;
export const SecurityconsoleInstallPackage: typeof import("./securityconsoleInstallPackage").SecurityconsoleInstallPackage = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleInstallPackage"], () => require("./securityconsoleInstallPackage"));

export { SecurityconsoleInstallPreviewArgs, SecurityconsoleInstallPreviewState } from "./securityconsoleInstallPreview";
export type SecurityconsoleInstallPreview = import("./securityconsoleInstallPreview").SecurityconsoleInstallPreview;
export const SecurityconsoleInstallPreview: typeof import("./securityconsoleInstallPreview").SecurityconsoleInstallPreview = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleInstallPreview"], () => require("./securityconsoleInstallPreview"));

export { SecurityconsolePackageCancelInstallArgs, SecurityconsolePackageCancelInstallState } from "./securityconsolePackageCancelInstall";
export type SecurityconsolePackageCancelInstall = import("./securityconsolePackageCancelInstall").SecurityconsolePackageCancelInstall;
export const SecurityconsolePackageCancelInstall: typeof import("./securityconsolePackageCancelInstall").SecurityconsolePackageCancelInstall = null as any;
utilities.lazyLoad(exports, ["SecurityconsolePackageCancelInstall"], () => require("./securityconsolePackageCancelInstall"));

export { SecurityconsolePackageCloneArgs, SecurityconsolePackageCloneState } from "./securityconsolePackageClone";
export type SecurityconsolePackageClone = import("./securityconsolePackageClone").SecurityconsolePackageClone;
export const SecurityconsolePackageClone: typeof import("./securityconsolePackageClone").SecurityconsolePackageClone = null as any;
utilities.lazyLoad(exports, ["SecurityconsolePackageClone"], () => require("./securityconsolePackageClone"));

export { SecurityconsolePackageCommitArgs, SecurityconsolePackageCommitState } from "./securityconsolePackageCommit";
export type SecurityconsolePackageCommit = import("./securityconsolePackageCommit").SecurityconsolePackageCommit;
export const SecurityconsolePackageCommit: typeof import("./securityconsolePackageCommit").SecurityconsolePackageCommit = null as any;
utilities.lazyLoad(exports, ["SecurityconsolePackageCommit"], () => require("./securityconsolePackageCommit"));

export { SecurityconsolePackageMoveArgs, SecurityconsolePackageMoveState } from "./securityconsolePackageMove";
export type SecurityconsolePackageMove = import("./securityconsolePackageMove").SecurityconsolePackageMove;
export const SecurityconsolePackageMove: typeof import("./securityconsolePackageMove").SecurityconsolePackageMove = null as any;
utilities.lazyLoad(exports, ["SecurityconsolePackageMove"], () => require("./securityconsolePackageMove"));

export { SecurityconsolePblockCloneArgs, SecurityconsolePblockCloneState } from "./securityconsolePblockClone";
export type SecurityconsolePblockClone = import("./securityconsolePblockClone").SecurityconsolePblockClone;
export const SecurityconsolePblockClone: typeof import("./securityconsolePblockClone").SecurityconsolePblockClone = null as any;
utilities.lazyLoad(exports, ["SecurityconsolePblockClone"], () => require("./securityconsolePblockClone"));

export { SecurityconsoleReinstallPackageArgs, SecurityconsoleReinstallPackageState } from "./securityconsoleReinstallPackage";
export type SecurityconsoleReinstallPackage = import("./securityconsoleReinstallPackage").SecurityconsoleReinstallPackage;
export const SecurityconsoleReinstallPackage: typeof import("./securityconsoleReinstallPackage").SecurityconsoleReinstallPackage = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleReinstallPackage"], () => require("./securityconsoleReinstallPackage"));

export { SecurityconsoleSignCertificateTemplateArgs, SecurityconsoleSignCertificateTemplateState } from "./securityconsoleSignCertificateTemplate";
export type SecurityconsoleSignCertificateTemplate = import("./securityconsoleSignCertificateTemplate").SecurityconsoleSignCertificateTemplate;
export const SecurityconsoleSignCertificateTemplate: typeof import("./securityconsoleSignCertificateTemplate").SecurityconsoleSignCertificateTemplate = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleSignCertificateTemplate"], () => require("./securityconsoleSignCertificateTemplate"));

export { SecurityconsoleTemplateCliPreviewArgs, SecurityconsoleTemplateCliPreviewState } from "./securityconsoleTemplateCliPreview";
export type SecurityconsoleTemplateCliPreview = import("./securityconsoleTemplateCliPreview").SecurityconsoleTemplateCliPreview;
export const SecurityconsoleTemplateCliPreview: typeof import("./securityconsoleTemplateCliPreview").SecurityconsoleTemplateCliPreview = null as any;
utilities.lazyLoad(exports, ["SecurityconsoleTemplateCliPreview"], () => require("./securityconsoleTemplateCliPreview"));

export { SystemAdminGroupArgs, SystemAdminGroupState } from "./systemAdminGroup";
export type SystemAdminGroup = import("./systemAdminGroup").SystemAdminGroup;
export const SystemAdminGroup: typeof import("./systemAdminGroup").SystemAdminGroup = null as any;
utilities.lazyLoad(exports, ["SystemAdminGroup"], () => require("./systemAdminGroup"));

export { SystemAdminGroupMemberArgs, SystemAdminGroupMemberState } from "./systemAdminGroupMember";
export type SystemAdminGroupMember = import("./systemAdminGroupMember").SystemAdminGroupMember;
export const SystemAdminGroupMember: typeof import("./systemAdminGroupMember").SystemAdminGroupMember = null as any;
utilities.lazyLoad(exports, ["SystemAdminGroupMember"], () => require("./systemAdminGroupMember"));

export { SystemAdminLdapArgs, SystemAdminLdapState } from "./systemAdminLdap";
export type SystemAdminLdap = import("./systemAdminLdap").SystemAdminLdap;
export const SystemAdminLdap: typeof import("./systemAdminLdap").SystemAdminLdap = null as any;
utilities.lazyLoad(exports, ["SystemAdminLdap"], () => require("./systemAdminLdap"));

export { SystemAdminProfileArgs, SystemAdminProfileState } from "./systemAdminProfile";
export type SystemAdminProfile = import("./systemAdminProfile").SystemAdminProfile;
export const SystemAdminProfile: typeof import("./systemAdminProfile").SystemAdminProfile = null as any;
utilities.lazyLoad(exports, ["SystemAdminProfile"], () => require("./systemAdminProfile"));

export { SystemAdminProfileWritepasswdprofilesArgs, SystemAdminProfileWritepasswdprofilesState } from "./systemAdminProfileWritepasswdprofiles";
export type SystemAdminProfileWritepasswdprofiles = import("./systemAdminProfileWritepasswdprofiles").SystemAdminProfileWritepasswdprofiles;
export const SystemAdminProfileWritepasswdprofiles: typeof import("./systemAdminProfileWritepasswdprofiles").SystemAdminProfileWritepasswdprofiles = null as any;
utilities.lazyLoad(exports, ["SystemAdminProfileWritepasswdprofiles"], () => require("./systemAdminProfileWritepasswdprofiles"));

export { SystemAdminProfileWritepasswduserlistArgs, SystemAdminProfileWritepasswduserlistState } from "./systemAdminProfileWritepasswduserlist";
export type SystemAdminProfileWritepasswduserlist = import("./systemAdminProfileWritepasswduserlist").SystemAdminProfileWritepasswduserlist;
export const SystemAdminProfileWritepasswduserlist: typeof import("./systemAdminProfileWritepasswduserlist").SystemAdminProfileWritepasswduserlist = null as any;
utilities.lazyLoad(exports, ["SystemAdminProfileWritepasswduserlist"], () => require("./systemAdminProfileWritepasswduserlist"));

export { SystemAdminRadiusArgs, SystemAdminRadiusState } from "./systemAdminRadius";
export type SystemAdminRadius = import("./systemAdminRadius").SystemAdminRadius;
export const SystemAdminRadius: typeof import("./systemAdminRadius").SystemAdminRadius = null as any;
utilities.lazyLoad(exports, ["SystemAdminRadius"], () => require("./systemAdminRadius"));

export { SystemAdminSettingArgs, SystemAdminSettingState } from "./systemAdminSetting";
export type SystemAdminSetting = import("./systemAdminSetting").SystemAdminSetting;
export const SystemAdminSetting: typeof import("./systemAdminSetting").SystemAdminSetting = null as any;
utilities.lazyLoad(exports, ["SystemAdminSetting"], () => require("./systemAdminSetting"));

export { SystemAdminTacacsArgs, SystemAdminTacacsState } from "./systemAdminTacacs";
export type SystemAdminTacacs = import("./systemAdminTacacs").SystemAdminTacacs;
export const SystemAdminTacacs: typeof import("./systemAdminTacacs").SystemAdminTacacs = null as any;
utilities.lazyLoad(exports, ["SystemAdminTacacs"], () => require("./systemAdminTacacs"));

export { SystemAdminUserArgs, SystemAdminUserState } from "./systemAdminUser";
export type SystemAdminUser = import("./systemAdminUser").SystemAdminUser;
export const SystemAdminUser: typeof import("./systemAdminUser").SystemAdminUser = null as any;
utilities.lazyLoad(exports, ["SystemAdminUser"], () => require("./systemAdminUser"));

export { SystemAdminUserAdomArgs, SystemAdminUserAdomState } from "./systemAdminUserAdom";
export type SystemAdminUserAdom = import("./systemAdminUserAdom").SystemAdminUserAdom;
export const SystemAdminUserAdom: typeof import("./systemAdminUserAdom").SystemAdminUserAdom = null as any;
utilities.lazyLoad(exports, ["SystemAdminUserAdom"], () => require("./systemAdminUserAdom"));

export { SystemAdminUserIpsfilterArgs, SystemAdminUserIpsfilterState } from "./systemAdminUserIpsfilter";
export type SystemAdminUserIpsfilter = import("./systemAdminUserIpsfilter").SystemAdminUserIpsfilter;
export const SystemAdminUserIpsfilter: typeof import("./systemAdminUserIpsfilter").SystemAdminUserIpsfilter = null as any;
utilities.lazyLoad(exports, ["SystemAdminUserIpsfilter"], () => require("./systemAdminUserIpsfilter"));

export { SystemAlertconsoleArgs, SystemAlertconsoleState } from "./systemAlertconsole";
export type SystemAlertconsole = import("./systemAlertconsole").SystemAlertconsole;
export const SystemAlertconsole: typeof import("./systemAlertconsole").SystemAlertconsole = null as any;
utilities.lazyLoad(exports, ["SystemAlertconsole"], () => require("./systemAlertconsole"));

export { SystemAlertemailArgs, SystemAlertemailState } from "./systemAlertemail";
export type SystemAlertemail = import("./systemAlertemail").SystemAlertemail;
export const SystemAlertemail: typeof import("./systemAlertemail").SystemAlertemail = null as any;
utilities.lazyLoad(exports, ["SystemAlertemail"], () => require("./systemAlertemail"));

export { SystemAlerteventArgs, SystemAlerteventState } from "./systemAlertevent";
export type SystemAlertevent = import("./systemAlertevent").SystemAlertevent;
export const SystemAlertevent: typeof import("./systemAlertevent").SystemAlertevent = null as any;
utilities.lazyLoad(exports, ["SystemAlertevent"], () => require("./systemAlertevent"));

export { SystemAutodeleteArgs, SystemAutodeleteState } from "./systemAutodelete";
export type SystemAutodelete = import("./systemAutodelete").SystemAutodelete;
export const SystemAutodelete: typeof import("./systemAutodelete").SystemAutodelete = null as any;
utilities.lazyLoad(exports, ["SystemAutodelete"], () => require("./systemAutodelete"));

export { SystemAutodeleteDlpfilesautodeletionArgs, SystemAutodeleteDlpfilesautodeletionState } from "./systemAutodeleteDlpfilesautodeletion";
export type SystemAutodeleteDlpfilesautodeletion = import("./systemAutodeleteDlpfilesautodeletion").SystemAutodeleteDlpfilesautodeletion;
export const SystemAutodeleteDlpfilesautodeletion: typeof import("./systemAutodeleteDlpfilesautodeletion").SystemAutodeleteDlpfilesautodeletion = null as any;
utilities.lazyLoad(exports, ["SystemAutodeleteDlpfilesautodeletion"], () => require("./systemAutodeleteDlpfilesautodeletion"));

export { SystemAutodeleteLogautodeletionArgs, SystemAutodeleteLogautodeletionState } from "./systemAutodeleteLogautodeletion";
export type SystemAutodeleteLogautodeletion = import("./systemAutodeleteLogautodeletion").SystemAutodeleteLogautodeletion;
export const SystemAutodeleteLogautodeletion: typeof import("./systemAutodeleteLogautodeletion").SystemAutodeleteLogautodeletion = null as any;
utilities.lazyLoad(exports, ["SystemAutodeleteLogautodeletion"], () => require("./systemAutodeleteLogautodeletion"));

export { SystemAutodeleteQuarantinefilesautodeletionArgs, SystemAutodeleteQuarantinefilesautodeletionState } from "./systemAutodeleteQuarantinefilesautodeletion";
export type SystemAutodeleteQuarantinefilesautodeletion = import("./systemAutodeleteQuarantinefilesautodeletion").SystemAutodeleteQuarantinefilesautodeletion;
export const SystemAutodeleteQuarantinefilesautodeletion: typeof import("./systemAutodeleteQuarantinefilesautodeletion").SystemAutodeleteQuarantinefilesautodeletion = null as any;
utilities.lazyLoad(exports, ["SystemAutodeleteQuarantinefilesautodeletion"], () => require("./systemAutodeleteQuarantinefilesautodeletion"));

export { SystemAutodeleteReportautodeletionArgs, SystemAutodeleteReportautodeletionState } from "./systemAutodeleteReportautodeletion";
export type SystemAutodeleteReportautodeletion = import("./systemAutodeleteReportautodeletion").SystemAutodeleteReportautodeletion;
export const SystemAutodeleteReportautodeletion: typeof import("./systemAutodeleteReportautodeletion").SystemAutodeleteReportautodeletion = null as any;
utilities.lazyLoad(exports, ["SystemAutodeleteReportautodeletion"], () => require("./systemAutodeleteReportautodeletion"));

export { SystemBackupAllsettingsArgs, SystemBackupAllsettingsState } from "./systemBackupAllsettings";
export type SystemBackupAllsettings = import("./systemBackupAllsettings").SystemBackupAllsettings;
export const SystemBackupAllsettings: typeof import("./systemBackupAllsettings").SystemBackupAllsettings = null as any;
utilities.lazyLoad(exports, ["SystemBackupAllsettings"], () => require("./systemBackupAllsettings"));

export { SystemCertificateCaArgs, SystemCertificateCaState } from "./systemCertificateCa";
export type SystemCertificateCa = import("./systemCertificateCa").SystemCertificateCa;
export const SystemCertificateCa: typeof import("./systemCertificateCa").SystemCertificateCa = null as any;
utilities.lazyLoad(exports, ["SystemCertificateCa"], () => require("./systemCertificateCa"));

export { SystemCertificateCrlArgs, SystemCertificateCrlState } from "./systemCertificateCrl";
export type SystemCertificateCrl = import("./systemCertificateCrl").SystemCertificateCrl;
export const SystemCertificateCrl: typeof import("./systemCertificateCrl").SystemCertificateCrl = null as any;
utilities.lazyLoad(exports, ["SystemCertificateCrl"], () => require("./systemCertificateCrl"));

export { SystemCertificateLocalArgs, SystemCertificateLocalState } from "./systemCertificateLocal";
export type SystemCertificateLocal = import("./systemCertificateLocal").SystemCertificateLocal;
export const SystemCertificateLocal: typeof import("./systemCertificateLocal").SystemCertificateLocal = null as any;
utilities.lazyLoad(exports, ["SystemCertificateLocal"], () => require("./systemCertificateLocal"));

export { SystemCertificateOftpArgs, SystemCertificateOftpState } from "./systemCertificateOftp";
export type SystemCertificateOftp = import("./systemCertificateOftp").SystemCertificateOftp;
export const SystemCertificateOftp: typeof import("./systemCertificateOftp").SystemCertificateOftp = null as any;
utilities.lazyLoad(exports, ["SystemCertificateOftp"], () => require("./systemCertificateOftp"));

export { SystemCertificateRemoteArgs, SystemCertificateRemoteState } from "./systemCertificateRemote";
export type SystemCertificateRemote = import("./systemCertificateRemote").SystemCertificateRemote;
export const SystemCertificateRemote: typeof import("./systemCertificateRemote").SystemCertificateRemote = null as any;
utilities.lazyLoad(exports, ["SystemCertificateRemote"], () => require("./systemCertificateRemote"));

export { SystemCertificateSshArgs, SystemCertificateSshState } from "./systemCertificateSsh";
export type SystemCertificateSsh = import("./systemCertificateSsh").SystemCertificateSsh;
export const SystemCertificateSsh: typeof import("./systemCertificateSsh").SystemCertificateSsh = null as any;
utilities.lazyLoad(exports, ["SystemCertificateSsh"], () => require("./systemCertificateSsh"));

export { SystemConnectorArgs, SystemConnectorState } from "./systemConnector";
export type SystemConnector = import("./systemConnector").SystemConnector;
export const SystemConnector: typeof import("./systemConnector").SystemConnector = null as any;
utilities.lazyLoad(exports, ["SystemConnector"], () => require("./systemConnector"));

export { SystemCsfArgs, SystemCsfState } from "./systemCsf";
export type SystemCsf = import("./systemCsf").SystemCsf;
export const SystemCsf: typeof import("./systemCsf").SystemCsf = null as any;
utilities.lazyLoad(exports, ["SystemCsf"], () => require("./systemCsf"));

export { SystemCsfFabricconnectorArgs, SystemCsfFabricconnectorState } from "./systemCsfFabricconnector";
export type SystemCsfFabricconnector = import("./systemCsfFabricconnector").SystemCsfFabricconnector;
export const SystemCsfFabricconnector: typeof import("./systemCsfFabricconnector").SystemCsfFabricconnector = null as any;
utilities.lazyLoad(exports, ["SystemCsfFabricconnector"], () => require("./systemCsfFabricconnector"));

export { SystemDmArgs, SystemDmState } from "./systemDm";
export type SystemDm = import("./systemDm").SystemDm;
export const SystemDm: typeof import("./systemDm").SystemDm = null as any;
utilities.lazyLoad(exports, ["SystemDm"], () => require("./systemDm"));

export { SystemDnsArgs, SystemDnsState } from "./systemDns";
export type SystemDns = import("./systemDns").SystemDns;
export const SystemDns: typeof import("./systemDns").SystemDns = null as any;
utilities.lazyLoad(exports, ["SystemDns"], () => require("./systemDns"));

export { SystemDockerArgs, SystemDockerState } from "./systemDocker";
export type SystemDocker = import("./systemDocker").SystemDocker;
export const SystemDocker: typeof import("./systemDocker").SystemDocker = null as any;
utilities.lazyLoad(exports, ["SystemDocker"], () => require("./systemDocker"));

export { SystemFipsArgs, SystemFipsState } from "./systemFips";
export type SystemFips = import("./systemFips").SystemFips;
export const SystemFips: typeof import("./systemFips").SystemFips = null as any;
utilities.lazyLoad(exports, ["SystemFips"], () => require("./systemFips"));

export { SystemFortiviewAutocacheArgs, SystemFortiviewAutocacheState } from "./systemFortiviewAutocache";
export type SystemFortiviewAutocache = import("./systemFortiviewAutocache").SystemFortiviewAutocache;
export const SystemFortiviewAutocache: typeof import("./systemFortiviewAutocache").SystemFortiviewAutocache = null as any;
utilities.lazyLoad(exports, ["SystemFortiviewAutocache"], () => require("./systemFortiviewAutocache"));

export { SystemFortiviewSettingArgs, SystemFortiviewSettingState } from "./systemFortiviewSetting";
export type SystemFortiviewSetting = import("./systemFortiviewSetting").SystemFortiviewSetting;
export const SystemFortiviewSetting: typeof import("./systemFortiviewSetting").SystemFortiviewSetting = null as any;
utilities.lazyLoad(exports, ["SystemFortiviewSetting"], () => require("./systemFortiviewSetting"));

export { SystemGlobalArgs, SystemGlobalState } from "./systemGlobal";
export type SystemGlobal = import("./systemGlobal").SystemGlobal;
export const SystemGlobal: typeof import("./systemGlobal").SystemGlobal = null as any;
utilities.lazyLoad(exports, ["SystemGlobal"], () => require("./systemGlobal"));

export { SystemGlobalSslciphersuitesArgs, SystemGlobalSslciphersuitesState } from "./systemGlobalSslciphersuites";
export type SystemGlobalSslciphersuites = import("./systemGlobalSslciphersuites").SystemGlobalSslciphersuites;
export const SystemGlobalSslciphersuites: typeof import("./systemGlobalSslciphersuites").SystemGlobalSslciphersuites = null as any;
utilities.lazyLoad(exports, ["SystemGlobalSslciphersuites"], () => require("./systemGlobalSslciphersuites"));

export { SystemGuiactArgs, SystemGuiactState } from "./systemGuiact";
export type SystemGuiact = import("./systemGuiact").SystemGuiact;
export const SystemGuiact: typeof import("./systemGuiact").SystemGuiact = null as any;
utilities.lazyLoad(exports, ["SystemGuiact"], () => require("./systemGuiact"));

export { SystemHaArgs, SystemHaState } from "./systemHa";
export type SystemHa = import("./systemHa").SystemHa;
export const SystemHa: typeof import("./systemHa").SystemHa = null as any;
utilities.lazyLoad(exports, ["SystemHa"], () => require("./systemHa"));

export { SystemHaMonitoredipsArgs, SystemHaMonitoredipsState } from "./systemHaMonitoredips";
export type SystemHaMonitoredips = import("./systemHaMonitoredips").SystemHaMonitoredips;
export const SystemHaMonitoredips: typeof import("./systemHaMonitoredips").SystemHaMonitoredips = null as any;
utilities.lazyLoad(exports, ["SystemHaMonitoredips"], () => require("./systemHaMonitoredips"));

export { SystemHaPeerArgs, SystemHaPeerState } from "./systemHaPeer";
export type SystemHaPeer = import("./systemHaPeer").SystemHaPeer;
export const SystemHaPeer: typeof import("./systemHaPeer").SystemHaPeer = null as any;
utilities.lazyLoad(exports, ["SystemHaPeer"], () => require("./systemHaPeer"));

export { SystemHascheduledcheckArgs, SystemHascheduledcheckState } from "./systemHascheduledcheck";
export type SystemHascheduledcheck = import("./systemHascheduledcheck").SystemHascheduledcheck;
export const SystemHascheduledcheck: typeof import("./systemHascheduledcheck").SystemHascheduledcheck = null as any;
utilities.lazyLoad(exports, ["SystemHascheduledcheck"], () => require("./systemHascheduledcheck"));

export { SystemInterfaceArgs, SystemInterfaceState } from "./systemInterface";
export type SystemInterface = import("./systemInterface").SystemInterface;
export const SystemInterface: typeof import("./systemInterface").SystemInterface = null as any;
utilities.lazyLoad(exports, ["SystemInterface"], () => require("./systemInterface"));

export { SystemLocalinpolicyArgs, SystemLocalinpolicyState } from "./systemLocalinpolicy";
export type SystemLocalinpolicy = import("./systemLocalinpolicy").SystemLocalinpolicy;
export const SystemLocalinpolicy: typeof import("./systemLocalinpolicy").SystemLocalinpolicy = null as any;
utilities.lazyLoad(exports, ["SystemLocalinpolicy"], () => require("./systemLocalinpolicy"));

export { SystemLocalinpolicy6Args, SystemLocalinpolicy6State } from "./systemLocalinpolicy6";
export type SystemLocalinpolicy6 = import("./systemLocalinpolicy6").SystemLocalinpolicy6;
export const SystemLocalinpolicy6: typeof import("./systemLocalinpolicy6").SystemLocalinpolicy6 = null as any;
utilities.lazyLoad(exports, ["SystemLocalinpolicy6"], () => require("./systemLocalinpolicy6"));

export { SystemLocallogDiskFilterArgs, SystemLocallogDiskFilterState } from "./systemLocallogDiskFilter";
export type SystemLocallogDiskFilter = import("./systemLocallogDiskFilter").SystemLocallogDiskFilter;
export const SystemLocallogDiskFilter: typeof import("./systemLocallogDiskFilter").SystemLocallogDiskFilter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogDiskFilter"], () => require("./systemLocallogDiskFilter"));

export { SystemLocallogDiskSettingArgs, SystemLocallogDiskSettingState } from "./systemLocallogDiskSetting";
export type SystemLocallogDiskSetting = import("./systemLocallogDiskSetting").SystemLocallogDiskSetting;
export const SystemLocallogDiskSetting: typeof import("./systemLocallogDiskSetting").SystemLocallogDiskSetting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogDiskSetting"], () => require("./systemLocallogDiskSetting"));

export { SystemLocallogFortianalyzer2FilterArgs, SystemLocallogFortianalyzer2FilterState } from "./systemLocallogFortianalyzer2Filter";
export type SystemLocallogFortianalyzer2Filter = import("./systemLocallogFortianalyzer2Filter").SystemLocallogFortianalyzer2Filter;
export const SystemLocallogFortianalyzer2Filter: typeof import("./systemLocallogFortianalyzer2Filter").SystemLocallogFortianalyzer2Filter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogFortianalyzer2Filter"], () => require("./systemLocallogFortianalyzer2Filter"));

export { SystemLocallogFortianalyzer2SettingArgs, SystemLocallogFortianalyzer2SettingState } from "./systemLocallogFortianalyzer2Setting";
export type SystemLocallogFortianalyzer2Setting = import("./systemLocallogFortianalyzer2Setting").SystemLocallogFortianalyzer2Setting;
export const SystemLocallogFortianalyzer2Setting: typeof import("./systemLocallogFortianalyzer2Setting").SystemLocallogFortianalyzer2Setting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogFortianalyzer2Setting"], () => require("./systemLocallogFortianalyzer2Setting"));

export { SystemLocallogFortianalyzer3FilterArgs, SystemLocallogFortianalyzer3FilterState } from "./systemLocallogFortianalyzer3Filter";
export type SystemLocallogFortianalyzer3Filter = import("./systemLocallogFortianalyzer3Filter").SystemLocallogFortianalyzer3Filter;
export const SystemLocallogFortianalyzer3Filter: typeof import("./systemLocallogFortianalyzer3Filter").SystemLocallogFortianalyzer3Filter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogFortianalyzer3Filter"], () => require("./systemLocallogFortianalyzer3Filter"));

export { SystemLocallogFortianalyzer3SettingArgs, SystemLocallogFortianalyzer3SettingState } from "./systemLocallogFortianalyzer3Setting";
export type SystemLocallogFortianalyzer3Setting = import("./systemLocallogFortianalyzer3Setting").SystemLocallogFortianalyzer3Setting;
export const SystemLocallogFortianalyzer3Setting: typeof import("./systemLocallogFortianalyzer3Setting").SystemLocallogFortianalyzer3Setting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogFortianalyzer3Setting"], () => require("./systemLocallogFortianalyzer3Setting"));

export { SystemLocallogFortianalyzerFilterArgs, SystemLocallogFortianalyzerFilterState } from "./systemLocallogFortianalyzerFilter";
export type SystemLocallogFortianalyzerFilter = import("./systemLocallogFortianalyzerFilter").SystemLocallogFortianalyzerFilter;
export const SystemLocallogFortianalyzerFilter: typeof import("./systemLocallogFortianalyzerFilter").SystemLocallogFortianalyzerFilter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogFortianalyzerFilter"], () => require("./systemLocallogFortianalyzerFilter"));

export { SystemLocallogFortianalyzerSettingArgs, SystemLocallogFortianalyzerSettingState } from "./systemLocallogFortianalyzerSetting";
export type SystemLocallogFortianalyzerSetting = import("./systemLocallogFortianalyzerSetting").SystemLocallogFortianalyzerSetting;
export const SystemLocallogFortianalyzerSetting: typeof import("./systemLocallogFortianalyzerSetting").SystemLocallogFortianalyzerSetting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogFortianalyzerSetting"], () => require("./systemLocallogFortianalyzerSetting"));

export { SystemLocallogMemoryFilterArgs, SystemLocallogMemoryFilterState } from "./systemLocallogMemoryFilter";
export type SystemLocallogMemoryFilter = import("./systemLocallogMemoryFilter").SystemLocallogMemoryFilter;
export const SystemLocallogMemoryFilter: typeof import("./systemLocallogMemoryFilter").SystemLocallogMemoryFilter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogMemoryFilter"], () => require("./systemLocallogMemoryFilter"));

export { SystemLocallogMemorySettingArgs, SystemLocallogMemorySettingState } from "./systemLocallogMemorySetting";
export type SystemLocallogMemorySetting = import("./systemLocallogMemorySetting").SystemLocallogMemorySetting;
export const SystemLocallogMemorySetting: typeof import("./systemLocallogMemorySetting").SystemLocallogMemorySetting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogMemorySetting"], () => require("./systemLocallogMemorySetting"));

export { SystemLocallogSettingArgs, SystemLocallogSettingState } from "./systemLocallogSetting";
export type SystemLocallogSetting = import("./systemLocallogSetting").SystemLocallogSetting;
export const SystemLocallogSetting: typeof import("./systemLocallogSetting").SystemLocallogSetting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogSetting"], () => require("./systemLocallogSetting"));

export { SystemLocallogSyslogd2FilterArgs, SystemLocallogSyslogd2FilterState } from "./systemLocallogSyslogd2Filter";
export type SystemLocallogSyslogd2Filter = import("./systemLocallogSyslogd2Filter").SystemLocallogSyslogd2Filter;
export const SystemLocallogSyslogd2Filter: typeof import("./systemLocallogSyslogd2Filter").SystemLocallogSyslogd2Filter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogSyslogd2Filter"], () => require("./systemLocallogSyslogd2Filter"));

export { SystemLocallogSyslogd2SettingArgs, SystemLocallogSyslogd2SettingState } from "./systemLocallogSyslogd2Setting";
export type SystemLocallogSyslogd2Setting = import("./systemLocallogSyslogd2Setting").SystemLocallogSyslogd2Setting;
export const SystemLocallogSyslogd2Setting: typeof import("./systemLocallogSyslogd2Setting").SystemLocallogSyslogd2Setting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogSyslogd2Setting"], () => require("./systemLocallogSyslogd2Setting"));

export { SystemLocallogSyslogd3FilterArgs, SystemLocallogSyslogd3FilterState } from "./systemLocallogSyslogd3Filter";
export type SystemLocallogSyslogd3Filter = import("./systemLocallogSyslogd3Filter").SystemLocallogSyslogd3Filter;
export const SystemLocallogSyslogd3Filter: typeof import("./systemLocallogSyslogd3Filter").SystemLocallogSyslogd3Filter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogSyslogd3Filter"], () => require("./systemLocallogSyslogd3Filter"));

export { SystemLocallogSyslogd3SettingArgs, SystemLocallogSyslogd3SettingState } from "./systemLocallogSyslogd3Setting";
export type SystemLocallogSyslogd3Setting = import("./systemLocallogSyslogd3Setting").SystemLocallogSyslogd3Setting;
export const SystemLocallogSyslogd3Setting: typeof import("./systemLocallogSyslogd3Setting").SystemLocallogSyslogd3Setting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogSyslogd3Setting"], () => require("./systemLocallogSyslogd3Setting"));

export { SystemLocallogSyslogdFilterArgs, SystemLocallogSyslogdFilterState } from "./systemLocallogSyslogdFilter";
export type SystemLocallogSyslogdFilter = import("./systemLocallogSyslogdFilter").SystemLocallogSyslogdFilter;
export const SystemLocallogSyslogdFilter: typeof import("./systemLocallogSyslogdFilter").SystemLocallogSyslogdFilter = null as any;
utilities.lazyLoad(exports, ["SystemLocallogSyslogdFilter"], () => require("./systemLocallogSyslogdFilter"));

export { SystemLocallogSyslogdSettingArgs, SystemLocallogSyslogdSettingState } from "./systemLocallogSyslogdSetting";
export type SystemLocallogSyslogdSetting = import("./systemLocallogSyslogdSetting").SystemLocallogSyslogdSetting;
export const SystemLocallogSyslogdSetting: typeof import("./systemLocallogSyslogdSetting").SystemLocallogSyslogdSetting = null as any;
utilities.lazyLoad(exports, ["SystemLocallogSyslogdSetting"], () => require("./systemLocallogSyslogdSetting"));

export { SystemLogAlertArgs, SystemLogAlertState } from "./systemLogAlert";
export type SystemLogAlert = import("./systemLogAlert").SystemLogAlert;
export const SystemLogAlert: typeof import("./systemLogAlert").SystemLogAlert = null as any;
utilities.lazyLoad(exports, ["SystemLogAlert"], () => require("./systemLogAlert"));

export { SystemLogDevicedisableArgs, SystemLogDevicedisableState } from "./systemLogDevicedisable";
export type SystemLogDevicedisable = import("./systemLogDevicedisable").SystemLogDevicedisable;
export const SystemLogDevicedisable: typeof import("./systemLogDevicedisable").SystemLogDevicedisable = null as any;
utilities.lazyLoad(exports, ["SystemLogDevicedisable"], () => require("./systemLogDevicedisable"));

export { SystemLogFospolicystatsArgs, SystemLogFospolicystatsState } from "./systemLogFospolicystats";
export type SystemLogFospolicystats = import("./systemLogFospolicystats").SystemLogFospolicystats;
export const SystemLogFospolicystats: typeof import("./systemLogFospolicystats").SystemLogFospolicystats = null as any;
utilities.lazyLoad(exports, ["SystemLogFospolicystats"], () => require("./systemLogFospolicystats"));

export { SystemLogInterfacestatsArgs, SystemLogInterfacestatsState } from "./systemLogInterfacestats";
export type SystemLogInterfacestats = import("./systemLogInterfacestats").SystemLogInterfacestats;
export const SystemLogInterfacestats: typeof import("./systemLogInterfacestats").SystemLogInterfacestats = null as any;
utilities.lazyLoad(exports, ["SystemLogInterfacestats"], () => require("./systemLogInterfacestats"));

export { SystemLogIocArgs, SystemLogIocState } from "./systemLogIoc";
export type SystemLogIoc = import("./systemLogIoc").SystemLogIoc;
export const SystemLogIoc: typeof import("./systemLogIoc").SystemLogIoc = null as any;
utilities.lazyLoad(exports, ["SystemLogIoc"], () => require("./systemLogIoc"));

export { SystemLogMaildomainArgs, SystemLogMaildomainState } from "./systemLogMaildomain";
export type SystemLogMaildomain = import("./systemLogMaildomain").SystemLogMaildomain;
export const SystemLogMaildomain: typeof import("./systemLogMaildomain").SystemLogMaildomain = null as any;
utilities.lazyLoad(exports, ["SystemLogMaildomain"], () => require("./systemLogMaildomain"));

export { SystemLogRatelimitArgs, SystemLogRatelimitState } from "./systemLogRatelimit";
export type SystemLogRatelimit = import("./systemLogRatelimit").SystemLogRatelimit;
export const SystemLogRatelimit: typeof import("./systemLogRatelimit").SystemLogRatelimit = null as any;
utilities.lazyLoad(exports, ["SystemLogRatelimit"], () => require("./systemLogRatelimit"));

export { SystemLogRatelimitDeviceArgs, SystemLogRatelimitDeviceState } from "./systemLogRatelimitDevice";
export type SystemLogRatelimitDevice = import("./systemLogRatelimitDevice").SystemLogRatelimitDevice;
export const SystemLogRatelimitDevice: typeof import("./systemLogRatelimitDevice").SystemLogRatelimitDevice = null as any;
utilities.lazyLoad(exports, ["SystemLogRatelimitDevice"], () => require("./systemLogRatelimitDevice"));

export { SystemLogRatelimitRatelimitsArgs, SystemLogRatelimitRatelimitsState } from "./systemLogRatelimitRatelimits";
export type SystemLogRatelimitRatelimits = import("./systemLogRatelimitRatelimits").SystemLogRatelimitRatelimits;
export const SystemLogRatelimitRatelimits: typeof import("./systemLogRatelimitRatelimits").SystemLogRatelimitRatelimits = null as any;
utilities.lazyLoad(exports, ["SystemLogRatelimitRatelimits"], () => require("./systemLogRatelimitRatelimits"));

export { SystemLogSettingsArgs, SystemLogSettingsState } from "./systemLogSettings";
export type SystemLogSettings = import("./systemLogSettings").SystemLogSettings;
export const SystemLogSettings: typeof import("./systemLogSettings").SystemLogSettings = null as any;
utilities.lazyLoad(exports, ["SystemLogSettings"], () => require("./systemLogSettings"));

export { SystemLogSettingsRollinganalyzerArgs, SystemLogSettingsRollinganalyzerState } from "./systemLogSettingsRollinganalyzer";
export type SystemLogSettingsRollinganalyzer = import("./systemLogSettingsRollinganalyzer").SystemLogSettingsRollinganalyzer;
export const SystemLogSettingsRollinganalyzer: typeof import("./systemLogSettingsRollinganalyzer").SystemLogSettingsRollinganalyzer = null as any;
utilities.lazyLoad(exports, ["SystemLogSettingsRollinganalyzer"], () => require("./systemLogSettingsRollinganalyzer"));

export { SystemLogSettingsRollinglocalArgs, SystemLogSettingsRollinglocalState } from "./systemLogSettingsRollinglocal";
export type SystemLogSettingsRollinglocal = import("./systemLogSettingsRollinglocal").SystemLogSettingsRollinglocal;
export const SystemLogSettingsRollinglocal: typeof import("./systemLogSettingsRollinglocal").SystemLogSettingsRollinglocal = null as any;
utilities.lazyLoad(exports, ["SystemLogSettingsRollinglocal"], () => require("./systemLogSettingsRollinglocal"));

export { SystemLogSettingsRollingregularArgs, SystemLogSettingsRollingregularState } from "./systemLogSettingsRollingregular";
export type SystemLogSettingsRollingregular = import("./systemLogSettingsRollingregular").SystemLogSettingsRollingregular;
export const SystemLogSettingsRollingregular: typeof import("./systemLogSettingsRollingregular").SystemLogSettingsRollingregular = null as any;
utilities.lazyLoad(exports, ["SystemLogSettingsRollingregular"], () => require("./systemLogSettingsRollingregular"));

export { SystemLogTopologyArgs, SystemLogTopologyState } from "./systemLogTopology";
export type SystemLogTopology = import("./systemLogTopology").SystemLogTopology;
export const SystemLogTopology: typeof import("./systemLogTopology").SystemLogTopology = null as any;
utilities.lazyLoad(exports, ["SystemLogTopology"], () => require("./systemLogTopology"));

export { SystemLogUebaArgs, SystemLogUebaState } from "./systemLogUeba";
export type SystemLogUeba = import("./systemLogUeba").SystemLogUeba;
export const SystemLogUeba: typeof import("./systemLogUeba").SystemLogUeba = null as any;
utilities.lazyLoad(exports, ["SystemLogUeba"], () => require("./systemLogUeba"));

export { SystemLogfetchClientprofileArgs, SystemLogfetchClientprofileState } from "./systemLogfetchClientprofile";
export type SystemLogfetchClientprofile = import("./systemLogfetchClientprofile").SystemLogfetchClientprofile;
export const SystemLogfetchClientprofile: typeof import("./systemLogfetchClientprofile").SystemLogfetchClientprofile = null as any;
utilities.lazyLoad(exports, ["SystemLogfetchClientprofile"], () => require("./systemLogfetchClientprofile"));

export { SystemLogfetchClientprofileDevicefilterArgs, SystemLogfetchClientprofileDevicefilterState } from "./systemLogfetchClientprofileDevicefilter";
export type SystemLogfetchClientprofileDevicefilter = import("./systemLogfetchClientprofileDevicefilter").SystemLogfetchClientprofileDevicefilter;
export const SystemLogfetchClientprofileDevicefilter: typeof import("./systemLogfetchClientprofileDevicefilter").SystemLogfetchClientprofileDevicefilter = null as any;
utilities.lazyLoad(exports, ["SystemLogfetchClientprofileDevicefilter"], () => require("./systemLogfetchClientprofileDevicefilter"));

export { SystemLogfetchServersettingsArgs, SystemLogfetchServersettingsState } from "./systemLogfetchServersettings";
export type SystemLogfetchServersettings = import("./systemLogfetchServersettings").SystemLogfetchServersettings;
export const SystemLogfetchServersettings: typeof import("./systemLogfetchServersettings").SystemLogfetchServersettings = null as any;
utilities.lazyLoad(exports, ["SystemLogfetchServersettings"], () => require("./systemLogfetchServersettings"));

export { SystemMailArgs, SystemMailState } from "./systemMail";
export type SystemMail = import("./systemMail").SystemMail;
export const SystemMail: typeof import("./systemMail").SystemMail = null as any;
utilities.lazyLoad(exports, ["SystemMail"], () => require("./systemMail"));

export { SystemMetadataAdminsArgs, SystemMetadataAdminsState } from "./systemMetadataAdmins";
export type SystemMetadataAdmins = import("./systemMetadataAdmins").SystemMetadataAdmins;
export const SystemMetadataAdmins: typeof import("./systemMetadataAdmins").SystemMetadataAdmins = null as any;
utilities.lazyLoad(exports, ["SystemMetadataAdmins"], () => require("./systemMetadataAdmins"));

export { SystemNtpArgs, SystemNtpState } from "./systemNtp";
export type SystemNtp = import("./systemNtp").SystemNtp;
export const SystemNtp: typeof import("./systemNtp").SystemNtp = null as any;
utilities.lazyLoad(exports, ["SystemNtp"], () => require("./systemNtp"));

export { SystemNtpNtpserverArgs, SystemNtpNtpserverState } from "./systemNtpNtpserver";
export type SystemNtpNtpserver = import("./systemNtpNtpserver").SystemNtpNtpserver;
export const SystemNtpNtpserver: typeof import("./systemNtpNtpserver").SystemNtpNtpserver = null as any;
utilities.lazyLoad(exports, ["SystemNtpNtpserver"], () => require("./systemNtpNtpserver"));

export { SystemPasswordpolicyArgs, SystemPasswordpolicyState } from "./systemPasswordpolicy";
export type SystemPasswordpolicy = import("./systemPasswordpolicy").SystemPasswordpolicy;
export const SystemPasswordpolicy: typeof import("./systemPasswordpolicy").SystemPasswordpolicy = null as any;
utilities.lazyLoad(exports, ["SystemPasswordpolicy"], () => require("./systemPasswordpolicy"));

export { SystemReportAutocacheArgs, SystemReportAutocacheState } from "./systemReportAutocache";
export type SystemReportAutocache = import("./systemReportAutocache").SystemReportAutocache;
export const SystemReportAutocache: typeof import("./systemReportAutocache").SystemReportAutocache = null as any;
utilities.lazyLoad(exports, ["SystemReportAutocache"], () => require("./systemReportAutocache"));

export { SystemReportEstbrowsetimeArgs, SystemReportEstbrowsetimeState } from "./systemReportEstbrowsetime";
export type SystemReportEstbrowsetime = import("./systemReportEstbrowsetime").SystemReportEstbrowsetime;
export const SystemReportEstbrowsetime: typeof import("./systemReportEstbrowsetime").SystemReportEstbrowsetime = null as any;
utilities.lazyLoad(exports, ["SystemReportEstbrowsetime"], () => require("./systemReportEstbrowsetime"));

export { SystemReportSettingArgs, SystemReportSettingState } from "./systemReportSetting";
export type SystemReportSetting = import("./systemReportSetting").SystemReportSetting;
export const SystemReportSetting: typeof import("./systemReportSetting").SystemReportSetting = null as any;
utilities.lazyLoad(exports, ["SystemReportSetting"], () => require("./systemReportSetting"));

export { SystemRouteArgs, SystemRouteState } from "./systemRoute";
export type SystemRoute = import("./systemRoute").SystemRoute;
export const SystemRoute: typeof import("./systemRoute").SystemRoute = null as any;
utilities.lazyLoad(exports, ["SystemRoute"], () => require("./systemRoute"));

export { SystemRoute6Args, SystemRoute6State } from "./systemRoute6";
export type SystemRoute6 = import("./systemRoute6").SystemRoute6;
export const SystemRoute6: typeof import("./systemRoute6").SystemRoute6 = null as any;
utilities.lazyLoad(exports, ["SystemRoute6"], () => require("./systemRoute6"));

export { SystemSamlArgs, SystemSamlState } from "./systemSaml";
export type SystemSaml = import("./systemSaml").SystemSaml;
export const SystemSaml: typeof import("./systemSaml").SystemSaml = null as any;
utilities.lazyLoad(exports, ["SystemSaml"], () => require("./systemSaml"));

export { SystemSamlFabricidpArgs, SystemSamlFabricidpState } from "./systemSamlFabricidp";
export type SystemSamlFabricidp = import("./systemSamlFabricidp").SystemSamlFabricidp;
export const SystemSamlFabricidp: typeof import("./systemSamlFabricidp").SystemSamlFabricidp = null as any;
utilities.lazyLoad(exports, ["SystemSamlFabricidp"], () => require("./systemSamlFabricidp"));

export { SystemSamlServiceprovidersArgs, SystemSamlServiceprovidersState } from "./systemSamlServiceproviders";
export type SystemSamlServiceproviders = import("./systemSamlServiceproviders").SystemSamlServiceproviders;
export const SystemSamlServiceproviders: typeof import("./systemSamlServiceproviders").SystemSamlServiceproviders = null as any;
utilities.lazyLoad(exports, ["SystemSamlServiceproviders"], () => require("./systemSamlServiceproviders"));

export { SystemSnifferArgs, SystemSnifferState } from "./systemSniffer";
export type SystemSniffer = import("./systemSniffer").SystemSniffer;
export const SystemSniffer: typeof import("./systemSniffer").SystemSniffer = null as any;
utilities.lazyLoad(exports, ["SystemSniffer"], () => require("./systemSniffer"));

export { SystemSnmpCommunityArgs, SystemSnmpCommunityState } from "./systemSnmpCommunity";
export type SystemSnmpCommunity = import("./systemSnmpCommunity").SystemSnmpCommunity;
export const SystemSnmpCommunity: typeof import("./systemSnmpCommunity").SystemSnmpCommunity = null as any;
utilities.lazyLoad(exports, ["SystemSnmpCommunity"], () => require("./systemSnmpCommunity"));

export { SystemSnmpCommunityHostsArgs, SystemSnmpCommunityHostsState } from "./systemSnmpCommunityHosts";
export type SystemSnmpCommunityHosts = import("./systemSnmpCommunityHosts").SystemSnmpCommunityHosts;
export const SystemSnmpCommunityHosts: typeof import("./systemSnmpCommunityHosts").SystemSnmpCommunityHosts = null as any;
utilities.lazyLoad(exports, ["SystemSnmpCommunityHosts"], () => require("./systemSnmpCommunityHosts"));

export { SystemSnmpCommunityHosts6Args, SystemSnmpCommunityHosts6State } from "./systemSnmpCommunityHosts6";
export type SystemSnmpCommunityHosts6 = import("./systemSnmpCommunityHosts6").SystemSnmpCommunityHosts6;
export const SystemSnmpCommunityHosts6: typeof import("./systemSnmpCommunityHosts6").SystemSnmpCommunityHosts6 = null as any;
utilities.lazyLoad(exports, ["SystemSnmpCommunityHosts6"], () => require("./systemSnmpCommunityHosts6"));

export { SystemSnmpSysinfoArgs, SystemSnmpSysinfoState } from "./systemSnmpSysinfo";
export type SystemSnmpSysinfo = import("./systemSnmpSysinfo").SystemSnmpSysinfo;
export const SystemSnmpSysinfo: typeof import("./systemSnmpSysinfo").SystemSnmpSysinfo = null as any;
utilities.lazyLoad(exports, ["SystemSnmpSysinfo"], () => require("./systemSnmpSysinfo"));

export { SystemSnmpUserArgs, SystemSnmpUserState } from "./systemSnmpUser";
export type SystemSnmpUser = import("./systemSnmpUser").SystemSnmpUser;
export const SystemSnmpUser: typeof import("./systemSnmpUser").SystemSnmpUser = null as any;
utilities.lazyLoad(exports, ["SystemSnmpUser"], () => require("./systemSnmpUser"));

export { SystemSocfabricArgs, SystemSocfabricState } from "./systemSocfabric";
export type SystemSocfabric = import("./systemSocfabric").SystemSocfabric;
export const SystemSocfabric: typeof import("./systemSocfabric").SystemSocfabric = null as any;
utilities.lazyLoad(exports, ["SystemSocfabric"], () => require("./systemSocfabric"));

export { SystemSocfabricTrustedlistArgs, SystemSocfabricTrustedlistState } from "./systemSocfabricTrustedlist";
export type SystemSocfabricTrustedlist = import("./systemSocfabricTrustedlist").SystemSocfabricTrustedlist;
export const SystemSocfabricTrustedlist: typeof import("./systemSocfabricTrustedlist").SystemSocfabricTrustedlist = null as any;
utilities.lazyLoad(exports, ["SystemSocfabricTrustedlist"], () => require("./systemSocfabricTrustedlist"));

export { SystemSqlArgs, SystemSqlState } from "./systemSql";
export type SystemSql = import("./systemSql").SystemSql;
export const SystemSql: typeof import("./systemSql").SystemSql = null as any;
utilities.lazyLoad(exports, ["SystemSql"], () => require("./systemSql"));

export { SystemSqlCustomindexArgs, SystemSqlCustomindexState } from "./systemSqlCustomindex";
export type SystemSqlCustomindex = import("./systemSqlCustomindex").SystemSqlCustomindex;
export const SystemSqlCustomindex: typeof import("./systemSqlCustomindex").SystemSqlCustomindex = null as any;
utilities.lazyLoad(exports, ["SystemSqlCustomindex"], () => require("./systemSqlCustomindex"));

export { SystemSqlCustomskipidxArgs, SystemSqlCustomskipidxState } from "./systemSqlCustomskipidx";
export type SystemSqlCustomskipidx = import("./systemSqlCustomskipidx").SystemSqlCustomskipidx;
export const SystemSqlCustomskipidx: typeof import("./systemSqlCustomskipidx").SystemSqlCustomskipidx = null as any;
utilities.lazyLoad(exports, ["SystemSqlCustomskipidx"], () => require("./systemSqlCustomskipidx"));

export { SystemSqlTsindexfieldArgs, SystemSqlTsindexfieldState } from "./systemSqlTsindexfield";
export type SystemSqlTsindexfield = import("./systemSqlTsindexfield").SystemSqlTsindexfield;
export const SystemSqlTsindexfield: typeof import("./systemSqlTsindexfield").SystemSqlTsindexfield = null as any;
utilities.lazyLoad(exports, ["SystemSqlTsindexfield"], () => require("./systemSqlTsindexfield"));

export { SystemSyslogArgs, SystemSyslogState } from "./systemSyslog";
export type SystemSyslog = import("./systemSyslog").SystemSyslog;
export const SystemSyslog: typeof import("./systemSyslog").SystemSyslog = null as any;
utilities.lazyLoad(exports, ["SystemSyslog"], () => require("./systemSyslog"));

export { SystemTemplateArgs, SystemTemplateState } from "./systemTemplate";
export type SystemTemplate = import("./systemTemplate").SystemTemplate;
export const SystemTemplate: typeof import("./systemTemplate").SystemTemplate = null as any;
utilities.lazyLoad(exports, ["SystemTemplate"], () => require("./systemTemplate"));

export { SystemWebproxyArgs, SystemWebproxyState } from "./systemWebproxy";
export type SystemWebproxy = import("./systemWebproxy").SystemWebproxy;
export const SystemWebproxy: typeof import("./systemWebproxy").SystemWebproxy = null as any;
utilities.lazyLoad(exports, ["SystemWebproxy"], () => require("./systemWebproxy"));

export { SystemWorkflowApprovalmatrixArgs, SystemWorkflowApprovalmatrixState } from "./systemWorkflowApprovalmatrix";
export type SystemWorkflowApprovalmatrix = import("./systemWorkflowApprovalmatrix").SystemWorkflowApprovalmatrix;
export const SystemWorkflowApprovalmatrix: typeof import("./systemWorkflowApprovalmatrix").SystemWorkflowApprovalmatrix = null as any;
utilities.lazyLoad(exports, ["SystemWorkflowApprovalmatrix"], () => require("./systemWorkflowApprovalmatrix"));

export { SystemWorkflowApprovalmatrixApproverArgs, SystemWorkflowApprovalmatrixApproverState } from "./systemWorkflowApprovalmatrixApprover";
export type SystemWorkflowApprovalmatrixApprover = import("./systemWorkflowApprovalmatrixApprover").SystemWorkflowApprovalmatrixApprover;
export const SystemWorkflowApprovalmatrixApprover: typeof import("./systemWorkflowApprovalmatrixApprover").SystemWorkflowApprovalmatrixApprover = null as any;
utilities.lazyLoad(exports, ["SystemWorkflowApprovalmatrixApprover"], () => require("./systemWorkflowApprovalmatrixApprover"));

export { SystempDeviceProfileFortianalyzerArgs, SystempDeviceProfileFortianalyzerState } from "./systempDeviceProfileFortianalyzer";
export type SystempDeviceProfileFortianalyzer = import("./systempDeviceProfileFortianalyzer").SystempDeviceProfileFortianalyzer;
export const SystempDeviceProfileFortianalyzer: typeof import("./systempDeviceProfileFortianalyzer").SystempDeviceProfileFortianalyzer = null as any;
utilities.lazyLoad(exports, ["SystempDeviceProfileFortianalyzer"], () => require("./systempDeviceProfileFortianalyzer"));

export { SystempDeviceProfileFortiguardArgs, SystempDeviceProfileFortiguardState } from "./systempDeviceProfileFortiguard";
export type SystempDeviceProfileFortiguard = import("./systempDeviceProfileFortiguard").SystempDeviceProfileFortiguard;
export const SystempDeviceProfileFortiguard: typeof import("./systempDeviceProfileFortiguard").SystempDeviceProfileFortiguard = null as any;
utilities.lazyLoad(exports, ["SystempDeviceProfileFortiguard"], () => require("./systempDeviceProfileFortiguard"));

export { SystempLogFortianalyzerSettingArgs, SystempLogFortianalyzerSettingState } from "./systempLogFortianalyzerSetting";
export type SystempLogFortianalyzerSetting = import("./systempLogFortianalyzerSetting").SystempLogFortianalyzerSetting;
export const SystempLogFortianalyzerSetting: typeof import("./systempLogFortianalyzerSetting").SystempLogFortianalyzerSetting = null as any;
utilities.lazyLoad(exports, ["SystempLogFortianalyzerSetting"], () => require("./systempLogFortianalyzerSetting"));

export { SystempLogFortianalyzercloudSettingArgs, SystempLogFortianalyzercloudSettingState } from "./systempLogFortianalyzercloudSetting";
export type SystempLogFortianalyzercloudSetting = import("./systempLogFortianalyzercloudSetting").SystempLogFortianalyzercloudSetting;
export const SystempLogFortianalyzercloudSetting: typeof import("./systempLogFortianalyzercloudSetting").SystempLogFortianalyzercloudSetting = null as any;
utilities.lazyLoad(exports, ["SystempLogFortianalyzercloudSetting"], () => require("./systempLogFortianalyzercloudSetting"));

export { SystempLogSyslogdFilterArgs, SystempLogSyslogdFilterState } from "./systempLogSyslogdFilter";
export type SystempLogSyslogdFilter = import("./systempLogSyslogdFilter").SystempLogSyslogdFilter;
export const SystempLogSyslogdFilter: typeof import("./systempLogSyslogdFilter").SystempLogSyslogdFilter = null as any;
utilities.lazyLoad(exports, ["SystempLogSyslogdFilter"], () => require("./systempLogSyslogdFilter"));

export { SystempLogSyslogdSettingArgs, SystempLogSyslogdSettingState } from "./systempLogSyslogdSetting";
export type SystempLogSyslogdSetting = import("./systempLogSyslogdSetting").SystempLogSyslogdSetting;
export const SystempLogSyslogdSetting: typeof import("./systempLogSyslogdSetting").SystempLogSyslogdSetting = null as any;
utilities.lazyLoad(exports, ["SystempLogSyslogdSetting"], () => require("./systempLogSyslogdSetting"));

export { SystempSystemCentralmanagementArgs, SystempSystemCentralmanagementState } from "./systempSystemCentralmanagement";
export type SystempSystemCentralmanagement = import("./systempSystemCentralmanagement").SystempSystemCentralmanagement;
export const SystempSystemCentralmanagement: typeof import("./systempSystemCentralmanagement").SystempSystemCentralmanagement = null as any;
utilities.lazyLoad(exports, ["SystempSystemCentralmanagement"], () => require("./systempSystemCentralmanagement"));

export { SystempSystemCentralmanagementServerlistArgs, SystempSystemCentralmanagementServerlistState } from "./systempSystemCentralmanagementServerlist";
export type SystempSystemCentralmanagementServerlist = import("./systempSystemCentralmanagementServerlist").SystempSystemCentralmanagementServerlist;
export const SystempSystemCentralmanagementServerlist: typeof import("./systempSystemCentralmanagementServerlist").SystempSystemCentralmanagementServerlist = null as any;
utilities.lazyLoad(exports, ["SystempSystemCentralmanagementServerlist"], () => require("./systempSystemCentralmanagementServerlist"));

export { SystempSystemEmailserverArgs, SystempSystemEmailserverState } from "./systempSystemEmailserver";
export type SystempSystemEmailserver = import("./systempSystemEmailserver").SystempSystemEmailserver;
export const SystempSystemEmailserver: typeof import("./systempSystemEmailserver").SystempSystemEmailserver = null as any;
utilities.lazyLoad(exports, ["SystempSystemEmailserver"], () => require("./systempSystemEmailserver"));

export { SystempSystemGlobalArgs, SystempSystemGlobalState } from "./systempSystemGlobal";
export type SystempSystemGlobal = import("./systempSystemGlobal").SystempSystemGlobal;
export const SystempSystemGlobal: typeof import("./systempSystemGlobal").SystempSystemGlobal = null as any;
utilities.lazyLoad(exports, ["SystempSystemGlobal"], () => require("./systempSystemGlobal"));

export { SystempSystemNtpArgs, SystempSystemNtpState } from "./systempSystemNtp";
export type SystempSystemNtp = import("./systempSystemNtp").SystempSystemNtp;
export const SystempSystemNtp: typeof import("./systempSystemNtp").SystempSystemNtp = null as any;
utilities.lazyLoad(exports, ["SystempSystemNtp"], () => require("./systempSystemNtp"));

export { SystempSystemReplacemsgDevicedetectionportalArgs, SystempSystemReplacemsgDevicedetectionportalState } from "./systempSystemReplacemsgDevicedetectionportal";
export type SystempSystemReplacemsgDevicedetectionportal = import("./systempSystemReplacemsgDevicedetectionportal").SystempSystemReplacemsgDevicedetectionportal;
export const SystempSystemReplacemsgDevicedetectionportal: typeof import("./systempSystemReplacemsgDevicedetectionportal").SystempSystemReplacemsgDevicedetectionportal = null as any;
utilities.lazyLoad(exports, ["SystempSystemReplacemsgDevicedetectionportal"], () => require("./systempSystemReplacemsgDevicedetectionportal"));

export { SystempSystemReplacemsgNntpArgs, SystempSystemReplacemsgNntpState } from "./systempSystemReplacemsgNntp";
export type SystempSystemReplacemsgNntp = import("./systempSystemReplacemsgNntp").SystempSystemReplacemsgNntp;
export const SystempSystemReplacemsgNntp: typeof import("./systempSystemReplacemsgNntp").SystempSystemReplacemsgNntp = null as any;
utilities.lazyLoad(exports, ["SystempSystemReplacemsgNntp"], () => require("./systempSystemReplacemsgNntp"));

export { SystempSystemSnmpSysinfoArgs, SystempSystemSnmpSysinfoState } from "./systempSystemSnmpSysinfo";
export type SystempSystemSnmpSysinfo = import("./systempSystemSnmpSysinfo").SystempSystemSnmpSysinfo;
export const SystempSystemSnmpSysinfo: typeof import("./systempSystemSnmpSysinfo").SystempSystemSnmpSysinfo = null as any;
utilities.lazyLoad(exports, ["SystempSystemSnmpSysinfo"], () => require("./systempSystemSnmpSysinfo"));

export { SystempSystemSnmpUserArgs, SystempSystemSnmpUserState } from "./systempSystemSnmpUser";
export type SystempSystemSnmpUser = import("./systempSystemSnmpUser").SystempSystemSnmpUser;
export const SystempSystemSnmpUser: typeof import("./systempSystemSnmpUser").SystempSystemSnmpUser = null as any;
utilities.lazyLoad(exports, ["SystempSystemSnmpUser"], () => require("./systempSystemSnmpUser"));

export { WanTemplateArgs, WanTemplateState } from "./wanTemplate";
export type WanTemplate = import("./wanTemplate").WanTemplate;
export const WanTemplate: typeof import("./wanTemplate").WanTemplate = null as any;
utilities.lazyLoad(exports, ["WanTemplate"], () => require("./wanTemplate"));

export { WantempSystemSdwanArgs, WantempSystemSdwanState } from "./wantempSystemSdwan";
export type WantempSystemSdwan = import("./wantempSystemSdwan").WantempSystemSdwan;
export const WantempSystemSdwan: typeof import("./wantempSystemSdwan").WantempSystemSdwan = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwan"], () => require("./wantempSystemSdwan"));

export { WantempSystemSdwanDuplicationArgs, WantempSystemSdwanDuplicationState } from "./wantempSystemSdwanDuplication";
export type WantempSystemSdwanDuplication = import("./wantempSystemSdwanDuplication").WantempSystemSdwanDuplication;
export const WantempSystemSdwanDuplication: typeof import("./wantempSystemSdwanDuplication").WantempSystemSdwanDuplication = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanDuplication"], () => require("./wantempSystemSdwanDuplication"));

export { WantempSystemSdwanHealthcheckArgs, WantempSystemSdwanHealthcheckState } from "./wantempSystemSdwanHealthcheck";
export type WantempSystemSdwanHealthcheck = import("./wantempSystemSdwanHealthcheck").WantempSystemSdwanHealthcheck;
export const WantempSystemSdwanHealthcheck: typeof import("./wantempSystemSdwanHealthcheck").WantempSystemSdwanHealthcheck = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanHealthcheck"], () => require("./wantempSystemSdwanHealthcheck"));

export { WantempSystemSdwanHealthcheckSlaArgs, WantempSystemSdwanHealthcheckSlaState } from "./wantempSystemSdwanHealthcheckSla";
export type WantempSystemSdwanHealthcheckSla = import("./wantempSystemSdwanHealthcheckSla").WantempSystemSdwanHealthcheckSla;
export const WantempSystemSdwanHealthcheckSla: typeof import("./wantempSystemSdwanHealthcheckSla").WantempSystemSdwanHealthcheckSla = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanHealthcheckSla"], () => require("./wantempSystemSdwanHealthcheckSla"));

export { WantempSystemSdwanMembersArgs, WantempSystemSdwanMembersState } from "./wantempSystemSdwanMembers";
export type WantempSystemSdwanMembers = import("./wantempSystemSdwanMembers").WantempSystemSdwanMembers;
export const WantempSystemSdwanMembers: typeof import("./wantempSystemSdwanMembers").WantempSystemSdwanMembers = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanMembers"], () => require("./wantempSystemSdwanMembers"));

export { WantempSystemSdwanMembersMoveArgs, WantempSystemSdwanMembersMoveState } from "./wantempSystemSdwanMembersMove";
export type WantempSystemSdwanMembersMove = import("./wantempSystemSdwanMembersMove").WantempSystemSdwanMembersMove;
export const WantempSystemSdwanMembersMove: typeof import("./wantempSystemSdwanMembersMove").WantempSystemSdwanMembersMove = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanMembersMove"], () => require("./wantempSystemSdwanMembersMove"));

export { WantempSystemSdwanNeighborArgs, WantempSystemSdwanNeighborState } from "./wantempSystemSdwanNeighbor";
export type WantempSystemSdwanNeighbor = import("./wantempSystemSdwanNeighbor").WantempSystemSdwanNeighbor;
export const WantempSystemSdwanNeighbor: typeof import("./wantempSystemSdwanNeighbor").WantempSystemSdwanNeighbor = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanNeighbor"], () => require("./wantempSystemSdwanNeighbor"));

export { WantempSystemSdwanServiceArgs, WantempSystemSdwanServiceState } from "./wantempSystemSdwanService";
export type WantempSystemSdwanService = import("./wantempSystemSdwanService").WantempSystemSdwanService;
export const WantempSystemSdwanService: typeof import("./wantempSystemSdwanService").WantempSystemSdwanService = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanService"], () => require("./wantempSystemSdwanService"));

export { WantempSystemSdwanServiceMoveArgs, WantempSystemSdwanServiceMoveState } from "./wantempSystemSdwanServiceMove";
export type WantempSystemSdwanServiceMove = import("./wantempSystemSdwanServiceMove").WantempSystemSdwanServiceMove;
export const WantempSystemSdwanServiceMove: typeof import("./wantempSystemSdwanServiceMove").WantempSystemSdwanServiceMove = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanServiceMove"], () => require("./wantempSystemSdwanServiceMove"));

export { WantempSystemSdwanServiceSlaArgs, WantempSystemSdwanServiceSlaState } from "./wantempSystemSdwanServiceSla";
export type WantempSystemSdwanServiceSla = import("./wantempSystemSdwanServiceSla").WantempSystemSdwanServiceSla;
export const WantempSystemSdwanServiceSla: typeof import("./wantempSystemSdwanServiceSla").WantempSystemSdwanServiceSla = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanServiceSla"], () => require("./wantempSystemSdwanServiceSla"));

export { WantempSystemSdwanZoneArgs, WantempSystemSdwanZoneState } from "./wantempSystemSdwanZone";
export type WantempSystemSdwanZone = import("./wantempSystemSdwanZone").WantempSystemSdwanZone;
export const WantempSystemSdwanZone: typeof import("./wantempSystemSdwanZone").WantempSystemSdwanZone = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanZone"], () => require("./wantempSystemSdwanZone"));

export { WantempSystemSdwanZoneMoveArgs, WantempSystemSdwanZoneMoveState } from "./wantempSystemSdwanZoneMove";
export type WantempSystemSdwanZoneMove = import("./wantempSystemSdwanZoneMove").WantempSystemSdwanZoneMove;
export const WantempSystemSdwanZoneMove: typeof import("./wantempSystemSdwanZoneMove").WantempSystemSdwanZoneMove = null as any;
utilities.lazyLoad(exports, ["WantempSystemSdwanZoneMove"], () => require("./wantempSystemSdwanZoneMove"));

export { WantempSystemVirtualwanlinkArgs, WantempSystemVirtualwanlinkState } from "./wantempSystemVirtualwanlink";
export type WantempSystemVirtualwanlink = import("./wantempSystemVirtualwanlink").WantempSystemVirtualwanlink;
export const WantempSystemVirtualwanlink: typeof import("./wantempSystemVirtualwanlink").WantempSystemVirtualwanlink = null as any;
utilities.lazyLoad(exports, ["WantempSystemVirtualwanlink"], () => require("./wantempSystemVirtualwanlink"));

export { WantempSystemVirtualwanlinkHealthcheckArgs, WantempSystemVirtualwanlinkHealthcheckState } from "./wantempSystemVirtualwanlinkHealthcheck";
export type WantempSystemVirtualwanlinkHealthcheck = import("./wantempSystemVirtualwanlinkHealthcheck").WantempSystemVirtualwanlinkHealthcheck;
export const WantempSystemVirtualwanlinkHealthcheck: typeof import("./wantempSystemVirtualwanlinkHealthcheck").WantempSystemVirtualwanlinkHealthcheck = null as any;
utilities.lazyLoad(exports, ["WantempSystemVirtualwanlinkHealthcheck"], () => require("./wantempSystemVirtualwanlinkHealthcheck"));

export { WantempSystemVirtualwanlinkHealthcheckSlaArgs, WantempSystemVirtualwanlinkHealthcheckSlaState } from "./wantempSystemVirtualwanlinkHealthcheckSla";
export type WantempSystemVirtualwanlinkHealthcheckSla = import("./wantempSystemVirtualwanlinkHealthcheckSla").WantempSystemVirtualwanlinkHealthcheckSla;
export const WantempSystemVirtualwanlinkHealthcheckSla: typeof import("./wantempSystemVirtualwanlinkHealthcheckSla").WantempSystemVirtualwanlinkHealthcheckSla = null as any;
utilities.lazyLoad(exports, ["WantempSystemVirtualwanlinkHealthcheckSla"], () => require("./wantempSystemVirtualwanlinkHealthcheckSla"));

export { WantempSystemVirtualwanlinkMembersArgs, WantempSystemVirtualwanlinkMembersState } from "./wantempSystemVirtualwanlinkMembers";
export type WantempSystemVirtualwanlinkMembers = import("./wantempSystemVirtualwanlinkMembers").WantempSystemVirtualwanlinkMembers;
export const WantempSystemVirtualwanlinkMembers: typeof import("./wantempSystemVirtualwanlinkMembers").WantempSystemVirtualwanlinkMembers = null as any;
utilities.lazyLoad(exports, ["WantempSystemVirtualwanlinkMembers"], () => require("./wantempSystemVirtualwanlinkMembers"));

export { WantempSystemVirtualwanlinkNeighborArgs, WantempSystemVirtualwanlinkNeighborState } from "./wantempSystemVirtualwanlinkNeighbor";
export type WantempSystemVirtualwanlinkNeighbor = import("./wantempSystemVirtualwanlinkNeighbor").WantempSystemVirtualwanlinkNeighbor;
export const WantempSystemVirtualwanlinkNeighbor: typeof import("./wantempSystemVirtualwanlinkNeighbor").WantempSystemVirtualwanlinkNeighbor = null as any;
utilities.lazyLoad(exports, ["WantempSystemVirtualwanlinkNeighbor"], () => require("./wantempSystemVirtualwanlinkNeighbor"));

export { WantempSystemVirtualwanlinkServiceArgs, WantempSystemVirtualwanlinkServiceState } from "./wantempSystemVirtualwanlinkService";
export type WantempSystemVirtualwanlinkService = import("./wantempSystemVirtualwanlinkService").WantempSystemVirtualwanlinkService;
export const WantempSystemVirtualwanlinkService: typeof import("./wantempSystemVirtualwanlinkService").WantempSystemVirtualwanlinkService = null as any;
utilities.lazyLoad(exports, ["WantempSystemVirtualwanlinkService"], () => require("./wantempSystemVirtualwanlinkService"));

export { WantempSystemVirtualwanlinkServiceSlaArgs, WantempSystemVirtualwanlinkServiceSlaState } from "./wantempSystemVirtualwanlinkServiceSla";
export type WantempSystemVirtualwanlinkServiceSla = import("./wantempSystemVirtualwanlinkServiceSla").WantempSystemVirtualwanlinkServiceSla;
export const WantempSystemVirtualwanlinkServiceSla: typeof import("./wantempSystemVirtualwanlinkServiceSla").WantempSystemVirtualwanlinkServiceSla = null as any;
utilities.lazyLoad(exports, ["WantempSystemVirtualwanlinkServiceSla"], () => require("./wantempSystemVirtualwanlinkServiceSla"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "fortimanager:index/dvmCmdAddDevice:DvmCmdAddDevice":
                return new DvmCmdAddDevice(name, <any>undefined, { urn })
            case "fortimanager:index/dvmCmdAddDevlist:DvmCmdAddDevlist":
                return new DvmCmdAddDevlist(name, <any>undefined, { urn })
            case "fortimanager:index/dvmCmdDelDevice:DvmCmdDelDevice":
                return new DvmCmdDelDevice(name, <any>undefined, { urn })
            case "fortimanager:index/dvmCmdDelDevlist:DvmCmdDelDevlist":
                return new DvmCmdDelDevlist(name, <any>undefined, { urn })
            case "fortimanager:index/dvmCmdUpdateDevice:DvmCmdUpdateDevice":
                return new DvmCmdUpdateDevice(name, <any>undefined, { urn })
            case "fortimanager:index/dvmCmdUpdateDevlist:DvmCmdUpdateDevlist":
                return new DvmCmdUpdateDevlist(name, <any>undefined, { urn })
            case "fortimanager:index/dvmdbAdom:DvmdbAdom":
                return new DvmdbAdom(name, <any>undefined, { urn })
            case "fortimanager:index/dvmdbGroup:DvmdbGroup":
                return new DvmdbGroup(name, <any>undefined, { urn })
            case "fortimanager:index/dvmdbRevision:DvmdbRevision":
                return new DvmdbRevision(name, <any>undefined, { urn })
            case "fortimanager:index/dvmdbScript:DvmdbScript":
                return new DvmdbScript(name, <any>undefined, { urn })
            case "fortimanager:index/dvmdbScriptExecute:DvmdbScriptExecute":
                return new DvmdbScriptExecute(name, <any>undefined, { urn })
            case "fortimanager:index/execWorkspaceAction:ExecWorkspaceAction":
                return new ExecWorkspaceAction(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateAnalyzerVirusreport:FmupdateAnalyzerVirusreport":
                return new FmupdateAnalyzerVirusreport(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateAvipsAdvancedlog:FmupdateAvipsAdvancedlog":
                return new FmupdateAvipsAdvancedlog(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateAvipsWebproxy:FmupdateAvipsWebproxy":
                return new FmupdateAvipsWebproxy(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateCustomurllist:FmupdateCustomurllist":
                return new FmupdateCustomurllist(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateDiskquota:FmupdateDiskquota":
                return new FmupdateDiskquota(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFctservices:FmupdateFctservices":
                return new FmupdateFctservices(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFdssetting:FmupdateFdssetting":
                return new FmupdateFdssetting(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFdssettingPushoverride:FmupdateFdssettingPushoverride":
                return new FmupdateFdssettingPushoverride(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFdssettingPushoverridetoclient:FmupdateFdssettingPushoverridetoclient":
                return new FmupdateFdssettingPushoverridetoclient(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFdssettingServeroverride:FmupdateFdssettingServeroverride":
                return new FmupdateFdssettingServeroverride(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFdssettingUpdateschedule:FmupdateFdssettingUpdateschedule":
                return new FmupdateFdssettingUpdateschedule(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFwmsetting:FmupdateFwmsetting":
                return new FmupdateFwmsetting(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateFwmsettingUpgradetimeout:FmupdateFwmsettingUpgradetimeout":
                return new FmupdateFwmsettingUpgradetimeout(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateMultilayer:FmupdateMultilayer":
                return new FmupdateMultilayer(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdatePublicnetwork:FmupdatePublicnetwork":
                return new FmupdatePublicnetwork(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateServeraccesspriorities:FmupdateServeraccesspriorities":
                return new FmupdateServeraccesspriorities(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateServeroverridestatus:FmupdateServeroverridestatus":
                return new FmupdateServeroverridestatus(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateService:FmupdateService":
                return new FmupdateService(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateWebspamFgdsetting:FmupdateWebspamFgdsetting":
                return new FmupdateWebspamFgdsetting(name, <any>undefined, { urn })
            case "fortimanager:index/fmupdateWebspamWebproxy:FmupdateWebspamWebproxy":
                return new FmupdateWebspamWebproxy(name, <any>undefined, { urn })
            case "fortimanager:index/jsonGenericApi:JsonGenericApi":
                return new JsonGenericApi(name, <any>undefined, { urn })
            case "fortimanager:index/objectAdomOptions:ObjectAdomOptions":
                return new ObjectAdomOptions(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusMmschecksum:ObjectAntivirusMmschecksum":
                return new ObjectAntivirusMmschecksum(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusNotification:ObjectAntivirusNotification":
                return new ObjectAntivirusNotification(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfile:ObjectAntivirusProfile":
                return new ObjectAntivirusProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileCifs:ObjectAntivirusProfileCifs":
                return new ObjectAntivirusProfileCifs(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileContentdisarm:ObjectAntivirusProfileContentdisarm":
                return new ObjectAntivirusProfileContentdisarm(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileFtp:ObjectAntivirusProfileFtp":
                return new ObjectAntivirusProfileFtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileHttp:ObjectAntivirusProfileHttp":
                return new ObjectAntivirusProfileHttp(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileImap:ObjectAntivirusProfileImap":
                return new ObjectAntivirusProfileImap(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileMapi:ObjectAntivirusProfileMapi":
                return new ObjectAntivirusProfileMapi(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileNacquar:ObjectAntivirusProfileNacquar":
                return new ObjectAntivirusProfileNacquar(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileNntp:ObjectAntivirusProfileNntp":
                return new ObjectAntivirusProfileNntp(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileOutbreakprevention:ObjectAntivirusProfileOutbreakprevention":
                return new ObjectAntivirusProfileOutbreakprevention(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfilePop3:ObjectAntivirusProfilePop3":
                return new ObjectAntivirusProfilePop3(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileSmtp:ObjectAntivirusProfileSmtp":
                return new ObjectAntivirusProfileSmtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectAntivirusProfileSsh:ObjectAntivirusProfileSsh":
                return new ObjectAntivirusProfileSsh(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationCategories:ObjectApplicationCategories":
                return new ObjectApplicationCategories(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationCustom:ObjectApplicationCustom":
                return new ObjectApplicationCustom(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationGroup:ObjectApplicationGroup":
                return new ObjectApplicationGroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationList:ObjectApplicationList":
                return new ObjectApplicationList(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationListDefaultnetworkservices:ObjectApplicationListDefaultnetworkservices":
                return new ObjectApplicationListDefaultnetworkservices(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationListDefaultnetworkservicesMove:ObjectApplicationListDefaultnetworkservicesMove":
                return new ObjectApplicationListDefaultnetworkservicesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationListEntries:ObjectApplicationListEntries":
                return new ObjectApplicationListEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationListEntriesParameters:ObjectApplicationListEntriesParameters":
                return new ObjectApplicationListEntriesParameters(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationListEntriesParametersMembers:ObjectApplicationListEntriesParametersMembers":
                return new ObjectApplicationListEntriesParametersMembers(name, <any>undefined, { urn })
            case "fortimanager:index/objectApplicationListEntriesParametersMove:ObjectApplicationListEntriesParametersMove":
                return new ObjectApplicationListEntriesParametersMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectAuthenticationScheme:ObjectAuthenticationScheme":
                return new ObjectAuthenticationScheme(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbProfile:ObjectCasbProfile":
                return new ObjectCasbProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbProfileMove:ObjectCasbProfileMove":
                return new ObjectCasbProfileMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbProfileSaasapplication:ObjectCasbProfileSaasapplication":
                return new ObjectCasbProfileSaasapplication(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbProfileSaasapplicationAccessrule:ObjectCasbProfileSaasapplicationAccessrule":
                return new ObjectCasbProfileSaasapplicationAccessrule(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbProfileSaasapplicationCustomcontrol:ObjectCasbProfileSaasapplicationCustomcontrol":
                return new ObjectCasbProfileSaasapplicationCustomcontrol(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbProfileSaasapplicationCustomcontrolOption:ObjectCasbProfileSaasapplicationCustomcontrolOption":
                return new ObjectCasbProfileSaasapplicationCustomcontrolOption(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbSaasapplication:ObjectCasbSaasapplication":
                return new ObjectCasbSaasapplication(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbSaasapplicationMove:ObjectCasbSaasapplicationMove":
                return new ObjectCasbSaasapplicationMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbUseractivity:ObjectCasbUseractivity":
                return new ObjectCasbUseractivity(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbUseractivityControloptions:ObjectCasbUseractivityControloptions":
                return new ObjectCasbUseractivityControloptions(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbUseractivityControloptionsOperations:ObjectCasbUseractivityControloptionsOperations":
                return new ObjectCasbUseractivityControloptionsOperations(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbUseractivityMatch:ObjectCasbUseractivityMatch":
                return new ObjectCasbUseractivityMatch(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbUseractivityMatchRules:ObjectCasbUseractivityMatchRules":
                return new ObjectCasbUseractivityMatchRules(name, <any>undefined, { urn })
            case "fortimanager:index/objectCasbUseractivityMove:ObjectCasbUseractivityMove":
                return new ObjectCasbUseractivityMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectCertificateTemplate:ObjectCertificateTemplate":
                return new ObjectCertificateTemplate(name, <any>undefined, { urn })
            case "fortimanager:index/objectCifsDomaincontroller:ObjectCifsDomaincontroller":
                return new ObjectCifsDomaincontroller(name, <any>undefined, { urn })
            case "fortimanager:index/objectCifsProfile:ObjectCifsProfile":
                return new ObjectCifsProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectCliTemplate:ObjectCliTemplate":
                return new ObjectCliTemplate(name, <any>undefined, { urn })
            case "fortimanager:index/objectCliTemplategroup:ObjectCliTemplategroup":
                return new ObjectCliTemplategroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectCloudOrchestaws:ObjectCloudOrchestaws":
                return new ObjectCloudOrchestaws(name, <any>undefined, { urn })
            case "fortimanager:index/objectCloudOrchestawsconnector:ObjectCloudOrchestawsconnector":
                return new ObjectCloudOrchestawsconnector(name, <any>undefined, { urn })
            case "fortimanager:index/objectCloudOrchestawstemplateAutoscaleexistingvpc:ObjectCloudOrchestawstemplateAutoscaleexistingvpc":
                return new ObjectCloudOrchestawstemplateAutoscaleexistingvpc(name, <any>undefined, { urn })
            case "fortimanager:index/objectCloudOrchestawstemplateAutoscalenewvpc:ObjectCloudOrchestawstemplateAutoscalenewvpc":
                return new ObjectCloudOrchestawstemplateAutoscalenewvpc(name, <any>undefined, { urn })
            case "fortimanager:index/objectCloudOrchestawstemplateAutoscaletgwnewvpc:ObjectCloudOrchestawstemplateAutoscaletgwnewvpc":
                return new ObjectCloudOrchestawstemplateAutoscaletgwnewvpc(name, <any>undefined, { urn })
            case "fortimanager:index/objectCloudOrchestration:ObjectCloudOrchestration":
                return new ObjectCloudOrchestration(name, <any>undefined, { urn })
            case "fortimanager:index/objectCredentialstoreDomaincontroller:ObjectCredentialstoreDomaincontroller":
                return new ObjectCredentialstoreDomaincontroller(name, <any>undefined, { urn })
            case "fortimanager:index/objectDiameterfilterProfile:ObjectDiameterfilterProfile":
                return new ObjectDiameterfilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpDatatype:ObjectDlpDatatype":
                return new ObjectDlpDatatype(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpDictionary:ObjectDlpDictionary":
                return new ObjectDlpDictionary(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpDictionaryEntries:ObjectDlpDictionaryEntries":
                return new ObjectDlpDictionaryEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpFilepattern:ObjectDlpFilepattern":
                return new ObjectDlpFilepattern(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpFilepatternEntries:ObjectDlpFilepatternEntries":
                return new ObjectDlpFilepatternEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpFpsensitivity:ObjectDlpFpsensitivity":
                return new ObjectDlpFpsensitivity(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpProfile:ObjectDlpProfile":
                return new ObjectDlpProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpProfileRule:ObjectDlpProfileRule":
                return new ObjectDlpProfileRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpProfileRuleMove:ObjectDlpProfileRuleMove":
                return new ObjectDlpProfileRuleMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpSensitivity:ObjectDlpSensitivity":
                return new ObjectDlpSensitivity(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpSensor:ObjectDlpSensor":
                return new ObjectDlpSensor(name, <any>undefined, { urn })
            case "fortimanager:index/objectDlpSensorEntries:ObjectDlpSensorEntries":
                return new ObjectDlpSensorEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterDomainfilter:ObjectDnsfilterDomainfilter":
                return new ObjectDnsfilterDomainfilter(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterDomainfilterEntries:ObjectDnsfilterDomainfilterEntries":
                return new ObjectDnsfilterDomainfilterEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterDomainfilterEntriesMove:ObjectDnsfilterDomainfilterEntriesMove":
                return new ObjectDnsfilterDomainfilterEntriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterProfile:ObjectDnsfilterProfile":
                return new ObjectDnsfilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterProfileDnstranslation:ObjectDnsfilterProfileDnstranslation":
                return new ObjectDnsfilterProfileDnstranslation(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterProfileDomainfilter:ObjectDnsfilterProfileDomainfilter":
                return new ObjectDnsfilterProfileDomainfilter(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterProfileFtgddns:ObjectDnsfilterProfileFtgddns":
                return new ObjectDnsfilterProfileFtgddns(name, <any>undefined, { urn })
            case "fortimanager:index/objectDnsfilterProfileFtgddnsFilters:ObjectDnsfilterProfileFtgddnsFilters":
                return new ObjectDnsfilterProfileFtgddnsFilters(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicAddress:ObjectDynamicAddress":
                return new ObjectDynamicAddress(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicAddressDynamicAddrMapping:ObjectDynamicAddressDynamicAddrMapping":
                return new ObjectDynamicAddressDynamicAddrMapping(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicCertificateLocal:ObjectDynamicCertificateLocal":
                return new ObjectDynamicCertificateLocal(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicInterface:ObjectDynamicInterface":
                return new ObjectDynamicInterface(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicInterfacePlatformMapping:ObjectDynamicInterfacePlatformMapping":
                return new ObjectDynamicInterfacePlatformMapping(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicIppool:ObjectDynamicIppool":
                return new ObjectDynamicIppool(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicMulticastInterface:ObjectDynamicMulticastInterface":
                return new ObjectDynamicMulticastInterface(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicVip:ObjectDynamicVip":
                return new ObjectDynamicVip(name, <any>undefined, { urn })
            case "fortimanager:index/objectDynamicVpntunnel:ObjectDynamicVpntunnel":
                return new ObjectDynamicVpntunnel(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBlockallowlist:ObjectEmailfilterBlockallowlist":
                return new ObjectEmailfilterBlockallowlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBlockallowlistEntries:ObjectEmailfilterBlockallowlistEntries":
                return new ObjectEmailfilterBlockallowlistEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBlockallowlistEntriesMove:ObjectEmailfilterBlockallowlistEntriesMove":
                return new ObjectEmailfilterBlockallowlistEntriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBwl:ObjectEmailfilterBwl":
                return new ObjectEmailfilterBwl(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBwlEntries:ObjectEmailfilterBwlEntries":
                return new ObjectEmailfilterBwlEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBwlEntriesMove:ObjectEmailfilterBwlEntriesMove":
                return new ObjectEmailfilterBwlEntriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBword:ObjectEmailfilterBword":
                return new ObjectEmailfilterBword(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterBwordEntries:ObjectEmailfilterBwordEntries":
                return new ObjectEmailfilterBwordEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterDnsbl:ObjectEmailfilterDnsbl":
                return new ObjectEmailfilterDnsbl(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterDnsblEntries:ObjectEmailfilterDnsblEntries":
                return new ObjectEmailfilterDnsblEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterFortishield:ObjectEmailfilterFortishield":
                return new ObjectEmailfilterFortishield(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterIptrust:ObjectEmailfilterIptrust":
                return new ObjectEmailfilterIptrust(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterIptrustEntries:ObjectEmailfilterIptrustEntries":
                return new ObjectEmailfilterIptrustEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterMheader:ObjectEmailfilterMheader":
                return new ObjectEmailfilterMheader(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterMheaderEntries:ObjectEmailfilterMheaderEntries":
                return new ObjectEmailfilterMheaderEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterOptions:ObjectEmailfilterOptions":
                return new ObjectEmailfilterOptions(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterProfile:ObjectEmailfilterProfile":
                return new ObjectEmailfilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterProfileGmail:ObjectEmailfilterProfileGmail":
                return new ObjectEmailfilterProfileGmail(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterProfileImap:ObjectEmailfilterProfileImap":
                return new ObjectEmailfilterProfileImap(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterProfileMapi:ObjectEmailfilterProfileMapi":
                return new ObjectEmailfilterProfileMapi(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterProfileMsnhotmail:ObjectEmailfilterProfileMsnhotmail":
                return new ObjectEmailfilterProfileMsnhotmail(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterProfilePop3:ObjectEmailfilterProfilePop3":
                return new ObjectEmailfilterProfilePop3(name, <any>undefined, { urn })
            case "fortimanager:index/objectEmailfilterProfileSmtp:ObjectEmailfilterProfileSmtp":
                return new ObjectEmailfilterProfileSmtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectEndpointcontrolFctems:ObjectEndpointcontrolFctems":
                return new ObjectEndpointcontrolFctems(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerDataplan:ObjectExtendercontrollerDataplan":
                return new ObjectExtendercontrollerDataplan(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofile:ObjectExtendercontrollerExtenderprofile":
                return new ObjectExtendercontrollerExtenderprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularControllerreport:ObjectExtendercontrollerExtenderprofileCellularControllerreport":
                return new ObjectExtendercontrollerExtenderprofileCellularControllerreport(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularModem1:ObjectExtendercontrollerExtenderprofileCellularModem1":
                return new ObjectExtendercontrollerExtenderprofileCellularModem1(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularModem1Autoswitch:ObjectExtendercontrollerExtenderprofileCellularModem1Autoswitch":
                return new ObjectExtendercontrollerExtenderprofileCellularModem1Autoswitch(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularModem2:ObjectExtendercontrollerExtenderprofileCellularModem2":
                return new ObjectExtendercontrollerExtenderprofileCellularModem2(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularModem2Autoswitch:ObjectExtendercontrollerExtenderprofileCellularModem2Autoswitch":
                return new ObjectExtendercontrollerExtenderprofileCellularModem2Autoswitch(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularSmsnotification:ObjectExtendercontrollerExtenderprofileCellularSmsnotification":
                return new ObjectExtendercontrollerExtenderprofileCellularSmsnotification(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularSmsnotificationAlert:ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlert":
                return new ObjectExtendercontrollerExtenderprofileCellularSmsnotificationAlert(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver:ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver":
                return new ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove:ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove":
                return new ObjectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileLanextension:ObjectExtendercontrollerExtenderprofileLanextension":
                return new ObjectExtendercontrollerExtenderprofileLanextension(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerExtenderprofileLanextensionBackhaul:ObjectExtendercontrollerExtenderprofileLanextensionBackhaul":
                return new ObjectExtendercontrollerExtenderprofileLanextensionBackhaul(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerSimProfile:ObjectExtendercontrollerSimProfile":
                return new ObjectExtendercontrollerSimProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerSimProfileAutoswitchProfile:ObjectExtendercontrollerSimProfileAutoswitchProfile":
                return new ObjectExtendercontrollerSimProfileAutoswitchProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtendercontrollerTemplate:ObjectExtendercontrollerTemplate":
                return new ObjectExtendercontrollerTemplate(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerDataplan:ObjectExtensioncontrollerDataplan":
                return new ObjectExtensioncontrollerDataplan(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofile:ObjectExtensioncontrollerExtenderprofile":
                return new ObjectExtensioncontrollerExtenderprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellular:ObjectExtensioncontrollerExtenderprofileCellular":
                return new ObjectExtensioncontrollerExtenderprofileCellular(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularControllerreport:ObjectExtensioncontrollerExtenderprofileCellularControllerreport":
                return new ObjectExtensioncontrollerExtenderprofileCellularControllerreport(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularModem1:ObjectExtensioncontrollerExtenderprofileCellularModem1":
                return new ObjectExtensioncontrollerExtenderprofileCellularModem1(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularModem1Autoswitch:ObjectExtensioncontrollerExtenderprofileCellularModem1Autoswitch":
                return new ObjectExtensioncontrollerExtenderprofileCellularModem1Autoswitch(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularModem2:ObjectExtensioncontrollerExtenderprofileCellularModem2":
                return new ObjectExtensioncontrollerExtenderprofileCellularModem2(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularModem2Autoswitch:ObjectExtensioncontrollerExtenderprofileCellularModem2Autoswitch":
                return new ObjectExtensioncontrollerExtenderprofileCellularModem2Autoswitch(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularSmsnotification:ObjectExtensioncontrollerExtenderprofileCellularSmsnotification":
                return new ObjectExtensioncontrollerExtenderprofileCellularSmsnotification(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert:ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert":
                return new ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver:ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver":
                return new ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove:ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove":
                return new ObjectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileLanextension:ObjectExtensioncontrollerExtenderprofileLanextension":
                return new ObjectExtensioncontrollerExtenderprofileLanextension(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileLanextensionBackhaul:ObjectExtensioncontrollerExtenderprofileLanextensionBackhaul":
                return new ObjectExtensioncontrollerExtenderprofileLanextensionBackhaul(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileLanextensionBackhaulMove:ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMove":
                return new ObjectExtensioncontrollerExtenderprofileLanextensionBackhaulMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileWifi:ObjectExtensioncontrollerExtenderprofileWifi":
                return new ObjectExtensioncontrollerExtenderprofileWifi(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileWifiRadio1:ObjectExtensioncontrollerExtenderprofileWifiRadio1":
                return new ObjectExtensioncontrollerExtenderprofileWifiRadio1(name, <any>undefined, { urn })
            case "fortimanager:index/objectExtensioncontrollerExtenderprofileWifiRadio2:ObjectExtensioncontrollerExtenderprofileWifiRadio2":
                return new ObjectExtensioncontrollerExtenderprofileWifiRadio2(name, <any>undefined, { urn })
            case "fortimanager:index/objectFilefilterProfile:ObjectFilefilterProfile":
                return new ObjectFilefilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectFilefilterProfileRules:ObjectFilefilterProfileRules":
                return new ObjectFilefilterProfileRules(name, <any>undefined, { urn })
            case "fortimanager:index/objectFilefilterProfileRulesMove:ObjectFilefilterProfileRulesMove":
                return new ObjectFilefilterProfileRulesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6:ObjectFirewallAccessproxy6":
                return new ObjectFirewallAccessproxy6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6Apigateway6:ObjectFirewallAccessproxy6Apigateway6":
                return new ObjectFirewallAccessproxy6Apigateway6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6Apigateway6Quic:ObjectFirewallAccessproxy6Apigateway6Quic":
                return new ObjectFirewallAccessproxy6Apigateway6Quic(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6Apigateway6Realservers:ObjectFirewallAccessproxy6Apigateway6Realservers":
                return new ObjectFirewallAccessproxy6Apigateway6Realservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6Apigateway6Sslciphersuites:ObjectFirewallAccessproxy6Apigateway6Sslciphersuites":
                return new ObjectFirewallAccessproxy6Apigateway6Sslciphersuites(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6Apigateway:ObjectFirewallAccessproxy6Apigateway":
                return new ObjectFirewallAccessproxy6Apigateway(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6ApigatewayQuic:ObjectFirewallAccessproxy6ApigatewayQuic":
                return new ObjectFirewallAccessproxy6ApigatewayQuic(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6ApigatewayRealservers:ObjectFirewallAccessproxy6ApigatewayRealservers":
                return new ObjectFirewallAccessproxy6ApigatewayRealservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6ApigatewaySslciphersuites:ObjectFirewallAccessproxy6ApigatewaySslciphersuites":
                return new ObjectFirewallAccessproxy6ApigatewaySslciphersuites(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy6Move:ObjectFirewallAccessproxy6Move":
                return new ObjectFirewallAccessproxy6Move(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxy:ObjectFirewallAccessproxy":
                return new ObjectFirewallAccessproxy(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigateway6:ObjectFirewallAccessproxyApigateway6":
                return new ObjectFirewallAccessproxyApigateway6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigateway6Quic:ObjectFirewallAccessproxyApigateway6Quic":
                return new ObjectFirewallAccessproxyApigateway6Quic(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigateway6Realservers:ObjectFirewallAccessproxyApigateway6Realservers":
                return new ObjectFirewallAccessproxyApigateway6Realservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigateway6Sslciphersuites:ObjectFirewallAccessproxyApigateway6Sslciphersuites":
                return new ObjectFirewallAccessproxyApigateway6Sslciphersuites(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigateway:ObjectFirewallAccessproxyApigateway":
                return new ObjectFirewallAccessproxyApigateway(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigatewayQuic:ObjectFirewallAccessproxyApigatewayQuic":
                return new ObjectFirewallAccessproxyApigatewayQuic(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigatewayRealservers:ObjectFirewallAccessproxyApigatewayRealservers":
                return new ObjectFirewallAccessproxyApigatewayRealservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyApigatewaySslciphersuites:ObjectFirewallAccessproxyApigatewaySslciphersuites":
                return new ObjectFirewallAccessproxyApigatewaySslciphersuites(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyMove:ObjectFirewallAccessproxyMove":
                return new ObjectFirewallAccessproxyMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyRealservers:ObjectFirewallAccessproxyRealservers":
                return new ObjectFirewallAccessproxyRealservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyServerpubkeyauthsettings:ObjectFirewallAccessproxyServerpubkeyauthsettings":
                return new ObjectFirewallAccessproxyServerpubkeyauthsettings(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxysshclientcert:ObjectFirewallAccessproxysshclientcert":
                return new ObjectFirewallAccessproxysshclientcert(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxysshclientcertCertextension:ObjectFirewallAccessproxysshclientcertCertextension":
                return new ObjectFirewallAccessproxysshclientcertCertextension(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxysshclientcertMove:ObjectFirewallAccessproxysshclientcertMove":
                return new ObjectFirewallAccessproxysshclientcertMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAccessproxyvirtualhost:ObjectFirewallAccessproxyvirtualhost":
                return new ObjectFirewallAccessproxyvirtualhost(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress6:ObjectFirewallAddress6":
                return new ObjectFirewallAddress6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress6List:ObjectFirewallAddress6List":
                return new ObjectFirewallAddress6List(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress6Subnetsegment:ObjectFirewallAddress6Subnetsegment":
                return new ObjectFirewallAddress6Subnetsegment(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress6Tagging:ObjectFirewallAddress6Tagging":
                return new ObjectFirewallAddress6Tagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress6template:ObjectFirewallAddress6template":
                return new ObjectFirewallAddress6template(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress6templateSubnetsegment:ObjectFirewallAddress6templateSubnetsegment":
                return new ObjectFirewallAddress6templateSubnetsegment(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress6templateSubnetsegmentValues:ObjectFirewallAddress6templateSubnetsegmentValues":
                return new ObjectFirewallAddress6templateSubnetsegmentValues(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddress:ObjectFirewallAddress":
                return new ObjectFirewallAddress(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddressList:ObjectFirewallAddressList":
                return new ObjectFirewallAddressList(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddressTagging:ObjectFirewallAddressTagging":
                return new ObjectFirewallAddressTagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddrgrp6:ObjectFirewallAddrgrp6":
                return new ObjectFirewallAddrgrp6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddrgrp6Tagging:ObjectFirewallAddrgrp6Tagging":
                return new ObjectFirewallAddrgrp6Tagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddrgrp:ObjectFirewallAddrgrp":
                return new ObjectFirewallAddrgrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallAddrgrpTagging:ObjectFirewallAddrgrpTagging":
                return new ObjectFirewallAddrgrpTagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallCarrierendpointbwl:ObjectFirewallCarrierendpointbwl":
                return new ObjectFirewallCarrierendpointbwl(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallCasbprofile:ObjectFirewallCasbprofile":
                return new ObjectFirewallCasbprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallCasbprofileMove:ObjectFirewallCasbprofileMove":
                return new ObjectFirewallCasbprofileMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallCasbprofileSaasapplication:ObjectFirewallCasbprofileSaasapplication":
                return new ObjectFirewallCasbprofileSaasapplication(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallCasbprofileSaasapplicationAccessrule:ObjectFirewallCasbprofileSaasapplicationAccessrule":
                return new ObjectFirewallCasbprofileSaasapplicationAccessrule(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallCasbprofileSaasapplicationCustomcontrol:ObjectFirewallCasbprofileSaasapplicationCustomcontrol":
                return new ObjectFirewallCasbprofileSaasapplicationCustomcontrol(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallCasbprofileSaasapplicationCustomcontrolOption:ObjectFirewallCasbprofileSaasapplicationCustomcontrolOption":
                return new ObjectFirewallCasbprofileSaasapplicationCustomcontrolOption(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallDecryptedtrafficmirror:ObjectFirewallDecryptedtrafficmirror":
                return new ObjectFirewallDecryptedtrafficmirror(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtp:ObjectFirewallGtp":
                return new ObjectFirewallGtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpApn:ObjectFirewallGtpApn":
                return new ObjectFirewallGtpApn(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpIeremovepolicy:ObjectFirewallGtpIeremovepolicy":
                return new ObjectFirewallGtpIeremovepolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpIevalidation:ObjectFirewallGtpIevalidation":
                return new ObjectFirewallGtpIevalidation(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpImsi:ObjectFirewallGtpImsi":
                return new ObjectFirewallGtpImsi(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpIppolicy:ObjectFirewallGtpIppolicy":
                return new ObjectFirewallGtpIppolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpMessageratelimit:ObjectFirewallGtpMessageratelimit":
                return new ObjectFirewallGtpMessageratelimit(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpMessageratelimitv0:ObjectFirewallGtpMessageratelimitv0":
                return new ObjectFirewallGtpMessageratelimitv0(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpMessageratelimitv1:ObjectFirewallGtpMessageratelimitv1":
                return new ObjectFirewallGtpMessageratelimitv1(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpMessageratelimitv2:ObjectFirewallGtpMessageratelimitv2":
                return new ObjectFirewallGtpMessageratelimitv2(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpNoippolicy:ObjectFirewallGtpNoippolicy":
                return new ObjectFirewallGtpNoippolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpPerapnshaper:ObjectFirewallGtpPerapnshaper":
                return new ObjectFirewallGtpPerapnshaper(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpPolicy:ObjectFirewallGtpPolicy":
                return new ObjectFirewallGtpPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallGtpPolicyv2:ObjectFirewallGtpPolicyv2":
                return new ObjectFirewallGtpPolicyv2(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallIdentitybasedroute:ObjectFirewallIdentitybasedroute":
                return new ObjectFirewallIdentitybasedroute(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallIdentitybasedrouteRule:ObjectFirewallIdentitybasedrouteRule":
                return new ObjectFirewallIdentitybasedrouteRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetservice:ObjectFirewallInternetservice":
                return new ObjectFirewallInternetservice(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetserviceEntry:ObjectFirewallInternetserviceEntry":
                return new ObjectFirewallInternetserviceEntry(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetserviceaddition:ObjectFirewallInternetserviceaddition":
                return new ObjectFirewallInternetserviceaddition(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetserviceadditionEntry:ObjectFirewallInternetserviceadditionEntry":
                return new ObjectFirewallInternetserviceadditionEntry(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetserviceadditionEntryPortrange:ObjectFirewallInternetserviceadditionEntryPortrange":
                return new ObjectFirewallInternetserviceadditionEntryPortrange(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetservicecustom:ObjectFirewallInternetservicecustom":
                return new ObjectFirewallInternetservicecustom(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetservicecustomEntry:ObjectFirewallInternetservicecustomEntry":
                return new ObjectFirewallInternetservicecustomEntry(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetservicecustomEntryPortrange:ObjectFirewallInternetservicecustomEntryPortrange":
                return new ObjectFirewallInternetservicecustomEntryPortrange(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetservicecustomgroup:ObjectFirewallInternetservicecustomgroup":
                return new ObjectFirewallInternetservicecustomgroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetservicegroup:ObjectFirewallInternetservicegroup":
                return new ObjectFirewallInternetservicegroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallInternetservicename:ObjectFirewallInternetservicename":
                return new ObjectFirewallInternetservicename(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallIppool6:ObjectFirewallIppool6":
                return new ObjectFirewallIppool6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallIppool:ObjectFirewallIppool":
                return new ObjectFirewallIppool(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallIppoolGrp:ObjectFirewallIppoolGrp":
                return new ObjectFirewallIppoolGrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallLdbmonitor:ObjectFirewallLdbmonitor":
                return new ObjectFirewallLdbmonitor(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallMmsprofile:ObjectFirewallMmsprofile":
                return new ObjectFirewallMmsprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallMulticastaddress6:ObjectFirewallMulticastaddress6":
                return new ObjectFirewallMulticastaddress6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallMulticastaddress6Tagging:ObjectFirewallMulticastaddress6Tagging":
                return new ObjectFirewallMulticastaddress6Tagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallMulticastaddress:ObjectFirewallMulticastaddress":
                return new ObjectFirewallMulticastaddress(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallMulticastaddressTagging:ObjectFirewallMulticastaddressTagging":
                return new ObjectFirewallMulticastaddressTagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallNetworkservicedynamic:ObjectFirewallNetworkservicedynamic":
                return new ObjectFirewallNetworkservicedynamic(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfilegroup:ObjectFirewallProfilegroup":
                return new ObjectFirewallProfilegroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptions:ObjectFirewallProfileprotocoloptions":
                return new ObjectFirewallProfileprotocoloptions(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsCifs:ObjectFirewallProfileprotocoloptionsCifs":
                return new ObjectFirewallProfileprotocoloptionsCifs(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsCifsFilefilterEntries:ObjectFirewallProfileprotocoloptionsCifsFilefilterEntries":
                return new ObjectFirewallProfileprotocoloptionsCifsFilefilterEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove:ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove":
                return new ObjectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsCifsServerkeytab:ObjectFirewallProfileprotocoloptionsCifsServerkeytab":
                return new ObjectFirewallProfileprotocoloptionsCifsServerkeytab(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsDns:ObjectFirewallProfileprotocoloptionsDns":
                return new ObjectFirewallProfileprotocoloptionsDns(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsFtp:ObjectFirewallProfileprotocoloptionsFtp":
                return new ObjectFirewallProfileprotocoloptionsFtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsHttp:ObjectFirewallProfileprotocoloptionsHttp":
                return new ObjectFirewallProfileprotocoloptionsHttp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsImap:ObjectFirewallProfileprotocoloptionsImap":
                return new ObjectFirewallProfileprotocoloptionsImap(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsMailsignature:ObjectFirewallProfileprotocoloptionsMailsignature":
                return new ObjectFirewallProfileprotocoloptionsMailsignature(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsMapi:ObjectFirewallProfileprotocoloptionsMapi":
                return new ObjectFirewallProfileprotocoloptionsMapi(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsNntp:ObjectFirewallProfileprotocoloptionsNntp":
                return new ObjectFirewallProfileprotocoloptionsNntp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsPop3:ObjectFirewallProfileprotocoloptionsPop3":
                return new ObjectFirewallProfileprotocoloptionsPop3(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsSmtp:ObjectFirewallProfileprotocoloptionsSmtp":
                return new ObjectFirewallProfileprotocoloptionsSmtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProfileprotocoloptionsSsh:ObjectFirewallProfileprotocoloptionsSsh":
                return new ObjectFirewallProfileprotocoloptionsSsh(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProxyaddress:ObjectFirewallProxyaddress":
                return new ObjectFirewallProxyaddress(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProxyaddressHeadergroup:ObjectFirewallProxyaddressHeadergroup":
                return new ObjectFirewallProxyaddressHeadergroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProxyaddressTagging:ObjectFirewallProxyaddressTagging":
                return new ObjectFirewallProxyaddressTagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProxyaddrgrp:ObjectFirewallProxyaddrgrp":
                return new ObjectFirewallProxyaddrgrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallProxyaddrgrpTagging:ObjectFirewallProxyaddrgrpTagging":
                return new ObjectFirewallProxyaddrgrpTagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallScheduleGroup:ObjectFirewallScheduleGroup":
                return new ObjectFirewallScheduleGroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallScheduleOnetime:ObjectFirewallScheduleOnetime":
                return new ObjectFirewallScheduleOnetime(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallScheduleRecurring:ObjectFirewallScheduleRecurring":
                return new ObjectFirewallScheduleRecurring(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallServiceCategory:ObjectFirewallServiceCategory":
                return new ObjectFirewallServiceCategory(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallServiceCustom:ObjectFirewallServiceCustom":
                return new ObjectFirewallServiceCustom(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallServiceGroup:ObjectFirewallServiceGroup":
                return new ObjectFirewallServiceGroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallShaperPeripshaper:ObjectFirewallShaperPeripshaper":
                return new ObjectFirewallShaperPeripshaper(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallShaperTrafficshaper:ObjectFirewallShaperTrafficshaper":
                return new ObjectFirewallShaperTrafficshaper(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallShapingprofile:ObjectFirewallShapingprofile":
                return new ObjectFirewallShapingprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallShapingprofileShapingentries:ObjectFirewallShapingprofileShapingentries":
                return new ObjectFirewallShapingprofileShapingentries(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallShapingprofileShapingentriesMove:ObjectFirewallShapingprofileShapingentriesMove":
                return new ObjectFirewallShapingprofileShapingentriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSshLocalca:ObjectFirewallSshLocalca":
                return new ObjectFirewallSshLocalca(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofile:ObjectFirewallSslsshprofile":
                return new ObjectFirewallSslsshprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileDot:ObjectFirewallSslsshprofileDot":
                return new ObjectFirewallSslsshprofileDot(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileEchoutersni:ObjectFirewallSslsshprofileEchoutersni":
                return new ObjectFirewallSslsshprofileEchoutersni(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileFtps:ObjectFirewallSslsshprofileFtps":
                return new ObjectFirewallSslsshprofileFtps(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileHttps:ObjectFirewallSslsshprofileHttps":
                return new ObjectFirewallSslsshprofileHttps(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileImaps:ObjectFirewallSslsshprofileImaps":
                return new ObjectFirewallSslsshprofileImaps(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofilePop3s:ObjectFirewallSslsshprofilePop3s":
                return new ObjectFirewallSslsshprofilePop3s(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileSmtps:ObjectFirewallSslsshprofileSmtps":
                return new ObjectFirewallSslsshprofileSmtps(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileSsh:ObjectFirewallSslsshprofileSsh":
                return new ObjectFirewallSslsshprofileSsh(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileSsl:ObjectFirewallSslsshprofileSsl":
                return new ObjectFirewallSslsshprofileSsl(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileSslexempt:ObjectFirewallSslsshprofileSslexempt":
                return new ObjectFirewallSslsshprofileSslexempt(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallSslsshprofileSslserver:ObjectFirewallSslsshprofileSslserver":
                return new ObjectFirewallSslsshprofileSslserver(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallTrafficclass:ObjectFirewallTrafficclass":
                return new ObjectFirewallTrafficclass(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVendormac:ObjectFirewallVendormac":
                return new ObjectFirewallVendormac(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip46:ObjectFirewallVip46":
                return new ObjectFirewallVip46(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip46Realservers:ObjectFirewallVip46Realservers":
                return new ObjectFirewallVip46Realservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip64:ObjectFirewallVip64":
                return new ObjectFirewallVip64(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip64Realservers:ObjectFirewallVip64Realservers":
                return new ObjectFirewallVip64Realservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip6:ObjectFirewallVip6":
                return new ObjectFirewallVip6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip6Quic:ObjectFirewallVip6Quic":
                return new ObjectFirewallVip6Quic(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip6Realservers:ObjectFirewallVip6Realservers":
                return new ObjectFirewallVip6Realservers(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVip:ObjectFirewallVip":
                return new ObjectFirewallVip(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVipGslbpublicips:ObjectFirewallVipGslbpublicips":
                return new ObjectFirewallVipGslbpublicips(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVipQuic:ObjectFirewallVipQuic":
                return new ObjectFirewallVipQuic(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVipgrp46:ObjectFirewallVipgrp46":
                return new ObjectFirewallVipgrp46(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVipgrp64:ObjectFirewallVipgrp64":
                return new ObjectFirewallVipgrp64(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVipgrp6:ObjectFirewallVipgrp6":
                return new ObjectFirewallVipgrp6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallVipgrp:ObjectFirewallVipgrp":
                return new ObjectFirewallVipgrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallWildcardfqdnCustom:ObjectFirewallWildcardfqdnCustom":
                return new ObjectFirewallWildcardfqdnCustom(name, <any>undefined, { urn })
            case "fortimanager:index/objectFirewallWildcardfqdnGroup:ObjectFirewallWildcardfqdnGroup":
                return new ObjectFirewallWildcardfqdnGroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectFmgDeviceBlueprint:ObjectFmgDeviceBlueprint":
                return new ObjectFmgDeviceBlueprint(name, <any>undefined, { urn })
            case "fortimanager:index/objectFmgFabricAuthorizationTemplate:ObjectFmgFabricAuthorizationTemplate":
                return new ObjectFmgFabricAuthorizationTemplate(name, <any>undefined, { urn })
            case "fortimanager:index/objectFmgVariable:ObjectFmgVariable":
                return new ObjectFmgVariable(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlan:ObjectFspVlan":
                return new ObjectFspVlan(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlanInterface:ObjectFspVlanInterface":
                return new ObjectFspVlanInterface(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlanInterfaceIpv6:ObjectFspVlanInterfaceIpv6":
                return new ObjectFspVlanInterfaceIpv6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlanInterfaceIpv6Ip6delegatedprefixlist:ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist":
                return new ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlanInterfaceIpv6Ip6extraaddr:ObjectFspVlanInterfaceIpv6Ip6extraaddr":
                return new ObjectFspVlanInterfaceIpv6Ip6extraaddr(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlanInterfaceIpv6Vrrp6:ObjectFspVlanInterfaceIpv6Vrrp6":
                return new ObjectFspVlanInterfaceIpv6Vrrp6(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlanInterfaceSecondaryip:ObjectFspVlanInterfaceSecondaryip":
                return new ObjectFspVlanInterfaceSecondaryip(name, <any>undefined, { urn })
            case "fortimanager:index/objectFspVlanInterfaceVrrp:ObjectFspVlanInterfaceVrrp":
                return new ObjectFspVlanInterfaceVrrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectGlobalIpsSensor:ObjectGlobalIpsSensor":
                return new ObjectGlobalIpsSensor(name, <any>undefined, { urn })
            case "fortimanager:index/objectGlobalIpsSensorEntries:ObjectGlobalIpsSensorEntries":
                return new ObjectGlobalIpsSensorEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectGlobalIpsSensorEntriesExemptip:ObjectGlobalIpsSensorEntriesExemptip":
                return new ObjectGlobalIpsSensorEntriesExemptip(name, <any>undefined, { urn })
            case "fortimanager:index/objectGlobalIpsSensorOverride:ObjectGlobalIpsSensorOverride":
                return new ObjectGlobalIpsSensorOverride(name, <any>undefined, { urn })
            case "fortimanager:index/objectIcapProfile:ObjectIcapProfile":
                return new ObjectIcapProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectIcapProfileRespmodforwardrules:ObjectIcapProfileRespmodforwardrules":
                return new ObjectIcapProfileRespmodforwardrules(name, <any>undefined, { urn })
            case "fortimanager:index/objectIcapProfileRespmodforwardrulesHeadergroup:ObjectIcapProfileRespmodforwardrulesHeadergroup":
                return new ObjectIcapProfileRespmodforwardrulesHeadergroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectIcapServer:ObjectIcapServer":
                return new ObjectIcapServer(name, <any>undefined, { urn })
            case "fortimanager:index/objectIpsCustom:ObjectIpsCustom":
                return new ObjectIpsCustom(name, <any>undefined, { urn })
            case "fortimanager:index/objectIpsSensor:ObjectIpsSensor":
                return new ObjectIpsSensor(name, <any>undefined, { urn })
            case "fortimanager:index/objectIpsSensorEntries:ObjectIpsSensorEntries":
                return new ObjectIpsSensorEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectIpsSensorEntriesExemptip:ObjectIpsSensorEntriesExemptip":
                return new ObjectIpsSensorEntriesExemptip(name, <any>undefined, { urn })
            case "fortimanager:index/objectIpsSensorEntriesMove:ObjectIpsSensorEntriesMove":
                return new ObjectIpsSensorEntriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectLogCustomfield:ObjectLogCustomfield":
                return new ObjectLogCustomfield(name, <any>undefined, { urn })
            case "fortimanager:index/objectLogNpuserver:ObjectLogNpuserver":
                return new ObjectLogNpuserver(name, <any>undefined, { urn })
            case "fortimanager:index/objectLogNpuserverServergroup:ObjectLogNpuserverServergroup":
                return new ObjectLogNpuserverServergroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectLogNpuserverServerinfo:ObjectLogNpuserverServerinfo":
                return new ObjectLogNpuserverServerinfo(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterAccesslist6:ObjectRouterAccesslist6":
                return new ObjectRouterAccesslist6(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterAccesslist6Rule:ObjectRouterAccesslist6Rule":
                return new ObjectRouterAccesslist6Rule(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterAccesslist:ObjectRouterAccesslist":
                return new ObjectRouterAccesslist(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterAccesslistRule:ObjectRouterAccesslistRule":
                return new ObjectRouterAccesslistRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterAspathlist:ObjectRouterAspathlist":
                return new ObjectRouterAspathlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterAspathlistRule:ObjectRouterAspathlistRule":
                return new ObjectRouterAspathlistRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterCommunitylist:ObjectRouterCommunitylist":
                return new ObjectRouterCommunitylist(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterCommunitylistRule:ObjectRouterCommunitylistRule":
                return new ObjectRouterCommunitylistRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterPrefixlist6:ObjectRouterPrefixlist6":
                return new ObjectRouterPrefixlist6(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterPrefixlist6Rule:ObjectRouterPrefixlist6Rule":
                return new ObjectRouterPrefixlist6Rule(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterPrefixlist:ObjectRouterPrefixlist":
                return new ObjectRouterPrefixlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterPrefixlistRule:ObjectRouterPrefixlistRule":
                return new ObjectRouterPrefixlistRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterRoutemap:ObjectRouterRoutemap":
                return new ObjectRouterRoutemap(name, <any>undefined, { urn })
            case "fortimanager:index/objectRouterRoutemapRule:ObjectRouterRoutemapRule":
                return new ObjectRouterRoutemapRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectSctpfilterProfile:ObjectSctpfilterProfile":
                return new ObjectSctpfilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSctpfilterProfilePpidfilters:ObjectSctpfilterProfilePpidfilters":
                return new ObjectSctpfilterProfilePpidfilters(name, <any>undefined, { urn })
            case "fortimanager:index/objectSpamfilterBwl:ObjectSpamfilterBwl":
                return new ObjectSpamfilterBwl(name, <any>undefined, { urn })
            case "fortimanager:index/objectSpamfilterBword:ObjectSpamfilterBword":
                return new ObjectSpamfilterBword(name, <any>undefined, { urn })
            case "fortimanager:index/objectSpamfilterDnsbl:ObjectSpamfilterDnsbl":
                return new ObjectSpamfilterDnsbl(name, <any>undefined, { urn })
            case "fortimanager:index/objectSpamfilterIptrust:ObjectSpamfilterIptrust":
                return new ObjectSpamfilterIptrust(name, <any>undefined, { urn })
            case "fortimanager:index/objectSpamfilterMheader:ObjectSpamfilterMheader":
                return new ObjectSpamfilterMheader(name, <any>undefined, { urn })
            case "fortimanager:index/objectSpamfilterProfile:ObjectSpamfilterProfile":
                return new ObjectSpamfilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSshfilterProfile:ObjectSshfilterProfile":
                return new ObjectSshfilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSshfilterProfileShellcommands:ObjectSshfilterProfileShellcommands":
                return new ObjectSshfilterProfileShellcommands(name, <any>undefined, { urn })
            case "fortimanager:index/objectSshfilterProfileShellcommandsMove:ObjectSshfilterProfileShellcommandsMove":
                return new ObjectSshfilterProfileShellcommandsMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerAclGroup:ObjectSwitchcontrollerAclGroup":
                return new ObjectSwitchcontrollerAclGroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerAclIngress:ObjectSwitchcontrollerAclIngress":
                return new ObjectSwitchcontrollerAclIngress(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerAclIngressAction:ObjectSwitchcontrollerAclIngressAction":
                return new ObjectSwitchcontrollerAclIngressAction(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerAclIngressClassifier:ObjectSwitchcontrollerAclIngressClassifier":
                return new ObjectSwitchcontrollerAclIngressClassifier(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerCustomcommand:ObjectSwitchcontrollerCustomcommand":
                return new ObjectSwitchcontrollerCustomcommand(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerDslPolicy:ObjectSwitchcontrollerDslPolicy":
                return new ObjectSwitchcontrollerDslPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerDynamicportpolicy:ObjectSwitchcontrollerDynamicportpolicy":
                return new ObjectSwitchcontrollerDynamicportpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerDynamicportpolicyPolicy:ObjectSwitchcontrollerDynamicportpolicyPolicy":
                return new ObjectSwitchcontrollerDynamicportpolicyPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerDynamicportpolicyPolicyMove:ObjectSwitchcontrollerDynamicportpolicyPolicyMove":
                return new ObjectSwitchcontrollerDynamicportpolicyPolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerFortilinksettings:ObjectSwitchcontrollerFortilinksettings":
                return new ObjectSwitchcontrollerFortilinksettings(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerFortilinksettingsNacports:ObjectSwitchcontrollerFortilinksettingsNacports":
                return new ObjectSwitchcontrollerFortilinksettingsNacports(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerLldpprofile:ObjectSwitchcontrollerLldpprofile":
                return new ObjectSwitchcontrollerLldpprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerLldpprofileCustomtlvs:ObjectSwitchcontrollerLldpprofileCustomtlvs":
                return new ObjectSwitchcontrollerLldpprofileCustomtlvs(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerMacpolicy:ObjectSwitchcontrollerMacpolicy":
                return new ObjectSwitchcontrollerMacpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerManagedswitch:ObjectSwitchcontrollerManagedswitch":
                return new ObjectSwitchcontrollerManagedswitch(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerManagedswitchCustomcommand:ObjectSwitchcontrollerManagedswitchCustomcommand":
                return new ObjectSwitchcontrollerManagedswitchCustomcommand(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient:ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient":
                return new ObjectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerManagedswitchPorts:ObjectSwitchcontrollerManagedswitchPorts":
                return new ObjectSwitchcontrollerManagedswitchPorts(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerManagedswitchVlan:ObjectSwitchcontrollerManagedswitchVlan":
                return new ObjectSwitchcontrollerManagedswitchVlan(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerPtpProfile:ObjectSwitchcontrollerPtpProfile":
                return new ObjectSwitchcontrollerPtpProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerQosDot1pmap:ObjectSwitchcontrollerQosDot1pmap":
                return new ObjectSwitchcontrollerQosDot1pmap(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerQosIpdscpmap:ObjectSwitchcontrollerQosIpdscpmap":
                return new ObjectSwitchcontrollerQosIpdscpmap(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerQosIpdscpmapMap:ObjectSwitchcontrollerQosIpdscpmapMap":
                return new ObjectSwitchcontrollerQosIpdscpmapMap(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerQosQospolicy:ObjectSwitchcontrollerQosQospolicy":
                return new ObjectSwitchcontrollerQosQospolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerQosQueuepolicy:ObjectSwitchcontrollerQosQueuepolicy":
                return new ObjectSwitchcontrollerQosQueuepolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerSecuritypolicy8021x:ObjectSwitchcontrollerSecuritypolicy8021x":
                return new ObjectSwitchcontrollerSecuritypolicy8021x(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerSwitchinterfacetag:ObjectSwitchcontrollerSwitchinterfacetag":
                return new ObjectSwitchcontrollerSwitchinterfacetag(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerTrafficpolicy:ObjectSwitchcontrollerTrafficpolicy":
                return new ObjectSwitchcontrollerTrafficpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSwitchcontrollerVlanpolicy:ObjectSwitchcontrollerVlanpolicy":
                return new ObjectSwitchcontrollerVlanpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemCustomlanguage:ObjectSystemCustomlanguage":
                return new ObjectSystemCustomlanguage(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemDhcpServer:ObjectSystemDhcpServer":
                return new ObjectSystemDhcpServer(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemDhcpServerExcluderange:ObjectSystemDhcpServerExcluderange":
                return new ObjectSystemDhcpServerExcluderange(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemDhcpServerIprange:ObjectSystemDhcpServerIprange":
                return new ObjectSystemDhcpServerIprange(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemDhcpServerOptions:ObjectSystemDhcpServerOptions":
                return new ObjectSystemDhcpServerOptions(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemDhcpServerReservedaddress:ObjectSystemDhcpServerReservedaddress":
                return new ObjectSystemDhcpServerReservedaddress(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemExternalresource:ObjectSystemExternalresource":
                return new ObjectSystemExternalresource(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemExternalresourceMove:ObjectSystemExternalresourceMove":
                return new ObjectSystemExternalresourceMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemFortiguard:ObjectSystemFortiguard":
                return new ObjectSystemFortiguard(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemGeoipcountry:ObjectSystemGeoipcountry":
                return new ObjectSystemGeoipcountry(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemGeoipoverride:ObjectSystemGeoipoverride":
                return new ObjectSystemGeoipoverride(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemGeoipoverrideIp6range:ObjectSystemGeoipoverrideIp6range":
                return new ObjectSystemGeoipoverrideIp6range(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemGeoipoverrideIprange:ObjectSystemGeoipoverrideIprange":
                return new ObjectSystemGeoipoverrideIprange(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemMeta:ObjectSystemMeta":
                return new ObjectSystemMeta(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemMetaSysMetaFields:ObjectSystemMetaSysMetaFields":
                return new ObjectSystemMetaSysMetaFields(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpu:ObjectSystemNpu":
                return new ObjectSystemNpu(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuBackgroundssescan:ObjectSystemNpuBackgroundssescan":
                return new ObjectSystemNpuBackgroundssescan(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuDosoptions:ObjectSystemNpuDosoptions":
                return new ObjectSystemNpuDosoptions(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuDswdtsprofile:ObjectSystemNpuDswdtsprofile":
                return new ObjectSystemNpuDswdtsprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuDswqueuedtsprofile:ObjectSystemNpuDswqueuedtsprofile":
                return new ObjectSystemNpuDswqueuedtsprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuFpanomaly:ObjectSystemNpuFpanomaly":
                return new ObjectSystemNpuFpanomaly(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuHpe:ObjectSystemNpuHpe":
                return new ObjectSystemNpuHpe(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuIcmpratectrl:ObjectSystemNpuIcmpratectrl":
                return new ObjectSystemNpuIcmpratectrl(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuIpreassembly:ObjectSystemNpuIpreassembly":
                return new ObjectSystemNpuIpreassembly(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuIsfnpqueues:ObjectSystemNpuIsfnpqueues":
                return new ObjectSystemNpuIsfnpqueues(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNpqueues:ObjectSystemNpuNpqueues":
                return new ObjectSystemNpuNpqueues(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNpqueuesEthernettype:ObjectSystemNpuNpqueuesEthernettype":
                return new ObjectSystemNpuNpqueuesEthernettype(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNpqueuesIpprotocol:ObjectSystemNpuNpqueuesIpprotocol":
                return new ObjectSystemNpuNpqueuesIpprotocol(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNpqueuesIpservice:ObjectSystemNpuNpqueuesIpservice":
                return new ObjectSystemNpuNpqueuesIpservice(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNpqueuesProfile:ObjectSystemNpuNpqueuesProfile":
                return new ObjectSystemNpuNpqueuesProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNpqueuesScheduler:ObjectSystemNpuNpqueuesScheduler":
                return new ObjectSystemNpuNpqueuesScheduler(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNputcam:ObjectSystemNpuNputcam":
                return new ObjectSystemNpuNputcam(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNputcamData:ObjectSystemNpuNputcamData":
                return new ObjectSystemNpuNputcamData(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNputcamMask:ObjectSystemNpuNputcamMask":
                return new ObjectSystemNpuNputcamMask(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNputcamMiract:ObjectSystemNpuNputcamMiract":
                return new ObjectSystemNpuNputcamMiract(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNputcamPriact:ObjectSystemNpuNputcamPriact":
                return new ObjectSystemNpuNputcamPriact(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNputcamSact:ObjectSystemNpuNputcamSact":
                return new ObjectSystemNpuNputcamSact(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuNputcamTact:ObjectSystemNpuNputcamTact":
                return new ObjectSystemNpuNputcamTact(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuPortcpumap:ObjectSystemNpuPortcpumap":
                return new ObjectSystemNpuPortcpumap(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuPortnpumap:ObjectSystemNpuPortnpumap":
                return new ObjectSystemNpuPortnpumap(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuPortpathoption:ObjectSystemNpuPortpathoption":
                return new ObjectSystemNpuPortpathoption(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuPriorityprotocol:ObjectSystemNpuPriorityprotocol":
                return new ObjectSystemNpuPriorityprotocol(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuSsehascan:ObjectSystemNpuSsehascan":
                return new ObjectSystemNpuSsehascan(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuSwehhash:ObjectSystemNpuSwehhash":
                return new ObjectSystemNpuSwehhash(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuSwtrhash:ObjectSystemNpuSwtrhash":
                return new ObjectSystemNpuSwtrhash(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuTcptimeoutprofile:ObjectSystemNpuTcptimeoutprofile":
                return new ObjectSystemNpuTcptimeoutprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemNpuUdptimeoutprofile:ObjectSystemNpuUdptimeoutprofile":
                return new ObjectSystemNpuUdptimeoutprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemObjecttagging:ObjectSystemObjecttagging":
                return new ObjectSystemObjecttagging(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroup:ObjectSystemReplacemsggroup":
                return new ObjectSystemReplacemsggroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupAdmin:ObjectSystemReplacemsggroupAdmin":
                return new ObjectSystemReplacemsggroupAdmin(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupAlertmail:ObjectSystemReplacemsggroupAlertmail":
                return new ObjectSystemReplacemsggroupAlertmail(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupAuth:ObjectSystemReplacemsggroupAuth":
                return new ObjectSystemReplacemsggroupAuth(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupAutomation:ObjectSystemReplacemsggroupAutomation":
                return new ObjectSystemReplacemsggroupAutomation(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupCustommessage:ObjectSystemReplacemsggroupCustommessage":
                return new ObjectSystemReplacemsggroupCustommessage(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupDevicedetectionportal:ObjectSystemReplacemsggroupDevicedetectionportal":
                return new ObjectSystemReplacemsggroupDevicedetectionportal(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupFortiguardwf:ObjectSystemReplacemsggroupFortiguardwf":
                return new ObjectSystemReplacemsggroupFortiguardwf(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupFtp:ObjectSystemReplacemsggroupFtp":
                return new ObjectSystemReplacemsggroupFtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupHttp:ObjectSystemReplacemsggroupHttp":
                return new ObjectSystemReplacemsggroupHttp(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupIcap:ObjectSystemReplacemsggroupIcap":
                return new ObjectSystemReplacemsggroupIcap(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupMail:ObjectSystemReplacemsggroupMail":
                return new ObjectSystemReplacemsggroupMail(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupNacquar:ObjectSystemReplacemsggroupNacquar":
                return new ObjectSystemReplacemsggroupNacquar(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupNntp:ObjectSystemReplacemsggroupNntp":
                return new ObjectSystemReplacemsggroupNntp(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupSpam:ObjectSystemReplacemsggroupSpam":
                return new ObjectSystemReplacemsggroupSpam(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupSslvpn:ObjectSystemReplacemsggroupSslvpn":
                return new ObjectSystemReplacemsggroupSslvpn(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupTrafficquota:ObjectSystemReplacemsggroupTrafficquota":
                return new ObjectSystemReplacemsggroupTrafficquota(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupUtm:ObjectSystemReplacemsggroupUtm":
                return new ObjectSystemReplacemsggroupUtm(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsggroupWebproxy:ObjectSystemReplacemsggroupWebproxy":
                return new ObjectSystemReplacemsggroupWebproxy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemReplacemsgimage:ObjectSystemReplacemsgimage":
                return new ObjectSystemReplacemsgimage(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnector:ObjectSystemSdnconnector":
                return new ObjectSystemSdnconnector(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorCompartmentlist:ObjectSystemSdnconnectorCompartmentlist":
                return new ObjectSystemSdnconnectorCompartmentlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorCompartmentlistMove:ObjectSystemSdnconnectorCompartmentlistMove":
                return new ObjectSystemSdnconnectorCompartmentlistMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorExternalaccountlist:ObjectSystemSdnconnectorExternalaccountlist":
                return new ObjectSystemSdnconnectorExternalaccountlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorExternalaccountlistMove:ObjectSystemSdnconnectorExternalaccountlistMove":
                return new ObjectSystemSdnconnectorExternalaccountlistMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorExternalip:ObjectSystemSdnconnectorExternalip":
                return new ObjectSystemSdnconnectorExternalip(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorExternalipMove:ObjectSystemSdnconnectorExternalipMove":
                return new ObjectSystemSdnconnectorExternalipMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorForwardingrule:ObjectSystemSdnconnectorForwardingrule":
                return new ObjectSystemSdnconnectorForwardingrule(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorForwardingruleMove:ObjectSystemSdnconnectorForwardingruleMove":
                return new ObjectSystemSdnconnectorForwardingruleMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorGcpprojectlist:ObjectSystemSdnconnectorGcpprojectlist":
                return new ObjectSystemSdnconnectorGcpprojectlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorGcpprojectlistMove:ObjectSystemSdnconnectorGcpprojectlistMove":
                return new ObjectSystemSdnconnectorGcpprojectlistMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorNic:ObjectSystemSdnconnectorNic":
                return new ObjectSystemSdnconnectorNic(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorNicIp:ObjectSystemSdnconnectorNicIp":
                return new ObjectSystemSdnconnectorNicIp(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorNicIpMove:ObjectSystemSdnconnectorNicIpMove":
                return new ObjectSystemSdnconnectorNicIpMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorNicMove:ObjectSystemSdnconnectorNicMove":
                return new ObjectSystemSdnconnectorNicMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorOciregionlist:ObjectSystemSdnconnectorOciregionlist":
                return new ObjectSystemSdnconnectorOciregionlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorOciregionlistMove:ObjectSystemSdnconnectorOciregionlistMove":
                return new ObjectSystemSdnconnectorOciregionlistMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorRoute:ObjectSystemSdnconnectorRoute":
                return new ObjectSystemSdnconnectorRoute(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorRouteMove:ObjectSystemSdnconnectorRouteMove":
                return new ObjectSystemSdnconnectorRouteMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorRoutetable:ObjectSystemSdnconnectorRoutetable":
                return new ObjectSystemSdnconnectorRoutetable(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorRoutetableMove:ObjectSystemSdnconnectorRoutetableMove":
                return new ObjectSystemSdnconnectorRoutetableMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorRoutetableRoute:ObjectSystemSdnconnectorRoutetableRoute":
                return new ObjectSystemSdnconnectorRoutetableRoute(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnconnectorRoutetableRouteMove:ObjectSystemSdnconnectorRoutetableRouteMove":
                return new ObjectSystemSdnconnectorRoutetableRouteMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSdnproxy:ObjectSystemSdnproxy":
                return new ObjectSystemSdnproxy(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemSmsserver:ObjectSystemSmsserver":
                return new ObjectSystemSmsserver(name, <any>undefined, { urn })
            case "fortimanager:index/objectSystemVirtualwirepair:ObjectSystemVirtualwirepair":
                return new ObjectSystemVirtualwirepair(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserAdgrp:ObjectUserAdgrp":
                return new ObjectUserAdgrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserCertificate:ObjectUserCertificate":
                return new ObjectUserCertificate(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserClearpass:ObjectUserClearpass":
                return new ObjectUserClearpass(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserConnector:ObjectUserConnector":
                return new ObjectUserConnector(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserDevice:ObjectUserDevice":
                return new ObjectUserDevice(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserDeviceaccesslist:ObjectUserDeviceaccesslist":
                return new ObjectUserDeviceaccesslist(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserDevicecategory:ObjectUserDevicecategory":
                return new ObjectUserDevicecategory(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserDevicegroup:ObjectUserDevicegroup":
                return new ObjectUserDevicegroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserDomaincontroller:ObjectUserDomaincontroller":
                return new ObjectUserDomaincontroller(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserDomaincontrollerExtraserver:ObjectUserDomaincontrollerExtraserver":
                return new ObjectUserDomaincontrollerExtraserver(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserExchange:ObjectUserExchange":
                return new ObjectUserExchange(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserExternalidentityprovider:ObjectUserExternalidentityprovider":
                return new ObjectUserExternalidentityprovider(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserFlexvm:ObjectUserFlexvm":
                return new ObjectUserFlexvm(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserFortitoken:ObjectUserFortitoken":
                return new ObjectUserFortitoken(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserFsso:ObjectUserFsso":
                return new ObjectUserFsso(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserFssopolling:ObjectUserFssopolling":
                return new ObjectUserFssopolling(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserFssopollingAdgrp:ObjectUserFssopollingAdgrp":
                return new ObjectUserFssopollingAdgrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserGroup:ObjectUserGroup":
                return new ObjectUserGroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserGroupMatch:ObjectUserGroupMatch":
                return new ObjectUserGroupMatch(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserJson:ObjectUserJson":
                return new ObjectUserJson(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserKrbkeytab:ObjectUserKrbkeytab":
                return new ObjectUserKrbkeytab(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserLdap:ObjectUserLdap":
                return new ObjectUserLdap(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserLocal:ObjectUserLocal":
                return new ObjectUserLocal(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserNsx:ObjectUserNsx":
                return new ObjectUserNsx(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserNsxService:ObjectUserNsxService":
                return new ObjectUserNsxService(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserPasswordpolicy:ObjectUserPasswordpolicy":
                return new ObjectUserPasswordpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserPeer:ObjectUserPeer":
                return new ObjectUserPeer(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserPeergrp:ObjectUserPeergrp":
                return new ObjectUserPeergrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserPop3:ObjectUserPop3":
                return new ObjectUserPop3(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserPxgrid:ObjectUserPxgrid":
                return new ObjectUserPxgrid(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserRadius:ObjectUserRadius":
                return new ObjectUserRadius(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserRadiusAccountingserver:ObjectUserRadiusAccountingserver":
                return new ObjectUserRadiusAccountingserver(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserSaml:ObjectUserSaml":
                return new ObjectUserSaml(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserSecurityexemptlist:ObjectUserSecurityexemptlist":
                return new ObjectUserSecurityexemptlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserSecurityexemptlistRule:ObjectUserSecurityexemptlistRule":
                return new ObjectUserSecurityexemptlistRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserTacacs:ObjectUserTacacs":
                return new ObjectUserTacacs(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserVcenter:ObjectUserVcenter":
                return new ObjectUserVcenter(name, <any>undefined, { urn })
            case "fortimanager:index/objectUserVcenterRule:ObjectUserVcenterRule":
                return new ObjectUserVcenterRule(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterKeyword:ObjectVideofilterKeyword":
                return new ObjectVideofilterKeyword(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterKeywordWord:ObjectVideofilterKeywordWord":
                return new ObjectVideofilterKeywordWord(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterProfile:ObjectVideofilterProfile":
                return new ObjectVideofilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterProfileFilters:ObjectVideofilterProfileFilters":
                return new ObjectVideofilterProfileFilters(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterProfileFiltersMove:ObjectVideofilterProfileFiltersMove":
                return new ObjectVideofilterProfileFiltersMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterProfileFortiguardcategory:ObjectVideofilterProfileFortiguardcategory":
                return new ObjectVideofilterProfileFortiguardcategory(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterProfileFortiguardcategoryFilters:ObjectVideofilterProfileFortiguardcategoryFilters":
                return new ObjectVideofilterProfileFortiguardcategoryFilters(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterProfileFortiguardcategoryFiltersMove:ObjectVideofilterProfileFortiguardcategoryFiltersMove":
                return new ObjectVideofilterProfileFortiguardcategoryFiltersMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterYoutubechannelfilter:ObjectVideofilterYoutubechannelfilter":
                return new ObjectVideofilterYoutubechannelfilter(name, <any>undefined, { urn })
            case "fortimanager:index/objectVideofilterYoutubekey:ObjectVideofilterYoutubekey":
                return new ObjectVideofilterYoutubekey(name, <any>undefined, { urn })
            case "fortimanager:index/objectVirtualpatchProfile:ObjectVirtualpatchProfile":
                return new ObjectVirtualpatchProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectVirtualpatchProfileExemption:ObjectVirtualpatchProfileExemption":
                return new ObjectVirtualpatchProfileExemption(name, <any>undefined, { urn })
            case "fortimanager:index/objectVoipProfile:ObjectVoipProfile":
                return new ObjectVoipProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectVoipProfileMsrp:ObjectVoipProfileMsrp":
                return new ObjectVoipProfileMsrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectVoipProfileSccp:ObjectVoipProfileSccp":
                return new ObjectVoipProfileSccp(name, <any>undefined, { urn })
            case "fortimanager:index/objectVoipProfileSip:ObjectVoipProfileSip":
                return new ObjectVoipProfileSip(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnCertificateCa:ObjectVpnCertificateCa":
                return new ObjectVpnCertificateCa(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnCertificateOcspserver:ObjectVpnCertificateOcspserver":
                return new ObjectVpnCertificateOcspserver(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnCertificateRemote:ObjectVpnCertificateRemote":
                return new ObjectVpnCertificateRemote(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnIpsecFec:ObjectVpnIpsecFec":
                return new ObjectVpnIpsecFec(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnIpsecFecMappings:ObjectVpnIpsecFecMappings":
                return new ObjectVpnIpsecFecMappings(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnIpsecFecMappingsMove:ObjectVpnIpsecFecMappingsMove":
                return new ObjectVpnIpsecFecMappingsMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebHostchecksoftware:ObjectVpnSslWebHostchecksoftware":
                return new ObjectVpnSslWebHostchecksoftware(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebHostchecksoftwareCheckitemlist:ObjectVpnSslWebHostchecksoftwareCheckitemlist":
                return new ObjectVpnSslWebHostchecksoftwareCheckitemlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortal:ObjectVpnSslWebPortal":
                return new ObjectVpnSslWebPortal(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalBookmarkgroup:ObjectVpnSslWebPortalBookmarkgroup":
                return new ObjectVpnSslWebPortalBookmarkgroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalBookmarkgroupBookmarks:ObjectVpnSslWebPortalBookmarkgroupBookmarks":
                return new ObjectVpnSslWebPortalBookmarkgroupBookmarks(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalBookmarkgroupBookmarksFormdata:ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdata":
                return new ObjectVpnSslWebPortalBookmarkgroupBookmarksFormdata(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalBookmarkgroupBookmarksMove:ObjectVpnSslWebPortalBookmarkgroupBookmarksMove":
                return new ObjectVpnSslWebPortalBookmarkgroupBookmarksMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalBookmarkgroupMove:ObjectVpnSslWebPortalBookmarkgroupMove":
                return new ObjectVpnSslWebPortalBookmarkgroupMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalLandingpage:ObjectVpnSslWebPortalLandingpage":
                return new ObjectVpnSslWebPortalLandingpage(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalLandingpageFormdata:ObjectVpnSslWebPortalLandingpageFormdata":
                return new ObjectVpnSslWebPortalLandingpageFormdata(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalMacaddrcheckrule:ObjectVpnSslWebPortalMacaddrcheckrule":
                return new ObjectVpnSslWebPortalMacaddrcheckrule(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalSplitdns:ObjectVpnSslWebPortalSplitdns":
                return new ObjectVpnSslWebPortalSplitdns(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebPortalSplitdnsMove:ObjectVpnSslWebPortalSplitdnsMove":
                return new ObjectVpnSslWebPortalSplitdnsMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnSslWebRealm:ObjectVpnSslWebRealm":
                return new ObjectVpnSslWebRealm(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnmgrNode:ObjectVpnmgrNode":
                return new ObjectVpnmgrNode(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnmgrNodeIprange:ObjectVpnmgrNodeIprange":
                return new ObjectVpnmgrNodeIprange(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnmgrNodeIpv4excluderange:ObjectVpnmgrNodeIpv4excluderange":
                return new ObjectVpnmgrNodeIpv4excluderange(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnmgrNodeProtectedSubnet:ObjectVpnmgrNodeProtectedSubnet":
                return new ObjectVpnmgrNodeProtectedSubnet(name, <any>undefined, { urn })
            case "fortimanager:index/objectVpnmgrNodeSummaryAddr:ObjectVpnmgrNodeSummaryAddr":
                return new ObjectVpnmgrNodeSummaryAddr(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafMainclass:ObjectWafMainclass":
                return new ObjectWafMainclass(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfile:ObjectWafProfile":
                return new ObjectWafProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileAddresslist:ObjectWafProfileAddresslist":
                return new ObjectWafProfileAddresslist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraint:ObjectWafProfileConstraint":
                return new ObjectWafProfileConstraint(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintContentlength:ObjectWafProfileConstraintContentlength":
                return new ObjectWafProfileConstraintContentlength(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintException:ObjectWafProfileConstraintException":
                return new ObjectWafProfileConstraintException(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintHeaderlength:ObjectWafProfileConstraintHeaderlength":
                return new ObjectWafProfileConstraintHeaderlength(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintHostname:ObjectWafProfileConstraintHostname":
                return new ObjectWafProfileConstraintHostname(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintLinelength:ObjectWafProfileConstraintLinelength":
                return new ObjectWafProfileConstraintLinelength(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintMalformed:ObjectWafProfileConstraintMalformed":
                return new ObjectWafProfileConstraintMalformed(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintMaxcookie:ObjectWafProfileConstraintMaxcookie":
                return new ObjectWafProfileConstraintMaxcookie(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintMaxheaderline:ObjectWafProfileConstraintMaxheaderline":
                return new ObjectWafProfileConstraintMaxheaderline(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintMaxrangesegment:ObjectWafProfileConstraintMaxrangesegment":
                return new ObjectWafProfileConstraintMaxrangesegment(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintMaxurlparam:ObjectWafProfileConstraintMaxurlparam":
                return new ObjectWafProfileConstraintMaxurlparam(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintMethod:ObjectWafProfileConstraintMethod":
                return new ObjectWafProfileConstraintMethod(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintParamlength:ObjectWafProfileConstraintParamlength":
                return new ObjectWafProfileConstraintParamlength(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintUrlparamlength:ObjectWafProfileConstraintUrlparamlength":
                return new ObjectWafProfileConstraintUrlparamlength(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileConstraintVersion:ObjectWafProfileConstraintVersion":
                return new ObjectWafProfileConstraintVersion(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileMethod:ObjectWafProfileMethod":
                return new ObjectWafProfileMethod(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileMethodMethodpolicy:ObjectWafProfileMethodMethodpolicy":
                return new ObjectWafProfileMethodMethodpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileSignature:ObjectWafProfileSignature":
                return new ObjectWafProfileSignature(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileSignatureCustomsignature:ObjectWafProfileSignatureCustomsignature":
                return new ObjectWafProfileSignatureCustomsignature(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileUrlaccess:ObjectWafProfileUrlaccess":
                return new ObjectWafProfileUrlaccess(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafProfileUrlaccessAccesspattern:ObjectWafProfileUrlaccessAccesspattern":
                return new ObjectWafProfileUrlaccessAccesspattern(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafSignature:ObjectWafSignature":
                return new ObjectWafSignature(name, <any>undefined, { urn })
            case "fortimanager:index/objectWafSubclass:ObjectWafSubclass":
                return new ObjectWafSubclass(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptAuthgroup:ObjectWanoptAuthgroup":
                return new ObjectWanoptAuthgroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptPeer:ObjectWanoptPeer":
                return new ObjectWanoptPeer(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptProfile:ObjectWanoptProfile":
                return new ObjectWanoptProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptProfileCifs:ObjectWanoptProfileCifs":
                return new ObjectWanoptProfileCifs(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptProfileFtp:ObjectWanoptProfileFtp":
                return new ObjectWanoptProfileFtp(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptProfileHttp:ObjectWanoptProfileHttp":
                return new ObjectWanoptProfileHttp(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptProfileMapi:ObjectWanoptProfileMapi":
                return new ObjectWanoptProfileMapi(name, <any>undefined, { urn })
            case "fortimanager:index/objectWanoptProfileTcp:ObjectWanoptProfileTcp":
                return new ObjectWanoptProfileTcp(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterCategories:ObjectWebfilterCategories":
                return new ObjectWebfilterCategories(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterContent:ObjectWebfilterContent":
                return new ObjectWebfilterContent(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterContentEntries:ObjectWebfilterContentEntries":
                return new ObjectWebfilterContentEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterContentheader:ObjectWebfilterContentheader":
                return new ObjectWebfilterContentheader(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterContentheaderEntries:ObjectWebfilterContentheaderEntries":
                return new ObjectWebfilterContentheaderEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterContentheaderEntriesMove:ObjectWebfilterContentheaderEntriesMove":
                return new ObjectWebfilterContentheaderEntriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterFtgdlocalcat:ObjectWebfilterFtgdlocalcat":
                return new ObjectWebfilterFtgdlocalcat(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterFtgdlocalrating:ObjectWebfilterFtgdlocalrating":
                return new ObjectWebfilterFtgdlocalrating(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfile:ObjectWebfilterProfile":
                return new ObjectWebfilterProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileAntiphish:ObjectWebfilterProfileAntiphish":
                return new ObjectWebfilterProfileAntiphish(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileAntiphishCustompatterns:ObjectWebfilterProfileAntiphishCustompatterns":
                return new ObjectWebfilterProfileAntiphishCustompatterns(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileAntiphishInspectionentries:ObjectWebfilterProfileAntiphishInspectionentries":
                return new ObjectWebfilterProfileAntiphishInspectionentries(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileFilefilterEntries:ObjectWebfilterProfileFilefilterEntries":
                return new ObjectWebfilterProfileFilefilterEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileFtgdwf:ObjectWebfilterProfileFtgdwf":
                return new ObjectWebfilterProfileFtgdwf(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileFtgdwfFilters:ObjectWebfilterProfileFtgdwfFilters":
                return new ObjectWebfilterProfileFtgdwfFilters(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileOverride:ObjectWebfilterProfileOverride":
                return new ObjectWebfilterProfileOverride(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileUrlextraction:ObjectWebfilterProfileUrlextraction":
                return new ObjectWebfilterProfileUrlextraction(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileWeb:ObjectWebfilterProfileWeb":
                return new ObjectWebfilterProfileWeb(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterProfileYoutubechannelfilter:ObjectWebfilterProfileYoutubechannelfilter":
                return new ObjectWebfilterProfileYoutubechannelfilter(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterUrlfilter:ObjectWebfilterUrlfilter":
                return new ObjectWebfilterUrlfilter(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterUrlfilterEntries:ObjectWebfilterUrlfilterEntries":
                return new ObjectWebfilterUrlfilterEntries(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebfilterUrlfilterEntriesMove:ObjectWebfilterUrlfilterEntriesMove":
                return new ObjectWebfilterUrlfilterEntriesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebproxyForwardserver:ObjectWebproxyForwardserver":
                return new ObjectWebproxyForwardserver(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebproxyForwardservergroup:ObjectWebproxyForwardservergroup":
                return new ObjectWebproxyForwardservergroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebproxyProfile:ObjectWebproxyProfile":
                return new ObjectWebproxyProfile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebproxyProfileHeaders:ObjectWebproxyProfileHeaders":
                return new ObjectWebproxyProfileHeaders(name, <any>undefined, { urn })
            case "fortimanager:index/objectWebproxyWisp:ObjectWebproxyWisp":
                return new ObjectWebproxyWisp(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerAccesscontrollist:ObjectWirelesscontrollerAccesscontrollist":
                return new ObjectWirelesscontrollerAccesscontrollist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerAccesscontrollistLayer3ipv4rules:ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rules":
                return new ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rules(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove:ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove":
                return new ObjectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerAccesscontrollistLayer3ipv6rules:ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rules":
                return new ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rules(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove:ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove":
                return new ObjectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerAddress:ObjectWirelesscontrollerAddress":
                return new ObjectWirelesscontrollerAddress(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerAddrgrp:ObjectWirelesscontrollerAddrgrp":
                return new ObjectWirelesscontrollerAddrgrp(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerApcfgprofile:ObjectWirelesscontrollerApcfgprofile":
                return new ObjectWirelesscontrollerApcfgprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerApcfgprofileCommandlist:ObjectWirelesscontrollerApcfgprofileCommandlist":
                return new ObjectWirelesscontrollerApcfgprofileCommandlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerApcfgprofileCommandlistMove:ObjectWirelesscontrollerApcfgprofileCommandlistMove":
                return new ObjectWirelesscontrollerApcfgprofileCommandlistMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerArrpprofile:ObjectWirelesscontrollerArrpprofile":
                return new ObjectWirelesscontrollerArrpprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerBleprofile:ObjectWirelesscontrollerBleprofile":
                return new ObjectWirelesscontrollerBleprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerBonjourprofile:ObjectWirelesscontrollerBonjourprofile":
                return new ObjectWirelesscontrollerBonjourprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerBonjourprofilePolicylist:ObjectWirelesscontrollerBonjourprofilePolicylist":
                return new ObjectWirelesscontrollerBonjourprofilePolicylist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerBonjourprofilePolicylistMove:ObjectWirelesscontrollerBonjourprofilePolicylistMove":
                return new ObjectWirelesscontrollerBonjourprofilePolicylistMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqp3gppcellular:ObjectWirelesscontrollerHotspot20Anqp3gppcellular":
                return new ObjectWirelesscontrollerHotspot20Anqp3gppcellular(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist:ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist":
                return new ObjectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqpipaddresstype:ObjectWirelesscontrollerHotspot20Anqpipaddresstype":
                return new ObjectWirelesscontrollerHotspot20Anqpipaddresstype(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqpnairealm:ObjectWirelesscontrollerHotspot20Anqpnairealm":
                return new ObjectWirelesscontrollerHotspot20Anqpnairealm(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20AnqpnairealmNailist:ObjectWirelesscontrollerHotspot20AnqpnairealmNailist":
                return new ObjectWirelesscontrollerHotspot20AnqpnairealmNailist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod:ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod":
                return new ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam:ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam":
                return new ObjectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqpnetworkauthtype:ObjectWirelesscontrollerHotspot20Anqpnetworkauthtype":
                return new ObjectWirelesscontrollerHotspot20Anqpnetworkauthtype(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqproamingconsortium:ObjectWirelesscontrollerHotspot20Anqproamingconsortium":
                return new ObjectWirelesscontrollerHotspot20Anqproamingconsortium(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20AnqproamingconsortiumOilist:ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilist":
                return new ObjectWirelesscontrollerHotspot20AnqproamingconsortiumOilist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqpvenuename:ObjectWirelesscontrollerHotspot20Anqpvenuename":
                return new ObjectWirelesscontrollerHotspot20Anqpvenuename(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20AnqpvenuenameValuelist:ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelist":
                return new ObjectWirelesscontrollerHotspot20AnqpvenuenameValuelist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Anqpvenueurl:ObjectWirelesscontrollerHotspot20Anqpvenueurl":
                return new ObjectWirelesscontrollerHotspot20Anqpvenueurl(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20AnqpvenueurlValuelist:ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelist":
                return new ObjectWirelesscontrollerHotspot20AnqpvenueurlValuelist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qpadviceofcharge:ObjectWirelesscontrollerHotspot20H2qpadviceofcharge":
                return new ObjectWirelesscontrollerHotspot20H2qpadviceofcharge(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist:ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist":
                return new ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo:ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo":
                return new ObjectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qpconncapability:ObjectWirelesscontrollerHotspot20H2qpconncapability":
                return new ObjectWirelesscontrollerHotspot20H2qpconncapability(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qpoperatorname:ObjectWirelesscontrollerHotspot20H2qpoperatorname":
                return new ObjectWirelesscontrollerHotspot20H2qpoperatorname(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qpoperatornameValuelist:ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelist":
                return new ObjectWirelesscontrollerHotspot20H2qpoperatornameValuelist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qposuprovider:ObjectWirelesscontrollerHotspot20H2qposuprovider":
                return new ObjectWirelesscontrollerHotspot20H2qposuprovider(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qposuproviderFriendlyname:ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlyname":
                return new ObjectWirelesscontrollerHotspot20H2qposuproviderFriendlyname(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qposuproviderServicedescription:ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescription":
                return new ObjectWirelesscontrollerHotspot20H2qposuproviderServicedescription(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qposuprovidernai:ObjectWirelesscontrollerHotspot20H2qposuprovidernai":
                return new ObjectWirelesscontrollerHotspot20H2qposuprovidernai(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qposuprovidernaiNailist:ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailist":
                return new ObjectWirelesscontrollerHotspot20H2qposuprovidernaiNailist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qptermsandconditions:ObjectWirelesscontrollerHotspot20H2qptermsandconditions":
                return new ObjectWirelesscontrollerHotspot20H2qptermsandconditions(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20H2qpwanmetric:ObjectWirelesscontrollerHotspot20H2qpwanmetric":
                return new ObjectWirelesscontrollerHotspot20H2qpwanmetric(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Hsprofile:ObjectWirelesscontrollerHotspot20Hsprofile":
                return new ObjectWirelesscontrollerHotspot20Hsprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Icon:ObjectWirelesscontrollerHotspot20Icon":
                return new ObjectWirelesscontrollerHotspot20Icon(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20IconIconlist:ObjectWirelesscontrollerHotspot20IconIconlist":
                return new ObjectWirelesscontrollerHotspot20IconIconlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20Qosmap:ObjectWirelesscontrollerHotspot20Qosmap":
                return new ObjectWirelesscontrollerHotspot20Qosmap(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20QosmapDscpexcept:ObjectWirelesscontrollerHotspot20QosmapDscpexcept":
                return new ObjectWirelesscontrollerHotspot20QosmapDscpexcept(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerHotspot20QosmapDscprange:ObjectWirelesscontrollerHotspot20QosmapDscprange":
                return new ObjectWirelesscontrollerHotspot20QosmapDscprange(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerMpskprofile:ObjectWirelesscontrollerMpskprofile":
                return new ObjectWirelesscontrollerMpskprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerMpskprofileMpskgroup:ObjectWirelesscontrollerMpskprofileMpskgroup":
                return new ObjectWirelesscontrollerMpskprofileMpskgroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerMpskprofileMpskgroupMove:ObjectWirelesscontrollerMpskprofileMpskgroupMove":
                return new ObjectWirelesscontrollerMpskprofileMpskgroupMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerMpskprofileMpskgroupMpskkey:ObjectWirelesscontrollerMpskprofileMpskgroupMpskkey":
                return new ObjectWirelesscontrollerMpskprofileMpskgroupMpskkey(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove:ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove":
                return new ObjectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerNacprofile:ObjectWirelesscontrollerNacprofile":
                return new ObjectWirelesscontrollerNacprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerQosprofile:ObjectWirelesscontrollerQosprofile":
                return new ObjectWirelesscontrollerQosprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerSsidpolicy:ObjectWirelesscontrollerSsidpolicy":
                return new ObjectWirelesscontrollerSsidpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerSyslogprofile:ObjectWirelesscontrollerSyslogprofile":
                return new ObjectWirelesscontrollerSyslogprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerUtmprofile:ObjectWirelesscontrollerUtmprofile":
                return new ObjectWirelesscontrollerUtmprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerVap:ObjectWirelesscontrollerVap":
                return new ObjectWirelesscontrollerVap(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerVapMacfilterlist:ObjectWirelesscontrollerVapMacfilterlist":
                return new ObjectWirelesscontrollerVapMacfilterlist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerVapPortalmessageoverrides:ObjectWirelesscontrollerVapPortalmessageoverrides":
                return new ObjectWirelesscontrollerVapPortalmessageoverrides(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerVapVlanname:ObjectWirelesscontrollerVapVlanname":
                return new ObjectWirelesscontrollerVapVlanname(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerVapVlannameMove:ObjectWirelesscontrollerVapVlannameMove":
                return new ObjectWirelesscontrollerVapVlannameMove(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerVapVlanpool:ObjectWirelesscontrollerVapVlanpool":
                return new ObjectWirelesscontrollerVapVlanpool(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerVapgroup:ObjectWirelesscontrollerVapgroup":
                return new ObjectWirelesscontrollerVapgroup(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWagprofile:ObjectWirelesscontrollerWagprofile":
                return new ObjectWirelesscontrollerWagprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWidsprofile:ObjectWirelesscontrollerWidsprofile":
                return new ObjectWirelesscontrollerWidsprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofile:ObjectWirelesscontrollerWtpprofile":
                return new ObjectWirelesscontrollerWtpprofile(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileDenymaclist:ObjectWirelesscontrollerWtpprofileDenymaclist":
                return new ObjectWirelesscontrollerWtpprofileDenymaclist(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileEslsesdongle:ObjectWirelesscontrollerWtpprofileEslsesdongle":
                return new ObjectWirelesscontrollerWtpprofileEslsesdongle(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileLan:ObjectWirelesscontrollerWtpprofileLan":
                return new ObjectWirelesscontrollerWtpprofileLan(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileLbs:ObjectWirelesscontrollerWtpprofileLbs":
                return new ObjectWirelesscontrollerWtpprofileLbs(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofilePlatform:ObjectWirelesscontrollerWtpprofilePlatform":
                return new ObjectWirelesscontrollerWtpprofilePlatform(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileRadio1:ObjectWirelesscontrollerWtpprofileRadio1":
                return new ObjectWirelesscontrollerWtpprofileRadio1(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileRadio2:ObjectWirelesscontrollerWtpprofileRadio2":
                return new ObjectWirelesscontrollerWtpprofileRadio2(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileRadio3:ObjectWirelesscontrollerWtpprofileRadio3":
                return new ObjectWirelesscontrollerWtpprofileRadio3(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileRadio4:ObjectWirelesscontrollerWtpprofileRadio4":
                return new ObjectWirelesscontrollerWtpprofileRadio4(name, <any>undefined, { urn })
            case "fortimanager:index/objectWirelesscontrollerWtpprofileSplittunnelingacl:ObjectWirelesscontrollerWtpprofileSplittunnelingacl":
                return new ObjectWirelesscontrollerWtpprofileSplittunnelingacl(name, <any>undefined, { urn })
            case "fortimanager:index/packagesAuthenticationRule:PackagesAuthenticationRule":
                return new PackagesAuthenticationRule(name, <any>undefined, { urn })
            case "fortimanager:index/packagesAuthenticationSetting:PackagesAuthenticationSetting":
                return new PackagesAuthenticationSetting(name, <any>undefined, { urn })
            case "fortimanager:index/packagesCentralDnat6:PackagesCentralDnat6":
                return new PackagesCentralDnat6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesCentralDnat6Move:PackagesCentralDnat6Move":
                return new PackagesCentralDnat6Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesCentralDnat:PackagesCentralDnat":
                return new PackagesCentralDnat(name, <any>undefined, { urn })
            case "fortimanager:index/packagesCentralDnatMove:PackagesCentralDnatMove":
                return new PackagesCentralDnatMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallAcl6:PackagesFirewallAcl6":
                return new PackagesFirewallAcl6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallAcl6Move:PackagesFirewallAcl6Move":
                return new PackagesFirewallAcl6Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallAcl:PackagesFirewallAcl":
                return new PackagesFirewallAcl(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallAclMove:PackagesFirewallAclMove":
                return new PackagesFirewallAclMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallCentralsnatmap:PackagesFirewallCentralsnatmap":
                return new PackagesFirewallCentralsnatmap(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallCentralsnatmapMove:PackagesFirewallCentralsnatmapMove":
                return new PackagesFirewallCentralsnatmapMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallConsolidatedPolicy:PackagesFirewallConsolidatedPolicy":
                return new PackagesFirewallConsolidatedPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallConsolidatedPolicyMove:PackagesFirewallConsolidatedPolicyMove":
                return new PackagesFirewallConsolidatedPolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallDospolicy6:PackagesFirewallDospolicy6":
                return new PackagesFirewallDospolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallDospolicy6Anomaly:PackagesFirewallDospolicy6Anomaly":
                return new PackagesFirewallDospolicy6Anomaly(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallDospolicy6Move:PackagesFirewallDospolicy6Move":
                return new PackagesFirewallDospolicy6Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallDospolicy:PackagesFirewallDospolicy":
                return new PackagesFirewallDospolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallDospolicyAnomaly:PackagesFirewallDospolicyAnomaly":
                return new PackagesFirewallDospolicyAnomaly(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallDospolicyMove:PackagesFirewallDospolicyMove":
                return new PackagesFirewallDospolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallHyperscalepolicy46:PackagesFirewallHyperscalepolicy46":
                return new PackagesFirewallHyperscalepolicy46(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallHyperscalepolicy64:PackagesFirewallHyperscalepolicy64":
                return new PackagesFirewallHyperscalepolicy64(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallHyperscalepolicy6:PackagesFirewallHyperscalepolicy6":
                return new PackagesFirewallHyperscalepolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallHyperscalepolicy:PackagesFirewallHyperscalepolicy":
                return new PackagesFirewallHyperscalepolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallInterfacepolicy6:PackagesFirewallInterfacepolicy6":
                return new PackagesFirewallInterfacepolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallInterfacepolicy6Move:PackagesFirewallInterfacepolicy6Move":
                return new PackagesFirewallInterfacepolicy6Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallInterfacepolicy:PackagesFirewallInterfacepolicy":
                return new PackagesFirewallInterfacepolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallInterfacepolicyMove:PackagesFirewallInterfacepolicyMove":
                return new PackagesFirewallInterfacepolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallLocalinpolicy6:PackagesFirewallLocalinpolicy6":
                return new PackagesFirewallLocalinpolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallLocalinpolicy6Move:PackagesFirewallLocalinpolicy6Move":
                return new PackagesFirewallLocalinpolicy6Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallLocalinpolicy:PackagesFirewallLocalinpolicy":
                return new PackagesFirewallLocalinpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallLocalinpolicyMove:PackagesFirewallLocalinpolicyMove":
                return new PackagesFirewallLocalinpolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallMulticastpolicy6:PackagesFirewallMulticastpolicy6":
                return new PackagesFirewallMulticastpolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallMulticastpolicy6Move:PackagesFirewallMulticastpolicy6Move":
                return new PackagesFirewallMulticastpolicy6Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallMulticastpolicy:PackagesFirewallMulticastpolicy":
                return new PackagesFirewallMulticastpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallMulticastpolicyMove:PackagesFirewallMulticastpolicyMove":
                return new PackagesFirewallMulticastpolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicy46:PackagesFirewallPolicy46":
                return new PackagesFirewallPolicy46(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicy46Move:PackagesFirewallPolicy46Move":
                return new PackagesFirewallPolicy46Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicy64:PackagesFirewallPolicy64":
                return new PackagesFirewallPolicy64(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicy64Move:PackagesFirewallPolicy64Move":
                return new PackagesFirewallPolicy64Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicy6:PackagesFirewallPolicy6":
                return new PackagesFirewallPolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicy6Move:PackagesFirewallPolicy6Move":
                return new PackagesFirewallPolicy6Move(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicy:PackagesFirewallPolicy":
                return new PackagesFirewallPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallPolicyMove:PackagesFirewallPolicyMove":
                return new PackagesFirewallPolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallProxypolicy:PackagesFirewallProxypolicy":
                return new PackagesFirewallProxypolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallProxypolicyMove:PackagesFirewallProxypolicyMove":
                return new PackagesFirewallProxypolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallSecuritypolicy:PackagesFirewallSecuritypolicy":
                return new PackagesFirewallSecuritypolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallSecuritypolicyMove:PackagesFirewallSecuritypolicyMove":
                return new PackagesFirewallSecuritypolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallShapingpolicy:PackagesFirewallShapingpolicy":
                return new PackagesFirewallShapingpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesFirewallShapingpolicyMove:PackagesFirewallShapingpolicyMove":
                return new PackagesFirewallShapingpolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalFooterConsolidatedPolicy:PackagesGlobalFooterConsolidatedPolicy":
                return new PackagesGlobalFooterConsolidatedPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalFooterPolicy6:PackagesGlobalFooterPolicy6":
                return new PackagesGlobalFooterPolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalFooterPolicy:PackagesGlobalFooterPolicy":
                return new PackagesGlobalFooterPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalFooterShapingpolicy:PackagesGlobalFooterShapingpolicy":
                return new PackagesGlobalFooterShapingpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalHeaderConsolidatedPolicy:PackagesGlobalHeaderConsolidatedPolicy":
                return new PackagesGlobalHeaderConsolidatedPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalHeaderPolicy6:PackagesGlobalHeaderPolicy6":
                return new PackagesGlobalHeaderPolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalHeaderPolicy:PackagesGlobalHeaderPolicy":
                return new PackagesGlobalHeaderPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesGlobalHeaderShapingpolicy:PackagesGlobalHeaderShapingpolicy":
                return new PackagesGlobalHeaderShapingpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesPblock:PackagesPblock":
                return new PackagesPblock(name, <any>undefined, { urn })
            case "fortimanager:index/packagesPblockFirewallConsolidatedPolicy:PackagesPblockFirewallConsolidatedPolicy":
                return new PackagesPblockFirewallConsolidatedPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesPblockFirewallPolicy6:PackagesPblockFirewallPolicy6":
                return new PackagesPblockFirewallPolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/packagesPblockFirewallPolicy:PackagesPblockFirewallPolicy":
                return new PackagesPblockFirewallPolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesPblockFirewallSecuritypolicy:PackagesPblockFirewallSecuritypolicy":
                return new PackagesPblockFirewallSecuritypolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesPkg:PackagesPkg":
                return new PackagesPkg(name, <any>undefined, { urn })
            case "fortimanager:index/packagesUserNacpolicy:PackagesUserNacpolicy":
                return new PackagesUserNacpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/packagesUserNacpolicyMove:PackagesUserNacpolicyMove":
                return new PackagesUserNacpolicyMove(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleAbort:SecurityconsoleAbort":
                return new SecurityconsoleAbort(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleAssignPackage:SecurityconsoleAssignPackage":
                return new SecurityconsoleAssignPackage(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleInstallDevice:SecurityconsoleInstallDevice":
                return new SecurityconsoleInstallDevice(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleInstallObjectsV2:SecurityconsoleInstallObjectsV2":
                return new SecurityconsoleInstallObjectsV2(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleInstallPackage:SecurityconsoleInstallPackage":
                return new SecurityconsoleInstallPackage(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleInstallPreview:SecurityconsoleInstallPreview":
                return new SecurityconsoleInstallPreview(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsolePackageCancelInstall:SecurityconsolePackageCancelInstall":
                return new SecurityconsolePackageCancelInstall(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsolePackageClone:SecurityconsolePackageClone":
                return new SecurityconsolePackageClone(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsolePackageCommit:SecurityconsolePackageCommit":
                return new SecurityconsolePackageCommit(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsolePackageMove:SecurityconsolePackageMove":
                return new SecurityconsolePackageMove(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsolePblockClone:SecurityconsolePblockClone":
                return new SecurityconsolePblockClone(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleReinstallPackage:SecurityconsoleReinstallPackage":
                return new SecurityconsoleReinstallPackage(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleSignCertificateTemplate:SecurityconsoleSignCertificateTemplate":
                return new SecurityconsoleSignCertificateTemplate(name, <any>undefined, { urn })
            case "fortimanager:index/securityconsoleTemplateCliPreview:SecurityconsoleTemplateCliPreview":
                return new SecurityconsoleTemplateCliPreview(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminGroup:SystemAdminGroup":
                return new SystemAdminGroup(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminGroupMember:SystemAdminGroupMember":
                return new SystemAdminGroupMember(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminLdap:SystemAdminLdap":
                return new SystemAdminLdap(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminProfile:SystemAdminProfile":
                return new SystemAdminProfile(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminProfileWritepasswdprofiles:SystemAdminProfileWritepasswdprofiles":
                return new SystemAdminProfileWritepasswdprofiles(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminProfileWritepasswduserlist:SystemAdminProfileWritepasswduserlist":
                return new SystemAdminProfileWritepasswduserlist(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminRadius:SystemAdminRadius":
                return new SystemAdminRadius(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminSetting:SystemAdminSetting":
                return new SystemAdminSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminTacacs:SystemAdminTacacs":
                return new SystemAdminTacacs(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminUser:SystemAdminUser":
                return new SystemAdminUser(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminUserAdom:SystemAdminUserAdom":
                return new SystemAdminUserAdom(name, <any>undefined, { urn })
            case "fortimanager:index/systemAdminUserIpsfilter:SystemAdminUserIpsfilter":
                return new SystemAdminUserIpsfilter(name, <any>undefined, { urn })
            case "fortimanager:index/systemAlertconsole:SystemAlertconsole":
                return new SystemAlertconsole(name, <any>undefined, { urn })
            case "fortimanager:index/systemAlertemail:SystemAlertemail":
                return new SystemAlertemail(name, <any>undefined, { urn })
            case "fortimanager:index/systemAlertevent:SystemAlertevent":
                return new SystemAlertevent(name, <any>undefined, { urn })
            case "fortimanager:index/systemAutodelete:SystemAutodelete":
                return new SystemAutodelete(name, <any>undefined, { urn })
            case "fortimanager:index/systemAutodeleteDlpfilesautodeletion:SystemAutodeleteDlpfilesautodeletion":
                return new SystemAutodeleteDlpfilesautodeletion(name, <any>undefined, { urn })
            case "fortimanager:index/systemAutodeleteLogautodeletion:SystemAutodeleteLogautodeletion":
                return new SystemAutodeleteLogautodeletion(name, <any>undefined, { urn })
            case "fortimanager:index/systemAutodeleteQuarantinefilesautodeletion:SystemAutodeleteQuarantinefilesautodeletion":
                return new SystemAutodeleteQuarantinefilesautodeletion(name, <any>undefined, { urn })
            case "fortimanager:index/systemAutodeleteReportautodeletion:SystemAutodeleteReportautodeletion":
                return new SystemAutodeleteReportautodeletion(name, <any>undefined, { urn })
            case "fortimanager:index/systemBackupAllsettings:SystemBackupAllsettings":
                return new SystemBackupAllsettings(name, <any>undefined, { urn })
            case "fortimanager:index/systemCertificateCa:SystemCertificateCa":
                return new SystemCertificateCa(name, <any>undefined, { urn })
            case "fortimanager:index/systemCertificateCrl:SystemCertificateCrl":
                return new SystemCertificateCrl(name, <any>undefined, { urn })
            case "fortimanager:index/systemCertificateLocal:SystemCertificateLocal":
                return new SystemCertificateLocal(name, <any>undefined, { urn })
            case "fortimanager:index/systemCertificateOftp:SystemCertificateOftp":
                return new SystemCertificateOftp(name, <any>undefined, { urn })
            case "fortimanager:index/systemCertificateRemote:SystemCertificateRemote":
                return new SystemCertificateRemote(name, <any>undefined, { urn })
            case "fortimanager:index/systemCertificateSsh:SystemCertificateSsh":
                return new SystemCertificateSsh(name, <any>undefined, { urn })
            case "fortimanager:index/systemConnector:SystemConnector":
                return new SystemConnector(name, <any>undefined, { urn })
            case "fortimanager:index/systemCsf:SystemCsf":
                return new SystemCsf(name, <any>undefined, { urn })
            case "fortimanager:index/systemCsfFabricconnector:SystemCsfFabricconnector":
                return new SystemCsfFabricconnector(name, <any>undefined, { urn })
            case "fortimanager:index/systemDm:SystemDm":
                return new SystemDm(name, <any>undefined, { urn })
            case "fortimanager:index/systemDns:SystemDns":
                return new SystemDns(name, <any>undefined, { urn })
            case "fortimanager:index/systemDocker:SystemDocker":
                return new SystemDocker(name, <any>undefined, { urn })
            case "fortimanager:index/systemFips:SystemFips":
                return new SystemFips(name, <any>undefined, { urn })
            case "fortimanager:index/systemFortiviewAutocache:SystemFortiviewAutocache":
                return new SystemFortiviewAutocache(name, <any>undefined, { urn })
            case "fortimanager:index/systemFortiviewSetting:SystemFortiviewSetting":
                return new SystemFortiviewSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemGlobal:SystemGlobal":
                return new SystemGlobal(name, <any>undefined, { urn })
            case "fortimanager:index/systemGlobalSslciphersuites:SystemGlobalSslciphersuites":
                return new SystemGlobalSslciphersuites(name, <any>undefined, { urn })
            case "fortimanager:index/systemGuiact:SystemGuiact":
                return new SystemGuiact(name, <any>undefined, { urn })
            case "fortimanager:index/systemHa:SystemHa":
                return new SystemHa(name, <any>undefined, { urn })
            case "fortimanager:index/systemHaMonitoredips:SystemHaMonitoredips":
                return new SystemHaMonitoredips(name, <any>undefined, { urn })
            case "fortimanager:index/systemHaPeer:SystemHaPeer":
                return new SystemHaPeer(name, <any>undefined, { urn })
            case "fortimanager:index/systemHascheduledcheck:SystemHascheduledcheck":
                return new SystemHascheduledcheck(name, <any>undefined, { urn })
            case "fortimanager:index/systemInterface:SystemInterface":
                return new SystemInterface(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocalinpolicy6:SystemLocalinpolicy6":
                return new SystemLocalinpolicy6(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocalinpolicy:SystemLocalinpolicy":
                return new SystemLocalinpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogDiskFilter:SystemLocallogDiskFilter":
                return new SystemLocallogDiskFilter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogDiskSetting:SystemLocallogDiskSetting":
                return new SystemLocallogDiskSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogFortianalyzer2Filter:SystemLocallogFortianalyzer2Filter":
                return new SystemLocallogFortianalyzer2Filter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogFortianalyzer2Setting:SystemLocallogFortianalyzer2Setting":
                return new SystemLocallogFortianalyzer2Setting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogFortianalyzer3Filter:SystemLocallogFortianalyzer3Filter":
                return new SystemLocallogFortianalyzer3Filter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogFortianalyzer3Setting:SystemLocallogFortianalyzer3Setting":
                return new SystemLocallogFortianalyzer3Setting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogFortianalyzerFilter:SystemLocallogFortianalyzerFilter":
                return new SystemLocallogFortianalyzerFilter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogFortianalyzerSetting:SystemLocallogFortianalyzerSetting":
                return new SystemLocallogFortianalyzerSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogMemoryFilter:SystemLocallogMemoryFilter":
                return new SystemLocallogMemoryFilter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogMemorySetting:SystemLocallogMemorySetting":
                return new SystemLocallogMemorySetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogSetting:SystemLocallogSetting":
                return new SystemLocallogSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogSyslogd2Filter:SystemLocallogSyslogd2Filter":
                return new SystemLocallogSyslogd2Filter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogSyslogd2Setting:SystemLocallogSyslogd2Setting":
                return new SystemLocallogSyslogd2Setting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogSyslogd3Filter:SystemLocallogSyslogd3Filter":
                return new SystemLocallogSyslogd3Filter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogSyslogd3Setting:SystemLocallogSyslogd3Setting":
                return new SystemLocallogSyslogd3Setting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogSyslogdFilter:SystemLocallogSyslogdFilter":
                return new SystemLocallogSyslogdFilter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLocallogSyslogdSetting:SystemLocallogSyslogdSetting":
                return new SystemLocallogSyslogdSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogAlert:SystemLogAlert":
                return new SystemLogAlert(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogDevicedisable:SystemLogDevicedisable":
                return new SystemLogDevicedisable(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogFospolicystats:SystemLogFospolicystats":
                return new SystemLogFospolicystats(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogInterfacestats:SystemLogInterfacestats":
                return new SystemLogInterfacestats(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogIoc:SystemLogIoc":
                return new SystemLogIoc(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogMaildomain:SystemLogMaildomain":
                return new SystemLogMaildomain(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogRatelimit:SystemLogRatelimit":
                return new SystemLogRatelimit(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogRatelimitDevice:SystemLogRatelimitDevice":
                return new SystemLogRatelimitDevice(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogRatelimitRatelimits:SystemLogRatelimitRatelimits":
                return new SystemLogRatelimitRatelimits(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogSettings:SystemLogSettings":
                return new SystemLogSettings(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogSettingsRollinganalyzer:SystemLogSettingsRollinganalyzer":
                return new SystemLogSettingsRollinganalyzer(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogSettingsRollinglocal:SystemLogSettingsRollinglocal":
                return new SystemLogSettingsRollinglocal(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogSettingsRollingregular:SystemLogSettingsRollingregular":
                return new SystemLogSettingsRollingregular(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogTopology:SystemLogTopology":
                return new SystemLogTopology(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogUeba:SystemLogUeba":
                return new SystemLogUeba(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogfetchClientprofile:SystemLogfetchClientprofile":
                return new SystemLogfetchClientprofile(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogfetchClientprofileDevicefilter:SystemLogfetchClientprofileDevicefilter":
                return new SystemLogfetchClientprofileDevicefilter(name, <any>undefined, { urn })
            case "fortimanager:index/systemLogfetchServersettings:SystemLogfetchServersettings":
                return new SystemLogfetchServersettings(name, <any>undefined, { urn })
            case "fortimanager:index/systemMail:SystemMail":
                return new SystemMail(name, <any>undefined, { urn })
            case "fortimanager:index/systemMetadataAdmins:SystemMetadataAdmins":
                return new SystemMetadataAdmins(name, <any>undefined, { urn })
            case "fortimanager:index/systemNtp:SystemNtp":
                return new SystemNtp(name, <any>undefined, { urn })
            case "fortimanager:index/systemNtpNtpserver:SystemNtpNtpserver":
                return new SystemNtpNtpserver(name, <any>undefined, { urn })
            case "fortimanager:index/systemPasswordpolicy:SystemPasswordpolicy":
                return new SystemPasswordpolicy(name, <any>undefined, { urn })
            case "fortimanager:index/systemReportAutocache:SystemReportAutocache":
                return new SystemReportAutocache(name, <any>undefined, { urn })
            case "fortimanager:index/systemReportEstbrowsetime:SystemReportEstbrowsetime":
                return new SystemReportEstbrowsetime(name, <any>undefined, { urn })
            case "fortimanager:index/systemReportSetting:SystemReportSetting":
                return new SystemReportSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systemRoute6:SystemRoute6":
                return new SystemRoute6(name, <any>undefined, { urn })
            case "fortimanager:index/systemRoute:SystemRoute":
                return new SystemRoute(name, <any>undefined, { urn })
            case "fortimanager:index/systemSaml:SystemSaml":
                return new SystemSaml(name, <any>undefined, { urn })
            case "fortimanager:index/systemSamlFabricidp:SystemSamlFabricidp":
                return new SystemSamlFabricidp(name, <any>undefined, { urn })
            case "fortimanager:index/systemSamlServiceproviders:SystemSamlServiceproviders":
                return new SystemSamlServiceproviders(name, <any>undefined, { urn })
            case "fortimanager:index/systemSniffer:SystemSniffer":
                return new SystemSniffer(name, <any>undefined, { urn })
            case "fortimanager:index/systemSnmpCommunity:SystemSnmpCommunity":
                return new SystemSnmpCommunity(name, <any>undefined, { urn })
            case "fortimanager:index/systemSnmpCommunityHosts6:SystemSnmpCommunityHosts6":
                return new SystemSnmpCommunityHosts6(name, <any>undefined, { urn })
            case "fortimanager:index/systemSnmpCommunityHosts:SystemSnmpCommunityHosts":
                return new SystemSnmpCommunityHosts(name, <any>undefined, { urn })
            case "fortimanager:index/systemSnmpSysinfo:SystemSnmpSysinfo":
                return new SystemSnmpSysinfo(name, <any>undefined, { urn })
            case "fortimanager:index/systemSnmpUser:SystemSnmpUser":
                return new SystemSnmpUser(name, <any>undefined, { urn })
            case "fortimanager:index/systemSocfabric:SystemSocfabric":
                return new SystemSocfabric(name, <any>undefined, { urn })
            case "fortimanager:index/systemSocfabricTrustedlist:SystemSocfabricTrustedlist":
                return new SystemSocfabricTrustedlist(name, <any>undefined, { urn })
            case "fortimanager:index/systemSql:SystemSql":
                return new SystemSql(name, <any>undefined, { urn })
            case "fortimanager:index/systemSqlCustomindex:SystemSqlCustomindex":
                return new SystemSqlCustomindex(name, <any>undefined, { urn })
            case "fortimanager:index/systemSqlCustomskipidx:SystemSqlCustomskipidx":
                return new SystemSqlCustomskipidx(name, <any>undefined, { urn })
            case "fortimanager:index/systemSqlTsindexfield:SystemSqlTsindexfield":
                return new SystemSqlTsindexfield(name, <any>undefined, { urn })
            case "fortimanager:index/systemSyslog:SystemSyslog":
                return new SystemSyslog(name, <any>undefined, { urn })
            case "fortimanager:index/systemTemplate:SystemTemplate":
                return new SystemTemplate(name, <any>undefined, { urn })
            case "fortimanager:index/systemWebproxy:SystemWebproxy":
                return new SystemWebproxy(name, <any>undefined, { urn })
            case "fortimanager:index/systemWorkflowApprovalmatrix:SystemWorkflowApprovalmatrix":
                return new SystemWorkflowApprovalmatrix(name, <any>undefined, { urn })
            case "fortimanager:index/systemWorkflowApprovalmatrixApprover:SystemWorkflowApprovalmatrixApprover":
                return new SystemWorkflowApprovalmatrixApprover(name, <any>undefined, { urn })
            case "fortimanager:index/systempDeviceProfileFortianalyzer:SystempDeviceProfileFortianalyzer":
                return new SystempDeviceProfileFortianalyzer(name, <any>undefined, { urn })
            case "fortimanager:index/systempDeviceProfileFortiguard:SystempDeviceProfileFortiguard":
                return new SystempDeviceProfileFortiguard(name, <any>undefined, { urn })
            case "fortimanager:index/systempLogFortianalyzerSetting:SystempLogFortianalyzerSetting":
                return new SystempLogFortianalyzerSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systempLogFortianalyzercloudSetting:SystempLogFortianalyzercloudSetting":
                return new SystempLogFortianalyzercloudSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systempLogSyslogdFilter:SystempLogSyslogdFilter":
                return new SystempLogSyslogdFilter(name, <any>undefined, { urn })
            case "fortimanager:index/systempLogSyslogdSetting:SystempLogSyslogdSetting":
                return new SystempLogSyslogdSetting(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemCentralmanagement:SystempSystemCentralmanagement":
                return new SystempSystemCentralmanagement(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemCentralmanagementServerlist:SystempSystemCentralmanagementServerlist":
                return new SystempSystemCentralmanagementServerlist(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemEmailserver:SystempSystemEmailserver":
                return new SystempSystemEmailserver(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemGlobal:SystempSystemGlobal":
                return new SystempSystemGlobal(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemNtp:SystempSystemNtp":
                return new SystempSystemNtp(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemReplacemsgDevicedetectionportal:SystempSystemReplacemsgDevicedetectionportal":
                return new SystempSystemReplacemsgDevicedetectionportal(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemReplacemsgNntp:SystempSystemReplacemsgNntp":
                return new SystempSystemReplacemsgNntp(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemSnmpSysinfo:SystempSystemSnmpSysinfo":
                return new SystempSystemSnmpSysinfo(name, <any>undefined, { urn })
            case "fortimanager:index/systempSystemSnmpUser:SystempSystemSnmpUser":
                return new SystempSystemSnmpUser(name, <any>undefined, { urn })
            case "fortimanager:index/wanTemplate:WanTemplate":
                return new WanTemplate(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwan:WantempSystemSdwan":
                return new WantempSystemSdwan(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanDuplication:WantempSystemSdwanDuplication":
                return new WantempSystemSdwanDuplication(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanHealthcheck:WantempSystemSdwanHealthcheck":
                return new WantempSystemSdwanHealthcheck(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanHealthcheckSla:WantempSystemSdwanHealthcheckSla":
                return new WantempSystemSdwanHealthcheckSla(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanMembers:WantempSystemSdwanMembers":
                return new WantempSystemSdwanMembers(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanMembersMove:WantempSystemSdwanMembersMove":
                return new WantempSystemSdwanMembersMove(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanNeighbor:WantempSystemSdwanNeighbor":
                return new WantempSystemSdwanNeighbor(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanService:WantempSystemSdwanService":
                return new WantempSystemSdwanService(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanServiceMove:WantempSystemSdwanServiceMove":
                return new WantempSystemSdwanServiceMove(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanServiceSla:WantempSystemSdwanServiceSla":
                return new WantempSystemSdwanServiceSla(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanZone:WantempSystemSdwanZone":
                return new WantempSystemSdwanZone(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemSdwanZoneMove:WantempSystemSdwanZoneMove":
                return new WantempSystemSdwanZoneMove(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemVirtualwanlink:WantempSystemVirtualwanlink":
                return new WantempSystemVirtualwanlink(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemVirtualwanlinkHealthcheck:WantempSystemVirtualwanlinkHealthcheck":
                return new WantempSystemVirtualwanlinkHealthcheck(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemVirtualwanlinkHealthcheckSla:WantempSystemVirtualwanlinkHealthcheckSla":
                return new WantempSystemVirtualwanlinkHealthcheckSla(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemVirtualwanlinkMembers:WantempSystemVirtualwanlinkMembers":
                return new WantempSystemVirtualwanlinkMembers(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemVirtualwanlinkNeighbor:WantempSystemVirtualwanlinkNeighbor":
                return new WantempSystemVirtualwanlinkNeighbor(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemVirtualwanlinkService:WantempSystemVirtualwanlinkService":
                return new WantempSystemVirtualwanlinkService(name, <any>undefined, { urn })
            case "fortimanager:index/wantempSystemVirtualwanlinkServiceSla:WantempSystemVirtualwanlinkServiceSla":
                return new WantempSystemVirtualwanlinkServiceSla(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmCmdAddDevice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmCmdAddDevlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmCmdDelDevice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmCmdDelDevlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmCmdUpdateDevice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmCmdUpdateDevlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmdbAdom", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmdbGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmdbRevision", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmdbScript", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/dvmdbScriptExecute", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/execWorkspaceAction", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateAnalyzerVirusreport", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateAvipsAdvancedlog", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateAvipsWebproxy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateCustomurllist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateDiskquota", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFctservices", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFdssetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFdssettingPushoverride", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFdssettingPushoverridetoclient", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFdssettingServeroverride", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFdssettingUpdateschedule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFwmsetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateFwmsettingUpgradetimeout", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateMultilayer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdatePublicnetwork", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateServeraccesspriorities", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateServeroverridestatus", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateService", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateWebspamFgdsetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/fmupdateWebspamWebproxy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/jsonGenericApi", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAdomOptions", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusMmschecksum", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusNotification", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileCifs", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileContentdisarm", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileFtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileHttp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileImap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileMapi", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileNacquar", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileNntp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileOutbreakprevention", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfilePop3", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileSmtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAntivirusProfileSsh", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationCategories", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationCustom", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationList", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationListDefaultnetworkservices", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationListDefaultnetworkservicesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationListEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationListEntriesParameters", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationListEntriesParametersMembers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectApplicationListEntriesParametersMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectAuthenticationScheme", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbProfileMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbProfileSaasapplication", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbProfileSaasapplicationAccessrule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbProfileSaasapplicationCustomcontrol", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbProfileSaasapplicationCustomcontrolOption", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbSaasapplication", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbSaasapplicationMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbUseractivity", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbUseractivityControloptions", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbUseractivityControloptionsOperations", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbUseractivityMatch", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbUseractivityMatchRules", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCasbUseractivityMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCertificateTemplate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCifsDomaincontroller", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCifsProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCliTemplate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCliTemplategroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCloudOrchestaws", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCloudOrchestawsconnector", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCloudOrchestawstemplateAutoscaleexistingvpc", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCloudOrchestawstemplateAutoscalenewvpc", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCloudOrchestawstemplateAutoscaletgwnewvpc", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCloudOrchestration", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectCredentialstoreDomaincontroller", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDiameterfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpDatatype", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpDictionary", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpDictionaryEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpFilepattern", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpFilepatternEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpFpsensitivity", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpProfileRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpProfileRuleMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpSensitivity", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpSensor", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDlpSensorEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterDomainfilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterDomainfilterEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterDomainfilterEntriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterProfileDnstranslation", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterProfileDomainfilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterProfileFtgddns", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDnsfilterProfileFtgddnsFilters", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicAddress", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicAddressDynamicAddrMapping", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicCertificateLocal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicInterface", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicInterfacePlatformMapping", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicIppool", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicMulticastInterface", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicVip", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectDynamicVpntunnel", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBlockallowlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBlockallowlistEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBlockallowlistEntriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBwl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBwlEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBwlEntriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBword", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterBwordEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterDnsbl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterDnsblEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterFortishield", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterIptrust", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterIptrustEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterMheader", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterMheaderEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterOptions", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterProfileGmail", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterProfileImap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterProfileMapi", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterProfileMsnhotmail", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterProfilePop3", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEmailfilterProfileSmtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectEndpointcontrolFctems", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerDataplan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularControllerreport", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularModem1", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularModem1Autoswitch", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularModem2", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularModem2Autoswitch", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularSmsnotification", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularSmsnotificationAlert", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileCellularSmsnotificationReceiverMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileLanextension", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerExtenderprofileLanextensionBackhaul", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerSimProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerSimProfileAutoswitchProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtendercontrollerTemplate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerDataplan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellular", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularControllerreport", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularModem1", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularModem1Autoswitch", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularModem2", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularModem2Autoswitch", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularSmsnotification", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularSmsnotificationAlert", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileCellularSmsnotificationReceiverMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileLanextension", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileLanextensionBackhaul", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileLanextensionBackhaulMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileWifi", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileWifiRadio1", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectExtensioncontrollerExtenderprofileWifiRadio2", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFilefilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFilefilterProfileRules", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFilefilterProfileRulesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6Apigateway", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6Apigateway6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6Apigateway6Quic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6Apigateway6Realservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6Apigateway6Sslciphersuites", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6ApigatewayQuic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6ApigatewayRealservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6ApigatewaySslciphersuites", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxy6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigateway", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigateway6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigateway6Quic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigateway6Realservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigateway6Sslciphersuites", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigatewayQuic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigatewayRealservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyApigatewaySslciphersuites", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyRealservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyServerpubkeyauthsettings", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxysshclientcert", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxysshclientcertCertextension", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxysshclientcertMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAccessproxyvirtualhost", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress6List", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress6Subnetsegment", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress6Tagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress6template", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress6templateSubnetsegment", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddress6templateSubnetsegmentValues", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddressList", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddressTagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddrgrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddrgrp6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddrgrp6Tagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallAddrgrpTagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallCarrierendpointbwl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallCasbprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallCasbprofileMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallCasbprofileSaasapplication", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallCasbprofileSaasapplicationAccessrule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallCasbprofileSaasapplicationCustomcontrol", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallCasbprofileSaasapplicationCustomcontrolOption", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallDecryptedtrafficmirror", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpApn", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpIeremovepolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpIevalidation", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpImsi", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpIppolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpMessageratelimit", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpMessageratelimitv0", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpMessageratelimitv1", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpMessageratelimitv2", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpNoippolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpPerapnshaper", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallGtpPolicyv2", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallIdentitybasedroute", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallIdentitybasedrouteRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetservice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetserviceEntry", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetserviceaddition", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetserviceadditionEntry", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetserviceadditionEntryPortrange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetservicecustom", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetservicecustomEntry", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetservicecustomEntryPortrange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetservicecustomgroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetservicegroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallInternetservicename", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallIppool", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallIppool6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallIppoolGrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallLdbmonitor", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallMmsprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallMulticastaddress", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallMulticastaddress6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallMulticastaddress6Tagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallMulticastaddressTagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallNetworkservicedynamic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfilegroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptions", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsCifs", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsCifsFilefilterEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsCifsFilefilterEntriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsCifsServerkeytab", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsDns", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsFtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsHttp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsImap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsMailsignature", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsMapi", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsNntp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsPop3", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsSmtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProfileprotocoloptionsSsh", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProxyaddress", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProxyaddressHeadergroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProxyaddressTagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProxyaddrgrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallProxyaddrgrpTagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallScheduleGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallScheduleOnetime", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallScheduleRecurring", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallServiceCategory", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallServiceCustom", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallServiceGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallShaperPeripshaper", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallShaperTrafficshaper", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallShapingprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallShapingprofileShapingentries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallShapingprofileShapingentriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSshLocalca", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileDot", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileEchoutersni", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileFtps", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileHttps", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileImaps", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofilePop3s", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileSmtps", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileSsh", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileSsl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileSslexempt", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallSslsshprofileSslserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallTrafficclass", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVendormac", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip46", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip46Realservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip64", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip64Realservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip6Quic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVip6Realservers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVipGslbpublicips", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVipQuic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVipgrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVipgrp46", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVipgrp6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallVipgrp64", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallWildcardfqdnCustom", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFirewallWildcardfqdnGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFmgDeviceBlueprint", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFmgFabricAuthorizationTemplate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFmgVariable", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlanInterface", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlanInterfaceIpv6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlanInterfaceIpv6Ip6delegatedprefixlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlanInterfaceIpv6Ip6extraaddr", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlanInterfaceIpv6Vrrp6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlanInterfaceSecondaryip", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectFspVlanInterfaceVrrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectGlobalIpsSensor", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectGlobalIpsSensorEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectGlobalIpsSensorEntriesExemptip", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectGlobalIpsSensorOverride", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIcapProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIcapProfileRespmodforwardrules", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIcapProfileRespmodforwardrulesHeadergroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIcapServer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIpsCustom", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIpsSensor", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIpsSensorEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIpsSensorEntriesExemptip", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectIpsSensorEntriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectLogCustomfield", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectLogNpuserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectLogNpuserverServergroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectLogNpuserverServerinfo", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterAccesslist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterAccesslist6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterAccesslist6Rule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterAccesslistRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterAspathlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterAspathlistRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterCommunitylist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterCommunitylistRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterPrefixlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterPrefixlist6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterPrefixlist6Rule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterPrefixlistRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterRoutemap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectRouterRoutemapRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSctpfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSctpfilterProfilePpidfilters", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSpamfilterBwl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSpamfilterBword", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSpamfilterDnsbl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSpamfilterIptrust", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSpamfilterMheader", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSpamfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSshfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSshfilterProfileShellcommands", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSshfilterProfileShellcommandsMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerAclGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerAclIngress", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerAclIngressAction", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerAclIngressClassifier", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerCustomcommand", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerDslPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerDynamicportpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerDynamicportpolicyPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerDynamicportpolicyPolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerFortilinksettings", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerFortilinksettingsNacports", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerLldpprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerLldpprofileCustomtlvs", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerMacpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerManagedswitch", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerManagedswitchCustomcommand", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerManagedswitchDhcpsnoopingstaticclient", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerManagedswitchPorts", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerManagedswitchVlan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerPtpProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerQosDot1pmap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerQosIpdscpmap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerQosIpdscpmapMap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerQosQospolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerQosQueuepolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerSecuritypolicy8021x", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerSwitchinterfacetag", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerTrafficpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSwitchcontrollerVlanpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemCustomlanguage", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemDhcpServer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemDhcpServerExcluderange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemDhcpServerIprange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemDhcpServerOptions", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemDhcpServerReservedaddress", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemExternalresource", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemExternalresourceMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemFortiguard", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemGeoipcountry", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemGeoipoverride", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemGeoipoverrideIp6range", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemGeoipoverrideIprange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemMeta", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemMetaSysMetaFields", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpu", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuBackgroundssescan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuDosoptions", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuDswdtsprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuDswqueuedtsprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuFpanomaly", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuHpe", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuIcmpratectrl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuIpreassembly", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuIsfnpqueues", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNpqueues", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNpqueuesEthernettype", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNpqueuesIpprotocol", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNpqueuesIpservice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNpqueuesProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNpqueuesScheduler", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNputcam", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNputcamData", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNputcamMask", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNputcamMiract", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNputcamPriact", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNputcamSact", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuNputcamTact", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuPortcpumap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuPortnpumap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuPortpathoption", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuPriorityprotocol", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuSsehascan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuSwehhash", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuSwtrhash", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuTcptimeoutprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemNpuUdptimeoutprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemObjecttagging", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupAdmin", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupAlertmail", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupAuth", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupAutomation", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupCustommessage", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupDevicedetectionportal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupFortiguardwf", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupFtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupHttp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupIcap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupMail", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupNacquar", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupNntp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupSpam", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupSslvpn", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupTrafficquota", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupUtm", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsggroupWebproxy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemReplacemsgimage", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnector", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorCompartmentlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorCompartmentlistMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorExternalaccountlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorExternalaccountlistMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorExternalip", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorExternalipMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorForwardingrule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorForwardingruleMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorGcpprojectlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorGcpprojectlistMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorNic", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorNicIp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorNicIpMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorNicMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorOciregionlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorOciregionlistMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorRoute", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorRouteMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorRoutetable", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorRoutetableMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorRoutetableRoute", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnconnectorRoutetableRouteMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSdnproxy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemSmsserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectSystemVirtualwirepair", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserAdgrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserCertificate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserClearpass", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserConnector", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserDevice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserDeviceaccesslist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserDevicecategory", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserDevicegroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserDomaincontroller", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserDomaincontrollerExtraserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserExchange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserExternalidentityprovider", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserFlexvm", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserFortitoken", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserFsso", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserFssopolling", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserFssopollingAdgrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserGroupMatch", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserJson", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserKrbkeytab", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserLdap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserLocal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserNsx", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserNsxService", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserPasswordpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserPeer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserPeergrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserPop3", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserPxgrid", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserRadius", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserRadiusAccountingserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserSaml", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserSecurityexemptlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserSecurityexemptlistRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserTacacs", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserVcenter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectUserVcenterRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterKeyword", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterKeywordWord", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterProfileFilters", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterProfileFiltersMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterProfileFortiguardcategory", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterProfileFortiguardcategoryFilters", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterProfileFortiguardcategoryFiltersMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterYoutubechannelfilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVideofilterYoutubekey", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVirtualpatchProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVirtualpatchProfileExemption", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVoipProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVoipProfileMsrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVoipProfileSccp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVoipProfileSip", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnCertificateCa", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnCertificateOcspserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnCertificateRemote", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnIpsecFec", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnIpsecFecMappings", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnIpsecFecMappingsMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebHostchecksoftware", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebHostchecksoftwareCheckitemlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalBookmarkgroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalBookmarkgroupBookmarks", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalBookmarkgroupBookmarksFormdata", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalBookmarkgroupBookmarksMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalBookmarkgroupMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalLandingpage", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalLandingpageFormdata", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalMacaddrcheckrule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalSplitdns", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebPortalSplitdnsMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnSslWebRealm", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnmgrNode", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnmgrNodeIprange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnmgrNodeIpv4excluderange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnmgrNodeProtectedSubnet", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectVpnmgrNodeSummaryAddr", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafMainclass", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileAddresslist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraint", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintContentlength", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintException", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintHeaderlength", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintHostname", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintLinelength", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintMalformed", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintMaxcookie", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintMaxheaderline", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintMaxrangesegment", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintMaxurlparam", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintMethod", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintParamlength", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintUrlparamlength", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileConstraintVersion", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileMethod", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileMethodMethodpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileSignature", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileSignatureCustomsignature", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileUrlaccess", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafProfileUrlaccessAccesspattern", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafSignature", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWafSubclass", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptAuthgroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptPeer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptProfileCifs", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptProfileFtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptProfileHttp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptProfileMapi", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWanoptProfileTcp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterCategories", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterContent", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterContentEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterContentheader", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterContentheaderEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterContentheaderEntriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterFtgdlocalcat", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterFtgdlocalrating", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileAntiphish", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileAntiphishCustompatterns", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileAntiphishInspectionentries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileFilefilterEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileFtgdwf", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileFtgdwfFilters", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileOverride", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileUrlextraction", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileWeb", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterProfileYoutubechannelfilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterUrlfilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterUrlfilterEntries", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebfilterUrlfilterEntriesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebproxyForwardserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebproxyForwardservergroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebproxyProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebproxyProfileHeaders", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWebproxyWisp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerAccesscontrollist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerAccesscontrollistLayer3ipv4rules", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerAccesscontrollistLayer3ipv4rulesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerAccesscontrollistLayer3ipv6rules", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerAccesscontrollistLayer3ipv6rulesMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerAddress", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerAddrgrp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerApcfgprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerApcfgprofileCommandlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerApcfgprofileCommandlistMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerArrpprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerBleprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerBonjourprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerBonjourprofilePolicylist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerBonjourprofilePolicylistMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqp3gppcellular", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqp3gppcellularMccmnclist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqpipaddresstype", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqpnairealm", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20AnqpnairealmNailist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethod", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqpnetworkauthtype", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqproamingconsortium", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20AnqproamingconsortiumOilist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqpvenuename", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20AnqpvenuenameValuelist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Anqpvenueurl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20AnqpvenueurlValuelist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qpadviceofcharge", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qpadviceofchargeAoclistPlaninfo", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qpconncapability", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qpoperatorname", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qpoperatornameValuelist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qposuprovider", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qposuproviderFriendlyname", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qposuproviderServicedescription", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qposuprovidernai", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qposuprovidernaiNailist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qptermsandconditions", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20H2qpwanmetric", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Hsprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Icon", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20IconIconlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20Qosmap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20QosmapDscpexcept", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerHotspot20QosmapDscprange", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerMpskprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerMpskprofileMpskgroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerMpskprofileMpskgroupMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerMpskprofileMpskgroupMpskkey", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerMpskprofileMpskgroupMpskkeyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerNacprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerQosprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerSsidpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerSyslogprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerUtmprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerVap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerVapMacfilterlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerVapPortalmessageoverrides", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerVapVlanname", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerVapVlannameMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerVapVlanpool", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerVapgroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWagprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWidsprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileDenymaclist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileEslsesdongle", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileLan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileLbs", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofilePlatform", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileRadio1", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileRadio2", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileRadio3", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileRadio4", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/objectWirelesscontrollerWtpprofileSplittunnelingacl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesAuthenticationRule", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesAuthenticationSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesCentralDnat", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesCentralDnat6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesCentralDnat6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesCentralDnatMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallAcl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallAcl6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallAcl6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallAclMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallCentralsnatmap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallCentralsnatmapMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallConsolidatedPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallConsolidatedPolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallDospolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallDospolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallDospolicy6Anomaly", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallDospolicy6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallDospolicyAnomaly", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallDospolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallHyperscalepolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallHyperscalepolicy46", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallHyperscalepolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallHyperscalepolicy64", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallInterfacepolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallInterfacepolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallInterfacepolicy6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallInterfacepolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallLocalinpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallLocalinpolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallLocalinpolicy6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallLocalinpolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallMulticastpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallMulticastpolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallMulticastpolicy6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallMulticastpolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicy46", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicy46Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicy64", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicy64Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicy6Move", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallPolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallProxypolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallProxypolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallSecuritypolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallSecuritypolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallShapingpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesFirewallShapingpolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalFooterConsolidatedPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalFooterPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalFooterPolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalFooterShapingpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalHeaderConsolidatedPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalHeaderPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalHeaderPolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesGlobalHeaderShapingpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesPblock", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesPblockFirewallConsolidatedPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesPblockFirewallPolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesPblockFirewallPolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesPblockFirewallSecuritypolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesPkg", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesUserNacpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/packagesUserNacpolicyMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleAbort", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleAssignPackage", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleInstallDevice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleInstallObjectsV2", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleInstallPackage", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleInstallPreview", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsolePackageCancelInstall", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsolePackageClone", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsolePackageCommit", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsolePackageMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsolePblockClone", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleReinstallPackage", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleSignCertificateTemplate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/securityconsoleTemplateCliPreview", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminGroup", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminGroupMember", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminLdap", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminProfile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminProfileWritepasswdprofiles", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminProfileWritepasswduserlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminRadius", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminTacacs", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminUser", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminUserAdom", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAdminUserIpsfilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAlertconsole", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAlertemail", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAlertevent", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAutodelete", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAutodeleteDlpfilesautodeletion", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAutodeleteLogautodeletion", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAutodeleteQuarantinefilesautodeletion", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemAutodeleteReportautodeletion", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemBackupAllsettings", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCertificateCa", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCertificateCrl", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCertificateLocal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCertificateOftp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCertificateRemote", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCertificateSsh", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemConnector", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCsf", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemCsfFabricconnector", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemDm", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemDns", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemDocker", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemFips", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemFortiviewAutocache", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemFortiviewSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemGlobal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemGlobalSslciphersuites", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemGuiact", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemHa", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemHaMonitoredips", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemHaPeer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemHascheduledcheck", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemInterface", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocalinpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocalinpolicy6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogDiskFilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogDiskSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogFortianalyzer2Filter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogFortianalyzer2Setting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogFortianalyzer3Filter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogFortianalyzer3Setting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogFortianalyzerFilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogFortianalyzerSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogMemoryFilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogMemorySetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogSyslogd2Filter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogSyslogd2Setting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogSyslogd3Filter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogSyslogd3Setting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogSyslogdFilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLocallogSyslogdSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogAlert", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogDevicedisable", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogFospolicystats", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogInterfacestats", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogIoc", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogMaildomain", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogRatelimit", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogRatelimitDevice", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogRatelimitRatelimits", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogSettings", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogSettingsRollinganalyzer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogSettingsRollinglocal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogSettingsRollingregular", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogTopology", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogUeba", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogfetchClientprofile", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogfetchClientprofileDevicefilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemLogfetchServersettings", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemMail", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemMetadataAdmins", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemNtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemNtpNtpserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemPasswordpolicy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemReportAutocache", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemReportEstbrowsetime", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemReportSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemRoute", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemRoute6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSaml", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSamlFabricidp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSamlServiceproviders", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSniffer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSnmpCommunity", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSnmpCommunityHosts", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSnmpCommunityHosts6", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSnmpSysinfo", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSnmpUser", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSocfabric", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSocfabricTrustedlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSql", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSqlCustomindex", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSqlCustomskipidx", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSqlTsindexfield", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemSyslog", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemTemplate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemWebproxy", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemWorkflowApprovalmatrix", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systemWorkflowApprovalmatrixApprover", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempDeviceProfileFortianalyzer", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempDeviceProfileFortiguard", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempLogFortianalyzerSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempLogFortianalyzercloudSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempLogSyslogdFilter", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempLogSyslogdSetting", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemCentralmanagement", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemCentralmanagementServerlist", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemEmailserver", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemGlobal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemNtp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemReplacemsgDevicedetectionportal", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemReplacemsgNntp", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemSnmpSysinfo", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/systempSystemSnmpUser", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wanTemplate", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwan", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanDuplication", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanHealthcheck", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanHealthcheckSla", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanMembers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanMembersMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanNeighbor", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanService", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanServiceMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanServiceSla", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanZone", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemSdwanZoneMove", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemVirtualwanlink", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemVirtualwanlinkHealthcheck", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemVirtualwanlinkHealthcheckSla", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemVirtualwanlinkMembers", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemVirtualwanlinkNeighbor", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemVirtualwanlinkService", _module)
pulumi.runtime.registerResourceModule("fortimanager", "index/wantempSystemVirtualwanlinkServiceSla", _module)
pulumi.runtime.registerResourcePackage("fortimanager", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:fortimanager") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
