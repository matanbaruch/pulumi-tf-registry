// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PackagesFirewallHyperscalepolicy46 extends pulumi.CustomResource {
    /**
     * Get an existing PackagesFirewallHyperscalepolicy46 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PackagesFirewallHyperscalepolicy46State, opts?: pulumi.CustomResourceOptions): PackagesFirewallHyperscalepolicy46 {
        return new PackagesFirewallHyperscalepolicy46(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/packagesFirewallHyperscalepolicy46:PackagesFirewallHyperscalepolicy46';

    /**
     * Returns true if the given object is an instance of PackagesFirewallHyperscalepolicy46.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PackagesFirewallHyperscalepolicy46 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PackagesFirewallHyperscalepolicy46.__pulumiType;
    }

    public readonly action!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly cgnLogServerGrp!: pulumi.Output<string | undefined>;
    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly dstaddr!: pulumi.Output<string | undefined>;
    public readonly dstintf!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly pkg!: pulumi.Output<string>;
    public readonly pkgFolderPath!: pulumi.Output<string | undefined>;
    public readonly policyOffload!: pulumi.Output<string | undefined>;
    public readonly policyid!: pulumi.Output<number | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly service!: pulumi.Output<string | undefined>;
    public readonly srcaddr!: pulumi.Output<string | undefined>;
    public readonly srcintf!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly tcpTimeoutPid!: pulumi.Output<string | undefined>;
    public readonly trafficShaper!: pulumi.Output<string | undefined>;
    public readonly trafficShaperReverse!: pulumi.Output<string | undefined>;
    public readonly udpTimeoutPid!: pulumi.Output<string | undefined>;
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a PackagesFirewallHyperscalepolicy46 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PackagesFirewallHyperscalepolicy46Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PackagesFirewallHyperscalepolicy46Args | PackagesFirewallHyperscalepolicy46State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PackagesFirewallHyperscalepolicy46State | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["cgnLogServerGrp"] = state ? state.cgnLogServerGrp : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["dstaddr"] = state ? state.dstaddr : undefined;
            resourceInputs["dstintf"] = state ? state.dstintf : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pkg"] = state ? state.pkg : undefined;
            resourceInputs["pkgFolderPath"] = state ? state.pkgFolderPath : undefined;
            resourceInputs["policyOffload"] = state ? state.policyOffload : undefined;
            resourceInputs["policyid"] = state ? state.policyid : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["srcaddr"] = state ? state.srcaddr : undefined;
            resourceInputs["srcintf"] = state ? state.srcintf : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tcpTimeoutPid"] = state ? state.tcpTimeoutPid : undefined;
            resourceInputs["trafficShaper"] = state ? state.trafficShaper : undefined;
            resourceInputs["trafficShaperReverse"] = state ? state.trafficShaperReverse : undefined;
            resourceInputs["udpTimeoutPid"] = state ? state.udpTimeoutPid : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as PackagesFirewallHyperscalepolicy46Args | undefined;
            if ((!args || args.pkg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pkg'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["cgnLogServerGrp"] = args ? args.cgnLogServerGrp : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["dstaddr"] = args ? args.dstaddr : undefined;
            resourceInputs["dstintf"] = args ? args.dstintf : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pkg"] = args ? args.pkg : undefined;
            resourceInputs["pkgFolderPath"] = args ? args.pkgFolderPath : undefined;
            resourceInputs["policyOffload"] = args ? args.policyOffload : undefined;
            resourceInputs["policyid"] = args ? args.policyid : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["srcaddr"] = args ? args.srcaddr : undefined;
            resourceInputs["srcintf"] = args ? args.srcintf : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tcpTimeoutPid"] = args ? args.tcpTimeoutPid : undefined;
            resourceInputs["trafficShaper"] = args ? args.trafficShaper : undefined;
            resourceInputs["trafficShaperReverse"] = args ? args.trafficShaperReverse : undefined;
            resourceInputs["udpTimeoutPid"] = args ? args.udpTimeoutPid : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PackagesFirewallHyperscalepolicy46.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PackagesFirewallHyperscalepolicy46 resources.
 */
export interface PackagesFirewallHyperscalepolicy46State {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    cgnLogServerGrp?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    dstaddr?: pulumi.Input<string>;
    dstintf?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pkg?: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    policyOffload?: pulumi.Input<string>;
    policyid?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    srcaddr?: pulumi.Input<string>;
    srcintf?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tcpTimeoutPid?: pulumi.Input<string>;
    trafficShaper?: pulumi.Input<string>;
    trafficShaperReverse?: pulumi.Input<string>;
    udpTimeoutPid?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PackagesFirewallHyperscalepolicy46 resource.
 */
export interface PackagesFirewallHyperscalepolicy46Args {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    cgnLogServerGrp?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    dstaddr?: pulumi.Input<string>;
    dstintf?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    pkg: pulumi.Input<string>;
    pkgFolderPath?: pulumi.Input<string>;
    policyOffload?: pulumi.Input<string>;
    policyid?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    srcaddr?: pulumi.Input<string>;
    srcintf?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tcpTimeoutPid?: pulumi.Input<string>;
    trafficShaper?: pulumi.Input<string>;
    trafficShaperReverse?: pulumi.Input<string>;
    udpTimeoutPid?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
