// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectSwitchcontrollerManagedswitch extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSwitchcontrollerManagedswitch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSwitchcontrollerManagedswitchState, opts?: pulumi.CustomResourceOptions): ObjectSwitchcontrollerManagedswitch {
        return new ObjectSwitchcontrollerManagedswitch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSwitchcontrollerManagedswitch:ObjectSwitchcontrollerManagedswitch';

    /**
     * Returns true if the given object is an instance of ObjectSwitchcontrollerManagedswitch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSwitchcontrollerManagedswitch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSwitchcontrollerManagedswitch.__pulumiType;
    }

    public readonly _platform!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly customCommands!: pulumi.Output<outputs.ObjectSwitchcontrollerManagedswitchCustomCommand[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly dhcpServerAccessList!: pulumi.Output<string>;
    public readonly dhcpSnoopingStaticClients!: pulumi.Output<outputs.ObjectSwitchcontrollerManagedswitchDhcpSnoopingStaticClient[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly firmwareProvision!: pulumi.Output<string>;
    public readonly firmwareProvisionLatest!: pulumi.Output<string>;
    public readonly firmwareProvisionVersion!: pulumi.Output<string | undefined>;
    public readonly l3Discovered!: pulumi.Output<number | undefined>;
    public readonly mclagIgmpSnoopingAware!: pulumi.Output<string>;
    public readonly mgmtMode!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly overrideSnmpCommunity!: pulumi.Output<string>;
    public readonly overrideSnmpSysinfo!: pulumi.Output<string>;
    public readonly overrideSnmpTrapThreshold!: pulumi.Output<string>;
    public readonly overrideSnmpUser!: pulumi.Output<string>;
    public readonly poeDetectionType!: pulumi.Output<number | undefined>;
    public readonly ports!: pulumi.Output<outputs.ObjectSwitchcontrollerManagedswitchPort[] | undefined>;
    public readonly ptpProfile!: pulumi.Output<string>;
    public readonly ptpStatus!: pulumi.Output<string>;
    public readonly purdueLevel!: pulumi.Output<string>;
    public readonly qosDropPolicy!: pulumi.Output<string>;
    public readonly qosRedProbability!: pulumi.Output<number>;
    public readonly radiusNasIp!: pulumi.Output<string | undefined>;
    public readonly radiusNasIpOverride!: pulumi.Output<string>;
    public readonly routeOffload!: pulumi.Output<string>;
    public readonly routeOffloadMclag!: pulumi.Output<string>;
    public readonly routeOffloadRouters!: pulumi.Output<outputs.ObjectSwitchcontrollerManagedswitchRouteOffloadRouter[] | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly switchDhcpOpt43Key!: pulumi.Output<string | undefined>;
    public readonly switchId!: pulumi.Output<string | undefined>;
    public readonly tdrSupported!: pulumi.Output<string | undefined>;
    public readonly tunnelDiscovered!: pulumi.Output<number | undefined>;
    public readonly vlans!: pulumi.Output<outputs.ObjectSwitchcontrollerManagedswitchVlan[] | undefined>;

    /**
     * Create a ObjectSwitchcontrollerManagedswitch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSwitchcontrollerManagedswitchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSwitchcontrollerManagedswitchArgs | ObjectSwitchcontrollerManagedswitchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSwitchcontrollerManagedswitchState | undefined;
            resourceInputs["_platform"] = state ? state._platform : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["customCommands"] = state ? state.customCommands : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dhcpServerAccessList"] = state ? state.dhcpServerAccessList : undefined;
            resourceInputs["dhcpSnoopingStaticClients"] = state ? state.dhcpSnoopingStaticClients : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["firmwareProvision"] = state ? state.firmwareProvision : undefined;
            resourceInputs["firmwareProvisionLatest"] = state ? state.firmwareProvisionLatest : undefined;
            resourceInputs["firmwareProvisionVersion"] = state ? state.firmwareProvisionVersion : undefined;
            resourceInputs["l3Discovered"] = state ? state.l3Discovered : undefined;
            resourceInputs["mclagIgmpSnoopingAware"] = state ? state.mclagIgmpSnoopingAware : undefined;
            resourceInputs["mgmtMode"] = state ? state.mgmtMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrideSnmpCommunity"] = state ? state.overrideSnmpCommunity : undefined;
            resourceInputs["overrideSnmpSysinfo"] = state ? state.overrideSnmpSysinfo : undefined;
            resourceInputs["overrideSnmpTrapThreshold"] = state ? state.overrideSnmpTrapThreshold : undefined;
            resourceInputs["overrideSnmpUser"] = state ? state.overrideSnmpUser : undefined;
            resourceInputs["poeDetectionType"] = state ? state.poeDetectionType : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["ptpProfile"] = state ? state.ptpProfile : undefined;
            resourceInputs["ptpStatus"] = state ? state.ptpStatus : undefined;
            resourceInputs["purdueLevel"] = state ? state.purdueLevel : undefined;
            resourceInputs["qosDropPolicy"] = state ? state.qosDropPolicy : undefined;
            resourceInputs["qosRedProbability"] = state ? state.qosRedProbability : undefined;
            resourceInputs["radiusNasIp"] = state ? state.radiusNasIp : undefined;
            resourceInputs["radiusNasIpOverride"] = state ? state.radiusNasIpOverride : undefined;
            resourceInputs["routeOffload"] = state ? state.routeOffload : undefined;
            resourceInputs["routeOffloadMclag"] = state ? state.routeOffloadMclag : undefined;
            resourceInputs["routeOffloadRouters"] = state ? state.routeOffloadRouters : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["switchDhcpOpt43Key"] = state ? state.switchDhcpOpt43Key : undefined;
            resourceInputs["switchId"] = state ? state.switchId : undefined;
            resourceInputs["tdrSupported"] = state ? state.tdrSupported : undefined;
            resourceInputs["tunnelDiscovered"] = state ? state.tunnelDiscovered : undefined;
            resourceInputs["vlans"] = state ? state.vlans : undefined;
        } else {
            const args = argsOrState as ObjectSwitchcontrollerManagedswitchArgs | undefined;
            resourceInputs["_platform"] = args ? args._platform : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["customCommands"] = args ? args.customCommands : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dhcpServerAccessList"] = args ? args.dhcpServerAccessList : undefined;
            resourceInputs["dhcpSnoopingStaticClients"] = args ? args.dhcpSnoopingStaticClients : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["firmwareProvision"] = args ? args.firmwareProvision : undefined;
            resourceInputs["firmwareProvisionLatest"] = args ? args.firmwareProvisionLatest : undefined;
            resourceInputs["firmwareProvisionVersion"] = args ? args.firmwareProvisionVersion : undefined;
            resourceInputs["l3Discovered"] = args ? args.l3Discovered : undefined;
            resourceInputs["mclagIgmpSnoopingAware"] = args ? args.mclagIgmpSnoopingAware : undefined;
            resourceInputs["mgmtMode"] = args ? args.mgmtMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrideSnmpCommunity"] = args ? args.overrideSnmpCommunity : undefined;
            resourceInputs["overrideSnmpSysinfo"] = args ? args.overrideSnmpSysinfo : undefined;
            resourceInputs["overrideSnmpTrapThreshold"] = args ? args.overrideSnmpTrapThreshold : undefined;
            resourceInputs["overrideSnmpUser"] = args ? args.overrideSnmpUser : undefined;
            resourceInputs["poeDetectionType"] = args ? args.poeDetectionType : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["ptpProfile"] = args ? args.ptpProfile : undefined;
            resourceInputs["ptpStatus"] = args ? args.ptpStatus : undefined;
            resourceInputs["purdueLevel"] = args ? args.purdueLevel : undefined;
            resourceInputs["qosDropPolicy"] = args ? args.qosDropPolicy : undefined;
            resourceInputs["qosRedProbability"] = args ? args.qosRedProbability : undefined;
            resourceInputs["radiusNasIp"] = args ? args.radiusNasIp : undefined;
            resourceInputs["radiusNasIpOverride"] = args ? args.radiusNasIpOverride : undefined;
            resourceInputs["routeOffload"] = args ? args.routeOffload : undefined;
            resourceInputs["routeOffloadMclag"] = args ? args.routeOffloadMclag : undefined;
            resourceInputs["routeOffloadRouters"] = args ? args.routeOffloadRouters : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["switchDhcpOpt43Key"] = args ? args.switchDhcpOpt43Key : undefined;
            resourceInputs["switchId"] = args ? args.switchId : undefined;
            resourceInputs["tdrSupported"] = args ? args.tdrSupported : undefined;
            resourceInputs["tunnelDiscovered"] = args ? args.tunnelDiscovered : undefined;
            resourceInputs["vlans"] = args ? args.vlans : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSwitchcontrollerManagedswitch.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSwitchcontrollerManagedswitch resources.
 */
export interface ObjectSwitchcontrollerManagedswitchState {
    _platform?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    customCommands?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchCustomCommand>[]>;
    description?: pulumi.Input<string>;
    dhcpServerAccessList?: pulumi.Input<string>;
    dhcpSnoopingStaticClients?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchDhcpSnoopingStaticClient>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    firmwareProvision?: pulumi.Input<string>;
    firmwareProvisionLatest?: pulumi.Input<string>;
    firmwareProvisionVersion?: pulumi.Input<string>;
    l3Discovered?: pulumi.Input<number>;
    mclagIgmpSnoopingAware?: pulumi.Input<string>;
    mgmtMode?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    overrideSnmpCommunity?: pulumi.Input<string>;
    overrideSnmpSysinfo?: pulumi.Input<string>;
    overrideSnmpTrapThreshold?: pulumi.Input<string>;
    overrideSnmpUser?: pulumi.Input<string>;
    poeDetectionType?: pulumi.Input<number>;
    ports?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchPort>[]>;
    ptpProfile?: pulumi.Input<string>;
    ptpStatus?: pulumi.Input<string>;
    purdueLevel?: pulumi.Input<string>;
    qosDropPolicy?: pulumi.Input<string>;
    qosRedProbability?: pulumi.Input<number>;
    radiusNasIp?: pulumi.Input<string>;
    radiusNasIpOverride?: pulumi.Input<string>;
    routeOffload?: pulumi.Input<string>;
    routeOffloadMclag?: pulumi.Input<string>;
    routeOffloadRouters?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchRouteOffloadRouter>[]>;
    scopetype?: pulumi.Input<string>;
    switchDhcpOpt43Key?: pulumi.Input<string>;
    switchId?: pulumi.Input<string>;
    tdrSupported?: pulumi.Input<string>;
    tunnelDiscovered?: pulumi.Input<number>;
    vlans?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchVlan>[]>;
}

/**
 * The set of arguments for constructing a ObjectSwitchcontrollerManagedswitch resource.
 */
export interface ObjectSwitchcontrollerManagedswitchArgs {
    _platform?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    customCommands?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchCustomCommand>[]>;
    description?: pulumi.Input<string>;
    dhcpServerAccessList?: pulumi.Input<string>;
    dhcpSnoopingStaticClients?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchDhcpSnoopingStaticClient>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    firmwareProvision?: pulumi.Input<string>;
    firmwareProvisionLatest?: pulumi.Input<string>;
    firmwareProvisionVersion?: pulumi.Input<string>;
    l3Discovered?: pulumi.Input<number>;
    mclagIgmpSnoopingAware?: pulumi.Input<string>;
    mgmtMode?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    overrideSnmpCommunity?: pulumi.Input<string>;
    overrideSnmpSysinfo?: pulumi.Input<string>;
    overrideSnmpTrapThreshold?: pulumi.Input<string>;
    overrideSnmpUser?: pulumi.Input<string>;
    poeDetectionType?: pulumi.Input<number>;
    ports?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchPort>[]>;
    ptpProfile?: pulumi.Input<string>;
    ptpStatus?: pulumi.Input<string>;
    purdueLevel?: pulumi.Input<string>;
    qosDropPolicy?: pulumi.Input<string>;
    qosRedProbability?: pulumi.Input<number>;
    radiusNasIp?: pulumi.Input<string>;
    radiusNasIpOverride?: pulumi.Input<string>;
    routeOffload?: pulumi.Input<string>;
    routeOffloadMclag?: pulumi.Input<string>;
    routeOffloadRouters?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchRouteOffloadRouter>[]>;
    scopetype?: pulumi.Input<string>;
    switchDhcpOpt43Key?: pulumi.Input<string>;
    switchId?: pulumi.Input<string>;
    tdrSupported?: pulumi.Input<string>;
    tunnelDiscovered?: pulumi.Input<number>;
    vlans?: pulumi.Input<pulumi.Input<inputs.ObjectSwitchcontrollerManagedswitchVlan>[]>;
}
