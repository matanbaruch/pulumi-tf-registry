// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectAuthenticationScheme extends pulumi.CustomResource {
    /**
     * Get an existing ObjectAuthenticationScheme resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectAuthenticationSchemeState, opts?: pulumi.CustomResourceOptions): ObjectAuthenticationScheme {
        return new ObjectAuthenticationScheme(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectAuthenticationScheme:ObjectAuthenticationScheme';

    /**
     * Returns true if the given object is an instance of ObjectAuthenticationScheme.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectAuthenticationScheme {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectAuthenticationScheme.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly domainController!: pulumi.Output<string | undefined>;
    public readonly emsDeviceOwner!: pulumi.Output<string>;
    public readonly fssoAgentForNtlm!: pulumi.Output<string | undefined>;
    public readonly fssoGuest!: pulumi.Output<string>;
    public readonly kerberosKeytab!: pulumi.Output<string | undefined>;
    public readonly methods!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly negotiateNtlm!: pulumi.Output<string | undefined>;
    public readonly requireTfa!: pulumi.Output<string>;
    public readonly samlServer!: pulumi.Output<string | undefined>;
    public readonly samlTimeout!: pulumi.Output<number>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sshCa!: pulumi.Output<string | undefined>;
    public readonly userCert!: pulumi.Output<string>;
    public readonly userDatabases!: pulumi.Output<string[]>;

    /**
     * Create a ObjectAuthenticationScheme resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectAuthenticationSchemeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectAuthenticationSchemeArgs | ObjectAuthenticationSchemeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectAuthenticationSchemeState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["domainController"] = state ? state.domainController : undefined;
            resourceInputs["emsDeviceOwner"] = state ? state.emsDeviceOwner : undefined;
            resourceInputs["fssoAgentForNtlm"] = state ? state.fssoAgentForNtlm : undefined;
            resourceInputs["fssoGuest"] = state ? state.fssoGuest : undefined;
            resourceInputs["kerberosKeytab"] = state ? state.kerberosKeytab : undefined;
            resourceInputs["methods"] = state ? state.methods : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["negotiateNtlm"] = state ? state.negotiateNtlm : undefined;
            resourceInputs["requireTfa"] = state ? state.requireTfa : undefined;
            resourceInputs["samlServer"] = state ? state.samlServer : undefined;
            resourceInputs["samlTimeout"] = state ? state.samlTimeout : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sshCa"] = state ? state.sshCa : undefined;
            resourceInputs["userCert"] = state ? state.userCert : undefined;
            resourceInputs["userDatabases"] = state ? state.userDatabases : undefined;
        } else {
            const args = argsOrState as ObjectAuthenticationSchemeArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["domainController"] = args ? args.domainController : undefined;
            resourceInputs["emsDeviceOwner"] = args ? args.emsDeviceOwner : undefined;
            resourceInputs["fssoAgentForNtlm"] = args ? args.fssoAgentForNtlm : undefined;
            resourceInputs["fssoGuest"] = args ? args.fssoGuest : undefined;
            resourceInputs["kerberosKeytab"] = args ? args.kerberosKeytab : undefined;
            resourceInputs["methods"] = args ? args.methods : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["negotiateNtlm"] = args ? args.negotiateNtlm : undefined;
            resourceInputs["requireTfa"] = args ? args.requireTfa : undefined;
            resourceInputs["samlServer"] = args ? args.samlServer : undefined;
            resourceInputs["samlTimeout"] = args ? args.samlTimeout : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sshCa"] = args ? args.sshCa : undefined;
            resourceInputs["userCert"] = args ? args.userCert : undefined;
            resourceInputs["userDatabases"] = args ? args.userDatabases : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectAuthenticationScheme.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectAuthenticationScheme resources.
 */
export interface ObjectAuthenticationSchemeState {
    adom?: pulumi.Input<string>;
    domainController?: pulumi.Input<string>;
    emsDeviceOwner?: pulumi.Input<string>;
    fssoAgentForNtlm?: pulumi.Input<string>;
    fssoGuest?: pulumi.Input<string>;
    kerberosKeytab?: pulumi.Input<string>;
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    negotiateNtlm?: pulumi.Input<string>;
    requireTfa?: pulumi.Input<string>;
    samlServer?: pulumi.Input<string>;
    samlTimeout?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    sshCa?: pulumi.Input<string>;
    userCert?: pulumi.Input<string>;
    userDatabases?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ObjectAuthenticationScheme resource.
 */
export interface ObjectAuthenticationSchemeArgs {
    adom?: pulumi.Input<string>;
    domainController?: pulumi.Input<string>;
    emsDeviceOwner?: pulumi.Input<string>;
    fssoAgentForNtlm?: pulumi.Input<string>;
    fssoGuest?: pulumi.Input<string>;
    kerberosKeytab?: pulumi.Input<string>;
    methods?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    negotiateNtlm?: pulumi.Input<string>;
    requireTfa?: pulumi.Input<string>;
    samlServer?: pulumi.Input<string>;
    samlTimeout?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    sshCa?: pulumi.Input<string>;
    userCert?: pulumi.Input<string>;
    userDatabases?: pulumi.Input<pulumi.Input<string>[]>;
}
