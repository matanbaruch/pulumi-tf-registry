// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectSwitchcontrollerSecuritypolicy8021x extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSwitchcontrollerSecuritypolicy8021x resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSwitchcontrollerSecuritypolicy8021xState, opts?: pulumi.CustomResourceOptions): ObjectSwitchcontrollerSecuritypolicy8021x {
        return new ObjectSwitchcontrollerSecuritypolicy8021x(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSwitchcontrollerSecuritypolicy8021x:ObjectSwitchcontrollerSecuritypolicy8021x';

    /**
     * Returns true if the given object is an instance of ObjectSwitchcontrollerSecuritypolicy8021x.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSwitchcontrollerSecuritypolicy8021x {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSwitchcontrollerSecuritypolicy8021x.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly authFailVlan!: pulumi.Output<string>;
    public readonly authFailVlanId!: pulumi.Output<string | undefined>;
    public readonly authFailVlanid!: pulumi.Output<number | undefined>;
    public readonly authserverTimeoutPeriod!: pulumi.Output<number | undefined>;
    public readonly authserverTimeoutVlan!: pulumi.Output<string>;
    public readonly authserverTimeoutVlanid!: pulumi.Output<string | undefined>;
    public readonly eapAutoUntaggedVlans!: pulumi.Output<string>;
    public readonly eapPassthru!: pulumi.Output<string>;
    public readonly framevidApply!: pulumi.Output<string>;
    public readonly guestAuthDelay!: pulumi.Output<number>;
    public readonly guestVlan!: pulumi.Output<string>;
    public readonly guestVlanId!: pulumi.Output<string | undefined>;
    public readonly guestVlanid!: pulumi.Output<number | undefined>;
    public readonly macAuthBypass!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly openAuth!: pulumi.Output<string>;
    public readonly policyType!: pulumi.Output<string>;
    public readonly radiusTimeoutOverwrite!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly securityMode!: pulumi.Output<string>;
    public readonly userGroups!: pulumi.Output<string[]>;

    /**
     * Create a ObjectSwitchcontrollerSecuritypolicy8021x resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSwitchcontrollerSecuritypolicy8021xArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSwitchcontrollerSecuritypolicy8021xArgs | ObjectSwitchcontrollerSecuritypolicy8021xState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSwitchcontrollerSecuritypolicy8021xState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["authFailVlan"] = state ? state.authFailVlan : undefined;
            resourceInputs["authFailVlanId"] = state ? state.authFailVlanId : undefined;
            resourceInputs["authFailVlanid"] = state ? state.authFailVlanid : undefined;
            resourceInputs["authserverTimeoutPeriod"] = state ? state.authserverTimeoutPeriod : undefined;
            resourceInputs["authserverTimeoutVlan"] = state ? state.authserverTimeoutVlan : undefined;
            resourceInputs["authserverTimeoutVlanid"] = state ? state.authserverTimeoutVlanid : undefined;
            resourceInputs["eapAutoUntaggedVlans"] = state ? state.eapAutoUntaggedVlans : undefined;
            resourceInputs["eapPassthru"] = state ? state.eapPassthru : undefined;
            resourceInputs["framevidApply"] = state ? state.framevidApply : undefined;
            resourceInputs["guestAuthDelay"] = state ? state.guestAuthDelay : undefined;
            resourceInputs["guestVlan"] = state ? state.guestVlan : undefined;
            resourceInputs["guestVlanId"] = state ? state.guestVlanId : undefined;
            resourceInputs["guestVlanid"] = state ? state.guestVlanid : undefined;
            resourceInputs["macAuthBypass"] = state ? state.macAuthBypass : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["openAuth"] = state ? state.openAuth : undefined;
            resourceInputs["policyType"] = state ? state.policyType : undefined;
            resourceInputs["radiusTimeoutOverwrite"] = state ? state.radiusTimeoutOverwrite : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["securityMode"] = state ? state.securityMode : undefined;
            resourceInputs["userGroups"] = state ? state.userGroups : undefined;
        } else {
            const args = argsOrState as ObjectSwitchcontrollerSecuritypolicy8021xArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["authFailVlan"] = args ? args.authFailVlan : undefined;
            resourceInputs["authFailVlanId"] = args ? args.authFailVlanId : undefined;
            resourceInputs["authFailVlanid"] = args ? args.authFailVlanid : undefined;
            resourceInputs["authserverTimeoutPeriod"] = args ? args.authserverTimeoutPeriod : undefined;
            resourceInputs["authserverTimeoutVlan"] = args ? args.authserverTimeoutVlan : undefined;
            resourceInputs["authserverTimeoutVlanid"] = args ? args.authserverTimeoutVlanid : undefined;
            resourceInputs["eapAutoUntaggedVlans"] = args ? args.eapAutoUntaggedVlans : undefined;
            resourceInputs["eapPassthru"] = args ? args.eapPassthru : undefined;
            resourceInputs["framevidApply"] = args ? args.framevidApply : undefined;
            resourceInputs["guestAuthDelay"] = args ? args.guestAuthDelay : undefined;
            resourceInputs["guestVlan"] = args ? args.guestVlan : undefined;
            resourceInputs["guestVlanId"] = args ? args.guestVlanId : undefined;
            resourceInputs["guestVlanid"] = args ? args.guestVlanid : undefined;
            resourceInputs["macAuthBypass"] = args ? args.macAuthBypass : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openAuth"] = args ? args.openAuth : undefined;
            resourceInputs["policyType"] = args ? args.policyType : undefined;
            resourceInputs["radiusTimeoutOverwrite"] = args ? args.radiusTimeoutOverwrite : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["securityMode"] = args ? args.securityMode : undefined;
            resourceInputs["userGroups"] = args ? args.userGroups : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSwitchcontrollerSecuritypolicy8021x.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSwitchcontrollerSecuritypolicy8021x resources.
 */
export interface ObjectSwitchcontrollerSecuritypolicy8021xState {
    adom?: pulumi.Input<string>;
    authFailVlan?: pulumi.Input<string>;
    authFailVlanId?: pulumi.Input<string>;
    authFailVlanid?: pulumi.Input<number>;
    authserverTimeoutPeriod?: pulumi.Input<number>;
    authserverTimeoutVlan?: pulumi.Input<string>;
    authserverTimeoutVlanid?: pulumi.Input<string>;
    eapAutoUntaggedVlans?: pulumi.Input<string>;
    eapPassthru?: pulumi.Input<string>;
    framevidApply?: pulumi.Input<string>;
    guestAuthDelay?: pulumi.Input<number>;
    guestVlan?: pulumi.Input<string>;
    guestVlanId?: pulumi.Input<string>;
    guestVlanid?: pulumi.Input<number>;
    macAuthBypass?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    openAuth?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
    radiusTimeoutOverwrite?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    securityMode?: pulumi.Input<string>;
    userGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ObjectSwitchcontrollerSecuritypolicy8021x resource.
 */
export interface ObjectSwitchcontrollerSecuritypolicy8021xArgs {
    adom?: pulumi.Input<string>;
    authFailVlan?: pulumi.Input<string>;
    authFailVlanId?: pulumi.Input<string>;
    authFailVlanid?: pulumi.Input<number>;
    authserverTimeoutPeriod?: pulumi.Input<number>;
    authserverTimeoutVlan?: pulumi.Input<string>;
    authserverTimeoutVlanid?: pulumi.Input<string>;
    eapAutoUntaggedVlans?: pulumi.Input<string>;
    eapPassthru?: pulumi.Input<string>;
    framevidApply?: pulumi.Input<string>;
    guestAuthDelay?: pulumi.Input<number>;
    guestVlan?: pulumi.Input<string>;
    guestVlanId?: pulumi.Input<string>;
    guestVlanid?: pulumi.Input<number>;
    macAuthBypass?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    openAuth?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
    radiusTimeoutOverwrite?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    securityMode?: pulumi.Input<string>;
    userGroups?: pulumi.Input<pulumi.Input<string>[]>;
}
