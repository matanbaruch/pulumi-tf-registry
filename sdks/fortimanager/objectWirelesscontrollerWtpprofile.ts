// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectWirelesscontrollerWtpprofile extends pulumi.CustomResource {
    /**
     * Get an existing ObjectWirelesscontrollerWtpprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectWirelesscontrollerWtpprofileState, opts?: pulumi.CustomResourceOptions): ObjectWirelesscontrollerWtpprofile {
        return new ObjectWirelesscontrollerWtpprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectWirelesscontrollerWtpprofile:ObjectWirelesscontrollerWtpprofile';

    /**
     * Returns true if the given object is an instance of ObjectWirelesscontrollerWtpprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectWirelesscontrollerWtpprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectWirelesscontrollerWtpprofile.__pulumiType;
    }

    public readonly _isFactorySetting!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly allowaccesses!: pulumi.Output<string[]>;
    public readonly apCountry!: pulumi.Output<string>;
    public readonly apHandoff!: pulumi.Output<string>;
    public readonly apcfgProfile!: pulumi.Output<string | undefined>;
    public readonly bleProfile!: pulumi.Output<string | undefined>;
    public readonly bonjourProfile!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly consoleLogin!: pulumi.Output<string>;
    public readonly controlMessageOffloads!: pulumi.Output<string[]>;
    public readonly denyMacLists!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileDenyMacList[] | undefined>;
    public readonly dtlsInKernel!: pulumi.Output<string | undefined>;
    public readonly dtlsPolicies!: pulumi.Output<string[]>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly energyEfficientEthernet!: pulumi.Output<string>;
    public readonly eslSesDongle!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileEslSesDongle | undefined>;
    public readonly extInfoEnable!: pulumi.Output<string>;
    public readonly frequencyHandoff!: pulumi.Output<string>;
    public readonly handoffRoaming!: pulumi.Output<string>;
    public readonly handoffRssi!: pulumi.Output<number>;
    public readonly handoffStaThresh!: pulumi.Output<number>;
    public readonly indoorOutdoorDeployment!: pulumi.Output<string>;
    public readonly ipFragmentPreventings!: pulumi.Output<string[]>;
    public readonly lan!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileLan | undefined>;
    public readonly lbs!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileLbs | undefined>;
    public readonly ledSchedules!: pulumi.Output<string[]>;
    public readonly ledState!: pulumi.Output<string>;
    public readonly lldp!: pulumi.Output<string>;
    public readonly loginPasswdChange!: pulumi.Output<string>;
    public readonly loginPasswds!: pulumi.Output<string[]>;
    public readonly maxClients!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly platform!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofilePlatform | undefined>;
    public readonly poeMode!: pulumi.Output<string>;
    public readonly radio1!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileRadio1 | undefined>;
    public readonly radio2!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileRadio2 | undefined>;
    public readonly radio3!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileRadio3 | undefined>;
    public readonly radio4!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileRadio4 | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly snmp!: pulumi.Output<string | undefined>;
    public readonly splitTunnelingAclLocalApSubnet!: pulumi.Output<string>;
    public readonly splitTunnelingAclPath!: pulumi.Output<string>;
    public readonly splitTunnelingAcls!: pulumi.Output<outputs.ObjectWirelesscontrollerWtpprofileSplitTunnelingAcl[] | undefined>;
    public readonly syslogProfile!: pulumi.Output<string | undefined>;
    public readonly tunMtuDownlink!: pulumi.Output<number | undefined>;
    public readonly tunMtuUplink!: pulumi.Output<number | undefined>;
    public readonly unii45ghzBand!: pulumi.Output<string>;
    public readonly wanPortAuth!: pulumi.Output<string>;
    public readonly wanPortAuthMacsec!: pulumi.Output<string | undefined>;
    public readonly wanPortAuthMethods!: pulumi.Output<string>;
    public readonly wanPortAuthPasswords!: pulumi.Output<string[]>;
    public readonly wanPortAuthUsrname!: pulumi.Output<string | undefined>;
    public readonly wanPortMode!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectWirelesscontrollerWtpprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectWirelesscontrollerWtpprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectWirelesscontrollerWtpprofileArgs | ObjectWirelesscontrollerWtpprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectWirelesscontrollerWtpprofileState | undefined;
            resourceInputs["_isFactorySetting"] = state ? state._isFactorySetting : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["allowaccesses"] = state ? state.allowaccesses : undefined;
            resourceInputs["apCountry"] = state ? state.apCountry : undefined;
            resourceInputs["apHandoff"] = state ? state.apHandoff : undefined;
            resourceInputs["apcfgProfile"] = state ? state.apcfgProfile : undefined;
            resourceInputs["bleProfile"] = state ? state.bleProfile : undefined;
            resourceInputs["bonjourProfile"] = state ? state.bonjourProfile : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["consoleLogin"] = state ? state.consoleLogin : undefined;
            resourceInputs["controlMessageOffloads"] = state ? state.controlMessageOffloads : undefined;
            resourceInputs["denyMacLists"] = state ? state.denyMacLists : undefined;
            resourceInputs["dtlsInKernel"] = state ? state.dtlsInKernel : undefined;
            resourceInputs["dtlsPolicies"] = state ? state.dtlsPolicies : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["energyEfficientEthernet"] = state ? state.energyEfficientEthernet : undefined;
            resourceInputs["eslSesDongle"] = state ? state.eslSesDongle : undefined;
            resourceInputs["extInfoEnable"] = state ? state.extInfoEnable : undefined;
            resourceInputs["frequencyHandoff"] = state ? state.frequencyHandoff : undefined;
            resourceInputs["handoffRoaming"] = state ? state.handoffRoaming : undefined;
            resourceInputs["handoffRssi"] = state ? state.handoffRssi : undefined;
            resourceInputs["handoffStaThresh"] = state ? state.handoffStaThresh : undefined;
            resourceInputs["indoorOutdoorDeployment"] = state ? state.indoorOutdoorDeployment : undefined;
            resourceInputs["ipFragmentPreventings"] = state ? state.ipFragmentPreventings : undefined;
            resourceInputs["lan"] = state ? state.lan : undefined;
            resourceInputs["lbs"] = state ? state.lbs : undefined;
            resourceInputs["ledSchedules"] = state ? state.ledSchedules : undefined;
            resourceInputs["ledState"] = state ? state.ledState : undefined;
            resourceInputs["lldp"] = state ? state.lldp : undefined;
            resourceInputs["loginPasswdChange"] = state ? state.loginPasswdChange : undefined;
            resourceInputs["loginPasswds"] = state ? state.loginPasswds : undefined;
            resourceInputs["maxClients"] = state ? state.maxClients : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["poeMode"] = state ? state.poeMode : undefined;
            resourceInputs["radio1"] = state ? state.radio1 : undefined;
            resourceInputs["radio2"] = state ? state.radio2 : undefined;
            resourceInputs["radio3"] = state ? state.radio3 : undefined;
            resourceInputs["radio4"] = state ? state.radio4 : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["snmp"] = state ? state.snmp : undefined;
            resourceInputs["splitTunnelingAclLocalApSubnet"] = state ? state.splitTunnelingAclLocalApSubnet : undefined;
            resourceInputs["splitTunnelingAclPath"] = state ? state.splitTunnelingAclPath : undefined;
            resourceInputs["splitTunnelingAcls"] = state ? state.splitTunnelingAcls : undefined;
            resourceInputs["syslogProfile"] = state ? state.syslogProfile : undefined;
            resourceInputs["tunMtuDownlink"] = state ? state.tunMtuDownlink : undefined;
            resourceInputs["tunMtuUplink"] = state ? state.tunMtuUplink : undefined;
            resourceInputs["unii45ghzBand"] = state ? state.unii45ghzBand : undefined;
            resourceInputs["wanPortAuth"] = state ? state.wanPortAuth : undefined;
            resourceInputs["wanPortAuthMacsec"] = state ? state.wanPortAuthMacsec : undefined;
            resourceInputs["wanPortAuthMethods"] = state ? state.wanPortAuthMethods : undefined;
            resourceInputs["wanPortAuthPasswords"] = state ? state.wanPortAuthPasswords : undefined;
            resourceInputs["wanPortAuthUsrname"] = state ? state.wanPortAuthUsrname : undefined;
            resourceInputs["wanPortMode"] = state ? state.wanPortMode : undefined;
        } else {
            const args = argsOrState as ObjectWirelesscontrollerWtpprofileArgs | undefined;
            resourceInputs["_isFactorySetting"] = args ? args._isFactorySetting : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["allowaccesses"] = args ? args.allowaccesses : undefined;
            resourceInputs["apCountry"] = args ? args.apCountry : undefined;
            resourceInputs["apHandoff"] = args ? args.apHandoff : undefined;
            resourceInputs["apcfgProfile"] = args ? args.apcfgProfile : undefined;
            resourceInputs["bleProfile"] = args ? args.bleProfile : undefined;
            resourceInputs["bonjourProfile"] = args ? args.bonjourProfile : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["consoleLogin"] = args ? args.consoleLogin : undefined;
            resourceInputs["controlMessageOffloads"] = args ? args.controlMessageOffloads : undefined;
            resourceInputs["denyMacLists"] = args ? args.denyMacLists : undefined;
            resourceInputs["dtlsInKernel"] = args ? args.dtlsInKernel : undefined;
            resourceInputs["dtlsPolicies"] = args ? args.dtlsPolicies : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["energyEfficientEthernet"] = args ? args.energyEfficientEthernet : undefined;
            resourceInputs["eslSesDongle"] = args ? args.eslSesDongle : undefined;
            resourceInputs["extInfoEnable"] = args ? args.extInfoEnable : undefined;
            resourceInputs["frequencyHandoff"] = args ? args.frequencyHandoff : undefined;
            resourceInputs["handoffRoaming"] = args ? args.handoffRoaming : undefined;
            resourceInputs["handoffRssi"] = args ? args.handoffRssi : undefined;
            resourceInputs["handoffStaThresh"] = args ? args.handoffStaThresh : undefined;
            resourceInputs["indoorOutdoorDeployment"] = args ? args.indoorOutdoorDeployment : undefined;
            resourceInputs["ipFragmentPreventings"] = args ? args.ipFragmentPreventings : undefined;
            resourceInputs["lan"] = args ? args.lan : undefined;
            resourceInputs["lbs"] = args ? args.lbs : undefined;
            resourceInputs["ledSchedules"] = args ? args.ledSchedules : undefined;
            resourceInputs["ledState"] = args ? args.ledState : undefined;
            resourceInputs["lldp"] = args ? args.lldp : undefined;
            resourceInputs["loginPasswdChange"] = args ? args.loginPasswdChange : undefined;
            resourceInputs["loginPasswds"] = args?.loginPasswds ? pulumi.secret(args.loginPasswds) : undefined;
            resourceInputs["maxClients"] = args ? args.maxClients : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["poeMode"] = args ? args.poeMode : undefined;
            resourceInputs["radio1"] = args ? args.radio1 : undefined;
            resourceInputs["radio2"] = args ? args.radio2 : undefined;
            resourceInputs["radio3"] = args ? args.radio3 : undefined;
            resourceInputs["radio4"] = args ? args.radio4 : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["snmp"] = args ? args.snmp : undefined;
            resourceInputs["splitTunnelingAclLocalApSubnet"] = args ? args.splitTunnelingAclLocalApSubnet : undefined;
            resourceInputs["splitTunnelingAclPath"] = args ? args.splitTunnelingAclPath : undefined;
            resourceInputs["splitTunnelingAcls"] = args ? args.splitTunnelingAcls : undefined;
            resourceInputs["syslogProfile"] = args ? args.syslogProfile : undefined;
            resourceInputs["tunMtuDownlink"] = args ? args.tunMtuDownlink : undefined;
            resourceInputs["tunMtuUplink"] = args ? args.tunMtuUplink : undefined;
            resourceInputs["unii45ghzBand"] = args ? args.unii45ghzBand : undefined;
            resourceInputs["wanPortAuth"] = args ? args.wanPortAuth : undefined;
            resourceInputs["wanPortAuthMacsec"] = args ? args.wanPortAuthMacsec : undefined;
            resourceInputs["wanPortAuthMethods"] = args ? args.wanPortAuthMethods : undefined;
            resourceInputs["wanPortAuthPasswords"] = args?.wanPortAuthPasswords ? pulumi.secret(args.wanPortAuthPasswords) : undefined;
            resourceInputs["wanPortAuthUsrname"] = args ? args.wanPortAuthUsrname : undefined;
            resourceInputs["wanPortMode"] = args ? args.wanPortMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["loginPasswds", "wanPortAuthPasswords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectWirelesscontrollerWtpprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectWirelesscontrollerWtpprofile resources.
 */
export interface ObjectWirelesscontrollerWtpprofileState {
    _isFactorySetting?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    allowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    apCountry?: pulumi.Input<string>;
    apHandoff?: pulumi.Input<string>;
    apcfgProfile?: pulumi.Input<string>;
    bleProfile?: pulumi.Input<string>;
    bonjourProfile?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    consoleLogin?: pulumi.Input<string>;
    controlMessageOffloads?: pulumi.Input<pulumi.Input<string>[]>;
    denyMacLists?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileDenyMacList>[]>;
    dtlsInKernel?: pulumi.Input<string>;
    dtlsPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    energyEfficientEthernet?: pulumi.Input<string>;
    eslSesDongle?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileEslSesDongle>;
    extInfoEnable?: pulumi.Input<string>;
    frequencyHandoff?: pulumi.Input<string>;
    handoffRoaming?: pulumi.Input<string>;
    handoffRssi?: pulumi.Input<number>;
    handoffStaThresh?: pulumi.Input<number>;
    indoorOutdoorDeployment?: pulumi.Input<string>;
    ipFragmentPreventings?: pulumi.Input<pulumi.Input<string>[]>;
    lan?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileLan>;
    lbs?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileLbs>;
    ledSchedules?: pulumi.Input<pulumi.Input<string>[]>;
    ledState?: pulumi.Input<string>;
    lldp?: pulumi.Input<string>;
    loginPasswdChange?: pulumi.Input<string>;
    loginPasswds?: pulumi.Input<pulumi.Input<string>[]>;
    maxClients?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    platform?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofilePlatform>;
    poeMode?: pulumi.Input<string>;
    radio1?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio1>;
    radio2?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio2>;
    radio3?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio3>;
    radio4?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio4>;
    scopetype?: pulumi.Input<string>;
    snmp?: pulumi.Input<string>;
    splitTunnelingAclLocalApSubnet?: pulumi.Input<string>;
    splitTunnelingAclPath?: pulumi.Input<string>;
    splitTunnelingAcls?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileSplitTunnelingAcl>[]>;
    syslogProfile?: pulumi.Input<string>;
    tunMtuDownlink?: pulumi.Input<number>;
    tunMtuUplink?: pulumi.Input<number>;
    unii45ghzBand?: pulumi.Input<string>;
    wanPortAuth?: pulumi.Input<string>;
    wanPortAuthMacsec?: pulumi.Input<string>;
    wanPortAuthMethods?: pulumi.Input<string>;
    wanPortAuthPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    wanPortAuthUsrname?: pulumi.Input<string>;
    wanPortMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectWirelesscontrollerWtpprofile resource.
 */
export interface ObjectWirelesscontrollerWtpprofileArgs {
    _isFactorySetting?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    allowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    apCountry?: pulumi.Input<string>;
    apHandoff?: pulumi.Input<string>;
    apcfgProfile?: pulumi.Input<string>;
    bleProfile?: pulumi.Input<string>;
    bonjourProfile?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    consoleLogin?: pulumi.Input<string>;
    controlMessageOffloads?: pulumi.Input<pulumi.Input<string>[]>;
    denyMacLists?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileDenyMacList>[]>;
    dtlsInKernel?: pulumi.Input<string>;
    dtlsPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    energyEfficientEthernet?: pulumi.Input<string>;
    eslSesDongle?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileEslSesDongle>;
    extInfoEnable?: pulumi.Input<string>;
    frequencyHandoff?: pulumi.Input<string>;
    handoffRoaming?: pulumi.Input<string>;
    handoffRssi?: pulumi.Input<number>;
    handoffStaThresh?: pulumi.Input<number>;
    indoorOutdoorDeployment?: pulumi.Input<string>;
    ipFragmentPreventings?: pulumi.Input<pulumi.Input<string>[]>;
    lan?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileLan>;
    lbs?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileLbs>;
    ledSchedules?: pulumi.Input<pulumi.Input<string>[]>;
    ledState?: pulumi.Input<string>;
    lldp?: pulumi.Input<string>;
    loginPasswdChange?: pulumi.Input<string>;
    loginPasswds?: pulumi.Input<pulumi.Input<string>[]>;
    maxClients?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    platform?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofilePlatform>;
    poeMode?: pulumi.Input<string>;
    radio1?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio1>;
    radio2?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio2>;
    radio3?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio3>;
    radio4?: pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileRadio4>;
    scopetype?: pulumi.Input<string>;
    snmp?: pulumi.Input<string>;
    splitTunnelingAclLocalApSubnet?: pulumi.Input<string>;
    splitTunnelingAclPath?: pulumi.Input<string>;
    splitTunnelingAcls?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerWtpprofileSplitTunnelingAcl>[]>;
    syslogProfile?: pulumi.Input<string>;
    tunMtuDownlink?: pulumi.Input<number>;
    tunMtuUplink?: pulumi.Input<number>;
    unii45ghzBand?: pulumi.Input<string>;
    wanPortAuth?: pulumi.Input<string>;
    wanPortAuthMacsec?: pulumi.Input<string>;
    wanPortAuthMethods?: pulumi.Input<string>;
    wanPortAuthPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    wanPortAuthUsrname?: pulumi.Input<string>;
    wanPortMode?: pulumi.Input<string>;
}
