// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectWirelesscontrollerHotspot20Hsprofile extends pulumi.CustomResource {
    /**
     * Get an existing ObjectWirelesscontrollerHotspot20Hsprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectWirelesscontrollerHotspot20HsprofileState, opts?: pulumi.CustomResourceOptions): ObjectWirelesscontrollerHotspot20Hsprofile {
        return new ObjectWirelesscontrollerHotspot20Hsprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectWirelesscontrollerHotspot20Hsprofile:ObjectWirelesscontrollerHotspot20Hsprofile';

    /**
     * Returns true if the given object is an instance of ObjectWirelesscontrollerHotspot20Hsprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectWirelesscontrollerHotspot20Hsprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectWirelesscontrollerHotspot20Hsprofile.__pulumiType;
    }

    public readonly accessNetworkAsra!: pulumi.Output<string>;
    public readonly accessNetworkEsr!: pulumi.Output<string>;
    public readonly accessNetworkInternet!: pulumi.Output<string>;
    public readonly accessNetworkType!: pulumi.Output<string>;
    public readonly accessNetworkUesa!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly adviceOfCharge!: pulumi.Output<string | undefined>;
    public readonly anqpDomainId!: pulumi.Output<number | undefined>;
    public readonly bssTransition!: pulumi.Output<string>;
    public readonly connCap!: pulumi.Output<string | undefined>;
    public readonly deauthRequestTimeout!: pulumi.Output<number>;
    public readonly dgaf!: pulumi.Output<string>;
    public readonly domainName!: pulumi.Output<string | undefined>;
    public readonly gasComebackDelay!: pulumi.Output<number>;
    public readonly gasFragmentationLimit!: pulumi.Output<number>;
    public readonly hessid!: pulumi.Output<string>;
    public readonly ipAddrType!: pulumi.Output<string | undefined>;
    public readonly l2tif!: pulumi.Output<string>;
    public readonly n3gppPlmn!: pulumi.Output<string | undefined>;
    public readonly naiRealm!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkAuth!: pulumi.Output<string | undefined>;
    public readonly operFriendlyName!: pulumi.Output<string | undefined>;
    public readonly operIcon!: pulumi.Output<string | undefined>;
    public readonly osuProviderNai!: pulumi.Output<string | undefined>;
    public readonly osuProviders!: pulumi.Output<string[]>;
    public readonly osuSsid!: pulumi.Output<string | undefined>;
    public readonly pameBi!: pulumi.Output<string>;
    public readonly proxyArp!: pulumi.Output<string>;
    public readonly qosMap!: pulumi.Output<string | undefined>;
    public readonly release!: pulumi.Output<number>;
    public readonly roamingConsortium!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly termsAndConditions!: pulumi.Output<string | undefined>;
    public readonly venueGroup!: pulumi.Output<string>;
    public readonly venueName!: pulumi.Output<string | undefined>;
    public readonly venueType!: pulumi.Output<string>;
    public readonly venueUrl!: pulumi.Output<string | undefined>;
    public readonly wanMetrics!: pulumi.Output<string | undefined>;
    public readonly wnmSleepMode!: pulumi.Output<string>;

    /**
     * Create a ObjectWirelesscontrollerHotspot20Hsprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectWirelesscontrollerHotspot20HsprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectWirelesscontrollerHotspot20HsprofileArgs | ObjectWirelesscontrollerHotspot20HsprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectWirelesscontrollerHotspot20HsprofileState | undefined;
            resourceInputs["accessNetworkAsra"] = state ? state.accessNetworkAsra : undefined;
            resourceInputs["accessNetworkEsr"] = state ? state.accessNetworkEsr : undefined;
            resourceInputs["accessNetworkInternet"] = state ? state.accessNetworkInternet : undefined;
            resourceInputs["accessNetworkType"] = state ? state.accessNetworkType : undefined;
            resourceInputs["accessNetworkUesa"] = state ? state.accessNetworkUesa : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["adviceOfCharge"] = state ? state.adviceOfCharge : undefined;
            resourceInputs["anqpDomainId"] = state ? state.anqpDomainId : undefined;
            resourceInputs["bssTransition"] = state ? state.bssTransition : undefined;
            resourceInputs["connCap"] = state ? state.connCap : undefined;
            resourceInputs["deauthRequestTimeout"] = state ? state.deauthRequestTimeout : undefined;
            resourceInputs["dgaf"] = state ? state.dgaf : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["gasComebackDelay"] = state ? state.gasComebackDelay : undefined;
            resourceInputs["gasFragmentationLimit"] = state ? state.gasFragmentationLimit : undefined;
            resourceInputs["hessid"] = state ? state.hessid : undefined;
            resourceInputs["ipAddrType"] = state ? state.ipAddrType : undefined;
            resourceInputs["l2tif"] = state ? state.l2tif : undefined;
            resourceInputs["n3gppPlmn"] = state ? state.n3gppPlmn : undefined;
            resourceInputs["naiRealm"] = state ? state.naiRealm : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkAuth"] = state ? state.networkAuth : undefined;
            resourceInputs["operFriendlyName"] = state ? state.operFriendlyName : undefined;
            resourceInputs["operIcon"] = state ? state.operIcon : undefined;
            resourceInputs["osuProviderNai"] = state ? state.osuProviderNai : undefined;
            resourceInputs["osuProviders"] = state ? state.osuProviders : undefined;
            resourceInputs["osuSsid"] = state ? state.osuSsid : undefined;
            resourceInputs["pameBi"] = state ? state.pameBi : undefined;
            resourceInputs["proxyArp"] = state ? state.proxyArp : undefined;
            resourceInputs["qosMap"] = state ? state.qosMap : undefined;
            resourceInputs["release"] = state ? state.release : undefined;
            resourceInputs["roamingConsortium"] = state ? state.roamingConsortium : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["termsAndConditions"] = state ? state.termsAndConditions : undefined;
            resourceInputs["venueGroup"] = state ? state.venueGroup : undefined;
            resourceInputs["venueName"] = state ? state.venueName : undefined;
            resourceInputs["venueType"] = state ? state.venueType : undefined;
            resourceInputs["venueUrl"] = state ? state.venueUrl : undefined;
            resourceInputs["wanMetrics"] = state ? state.wanMetrics : undefined;
            resourceInputs["wnmSleepMode"] = state ? state.wnmSleepMode : undefined;
        } else {
            const args = argsOrState as ObjectWirelesscontrollerHotspot20HsprofileArgs | undefined;
            resourceInputs["accessNetworkAsra"] = args ? args.accessNetworkAsra : undefined;
            resourceInputs["accessNetworkEsr"] = args ? args.accessNetworkEsr : undefined;
            resourceInputs["accessNetworkInternet"] = args ? args.accessNetworkInternet : undefined;
            resourceInputs["accessNetworkType"] = args ? args.accessNetworkType : undefined;
            resourceInputs["accessNetworkUesa"] = args ? args.accessNetworkUesa : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["adviceOfCharge"] = args ? args.adviceOfCharge : undefined;
            resourceInputs["anqpDomainId"] = args ? args.anqpDomainId : undefined;
            resourceInputs["bssTransition"] = args ? args.bssTransition : undefined;
            resourceInputs["connCap"] = args ? args.connCap : undefined;
            resourceInputs["deauthRequestTimeout"] = args ? args.deauthRequestTimeout : undefined;
            resourceInputs["dgaf"] = args ? args.dgaf : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["gasComebackDelay"] = args ? args.gasComebackDelay : undefined;
            resourceInputs["gasFragmentationLimit"] = args ? args.gasFragmentationLimit : undefined;
            resourceInputs["hessid"] = args ? args.hessid : undefined;
            resourceInputs["ipAddrType"] = args ? args.ipAddrType : undefined;
            resourceInputs["l2tif"] = args ? args.l2tif : undefined;
            resourceInputs["n3gppPlmn"] = args ? args.n3gppPlmn : undefined;
            resourceInputs["naiRealm"] = args ? args.naiRealm : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkAuth"] = args ? args.networkAuth : undefined;
            resourceInputs["operFriendlyName"] = args ? args.operFriendlyName : undefined;
            resourceInputs["operIcon"] = args ? args.operIcon : undefined;
            resourceInputs["osuProviderNai"] = args ? args.osuProviderNai : undefined;
            resourceInputs["osuProviders"] = args ? args.osuProviders : undefined;
            resourceInputs["osuSsid"] = args ? args.osuSsid : undefined;
            resourceInputs["pameBi"] = args ? args.pameBi : undefined;
            resourceInputs["proxyArp"] = args ? args.proxyArp : undefined;
            resourceInputs["qosMap"] = args ? args.qosMap : undefined;
            resourceInputs["release"] = args ? args.release : undefined;
            resourceInputs["roamingConsortium"] = args ? args.roamingConsortium : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["termsAndConditions"] = args ? args.termsAndConditions : undefined;
            resourceInputs["venueGroup"] = args ? args.venueGroup : undefined;
            resourceInputs["venueName"] = args ? args.venueName : undefined;
            resourceInputs["venueType"] = args ? args.venueType : undefined;
            resourceInputs["venueUrl"] = args ? args.venueUrl : undefined;
            resourceInputs["wanMetrics"] = args ? args.wanMetrics : undefined;
            resourceInputs["wnmSleepMode"] = args ? args.wnmSleepMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectWirelesscontrollerHotspot20Hsprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectWirelesscontrollerHotspot20Hsprofile resources.
 */
export interface ObjectWirelesscontrollerHotspot20HsprofileState {
    accessNetworkAsra?: pulumi.Input<string>;
    accessNetworkEsr?: pulumi.Input<string>;
    accessNetworkInternet?: pulumi.Input<string>;
    accessNetworkType?: pulumi.Input<string>;
    accessNetworkUesa?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    adviceOfCharge?: pulumi.Input<string>;
    anqpDomainId?: pulumi.Input<number>;
    bssTransition?: pulumi.Input<string>;
    connCap?: pulumi.Input<string>;
    deauthRequestTimeout?: pulumi.Input<number>;
    dgaf?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    gasComebackDelay?: pulumi.Input<number>;
    gasFragmentationLimit?: pulumi.Input<number>;
    hessid?: pulumi.Input<string>;
    ipAddrType?: pulumi.Input<string>;
    l2tif?: pulumi.Input<string>;
    n3gppPlmn?: pulumi.Input<string>;
    naiRealm?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkAuth?: pulumi.Input<string>;
    operFriendlyName?: pulumi.Input<string>;
    operIcon?: pulumi.Input<string>;
    osuProviderNai?: pulumi.Input<string>;
    osuProviders?: pulumi.Input<pulumi.Input<string>[]>;
    osuSsid?: pulumi.Input<string>;
    pameBi?: pulumi.Input<string>;
    proxyArp?: pulumi.Input<string>;
    qosMap?: pulumi.Input<string>;
    release?: pulumi.Input<number>;
    roamingConsortium?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    termsAndConditions?: pulumi.Input<string>;
    venueGroup?: pulumi.Input<string>;
    venueName?: pulumi.Input<string>;
    venueType?: pulumi.Input<string>;
    venueUrl?: pulumi.Input<string>;
    wanMetrics?: pulumi.Input<string>;
    wnmSleepMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectWirelesscontrollerHotspot20Hsprofile resource.
 */
export interface ObjectWirelesscontrollerHotspot20HsprofileArgs {
    accessNetworkAsra?: pulumi.Input<string>;
    accessNetworkEsr?: pulumi.Input<string>;
    accessNetworkInternet?: pulumi.Input<string>;
    accessNetworkType?: pulumi.Input<string>;
    accessNetworkUesa?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    adviceOfCharge?: pulumi.Input<string>;
    anqpDomainId?: pulumi.Input<number>;
    bssTransition?: pulumi.Input<string>;
    connCap?: pulumi.Input<string>;
    deauthRequestTimeout?: pulumi.Input<number>;
    dgaf?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    gasComebackDelay?: pulumi.Input<number>;
    gasFragmentationLimit?: pulumi.Input<number>;
    hessid?: pulumi.Input<string>;
    ipAddrType?: pulumi.Input<string>;
    l2tif?: pulumi.Input<string>;
    n3gppPlmn?: pulumi.Input<string>;
    naiRealm?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkAuth?: pulumi.Input<string>;
    operFriendlyName?: pulumi.Input<string>;
    operIcon?: pulumi.Input<string>;
    osuProviderNai?: pulumi.Input<string>;
    osuProviders?: pulumi.Input<pulumi.Input<string>[]>;
    osuSsid?: pulumi.Input<string>;
    pameBi?: pulumi.Input<string>;
    proxyArp?: pulumi.Input<string>;
    qosMap?: pulumi.Input<string>;
    release?: pulumi.Input<number>;
    roamingConsortium?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    termsAndConditions?: pulumi.Input<string>;
    venueGroup?: pulumi.Input<string>;
    venueName?: pulumi.Input<string>;
    venueType?: pulumi.Input<string>;
    venueUrl?: pulumi.Input<string>;
    wanMetrics?: pulumi.Input<string>;
    wnmSleepMode?: pulumi.Input<string>;
}
