// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectUserFsso extends pulumi.CustomResource {
    /**
     * Get an existing ObjectUserFsso resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectUserFssoState, opts?: pulumi.CustomResourceOptions): ObjectUserFsso {
        return new ObjectUserFsso(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectUserFsso:ObjectUserFsso';

    /**
     * Returns true if the given object is an instance of ObjectUserFsso.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectUserFsso {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectUserFsso.__pulumiType;
    }

    public readonly _guiMeta!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly dynamicMappings!: pulumi.Output<outputs.ObjectUserFssoDynamicMapping[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly groupPollInterval!: pulumi.Output<number | undefined>;
    public readonly interface!: pulumi.Output<string | undefined>;
    public readonly interfaceSelectMethod!: pulumi.Output<string>;
    public readonly ldapPoll!: pulumi.Output<string | undefined>;
    public readonly ldapPollFilter!: pulumi.Output<string | undefined>;
    public readonly ldapPollInterval!: pulumi.Output<number | undefined>;
    public readonly ldapServer!: pulumi.Output<string | undefined>;
    public readonly logonTimeout!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly password2s!: pulumi.Output<string[]>;
    public readonly password3s!: pulumi.Output<string[]>;
    public readonly password4s!: pulumi.Output<string[]>;
    public readonly password5s!: pulumi.Output<string[]>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly port!: pulumi.Output<number>;
    public readonly port2!: pulumi.Output<number>;
    public readonly port3!: pulumi.Output<number>;
    public readonly port4!: pulumi.Output<number>;
    public readonly port5!: pulumi.Output<number>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly server!: pulumi.Output<string | undefined>;
    public readonly server2!: pulumi.Output<string | undefined>;
    public readonly server3!: pulumi.Output<string | undefined>;
    public readonly server4!: pulumi.Output<string | undefined>;
    public readonly server5!: pulumi.Output<string | undefined>;
    public readonly sni!: pulumi.Output<string | undefined>;
    public readonly sourceIp!: pulumi.Output<string>;
    public readonly sourceIp6!: pulumi.Output<string>;
    public readonly ssl!: pulumi.Output<string>;
    public readonly sslServerHostIpCheck!: pulumi.Output<string>;
    public readonly sslTrustedCert!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly userInfoServer!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectUserFsso resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectUserFssoArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectUserFssoArgs | ObjectUserFssoState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectUserFssoState | undefined;
            resourceInputs["_guiMeta"] = state ? state._guiMeta : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["dynamicMappings"] = state ? state.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["groupPollInterval"] = state ? state.groupPollInterval : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = state ? state.interfaceSelectMethod : undefined;
            resourceInputs["ldapPoll"] = state ? state.ldapPoll : undefined;
            resourceInputs["ldapPollFilter"] = state ? state.ldapPollFilter : undefined;
            resourceInputs["ldapPollInterval"] = state ? state.ldapPollInterval : undefined;
            resourceInputs["ldapServer"] = state ? state.ldapServer : undefined;
            resourceInputs["logonTimeout"] = state ? state.logonTimeout : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password2s"] = state ? state.password2s : undefined;
            resourceInputs["password3s"] = state ? state.password3s : undefined;
            resourceInputs["password4s"] = state ? state.password4s : undefined;
            resourceInputs["password5s"] = state ? state.password5s : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["port2"] = state ? state.port2 : undefined;
            resourceInputs["port3"] = state ? state.port3 : undefined;
            resourceInputs["port4"] = state ? state.port4 : undefined;
            resourceInputs["port5"] = state ? state.port5 : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["server2"] = state ? state.server2 : undefined;
            resourceInputs["server3"] = state ? state.server3 : undefined;
            resourceInputs["server4"] = state ? state.server4 : undefined;
            resourceInputs["server5"] = state ? state.server5 : undefined;
            resourceInputs["sni"] = state ? state.sni : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["sourceIp6"] = state ? state.sourceIp6 : undefined;
            resourceInputs["ssl"] = state ? state.ssl : undefined;
            resourceInputs["sslServerHostIpCheck"] = state ? state.sslServerHostIpCheck : undefined;
            resourceInputs["sslTrustedCert"] = state ? state.sslTrustedCert : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userInfoServer"] = state ? state.userInfoServer : undefined;
        } else {
            const args = argsOrState as ObjectUserFssoArgs | undefined;
            resourceInputs["_guiMeta"] = args ? args._guiMeta : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["dynamicMappings"] = args ? args.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["groupPollInterval"] = args ? args.groupPollInterval : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceSelectMethod"] = args ? args.interfaceSelectMethod : undefined;
            resourceInputs["ldapPoll"] = args ? args.ldapPoll : undefined;
            resourceInputs["ldapPollFilter"] = args ? args.ldapPollFilter : undefined;
            resourceInputs["ldapPollInterval"] = args ? args.ldapPollInterval : undefined;
            resourceInputs["ldapServer"] = args ? args.ldapServer : undefined;
            resourceInputs["logonTimeout"] = args ? args.logonTimeout : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password2s"] = args?.password2s ? pulumi.secret(args.password2s) : undefined;
            resourceInputs["password3s"] = args?.password3s ? pulumi.secret(args.password3s) : undefined;
            resourceInputs["password4s"] = args?.password4s ? pulumi.secret(args.password4s) : undefined;
            resourceInputs["password5s"] = args?.password5s ? pulumi.secret(args.password5s) : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["port2"] = args ? args.port2 : undefined;
            resourceInputs["port3"] = args ? args.port3 : undefined;
            resourceInputs["port4"] = args ? args.port4 : undefined;
            resourceInputs["port5"] = args ? args.port5 : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["server2"] = args ? args.server2 : undefined;
            resourceInputs["server3"] = args ? args.server3 : undefined;
            resourceInputs["server4"] = args ? args.server4 : undefined;
            resourceInputs["server5"] = args ? args.server5 : undefined;
            resourceInputs["sni"] = args ? args.sni : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["sourceIp6"] = args ? args.sourceIp6 : undefined;
            resourceInputs["ssl"] = args ? args.ssl : undefined;
            resourceInputs["sslServerHostIpCheck"] = args ? args.sslServerHostIpCheck : undefined;
            resourceInputs["sslTrustedCert"] = args ? args.sslTrustedCert : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userInfoServer"] = args ? args.userInfoServer : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password2s", "password3s", "password4s", "password5s", "passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectUserFsso.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectUserFsso resources.
 */
export interface ObjectUserFssoState {
    _guiMeta?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectUserFssoDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    groupPollInterval?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    interfaceSelectMethod?: pulumi.Input<string>;
    ldapPoll?: pulumi.Input<string>;
    ldapPollFilter?: pulumi.Input<string>;
    ldapPollInterval?: pulumi.Input<number>;
    ldapServer?: pulumi.Input<string>;
    logonTimeout?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    password2s?: pulumi.Input<pulumi.Input<string>[]>;
    password3s?: pulumi.Input<pulumi.Input<string>[]>;
    password4s?: pulumi.Input<pulumi.Input<string>[]>;
    password5s?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    port2?: pulumi.Input<number>;
    port3?: pulumi.Input<number>;
    port4?: pulumi.Input<number>;
    port5?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    server2?: pulumi.Input<string>;
    server3?: pulumi.Input<string>;
    server4?: pulumi.Input<string>;
    server5?: pulumi.Input<string>;
    sni?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    sourceIp6?: pulumi.Input<string>;
    ssl?: pulumi.Input<string>;
    sslServerHostIpCheck?: pulumi.Input<string>;
    sslTrustedCert?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    userInfoServer?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectUserFsso resource.
 */
export interface ObjectUserFssoArgs {
    _guiMeta?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectUserFssoDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    groupPollInterval?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    interfaceSelectMethod?: pulumi.Input<string>;
    ldapPoll?: pulumi.Input<string>;
    ldapPollFilter?: pulumi.Input<string>;
    ldapPollInterval?: pulumi.Input<number>;
    ldapServer?: pulumi.Input<string>;
    logonTimeout?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    password2s?: pulumi.Input<pulumi.Input<string>[]>;
    password3s?: pulumi.Input<pulumi.Input<string>[]>;
    password4s?: pulumi.Input<pulumi.Input<string>[]>;
    password5s?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    port2?: pulumi.Input<number>;
    port3?: pulumi.Input<number>;
    port4?: pulumi.Input<number>;
    port5?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    server2?: pulumi.Input<string>;
    server3?: pulumi.Input<string>;
    server4?: pulumi.Input<string>;
    server5?: pulumi.Input<string>;
    sni?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    sourceIp6?: pulumi.Input<string>;
    ssl?: pulumi.Input<string>;
    sslServerHostIpCheck?: pulumi.Input<string>;
    sslTrustedCert?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    userInfoServer?: pulumi.Input<string>;
}
