// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectSystemSdnconnector extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSystemSdnconnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSystemSdnconnectorState, opts?: pulumi.CustomResourceOptions): ObjectSystemSdnconnector {
        return new ObjectSystemSdnconnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSystemSdnconnector:ObjectSystemSdnconnector';

    /**
     * Returns true if the given object is an instance of ObjectSystemSdnconnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSystemSdnconnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSystemSdnconnector.__pulumiType;
    }

    public readonly _localCert!: pulumi.Output<string | undefined>;
    public readonly accessKey!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly altResourceIp!: pulumi.Output<string>;
    public readonly apiKeys!: pulumi.Output<string[]>;
    public readonly azureRegion!: pulumi.Output<string | undefined>;
    public readonly clientId!: pulumi.Output<string | undefined>;
    public readonly clientSecrets!: pulumi.Output<string[]>;
    public readonly compartmentId!: pulumi.Output<string | undefined>;
    public readonly compartmentLists!: pulumi.Output<outputs.ObjectSystemSdnconnectorCompartmentList[] | undefined>;
    public readonly computeGeneration!: pulumi.Output<number>;
    public readonly domain!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly externalAccountLists!: pulumi.Output<outputs.ObjectSystemSdnconnectorExternalAccountList[] | undefined>;
    public readonly externalIps!: pulumi.Output<outputs.ObjectSystemSdnconnectorExternalIp[] | undefined>;
    public readonly forwardingRules!: pulumi.Output<outputs.ObjectSystemSdnconnectorForwardingRule[] | undefined>;
    public readonly gcpProject!: pulumi.Output<string | undefined>;
    public readonly gcpProjectLists!: pulumi.Output<outputs.ObjectSystemSdnconnectorGcpProjectList[] | undefined>;
    public readonly groupName!: pulumi.Output<string | undefined>;
    public readonly haStatus!: pulumi.Output<string | undefined>;
    public readonly ibmRegion!: pulumi.Output<string>;
    public readonly ibmRegionGen1!: pulumi.Output<string>;
    public readonly ibmRegionGen2!: pulumi.Output<string>;
    public readonly keyPasswds!: pulumi.Output<string[]>;
    public readonly lastUpdate!: pulumi.Output<number | undefined>;
    public readonly loginEndpoint!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nics!: pulumi.Output<outputs.ObjectSystemSdnconnectorNic[] | undefined>;
    public readonly nsxCertFingerprint!: pulumi.Output<string | undefined>;
    public readonly ociCert!: pulumi.Output<string | undefined>;
    public readonly ociFingerprint!: pulumi.Output<string | undefined>;
    public readonly ociRegion!: pulumi.Output<string | undefined>;
    public readonly ociRegionLists!: pulumi.Output<outputs.ObjectSystemSdnconnectorOciRegionList[] | undefined>;
    public readonly ociRegionType!: pulumi.Output<string | undefined>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly privateKey!: pulumi.Output<string | undefined>;
    public readonly proxy!: pulumi.Output<string | undefined>;
    public readonly region!: pulumi.Output<string | undefined>;
    public readonly resourceGroup!: pulumi.Output<string | undefined>;
    public readonly resourceUrl!: pulumi.Output<string | undefined>;
    public readonly restInterface!: pulumi.Output<string>;
    public readonly restPasswords!: pulumi.Output<string[]>;
    public readonly restSport!: pulumi.Output<number>;
    public readonly restSsl!: pulumi.Output<string>;
    public readonly routeTables!: pulumi.Output<outputs.ObjectSystemSdnconnectorRouteTable[] | undefined>;
    public readonly routes!: pulumi.Output<outputs.ObjectSystemSdnconnectorRoute[] | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly secretKeys!: pulumi.Output<string[]>;
    public readonly secretToken!: pulumi.Output<string | undefined>;
    public readonly server!: pulumi.Output<string | undefined>;
    public readonly serverCaCert!: pulumi.Output<string | undefined>;
    public readonly serverCert!: pulumi.Output<string | undefined>;
    public readonly serverLists!: pulumi.Output<string[]>;
    public readonly serverPort!: pulumi.Output<number | undefined>;
    public readonly serviceAccount!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly subscriptionId!: pulumi.Output<string | undefined>;
    public readonly tenantId!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly updateInterval!: pulumi.Output<number>;
    public readonly updating!: pulumi.Output<number | undefined>;
    public readonly useMetadataIam!: pulumi.Output<string | undefined>;
    public readonly userId!: pulumi.Output<string | undefined>;
    public readonly username!: pulumi.Output<string | undefined>;
    public readonly vcenterPasswords!: pulumi.Output<string[]>;
    public readonly vcenterServer!: pulumi.Output<string | undefined>;
    public readonly vcenterUsername!: pulumi.Output<string | undefined>;
    public readonly verifyCertificate!: pulumi.Output<string>;
    public readonly vmxImageUrl!: pulumi.Output<string | undefined>;
    public readonly vmxServiceName!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectSystemSdnconnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSystemSdnconnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSystemSdnconnectorArgs | ObjectSystemSdnconnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSystemSdnconnectorState | undefined;
            resourceInputs["_localCert"] = state ? state._localCert : undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["altResourceIp"] = state ? state.altResourceIp : undefined;
            resourceInputs["apiKeys"] = state ? state.apiKeys : undefined;
            resourceInputs["azureRegion"] = state ? state.azureRegion : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecrets"] = state ? state.clientSecrets : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["compartmentLists"] = state ? state.compartmentLists : undefined;
            resourceInputs["computeGeneration"] = state ? state.computeGeneration : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["externalAccountLists"] = state ? state.externalAccountLists : undefined;
            resourceInputs["externalIps"] = state ? state.externalIps : undefined;
            resourceInputs["forwardingRules"] = state ? state.forwardingRules : undefined;
            resourceInputs["gcpProject"] = state ? state.gcpProject : undefined;
            resourceInputs["gcpProjectLists"] = state ? state.gcpProjectLists : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["haStatus"] = state ? state.haStatus : undefined;
            resourceInputs["ibmRegion"] = state ? state.ibmRegion : undefined;
            resourceInputs["ibmRegionGen1"] = state ? state.ibmRegionGen1 : undefined;
            resourceInputs["ibmRegionGen2"] = state ? state.ibmRegionGen2 : undefined;
            resourceInputs["keyPasswds"] = state ? state.keyPasswds : undefined;
            resourceInputs["lastUpdate"] = state ? state.lastUpdate : undefined;
            resourceInputs["loginEndpoint"] = state ? state.loginEndpoint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nics"] = state ? state.nics : undefined;
            resourceInputs["nsxCertFingerprint"] = state ? state.nsxCertFingerprint : undefined;
            resourceInputs["ociCert"] = state ? state.ociCert : undefined;
            resourceInputs["ociFingerprint"] = state ? state.ociFingerprint : undefined;
            resourceInputs["ociRegion"] = state ? state.ociRegion : undefined;
            resourceInputs["ociRegionLists"] = state ? state.ociRegionLists : undefined;
            resourceInputs["ociRegionType"] = state ? state.ociRegionType : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resourceGroup"] = state ? state.resourceGroup : undefined;
            resourceInputs["resourceUrl"] = state ? state.resourceUrl : undefined;
            resourceInputs["restInterface"] = state ? state.restInterface : undefined;
            resourceInputs["restPasswords"] = state ? state.restPasswords : undefined;
            resourceInputs["restSport"] = state ? state.restSport : undefined;
            resourceInputs["restSsl"] = state ? state.restSsl : undefined;
            resourceInputs["routeTables"] = state ? state.routeTables : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["secretKeys"] = state ? state.secretKeys : undefined;
            resourceInputs["secretToken"] = state ? state.secretToken : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serverCaCert"] = state ? state.serverCaCert : undefined;
            resourceInputs["serverCert"] = state ? state.serverCert : undefined;
            resourceInputs["serverLists"] = state ? state.serverLists : undefined;
            resourceInputs["serverPort"] = state ? state.serverPort : undefined;
            resourceInputs["serviceAccount"] = state ? state.serviceAccount : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateInterval"] = state ? state.updateInterval : undefined;
            resourceInputs["updating"] = state ? state.updating : undefined;
            resourceInputs["useMetadataIam"] = state ? state.useMetadataIam : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vcenterPasswords"] = state ? state.vcenterPasswords : undefined;
            resourceInputs["vcenterServer"] = state ? state.vcenterServer : undefined;
            resourceInputs["vcenterUsername"] = state ? state.vcenterUsername : undefined;
            resourceInputs["verifyCertificate"] = state ? state.verifyCertificate : undefined;
            resourceInputs["vmxImageUrl"] = state ? state.vmxImageUrl : undefined;
            resourceInputs["vmxServiceName"] = state ? state.vmxServiceName : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ObjectSystemSdnconnectorArgs | undefined;
            resourceInputs["_localCert"] = args ? args._localCert : undefined;
            resourceInputs["accessKey"] = args?.accessKey ? pulumi.secret(args.accessKey) : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["altResourceIp"] = args ? args.altResourceIp : undefined;
            resourceInputs["apiKeys"] = args?.apiKeys ? pulumi.secret(args.apiKeys) : undefined;
            resourceInputs["azureRegion"] = args ? args.azureRegion : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecrets"] = args?.clientSecrets ? pulumi.secret(args.clientSecrets) : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["compartmentLists"] = args ? args.compartmentLists : undefined;
            resourceInputs["computeGeneration"] = args ? args.computeGeneration : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["externalAccountLists"] = args ? args.externalAccountLists : undefined;
            resourceInputs["externalIps"] = args ? args.externalIps : undefined;
            resourceInputs["forwardingRules"] = args ? args.forwardingRules : undefined;
            resourceInputs["gcpProject"] = args ? args.gcpProject : undefined;
            resourceInputs["gcpProjectLists"] = args ? args.gcpProjectLists : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["haStatus"] = args ? args.haStatus : undefined;
            resourceInputs["ibmRegion"] = args ? args.ibmRegion : undefined;
            resourceInputs["ibmRegionGen1"] = args ? args.ibmRegionGen1 : undefined;
            resourceInputs["ibmRegionGen2"] = args ? args.ibmRegionGen2 : undefined;
            resourceInputs["keyPasswds"] = args?.keyPasswds ? pulumi.secret(args.keyPasswds) : undefined;
            resourceInputs["lastUpdate"] = args ? args.lastUpdate : undefined;
            resourceInputs["loginEndpoint"] = args ? args.loginEndpoint : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nics"] = args ? args.nics : undefined;
            resourceInputs["nsxCertFingerprint"] = args ? args.nsxCertFingerprint : undefined;
            resourceInputs["ociCert"] = args ? args.ociCert : undefined;
            resourceInputs["ociFingerprint"] = args ? args.ociFingerprint : undefined;
            resourceInputs["ociRegion"] = args ? args.ociRegion : undefined;
            resourceInputs["ociRegionLists"] = args ? args.ociRegionLists : undefined;
            resourceInputs["ociRegionType"] = args ? args.ociRegionType : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            resourceInputs["resourceUrl"] = args ? args.resourceUrl : undefined;
            resourceInputs["restInterface"] = args ? args.restInterface : undefined;
            resourceInputs["restPasswords"] = args?.restPasswords ? pulumi.secret(args.restPasswords) : undefined;
            resourceInputs["restSport"] = args ? args.restSport : undefined;
            resourceInputs["restSsl"] = args ? args.restSsl : undefined;
            resourceInputs["routeTables"] = args ? args.routeTables : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["secretKeys"] = args?.secretKeys ? pulumi.secret(args.secretKeys) : undefined;
            resourceInputs["secretToken"] = args ? args.secretToken : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["serverCaCert"] = args ? args.serverCaCert : undefined;
            resourceInputs["serverCert"] = args ? args.serverCert : undefined;
            resourceInputs["serverLists"] = args ? args.serverLists : undefined;
            resourceInputs["serverPort"] = args ? args.serverPort : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updateInterval"] = args ? args.updateInterval : undefined;
            resourceInputs["updating"] = args ? args.updating : undefined;
            resourceInputs["useMetadataIam"] = args ? args.useMetadataIam : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vcenterPasswords"] = args?.vcenterPasswords ? pulumi.secret(args.vcenterPasswords) : undefined;
            resourceInputs["vcenterServer"] = args ? args.vcenterServer : undefined;
            resourceInputs["vcenterUsername"] = args ? args.vcenterUsername : undefined;
            resourceInputs["verifyCertificate"] = args ? args.verifyCertificate : undefined;
            resourceInputs["vmxImageUrl"] = args ? args.vmxImageUrl : undefined;
            resourceInputs["vmxServiceName"] = args ? args.vmxServiceName : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessKey", "apiKeys", "clientSecrets", "keyPasswds", "passwords", "restPasswords", "secretKeys", "vcenterPasswords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectSystemSdnconnector.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSystemSdnconnector resources.
 */
export interface ObjectSystemSdnconnectorState {
    _localCert?: pulumi.Input<string>;
    accessKey?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    altResourceIp?: pulumi.Input<string>;
    apiKeys?: pulumi.Input<pulumi.Input<string>[]>;
    azureRegion?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId?: pulumi.Input<string>;
    compartmentLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorCompartmentList>[]>;
    computeGeneration?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    externalAccountLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorExternalAccountList>[]>;
    externalIps?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorExternalIp>[]>;
    forwardingRules?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorForwardingRule>[]>;
    gcpProject?: pulumi.Input<string>;
    gcpProjectLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorGcpProjectList>[]>;
    groupName?: pulumi.Input<string>;
    haStatus?: pulumi.Input<string>;
    ibmRegion?: pulumi.Input<string>;
    ibmRegionGen1?: pulumi.Input<string>;
    ibmRegionGen2?: pulumi.Input<string>;
    keyPasswds?: pulumi.Input<pulumi.Input<string>[]>;
    lastUpdate?: pulumi.Input<number>;
    loginEndpoint?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorNic>[]>;
    nsxCertFingerprint?: pulumi.Input<string>;
    ociCert?: pulumi.Input<string>;
    ociFingerprint?: pulumi.Input<string>;
    ociRegion?: pulumi.Input<string>;
    ociRegionLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorOciRegionList>[]>;
    ociRegionType?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    privateKey?: pulumi.Input<string>;
    proxy?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceUrl?: pulumi.Input<string>;
    restInterface?: pulumi.Input<string>;
    restPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    restSport?: pulumi.Input<number>;
    restSsl?: pulumi.Input<string>;
    routeTables?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorRouteTable>[]>;
    routes?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorRoute>[]>;
    scopetype?: pulumi.Input<string>;
    secretKeys?: pulumi.Input<pulumi.Input<string>[]>;
    secretToken?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    serverCaCert?: pulumi.Input<string>;
    serverCert?: pulumi.Input<string>;
    serverLists?: pulumi.Input<pulumi.Input<string>[]>;
    serverPort?: pulumi.Input<number>;
    serviceAccount?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateInterval?: pulumi.Input<number>;
    updating?: pulumi.Input<number>;
    useMetadataIam?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vcenterPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    vcenterServer?: pulumi.Input<string>;
    vcenterUsername?: pulumi.Input<string>;
    verifyCertificate?: pulumi.Input<string>;
    vmxImageUrl?: pulumi.Input<string>;
    vmxServiceName?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectSystemSdnconnector resource.
 */
export interface ObjectSystemSdnconnectorArgs {
    _localCert?: pulumi.Input<string>;
    accessKey?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    altResourceIp?: pulumi.Input<string>;
    apiKeys?: pulumi.Input<pulumi.Input<string>[]>;
    azureRegion?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId?: pulumi.Input<string>;
    compartmentLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorCompartmentList>[]>;
    computeGeneration?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    externalAccountLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorExternalAccountList>[]>;
    externalIps?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorExternalIp>[]>;
    forwardingRules?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorForwardingRule>[]>;
    gcpProject?: pulumi.Input<string>;
    gcpProjectLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorGcpProjectList>[]>;
    groupName?: pulumi.Input<string>;
    haStatus?: pulumi.Input<string>;
    ibmRegion?: pulumi.Input<string>;
    ibmRegionGen1?: pulumi.Input<string>;
    ibmRegionGen2?: pulumi.Input<string>;
    keyPasswds?: pulumi.Input<pulumi.Input<string>[]>;
    lastUpdate?: pulumi.Input<number>;
    loginEndpoint?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nics?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorNic>[]>;
    nsxCertFingerprint?: pulumi.Input<string>;
    ociCert?: pulumi.Input<string>;
    ociFingerprint?: pulumi.Input<string>;
    ociRegion?: pulumi.Input<string>;
    ociRegionLists?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorOciRegionList>[]>;
    ociRegionType?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    privateKey?: pulumi.Input<string>;
    proxy?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceUrl?: pulumi.Input<string>;
    restInterface?: pulumi.Input<string>;
    restPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    restSport?: pulumi.Input<number>;
    restSsl?: pulumi.Input<string>;
    routeTables?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorRouteTable>[]>;
    routes?: pulumi.Input<pulumi.Input<inputs.ObjectSystemSdnconnectorRoute>[]>;
    scopetype?: pulumi.Input<string>;
    secretKeys?: pulumi.Input<pulumi.Input<string>[]>;
    secretToken?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    serverCaCert?: pulumi.Input<string>;
    serverCert?: pulumi.Input<string>;
    serverLists?: pulumi.Input<pulumi.Input<string>[]>;
    serverPort?: pulumi.Input<number>;
    serviceAccount?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateInterval?: pulumi.Input<number>;
    updating?: pulumi.Input<number>;
    useMetadataIam?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vcenterPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    vcenterServer?: pulumi.Input<string>;
    vcenterUsername?: pulumi.Input<string>;
    verifyCertificate?: pulumi.Input<string>;
    vmxImageUrl?: pulumi.Input<string>;
    vmxServiceName?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
