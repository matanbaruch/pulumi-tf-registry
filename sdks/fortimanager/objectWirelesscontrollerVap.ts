// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectWirelesscontrollerVap extends pulumi.CustomResource {
    /**
     * Get an existing ObjectWirelesscontrollerVap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectWirelesscontrollerVapState, opts?: pulumi.CustomResourceOptions): ObjectWirelesscontrollerVap {
        return new ObjectWirelesscontrollerVap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectWirelesscontrollerVap:ObjectWirelesscontrollerVap';

    /**
     * Returns true if the given object is an instance of ObjectWirelesscontrollerVap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectWirelesscontrollerVap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectWirelesscontrollerVap.__pulumiType;
    }

    public readonly _centmgmt!: pulumi.Output<string>;
    public readonly _dhcpSvrId!: pulumi.Output<string | undefined>;
    public readonly _intfAllowaccesses!: pulumi.Output<string[]>;
    public readonly _intfDeviceAccessList!: pulumi.Output<string | undefined>;
    public readonly _intfDeviceIdentification!: pulumi.Output<string>;
    public readonly _intfDeviceNetscan!: pulumi.Output<string>;
    public readonly _intfDhcp6RelayIp!: pulumi.Output<string | undefined>;
    public readonly _intfDhcp6RelayService!: pulumi.Output<string>;
    public readonly _intfDhcp6RelayType!: pulumi.Output<string>;
    public readonly _intfDhcpRelayIps!: pulumi.Output<string[]>;
    public readonly _intfDhcpRelayService!: pulumi.Output<string>;
    public readonly _intfDhcpRelayType!: pulumi.Output<string>;
    public readonly _intfIp!: pulumi.Output<string>;
    public readonly _intfIp6Address!: pulumi.Output<string | undefined>;
    public readonly _intfIp6Allowaccesses!: pulumi.Output<string[]>;
    public readonly _intfListenForticlientConnection!: pulumi.Output<string>;
    public readonly _isFactorySetting!: pulumi.Output<string>;
    public readonly accessControlList!: pulumi.Output<string | undefined>;
    public readonly acctInterimInterval!: pulumi.Output<number | undefined>;
    public readonly additionalAkms!: pulumi.Output<string[]>;
    public readonly addressGroup!: pulumi.Output<string | undefined>;
    public readonly addressGroupPolicy!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly alias!: pulumi.Output<string | undefined>;
    public readonly antivirusProfile!: pulumi.Output<string | undefined>;
    public readonly applicationDetectionEngine!: pulumi.Output<string>;
    public readonly applicationDscpMarking!: pulumi.Output<string>;
    public readonly applicationList!: pulumi.Output<string | undefined>;
    public readonly applicationReportIntv!: pulumi.Output<number>;
    public readonly atfWeight!: pulumi.Output<number>;
    public readonly auth!: pulumi.Output<string | undefined>;
    public readonly authCert!: pulumi.Output<string | undefined>;
    public readonly authPortalAddr!: pulumi.Output<string | undefined>;
    public readonly beaconAdvertisings!: pulumi.Output<string[]>;
    public readonly broadcastSsid!: pulumi.Output<string>;
    public readonly broadcastSuppressions!: pulumi.Output<string[]>;
    public readonly bssColorPartial!: pulumi.Output<string>;
    public readonly bstmDisassociationImminent!: pulumi.Output<string>;
    public readonly bstmLoadBalancingDisassocTimer!: pulumi.Output<number>;
    public readonly bstmRssiDisassocTimer!: pulumi.Output<number>;
    public readonly captivePortalAcName!: pulumi.Output<string | undefined>;
    public readonly captivePortalAuthTimeout!: pulumi.Output<number | undefined>;
    public readonly captivePortalFwAccounting!: pulumi.Output<string>;
    public readonly captivePortalMacauthRadiusSecrets!: pulumi.Output<string[]>;
    public readonly captivePortalMacauthRadiusServer!: pulumi.Output<string | undefined>;
    public readonly captivePortalRadiusSecrets!: pulumi.Output<string[]>;
    public readonly captivePortalRadiusServer!: pulumi.Output<string | undefined>;
    public readonly captivePortalSessionTimeoutInterval!: pulumi.Output<number | undefined>;
    public readonly dhcpAddressEnforcement!: pulumi.Output<string>;
    public readonly dhcpLeaseTime!: pulumi.Output<number | undefined>;
    public readonly dhcpOption43Insertion!: pulumi.Output<string>;
    public readonly dhcpOption82CircuitIdInsertion!: pulumi.Output<string>;
    public readonly dhcpOption82Insertion!: pulumi.Output<string>;
    public readonly dhcpOption82RemoteIdInsertion!: pulumi.Output<string>;
    public readonly dynamicMappings!: pulumi.Output<outputs.ObjectWirelesscontrollerVapDynamicMapping[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly dynamicVlan!: pulumi.Output<string | undefined>;
    public readonly eapReauth!: pulumi.Output<string>;
    public readonly eapReauthIntv!: pulumi.Output<number>;
    public readonly eapolKeyRetries!: pulumi.Output<string>;
    public readonly encrypt!: pulumi.Output<string>;
    public readonly externalFastRoaming!: pulumi.Output<string>;
    public readonly externalLogout!: pulumi.Output<string | undefined>;
    public readonly externalWeb!: pulumi.Output<string | undefined>;
    public readonly externalWebFormat!: pulumi.Output<string | undefined>;
    public readonly fastBssTransition!: pulumi.Output<string>;
    public readonly fastRoaming!: pulumi.Output<string>;
    public readonly ftMobilityDomain!: pulumi.Output<number>;
    public readonly ftOverDs!: pulumi.Output<string>;
    public readonly ftR0KeyLifetime!: pulumi.Output<number>;
    public readonly gasComebackDelay!: pulumi.Output<number>;
    public readonly gasFragmentationLimit!: pulumi.Output<number>;
    public readonly gtkRekey!: pulumi.Output<string>;
    public readonly gtkRekeyIntv!: pulumi.Output<number>;
    public readonly highEfficiency!: pulumi.Output<string>;
    public readonly hotspot20Profile!: pulumi.Output<string | undefined>;
    public readonly igmpSnooping!: pulumi.Output<string>;
    public readonly intraVapPrivacy!: pulumi.Output<string>;
    public readonly ip!: pulumi.Output<string | undefined>;
    public readonly ipsSensor!: pulumi.Output<string | undefined>;
    public readonly ipv6Rules!: pulumi.Output<string[]>;
    public readonly keyindex!: pulumi.Output<number | undefined>;
    public readonly keys!: pulumi.Output<string[]>;
    public readonly l3Roaming!: pulumi.Output<string>;
    public readonly l3RoamingMode!: pulumi.Output<string>;
    public readonly ldpc!: pulumi.Output<string>;
    public readonly localAuthentication!: pulumi.Output<string | undefined>;
    public readonly localBridging!: pulumi.Output<string>;
    public readonly localLan!: pulumi.Output<string>;
    public readonly localStandalone!: pulumi.Output<string>;
    public readonly localStandaloneDns!: pulumi.Output<string>;
    public readonly localStandaloneDnsIps!: pulumi.Output<string[]>;
    public readonly localStandaloneNat!: pulumi.Output<string | undefined>;
    public readonly macAuthBypass!: pulumi.Output<string>;
    public readonly macCalledStationDelimiter!: pulumi.Output<string>;
    public readonly macCallingStationDelimiter!: pulumi.Output<string>;
    public readonly macCase!: pulumi.Output<string>;
    public readonly macFilter!: pulumi.Output<string>;
    public readonly macFilterLists!: pulumi.Output<outputs.ObjectWirelesscontrollerVapMacFilterList[] | undefined>;
    public readonly macFilterPolicyOther!: pulumi.Output<string>;
    public readonly macPasswordDelimiter!: pulumi.Output<string>;
    public readonly macUsernameDelimiter!: pulumi.Output<string>;
    public readonly maxClients!: pulumi.Output<number | undefined>;
    public readonly maxClientsAp!: pulumi.Output<number | undefined>;
    public readonly mbo!: pulumi.Output<string>;
    public readonly mboCellDataConnPref!: pulumi.Output<string>;
    public readonly meDisableThresh!: pulumi.Output<number>;
    public readonly meshBackhaul!: pulumi.Output<string>;
    public readonly mpsk!: pulumi.Output<string>;
    public readonly mpskConcurrentClients!: pulumi.Output<number | undefined>;
    public readonly mpskKeys!: pulumi.Output<outputs.ObjectWirelesscontrollerVapMpskKey[] | undefined>;
    public readonly mpskProfile!: pulumi.Output<string | undefined>;
    public readonly muMimo!: pulumi.Output<string>;
    public readonly multicastEnhance!: pulumi.Output<string>;
    public readonly multicastRate!: pulumi.Output<string>;
    public readonly n80211k!: pulumi.Output<string>;
    public readonly n80211v!: pulumi.Output<string>;
    public readonly nac!: pulumi.Output<string>;
    public readonly nacProfile!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly neighborReportDualBand!: pulumi.Output<string>;
    public readonly okc!: pulumi.Output<string>;
    public readonly osen!: pulumi.Output<string>;
    public readonly oweGroups!: pulumi.Output<string[]>;
    public readonly oweTransition!: pulumi.Output<string>;
    public readonly oweTransitionSsid!: pulumi.Output<string | undefined>;
    public readonly passphrases!: pulumi.Output<string[]>;
    public readonly pmf!: pulumi.Output<string>;
    public readonly pmfAssocComebackTimeout!: pulumi.Output<number>;
    public readonly pmfSaQueryRetryTimeout!: pulumi.Output<number>;
    public readonly portMacauth!: pulumi.Output<string>;
    public readonly portMacauthReauthTimeout!: pulumi.Output<number>;
    public readonly portMacauthTimeout!: pulumi.Output<number>;
    public readonly portalMessageOverrideGroup!: pulumi.Output<string | undefined>;
    public readonly portalMessageOverrides!: pulumi.Output<outputs.ObjectWirelesscontrollerVapPortalMessageOverrides | undefined>;
    public readonly portalType!: pulumi.Output<string>;
    public readonly primaryWagProfile!: pulumi.Output<string | undefined>;
    public readonly probeRespSuppression!: pulumi.Output<string>;
    public readonly probeRespThreshold!: pulumi.Output<string>;
    public readonly ptkRekey!: pulumi.Output<string>;
    public readonly ptkRekeyIntv!: pulumi.Output<number>;
    public readonly qosProfile!: pulumi.Output<string | undefined>;
    public readonly quarantine!: pulumi.Output<string>;
    public readonly radio2gThreshold!: pulumi.Output<string>;
    public readonly radio5gThreshold!: pulumi.Output<string>;
    public readonly radioSensitivity!: pulumi.Output<string>;
    public readonly radiusMacAuth!: pulumi.Output<string>;
    public readonly radiusMacAuthBlockInterval!: pulumi.Output<number | undefined>;
    public readonly radiusMacAuthServer!: pulumi.Output<string | undefined>;
    public readonly radiusMacAuthUsergroups!: pulumi.Output<string[]>;
    public readonly radiusMacMpskAuth!: pulumi.Output<string>;
    public readonly radiusMacMpskTimeout!: pulumi.Output<number>;
    public readonly radiusServer!: pulumi.Output<string | undefined>;
    public readonly rates11acMcsMap!: pulumi.Output<string | undefined>;
    public readonly rates11acSs12s!: pulumi.Output<string[]>;
    public readonly rates11acSs34s!: pulumi.Output<string[]>;
    public readonly rates11as!: pulumi.Output<string[]>;
    public readonly rates11axMcsMap!: pulumi.Output<string | undefined>;
    public readonly rates11axSs12s!: pulumi.Output<string[]>;
    public readonly rates11axSs34s!: pulumi.Output<string[]>;
    public readonly rates11bgs!: pulumi.Output<string[]>;
    public readonly rates11nSs12s!: pulumi.Output<string[]>;
    public readonly rates11nSs34s!: pulumi.Output<string[]>;
    public readonly roamingAcctInterimUpdate!: pulumi.Output<string | undefined>;
    public readonly saeGroups!: pulumi.Output<string[]>;
    public readonly saeH2eOnly!: pulumi.Output<string>;
    public readonly saeHnpOnly!: pulumi.Output<string | undefined>;
    public readonly saePasswords!: pulumi.Output<string[]>;
    public readonly saePk!: pulumi.Output<string>;
    public readonly saePrivateKey!: pulumi.Output<string | undefined>;
    public readonly scanBotnetConnections!: pulumi.Output<string>;
    public readonly schedules!: pulumi.Output<string[]>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly secondaryWagProfile!: pulumi.Output<string | undefined>;
    public readonly security!: pulumi.Output<string>;
    public readonly securityExemptList!: pulumi.Output<string | undefined>;
    public readonly securityObsoleteOption!: pulumi.Output<string>;
    public readonly securityRedirectUrl!: pulumi.Output<string | undefined>;
    public readonly selectedUsergroups!: pulumi.Output<string | undefined>;
    public readonly splitTunneling!: pulumi.Output<string>;
    public readonly ssid!: pulumi.Output<string>;
    public readonly stickyClientRemove!: pulumi.Output<string>;
    public readonly stickyClientThreshold2g!: pulumi.Output<string>;
    public readonly stickyClientThreshold5g!: pulumi.Output<string>;
    public readonly stickyClientThreshold6g!: pulumi.Output<string>;
    public readonly targetWakeTime!: pulumi.Output<string>;
    public readonly tkipCounterMeasure!: pulumi.Output<string>;
    public readonly tunnelEchoInterval!: pulumi.Output<number | undefined>;
    public readonly tunnelFallbackInterval!: pulumi.Output<number | undefined>;
    public readonly usergroup!: pulumi.Output<string | undefined>;
    public readonly utmLog!: pulumi.Output<string>;
    public readonly utmProfile!: pulumi.Output<string | undefined>;
    public readonly utmStatus!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string | undefined>;
    public readonly vlanAuto!: pulumi.Output<string>;
    public readonly vlanNames!: pulumi.Output<outputs.ObjectWirelesscontrollerVapVlanName[] | undefined>;
    public readonly vlanPooling!: pulumi.Output<string>;
    public readonly vlanPools!: pulumi.Output<outputs.ObjectWirelesscontrollerVapVlanPool[] | undefined>;
    public readonly vlanid!: pulumi.Output<number | undefined>;
    public readonly voiceEnterprise!: pulumi.Output<string>;
    public readonly webfilterProfile!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectWirelesscontrollerVap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectWirelesscontrollerVapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectWirelesscontrollerVapArgs | ObjectWirelesscontrollerVapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectWirelesscontrollerVapState | undefined;
            resourceInputs["_centmgmt"] = state ? state._centmgmt : undefined;
            resourceInputs["_dhcpSvrId"] = state ? state._dhcpSvrId : undefined;
            resourceInputs["_intfAllowaccesses"] = state ? state._intfAllowaccesses : undefined;
            resourceInputs["_intfDeviceAccessList"] = state ? state._intfDeviceAccessList : undefined;
            resourceInputs["_intfDeviceIdentification"] = state ? state._intfDeviceIdentification : undefined;
            resourceInputs["_intfDeviceNetscan"] = state ? state._intfDeviceNetscan : undefined;
            resourceInputs["_intfDhcp6RelayIp"] = state ? state._intfDhcp6RelayIp : undefined;
            resourceInputs["_intfDhcp6RelayService"] = state ? state._intfDhcp6RelayService : undefined;
            resourceInputs["_intfDhcp6RelayType"] = state ? state._intfDhcp6RelayType : undefined;
            resourceInputs["_intfDhcpRelayIps"] = state ? state._intfDhcpRelayIps : undefined;
            resourceInputs["_intfDhcpRelayService"] = state ? state._intfDhcpRelayService : undefined;
            resourceInputs["_intfDhcpRelayType"] = state ? state._intfDhcpRelayType : undefined;
            resourceInputs["_intfIp"] = state ? state._intfIp : undefined;
            resourceInputs["_intfIp6Address"] = state ? state._intfIp6Address : undefined;
            resourceInputs["_intfIp6Allowaccesses"] = state ? state._intfIp6Allowaccesses : undefined;
            resourceInputs["_intfListenForticlientConnection"] = state ? state._intfListenForticlientConnection : undefined;
            resourceInputs["_isFactorySetting"] = state ? state._isFactorySetting : undefined;
            resourceInputs["accessControlList"] = state ? state.accessControlList : undefined;
            resourceInputs["acctInterimInterval"] = state ? state.acctInterimInterval : undefined;
            resourceInputs["additionalAkms"] = state ? state.additionalAkms : undefined;
            resourceInputs["addressGroup"] = state ? state.addressGroup : undefined;
            resourceInputs["addressGroupPolicy"] = state ? state.addressGroupPolicy : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["antivirusProfile"] = state ? state.antivirusProfile : undefined;
            resourceInputs["applicationDetectionEngine"] = state ? state.applicationDetectionEngine : undefined;
            resourceInputs["applicationDscpMarking"] = state ? state.applicationDscpMarking : undefined;
            resourceInputs["applicationList"] = state ? state.applicationList : undefined;
            resourceInputs["applicationReportIntv"] = state ? state.applicationReportIntv : undefined;
            resourceInputs["atfWeight"] = state ? state.atfWeight : undefined;
            resourceInputs["auth"] = state ? state.auth : undefined;
            resourceInputs["authCert"] = state ? state.authCert : undefined;
            resourceInputs["authPortalAddr"] = state ? state.authPortalAddr : undefined;
            resourceInputs["beaconAdvertisings"] = state ? state.beaconAdvertisings : undefined;
            resourceInputs["broadcastSsid"] = state ? state.broadcastSsid : undefined;
            resourceInputs["broadcastSuppressions"] = state ? state.broadcastSuppressions : undefined;
            resourceInputs["bssColorPartial"] = state ? state.bssColorPartial : undefined;
            resourceInputs["bstmDisassociationImminent"] = state ? state.bstmDisassociationImminent : undefined;
            resourceInputs["bstmLoadBalancingDisassocTimer"] = state ? state.bstmLoadBalancingDisassocTimer : undefined;
            resourceInputs["bstmRssiDisassocTimer"] = state ? state.bstmRssiDisassocTimer : undefined;
            resourceInputs["captivePortalAcName"] = state ? state.captivePortalAcName : undefined;
            resourceInputs["captivePortalAuthTimeout"] = state ? state.captivePortalAuthTimeout : undefined;
            resourceInputs["captivePortalFwAccounting"] = state ? state.captivePortalFwAccounting : undefined;
            resourceInputs["captivePortalMacauthRadiusSecrets"] = state ? state.captivePortalMacauthRadiusSecrets : undefined;
            resourceInputs["captivePortalMacauthRadiusServer"] = state ? state.captivePortalMacauthRadiusServer : undefined;
            resourceInputs["captivePortalRadiusSecrets"] = state ? state.captivePortalRadiusSecrets : undefined;
            resourceInputs["captivePortalRadiusServer"] = state ? state.captivePortalRadiusServer : undefined;
            resourceInputs["captivePortalSessionTimeoutInterval"] = state ? state.captivePortalSessionTimeoutInterval : undefined;
            resourceInputs["dhcpAddressEnforcement"] = state ? state.dhcpAddressEnforcement : undefined;
            resourceInputs["dhcpLeaseTime"] = state ? state.dhcpLeaseTime : undefined;
            resourceInputs["dhcpOption43Insertion"] = state ? state.dhcpOption43Insertion : undefined;
            resourceInputs["dhcpOption82CircuitIdInsertion"] = state ? state.dhcpOption82CircuitIdInsertion : undefined;
            resourceInputs["dhcpOption82Insertion"] = state ? state.dhcpOption82Insertion : undefined;
            resourceInputs["dhcpOption82RemoteIdInsertion"] = state ? state.dhcpOption82RemoteIdInsertion : undefined;
            resourceInputs["dynamicMappings"] = state ? state.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["dynamicVlan"] = state ? state.dynamicVlan : undefined;
            resourceInputs["eapReauth"] = state ? state.eapReauth : undefined;
            resourceInputs["eapReauthIntv"] = state ? state.eapReauthIntv : undefined;
            resourceInputs["eapolKeyRetries"] = state ? state.eapolKeyRetries : undefined;
            resourceInputs["encrypt"] = state ? state.encrypt : undefined;
            resourceInputs["externalFastRoaming"] = state ? state.externalFastRoaming : undefined;
            resourceInputs["externalLogout"] = state ? state.externalLogout : undefined;
            resourceInputs["externalWeb"] = state ? state.externalWeb : undefined;
            resourceInputs["externalWebFormat"] = state ? state.externalWebFormat : undefined;
            resourceInputs["fastBssTransition"] = state ? state.fastBssTransition : undefined;
            resourceInputs["fastRoaming"] = state ? state.fastRoaming : undefined;
            resourceInputs["ftMobilityDomain"] = state ? state.ftMobilityDomain : undefined;
            resourceInputs["ftOverDs"] = state ? state.ftOverDs : undefined;
            resourceInputs["ftR0KeyLifetime"] = state ? state.ftR0KeyLifetime : undefined;
            resourceInputs["gasComebackDelay"] = state ? state.gasComebackDelay : undefined;
            resourceInputs["gasFragmentationLimit"] = state ? state.gasFragmentationLimit : undefined;
            resourceInputs["gtkRekey"] = state ? state.gtkRekey : undefined;
            resourceInputs["gtkRekeyIntv"] = state ? state.gtkRekeyIntv : undefined;
            resourceInputs["highEfficiency"] = state ? state.highEfficiency : undefined;
            resourceInputs["hotspot20Profile"] = state ? state.hotspot20Profile : undefined;
            resourceInputs["igmpSnooping"] = state ? state.igmpSnooping : undefined;
            resourceInputs["intraVapPrivacy"] = state ? state.intraVapPrivacy : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ipsSensor"] = state ? state.ipsSensor : undefined;
            resourceInputs["ipv6Rules"] = state ? state.ipv6Rules : undefined;
            resourceInputs["keyindex"] = state ? state.keyindex : undefined;
            resourceInputs["keys"] = state ? state.keys : undefined;
            resourceInputs["l3Roaming"] = state ? state.l3Roaming : undefined;
            resourceInputs["l3RoamingMode"] = state ? state.l3RoamingMode : undefined;
            resourceInputs["ldpc"] = state ? state.ldpc : undefined;
            resourceInputs["localAuthentication"] = state ? state.localAuthentication : undefined;
            resourceInputs["localBridging"] = state ? state.localBridging : undefined;
            resourceInputs["localLan"] = state ? state.localLan : undefined;
            resourceInputs["localStandalone"] = state ? state.localStandalone : undefined;
            resourceInputs["localStandaloneDns"] = state ? state.localStandaloneDns : undefined;
            resourceInputs["localStandaloneDnsIps"] = state ? state.localStandaloneDnsIps : undefined;
            resourceInputs["localStandaloneNat"] = state ? state.localStandaloneNat : undefined;
            resourceInputs["macAuthBypass"] = state ? state.macAuthBypass : undefined;
            resourceInputs["macCalledStationDelimiter"] = state ? state.macCalledStationDelimiter : undefined;
            resourceInputs["macCallingStationDelimiter"] = state ? state.macCallingStationDelimiter : undefined;
            resourceInputs["macCase"] = state ? state.macCase : undefined;
            resourceInputs["macFilter"] = state ? state.macFilter : undefined;
            resourceInputs["macFilterLists"] = state ? state.macFilterLists : undefined;
            resourceInputs["macFilterPolicyOther"] = state ? state.macFilterPolicyOther : undefined;
            resourceInputs["macPasswordDelimiter"] = state ? state.macPasswordDelimiter : undefined;
            resourceInputs["macUsernameDelimiter"] = state ? state.macUsernameDelimiter : undefined;
            resourceInputs["maxClients"] = state ? state.maxClients : undefined;
            resourceInputs["maxClientsAp"] = state ? state.maxClientsAp : undefined;
            resourceInputs["mbo"] = state ? state.mbo : undefined;
            resourceInputs["mboCellDataConnPref"] = state ? state.mboCellDataConnPref : undefined;
            resourceInputs["meDisableThresh"] = state ? state.meDisableThresh : undefined;
            resourceInputs["meshBackhaul"] = state ? state.meshBackhaul : undefined;
            resourceInputs["mpsk"] = state ? state.mpsk : undefined;
            resourceInputs["mpskConcurrentClients"] = state ? state.mpskConcurrentClients : undefined;
            resourceInputs["mpskKeys"] = state ? state.mpskKeys : undefined;
            resourceInputs["mpskProfile"] = state ? state.mpskProfile : undefined;
            resourceInputs["muMimo"] = state ? state.muMimo : undefined;
            resourceInputs["multicastEnhance"] = state ? state.multicastEnhance : undefined;
            resourceInputs["multicastRate"] = state ? state.multicastRate : undefined;
            resourceInputs["n80211k"] = state ? state.n80211k : undefined;
            resourceInputs["n80211v"] = state ? state.n80211v : undefined;
            resourceInputs["nac"] = state ? state.nac : undefined;
            resourceInputs["nacProfile"] = state ? state.nacProfile : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["neighborReportDualBand"] = state ? state.neighborReportDualBand : undefined;
            resourceInputs["okc"] = state ? state.okc : undefined;
            resourceInputs["osen"] = state ? state.osen : undefined;
            resourceInputs["oweGroups"] = state ? state.oweGroups : undefined;
            resourceInputs["oweTransition"] = state ? state.oweTransition : undefined;
            resourceInputs["oweTransitionSsid"] = state ? state.oweTransitionSsid : undefined;
            resourceInputs["passphrases"] = state ? state.passphrases : undefined;
            resourceInputs["pmf"] = state ? state.pmf : undefined;
            resourceInputs["pmfAssocComebackTimeout"] = state ? state.pmfAssocComebackTimeout : undefined;
            resourceInputs["pmfSaQueryRetryTimeout"] = state ? state.pmfSaQueryRetryTimeout : undefined;
            resourceInputs["portMacauth"] = state ? state.portMacauth : undefined;
            resourceInputs["portMacauthReauthTimeout"] = state ? state.portMacauthReauthTimeout : undefined;
            resourceInputs["portMacauthTimeout"] = state ? state.portMacauthTimeout : undefined;
            resourceInputs["portalMessageOverrideGroup"] = state ? state.portalMessageOverrideGroup : undefined;
            resourceInputs["portalMessageOverrides"] = state ? state.portalMessageOverrides : undefined;
            resourceInputs["portalType"] = state ? state.portalType : undefined;
            resourceInputs["primaryWagProfile"] = state ? state.primaryWagProfile : undefined;
            resourceInputs["probeRespSuppression"] = state ? state.probeRespSuppression : undefined;
            resourceInputs["probeRespThreshold"] = state ? state.probeRespThreshold : undefined;
            resourceInputs["ptkRekey"] = state ? state.ptkRekey : undefined;
            resourceInputs["ptkRekeyIntv"] = state ? state.ptkRekeyIntv : undefined;
            resourceInputs["qosProfile"] = state ? state.qosProfile : undefined;
            resourceInputs["quarantine"] = state ? state.quarantine : undefined;
            resourceInputs["radio2gThreshold"] = state ? state.radio2gThreshold : undefined;
            resourceInputs["radio5gThreshold"] = state ? state.radio5gThreshold : undefined;
            resourceInputs["radioSensitivity"] = state ? state.radioSensitivity : undefined;
            resourceInputs["radiusMacAuth"] = state ? state.radiusMacAuth : undefined;
            resourceInputs["radiusMacAuthBlockInterval"] = state ? state.radiusMacAuthBlockInterval : undefined;
            resourceInputs["radiusMacAuthServer"] = state ? state.radiusMacAuthServer : undefined;
            resourceInputs["radiusMacAuthUsergroups"] = state ? state.radiusMacAuthUsergroups : undefined;
            resourceInputs["radiusMacMpskAuth"] = state ? state.radiusMacMpskAuth : undefined;
            resourceInputs["radiusMacMpskTimeout"] = state ? state.radiusMacMpskTimeout : undefined;
            resourceInputs["radiusServer"] = state ? state.radiusServer : undefined;
            resourceInputs["rates11acMcsMap"] = state ? state.rates11acMcsMap : undefined;
            resourceInputs["rates11acSs12s"] = state ? state.rates11acSs12s : undefined;
            resourceInputs["rates11acSs34s"] = state ? state.rates11acSs34s : undefined;
            resourceInputs["rates11as"] = state ? state.rates11as : undefined;
            resourceInputs["rates11axMcsMap"] = state ? state.rates11axMcsMap : undefined;
            resourceInputs["rates11axSs12s"] = state ? state.rates11axSs12s : undefined;
            resourceInputs["rates11axSs34s"] = state ? state.rates11axSs34s : undefined;
            resourceInputs["rates11bgs"] = state ? state.rates11bgs : undefined;
            resourceInputs["rates11nSs12s"] = state ? state.rates11nSs12s : undefined;
            resourceInputs["rates11nSs34s"] = state ? state.rates11nSs34s : undefined;
            resourceInputs["roamingAcctInterimUpdate"] = state ? state.roamingAcctInterimUpdate : undefined;
            resourceInputs["saeGroups"] = state ? state.saeGroups : undefined;
            resourceInputs["saeH2eOnly"] = state ? state.saeH2eOnly : undefined;
            resourceInputs["saeHnpOnly"] = state ? state.saeHnpOnly : undefined;
            resourceInputs["saePasswords"] = state ? state.saePasswords : undefined;
            resourceInputs["saePk"] = state ? state.saePk : undefined;
            resourceInputs["saePrivateKey"] = state ? state.saePrivateKey : undefined;
            resourceInputs["scanBotnetConnections"] = state ? state.scanBotnetConnections : undefined;
            resourceInputs["schedules"] = state ? state.schedules : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["secondaryWagProfile"] = state ? state.secondaryWagProfile : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["securityExemptList"] = state ? state.securityExemptList : undefined;
            resourceInputs["securityObsoleteOption"] = state ? state.securityObsoleteOption : undefined;
            resourceInputs["securityRedirectUrl"] = state ? state.securityRedirectUrl : undefined;
            resourceInputs["selectedUsergroups"] = state ? state.selectedUsergroups : undefined;
            resourceInputs["splitTunneling"] = state ? state.splitTunneling : undefined;
            resourceInputs["ssid"] = state ? state.ssid : undefined;
            resourceInputs["stickyClientRemove"] = state ? state.stickyClientRemove : undefined;
            resourceInputs["stickyClientThreshold2g"] = state ? state.stickyClientThreshold2g : undefined;
            resourceInputs["stickyClientThreshold5g"] = state ? state.stickyClientThreshold5g : undefined;
            resourceInputs["stickyClientThreshold6g"] = state ? state.stickyClientThreshold6g : undefined;
            resourceInputs["targetWakeTime"] = state ? state.targetWakeTime : undefined;
            resourceInputs["tkipCounterMeasure"] = state ? state.tkipCounterMeasure : undefined;
            resourceInputs["tunnelEchoInterval"] = state ? state.tunnelEchoInterval : undefined;
            resourceInputs["tunnelFallbackInterval"] = state ? state.tunnelFallbackInterval : undefined;
            resourceInputs["usergroup"] = state ? state.usergroup : undefined;
            resourceInputs["utmLog"] = state ? state.utmLog : undefined;
            resourceInputs["utmProfile"] = state ? state.utmProfile : undefined;
            resourceInputs["utmStatus"] = state ? state.utmStatus : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["vlanAuto"] = state ? state.vlanAuto : undefined;
            resourceInputs["vlanNames"] = state ? state.vlanNames : undefined;
            resourceInputs["vlanPooling"] = state ? state.vlanPooling : undefined;
            resourceInputs["vlanPools"] = state ? state.vlanPools : undefined;
            resourceInputs["vlanid"] = state ? state.vlanid : undefined;
            resourceInputs["voiceEnterprise"] = state ? state.voiceEnterprise : undefined;
            resourceInputs["webfilterProfile"] = state ? state.webfilterProfile : undefined;
        } else {
            const args = argsOrState as ObjectWirelesscontrollerVapArgs | undefined;
            resourceInputs["_centmgmt"] = args ? args._centmgmt : undefined;
            resourceInputs["_dhcpSvrId"] = args ? args._dhcpSvrId : undefined;
            resourceInputs["_intfAllowaccesses"] = args ? args._intfAllowaccesses : undefined;
            resourceInputs["_intfDeviceAccessList"] = args ? args._intfDeviceAccessList : undefined;
            resourceInputs["_intfDeviceIdentification"] = args ? args._intfDeviceIdentification : undefined;
            resourceInputs["_intfDeviceNetscan"] = args ? args._intfDeviceNetscan : undefined;
            resourceInputs["_intfDhcp6RelayIp"] = args ? args._intfDhcp6RelayIp : undefined;
            resourceInputs["_intfDhcp6RelayService"] = args ? args._intfDhcp6RelayService : undefined;
            resourceInputs["_intfDhcp6RelayType"] = args ? args._intfDhcp6RelayType : undefined;
            resourceInputs["_intfDhcpRelayIps"] = args ? args._intfDhcpRelayIps : undefined;
            resourceInputs["_intfDhcpRelayService"] = args ? args._intfDhcpRelayService : undefined;
            resourceInputs["_intfDhcpRelayType"] = args ? args._intfDhcpRelayType : undefined;
            resourceInputs["_intfIp"] = args ? args._intfIp : undefined;
            resourceInputs["_intfIp6Address"] = args ? args._intfIp6Address : undefined;
            resourceInputs["_intfIp6Allowaccesses"] = args ? args._intfIp6Allowaccesses : undefined;
            resourceInputs["_intfListenForticlientConnection"] = args ? args._intfListenForticlientConnection : undefined;
            resourceInputs["_isFactorySetting"] = args ? args._isFactorySetting : undefined;
            resourceInputs["accessControlList"] = args ? args.accessControlList : undefined;
            resourceInputs["acctInterimInterval"] = args ? args.acctInterimInterval : undefined;
            resourceInputs["additionalAkms"] = args ? args.additionalAkms : undefined;
            resourceInputs["addressGroup"] = args ? args.addressGroup : undefined;
            resourceInputs["addressGroupPolicy"] = args ? args.addressGroupPolicy : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["antivirusProfile"] = args ? args.antivirusProfile : undefined;
            resourceInputs["applicationDetectionEngine"] = args ? args.applicationDetectionEngine : undefined;
            resourceInputs["applicationDscpMarking"] = args ? args.applicationDscpMarking : undefined;
            resourceInputs["applicationList"] = args ? args.applicationList : undefined;
            resourceInputs["applicationReportIntv"] = args ? args.applicationReportIntv : undefined;
            resourceInputs["atfWeight"] = args ? args.atfWeight : undefined;
            resourceInputs["auth"] = args ? args.auth : undefined;
            resourceInputs["authCert"] = args ? args.authCert : undefined;
            resourceInputs["authPortalAddr"] = args ? args.authPortalAddr : undefined;
            resourceInputs["beaconAdvertisings"] = args ? args.beaconAdvertisings : undefined;
            resourceInputs["broadcastSsid"] = args ? args.broadcastSsid : undefined;
            resourceInputs["broadcastSuppressions"] = args ? args.broadcastSuppressions : undefined;
            resourceInputs["bssColorPartial"] = args ? args.bssColorPartial : undefined;
            resourceInputs["bstmDisassociationImminent"] = args ? args.bstmDisassociationImminent : undefined;
            resourceInputs["bstmLoadBalancingDisassocTimer"] = args ? args.bstmLoadBalancingDisassocTimer : undefined;
            resourceInputs["bstmRssiDisassocTimer"] = args ? args.bstmRssiDisassocTimer : undefined;
            resourceInputs["captivePortalAcName"] = args ? args.captivePortalAcName : undefined;
            resourceInputs["captivePortalAuthTimeout"] = args ? args.captivePortalAuthTimeout : undefined;
            resourceInputs["captivePortalFwAccounting"] = args ? args.captivePortalFwAccounting : undefined;
            resourceInputs["captivePortalMacauthRadiusSecrets"] = args?.captivePortalMacauthRadiusSecrets ? pulumi.secret(args.captivePortalMacauthRadiusSecrets) : undefined;
            resourceInputs["captivePortalMacauthRadiusServer"] = args ? args.captivePortalMacauthRadiusServer : undefined;
            resourceInputs["captivePortalRadiusSecrets"] = args?.captivePortalRadiusSecrets ? pulumi.secret(args.captivePortalRadiusSecrets) : undefined;
            resourceInputs["captivePortalRadiusServer"] = args ? args.captivePortalRadiusServer : undefined;
            resourceInputs["captivePortalSessionTimeoutInterval"] = args ? args.captivePortalSessionTimeoutInterval : undefined;
            resourceInputs["dhcpAddressEnforcement"] = args ? args.dhcpAddressEnforcement : undefined;
            resourceInputs["dhcpLeaseTime"] = args ? args.dhcpLeaseTime : undefined;
            resourceInputs["dhcpOption43Insertion"] = args ? args.dhcpOption43Insertion : undefined;
            resourceInputs["dhcpOption82CircuitIdInsertion"] = args ? args.dhcpOption82CircuitIdInsertion : undefined;
            resourceInputs["dhcpOption82Insertion"] = args ? args.dhcpOption82Insertion : undefined;
            resourceInputs["dhcpOption82RemoteIdInsertion"] = args ? args.dhcpOption82RemoteIdInsertion : undefined;
            resourceInputs["dynamicMappings"] = args ? args.dynamicMappings : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["dynamicVlan"] = args ? args.dynamicVlan : undefined;
            resourceInputs["eapReauth"] = args ? args.eapReauth : undefined;
            resourceInputs["eapReauthIntv"] = args ? args.eapReauthIntv : undefined;
            resourceInputs["eapolKeyRetries"] = args ? args.eapolKeyRetries : undefined;
            resourceInputs["encrypt"] = args ? args.encrypt : undefined;
            resourceInputs["externalFastRoaming"] = args ? args.externalFastRoaming : undefined;
            resourceInputs["externalLogout"] = args ? args.externalLogout : undefined;
            resourceInputs["externalWeb"] = args ? args.externalWeb : undefined;
            resourceInputs["externalWebFormat"] = args ? args.externalWebFormat : undefined;
            resourceInputs["fastBssTransition"] = args ? args.fastBssTransition : undefined;
            resourceInputs["fastRoaming"] = args ? args.fastRoaming : undefined;
            resourceInputs["ftMobilityDomain"] = args ? args.ftMobilityDomain : undefined;
            resourceInputs["ftOverDs"] = args ? args.ftOverDs : undefined;
            resourceInputs["ftR0KeyLifetime"] = args ? args.ftR0KeyLifetime : undefined;
            resourceInputs["gasComebackDelay"] = args ? args.gasComebackDelay : undefined;
            resourceInputs["gasFragmentationLimit"] = args ? args.gasFragmentationLimit : undefined;
            resourceInputs["gtkRekey"] = args ? args.gtkRekey : undefined;
            resourceInputs["gtkRekeyIntv"] = args ? args.gtkRekeyIntv : undefined;
            resourceInputs["highEfficiency"] = args ? args.highEfficiency : undefined;
            resourceInputs["hotspot20Profile"] = args ? args.hotspot20Profile : undefined;
            resourceInputs["igmpSnooping"] = args ? args.igmpSnooping : undefined;
            resourceInputs["intraVapPrivacy"] = args ? args.intraVapPrivacy : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["ipsSensor"] = args ? args.ipsSensor : undefined;
            resourceInputs["ipv6Rules"] = args ? args.ipv6Rules : undefined;
            resourceInputs["keyindex"] = args ? args.keyindex : undefined;
            resourceInputs["keys"] = args?.keys ? pulumi.secret(args.keys) : undefined;
            resourceInputs["l3Roaming"] = args ? args.l3Roaming : undefined;
            resourceInputs["l3RoamingMode"] = args ? args.l3RoamingMode : undefined;
            resourceInputs["ldpc"] = args ? args.ldpc : undefined;
            resourceInputs["localAuthentication"] = args ? args.localAuthentication : undefined;
            resourceInputs["localBridging"] = args ? args.localBridging : undefined;
            resourceInputs["localLan"] = args ? args.localLan : undefined;
            resourceInputs["localStandalone"] = args ? args.localStandalone : undefined;
            resourceInputs["localStandaloneDns"] = args ? args.localStandaloneDns : undefined;
            resourceInputs["localStandaloneDnsIps"] = args ? args.localStandaloneDnsIps : undefined;
            resourceInputs["localStandaloneNat"] = args ? args.localStandaloneNat : undefined;
            resourceInputs["macAuthBypass"] = args ? args.macAuthBypass : undefined;
            resourceInputs["macCalledStationDelimiter"] = args ? args.macCalledStationDelimiter : undefined;
            resourceInputs["macCallingStationDelimiter"] = args ? args.macCallingStationDelimiter : undefined;
            resourceInputs["macCase"] = args ? args.macCase : undefined;
            resourceInputs["macFilter"] = args ? args.macFilter : undefined;
            resourceInputs["macFilterLists"] = args ? args.macFilterLists : undefined;
            resourceInputs["macFilterPolicyOther"] = args ? args.macFilterPolicyOther : undefined;
            resourceInputs["macPasswordDelimiter"] = args ? args.macPasswordDelimiter : undefined;
            resourceInputs["macUsernameDelimiter"] = args ? args.macUsernameDelimiter : undefined;
            resourceInputs["maxClients"] = args ? args.maxClients : undefined;
            resourceInputs["maxClientsAp"] = args ? args.maxClientsAp : undefined;
            resourceInputs["mbo"] = args ? args.mbo : undefined;
            resourceInputs["mboCellDataConnPref"] = args ? args.mboCellDataConnPref : undefined;
            resourceInputs["meDisableThresh"] = args ? args.meDisableThresh : undefined;
            resourceInputs["meshBackhaul"] = args ? args.meshBackhaul : undefined;
            resourceInputs["mpsk"] = args ? args.mpsk : undefined;
            resourceInputs["mpskConcurrentClients"] = args ? args.mpskConcurrentClients : undefined;
            resourceInputs["mpskKeys"] = args ? args.mpskKeys : undefined;
            resourceInputs["mpskProfile"] = args ? args.mpskProfile : undefined;
            resourceInputs["muMimo"] = args ? args.muMimo : undefined;
            resourceInputs["multicastEnhance"] = args ? args.multicastEnhance : undefined;
            resourceInputs["multicastRate"] = args ? args.multicastRate : undefined;
            resourceInputs["n80211k"] = args ? args.n80211k : undefined;
            resourceInputs["n80211v"] = args ? args.n80211v : undefined;
            resourceInputs["nac"] = args ? args.nac : undefined;
            resourceInputs["nacProfile"] = args ? args.nacProfile : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["neighborReportDualBand"] = args ? args.neighborReportDualBand : undefined;
            resourceInputs["okc"] = args ? args.okc : undefined;
            resourceInputs["osen"] = args ? args.osen : undefined;
            resourceInputs["oweGroups"] = args ? args.oweGroups : undefined;
            resourceInputs["oweTransition"] = args ? args.oweTransition : undefined;
            resourceInputs["oweTransitionSsid"] = args ? args.oweTransitionSsid : undefined;
            resourceInputs["passphrases"] = args?.passphrases ? pulumi.secret(args.passphrases) : undefined;
            resourceInputs["pmf"] = args ? args.pmf : undefined;
            resourceInputs["pmfAssocComebackTimeout"] = args ? args.pmfAssocComebackTimeout : undefined;
            resourceInputs["pmfSaQueryRetryTimeout"] = args ? args.pmfSaQueryRetryTimeout : undefined;
            resourceInputs["portMacauth"] = args ? args.portMacauth : undefined;
            resourceInputs["portMacauthReauthTimeout"] = args ? args.portMacauthReauthTimeout : undefined;
            resourceInputs["portMacauthTimeout"] = args ? args.portMacauthTimeout : undefined;
            resourceInputs["portalMessageOverrideGroup"] = args ? args.portalMessageOverrideGroup : undefined;
            resourceInputs["portalMessageOverrides"] = args ? args.portalMessageOverrides : undefined;
            resourceInputs["portalType"] = args ? args.portalType : undefined;
            resourceInputs["primaryWagProfile"] = args ? args.primaryWagProfile : undefined;
            resourceInputs["probeRespSuppression"] = args ? args.probeRespSuppression : undefined;
            resourceInputs["probeRespThreshold"] = args ? args.probeRespThreshold : undefined;
            resourceInputs["ptkRekey"] = args ? args.ptkRekey : undefined;
            resourceInputs["ptkRekeyIntv"] = args ? args.ptkRekeyIntv : undefined;
            resourceInputs["qosProfile"] = args ? args.qosProfile : undefined;
            resourceInputs["quarantine"] = args ? args.quarantine : undefined;
            resourceInputs["radio2gThreshold"] = args ? args.radio2gThreshold : undefined;
            resourceInputs["radio5gThreshold"] = args ? args.radio5gThreshold : undefined;
            resourceInputs["radioSensitivity"] = args ? args.radioSensitivity : undefined;
            resourceInputs["radiusMacAuth"] = args ? args.radiusMacAuth : undefined;
            resourceInputs["radiusMacAuthBlockInterval"] = args ? args.radiusMacAuthBlockInterval : undefined;
            resourceInputs["radiusMacAuthServer"] = args ? args.radiusMacAuthServer : undefined;
            resourceInputs["radiusMacAuthUsergroups"] = args ? args.radiusMacAuthUsergroups : undefined;
            resourceInputs["radiusMacMpskAuth"] = args ? args.radiusMacMpskAuth : undefined;
            resourceInputs["radiusMacMpskTimeout"] = args ? args.radiusMacMpskTimeout : undefined;
            resourceInputs["radiusServer"] = args ? args.radiusServer : undefined;
            resourceInputs["rates11acMcsMap"] = args ? args.rates11acMcsMap : undefined;
            resourceInputs["rates11acSs12s"] = args ? args.rates11acSs12s : undefined;
            resourceInputs["rates11acSs34s"] = args ? args.rates11acSs34s : undefined;
            resourceInputs["rates11as"] = args ? args.rates11as : undefined;
            resourceInputs["rates11axMcsMap"] = args ? args.rates11axMcsMap : undefined;
            resourceInputs["rates11axSs12s"] = args ? args.rates11axSs12s : undefined;
            resourceInputs["rates11axSs34s"] = args ? args.rates11axSs34s : undefined;
            resourceInputs["rates11bgs"] = args ? args.rates11bgs : undefined;
            resourceInputs["rates11nSs12s"] = args ? args.rates11nSs12s : undefined;
            resourceInputs["rates11nSs34s"] = args ? args.rates11nSs34s : undefined;
            resourceInputs["roamingAcctInterimUpdate"] = args ? args.roamingAcctInterimUpdate : undefined;
            resourceInputs["saeGroups"] = args ? args.saeGroups : undefined;
            resourceInputs["saeH2eOnly"] = args ? args.saeH2eOnly : undefined;
            resourceInputs["saeHnpOnly"] = args ? args.saeHnpOnly : undefined;
            resourceInputs["saePasswords"] = args?.saePasswords ? pulumi.secret(args.saePasswords) : undefined;
            resourceInputs["saePk"] = args ? args.saePk : undefined;
            resourceInputs["saePrivateKey"] = args ? args.saePrivateKey : undefined;
            resourceInputs["scanBotnetConnections"] = args ? args.scanBotnetConnections : undefined;
            resourceInputs["schedules"] = args ? args.schedules : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["secondaryWagProfile"] = args ? args.secondaryWagProfile : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["securityExemptList"] = args ? args.securityExemptList : undefined;
            resourceInputs["securityObsoleteOption"] = args ? args.securityObsoleteOption : undefined;
            resourceInputs["securityRedirectUrl"] = args ? args.securityRedirectUrl : undefined;
            resourceInputs["selectedUsergroups"] = args ? args.selectedUsergroups : undefined;
            resourceInputs["splitTunneling"] = args ? args.splitTunneling : undefined;
            resourceInputs["ssid"] = args ? args.ssid : undefined;
            resourceInputs["stickyClientRemove"] = args ? args.stickyClientRemove : undefined;
            resourceInputs["stickyClientThreshold2g"] = args ? args.stickyClientThreshold2g : undefined;
            resourceInputs["stickyClientThreshold5g"] = args ? args.stickyClientThreshold5g : undefined;
            resourceInputs["stickyClientThreshold6g"] = args ? args.stickyClientThreshold6g : undefined;
            resourceInputs["targetWakeTime"] = args ? args.targetWakeTime : undefined;
            resourceInputs["tkipCounterMeasure"] = args ? args.tkipCounterMeasure : undefined;
            resourceInputs["tunnelEchoInterval"] = args ? args.tunnelEchoInterval : undefined;
            resourceInputs["tunnelFallbackInterval"] = args ? args.tunnelFallbackInterval : undefined;
            resourceInputs["usergroup"] = args ? args.usergroup : undefined;
            resourceInputs["utmLog"] = args ? args.utmLog : undefined;
            resourceInputs["utmProfile"] = args ? args.utmProfile : undefined;
            resourceInputs["utmStatus"] = args ? args.utmStatus : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["vlanAuto"] = args ? args.vlanAuto : undefined;
            resourceInputs["vlanNames"] = args ? args.vlanNames : undefined;
            resourceInputs["vlanPooling"] = args ? args.vlanPooling : undefined;
            resourceInputs["vlanPools"] = args ? args.vlanPools : undefined;
            resourceInputs["vlanid"] = args ? args.vlanid : undefined;
            resourceInputs["voiceEnterprise"] = args ? args.voiceEnterprise : undefined;
            resourceInputs["webfilterProfile"] = args ? args.webfilterProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["captivePortalMacauthRadiusSecrets", "captivePortalRadiusSecrets", "keys", "passphrases", "saePasswords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectWirelesscontrollerVap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectWirelesscontrollerVap resources.
 */
export interface ObjectWirelesscontrollerVapState {
    _centmgmt?: pulumi.Input<string>;
    _dhcpSvrId?: pulumi.Input<string>;
    _intfAllowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    _intfDeviceAccessList?: pulumi.Input<string>;
    _intfDeviceIdentification?: pulumi.Input<string>;
    _intfDeviceNetscan?: pulumi.Input<string>;
    _intfDhcp6RelayIp?: pulumi.Input<string>;
    _intfDhcp6RelayService?: pulumi.Input<string>;
    _intfDhcp6RelayType?: pulumi.Input<string>;
    _intfDhcpRelayIps?: pulumi.Input<pulumi.Input<string>[]>;
    _intfDhcpRelayService?: pulumi.Input<string>;
    _intfDhcpRelayType?: pulumi.Input<string>;
    _intfIp?: pulumi.Input<string>;
    _intfIp6Address?: pulumi.Input<string>;
    _intfIp6Allowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    _intfListenForticlientConnection?: pulumi.Input<string>;
    _isFactorySetting?: pulumi.Input<string>;
    accessControlList?: pulumi.Input<string>;
    acctInterimInterval?: pulumi.Input<number>;
    additionalAkms?: pulumi.Input<pulumi.Input<string>[]>;
    addressGroup?: pulumi.Input<string>;
    addressGroupPolicy?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    alias?: pulumi.Input<string>;
    antivirusProfile?: pulumi.Input<string>;
    applicationDetectionEngine?: pulumi.Input<string>;
    applicationDscpMarking?: pulumi.Input<string>;
    applicationList?: pulumi.Input<string>;
    applicationReportIntv?: pulumi.Input<number>;
    atfWeight?: pulumi.Input<number>;
    auth?: pulumi.Input<string>;
    authCert?: pulumi.Input<string>;
    authPortalAddr?: pulumi.Input<string>;
    beaconAdvertisings?: pulumi.Input<pulumi.Input<string>[]>;
    broadcastSsid?: pulumi.Input<string>;
    broadcastSuppressions?: pulumi.Input<pulumi.Input<string>[]>;
    bssColorPartial?: pulumi.Input<string>;
    bstmDisassociationImminent?: pulumi.Input<string>;
    bstmLoadBalancingDisassocTimer?: pulumi.Input<number>;
    bstmRssiDisassocTimer?: pulumi.Input<number>;
    captivePortalAcName?: pulumi.Input<string>;
    captivePortalAuthTimeout?: pulumi.Input<number>;
    captivePortalFwAccounting?: pulumi.Input<string>;
    captivePortalMacauthRadiusSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    captivePortalMacauthRadiusServer?: pulumi.Input<string>;
    captivePortalRadiusSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    captivePortalRadiusServer?: pulumi.Input<string>;
    captivePortalSessionTimeoutInterval?: pulumi.Input<number>;
    dhcpAddressEnforcement?: pulumi.Input<string>;
    dhcpLeaseTime?: pulumi.Input<number>;
    dhcpOption43Insertion?: pulumi.Input<string>;
    dhcpOption82CircuitIdInsertion?: pulumi.Input<string>;
    dhcpOption82Insertion?: pulumi.Input<string>;
    dhcpOption82RemoteIdInsertion?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    dynamicVlan?: pulumi.Input<string>;
    eapReauth?: pulumi.Input<string>;
    eapReauthIntv?: pulumi.Input<number>;
    eapolKeyRetries?: pulumi.Input<string>;
    encrypt?: pulumi.Input<string>;
    externalFastRoaming?: pulumi.Input<string>;
    externalLogout?: pulumi.Input<string>;
    externalWeb?: pulumi.Input<string>;
    externalWebFormat?: pulumi.Input<string>;
    fastBssTransition?: pulumi.Input<string>;
    fastRoaming?: pulumi.Input<string>;
    ftMobilityDomain?: pulumi.Input<number>;
    ftOverDs?: pulumi.Input<string>;
    ftR0KeyLifetime?: pulumi.Input<number>;
    gasComebackDelay?: pulumi.Input<number>;
    gasFragmentationLimit?: pulumi.Input<number>;
    gtkRekey?: pulumi.Input<string>;
    gtkRekeyIntv?: pulumi.Input<number>;
    highEfficiency?: pulumi.Input<string>;
    hotspot20Profile?: pulumi.Input<string>;
    igmpSnooping?: pulumi.Input<string>;
    intraVapPrivacy?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipsSensor?: pulumi.Input<string>;
    ipv6Rules?: pulumi.Input<pulumi.Input<string>[]>;
    keyindex?: pulumi.Input<number>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    l3Roaming?: pulumi.Input<string>;
    l3RoamingMode?: pulumi.Input<string>;
    ldpc?: pulumi.Input<string>;
    localAuthentication?: pulumi.Input<string>;
    localBridging?: pulumi.Input<string>;
    localLan?: pulumi.Input<string>;
    localStandalone?: pulumi.Input<string>;
    localStandaloneDns?: pulumi.Input<string>;
    localStandaloneDnsIps?: pulumi.Input<pulumi.Input<string>[]>;
    localStandaloneNat?: pulumi.Input<string>;
    macAuthBypass?: pulumi.Input<string>;
    macCalledStationDelimiter?: pulumi.Input<string>;
    macCallingStationDelimiter?: pulumi.Input<string>;
    macCase?: pulumi.Input<string>;
    macFilter?: pulumi.Input<string>;
    macFilterLists?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapMacFilterList>[]>;
    macFilterPolicyOther?: pulumi.Input<string>;
    macPasswordDelimiter?: pulumi.Input<string>;
    macUsernameDelimiter?: pulumi.Input<string>;
    maxClients?: pulumi.Input<number>;
    maxClientsAp?: pulumi.Input<number>;
    mbo?: pulumi.Input<string>;
    mboCellDataConnPref?: pulumi.Input<string>;
    meDisableThresh?: pulumi.Input<number>;
    meshBackhaul?: pulumi.Input<string>;
    mpsk?: pulumi.Input<string>;
    mpskConcurrentClients?: pulumi.Input<number>;
    mpskKeys?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapMpskKey>[]>;
    mpskProfile?: pulumi.Input<string>;
    muMimo?: pulumi.Input<string>;
    multicastEnhance?: pulumi.Input<string>;
    multicastRate?: pulumi.Input<string>;
    n80211k?: pulumi.Input<string>;
    n80211v?: pulumi.Input<string>;
    nac?: pulumi.Input<string>;
    nacProfile?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    neighborReportDualBand?: pulumi.Input<string>;
    okc?: pulumi.Input<string>;
    osen?: pulumi.Input<string>;
    oweGroups?: pulumi.Input<pulumi.Input<string>[]>;
    oweTransition?: pulumi.Input<string>;
    oweTransitionSsid?: pulumi.Input<string>;
    passphrases?: pulumi.Input<pulumi.Input<string>[]>;
    pmf?: pulumi.Input<string>;
    pmfAssocComebackTimeout?: pulumi.Input<number>;
    pmfSaQueryRetryTimeout?: pulumi.Input<number>;
    portMacauth?: pulumi.Input<string>;
    portMacauthReauthTimeout?: pulumi.Input<number>;
    portMacauthTimeout?: pulumi.Input<number>;
    portalMessageOverrideGroup?: pulumi.Input<string>;
    portalMessageOverrides?: pulumi.Input<inputs.ObjectWirelesscontrollerVapPortalMessageOverrides>;
    portalType?: pulumi.Input<string>;
    primaryWagProfile?: pulumi.Input<string>;
    probeRespSuppression?: pulumi.Input<string>;
    probeRespThreshold?: pulumi.Input<string>;
    ptkRekey?: pulumi.Input<string>;
    ptkRekeyIntv?: pulumi.Input<number>;
    qosProfile?: pulumi.Input<string>;
    quarantine?: pulumi.Input<string>;
    radio2gThreshold?: pulumi.Input<string>;
    radio5gThreshold?: pulumi.Input<string>;
    radioSensitivity?: pulumi.Input<string>;
    radiusMacAuth?: pulumi.Input<string>;
    radiusMacAuthBlockInterval?: pulumi.Input<number>;
    radiusMacAuthServer?: pulumi.Input<string>;
    radiusMacAuthUsergroups?: pulumi.Input<pulumi.Input<string>[]>;
    radiusMacMpskAuth?: pulumi.Input<string>;
    radiusMacMpskTimeout?: pulumi.Input<number>;
    radiusServer?: pulumi.Input<string>;
    rates11acMcsMap?: pulumi.Input<string>;
    rates11acSs12s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11acSs34s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11as?: pulumi.Input<pulumi.Input<string>[]>;
    rates11axMcsMap?: pulumi.Input<string>;
    rates11axSs12s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11axSs34s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11bgs?: pulumi.Input<pulumi.Input<string>[]>;
    rates11nSs12s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11nSs34s?: pulumi.Input<pulumi.Input<string>[]>;
    roamingAcctInterimUpdate?: pulumi.Input<string>;
    saeGroups?: pulumi.Input<pulumi.Input<string>[]>;
    saeH2eOnly?: pulumi.Input<string>;
    saeHnpOnly?: pulumi.Input<string>;
    saePasswords?: pulumi.Input<pulumi.Input<string>[]>;
    saePk?: pulumi.Input<string>;
    saePrivateKey?: pulumi.Input<string>;
    scanBotnetConnections?: pulumi.Input<string>;
    schedules?: pulumi.Input<pulumi.Input<string>[]>;
    scopetype?: pulumi.Input<string>;
    secondaryWagProfile?: pulumi.Input<string>;
    security?: pulumi.Input<string>;
    securityExemptList?: pulumi.Input<string>;
    securityObsoleteOption?: pulumi.Input<string>;
    securityRedirectUrl?: pulumi.Input<string>;
    selectedUsergroups?: pulumi.Input<string>;
    splitTunneling?: pulumi.Input<string>;
    ssid?: pulumi.Input<string>;
    stickyClientRemove?: pulumi.Input<string>;
    stickyClientThreshold2g?: pulumi.Input<string>;
    stickyClientThreshold5g?: pulumi.Input<string>;
    stickyClientThreshold6g?: pulumi.Input<string>;
    targetWakeTime?: pulumi.Input<string>;
    tkipCounterMeasure?: pulumi.Input<string>;
    tunnelEchoInterval?: pulumi.Input<number>;
    tunnelFallbackInterval?: pulumi.Input<number>;
    usergroup?: pulumi.Input<string>;
    utmLog?: pulumi.Input<string>;
    utmProfile?: pulumi.Input<string>;
    utmStatus?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vlanAuto?: pulumi.Input<string>;
    vlanNames?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapVlanName>[]>;
    vlanPooling?: pulumi.Input<string>;
    vlanPools?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapVlanPool>[]>;
    vlanid?: pulumi.Input<number>;
    voiceEnterprise?: pulumi.Input<string>;
    webfilterProfile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectWirelesscontrollerVap resource.
 */
export interface ObjectWirelesscontrollerVapArgs {
    _centmgmt?: pulumi.Input<string>;
    _dhcpSvrId?: pulumi.Input<string>;
    _intfAllowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    _intfDeviceAccessList?: pulumi.Input<string>;
    _intfDeviceIdentification?: pulumi.Input<string>;
    _intfDeviceNetscan?: pulumi.Input<string>;
    _intfDhcp6RelayIp?: pulumi.Input<string>;
    _intfDhcp6RelayService?: pulumi.Input<string>;
    _intfDhcp6RelayType?: pulumi.Input<string>;
    _intfDhcpRelayIps?: pulumi.Input<pulumi.Input<string>[]>;
    _intfDhcpRelayService?: pulumi.Input<string>;
    _intfDhcpRelayType?: pulumi.Input<string>;
    _intfIp?: pulumi.Input<string>;
    _intfIp6Address?: pulumi.Input<string>;
    _intfIp6Allowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    _intfListenForticlientConnection?: pulumi.Input<string>;
    _isFactorySetting?: pulumi.Input<string>;
    accessControlList?: pulumi.Input<string>;
    acctInterimInterval?: pulumi.Input<number>;
    additionalAkms?: pulumi.Input<pulumi.Input<string>[]>;
    addressGroup?: pulumi.Input<string>;
    addressGroupPolicy?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    alias?: pulumi.Input<string>;
    antivirusProfile?: pulumi.Input<string>;
    applicationDetectionEngine?: pulumi.Input<string>;
    applicationDscpMarking?: pulumi.Input<string>;
    applicationList?: pulumi.Input<string>;
    applicationReportIntv?: pulumi.Input<number>;
    atfWeight?: pulumi.Input<number>;
    auth?: pulumi.Input<string>;
    authCert?: pulumi.Input<string>;
    authPortalAddr?: pulumi.Input<string>;
    beaconAdvertisings?: pulumi.Input<pulumi.Input<string>[]>;
    broadcastSsid?: pulumi.Input<string>;
    broadcastSuppressions?: pulumi.Input<pulumi.Input<string>[]>;
    bssColorPartial?: pulumi.Input<string>;
    bstmDisassociationImminent?: pulumi.Input<string>;
    bstmLoadBalancingDisassocTimer?: pulumi.Input<number>;
    bstmRssiDisassocTimer?: pulumi.Input<number>;
    captivePortalAcName?: pulumi.Input<string>;
    captivePortalAuthTimeout?: pulumi.Input<number>;
    captivePortalFwAccounting?: pulumi.Input<string>;
    captivePortalMacauthRadiusSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    captivePortalMacauthRadiusServer?: pulumi.Input<string>;
    captivePortalRadiusSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    captivePortalRadiusServer?: pulumi.Input<string>;
    captivePortalSessionTimeoutInterval?: pulumi.Input<number>;
    dhcpAddressEnforcement?: pulumi.Input<string>;
    dhcpLeaseTime?: pulumi.Input<number>;
    dhcpOption43Insertion?: pulumi.Input<string>;
    dhcpOption82CircuitIdInsertion?: pulumi.Input<string>;
    dhcpOption82Insertion?: pulumi.Input<string>;
    dhcpOption82RemoteIdInsertion?: pulumi.Input<string>;
    dynamicMappings?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapDynamicMapping>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    dynamicVlan?: pulumi.Input<string>;
    eapReauth?: pulumi.Input<string>;
    eapReauthIntv?: pulumi.Input<number>;
    eapolKeyRetries?: pulumi.Input<string>;
    encrypt?: pulumi.Input<string>;
    externalFastRoaming?: pulumi.Input<string>;
    externalLogout?: pulumi.Input<string>;
    externalWeb?: pulumi.Input<string>;
    externalWebFormat?: pulumi.Input<string>;
    fastBssTransition?: pulumi.Input<string>;
    fastRoaming?: pulumi.Input<string>;
    ftMobilityDomain?: pulumi.Input<number>;
    ftOverDs?: pulumi.Input<string>;
    ftR0KeyLifetime?: pulumi.Input<number>;
    gasComebackDelay?: pulumi.Input<number>;
    gasFragmentationLimit?: pulumi.Input<number>;
    gtkRekey?: pulumi.Input<string>;
    gtkRekeyIntv?: pulumi.Input<number>;
    highEfficiency?: pulumi.Input<string>;
    hotspot20Profile?: pulumi.Input<string>;
    igmpSnooping?: pulumi.Input<string>;
    intraVapPrivacy?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipsSensor?: pulumi.Input<string>;
    ipv6Rules?: pulumi.Input<pulumi.Input<string>[]>;
    keyindex?: pulumi.Input<number>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    l3Roaming?: pulumi.Input<string>;
    l3RoamingMode?: pulumi.Input<string>;
    ldpc?: pulumi.Input<string>;
    localAuthentication?: pulumi.Input<string>;
    localBridging?: pulumi.Input<string>;
    localLan?: pulumi.Input<string>;
    localStandalone?: pulumi.Input<string>;
    localStandaloneDns?: pulumi.Input<string>;
    localStandaloneDnsIps?: pulumi.Input<pulumi.Input<string>[]>;
    localStandaloneNat?: pulumi.Input<string>;
    macAuthBypass?: pulumi.Input<string>;
    macCalledStationDelimiter?: pulumi.Input<string>;
    macCallingStationDelimiter?: pulumi.Input<string>;
    macCase?: pulumi.Input<string>;
    macFilter?: pulumi.Input<string>;
    macFilterLists?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapMacFilterList>[]>;
    macFilterPolicyOther?: pulumi.Input<string>;
    macPasswordDelimiter?: pulumi.Input<string>;
    macUsernameDelimiter?: pulumi.Input<string>;
    maxClients?: pulumi.Input<number>;
    maxClientsAp?: pulumi.Input<number>;
    mbo?: pulumi.Input<string>;
    mboCellDataConnPref?: pulumi.Input<string>;
    meDisableThresh?: pulumi.Input<number>;
    meshBackhaul?: pulumi.Input<string>;
    mpsk?: pulumi.Input<string>;
    mpskConcurrentClients?: pulumi.Input<number>;
    mpskKeys?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapMpskKey>[]>;
    mpskProfile?: pulumi.Input<string>;
    muMimo?: pulumi.Input<string>;
    multicastEnhance?: pulumi.Input<string>;
    multicastRate?: pulumi.Input<string>;
    n80211k?: pulumi.Input<string>;
    n80211v?: pulumi.Input<string>;
    nac?: pulumi.Input<string>;
    nacProfile?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    neighborReportDualBand?: pulumi.Input<string>;
    okc?: pulumi.Input<string>;
    osen?: pulumi.Input<string>;
    oweGroups?: pulumi.Input<pulumi.Input<string>[]>;
    oweTransition?: pulumi.Input<string>;
    oweTransitionSsid?: pulumi.Input<string>;
    passphrases?: pulumi.Input<pulumi.Input<string>[]>;
    pmf?: pulumi.Input<string>;
    pmfAssocComebackTimeout?: pulumi.Input<number>;
    pmfSaQueryRetryTimeout?: pulumi.Input<number>;
    portMacauth?: pulumi.Input<string>;
    portMacauthReauthTimeout?: pulumi.Input<number>;
    portMacauthTimeout?: pulumi.Input<number>;
    portalMessageOverrideGroup?: pulumi.Input<string>;
    portalMessageOverrides?: pulumi.Input<inputs.ObjectWirelesscontrollerVapPortalMessageOverrides>;
    portalType?: pulumi.Input<string>;
    primaryWagProfile?: pulumi.Input<string>;
    probeRespSuppression?: pulumi.Input<string>;
    probeRespThreshold?: pulumi.Input<string>;
    ptkRekey?: pulumi.Input<string>;
    ptkRekeyIntv?: pulumi.Input<number>;
    qosProfile?: pulumi.Input<string>;
    quarantine?: pulumi.Input<string>;
    radio2gThreshold?: pulumi.Input<string>;
    radio5gThreshold?: pulumi.Input<string>;
    radioSensitivity?: pulumi.Input<string>;
    radiusMacAuth?: pulumi.Input<string>;
    radiusMacAuthBlockInterval?: pulumi.Input<number>;
    radiusMacAuthServer?: pulumi.Input<string>;
    radiusMacAuthUsergroups?: pulumi.Input<pulumi.Input<string>[]>;
    radiusMacMpskAuth?: pulumi.Input<string>;
    radiusMacMpskTimeout?: pulumi.Input<number>;
    radiusServer?: pulumi.Input<string>;
    rates11acMcsMap?: pulumi.Input<string>;
    rates11acSs12s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11acSs34s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11as?: pulumi.Input<pulumi.Input<string>[]>;
    rates11axMcsMap?: pulumi.Input<string>;
    rates11axSs12s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11axSs34s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11bgs?: pulumi.Input<pulumi.Input<string>[]>;
    rates11nSs12s?: pulumi.Input<pulumi.Input<string>[]>;
    rates11nSs34s?: pulumi.Input<pulumi.Input<string>[]>;
    roamingAcctInterimUpdate?: pulumi.Input<string>;
    saeGroups?: pulumi.Input<pulumi.Input<string>[]>;
    saeH2eOnly?: pulumi.Input<string>;
    saeHnpOnly?: pulumi.Input<string>;
    saePasswords?: pulumi.Input<pulumi.Input<string>[]>;
    saePk?: pulumi.Input<string>;
    saePrivateKey?: pulumi.Input<string>;
    scanBotnetConnections?: pulumi.Input<string>;
    schedules?: pulumi.Input<pulumi.Input<string>[]>;
    scopetype?: pulumi.Input<string>;
    secondaryWagProfile?: pulumi.Input<string>;
    security?: pulumi.Input<string>;
    securityExemptList?: pulumi.Input<string>;
    securityObsoleteOption?: pulumi.Input<string>;
    securityRedirectUrl?: pulumi.Input<string>;
    selectedUsergroups?: pulumi.Input<string>;
    splitTunneling?: pulumi.Input<string>;
    ssid?: pulumi.Input<string>;
    stickyClientRemove?: pulumi.Input<string>;
    stickyClientThreshold2g?: pulumi.Input<string>;
    stickyClientThreshold5g?: pulumi.Input<string>;
    stickyClientThreshold6g?: pulumi.Input<string>;
    targetWakeTime?: pulumi.Input<string>;
    tkipCounterMeasure?: pulumi.Input<string>;
    tunnelEchoInterval?: pulumi.Input<number>;
    tunnelFallbackInterval?: pulumi.Input<number>;
    usergroup?: pulumi.Input<string>;
    utmLog?: pulumi.Input<string>;
    utmProfile?: pulumi.Input<string>;
    utmStatus?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    vlanAuto?: pulumi.Input<string>;
    vlanNames?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapVlanName>[]>;
    vlanPooling?: pulumi.Input<string>;
    vlanPools?: pulumi.Input<pulumi.Input<inputs.ObjectWirelesscontrollerVapVlanPool>[]>;
    vlanid?: pulumi.Input<number>;
    voiceEnterprise?: pulumi.Input<string>;
    webfilterProfile?: pulumi.Input<string>;
}
