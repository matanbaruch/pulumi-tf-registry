// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemAdminProfile extends pulumi.CustomResource {
    /**
     * Get an existing SystemAdminProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAdminProfileState, opts?: pulumi.CustomResourceOptions): SystemAdminProfile {
        return new SystemAdminProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/systemAdminProfile:SystemAdminProfile';

    /**
     * Returns true if the given object is an instance of SystemAdminProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAdminProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAdminProfile.__pulumiType;
    }

    public readonly adomLock!: pulumi.Output<string>;
    public readonly adomPolicyPackages!: pulumi.Output<string>;
    public readonly adomSwitch!: pulumi.Output<string>;
    public readonly allowToInstall!: pulumi.Output<string>;
    public readonly appFilter!: pulumi.Output<string>;
    public readonly assignment!: pulumi.Output<string>;
    public readonly changePassword!: pulumi.Output<string>;
    public readonly configRetrieve!: pulumi.Output<string>;
    public readonly configRevert!: pulumi.Output<string>;
    public readonly consistencyCheck!: pulumi.Output<string>;
    public readonly datamask!: pulumi.Output<string>;
    public readonly datamaskCustomFields!: pulumi.Output<outputs.SystemAdminProfileDatamaskCustomField[] | undefined>;
    public readonly datamaskCustomPriority!: pulumi.Output<string>;
    public readonly datamaskFields!: pulumi.Output<string[]>;
    public readonly datamaskKeys!: pulumi.Output<string[]>;
    public readonly datamaskUnmaskedTime!: pulumi.Output<number | undefined>;
    public readonly deployManagement!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly deviceAp!: pulumi.Output<string>;
    public readonly deviceConfig!: pulumi.Output<string>;
    public readonly deviceForticlient!: pulumi.Output<string>;
    public readonly deviceFortiextender!: pulumi.Output<string>;
    public readonly deviceFortiswitch!: pulumi.Output<string>;
    public readonly deviceManager!: pulumi.Output<string>;
    public readonly deviceOp!: pulumi.Output<string>;
    public readonly devicePolicyPackageLock!: pulumi.Output<string>;
    public readonly deviceProfile!: pulumi.Output<string>;
    public readonly deviceRevisionDeletion!: pulumi.Output<string>;
    public readonly deviceWanLinkLoadBalance!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly eventManagement!: pulumi.Output<string>;
    public readonly extensionAccess!: pulumi.Output<string>;
    public readonly fabricViewer!: pulumi.Output<string>;
    public readonly fgdCenter!: pulumi.Output<string>;
    public readonly fgdCenterAdvanced!: pulumi.Output<string>;
    public readonly fgdCenterFmwMgmt!: pulumi.Output<string>;
    public readonly fgdCenterLicensing!: pulumi.Output<string>;
    public readonly fgtGuiProxy!: pulumi.Output<string>;
    public readonly globalPolicyPackages!: pulumi.Output<string>;
    public readonly importPolicyPackages!: pulumi.Output<string>;
    public readonly intfMapping!: pulumi.Output<string>;
    public readonly ipsBaselineCfg!: pulumi.Output<string>;
    public readonly ipsBaselineOvrd!: pulumi.Output<string>;
    public readonly ipsFilter!: pulumi.Output<string>;
    public readonly ipsLock!: pulumi.Output<string>;
    public readonly ipsObjects!: pulumi.Output<string>;
    public readonly ipv6Trusthost1!: pulumi.Output<string>;
    public readonly ipv6Trusthost10!: pulumi.Output<string>;
    public readonly ipv6Trusthost2!: pulumi.Output<string>;
    public readonly ipv6Trusthost3!: pulumi.Output<string>;
    public readonly ipv6Trusthost4!: pulumi.Output<string>;
    public readonly ipv6Trusthost5!: pulumi.Output<string>;
    public readonly ipv6Trusthost6!: pulumi.Output<string>;
    public readonly ipv6Trusthost7!: pulumi.Output<string>;
    public readonly ipv6Trusthost8!: pulumi.Output<string>;
    public readonly ipv6Trusthost9!: pulumi.Output<string>;
    public readonly logViewer!: pulumi.Output<string>;
    public readonly policyIpsAttrs!: pulumi.Output<string>;
    public readonly policyObjects!: pulumi.Output<string>;
    public readonly profileid!: pulumi.Output<string | undefined>;
    public readonly readPasswd!: pulumi.Output<string>;
    public readonly realtimeMonitor!: pulumi.Output<string>;
    public readonly reportViewer!: pulumi.Output<string>;
    public readonly rpcPermit!: pulumi.Output<string>;
    public readonly runReport!: pulumi.Output<string>;
    public readonly scope!: pulumi.Output<string>;
    public readonly scriptAccess!: pulumi.Output<string>;
    public readonly setInstallTargets!: pulumi.Output<string>;
    public readonly superUserProfile!: pulumi.Output<string>;
    public readonly systemSetting!: pulumi.Output<string>;
    public readonly termAccess!: pulumi.Output<string>;
    public readonly triageEvents!: pulumi.Output<string>;
    public readonly trusthost1!: pulumi.Output<string>;
    public readonly trusthost10!: pulumi.Output<string>;
    public readonly trusthost2!: pulumi.Output<string>;
    public readonly trusthost3!: pulumi.Output<string>;
    public readonly trusthost4!: pulumi.Output<string>;
    public readonly trusthost5!: pulumi.Output<string>;
    public readonly trusthost6!: pulumi.Output<string>;
    public readonly trusthost7!: pulumi.Output<string>;
    public readonly trusthost8!: pulumi.Output<string>;
    public readonly trusthost9!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly updateIncidents!: pulumi.Output<string>;
    public readonly vpnManager!: pulumi.Output<string>;
    public readonly webFilter!: pulumi.Output<string>;
    public readonly writePasswdAccess!: pulumi.Output<string>;
    public readonly writePasswdProfiles!: pulumi.Output<outputs.SystemAdminProfileWritePasswdProfile[] | undefined>;
    public readonly writePasswdUserLists!: pulumi.Output<outputs.SystemAdminProfileWritePasswdUserList[] | undefined>;

    /**
     * Create a SystemAdminProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAdminProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAdminProfileArgs | SystemAdminProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAdminProfileState | undefined;
            resourceInputs["adomLock"] = state ? state.adomLock : undefined;
            resourceInputs["adomPolicyPackages"] = state ? state.adomPolicyPackages : undefined;
            resourceInputs["adomSwitch"] = state ? state.adomSwitch : undefined;
            resourceInputs["allowToInstall"] = state ? state.allowToInstall : undefined;
            resourceInputs["appFilter"] = state ? state.appFilter : undefined;
            resourceInputs["assignment"] = state ? state.assignment : undefined;
            resourceInputs["changePassword"] = state ? state.changePassword : undefined;
            resourceInputs["configRetrieve"] = state ? state.configRetrieve : undefined;
            resourceInputs["configRevert"] = state ? state.configRevert : undefined;
            resourceInputs["consistencyCheck"] = state ? state.consistencyCheck : undefined;
            resourceInputs["datamask"] = state ? state.datamask : undefined;
            resourceInputs["datamaskCustomFields"] = state ? state.datamaskCustomFields : undefined;
            resourceInputs["datamaskCustomPriority"] = state ? state.datamaskCustomPriority : undefined;
            resourceInputs["datamaskFields"] = state ? state.datamaskFields : undefined;
            resourceInputs["datamaskKeys"] = state ? state.datamaskKeys : undefined;
            resourceInputs["datamaskUnmaskedTime"] = state ? state.datamaskUnmaskedTime : undefined;
            resourceInputs["deployManagement"] = state ? state.deployManagement : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceAp"] = state ? state.deviceAp : undefined;
            resourceInputs["deviceConfig"] = state ? state.deviceConfig : undefined;
            resourceInputs["deviceForticlient"] = state ? state.deviceForticlient : undefined;
            resourceInputs["deviceFortiextender"] = state ? state.deviceFortiextender : undefined;
            resourceInputs["deviceFortiswitch"] = state ? state.deviceFortiswitch : undefined;
            resourceInputs["deviceManager"] = state ? state.deviceManager : undefined;
            resourceInputs["deviceOp"] = state ? state.deviceOp : undefined;
            resourceInputs["devicePolicyPackageLock"] = state ? state.devicePolicyPackageLock : undefined;
            resourceInputs["deviceProfile"] = state ? state.deviceProfile : undefined;
            resourceInputs["deviceRevisionDeletion"] = state ? state.deviceRevisionDeletion : undefined;
            resourceInputs["deviceWanLinkLoadBalance"] = state ? state.deviceWanLinkLoadBalance : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["eventManagement"] = state ? state.eventManagement : undefined;
            resourceInputs["extensionAccess"] = state ? state.extensionAccess : undefined;
            resourceInputs["fabricViewer"] = state ? state.fabricViewer : undefined;
            resourceInputs["fgdCenter"] = state ? state.fgdCenter : undefined;
            resourceInputs["fgdCenterAdvanced"] = state ? state.fgdCenterAdvanced : undefined;
            resourceInputs["fgdCenterFmwMgmt"] = state ? state.fgdCenterFmwMgmt : undefined;
            resourceInputs["fgdCenterLicensing"] = state ? state.fgdCenterLicensing : undefined;
            resourceInputs["fgtGuiProxy"] = state ? state.fgtGuiProxy : undefined;
            resourceInputs["globalPolicyPackages"] = state ? state.globalPolicyPackages : undefined;
            resourceInputs["importPolicyPackages"] = state ? state.importPolicyPackages : undefined;
            resourceInputs["intfMapping"] = state ? state.intfMapping : undefined;
            resourceInputs["ipsBaselineCfg"] = state ? state.ipsBaselineCfg : undefined;
            resourceInputs["ipsBaselineOvrd"] = state ? state.ipsBaselineOvrd : undefined;
            resourceInputs["ipsFilter"] = state ? state.ipsFilter : undefined;
            resourceInputs["ipsLock"] = state ? state.ipsLock : undefined;
            resourceInputs["ipsObjects"] = state ? state.ipsObjects : undefined;
            resourceInputs["ipv6Trusthost1"] = state ? state.ipv6Trusthost1 : undefined;
            resourceInputs["ipv6Trusthost10"] = state ? state.ipv6Trusthost10 : undefined;
            resourceInputs["ipv6Trusthost2"] = state ? state.ipv6Trusthost2 : undefined;
            resourceInputs["ipv6Trusthost3"] = state ? state.ipv6Trusthost3 : undefined;
            resourceInputs["ipv6Trusthost4"] = state ? state.ipv6Trusthost4 : undefined;
            resourceInputs["ipv6Trusthost5"] = state ? state.ipv6Trusthost5 : undefined;
            resourceInputs["ipv6Trusthost6"] = state ? state.ipv6Trusthost6 : undefined;
            resourceInputs["ipv6Trusthost7"] = state ? state.ipv6Trusthost7 : undefined;
            resourceInputs["ipv6Trusthost8"] = state ? state.ipv6Trusthost8 : undefined;
            resourceInputs["ipv6Trusthost9"] = state ? state.ipv6Trusthost9 : undefined;
            resourceInputs["logViewer"] = state ? state.logViewer : undefined;
            resourceInputs["policyIpsAttrs"] = state ? state.policyIpsAttrs : undefined;
            resourceInputs["policyObjects"] = state ? state.policyObjects : undefined;
            resourceInputs["profileid"] = state ? state.profileid : undefined;
            resourceInputs["readPasswd"] = state ? state.readPasswd : undefined;
            resourceInputs["realtimeMonitor"] = state ? state.realtimeMonitor : undefined;
            resourceInputs["reportViewer"] = state ? state.reportViewer : undefined;
            resourceInputs["rpcPermit"] = state ? state.rpcPermit : undefined;
            resourceInputs["runReport"] = state ? state.runReport : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["scriptAccess"] = state ? state.scriptAccess : undefined;
            resourceInputs["setInstallTargets"] = state ? state.setInstallTargets : undefined;
            resourceInputs["superUserProfile"] = state ? state.superUserProfile : undefined;
            resourceInputs["systemSetting"] = state ? state.systemSetting : undefined;
            resourceInputs["termAccess"] = state ? state.termAccess : undefined;
            resourceInputs["triageEvents"] = state ? state.triageEvents : undefined;
            resourceInputs["trusthost1"] = state ? state.trusthost1 : undefined;
            resourceInputs["trusthost10"] = state ? state.trusthost10 : undefined;
            resourceInputs["trusthost2"] = state ? state.trusthost2 : undefined;
            resourceInputs["trusthost3"] = state ? state.trusthost3 : undefined;
            resourceInputs["trusthost4"] = state ? state.trusthost4 : undefined;
            resourceInputs["trusthost5"] = state ? state.trusthost5 : undefined;
            resourceInputs["trusthost6"] = state ? state.trusthost6 : undefined;
            resourceInputs["trusthost7"] = state ? state.trusthost7 : undefined;
            resourceInputs["trusthost8"] = state ? state.trusthost8 : undefined;
            resourceInputs["trusthost9"] = state ? state.trusthost9 : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateIncidents"] = state ? state.updateIncidents : undefined;
            resourceInputs["vpnManager"] = state ? state.vpnManager : undefined;
            resourceInputs["webFilter"] = state ? state.webFilter : undefined;
            resourceInputs["writePasswdAccess"] = state ? state.writePasswdAccess : undefined;
            resourceInputs["writePasswdProfiles"] = state ? state.writePasswdProfiles : undefined;
            resourceInputs["writePasswdUserLists"] = state ? state.writePasswdUserLists : undefined;
        } else {
            const args = argsOrState as SystemAdminProfileArgs | undefined;
            resourceInputs["adomLock"] = args ? args.adomLock : undefined;
            resourceInputs["adomPolicyPackages"] = args ? args.adomPolicyPackages : undefined;
            resourceInputs["adomSwitch"] = args ? args.adomSwitch : undefined;
            resourceInputs["allowToInstall"] = args ? args.allowToInstall : undefined;
            resourceInputs["appFilter"] = args ? args.appFilter : undefined;
            resourceInputs["assignment"] = args ? args.assignment : undefined;
            resourceInputs["changePassword"] = args ? args.changePassword : undefined;
            resourceInputs["configRetrieve"] = args ? args.configRetrieve : undefined;
            resourceInputs["configRevert"] = args ? args.configRevert : undefined;
            resourceInputs["consistencyCheck"] = args ? args.consistencyCheck : undefined;
            resourceInputs["datamask"] = args ? args.datamask : undefined;
            resourceInputs["datamaskCustomFields"] = args ? args.datamaskCustomFields : undefined;
            resourceInputs["datamaskCustomPriority"] = args ? args.datamaskCustomPriority : undefined;
            resourceInputs["datamaskFields"] = args ? args.datamaskFields : undefined;
            resourceInputs["datamaskKeys"] = args?.datamaskKeys ? pulumi.secret(args.datamaskKeys) : undefined;
            resourceInputs["datamaskUnmaskedTime"] = args ? args.datamaskUnmaskedTime : undefined;
            resourceInputs["deployManagement"] = args ? args.deployManagement : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceAp"] = args ? args.deviceAp : undefined;
            resourceInputs["deviceConfig"] = args ? args.deviceConfig : undefined;
            resourceInputs["deviceForticlient"] = args ? args.deviceForticlient : undefined;
            resourceInputs["deviceFortiextender"] = args ? args.deviceFortiextender : undefined;
            resourceInputs["deviceFortiswitch"] = args ? args.deviceFortiswitch : undefined;
            resourceInputs["deviceManager"] = args ? args.deviceManager : undefined;
            resourceInputs["deviceOp"] = args ? args.deviceOp : undefined;
            resourceInputs["devicePolicyPackageLock"] = args ? args.devicePolicyPackageLock : undefined;
            resourceInputs["deviceProfile"] = args ? args.deviceProfile : undefined;
            resourceInputs["deviceRevisionDeletion"] = args ? args.deviceRevisionDeletion : undefined;
            resourceInputs["deviceWanLinkLoadBalance"] = args ? args.deviceWanLinkLoadBalance : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["eventManagement"] = args ? args.eventManagement : undefined;
            resourceInputs["extensionAccess"] = args ? args.extensionAccess : undefined;
            resourceInputs["fabricViewer"] = args ? args.fabricViewer : undefined;
            resourceInputs["fgdCenter"] = args ? args.fgdCenter : undefined;
            resourceInputs["fgdCenterAdvanced"] = args ? args.fgdCenterAdvanced : undefined;
            resourceInputs["fgdCenterFmwMgmt"] = args ? args.fgdCenterFmwMgmt : undefined;
            resourceInputs["fgdCenterLicensing"] = args ? args.fgdCenterLicensing : undefined;
            resourceInputs["fgtGuiProxy"] = args ? args.fgtGuiProxy : undefined;
            resourceInputs["globalPolicyPackages"] = args ? args.globalPolicyPackages : undefined;
            resourceInputs["importPolicyPackages"] = args ? args.importPolicyPackages : undefined;
            resourceInputs["intfMapping"] = args ? args.intfMapping : undefined;
            resourceInputs["ipsBaselineCfg"] = args ? args.ipsBaselineCfg : undefined;
            resourceInputs["ipsBaselineOvrd"] = args ? args.ipsBaselineOvrd : undefined;
            resourceInputs["ipsFilter"] = args ? args.ipsFilter : undefined;
            resourceInputs["ipsLock"] = args ? args.ipsLock : undefined;
            resourceInputs["ipsObjects"] = args ? args.ipsObjects : undefined;
            resourceInputs["ipv6Trusthost1"] = args ? args.ipv6Trusthost1 : undefined;
            resourceInputs["ipv6Trusthost10"] = args ? args.ipv6Trusthost10 : undefined;
            resourceInputs["ipv6Trusthost2"] = args ? args.ipv6Trusthost2 : undefined;
            resourceInputs["ipv6Trusthost3"] = args ? args.ipv6Trusthost3 : undefined;
            resourceInputs["ipv6Trusthost4"] = args ? args.ipv6Trusthost4 : undefined;
            resourceInputs["ipv6Trusthost5"] = args ? args.ipv6Trusthost5 : undefined;
            resourceInputs["ipv6Trusthost6"] = args ? args.ipv6Trusthost6 : undefined;
            resourceInputs["ipv6Trusthost7"] = args ? args.ipv6Trusthost7 : undefined;
            resourceInputs["ipv6Trusthost8"] = args ? args.ipv6Trusthost8 : undefined;
            resourceInputs["ipv6Trusthost9"] = args ? args.ipv6Trusthost9 : undefined;
            resourceInputs["logViewer"] = args ? args.logViewer : undefined;
            resourceInputs["policyIpsAttrs"] = args ? args.policyIpsAttrs : undefined;
            resourceInputs["policyObjects"] = args ? args.policyObjects : undefined;
            resourceInputs["profileid"] = args ? args.profileid : undefined;
            resourceInputs["readPasswd"] = args ? args.readPasswd : undefined;
            resourceInputs["realtimeMonitor"] = args ? args.realtimeMonitor : undefined;
            resourceInputs["reportViewer"] = args ? args.reportViewer : undefined;
            resourceInputs["rpcPermit"] = args ? args.rpcPermit : undefined;
            resourceInputs["runReport"] = args ? args.runReport : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["scriptAccess"] = args ? args.scriptAccess : undefined;
            resourceInputs["setInstallTargets"] = args ? args.setInstallTargets : undefined;
            resourceInputs["superUserProfile"] = args ? args.superUserProfile : undefined;
            resourceInputs["systemSetting"] = args ? args.systemSetting : undefined;
            resourceInputs["termAccess"] = args ? args.termAccess : undefined;
            resourceInputs["triageEvents"] = args ? args.triageEvents : undefined;
            resourceInputs["trusthost1"] = args ? args.trusthost1 : undefined;
            resourceInputs["trusthost10"] = args ? args.trusthost10 : undefined;
            resourceInputs["trusthost2"] = args ? args.trusthost2 : undefined;
            resourceInputs["trusthost3"] = args ? args.trusthost3 : undefined;
            resourceInputs["trusthost4"] = args ? args.trusthost4 : undefined;
            resourceInputs["trusthost5"] = args ? args.trusthost5 : undefined;
            resourceInputs["trusthost6"] = args ? args.trusthost6 : undefined;
            resourceInputs["trusthost7"] = args ? args.trusthost7 : undefined;
            resourceInputs["trusthost8"] = args ? args.trusthost8 : undefined;
            resourceInputs["trusthost9"] = args ? args.trusthost9 : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updateIncidents"] = args ? args.updateIncidents : undefined;
            resourceInputs["vpnManager"] = args ? args.vpnManager : undefined;
            resourceInputs["webFilter"] = args ? args.webFilter : undefined;
            resourceInputs["writePasswdAccess"] = args ? args.writePasswdAccess : undefined;
            resourceInputs["writePasswdProfiles"] = args ? args.writePasswdProfiles : undefined;
            resourceInputs["writePasswdUserLists"] = args ? args.writePasswdUserLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["datamaskKeys"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemAdminProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemAdminProfile resources.
 */
export interface SystemAdminProfileState {
    adomLock?: pulumi.Input<string>;
    adomPolicyPackages?: pulumi.Input<string>;
    adomSwitch?: pulumi.Input<string>;
    allowToInstall?: pulumi.Input<string>;
    appFilter?: pulumi.Input<string>;
    assignment?: pulumi.Input<string>;
    changePassword?: pulumi.Input<string>;
    configRetrieve?: pulumi.Input<string>;
    configRevert?: pulumi.Input<string>;
    consistencyCheck?: pulumi.Input<string>;
    datamask?: pulumi.Input<string>;
    datamaskCustomFields?: pulumi.Input<pulumi.Input<inputs.SystemAdminProfileDatamaskCustomField>[]>;
    datamaskCustomPriority?: pulumi.Input<string>;
    datamaskFields?: pulumi.Input<pulumi.Input<string>[]>;
    datamaskKeys?: pulumi.Input<pulumi.Input<string>[]>;
    datamaskUnmaskedTime?: pulumi.Input<number>;
    deployManagement?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceAp?: pulumi.Input<string>;
    deviceConfig?: pulumi.Input<string>;
    deviceForticlient?: pulumi.Input<string>;
    deviceFortiextender?: pulumi.Input<string>;
    deviceFortiswitch?: pulumi.Input<string>;
    deviceManager?: pulumi.Input<string>;
    deviceOp?: pulumi.Input<string>;
    devicePolicyPackageLock?: pulumi.Input<string>;
    deviceProfile?: pulumi.Input<string>;
    deviceRevisionDeletion?: pulumi.Input<string>;
    deviceWanLinkLoadBalance?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eventManagement?: pulumi.Input<string>;
    extensionAccess?: pulumi.Input<string>;
    fabricViewer?: pulumi.Input<string>;
    fgdCenter?: pulumi.Input<string>;
    fgdCenterAdvanced?: pulumi.Input<string>;
    fgdCenterFmwMgmt?: pulumi.Input<string>;
    fgdCenterLicensing?: pulumi.Input<string>;
    fgtGuiProxy?: pulumi.Input<string>;
    globalPolicyPackages?: pulumi.Input<string>;
    importPolicyPackages?: pulumi.Input<string>;
    intfMapping?: pulumi.Input<string>;
    ipsBaselineCfg?: pulumi.Input<string>;
    ipsBaselineOvrd?: pulumi.Input<string>;
    ipsFilter?: pulumi.Input<string>;
    ipsLock?: pulumi.Input<string>;
    ipsObjects?: pulumi.Input<string>;
    ipv6Trusthost1?: pulumi.Input<string>;
    ipv6Trusthost10?: pulumi.Input<string>;
    ipv6Trusthost2?: pulumi.Input<string>;
    ipv6Trusthost3?: pulumi.Input<string>;
    ipv6Trusthost4?: pulumi.Input<string>;
    ipv6Trusthost5?: pulumi.Input<string>;
    ipv6Trusthost6?: pulumi.Input<string>;
    ipv6Trusthost7?: pulumi.Input<string>;
    ipv6Trusthost8?: pulumi.Input<string>;
    ipv6Trusthost9?: pulumi.Input<string>;
    logViewer?: pulumi.Input<string>;
    policyIpsAttrs?: pulumi.Input<string>;
    policyObjects?: pulumi.Input<string>;
    profileid?: pulumi.Input<string>;
    readPasswd?: pulumi.Input<string>;
    realtimeMonitor?: pulumi.Input<string>;
    reportViewer?: pulumi.Input<string>;
    rpcPermit?: pulumi.Input<string>;
    runReport?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    scriptAccess?: pulumi.Input<string>;
    setInstallTargets?: pulumi.Input<string>;
    superUserProfile?: pulumi.Input<string>;
    systemSetting?: pulumi.Input<string>;
    termAccess?: pulumi.Input<string>;
    triageEvents?: pulumi.Input<string>;
    trusthost1?: pulumi.Input<string>;
    trusthost10?: pulumi.Input<string>;
    trusthost2?: pulumi.Input<string>;
    trusthost3?: pulumi.Input<string>;
    trusthost4?: pulumi.Input<string>;
    trusthost5?: pulumi.Input<string>;
    trusthost6?: pulumi.Input<string>;
    trusthost7?: pulumi.Input<string>;
    trusthost8?: pulumi.Input<string>;
    trusthost9?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateIncidents?: pulumi.Input<string>;
    vpnManager?: pulumi.Input<string>;
    webFilter?: pulumi.Input<string>;
    writePasswdAccess?: pulumi.Input<string>;
    writePasswdProfiles?: pulumi.Input<pulumi.Input<inputs.SystemAdminProfileWritePasswdProfile>[]>;
    writePasswdUserLists?: pulumi.Input<pulumi.Input<inputs.SystemAdminProfileWritePasswdUserList>[]>;
}

/**
 * The set of arguments for constructing a SystemAdminProfile resource.
 */
export interface SystemAdminProfileArgs {
    adomLock?: pulumi.Input<string>;
    adomPolicyPackages?: pulumi.Input<string>;
    adomSwitch?: pulumi.Input<string>;
    allowToInstall?: pulumi.Input<string>;
    appFilter?: pulumi.Input<string>;
    assignment?: pulumi.Input<string>;
    changePassword?: pulumi.Input<string>;
    configRetrieve?: pulumi.Input<string>;
    configRevert?: pulumi.Input<string>;
    consistencyCheck?: pulumi.Input<string>;
    datamask?: pulumi.Input<string>;
    datamaskCustomFields?: pulumi.Input<pulumi.Input<inputs.SystemAdminProfileDatamaskCustomField>[]>;
    datamaskCustomPriority?: pulumi.Input<string>;
    datamaskFields?: pulumi.Input<pulumi.Input<string>[]>;
    datamaskKeys?: pulumi.Input<pulumi.Input<string>[]>;
    datamaskUnmaskedTime?: pulumi.Input<number>;
    deployManagement?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceAp?: pulumi.Input<string>;
    deviceConfig?: pulumi.Input<string>;
    deviceForticlient?: pulumi.Input<string>;
    deviceFortiextender?: pulumi.Input<string>;
    deviceFortiswitch?: pulumi.Input<string>;
    deviceManager?: pulumi.Input<string>;
    deviceOp?: pulumi.Input<string>;
    devicePolicyPackageLock?: pulumi.Input<string>;
    deviceProfile?: pulumi.Input<string>;
    deviceRevisionDeletion?: pulumi.Input<string>;
    deviceWanLinkLoadBalance?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eventManagement?: pulumi.Input<string>;
    extensionAccess?: pulumi.Input<string>;
    fabricViewer?: pulumi.Input<string>;
    fgdCenter?: pulumi.Input<string>;
    fgdCenterAdvanced?: pulumi.Input<string>;
    fgdCenterFmwMgmt?: pulumi.Input<string>;
    fgdCenterLicensing?: pulumi.Input<string>;
    fgtGuiProxy?: pulumi.Input<string>;
    globalPolicyPackages?: pulumi.Input<string>;
    importPolicyPackages?: pulumi.Input<string>;
    intfMapping?: pulumi.Input<string>;
    ipsBaselineCfg?: pulumi.Input<string>;
    ipsBaselineOvrd?: pulumi.Input<string>;
    ipsFilter?: pulumi.Input<string>;
    ipsLock?: pulumi.Input<string>;
    ipsObjects?: pulumi.Input<string>;
    ipv6Trusthost1?: pulumi.Input<string>;
    ipv6Trusthost10?: pulumi.Input<string>;
    ipv6Trusthost2?: pulumi.Input<string>;
    ipv6Trusthost3?: pulumi.Input<string>;
    ipv6Trusthost4?: pulumi.Input<string>;
    ipv6Trusthost5?: pulumi.Input<string>;
    ipv6Trusthost6?: pulumi.Input<string>;
    ipv6Trusthost7?: pulumi.Input<string>;
    ipv6Trusthost8?: pulumi.Input<string>;
    ipv6Trusthost9?: pulumi.Input<string>;
    logViewer?: pulumi.Input<string>;
    policyIpsAttrs?: pulumi.Input<string>;
    policyObjects?: pulumi.Input<string>;
    profileid?: pulumi.Input<string>;
    readPasswd?: pulumi.Input<string>;
    realtimeMonitor?: pulumi.Input<string>;
    reportViewer?: pulumi.Input<string>;
    rpcPermit?: pulumi.Input<string>;
    runReport?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    scriptAccess?: pulumi.Input<string>;
    setInstallTargets?: pulumi.Input<string>;
    superUserProfile?: pulumi.Input<string>;
    systemSetting?: pulumi.Input<string>;
    termAccess?: pulumi.Input<string>;
    triageEvents?: pulumi.Input<string>;
    trusthost1?: pulumi.Input<string>;
    trusthost10?: pulumi.Input<string>;
    trusthost2?: pulumi.Input<string>;
    trusthost3?: pulumi.Input<string>;
    trusthost4?: pulumi.Input<string>;
    trusthost5?: pulumi.Input<string>;
    trusthost6?: pulumi.Input<string>;
    trusthost7?: pulumi.Input<string>;
    trusthost8?: pulumi.Input<string>;
    trusthost9?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updateIncidents?: pulumi.Input<string>;
    vpnManager?: pulumi.Input<string>;
    webFilter?: pulumi.Input<string>;
    writePasswdAccess?: pulumi.Input<string>;
    writePasswdProfiles?: pulumi.Input<pulumi.Input<inputs.SystemAdminProfileWritePasswdProfile>[]>;
    writePasswdUserLists?: pulumi.Input<pulumi.Input<inputs.SystemAdminProfileWritePasswdUserList>[]>;
}
