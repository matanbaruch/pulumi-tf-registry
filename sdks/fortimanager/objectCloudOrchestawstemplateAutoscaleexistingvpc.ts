// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectCloudOrchestawstemplateAutoscaleexistingvpc extends pulumi.CustomResource {
    /**
     * Get an existing ObjectCloudOrchestawstemplateAutoscaleexistingvpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectCloudOrchestawstemplateAutoscaleexistingvpcState, opts?: pulumi.CustomResourceOptions): ObjectCloudOrchestawstemplateAutoscaleexistingvpc {
        return new ObjectCloudOrchestawstemplateAutoscaleexistingvpc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectCloudOrchestawstemplateAutoscaleexistingvpc:ObjectCloudOrchestawstemplateAutoscaleexistingvpc';

    /**
     * Returns true if the given object is an instance of ObjectCloudOrchestawstemplateAutoscaleexistingvpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectCloudOrchestawstemplateAutoscaleexistingvpc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectCloudOrchestawstemplateAutoscaleexistingvpc.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly customAssetContainer!: pulumi.Output<string | undefined>;
    public readonly customAssetDirectory!: pulumi.Output<string | undefined>;
    public readonly customIdentifier!: pulumi.Output<string>;
    public readonly fazAutoscaleAdminPasswords!: pulumi.Output<string[]>;
    public readonly fazAutoscaleAdminUsername!: pulumi.Output<string | undefined>;
    public readonly fazCustomPrivateIpaddress!: pulumi.Output<string | undefined>;
    public readonly fazInstanceType!: pulumi.Output<string>;
    public readonly fazIntegrationOptions!: pulumi.Output<string>;
    public readonly fazVersion!: pulumi.Output<string>;
    public readonly fgtAdminCidr!: pulumi.Output<string>;
    public readonly fgtAdminPort!: pulumi.Output<number>;
    public readonly fgtInstanceType!: pulumi.Output<string>;
    public readonly fgtPskSecret!: pulumi.Output<string>;
    public readonly fgtasgCoolDown!: pulumi.Output<number>;
    public readonly fgtasgDesiredCapacityByol!: pulumi.Output<number>;
    public readonly fgtasgDesiredCapacityPayg!: pulumi.Output<number | undefined>;
    public readonly fgtasgHealthCheckGracePeriod!: pulumi.Output<number>;
    public readonly fgtasgMaxSizeByol!: pulumi.Output<number>;
    public readonly fgtasgMaxSizePayg!: pulumi.Output<number>;
    public readonly fgtasgMinSizeByol!: pulumi.Output<number>;
    public readonly fgtasgMinSizePayg!: pulumi.Output<number | undefined>;
    public readonly fgtasgScaleInThreshold!: pulumi.Output<number>;
    public readonly fgtasgScaleOutThreshold!: pulumi.Output<number>;
    public readonly fosVersion!: pulumi.Output<string>;
    public readonly getLicenseGracePeriod!: pulumi.Output<number>;
    public readonly heartbeatDelayAllowance!: pulumi.Output<number>;
    public readonly heartbeatInterval!: pulumi.Output<number>;
    public readonly heartbeatLossCount!: pulumi.Output<number>;
    public readonly internalBalancerDnsName!: pulumi.Output<string | undefined>;
    public readonly internalBalancingOptions!: pulumi.Output<string>;
    public readonly internalTargetGroupHealthCheckPath!: pulumi.Output<string>;
    public readonly keyPairName!: pulumi.Output<string | undefined>;
    public readonly lifecycleHookTimeout!: pulumi.Output<number>;
    public readonly loadbalancingHealthCheckThreshold!: pulumi.Output<number>;
    public readonly loadbalancingTrafficPort!: pulumi.Output<number>;
    public readonly loadbalancingTrafficProtocol!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly notificationEmail!: pulumi.Output<string | undefined>;
    public readonly primaryElectionTimeout!: pulumi.Output<number>;
    public readonly privateSubnet1!: pulumi.Output<string | undefined>;
    public readonly privateSubnet2!: pulumi.Output<string | undefined>;
    public readonly privateSubnetRouteTable!: pulumi.Output<string | undefined>;
    public readonly publicSubnet1!: pulumi.Output<string | undefined>;
    public readonly publicSubnet2!: pulumi.Output<string | undefined>;
    public readonly resourceTagPrefix!: pulumi.Output<string | undefined>;
    public readonly s3BucketName!: pulumi.Output<string | undefined>;
    public readonly s3KeyPrefix!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly syncRecoveryCount!: pulumi.Output<number>;
    public readonly terminateUnhealthyVm!: pulumi.Output<string>;
    public readonly useCustomAssetLocation!: pulumi.Output<string>;
    public readonly vpcCidr!: pulumi.Output<string | undefined>;
    public readonly vpcEndpointId!: pulumi.Output<string | undefined>;
    public readonly vpcId!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectCloudOrchestawstemplateAutoscaleexistingvpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectCloudOrchestawstemplateAutoscaleexistingvpcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectCloudOrchestawstemplateAutoscaleexistingvpcArgs | ObjectCloudOrchestawstemplateAutoscaleexistingvpcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectCloudOrchestawstemplateAutoscaleexistingvpcState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["customAssetContainer"] = state ? state.customAssetContainer : undefined;
            resourceInputs["customAssetDirectory"] = state ? state.customAssetDirectory : undefined;
            resourceInputs["customIdentifier"] = state ? state.customIdentifier : undefined;
            resourceInputs["fazAutoscaleAdminPasswords"] = state ? state.fazAutoscaleAdminPasswords : undefined;
            resourceInputs["fazAutoscaleAdminUsername"] = state ? state.fazAutoscaleAdminUsername : undefined;
            resourceInputs["fazCustomPrivateIpaddress"] = state ? state.fazCustomPrivateIpaddress : undefined;
            resourceInputs["fazInstanceType"] = state ? state.fazInstanceType : undefined;
            resourceInputs["fazIntegrationOptions"] = state ? state.fazIntegrationOptions : undefined;
            resourceInputs["fazVersion"] = state ? state.fazVersion : undefined;
            resourceInputs["fgtAdminCidr"] = state ? state.fgtAdminCidr : undefined;
            resourceInputs["fgtAdminPort"] = state ? state.fgtAdminPort : undefined;
            resourceInputs["fgtInstanceType"] = state ? state.fgtInstanceType : undefined;
            resourceInputs["fgtPskSecret"] = state ? state.fgtPskSecret : undefined;
            resourceInputs["fgtasgCoolDown"] = state ? state.fgtasgCoolDown : undefined;
            resourceInputs["fgtasgDesiredCapacityByol"] = state ? state.fgtasgDesiredCapacityByol : undefined;
            resourceInputs["fgtasgDesiredCapacityPayg"] = state ? state.fgtasgDesiredCapacityPayg : undefined;
            resourceInputs["fgtasgHealthCheckGracePeriod"] = state ? state.fgtasgHealthCheckGracePeriod : undefined;
            resourceInputs["fgtasgMaxSizeByol"] = state ? state.fgtasgMaxSizeByol : undefined;
            resourceInputs["fgtasgMaxSizePayg"] = state ? state.fgtasgMaxSizePayg : undefined;
            resourceInputs["fgtasgMinSizeByol"] = state ? state.fgtasgMinSizeByol : undefined;
            resourceInputs["fgtasgMinSizePayg"] = state ? state.fgtasgMinSizePayg : undefined;
            resourceInputs["fgtasgScaleInThreshold"] = state ? state.fgtasgScaleInThreshold : undefined;
            resourceInputs["fgtasgScaleOutThreshold"] = state ? state.fgtasgScaleOutThreshold : undefined;
            resourceInputs["fosVersion"] = state ? state.fosVersion : undefined;
            resourceInputs["getLicenseGracePeriod"] = state ? state.getLicenseGracePeriod : undefined;
            resourceInputs["heartbeatDelayAllowance"] = state ? state.heartbeatDelayAllowance : undefined;
            resourceInputs["heartbeatInterval"] = state ? state.heartbeatInterval : undefined;
            resourceInputs["heartbeatLossCount"] = state ? state.heartbeatLossCount : undefined;
            resourceInputs["internalBalancerDnsName"] = state ? state.internalBalancerDnsName : undefined;
            resourceInputs["internalBalancingOptions"] = state ? state.internalBalancingOptions : undefined;
            resourceInputs["internalTargetGroupHealthCheckPath"] = state ? state.internalTargetGroupHealthCheckPath : undefined;
            resourceInputs["keyPairName"] = state ? state.keyPairName : undefined;
            resourceInputs["lifecycleHookTimeout"] = state ? state.lifecycleHookTimeout : undefined;
            resourceInputs["loadbalancingHealthCheckThreshold"] = state ? state.loadbalancingHealthCheckThreshold : undefined;
            resourceInputs["loadbalancingTrafficPort"] = state ? state.loadbalancingTrafficPort : undefined;
            resourceInputs["loadbalancingTrafficProtocol"] = state ? state.loadbalancingTrafficProtocol : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notificationEmail"] = state ? state.notificationEmail : undefined;
            resourceInputs["primaryElectionTimeout"] = state ? state.primaryElectionTimeout : undefined;
            resourceInputs["privateSubnet1"] = state ? state.privateSubnet1 : undefined;
            resourceInputs["privateSubnet2"] = state ? state.privateSubnet2 : undefined;
            resourceInputs["privateSubnetRouteTable"] = state ? state.privateSubnetRouteTable : undefined;
            resourceInputs["publicSubnet1"] = state ? state.publicSubnet1 : undefined;
            resourceInputs["publicSubnet2"] = state ? state.publicSubnet2 : undefined;
            resourceInputs["resourceTagPrefix"] = state ? state.resourceTagPrefix : undefined;
            resourceInputs["s3BucketName"] = state ? state.s3BucketName : undefined;
            resourceInputs["s3KeyPrefix"] = state ? state.s3KeyPrefix : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["syncRecoveryCount"] = state ? state.syncRecoveryCount : undefined;
            resourceInputs["terminateUnhealthyVm"] = state ? state.terminateUnhealthyVm : undefined;
            resourceInputs["useCustomAssetLocation"] = state ? state.useCustomAssetLocation : undefined;
            resourceInputs["vpcCidr"] = state ? state.vpcCidr : undefined;
            resourceInputs["vpcEndpointId"] = state ? state.vpcEndpointId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ObjectCloudOrchestawstemplateAutoscaleexistingvpcArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["customAssetContainer"] = args ? args.customAssetContainer : undefined;
            resourceInputs["customAssetDirectory"] = args ? args.customAssetDirectory : undefined;
            resourceInputs["customIdentifier"] = args ? args.customIdentifier : undefined;
            resourceInputs["fazAutoscaleAdminPasswords"] = args?.fazAutoscaleAdminPasswords ? pulumi.secret(args.fazAutoscaleAdminPasswords) : undefined;
            resourceInputs["fazAutoscaleAdminUsername"] = args ? args.fazAutoscaleAdminUsername : undefined;
            resourceInputs["fazCustomPrivateIpaddress"] = args ? args.fazCustomPrivateIpaddress : undefined;
            resourceInputs["fazInstanceType"] = args ? args.fazInstanceType : undefined;
            resourceInputs["fazIntegrationOptions"] = args ? args.fazIntegrationOptions : undefined;
            resourceInputs["fazVersion"] = args ? args.fazVersion : undefined;
            resourceInputs["fgtAdminCidr"] = args ? args.fgtAdminCidr : undefined;
            resourceInputs["fgtAdminPort"] = args ? args.fgtAdminPort : undefined;
            resourceInputs["fgtInstanceType"] = args ? args.fgtInstanceType : undefined;
            resourceInputs["fgtPskSecret"] = args ? args.fgtPskSecret : undefined;
            resourceInputs["fgtasgCoolDown"] = args ? args.fgtasgCoolDown : undefined;
            resourceInputs["fgtasgDesiredCapacityByol"] = args ? args.fgtasgDesiredCapacityByol : undefined;
            resourceInputs["fgtasgDesiredCapacityPayg"] = args ? args.fgtasgDesiredCapacityPayg : undefined;
            resourceInputs["fgtasgHealthCheckGracePeriod"] = args ? args.fgtasgHealthCheckGracePeriod : undefined;
            resourceInputs["fgtasgMaxSizeByol"] = args ? args.fgtasgMaxSizeByol : undefined;
            resourceInputs["fgtasgMaxSizePayg"] = args ? args.fgtasgMaxSizePayg : undefined;
            resourceInputs["fgtasgMinSizeByol"] = args ? args.fgtasgMinSizeByol : undefined;
            resourceInputs["fgtasgMinSizePayg"] = args ? args.fgtasgMinSizePayg : undefined;
            resourceInputs["fgtasgScaleInThreshold"] = args ? args.fgtasgScaleInThreshold : undefined;
            resourceInputs["fgtasgScaleOutThreshold"] = args ? args.fgtasgScaleOutThreshold : undefined;
            resourceInputs["fosVersion"] = args ? args.fosVersion : undefined;
            resourceInputs["getLicenseGracePeriod"] = args ? args.getLicenseGracePeriod : undefined;
            resourceInputs["heartbeatDelayAllowance"] = args ? args.heartbeatDelayAllowance : undefined;
            resourceInputs["heartbeatInterval"] = args ? args.heartbeatInterval : undefined;
            resourceInputs["heartbeatLossCount"] = args ? args.heartbeatLossCount : undefined;
            resourceInputs["internalBalancerDnsName"] = args ? args.internalBalancerDnsName : undefined;
            resourceInputs["internalBalancingOptions"] = args ? args.internalBalancingOptions : undefined;
            resourceInputs["internalTargetGroupHealthCheckPath"] = args ? args.internalTargetGroupHealthCheckPath : undefined;
            resourceInputs["keyPairName"] = args ? args.keyPairName : undefined;
            resourceInputs["lifecycleHookTimeout"] = args ? args.lifecycleHookTimeout : undefined;
            resourceInputs["loadbalancingHealthCheckThreshold"] = args ? args.loadbalancingHealthCheckThreshold : undefined;
            resourceInputs["loadbalancingTrafficPort"] = args ? args.loadbalancingTrafficPort : undefined;
            resourceInputs["loadbalancingTrafficProtocol"] = args ? args.loadbalancingTrafficProtocol : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notificationEmail"] = args ? args.notificationEmail : undefined;
            resourceInputs["primaryElectionTimeout"] = args ? args.primaryElectionTimeout : undefined;
            resourceInputs["privateSubnet1"] = args ? args.privateSubnet1 : undefined;
            resourceInputs["privateSubnet2"] = args ? args.privateSubnet2 : undefined;
            resourceInputs["privateSubnetRouteTable"] = args ? args.privateSubnetRouteTable : undefined;
            resourceInputs["publicSubnet1"] = args ? args.publicSubnet1 : undefined;
            resourceInputs["publicSubnet2"] = args ? args.publicSubnet2 : undefined;
            resourceInputs["resourceTagPrefix"] = args ? args.resourceTagPrefix : undefined;
            resourceInputs["s3BucketName"] = args ? args.s3BucketName : undefined;
            resourceInputs["s3KeyPrefix"] = args ? args.s3KeyPrefix : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["syncRecoveryCount"] = args ? args.syncRecoveryCount : undefined;
            resourceInputs["terminateUnhealthyVm"] = args ? args.terminateUnhealthyVm : undefined;
            resourceInputs["useCustomAssetLocation"] = args ? args.useCustomAssetLocation : undefined;
            resourceInputs["vpcCidr"] = args ? args.vpcCidr : undefined;
            resourceInputs["vpcEndpointId"] = args ? args.vpcEndpointId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["fazAutoscaleAdminPasswords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectCloudOrchestawstemplateAutoscaleexistingvpc.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectCloudOrchestawstemplateAutoscaleexistingvpc resources.
 */
export interface ObjectCloudOrchestawstemplateAutoscaleexistingvpcState {
    adom?: pulumi.Input<string>;
    customAssetContainer?: pulumi.Input<string>;
    customAssetDirectory?: pulumi.Input<string>;
    customIdentifier?: pulumi.Input<string>;
    fazAutoscaleAdminPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    fazAutoscaleAdminUsername?: pulumi.Input<string>;
    fazCustomPrivateIpaddress?: pulumi.Input<string>;
    fazInstanceType?: pulumi.Input<string>;
    fazIntegrationOptions?: pulumi.Input<string>;
    fazVersion?: pulumi.Input<string>;
    fgtAdminCidr?: pulumi.Input<string>;
    fgtAdminPort?: pulumi.Input<number>;
    fgtInstanceType?: pulumi.Input<string>;
    fgtPskSecret?: pulumi.Input<string>;
    fgtasgCoolDown?: pulumi.Input<number>;
    fgtasgDesiredCapacityByol?: pulumi.Input<number>;
    fgtasgDesiredCapacityPayg?: pulumi.Input<number>;
    fgtasgHealthCheckGracePeriod?: pulumi.Input<number>;
    fgtasgMaxSizeByol?: pulumi.Input<number>;
    fgtasgMaxSizePayg?: pulumi.Input<number>;
    fgtasgMinSizeByol?: pulumi.Input<number>;
    fgtasgMinSizePayg?: pulumi.Input<number>;
    fgtasgScaleInThreshold?: pulumi.Input<number>;
    fgtasgScaleOutThreshold?: pulumi.Input<number>;
    fosVersion?: pulumi.Input<string>;
    getLicenseGracePeriod?: pulumi.Input<number>;
    heartbeatDelayAllowance?: pulumi.Input<number>;
    heartbeatInterval?: pulumi.Input<number>;
    heartbeatLossCount?: pulumi.Input<number>;
    internalBalancerDnsName?: pulumi.Input<string>;
    internalBalancingOptions?: pulumi.Input<string>;
    internalTargetGroupHealthCheckPath?: pulumi.Input<string>;
    keyPairName?: pulumi.Input<string>;
    lifecycleHookTimeout?: pulumi.Input<number>;
    loadbalancingHealthCheckThreshold?: pulumi.Input<number>;
    loadbalancingTrafficPort?: pulumi.Input<number>;
    loadbalancingTrafficProtocol?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notificationEmail?: pulumi.Input<string>;
    primaryElectionTimeout?: pulumi.Input<number>;
    privateSubnet1?: pulumi.Input<string>;
    privateSubnet2?: pulumi.Input<string>;
    privateSubnetRouteTable?: pulumi.Input<string>;
    publicSubnet1?: pulumi.Input<string>;
    publicSubnet2?: pulumi.Input<string>;
    resourceTagPrefix?: pulumi.Input<string>;
    s3BucketName?: pulumi.Input<string>;
    s3KeyPrefix?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    syncRecoveryCount?: pulumi.Input<number>;
    terminateUnhealthyVm?: pulumi.Input<string>;
    useCustomAssetLocation?: pulumi.Input<string>;
    vpcCidr?: pulumi.Input<string>;
    vpcEndpointId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectCloudOrchestawstemplateAutoscaleexistingvpc resource.
 */
export interface ObjectCloudOrchestawstemplateAutoscaleexistingvpcArgs {
    adom?: pulumi.Input<string>;
    customAssetContainer?: pulumi.Input<string>;
    customAssetDirectory?: pulumi.Input<string>;
    customIdentifier?: pulumi.Input<string>;
    fazAutoscaleAdminPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    fazAutoscaleAdminUsername?: pulumi.Input<string>;
    fazCustomPrivateIpaddress?: pulumi.Input<string>;
    fazInstanceType?: pulumi.Input<string>;
    fazIntegrationOptions?: pulumi.Input<string>;
    fazVersion?: pulumi.Input<string>;
    fgtAdminCidr?: pulumi.Input<string>;
    fgtAdminPort?: pulumi.Input<number>;
    fgtInstanceType?: pulumi.Input<string>;
    fgtPskSecret?: pulumi.Input<string>;
    fgtasgCoolDown?: pulumi.Input<number>;
    fgtasgDesiredCapacityByol?: pulumi.Input<number>;
    fgtasgDesiredCapacityPayg?: pulumi.Input<number>;
    fgtasgHealthCheckGracePeriod?: pulumi.Input<number>;
    fgtasgMaxSizeByol?: pulumi.Input<number>;
    fgtasgMaxSizePayg?: pulumi.Input<number>;
    fgtasgMinSizeByol?: pulumi.Input<number>;
    fgtasgMinSizePayg?: pulumi.Input<number>;
    fgtasgScaleInThreshold?: pulumi.Input<number>;
    fgtasgScaleOutThreshold?: pulumi.Input<number>;
    fosVersion?: pulumi.Input<string>;
    getLicenseGracePeriod?: pulumi.Input<number>;
    heartbeatDelayAllowance?: pulumi.Input<number>;
    heartbeatInterval?: pulumi.Input<number>;
    heartbeatLossCount?: pulumi.Input<number>;
    internalBalancerDnsName?: pulumi.Input<string>;
    internalBalancingOptions?: pulumi.Input<string>;
    internalTargetGroupHealthCheckPath?: pulumi.Input<string>;
    keyPairName?: pulumi.Input<string>;
    lifecycleHookTimeout?: pulumi.Input<number>;
    loadbalancingHealthCheckThreshold?: pulumi.Input<number>;
    loadbalancingTrafficPort?: pulumi.Input<number>;
    loadbalancingTrafficProtocol?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notificationEmail?: pulumi.Input<string>;
    primaryElectionTimeout?: pulumi.Input<number>;
    privateSubnet1?: pulumi.Input<string>;
    privateSubnet2?: pulumi.Input<string>;
    privateSubnetRouteTable?: pulumi.Input<string>;
    publicSubnet1?: pulumi.Input<string>;
    publicSubnet2?: pulumi.Input<string>;
    resourceTagPrefix?: pulumi.Input<string>;
    s3BucketName?: pulumi.Input<string>;
    s3KeyPrefix?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    syncRecoveryCount?: pulumi.Input<number>;
    terminateUnhealthyVm?: pulumi.Input<string>;
    useCustomAssetLocation?: pulumi.Input<string>;
    vpcCidr?: pulumi.Input<string>;
    vpcEndpointId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
