// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectSystemNpuFpanomaly extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSystemNpuFpanomaly resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSystemNpuFpanomalyState, opts?: pulumi.CustomResourceOptions): ObjectSystemNpuFpanomaly {
        return new ObjectSystemNpuFpanomaly(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSystemNpuFpanomaly:ObjectSystemNpuFpanomaly';

    /**
     * Returns true if the given object is an instance of ObjectSystemNpuFpanomaly.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSystemNpuFpanomaly {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSystemNpuFpanomaly.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly capwapMinlenErr!: pulumi.Output<string | undefined>;
    public readonly espMinlenErr!: pulumi.Output<string>;
    public readonly greCsumErr!: pulumi.Output<string | undefined>;
    public readonly gtpuPlenErr!: pulumi.Output<string | undefined>;
    public readonly icmpCsumErr!: pulumi.Output<string>;
    public readonly icmpFrag!: pulumi.Output<string>;
    public readonly icmpLand!: pulumi.Output<string>;
    public readonly icmpMinlenErr!: pulumi.Output<string>;
    public readonly ipv4CsumErr!: pulumi.Output<string>;
    public readonly ipv4IhlErr!: pulumi.Output<string>;
    public readonly ipv4Land!: pulumi.Output<string>;
    public readonly ipv4LenErr!: pulumi.Output<string>;
    public readonly ipv4OptErr!: pulumi.Output<string>;
    public readonly ipv4Optlsrr!: pulumi.Output<string>;
    public readonly ipv4Optrr!: pulumi.Output<string>;
    public readonly ipv4Optsecurity!: pulumi.Output<string>;
    public readonly ipv4Optssrr!: pulumi.Output<string>;
    public readonly ipv4Optstream!: pulumi.Output<string>;
    public readonly ipv4Opttimestamp!: pulumi.Output<string>;
    public readonly ipv4ProtoErr!: pulumi.Output<string>;
    public readonly ipv4TtlzeroErr!: pulumi.Output<string>;
    public readonly ipv4Unknopt!: pulumi.Output<string>;
    public readonly ipv4VerErr!: pulumi.Output<string>;
    public readonly ipv6DaddrErr!: pulumi.Output<string>;
    public readonly ipv6ExthdrLenErr!: pulumi.Output<string>;
    public readonly ipv6ExthdrOrderErr!: pulumi.Output<string>;
    public readonly ipv6IhlErr!: pulumi.Output<string>;
    public readonly ipv6Land!: pulumi.Output<string>;
    public readonly ipv6Optendpid!: pulumi.Output<string>;
    public readonly ipv6Opthomeaddr!: pulumi.Output<string>;
    public readonly ipv6Optinvld!: pulumi.Output<string>;
    public readonly ipv6Optjumbo!: pulumi.Output<string>;
    public readonly ipv6Optnsap!: pulumi.Output<string>;
    public readonly ipv6Optralert!: pulumi.Output<string>;
    public readonly ipv6Opttunnel!: pulumi.Output<string>;
    public readonly ipv6PlenZero!: pulumi.Output<string>;
    public readonly ipv6ProtoErr!: pulumi.Output<string>;
    public readonly ipv6SaddrErr!: pulumi.Output<string>;
    public readonly ipv6Unknopt!: pulumi.Output<string>;
    public readonly ipv6VerErr!: pulumi.Output<string>;
    public readonly nvgreMinlenErr!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sctpClenErr!: pulumi.Output<string | undefined>;
    public readonly sctpCrcErr!: pulumi.Output<string | undefined>;
    public readonly sctpCsumErr!: pulumi.Output<string>;
    public readonly sctpL4lenErr!: pulumi.Output<string | undefined>;
    public readonly tcpCsumErr!: pulumi.Output<string>;
    public readonly tcpFinNoack!: pulumi.Output<string>;
    public readonly tcpFinOnly!: pulumi.Output<string>;
    public readonly tcpHlenErr!: pulumi.Output<string>;
    public readonly tcpHlenvsl4lenErr!: pulumi.Output<string | undefined>;
    public readonly tcpLand!: pulumi.Output<string>;
    public readonly tcpNoFlag!: pulumi.Output<string>;
    public readonly tcpPlenErr!: pulumi.Output<string>;
    public readonly tcpSynData!: pulumi.Output<string>;
    public readonly tcpSynFin!: pulumi.Output<string>;
    public readonly tcpWinnuke!: pulumi.Output<string>;
    public readonly udpCsumErr!: pulumi.Output<string>;
    public readonly udpHlenErr!: pulumi.Output<string>;
    public readonly udpLand!: pulumi.Output<string>;
    public readonly udpLenErr!: pulumi.Output<string>;
    public readonly udpPlenErr!: pulumi.Output<string>;
    public readonly udpliteCoverErr!: pulumi.Output<string>;
    public readonly udpliteCsumErr!: pulumi.Output<string>;
    public readonly uespMinlenErr!: pulumi.Output<string | undefined>;
    public readonly unknprotoMinlenErr!: pulumi.Output<string>;
    public readonly vxlanMinlenErr!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectSystemNpuFpanomaly resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSystemNpuFpanomalyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSystemNpuFpanomalyArgs | ObjectSystemNpuFpanomalyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSystemNpuFpanomalyState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["capwapMinlenErr"] = state ? state.capwapMinlenErr : undefined;
            resourceInputs["espMinlenErr"] = state ? state.espMinlenErr : undefined;
            resourceInputs["greCsumErr"] = state ? state.greCsumErr : undefined;
            resourceInputs["gtpuPlenErr"] = state ? state.gtpuPlenErr : undefined;
            resourceInputs["icmpCsumErr"] = state ? state.icmpCsumErr : undefined;
            resourceInputs["icmpFrag"] = state ? state.icmpFrag : undefined;
            resourceInputs["icmpLand"] = state ? state.icmpLand : undefined;
            resourceInputs["icmpMinlenErr"] = state ? state.icmpMinlenErr : undefined;
            resourceInputs["ipv4CsumErr"] = state ? state.ipv4CsumErr : undefined;
            resourceInputs["ipv4IhlErr"] = state ? state.ipv4IhlErr : undefined;
            resourceInputs["ipv4Land"] = state ? state.ipv4Land : undefined;
            resourceInputs["ipv4LenErr"] = state ? state.ipv4LenErr : undefined;
            resourceInputs["ipv4OptErr"] = state ? state.ipv4OptErr : undefined;
            resourceInputs["ipv4Optlsrr"] = state ? state.ipv4Optlsrr : undefined;
            resourceInputs["ipv4Optrr"] = state ? state.ipv4Optrr : undefined;
            resourceInputs["ipv4Optsecurity"] = state ? state.ipv4Optsecurity : undefined;
            resourceInputs["ipv4Optssrr"] = state ? state.ipv4Optssrr : undefined;
            resourceInputs["ipv4Optstream"] = state ? state.ipv4Optstream : undefined;
            resourceInputs["ipv4Opttimestamp"] = state ? state.ipv4Opttimestamp : undefined;
            resourceInputs["ipv4ProtoErr"] = state ? state.ipv4ProtoErr : undefined;
            resourceInputs["ipv4TtlzeroErr"] = state ? state.ipv4TtlzeroErr : undefined;
            resourceInputs["ipv4Unknopt"] = state ? state.ipv4Unknopt : undefined;
            resourceInputs["ipv4VerErr"] = state ? state.ipv4VerErr : undefined;
            resourceInputs["ipv6DaddrErr"] = state ? state.ipv6DaddrErr : undefined;
            resourceInputs["ipv6ExthdrLenErr"] = state ? state.ipv6ExthdrLenErr : undefined;
            resourceInputs["ipv6ExthdrOrderErr"] = state ? state.ipv6ExthdrOrderErr : undefined;
            resourceInputs["ipv6IhlErr"] = state ? state.ipv6IhlErr : undefined;
            resourceInputs["ipv6Land"] = state ? state.ipv6Land : undefined;
            resourceInputs["ipv6Optendpid"] = state ? state.ipv6Optendpid : undefined;
            resourceInputs["ipv6Opthomeaddr"] = state ? state.ipv6Opthomeaddr : undefined;
            resourceInputs["ipv6Optinvld"] = state ? state.ipv6Optinvld : undefined;
            resourceInputs["ipv6Optjumbo"] = state ? state.ipv6Optjumbo : undefined;
            resourceInputs["ipv6Optnsap"] = state ? state.ipv6Optnsap : undefined;
            resourceInputs["ipv6Optralert"] = state ? state.ipv6Optralert : undefined;
            resourceInputs["ipv6Opttunnel"] = state ? state.ipv6Opttunnel : undefined;
            resourceInputs["ipv6PlenZero"] = state ? state.ipv6PlenZero : undefined;
            resourceInputs["ipv6ProtoErr"] = state ? state.ipv6ProtoErr : undefined;
            resourceInputs["ipv6SaddrErr"] = state ? state.ipv6SaddrErr : undefined;
            resourceInputs["ipv6Unknopt"] = state ? state.ipv6Unknopt : undefined;
            resourceInputs["ipv6VerErr"] = state ? state.ipv6VerErr : undefined;
            resourceInputs["nvgreMinlenErr"] = state ? state.nvgreMinlenErr : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sctpClenErr"] = state ? state.sctpClenErr : undefined;
            resourceInputs["sctpCrcErr"] = state ? state.sctpCrcErr : undefined;
            resourceInputs["sctpCsumErr"] = state ? state.sctpCsumErr : undefined;
            resourceInputs["sctpL4lenErr"] = state ? state.sctpL4lenErr : undefined;
            resourceInputs["tcpCsumErr"] = state ? state.tcpCsumErr : undefined;
            resourceInputs["tcpFinNoack"] = state ? state.tcpFinNoack : undefined;
            resourceInputs["tcpFinOnly"] = state ? state.tcpFinOnly : undefined;
            resourceInputs["tcpHlenErr"] = state ? state.tcpHlenErr : undefined;
            resourceInputs["tcpHlenvsl4lenErr"] = state ? state.tcpHlenvsl4lenErr : undefined;
            resourceInputs["tcpLand"] = state ? state.tcpLand : undefined;
            resourceInputs["tcpNoFlag"] = state ? state.tcpNoFlag : undefined;
            resourceInputs["tcpPlenErr"] = state ? state.tcpPlenErr : undefined;
            resourceInputs["tcpSynData"] = state ? state.tcpSynData : undefined;
            resourceInputs["tcpSynFin"] = state ? state.tcpSynFin : undefined;
            resourceInputs["tcpWinnuke"] = state ? state.tcpWinnuke : undefined;
            resourceInputs["udpCsumErr"] = state ? state.udpCsumErr : undefined;
            resourceInputs["udpHlenErr"] = state ? state.udpHlenErr : undefined;
            resourceInputs["udpLand"] = state ? state.udpLand : undefined;
            resourceInputs["udpLenErr"] = state ? state.udpLenErr : undefined;
            resourceInputs["udpPlenErr"] = state ? state.udpPlenErr : undefined;
            resourceInputs["udpliteCoverErr"] = state ? state.udpliteCoverErr : undefined;
            resourceInputs["udpliteCsumErr"] = state ? state.udpliteCsumErr : undefined;
            resourceInputs["uespMinlenErr"] = state ? state.uespMinlenErr : undefined;
            resourceInputs["unknprotoMinlenErr"] = state ? state.unknprotoMinlenErr : undefined;
            resourceInputs["vxlanMinlenErr"] = state ? state.vxlanMinlenErr : undefined;
        } else {
            const args = argsOrState as ObjectSystemNpuFpanomalyArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["capwapMinlenErr"] = args ? args.capwapMinlenErr : undefined;
            resourceInputs["espMinlenErr"] = args ? args.espMinlenErr : undefined;
            resourceInputs["greCsumErr"] = args ? args.greCsumErr : undefined;
            resourceInputs["gtpuPlenErr"] = args ? args.gtpuPlenErr : undefined;
            resourceInputs["icmpCsumErr"] = args ? args.icmpCsumErr : undefined;
            resourceInputs["icmpFrag"] = args ? args.icmpFrag : undefined;
            resourceInputs["icmpLand"] = args ? args.icmpLand : undefined;
            resourceInputs["icmpMinlenErr"] = args ? args.icmpMinlenErr : undefined;
            resourceInputs["ipv4CsumErr"] = args ? args.ipv4CsumErr : undefined;
            resourceInputs["ipv4IhlErr"] = args ? args.ipv4IhlErr : undefined;
            resourceInputs["ipv4Land"] = args ? args.ipv4Land : undefined;
            resourceInputs["ipv4LenErr"] = args ? args.ipv4LenErr : undefined;
            resourceInputs["ipv4OptErr"] = args ? args.ipv4OptErr : undefined;
            resourceInputs["ipv4Optlsrr"] = args ? args.ipv4Optlsrr : undefined;
            resourceInputs["ipv4Optrr"] = args ? args.ipv4Optrr : undefined;
            resourceInputs["ipv4Optsecurity"] = args ? args.ipv4Optsecurity : undefined;
            resourceInputs["ipv4Optssrr"] = args ? args.ipv4Optssrr : undefined;
            resourceInputs["ipv4Optstream"] = args ? args.ipv4Optstream : undefined;
            resourceInputs["ipv4Opttimestamp"] = args ? args.ipv4Opttimestamp : undefined;
            resourceInputs["ipv4ProtoErr"] = args ? args.ipv4ProtoErr : undefined;
            resourceInputs["ipv4TtlzeroErr"] = args ? args.ipv4TtlzeroErr : undefined;
            resourceInputs["ipv4Unknopt"] = args ? args.ipv4Unknopt : undefined;
            resourceInputs["ipv4VerErr"] = args ? args.ipv4VerErr : undefined;
            resourceInputs["ipv6DaddrErr"] = args ? args.ipv6DaddrErr : undefined;
            resourceInputs["ipv6ExthdrLenErr"] = args ? args.ipv6ExthdrLenErr : undefined;
            resourceInputs["ipv6ExthdrOrderErr"] = args ? args.ipv6ExthdrOrderErr : undefined;
            resourceInputs["ipv6IhlErr"] = args ? args.ipv6IhlErr : undefined;
            resourceInputs["ipv6Land"] = args ? args.ipv6Land : undefined;
            resourceInputs["ipv6Optendpid"] = args ? args.ipv6Optendpid : undefined;
            resourceInputs["ipv6Opthomeaddr"] = args ? args.ipv6Opthomeaddr : undefined;
            resourceInputs["ipv6Optinvld"] = args ? args.ipv6Optinvld : undefined;
            resourceInputs["ipv6Optjumbo"] = args ? args.ipv6Optjumbo : undefined;
            resourceInputs["ipv6Optnsap"] = args ? args.ipv6Optnsap : undefined;
            resourceInputs["ipv6Optralert"] = args ? args.ipv6Optralert : undefined;
            resourceInputs["ipv6Opttunnel"] = args ? args.ipv6Opttunnel : undefined;
            resourceInputs["ipv6PlenZero"] = args ? args.ipv6PlenZero : undefined;
            resourceInputs["ipv6ProtoErr"] = args ? args.ipv6ProtoErr : undefined;
            resourceInputs["ipv6SaddrErr"] = args ? args.ipv6SaddrErr : undefined;
            resourceInputs["ipv6Unknopt"] = args ? args.ipv6Unknopt : undefined;
            resourceInputs["ipv6VerErr"] = args ? args.ipv6VerErr : undefined;
            resourceInputs["nvgreMinlenErr"] = args ? args.nvgreMinlenErr : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sctpClenErr"] = args ? args.sctpClenErr : undefined;
            resourceInputs["sctpCrcErr"] = args ? args.sctpCrcErr : undefined;
            resourceInputs["sctpCsumErr"] = args ? args.sctpCsumErr : undefined;
            resourceInputs["sctpL4lenErr"] = args ? args.sctpL4lenErr : undefined;
            resourceInputs["tcpCsumErr"] = args ? args.tcpCsumErr : undefined;
            resourceInputs["tcpFinNoack"] = args ? args.tcpFinNoack : undefined;
            resourceInputs["tcpFinOnly"] = args ? args.tcpFinOnly : undefined;
            resourceInputs["tcpHlenErr"] = args ? args.tcpHlenErr : undefined;
            resourceInputs["tcpHlenvsl4lenErr"] = args ? args.tcpHlenvsl4lenErr : undefined;
            resourceInputs["tcpLand"] = args ? args.tcpLand : undefined;
            resourceInputs["tcpNoFlag"] = args ? args.tcpNoFlag : undefined;
            resourceInputs["tcpPlenErr"] = args ? args.tcpPlenErr : undefined;
            resourceInputs["tcpSynData"] = args ? args.tcpSynData : undefined;
            resourceInputs["tcpSynFin"] = args ? args.tcpSynFin : undefined;
            resourceInputs["tcpWinnuke"] = args ? args.tcpWinnuke : undefined;
            resourceInputs["udpCsumErr"] = args ? args.udpCsumErr : undefined;
            resourceInputs["udpHlenErr"] = args ? args.udpHlenErr : undefined;
            resourceInputs["udpLand"] = args ? args.udpLand : undefined;
            resourceInputs["udpLenErr"] = args ? args.udpLenErr : undefined;
            resourceInputs["udpPlenErr"] = args ? args.udpPlenErr : undefined;
            resourceInputs["udpliteCoverErr"] = args ? args.udpliteCoverErr : undefined;
            resourceInputs["udpliteCsumErr"] = args ? args.udpliteCsumErr : undefined;
            resourceInputs["uespMinlenErr"] = args ? args.uespMinlenErr : undefined;
            resourceInputs["unknprotoMinlenErr"] = args ? args.unknprotoMinlenErr : undefined;
            resourceInputs["vxlanMinlenErr"] = args ? args.vxlanMinlenErr : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSystemNpuFpanomaly.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSystemNpuFpanomaly resources.
 */
export interface ObjectSystemNpuFpanomalyState {
    adom?: pulumi.Input<string>;
    capwapMinlenErr?: pulumi.Input<string>;
    espMinlenErr?: pulumi.Input<string>;
    greCsumErr?: pulumi.Input<string>;
    gtpuPlenErr?: pulumi.Input<string>;
    icmpCsumErr?: pulumi.Input<string>;
    icmpFrag?: pulumi.Input<string>;
    icmpLand?: pulumi.Input<string>;
    icmpMinlenErr?: pulumi.Input<string>;
    ipv4CsumErr?: pulumi.Input<string>;
    ipv4IhlErr?: pulumi.Input<string>;
    ipv4Land?: pulumi.Input<string>;
    ipv4LenErr?: pulumi.Input<string>;
    ipv4OptErr?: pulumi.Input<string>;
    ipv4Optlsrr?: pulumi.Input<string>;
    ipv4Optrr?: pulumi.Input<string>;
    ipv4Optsecurity?: pulumi.Input<string>;
    ipv4Optssrr?: pulumi.Input<string>;
    ipv4Optstream?: pulumi.Input<string>;
    ipv4Opttimestamp?: pulumi.Input<string>;
    ipv4ProtoErr?: pulumi.Input<string>;
    ipv4TtlzeroErr?: pulumi.Input<string>;
    ipv4Unknopt?: pulumi.Input<string>;
    ipv4VerErr?: pulumi.Input<string>;
    ipv6DaddrErr?: pulumi.Input<string>;
    ipv6ExthdrLenErr?: pulumi.Input<string>;
    ipv6ExthdrOrderErr?: pulumi.Input<string>;
    ipv6IhlErr?: pulumi.Input<string>;
    ipv6Land?: pulumi.Input<string>;
    ipv6Optendpid?: pulumi.Input<string>;
    ipv6Opthomeaddr?: pulumi.Input<string>;
    ipv6Optinvld?: pulumi.Input<string>;
    ipv6Optjumbo?: pulumi.Input<string>;
    ipv6Optnsap?: pulumi.Input<string>;
    ipv6Optralert?: pulumi.Input<string>;
    ipv6Opttunnel?: pulumi.Input<string>;
    ipv6PlenZero?: pulumi.Input<string>;
    ipv6ProtoErr?: pulumi.Input<string>;
    ipv6SaddrErr?: pulumi.Input<string>;
    ipv6Unknopt?: pulumi.Input<string>;
    ipv6VerErr?: pulumi.Input<string>;
    nvgreMinlenErr?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sctpClenErr?: pulumi.Input<string>;
    sctpCrcErr?: pulumi.Input<string>;
    sctpCsumErr?: pulumi.Input<string>;
    sctpL4lenErr?: pulumi.Input<string>;
    tcpCsumErr?: pulumi.Input<string>;
    tcpFinNoack?: pulumi.Input<string>;
    tcpFinOnly?: pulumi.Input<string>;
    tcpHlenErr?: pulumi.Input<string>;
    tcpHlenvsl4lenErr?: pulumi.Input<string>;
    tcpLand?: pulumi.Input<string>;
    tcpNoFlag?: pulumi.Input<string>;
    tcpPlenErr?: pulumi.Input<string>;
    tcpSynData?: pulumi.Input<string>;
    tcpSynFin?: pulumi.Input<string>;
    tcpWinnuke?: pulumi.Input<string>;
    udpCsumErr?: pulumi.Input<string>;
    udpHlenErr?: pulumi.Input<string>;
    udpLand?: pulumi.Input<string>;
    udpLenErr?: pulumi.Input<string>;
    udpPlenErr?: pulumi.Input<string>;
    udpliteCoverErr?: pulumi.Input<string>;
    udpliteCsumErr?: pulumi.Input<string>;
    uespMinlenErr?: pulumi.Input<string>;
    unknprotoMinlenErr?: pulumi.Input<string>;
    vxlanMinlenErr?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectSystemNpuFpanomaly resource.
 */
export interface ObjectSystemNpuFpanomalyArgs {
    adom?: pulumi.Input<string>;
    capwapMinlenErr?: pulumi.Input<string>;
    espMinlenErr?: pulumi.Input<string>;
    greCsumErr?: pulumi.Input<string>;
    gtpuPlenErr?: pulumi.Input<string>;
    icmpCsumErr?: pulumi.Input<string>;
    icmpFrag?: pulumi.Input<string>;
    icmpLand?: pulumi.Input<string>;
    icmpMinlenErr?: pulumi.Input<string>;
    ipv4CsumErr?: pulumi.Input<string>;
    ipv4IhlErr?: pulumi.Input<string>;
    ipv4Land?: pulumi.Input<string>;
    ipv4LenErr?: pulumi.Input<string>;
    ipv4OptErr?: pulumi.Input<string>;
    ipv4Optlsrr?: pulumi.Input<string>;
    ipv4Optrr?: pulumi.Input<string>;
    ipv4Optsecurity?: pulumi.Input<string>;
    ipv4Optssrr?: pulumi.Input<string>;
    ipv4Optstream?: pulumi.Input<string>;
    ipv4Opttimestamp?: pulumi.Input<string>;
    ipv4ProtoErr?: pulumi.Input<string>;
    ipv4TtlzeroErr?: pulumi.Input<string>;
    ipv4Unknopt?: pulumi.Input<string>;
    ipv4VerErr?: pulumi.Input<string>;
    ipv6DaddrErr?: pulumi.Input<string>;
    ipv6ExthdrLenErr?: pulumi.Input<string>;
    ipv6ExthdrOrderErr?: pulumi.Input<string>;
    ipv6IhlErr?: pulumi.Input<string>;
    ipv6Land?: pulumi.Input<string>;
    ipv6Optendpid?: pulumi.Input<string>;
    ipv6Opthomeaddr?: pulumi.Input<string>;
    ipv6Optinvld?: pulumi.Input<string>;
    ipv6Optjumbo?: pulumi.Input<string>;
    ipv6Optnsap?: pulumi.Input<string>;
    ipv6Optralert?: pulumi.Input<string>;
    ipv6Opttunnel?: pulumi.Input<string>;
    ipv6PlenZero?: pulumi.Input<string>;
    ipv6ProtoErr?: pulumi.Input<string>;
    ipv6SaddrErr?: pulumi.Input<string>;
    ipv6Unknopt?: pulumi.Input<string>;
    ipv6VerErr?: pulumi.Input<string>;
    nvgreMinlenErr?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sctpClenErr?: pulumi.Input<string>;
    sctpCrcErr?: pulumi.Input<string>;
    sctpCsumErr?: pulumi.Input<string>;
    sctpL4lenErr?: pulumi.Input<string>;
    tcpCsumErr?: pulumi.Input<string>;
    tcpFinNoack?: pulumi.Input<string>;
    tcpFinOnly?: pulumi.Input<string>;
    tcpHlenErr?: pulumi.Input<string>;
    tcpHlenvsl4lenErr?: pulumi.Input<string>;
    tcpLand?: pulumi.Input<string>;
    tcpNoFlag?: pulumi.Input<string>;
    tcpPlenErr?: pulumi.Input<string>;
    tcpSynData?: pulumi.Input<string>;
    tcpSynFin?: pulumi.Input<string>;
    tcpWinnuke?: pulumi.Input<string>;
    udpCsumErr?: pulumi.Input<string>;
    udpHlenErr?: pulumi.Input<string>;
    udpLand?: pulumi.Input<string>;
    udpLenErr?: pulumi.Input<string>;
    udpPlenErr?: pulumi.Input<string>;
    udpliteCoverErr?: pulumi.Input<string>;
    udpliteCsumErr?: pulumi.Input<string>;
    uespMinlenErr?: pulumi.Input<string>;
    unknprotoMinlenErr?: pulumi.Input<string>;
    vxlanMinlenErr?: pulumi.Input<string>;
}
