// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectApplicationGroup extends pulumi.CustomResource {
    /**
     * Get an existing ObjectApplicationGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectApplicationGroupState, opts?: pulumi.CustomResourceOptions): ObjectApplicationGroup {
        return new ObjectApplicationGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectApplicationGroup:ObjectApplicationGroup';

    /**
     * Returns true if the given object is an instance of ObjectApplicationGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectApplicationGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectApplicationGroup.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly applications!: pulumi.Output<number[]>;
    public readonly behavior!: pulumi.Output<string>;
    public readonly categories!: pulumi.Output<number[]>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly popularities!: pulumi.Output<string[]>;
    public readonly protocols!: pulumi.Output<string>;
    public readonly risks!: pulumi.Output<number[]>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly technology!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly vendor!: pulumi.Output<string>;

    /**
     * Create a ObjectApplicationGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectApplicationGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectApplicationGroupArgs | ObjectApplicationGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectApplicationGroupState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["behavior"] = state ? state.behavior : undefined;
            resourceInputs["categories"] = state ? state.categories : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["popularities"] = state ? state.popularities : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["risks"] = state ? state.risks : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["technology"] = state ? state.technology : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
        } else {
            const args = argsOrState as ObjectApplicationGroupArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["behavior"] = args ? args.behavior : undefined;
            resourceInputs["categories"] = args ? args.categories : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["popularities"] = args ? args.popularities : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["risks"] = args ? args.risks : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["technology"] = args ? args.technology : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vendor"] = args ? args.vendor : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectApplicationGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectApplicationGroup resources.
 */
export interface ObjectApplicationGroupState {
    adom?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<number>[]>;
    behavior?: pulumi.Input<string>;
    categories?: pulumi.Input<pulumi.Input<number>[]>;
    comment?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    popularities?: pulumi.Input<pulumi.Input<string>[]>;
    protocols?: pulumi.Input<string>;
    risks?: pulumi.Input<pulumi.Input<number>[]>;
    scopetype?: pulumi.Input<string>;
    technology?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectApplicationGroup resource.
 */
export interface ObjectApplicationGroupArgs {
    adom?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<number>[]>;
    behavior?: pulumi.Input<string>;
    categories?: pulumi.Input<pulumi.Input<number>[]>;
    comment?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    popularities?: pulumi.Input<pulumi.Input<string>[]>;
    protocols?: pulumi.Input<string>;
    risks?: pulumi.Input<pulumi.Input<number>[]>;
    scopetype?: pulumi.Input<string>;
    technology?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}
