// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectSystemNpuNputcamMask extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSystemNpuNputcamMask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSystemNpuNputcamMaskState, opts?: pulumi.CustomResourceOptions): ObjectSystemNpuNputcamMask {
        return new ObjectSystemNpuNputcamMask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSystemNpuNputcamMask:ObjectSystemNpuNputcamMask';

    /**
     * Returns true if the given object is an instance of ObjectSystemNpuNputcamMask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSystemNpuNputcamMask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSystemNpuNputcamMask.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly df!: pulumi.Output<string>;
    public readonly dstip!: pulumi.Output<string>;
    public readonly dstipv6!: pulumi.Output<string>;
    public readonly dstmac!: pulumi.Output<string>;
    public readonly dstport!: pulumi.Output<number | undefined>;
    public readonly ethertype!: pulumi.Output<string>;
    public readonly extTag!: pulumi.Output<string>;
    public readonly fragOff!: pulumi.Output<number | undefined>;
    public readonly genBufCnt!: pulumi.Output<number | undefined>;
    public readonly genIv!: pulumi.Output<string>;
    public readonly genL3Flags!: pulumi.Output<number | undefined>;
    public readonly genL4Flags!: pulumi.Output<number | undefined>;
    public readonly genPktCtrl!: pulumi.Output<number | undefined>;
    public readonly genPri!: pulumi.Output<number | undefined>;
    public readonly genPriV!: pulumi.Output<string>;
    public readonly genTv!: pulumi.Output<string>;
    public readonly ihl!: pulumi.Output<number | undefined>;
    public readonly ip4Id!: pulumi.Output<number | undefined>;
    public readonly ip6Fl!: pulumi.Output<number | undefined>;
    public readonly ipver!: pulumi.Output<number | undefined>;
    public readonly l4Wd10!: pulumi.Output<number | undefined>;
    public readonly l4Wd11!: pulumi.Output<number | undefined>;
    public readonly l4Wd8!: pulumi.Output<number | undefined>;
    public readonly l4Wd9!: pulumi.Output<number | undefined>;
    public readonly mf!: pulumi.Output<string>;
    public readonly npuTcam!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<number | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly slink!: pulumi.Output<number | undefined>;
    public readonly smacChange!: pulumi.Output<string>;
    public readonly sp!: pulumi.Output<number | undefined>;
    public readonly srcCfi!: pulumi.Output<string>;
    public readonly srcPrio!: pulumi.Output<number | undefined>;
    public readonly srcUpdt!: pulumi.Output<string>;
    public readonly srcip!: pulumi.Output<string>;
    public readonly srcipv6!: pulumi.Output<string>;
    public readonly srcmac!: pulumi.Output<string>;
    public readonly srcport!: pulumi.Output<number | undefined>;
    public readonly svid!: pulumi.Output<number | undefined>;
    public readonly tcpAck!: pulumi.Output<string>;
    public readonly tcpCwr!: pulumi.Output<string>;
    public readonly tcpEce!: pulumi.Output<string>;
    public readonly tcpFin!: pulumi.Output<string>;
    public readonly tcpPush!: pulumi.Output<string>;
    public readonly tcpRst!: pulumi.Output<string>;
    public readonly tcpSyn!: pulumi.Output<string>;
    public readonly tcpUrg!: pulumi.Output<string>;
    public readonly tgtCfi!: pulumi.Output<string>;
    public readonly tgtPrio!: pulumi.Output<number | undefined>;
    public readonly tgtUpdt!: pulumi.Output<string>;
    public readonly tgtV!: pulumi.Output<string>;
    public readonly tos!: pulumi.Output<number | undefined>;
    public readonly tp!: pulumi.Output<number | undefined>;
    public readonly ttl!: pulumi.Output<number | undefined>;
    public readonly tvid!: pulumi.Output<number | undefined>;
    public readonly vdid!: pulumi.Output<number | undefined>;

    /**
     * Create a ObjectSystemNpuNputcamMask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectSystemNpuNputcamMaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSystemNpuNputcamMaskArgs | ObjectSystemNpuNputcamMaskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSystemNpuNputcamMaskState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["df"] = state ? state.df : undefined;
            resourceInputs["dstip"] = state ? state.dstip : undefined;
            resourceInputs["dstipv6"] = state ? state.dstipv6 : undefined;
            resourceInputs["dstmac"] = state ? state.dstmac : undefined;
            resourceInputs["dstport"] = state ? state.dstport : undefined;
            resourceInputs["ethertype"] = state ? state.ethertype : undefined;
            resourceInputs["extTag"] = state ? state.extTag : undefined;
            resourceInputs["fragOff"] = state ? state.fragOff : undefined;
            resourceInputs["genBufCnt"] = state ? state.genBufCnt : undefined;
            resourceInputs["genIv"] = state ? state.genIv : undefined;
            resourceInputs["genL3Flags"] = state ? state.genL3Flags : undefined;
            resourceInputs["genL4Flags"] = state ? state.genL4Flags : undefined;
            resourceInputs["genPktCtrl"] = state ? state.genPktCtrl : undefined;
            resourceInputs["genPri"] = state ? state.genPri : undefined;
            resourceInputs["genPriV"] = state ? state.genPriV : undefined;
            resourceInputs["genTv"] = state ? state.genTv : undefined;
            resourceInputs["ihl"] = state ? state.ihl : undefined;
            resourceInputs["ip4Id"] = state ? state.ip4Id : undefined;
            resourceInputs["ip6Fl"] = state ? state.ip6Fl : undefined;
            resourceInputs["ipver"] = state ? state.ipver : undefined;
            resourceInputs["l4Wd10"] = state ? state.l4Wd10 : undefined;
            resourceInputs["l4Wd11"] = state ? state.l4Wd11 : undefined;
            resourceInputs["l4Wd8"] = state ? state.l4Wd8 : undefined;
            resourceInputs["l4Wd9"] = state ? state.l4Wd9 : undefined;
            resourceInputs["mf"] = state ? state.mf : undefined;
            resourceInputs["npuTcam"] = state ? state.npuTcam : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["slink"] = state ? state.slink : undefined;
            resourceInputs["smacChange"] = state ? state.smacChange : undefined;
            resourceInputs["sp"] = state ? state.sp : undefined;
            resourceInputs["srcCfi"] = state ? state.srcCfi : undefined;
            resourceInputs["srcPrio"] = state ? state.srcPrio : undefined;
            resourceInputs["srcUpdt"] = state ? state.srcUpdt : undefined;
            resourceInputs["srcip"] = state ? state.srcip : undefined;
            resourceInputs["srcipv6"] = state ? state.srcipv6 : undefined;
            resourceInputs["srcmac"] = state ? state.srcmac : undefined;
            resourceInputs["srcport"] = state ? state.srcport : undefined;
            resourceInputs["svid"] = state ? state.svid : undefined;
            resourceInputs["tcpAck"] = state ? state.tcpAck : undefined;
            resourceInputs["tcpCwr"] = state ? state.tcpCwr : undefined;
            resourceInputs["tcpEce"] = state ? state.tcpEce : undefined;
            resourceInputs["tcpFin"] = state ? state.tcpFin : undefined;
            resourceInputs["tcpPush"] = state ? state.tcpPush : undefined;
            resourceInputs["tcpRst"] = state ? state.tcpRst : undefined;
            resourceInputs["tcpSyn"] = state ? state.tcpSyn : undefined;
            resourceInputs["tcpUrg"] = state ? state.tcpUrg : undefined;
            resourceInputs["tgtCfi"] = state ? state.tgtCfi : undefined;
            resourceInputs["tgtPrio"] = state ? state.tgtPrio : undefined;
            resourceInputs["tgtUpdt"] = state ? state.tgtUpdt : undefined;
            resourceInputs["tgtV"] = state ? state.tgtV : undefined;
            resourceInputs["tos"] = state ? state.tos : undefined;
            resourceInputs["tp"] = state ? state.tp : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["tvid"] = state ? state.tvid : undefined;
            resourceInputs["vdid"] = state ? state.vdid : undefined;
        } else {
            const args = argsOrState as ObjectSystemNpuNputcamMaskArgs | undefined;
            if ((!args || args.npuTcam === undefined) && !opts.urn) {
                throw new Error("Missing required property 'npuTcam'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["df"] = args ? args.df : undefined;
            resourceInputs["dstip"] = args ? args.dstip : undefined;
            resourceInputs["dstipv6"] = args ? args.dstipv6 : undefined;
            resourceInputs["dstmac"] = args ? args.dstmac : undefined;
            resourceInputs["dstport"] = args ? args.dstport : undefined;
            resourceInputs["ethertype"] = args ? args.ethertype : undefined;
            resourceInputs["extTag"] = args ? args.extTag : undefined;
            resourceInputs["fragOff"] = args ? args.fragOff : undefined;
            resourceInputs["genBufCnt"] = args ? args.genBufCnt : undefined;
            resourceInputs["genIv"] = args ? args.genIv : undefined;
            resourceInputs["genL3Flags"] = args ? args.genL3Flags : undefined;
            resourceInputs["genL4Flags"] = args ? args.genL4Flags : undefined;
            resourceInputs["genPktCtrl"] = args ? args.genPktCtrl : undefined;
            resourceInputs["genPri"] = args ? args.genPri : undefined;
            resourceInputs["genPriV"] = args ? args.genPriV : undefined;
            resourceInputs["genTv"] = args ? args.genTv : undefined;
            resourceInputs["ihl"] = args ? args.ihl : undefined;
            resourceInputs["ip4Id"] = args ? args.ip4Id : undefined;
            resourceInputs["ip6Fl"] = args ? args.ip6Fl : undefined;
            resourceInputs["ipver"] = args ? args.ipver : undefined;
            resourceInputs["l4Wd10"] = args ? args.l4Wd10 : undefined;
            resourceInputs["l4Wd11"] = args ? args.l4Wd11 : undefined;
            resourceInputs["l4Wd8"] = args ? args.l4Wd8 : undefined;
            resourceInputs["l4Wd9"] = args ? args.l4Wd9 : undefined;
            resourceInputs["mf"] = args ? args.mf : undefined;
            resourceInputs["npuTcam"] = args ? args.npuTcam : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["slink"] = args ? args.slink : undefined;
            resourceInputs["smacChange"] = args ? args.smacChange : undefined;
            resourceInputs["sp"] = args ? args.sp : undefined;
            resourceInputs["srcCfi"] = args ? args.srcCfi : undefined;
            resourceInputs["srcPrio"] = args ? args.srcPrio : undefined;
            resourceInputs["srcUpdt"] = args ? args.srcUpdt : undefined;
            resourceInputs["srcip"] = args ? args.srcip : undefined;
            resourceInputs["srcipv6"] = args ? args.srcipv6 : undefined;
            resourceInputs["srcmac"] = args ? args.srcmac : undefined;
            resourceInputs["srcport"] = args ? args.srcport : undefined;
            resourceInputs["svid"] = args ? args.svid : undefined;
            resourceInputs["tcpAck"] = args ? args.tcpAck : undefined;
            resourceInputs["tcpCwr"] = args ? args.tcpCwr : undefined;
            resourceInputs["tcpEce"] = args ? args.tcpEce : undefined;
            resourceInputs["tcpFin"] = args ? args.tcpFin : undefined;
            resourceInputs["tcpPush"] = args ? args.tcpPush : undefined;
            resourceInputs["tcpRst"] = args ? args.tcpRst : undefined;
            resourceInputs["tcpSyn"] = args ? args.tcpSyn : undefined;
            resourceInputs["tcpUrg"] = args ? args.tcpUrg : undefined;
            resourceInputs["tgtCfi"] = args ? args.tgtCfi : undefined;
            resourceInputs["tgtPrio"] = args ? args.tgtPrio : undefined;
            resourceInputs["tgtUpdt"] = args ? args.tgtUpdt : undefined;
            resourceInputs["tgtV"] = args ? args.tgtV : undefined;
            resourceInputs["tos"] = args ? args.tos : undefined;
            resourceInputs["tp"] = args ? args.tp : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["tvid"] = args ? args.tvid : undefined;
            resourceInputs["vdid"] = args ? args.vdid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSystemNpuNputcamMask.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSystemNpuNputcamMask resources.
 */
export interface ObjectSystemNpuNputcamMaskState {
    adom?: pulumi.Input<string>;
    df?: pulumi.Input<string>;
    dstip?: pulumi.Input<string>;
    dstipv6?: pulumi.Input<string>;
    dstmac?: pulumi.Input<string>;
    dstport?: pulumi.Input<number>;
    ethertype?: pulumi.Input<string>;
    extTag?: pulumi.Input<string>;
    fragOff?: pulumi.Input<number>;
    genBufCnt?: pulumi.Input<number>;
    genIv?: pulumi.Input<string>;
    genL3Flags?: pulumi.Input<number>;
    genL4Flags?: pulumi.Input<number>;
    genPktCtrl?: pulumi.Input<number>;
    genPri?: pulumi.Input<number>;
    genPriV?: pulumi.Input<string>;
    genTv?: pulumi.Input<string>;
    ihl?: pulumi.Input<number>;
    ip4Id?: pulumi.Input<number>;
    ip6Fl?: pulumi.Input<number>;
    ipver?: pulumi.Input<number>;
    l4Wd10?: pulumi.Input<number>;
    l4Wd11?: pulumi.Input<number>;
    l4Wd8?: pulumi.Input<number>;
    l4Wd9?: pulumi.Input<number>;
    mf?: pulumi.Input<string>;
    npuTcam?: pulumi.Input<string>;
    protocol?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    slink?: pulumi.Input<number>;
    smacChange?: pulumi.Input<string>;
    sp?: pulumi.Input<number>;
    srcCfi?: pulumi.Input<string>;
    srcPrio?: pulumi.Input<number>;
    srcUpdt?: pulumi.Input<string>;
    srcip?: pulumi.Input<string>;
    srcipv6?: pulumi.Input<string>;
    srcmac?: pulumi.Input<string>;
    srcport?: pulumi.Input<number>;
    svid?: pulumi.Input<number>;
    tcpAck?: pulumi.Input<string>;
    tcpCwr?: pulumi.Input<string>;
    tcpEce?: pulumi.Input<string>;
    tcpFin?: pulumi.Input<string>;
    tcpPush?: pulumi.Input<string>;
    tcpRst?: pulumi.Input<string>;
    tcpSyn?: pulumi.Input<string>;
    tcpUrg?: pulumi.Input<string>;
    tgtCfi?: pulumi.Input<string>;
    tgtPrio?: pulumi.Input<number>;
    tgtUpdt?: pulumi.Input<string>;
    tgtV?: pulumi.Input<string>;
    tos?: pulumi.Input<number>;
    tp?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
    tvid?: pulumi.Input<number>;
    vdid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ObjectSystemNpuNputcamMask resource.
 */
export interface ObjectSystemNpuNputcamMaskArgs {
    adom?: pulumi.Input<string>;
    df?: pulumi.Input<string>;
    dstip?: pulumi.Input<string>;
    dstipv6?: pulumi.Input<string>;
    dstmac?: pulumi.Input<string>;
    dstport?: pulumi.Input<number>;
    ethertype?: pulumi.Input<string>;
    extTag?: pulumi.Input<string>;
    fragOff?: pulumi.Input<number>;
    genBufCnt?: pulumi.Input<number>;
    genIv?: pulumi.Input<string>;
    genL3Flags?: pulumi.Input<number>;
    genL4Flags?: pulumi.Input<number>;
    genPktCtrl?: pulumi.Input<number>;
    genPri?: pulumi.Input<number>;
    genPriV?: pulumi.Input<string>;
    genTv?: pulumi.Input<string>;
    ihl?: pulumi.Input<number>;
    ip4Id?: pulumi.Input<number>;
    ip6Fl?: pulumi.Input<number>;
    ipver?: pulumi.Input<number>;
    l4Wd10?: pulumi.Input<number>;
    l4Wd11?: pulumi.Input<number>;
    l4Wd8?: pulumi.Input<number>;
    l4Wd9?: pulumi.Input<number>;
    mf?: pulumi.Input<string>;
    npuTcam: pulumi.Input<string>;
    protocol?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    slink?: pulumi.Input<number>;
    smacChange?: pulumi.Input<string>;
    sp?: pulumi.Input<number>;
    srcCfi?: pulumi.Input<string>;
    srcPrio?: pulumi.Input<number>;
    srcUpdt?: pulumi.Input<string>;
    srcip?: pulumi.Input<string>;
    srcipv6?: pulumi.Input<string>;
    srcmac?: pulumi.Input<string>;
    srcport?: pulumi.Input<number>;
    svid?: pulumi.Input<number>;
    tcpAck?: pulumi.Input<string>;
    tcpCwr?: pulumi.Input<string>;
    tcpEce?: pulumi.Input<string>;
    tcpFin?: pulumi.Input<string>;
    tcpPush?: pulumi.Input<string>;
    tcpRst?: pulumi.Input<string>;
    tcpSyn?: pulumi.Input<string>;
    tcpUrg?: pulumi.Input<string>;
    tgtCfi?: pulumi.Input<string>;
    tgtPrio?: pulumi.Input<number>;
    tgtUpdt?: pulumi.Input<string>;
    tgtV?: pulumi.Input<string>;
    tos?: pulumi.Input<number>;
    tp?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
    tvid?: pulumi.Input<number>;
    vdid?: pulumi.Input<number>;
}
