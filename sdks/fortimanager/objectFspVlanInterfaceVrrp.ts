// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectFspVlanInterfaceVrrp extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFspVlanInterfaceVrrp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFspVlanInterfaceVrrpState, opts?: pulumi.CustomResourceOptions): ObjectFspVlanInterfaceVrrp {
        return new ObjectFspVlanInterfaceVrrp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFspVlanInterfaceVrrp:ObjectFspVlanInterfaceVrrp';

    /**
     * Returns true if the given object is an instance of ObjectFspVlanInterfaceVrrp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFspVlanInterfaceVrrp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFspVlanInterfaceVrrp.__pulumiType;
    }

    public readonly acceptMode!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly advInterval!: pulumi.Output<number>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly ignoreDefaultRoute!: pulumi.Output<string>;
    public readonly preempt!: pulumi.Output<string>;
    public readonly priority!: pulumi.Output<number>;
    public readonly proxyArps!: pulumi.Output<outputs.ObjectFspVlanInterfaceVrrpProxyArp[] | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly startTime!: pulumi.Output<number>;
    public readonly status!: pulumi.Output<string>;
    public readonly version!: pulumi.Output<string>;
    public readonly vlan!: pulumi.Output<string>;
    public readonly vrdstPriority!: pulumi.Output<number | undefined>;
    public readonly vrdsts!: pulumi.Output<string[]>;
    public readonly vrgrp!: pulumi.Output<number | undefined>;
    public readonly vrid!: pulumi.Output<number | undefined>;
    public readonly vrip!: pulumi.Output<string>;

    /**
     * Create a ObjectFspVlanInterfaceVrrp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectFspVlanInterfaceVrrpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFspVlanInterfaceVrrpArgs | ObjectFspVlanInterfaceVrrpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFspVlanInterfaceVrrpState | undefined;
            resourceInputs["acceptMode"] = state ? state.acceptMode : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["advInterval"] = state ? state.advInterval : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ignoreDefaultRoute"] = state ? state.ignoreDefaultRoute : undefined;
            resourceInputs["preempt"] = state ? state.preempt : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["proxyArps"] = state ? state.proxyArps : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
            resourceInputs["vrdstPriority"] = state ? state.vrdstPriority : undefined;
            resourceInputs["vrdsts"] = state ? state.vrdsts : undefined;
            resourceInputs["vrgrp"] = state ? state.vrgrp : undefined;
            resourceInputs["vrid"] = state ? state.vrid : undefined;
            resourceInputs["vrip"] = state ? state.vrip : undefined;
        } else {
            const args = argsOrState as ObjectFspVlanInterfaceVrrpArgs | undefined;
            if ((!args || args.vlan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlan'");
            }
            resourceInputs["acceptMode"] = args ? args.acceptMode : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["advInterval"] = args ? args.advInterval : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ignoreDefaultRoute"] = args ? args.ignoreDefaultRoute : undefined;
            resourceInputs["preempt"] = args ? args.preempt : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["proxyArps"] = args ? args.proxyArps : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
            resourceInputs["vrdstPriority"] = args ? args.vrdstPriority : undefined;
            resourceInputs["vrdsts"] = args ? args.vrdsts : undefined;
            resourceInputs["vrgrp"] = args ? args.vrgrp : undefined;
            resourceInputs["vrid"] = args ? args.vrid : undefined;
            resourceInputs["vrip"] = args ? args.vrip : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFspVlanInterfaceVrrp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFspVlanInterfaceVrrp resources.
 */
export interface ObjectFspVlanInterfaceVrrpState {
    acceptMode?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    advInterval?: pulumi.Input<number>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ignoreDefaultRoute?: pulumi.Input<string>;
    preempt?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    proxyArps?: pulumi.Input<pulumi.Input<inputs.ObjectFspVlanInterfaceVrrpProxyArp>[]>;
    scopetype?: pulumi.Input<string>;
    startTime?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    vlan?: pulumi.Input<string>;
    vrdstPriority?: pulumi.Input<number>;
    vrdsts?: pulumi.Input<pulumi.Input<string>[]>;
    vrgrp?: pulumi.Input<number>;
    vrid?: pulumi.Input<number>;
    vrip?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFspVlanInterfaceVrrp resource.
 */
export interface ObjectFspVlanInterfaceVrrpArgs {
    acceptMode?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    advInterval?: pulumi.Input<number>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ignoreDefaultRoute?: pulumi.Input<string>;
    preempt?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    proxyArps?: pulumi.Input<pulumi.Input<inputs.ObjectFspVlanInterfaceVrrpProxyArp>[]>;
    scopetype?: pulumi.Input<string>;
    startTime?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    vlan: pulumi.Input<string>;
    vrdstPriority?: pulumi.Input<number>;
    vrdsts?: pulumi.Input<pulumi.Input<string>[]>;
    vrgrp?: pulumi.Input<number>;
    vrid?: pulumi.Input<number>;
    vrip?: pulumi.Input<string>;
}
