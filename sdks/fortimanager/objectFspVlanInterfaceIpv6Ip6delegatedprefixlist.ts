// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistState, opts?: pulumi.CustomResourceOptions): ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist {
        return new ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFspVlanInterfaceIpv6Ip6delegatedprefixlist:ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist';

    /**
     * Returns true if the given object is an instance of ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly autonomousFlag!: pulumi.Output<string | undefined>;
    public readonly delegatedPrefixIaid!: pulumi.Output<number | undefined>;
    public readonly onlinkFlag!: pulumi.Output<string | undefined>;
    public readonly prefixId!: pulumi.Output<number | undefined>;
    public readonly rdnssService!: pulumi.Output<string | undefined>;
    public readonly rdnsses!: pulumi.Output<string[]>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly subnet!: pulumi.Output<string | undefined>;
    public readonly upstreamInterface!: pulumi.Output<string | undefined>;
    public readonly vlan!: pulumi.Output<string>;

    /**
     * Create a ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistArgs | ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["autonomousFlag"] = state ? state.autonomousFlag : undefined;
            resourceInputs["delegatedPrefixIaid"] = state ? state.delegatedPrefixIaid : undefined;
            resourceInputs["onlinkFlag"] = state ? state.onlinkFlag : undefined;
            resourceInputs["prefixId"] = state ? state.prefixId : undefined;
            resourceInputs["rdnssService"] = state ? state.rdnssService : undefined;
            resourceInputs["rdnsses"] = state ? state.rdnsses : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["upstreamInterface"] = state ? state.upstreamInterface : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistArgs | undefined;
            if ((!args || args.vlan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlan'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["autonomousFlag"] = args ? args.autonomousFlag : undefined;
            resourceInputs["delegatedPrefixIaid"] = args ? args.delegatedPrefixIaid : undefined;
            resourceInputs["onlinkFlag"] = args ? args.onlinkFlag : undefined;
            resourceInputs["prefixId"] = args ? args.prefixId : undefined;
            resourceInputs["rdnssService"] = args ? args.rdnssService : undefined;
            resourceInputs["rdnsses"] = args ? args.rdnsses : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["upstreamInterface"] = args ? args.upstreamInterface : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist resources.
 */
export interface ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistState {
    adom?: pulumi.Input<string>;
    autonomousFlag?: pulumi.Input<string>;
    delegatedPrefixIaid?: pulumi.Input<number>;
    onlinkFlag?: pulumi.Input<string>;
    prefixId?: pulumi.Input<number>;
    rdnssService?: pulumi.Input<string>;
    rdnsses?: pulumi.Input<pulumi.Input<string>[]>;
    scopetype?: pulumi.Input<string>;
    subnet?: pulumi.Input<string>;
    upstreamInterface?: pulumi.Input<string>;
    vlan?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlist resource.
 */
export interface ObjectFspVlanInterfaceIpv6Ip6delegatedprefixlistArgs {
    adom?: pulumi.Input<string>;
    autonomousFlag?: pulumi.Input<string>;
    delegatedPrefixIaid?: pulumi.Input<number>;
    onlinkFlag?: pulumi.Input<string>;
    prefixId?: pulumi.Input<number>;
    rdnssService?: pulumi.Input<string>;
    rdnsses?: pulumi.Input<pulumi.Input<string>[]>;
    scopetype?: pulumi.Input<string>;
    subnet?: pulumi.Input<string>;
    upstreamInterface?: pulumi.Input<string>;
    vlan: pulumi.Input<string>;
}
