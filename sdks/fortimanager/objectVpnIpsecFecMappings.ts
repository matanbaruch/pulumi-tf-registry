// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectVpnIpsecFecMappings extends pulumi.CustomResource {
    /**
     * Get an existing ObjectVpnIpsecFecMappings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectVpnIpsecFecMappingsState, opts?: pulumi.CustomResourceOptions): ObjectVpnIpsecFecMappings {
        return new ObjectVpnIpsecFecMappings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectVpnIpsecFecMappings:ObjectVpnIpsecFecMappings';

    /**
     * Returns true if the given object is an instance of ObjectVpnIpsecFecMappings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectVpnIpsecFecMappings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectVpnIpsecFecMappings.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly bandwidthBiThreshold!: pulumi.Output<number | undefined>;
    public readonly bandwidthDownThreshold!: pulumi.Output<number | undefined>;
    public readonly bandwidthUpThreshold!: pulumi.Output<number | undefined>;
    public readonly base!: pulumi.Output<number | undefined>;
    public readonly fec!: pulumi.Output<string>;
    public readonly latencyThreshold!: pulumi.Output<number | undefined>;
    public readonly packetLossThreshold!: pulumi.Output<number | undefined>;
    public readonly redundant!: pulumi.Output<number | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly seqno!: pulumi.Output<number>;

    /**
     * Create a ObjectVpnIpsecFecMappings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectVpnIpsecFecMappingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectVpnIpsecFecMappingsArgs | ObjectVpnIpsecFecMappingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectVpnIpsecFecMappingsState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["bandwidthBiThreshold"] = state ? state.bandwidthBiThreshold : undefined;
            resourceInputs["bandwidthDownThreshold"] = state ? state.bandwidthDownThreshold : undefined;
            resourceInputs["bandwidthUpThreshold"] = state ? state.bandwidthUpThreshold : undefined;
            resourceInputs["base"] = state ? state.base : undefined;
            resourceInputs["fec"] = state ? state.fec : undefined;
            resourceInputs["latencyThreshold"] = state ? state.latencyThreshold : undefined;
            resourceInputs["packetLossThreshold"] = state ? state.packetLossThreshold : undefined;
            resourceInputs["redundant"] = state ? state.redundant : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["seqno"] = state ? state.seqno : undefined;
        } else {
            const args = argsOrState as ObjectVpnIpsecFecMappingsArgs | undefined;
            if ((!args || args.fec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fec'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["bandwidthBiThreshold"] = args ? args.bandwidthBiThreshold : undefined;
            resourceInputs["bandwidthDownThreshold"] = args ? args.bandwidthDownThreshold : undefined;
            resourceInputs["bandwidthUpThreshold"] = args ? args.bandwidthUpThreshold : undefined;
            resourceInputs["base"] = args ? args.base : undefined;
            resourceInputs["fec"] = args ? args.fec : undefined;
            resourceInputs["latencyThreshold"] = args ? args.latencyThreshold : undefined;
            resourceInputs["packetLossThreshold"] = args ? args.packetLossThreshold : undefined;
            resourceInputs["redundant"] = args ? args.redundant : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["seqno"] = args ? args.seqno : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectVpnIpsecFecMappings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectVpnIpsecFecMappings resources.
 */
export interface ObjectVpnIpsecFecMappingsState {
    adom?: pulumi.Input<string>;
    bandwidthBiThreshold?: pulumi.Input<number>;
    bandwidthDownThreshold?: pulumi.Input<number>;
    bandwidthUpThreshold?: pulumi.Input<number>;
    base?: pulumi.Input<number>;
    fec?: pulumi.Input<string>;
    latencyThreshold?: pulumi.Input<number>;
    packetLossThreshold?: pulumi.Input<number>;
    redundant?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    seqno?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ObjectVpnIpsecFecMappings resource.
 */
export interface ObjectVpnIpsecFecMappingsArgs {
    adom?: pulumi.Input<string>;
    bandwidthBiThreshold?: pulumi.Input<number>;
    bandwidthDownThreshold?: pulumi.Input<number>;
    bandwidthUpThreshold?: pulumi.Input<number>;
    base?: pulumi.Input<number>;
    fec: pulumi.Input<string>;
    latencyThreshold?: pulumi.Input<number>;
    packetLossThreshold?: pulumi.Input<number>;
    redundant?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    seqno?: pulumi.Input<number>;
}
