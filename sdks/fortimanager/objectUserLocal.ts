// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectUserLocal extends pulumi.CustomResource {
    /**
     * Get an existing ObjectUserLocal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectUserLocalState, opts?: pulumi.CustomResourceOptions): ObjectUserLocal {
        return new ObjectUserLocal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectUserLocal:ObjectUserLocal';

    /**
     * Returns true if the given object is an instance of ObjectUserLocal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectUserLocal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectUserLocal.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly authConcurrentOverride!: pulumi.Output<string>;
    public readonly authConcurrentValue!: pulumi.Output<number | undefined>;
    public readonly authtimeout!: pulumi.Output<number | undefined>;
    public readonly emailTo!: pulumi.Output<string | undefined>;
    public readonly fortitoken!: pulumi.Output<string | undefined>;
    public readonly fosid!: pulumi.Output<number | undefined>;
    public readonly history0s!: pulumi.Output<string[]>;
    public readonly history1s!: pulumi.Output<string[]>;
    public readonly ldapServer!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly passwdPolicy!: pulumi.Output<string | undefined>;
    public readonly passwds!: pulumi.Output<string[]>;
    public readonly ppkIdentity!: pulumi.Output<string | undefined>;
    public readonly ppkSecrets!: pulumi.Output<string[]>;
    public readonly qkdProfile!: pulumi.Output<string | undefined>;
    public readonly radiusServer!: pulumi.Output<string | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly smsCustomServer!: pulumi.Output<string | undefined>;
    public readonly smsPhone!: pulumi.Output<string | undefined>;
    public readonly smsServer!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly tacacsServer!: pulumi.Output<string | undefined>;
    public readonly twoFactor!: pulumi.Output<string>;
    public readonly twoFactorAuthentication!: pulumi.Output<string | undefined>;
    public readonly twoFactorNotification!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly usernameCaseInsensitivity!: pulumi.Output<string>;
    public readonly usernameCaseSensitivity!: pulumi.Output<string>;
    public readonly usernameSensitivity!: pulumi.Output<string>;
    public readonly workstation!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectUserLocal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectUserLocalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectUserLocalArgs | ObjectUserLocalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectUserLocalState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["authConcurrentOverride"] = state ? state.authConcurrentOverride : undefined;
            resourceInputs["authConcurrentValue"] = state ? state.authConcurrentValue : undefined;
            resourceInputs["authtimeout"] = state ? state.authtimeout : undefined;
            resourceInputs["emailTo"] = state ? state.emailTo : undefined;
            resourceInputs["fortitoken"] = state ? state.fortitoken : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["history0s"] = state ? state.history0s : undefined;
            resourceInputs["history1s"] = state ? state.history1s : undefined;
            resourceInputs["ldapServer"] = state ? state.ldapServer : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwdPolicy"] = state ? state.passwdPolicy : undefined;
            resourceInputs["passwds"] = state ? state.passwds : undefined;
            resourceInputs["ppkIdentity"] = state ? state.ppkIdentity : undefined;
            resourceInputs["ppkSecrets"] = state ? state.ppkSecrets : undefined;
            resourceInputs["qkdProfile"] = state ? state.qkdProfile : undefined;
            resourceInputs["radiusServer"] = state ? state.radiusServer : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["smsCustomServer"] = state ? state.smsCustomServer : undefined;
            resourceInputs["smsPhone"] = state ? state.smsPhone : undefined;
            resourceInputs["smsServer"] = state ? state.smsServer : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tacacsServer"] = state ? state.tacacsServer : undefined;
            resourceInputs["twoFactor"] = state ? state.twoFactor : undefined;
            resourceInputs["twoFactorAuthentication"] = state ? state.twoFactorAuthentication : undefined;
            resourceInputs["twoFactorNotification"] = state ? state.twoFactorNotification : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usernameCaseInsensitivity"] = state ? state.usernameCaseInsensitivity : undefined;
            resourceInputs["usernameCaseSensitivity"] = state ? state.usernameCaseSensitivity : undefined;
            resourceInputs["usernameSensitivity"] = state ? state.usernameSensitivity : undefined;
            resourceInputs["workstation"] = state ? state.workstation : undefined;
        } else {
            const args = argsOrState as ObjectUserLocalArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["authConcurrentOverride"] = args ? args.authConcurrentOverride : undefined;
            resourceInputs["authConcurrentValue"] = args ? args.authConcurrentValue : undefined;
            resourceInputs["authtimeout"] = args ? args.authtimeout : undefined;
            resourceInputs["emailTo"] = args ? args.emailTo : undefined;
            resourceInputs["fortitoken"] = args ? args.fortitoken : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["history0s"] = args?.history0s ? pulumi.secret(args.history0s) : undefined;
            resourceInputs["history1s"] = args?.history1s ? pulumi.secret(args.history1s) : undefined;
            resourceInputs["ldapServer"] = args ? args.ldapServer : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwdPolicy"] = args ? args.passwdPolicy : undefined;
            resourceInputs["passwds"] = args?.passwds ? pulumi.secret(args.passwds) : undefined;
            resourceInputs["ppkIdentity"] = args ? args.ppkIdentity : undefined;
            resourceInputs["ppkSecrets"] = args?.ppkSecrets ? pulumi.secret(args.ppkSecrets) : undefined;
            resourceInputs["qkdProfile"] = args ? args.qkdProfile : undefined;
            resourceInputs["radiusServer"] = args ? args.radiusServer : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["smsCustomServer"] = args ? args.smsCustomServer : undefined;
            resourceInputs["smsPhone"] = args ? args.smsPhone : undefined;
            resourceInputs["smsServer"] = args ? args.smsServer : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tacacsServer"] = args ? args.tacacsServer : undefined;
            resourceInputs["twoFactor"] = args ? args.twoFactor : undefined;
            resourceInputs["twoFactorAuthentication"] = args ? args.twoFactorAuthentication : undefined;
            resourceInputs["twoFactorNotification"] = args ? args.twoFactorNotification : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["usernameCaseInsensitivity"] = args ? args.usernameCaseInsensitivity : undefined;
            resourceInputs["usernameCaseSensitivity"] = args ? args.usernameCaseSensitivity : undefined;
            resourceInputs["usernameSensitivity"] = args ? args.usernameSensitivity : undefined;
            resourceInputs["workstation"] = args ? args.workstation : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["history0s", "history1s", "passwds", "ppkSecrets"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ObjectUserLocal.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectUserLocal resources.
 */
export interface ObjectUserLocalState {
    adom?: pulumi.Input<string>;
    authConcurrentOverride?: pulumi.Input<string>;
    authConcurrentValue?: pulumi.Input<number>;
    authtimeout?: pulumi.Input<number>;
    emailTo?: pulumi.Input<string>;
    fortitoken?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    history0s?: pulumi.Input<pulumi.Input<string>[]>;
    history1s?: pulumi.Input<pulumi.Input<string>[]>;
    ldapServer?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwdPolicy?: pulumi.Input<string>;
    passwds?: pulumi.Input<pulumi.Input<string>[]>;
    ppkIdentity?: pulumi.Input<string>;
    ppkSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    qkdProfile?: pulumi.Input<string>;
    radiusServer?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    smsCustomServer?: pulumi.Input<string>;
    smsPhone?: pulumi.Input<string>;
    smsServer?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tacacsServer?: pulumi.Input<string>;
    twoFactor?: pulumi.Input<string>;
    twoFactorAuthentication?: pulumi.Input<string>;
    twoFactorNotification?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    usernameCaseInsensitivity?: pulumi.Input<string>;
    usernameCaseSensitivity?: pulumi.Input<string>;
    usernameSensitivity?: pulumi.Input<string>;
    workstation?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectUserLocal resource.
 */
export interface ObjectUserLocalArgs {
    adom?: pulumi.Input<string>;
    authConcurrentOverride?: pulumi.Input<string>;
    authConcurrentValue?: pulumi.Input<number>;
    authtimeout?: pulumi.Input<number>;
    emailTo?: pulumi.Input<string>;
    fortitoken?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    history0s?: pulumi.Input<pulumi.Input<string>[]>;
    history1s?: pulumi.Input<pulumi.Input<string>[]>;
    ldapServer?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwdPolicy?: pulumi.Input<string>;
    passwds?: pulumi.Input<pulumi.Input<string>[]>;
    ppkIdentity?: pulumi.Input<string>;
    ppkSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    qkdProfile?: pulumi.Input<string>;
    radiusServer?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    smsCustomServer?: pulumi.Input<string>;
    smsPhone?: pulumi.Input<string>;
    smsServer?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tacacsServer?: pulumi.Input<string>;
    twoFactor?: pulumi.Input<string>;
    twoFactorAuthentication?: pulumi.Input<string>;
    twoFactorNotification?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    usernameCaseInsensitivity?: pulumi.Input<string>;
    usernameCaseSensitivity?: pulumi.Input<string>;
    usernameSensitivity?: pulumi.Input<string>;
    workstation?: pulumi.Input<string>;
}
