// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectSystemNpuNputcamTact extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSystemNpuNputcamTact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSystemNpuNputcamTactState, opts?: pulumi.CustomResourceOptions): ObjectSystemNpuNputcamTact {
        return new ObjectSystemNpuNputcamTact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSystemNpuNputcamTact:ObjectSystemNpuNputcamTact';

    /**
     * Returns true if the given object is an instance of ObjectSystemNpuNputcamTact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSystemNpuNputcamTact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSystemNpuNputcamTact.__pulumiType;
    }

    public readonly act!: pulumi.Output<number | undefined>;
    public readonly actV!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly fmtuv4S!: pulumi.Output<number | undefined>;
    public readonly fmtuv4SV!: pulumi.Output<string>;
    public readonly fmtuv6S!: pulumi.Output<number | undefined>;
    public readonly fmtuv6SV!: pulumi.Output<string>;
    public readonly lnkid!: pulumi.Output<number | undefined>;
    public readonly lnkidV!: pulumi.Output<string>;
    public readonly macId!: pulumi.Output<number | undefined>;
    public readonly macIdV!: pulumi.Output<string>;
    public readonly mssT!: pulumi.Output<number | undefined>;
    public readonly mssTV!: pulumi.Output<string>;
    public readonly mtuv4!: pulumi.Output<number | undefined>;
    public readonly mtuv4V!: pulumi.Output<string>;
    public readonly mtuv6!: pulumi.Output<number | undefined>;
    public readonly mtuv6V!: pulumi.Output<string>;
    public readonly npuTcam!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly slifAct!: pulumi.Output<number | undefined>;
    public readonly slifActV!: pulumi.Output<string>;
    public readonly sublnkid!: pulumi.Output<number | undefined>;
    public readonly sublnkidV!: pulumi.Output<string>;
    public readonly tgtvAct!: pulumi.Output<number | undefined>;
    public readonly tgtvActV!: pulumi.Output<string>;
    public readonly tlifAct!: pulumi.Output<number | undefined>;
    public readonly tlifActV!: pulumi.Output<string>;
    public readonly tpeid!: pulumi.Output<number | undefined>;
    public readonly tpeidV!: pulumi.Output<string>;
    public readonly v6fe!: pulumi.Output<number | undefined>;
    public readonly v6feV!: pulumi.Output<string>;
    public readonly vepEn!: pulumi.Output<number | undefined>;
    public readonly vepEnV!: pulumi.Output<string>;
    public readonly vepSlid!: pulumi.Output<number | undefined>;
    public readonly vepSlidV!: pulumi.Output<string>;
    public readonly xltLif!: pulumi.Output<number | undefined>;
    public readonly xltLifV!: pulumi.Output<string>;
    public readonly xltVid!: pulumi.Output<number | undefined>;
    public readonly xltVidV!: pulumi.Output<string>;

    /**
     * Create a ObjectSystemNpuNputcamTact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectSystemNpuNputcamTactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSystemNpuNputcamTactArgs | ObjectSystemNpuNputcamTactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSystemNpuNputcamTactState | undefined;
            resourceInputs["act"] = state ? state.act : undefined;
            resourceInputs["actV"] = state ? state.actV : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["fmtuv4S"] = state ? state.fmtuv4S : undefined;
            resourceInputs["fmtuv4SV"] = state ? state.fmtuv4SV : undefined;
            resourceInputs["fmtuv6S"] = state ? state.fmtuv6S : undefined;
            resourceInputs["fmtuv6SV"] = state ? state.fmtuv6SV : undefined;
            resourceInputs["lnkid"] = state ? state.lnkid : undefined;
            resourceInputs["lnkidV"] = state ? state.lnkidV : undefined;
            resourceInputs["macId"] = state ? state.macId : undefined;
            resourceInputs["macIdV"] = state ? state.macIdV : undefined;
            resourceInputs["mssT"] = state ? state.mssT : undefined;
            resourceInputs["mssTV"] = state ? state.mssTV : undefined;
            resourceInputs["mtuv4"] = state ? state.mtuv4 : undefined;
            resourceInputs["mtuv4V"] = state ? state.mtuv4V : undefined;
            resourceInputs["mtuv6"] = state ? state.mtuv6 : undefined;
            resourceInputs["mtuv6V"] = state ? state.mtuv6V : undefined;
            resourceInputs["npuTcam"] = state ? state.npuTcam : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["slifAct"] = state ? state.slifAct : undefined;
            resourceInputs["slifActV"] = state ? state.slifActV : undefined;
            resourceInputs["sublnkid"] = state ? state.sublnkid : undefined;
            resourceInputs["sublnkidV"] = state ? state.sublnkidV : undefined;
            resourceInputs["tgtvAct"] = state ? state.tgtvAct : undefined;
            resourceInputs["tgtvActV"] = state ? state.tgtvActV : undefined;
            resourceInputs["tlifAct"] = state ? state.tlifAct : undefined;
            resourceInputs["tlifActV"] = state ? state.tlifActV : undefined;
            resourceInputs["tpeid"] = state ? state.tpeid : undefined;
            resourceInputs["tpeidV"] = state ? state.tpeidV : undefined;
            resourceInputs["v6fe"] = state ? state.v6fe : undefined;
            resourceInputs["v6feV"] = state ? state.v6feV : undefined;
            resourceInputs["vepEn"] = state ? state.vepEn : undefined;
            resourceInputs["vepEnV"] = state ? state.vepEnV : undefined;
            resourceInputs["vepSlid"] = state ? state.vepSlid : undefined;
            resourceInputs["vepSlidV"] = state ? state.vepSlidV : undefined;
            resourceInputs["xltLif"] = state ? state.xltLif : undefined;
            resourceInputs["xltLifV"] = state ? state.xltLifV : undefined;
            resourceInputs["xltVid"] = state ? state.xltVid : undefined;
            resourceInputs["xltVidV"] = state ? state.xltVidV : undefined;
        } else {
            const args = argsOrState as ObjectSystemNpuNputcamTactArgs | undefined;
            if ((!args || args.npuTcam === undefined) && !opts.urn) {
                throw new Error("Missing required property 'npuTcam'");
            }
            resourceInputs["act"] = args ? args.act : undefined;
            resourceInputs["actV"] = args ? args.actV : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["fmtuv4S"] = args ? args.fmtuv4S : undefined;
            resourceInputs["fmtuv4SV"] = args ? args.fmtuv4SV : undefined;
            resourceInputs["fmtuv6S"] = args ? args.fmtuv6S : undefined;
            resourceInputs["fmtuv6SV"] = args ? args.fmtuv6SV : undefined;
            resourceInputs["lnkid"] = args ? args.lnkid : undefined;
            resourceInputs["lnkidV"] = args ? args.lnkidV : undefined;
            resourceInputs["macId"] = args ? args.macId : undefined;
            resourceInputs["macIdV"] = args ? args.macIdV : undefined;
            resourceInputs["mssT"] = args ? args.mssT : undefined;
            resourceInputs["mssTV"] = args ? args.mssTV : undefined;
            resourceInputs["mtuv4"] = args ? args.mtuv4 : undefined;
            resourceInputs["mtuv4V"] = args ? args.mtuv4V : undefined;
            resourceInputs["mtuv6"] = args ? args.mtuv6 : undefined;
            resourceInputs["mtuv6V"] = args ? args.mtuv6V : undefined;
            resourceInputs["npuTcam"] = args ? args.npuTcam : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["slifAct"] = args ? args.slifAct : undefined;
            resourceInputs["slifActV"] = args ? args.slifActV : undefined;
            resourceInputs["sublnkid"] = args ? args.sublnkid : undefined;
            resourceInputs["sublnkidV"] = args ? args.sublnkidV : undefined;
            resourceInputs["tgtvAct"] = args ? args.tgtvAct : undefined;
            resourceInputs["tgtvActV"] = args ? args.tgtvActV : undefined;
            resourceInputs["tlifAct"] = args ? args.tlifAct : undefined;
            resourceInputs["tlifActV"] = args ? args.tlifActV : undefined;
            resourceInputs["tpeid"] = args ? args.tpeid : undefined;
            resourceInputs["tpeidV"] = args ? args.tpeidV : undefined;
            resourceInputs["v6fe"] = args ? args.v6fe : undefined;
            resourceInputs["v6feV"] = args ? args.v6feV : undefined;
            resourceInputs["vepEn"] = args ? args.vepEn : undefined;
            resourceInputs["vepEnV"] = args ? args.vepEnV : undefined;
            resourceInputs["vepSlid"] = args ? args.vepSlid : undefined;
            resourceInputs["vepSlidV"] = args ? args.vepSlidV : undefined;
            resourceInputs["xltLif"] = args ? args.xltLif : undefined;
            resourceInputs["xltLifV"] = args ? args.xltLifV : undefined;
            resourceInputs["xltVid"] = args ? args.xltVid : undefined;
            resourceInputs["xltVidV"] = args ? args.xltVidV : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSystemNpuNputcamTact.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSystemNpuNputcamTact resources.
 */
export interface ObjectSystemNpuNputcamTactState {
    act?: pulumi.Input<number>;
    actV?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    fmtuv4S?: pulumi.Input<number>;
    fmtuv4SV?: pulumi.Input<string>;
    fmtuv6S?: pulumi.Input<number>;
    fmtuv6SV?: pulumi.Input<string>;
    lnkid?: pulumi.Input<number>;
    lnkidV?: pulumi.Input<string>;
    macId?: pulumi.Input<number>;
    macIdV?: pulumi.Input<string>;
    mssT?: pulumi.Input<number>;
    mssTV?: pulumi.Input<string>;
    mtuv4?: pulumi.Input<number>;
    mtuv4V?: pulumi.Input<string>;
    mtuv6?: pulumi.Input<number>;
    mtuv6V?: pulumi.Input<string>;
    npuTcam?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    slifAct?: pulumi.Input<number>;
    slifActV?: pulumi.Input<string>;
    sublnkid?: pulumi.Input<number>;
    sublnkidV?: pulumi.Input<string>;
    tgtvAct?: pulumi.Input<number>;
    tgtvActV?: pulumi.Input<string>;
    tlifAct?: pulumi.Input<number>;
    tlifActV?: pulumi.Input<string>;
    tpeid?: pulumi.Input<number>;
    tpeidV?: pulumi.Input<string>;
    v6fe?: pulumi.Input<number>;
    v6feV?: pulumi.Input<string>;
    vepEn?: pulumi.Input<number>;
    vepEnV?: pulumi.Input<string>;
    vepSlid?: pulumi.Input<number>;
    vepSlidV?: pulumi.Input<string>;
    xltLif?: pulumi.Input<number>;
    xltLifV?: pulumi.Input<string>;
    xltVid?: pulumi.Input<number>;
    xltVidV?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectSystemNpuNputcamTact resource.
 */
export interface ObjectSystemNpuNputcamTactArgs {
    act?: pulumi.Input<number>;
    actV?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    fmtuv4S?: pulumi.Input<number>;
    fmtuv4SV?: pulumi.Input<string>;
    fmtuv6S?: pulumi.Input<number>;
    fmtuv6SV?: pulumi.Input<string>;
    lnkid?: pulumi.Input<number>;
    lnkidV?: pulumi.Input<string>;
    macId?: pulumi.Input<number>;
    macIdV?: pulumi.Input<string>;
    mssT?: pulumi.Input<number>;
    mssTV?: pulumi.Input<string>;
    mtuv4?: pulumi.Input<number>;
    mtuv4V?: pulumi.Input<string>;
    mtuv6?: pulumi.Input<number>;
    mtuv6V?: pulumi.Input<string>;
    npuTcam: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    slifAct?: pulumi.Input<number>;
    slifActV?: pulumi.Input<string>;
    sublnkid?: pulumi.Input<number>;
    sublnkidV?: pulumi.Input<string>;
    tgtvAct?: pulumi.Input<number>;
    tgtvActV?: pulumi.Input<string>;
    tlifAct?: pulumi.Input<number>;
    tlifActV?: pulumi.Input<string>;
    tpeid?: pulumi.Input<number>;
    tpeidV?: pulumi.Input<string>;
    v6fe?: pulumi.Input<number>;
    v6feV?: pulumi.Input<string>;
    vepEn?: pulumi.Input<number>;
    vepEnV?: pulumi.Input<string>;
    vepSlid?: pulumi.Input<number>;
    vepSlidV?: pulumi.Input<string>;
    xltLif?: pulumi.Input<number>;
    xltLifV?: pulumi.Input<string>;
    xltVid?: pulumi.Input<number>;
    xltVidV?: pulumi.Input<string>;
}
