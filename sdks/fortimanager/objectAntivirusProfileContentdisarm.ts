// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectAntivirusProfileContentdisarm extends pulumi.CustomResource {
    /**
     * Get an existing ObjectAntivirusProfileContentdisarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectAntivirusProfileContentdisarmState, opts?: pulumi.CustomResourceOptions): ObjectAntivirusProfileContentdisarm {
        return new ObjectAntivirusProfileContentdisarm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectAntivirusProfileContentdisarm:ObjectAntivirusProfileContentdisarm';

    /**
     * Returns true if the given object is an instance of ObjectAntivirusProfileContentdisarm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectAntivirusProfileContentdisarm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectAntivirusProfileContentdisarm.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly coverPage!: pulumi.Output<string>;
    public readonly detectOnly!: pulumi.Output<string>;
    public readonly errorAction!: pulumi.Output<string>;
    public readonly officeAction!: pulumi.Output<string>;
    public readonly officeDde!: pulumi.Output<string>;
    public readonly officeEmbed!: pulumi.Output<string>;
    public readonly officeHylink!: pulumi.Output<string>;
    public readonly officeLinked!: pulumi.Output<string>;
    public readonly officeMacro!: pulumi.Output<string>;
    public readonly originalFileDestination!: pulumi.Output<string>;
    public readonly pdfActForm!: pulumi.Output<string>;
    public readonly pdfActGotor!: pulumi.Output<string>;
    public readonly pdfActJava!: pulumi.Output<string>;
    public readonly pdfActLaunch!: pulumi.Output<string>;
    public readonly pdfActMovie!: pulumi.Output<string>;
    public readonly pdfActSound!: pulumi.Output<string>;
    public readonly pdfEmbedfile!: pulumi.Output<string>;
    public readonly pdfHyperlink!: pulumi.Output<string>;
    public readonly pdfJavacode!: pulumi.Output<string>;
    public readonly profile!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectAntivirusProfileContentdisarm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectAntivirusProfileContentdisarmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectAntivirusProfileContentdisarmArgs | ObjectAntivirusProfileContentdisarmState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectAntivirusProfileContentdisarmState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["coverPage"] = state ? state.coverPage : undefined;
            resourceInputs["detectOnly"] = state ? state.detectOnly : undefined;
            resourceInputs["errorAction"] = state ? state.errorAction : undefined;
            resourceInputs["officeAction"] = state ? state.officeAction : undefined;
            resourceInputs["officeDde"] = state ? state.officeDde : undefined;
            resourceInputs["officeEmbed"] = state ? state.officeEmbed : undefined;
            resourceInputs["officeHylink"] = state ? state.officeHylink : undefined;
            resourceInputs["officeLinked"] = state ? state.officeLinked : undefined;
            resourceInputs["officeMacro"] = state ? state.officeMacro : undefined;
            resourceInputs["originalFileDestination"] = state ? state.originalFileDestination : undefined;
            resourceInputs["pdfActForm"] = state ? state.pdfActForm : undefined;
            resourceInputs["pdfActGotor"] = state ? state.pdfActGotor : undefined;
            resourceInputs["pdfActJava"] = state ? state.pdfActJava : undefined;
            resourceInputs["pdfActLaunch"] = state ? state.pdfActLaunch : undefined;
            resourceInputs["pdfActMovie"] = state ? state.pdfActMovie : undefined;
            resourceInputs["pdfActSound"] = state ? state.pdfActSound : undefined;
            resourceInputs["pdfEmbedfile"] = state ? state.pdfEmbedfile : undefined;
            resourceInputs["pdfHyperlink"] = state ? state.pdfHyperlink : undefined;
            resourceInputs["pdfJavacode"] = state ? state.pdfJavacode : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
        } else {
            const args = argsOrState as ObjectAntivirusProfileContentdisarmArgs | undefined;
            if ((!args || args.profile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profile'");
            }
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["coverPage"] = args ? args.coverPage : undefined;
            resourceInputs["detectOnly"] = args ? args.detectOnly : undefined;
            resourceInputs["errorAction"] = args ? args.errorAction : undefined;
            resourceInputs["officeAction"] = args ? args.officeAction : undefined;
            resourceInputs["officeDde"] = args ? args.officeDde : undefined;
            resourceInputs["officeEmbed"] = args ? args.officeEmbed : undefined;
            resourceInputs["officeHylink"] = args ? args.officeHylink : undefined;
            resourceInputs["officeLinked"] = args ? args.officeLinked : undefined;
            resourceInputs["officeMacro"] = args ? args.officeMacro : undefined;
            resourceInputs["originalFileDestination"] = args ? args.originalFileDestination : undefined;
            resourceInputs["pdfActForm"] = args ? args.pdfActForm : undefined;
            resourceInputs["pdfActGotor"] = args ? args.pdfActGotor : undefined;
            resourceInputs["pdfActJava"] = args ? args.pdfActJava : undefined;
            resourceInputs["pdfActLaunch"] = args ? args.pdfActLaunch : undefined;
            resourceInputs["pdfActMovie"] = args ? args.pdfActMovie : undefined;
            resourceInputs["pdfActSound"] = args ? args.pdfActSound : undefined;
            resourceInputs["pdfEmbedfile"] = args ? args.pdfEmbedfile : undefined;
            resourceInputs["pdfHyperlink"] = args ? args.pdfHyperlink : undefined;
            resourceInputs["pdfJavacode"] = args ? args.pdfJavacode : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectAntivirusProfileContentdisarm.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectAntivirusProfileContentdisarm resources.
 */
export interface ObjectAntivirusProfileContentdisarmState {
    adom?: pulumi.Input<string>;
    coverPage?: pulumi.Input<string>;
    detectOnly?: pulumi.Input<string>;
    errorAction?: pulumi.Input<string>;
    officeAction?: pulumi.Input<string>;
    officeDde?: pulumi.Input<string>;
    officeEmbed?: pulumi.Input<string>;
    officeHylink?: pulumi.Input<string>;
    officeLinked?: pulumi.Input<string>;
    officeMacro?: pulumi.Input<string>;
    originalFileDestination?: pulumi.Input<string>;
    pdfActForm?: pulumi.Input<string>;
    pdfActGotor?: pulumi.Input<string>;
    pdfActJava?: pulumi.Input<string>;
    pdfActLaunch?: pulumi.Input<string>;
    pdfActMovie?: pulumi.Input<string>;
    pdfActSound?: pulumi.Input<string>;
    pdfEmbedfile?: pulumi.Input<string>;
    pdfHyperlink?: pulumi.Input<string>;
    pdfJavacode?: pulumi.Input<string>;
    profile?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectAntivirusProfileContentdisarm resource.
 */
export interface ObjectAntivirusProfileContentdisarmArgs {
    adom?: pulumi.Input<string>;
    coverPage?: pulumi.Input<string>;
    detectOnly?: pulumi.Input<string>;
    errorAction?: pulumi.Input<string>;
    officeAction?: pulumi.Input<string>;
    officeDde?: pulumi.Input<string>;
    officeEmbed?: pulumi.Input<string>;
    officeHylink?: pulumi.Input<string>;
    officeLinked?: pulumi.Input<string>;
    officeMacro?: pulumi.Input<string>;
    originalFileDestination?: pulumi.Input<string>;
    pdfActForm?: pulumi.Input<string>;
    pdfActGotor?: pulumi.Input<string>;
    pdfActJava?: pulumi.Input<string>;
    pdfActLaunch?: pulumi.Input<string>;
    pdfActMovie?: pulumi.Input<string>;
    pdfActSound?: pulumi.Input<string>;
    pdfEmbedfile?: pulumi.Input<string>;
    pdfHyperlink?: pulumi.Input<string>;
    pdfJavacode?: pulumi.Input<string>;
    profile: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
}
