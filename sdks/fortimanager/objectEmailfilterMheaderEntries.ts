// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectEmailfilterMheaderEntries extends pulumi.CustomResource {
    /**
     * Get an existing ObjectEmailfilterMheaderEntries resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectEmailfilterMheaderEntriesState, opts?: pulumi.CustomResourceOptions): ObjectEmailfilterMheaderEntries {
        return new ObjectEmailfilterMheaderEntries(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectEmailfilterMheaderEntries:ObjectEmailfilterMheaderEntries';

    /**
     * Returns true if the given object is an instance of ObjectEmailfilterMheaderEntries.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectEmailfilterMheaderEntries {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectEmailfilterMheaderEntries.__pulumiType;
    }

    public readonly action!: pulumi.Output<string | undefined>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly fieldbody!: pulumi.Output<string | undefined>;
    public readonly fieldname!: pulumi.Output<string | undefined>;
    public readonly fosid!: pulumi.Output<number | undefined>;
    public readonly mheader!: pulumi.Output<string>;
    public readonly patternType!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a ObjectEmailfilterMheaderEntries resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectEmailfilterMheaderEntriesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectEmailfilterMheaderEntriesArgs | ObjectEmailfilterMheaderEntriesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectEmailfilterMheaderEntriesState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["fieldbody"] = state ? state.fieldbody : undefined;
            resourceInputs["fieldname"] = state ? state.fieldname : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["mheader"] = state ? state.mheader : undefined;
            resourceInputs["patternType"] = state ? state.patternType : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ObjectEmailfilterMheaderEntriesArgs | undefined;
            if ((!args || args.mheader === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mheader'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["fieldbody"] = args ? args.fieldbody : undefined;
            resourceInputs["fieldname"] = args ? args.fieldname : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["mheader"] = args ? args.mheader : undefined;
            resourceInputs["patternType"] = args ? args.patternType : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectEmailfilterMheaderEntries.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectEmailfilterMheaderEntries resources.
 */
export interface ObjectEmailfilterMheaderEntriesState {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    fieldbody?: pulumi.Input<string>;
    fieldname?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    mheader?: pulumi.Input<string>;
    patternType?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectEmailfilterMheaderEntries resource.
 */
export interface ObjectEmailfilterMheaderEntriesArgs {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    fieldbody?: pulumi.Input<string>;
    fieldname?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    mheader: pulumi.Input<string>;
    patternType?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
