// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FmupdateService extends pulumi.CustomResource {
    /**
     * Get an existing FmupdateService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FmupdateServiceState, opts?: pulumi.CustomResourceOptions): FmupdateService {
        return new FmupdateService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/fmupdateService:FmupdateService';

    /**
     * Returns true if the given object is an instance of FmupdateService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FmupdateService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FmupdateService.__pulumiType;
    }

    public readonly avips!: pulumi.Output<string>;
    public readonly queryAntispam!: pulumi.Output<string>;
    public readonly queryAntivirus!: pulumi.Output<string>;
    public readonly queryFilequery!: pulumi.Output<string>;
    public readonly queryIot!: pulumi.Output<string>;
    public readonly queryIotCollection!: pulumi.Output<string>;
    public readonly queryIotVulnerability!: pulumi.Output<string>;
    public readonly queryOutbreakPrevention!: pulumi.Output<string>;
    public readonly queryWebfilter!: pulumi.Output<string>;
    public readonly webfilterHttpsTraversal!: pulumi.Output<string>;

    /**
     * Create a FmupdateService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FmupdateServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FmupdateServiceArgs | FmupdateServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FmupdateServiceState | undefined;
            resourceInputs["avips"] = state ? state.avips : undefined;
            resourceInputs["queryAntispam"] = state ? state.queryAntispam : undefined;
            resourceInputs["queryAntivirus"] = state ? state.queryAntivirus : undefined;
            resourceInputs["queryFilequery"] = state ? state.queryFilequery : undefined;
            resourceInputs["queryIot"] = state ? state.queryIot : undefined;
            resourceInputs["queryIotCollection"] = state ? state.queryIotCollection : undefined;
            resourceInputs["queryIotVulnerability"] = state ? state.queryIotVulnerability : undefined;
            resourceInputs["queryOutbreakPrevention"] = state ? state.queryOutbreakPrevention : undefined;
            resourceInputs["queryWebfilter"] = state ? state.queryWebfilter : undefined;
            resourceInputs["webfilterHttpsTraversal"] = state ? state.webfilterHttpsTraversal : undefined;
        } else {
            const args = argsOrState as FmupdateServiceArgs | undefined;
            resourceInputs["avips"] = args ? args.avips : undefined;
            resourceInputs["queryAntispam"] = args ? args.queryAntispam : undefined;
            resourceInputs["queryAntivirus"] = args ? args.queryAntivirus : undefined;
            resourceInputs["queryFilequery"] = args ? args.queryFilequery : undefined;
            resourceInputs["queryIot"] = args ? args.queryIot : undefined;
            resourceInputs["queryIotCollection"] = args ? args.queryIotCollection : undefined;
            resourceInputs["queryIotVulnerability"] = args ? args.queryIotVulnerability : undefined;
            resourceInputs["queryOutbreakPrevention"] = args ? args.queryOutbreakPrevention : undefined;
            resourceInputs["queryWebfilter"] = args ? args.queryWebfilter : undefined;
            resourceInputs["webfilterHttpsTraversal"] = args ? args.webfilterHttpsTraversal : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FmupdateService.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FmupdateService resources.
 */
export interface FmupdateServiceState {
    avips?: pulumi.Input<string>;
    queryAntispam?: pulumi.Input<string>;
    queryAntivirus?: pulumi.Input<string>;
    queryFilequery?: pulumi.Input<string>;
    queryIot?: pulumi.Input<string>;
    queryIotCollection?: pulumi.Input<string>;
    queryIotVulnerability?: pulumi.Input<string>;
    queryOutbreakPrevention?: pulumi.Input<string>;
    queryWebfilter?: pulumi.Input<string>;
    webfilterHttpsTraversal?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FmupdateService resource.
 */
export interface FmupdateServiceArgs {
    avips?: pulumi.Input<string>;
    queryAntispam?: pulumi.Input<string>;
    queryAntivirus?: pulumi.Input<string>;
    queryFilequery?: pulumi.Input<string>;
    queryIot?: pulumi.Input<string>;
    queryIotCollection?: pulumi.Input<string>;
    queryIotVulnerability?: pulumi.Input<string>;
    queryOutbreakPrevention?: pulumi.Input<string>;
    queryWebfilter?: pulumi.Input<string>;
    webfilterHttpsTraversal?: pulumi.Input<string>;
}
