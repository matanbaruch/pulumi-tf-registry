// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectIcapProfileRespmodforwardrules extends pulumi.CustomResource {
    /**
     * Get an existing ObjectIcapProfileRespmodforwardrules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectIcapProfileRespmodforwardrulesState, opts?: pulumi.CustomResourceOptions): ObjectIcapProfileRespmodforwardrules {
        return new ObjectIcapProfileRespmodforwardrules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectIcapProfileRespmodforwardrules:ObjectIcapProfileRespmodforwardrules';

    /**
     * Returns true if the given object is an instance of ObjectIcapProfileRespmodforwardrules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectIcapProfileRespmodforwardrules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectIcapProfileRespmodforwardrules.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly headerGroups!: pulumi.Output<outputs.ObjectIcapProfileRespmodforwardrulesHeaderGroup[] | undefined>;
    public readonly host!: pulumi.Output<string | undefined>;
    public readonly httpRespStatusCodes!: pulumi.Output<number[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly profile!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectIcapProfileRespmodforwardrules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectIcapProfileRespmodforwardrulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectIcapProfileRespmodforwardrulesArgs | ObjectIcapProfileRespmodforwardrulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectIcapProfileRespmodforwardrulesState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["headerGroups"] = state ? state.headerGroups : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["httpRespStatusCodes"] = state ? state.httpRespStatusCodes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
        } else {
            const args = argsOrState as ObjectIcapProfileRespmodforwardrulesArgs | undefined;
            if ((!args || args.profile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profile'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["headerGroups"] = args ? args.headerGroups : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["httpRespStatusCodes"] = args ? args.httpRespStatusCodes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectIcapProfileRespmodforwardrules.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectIcapProfileRespmodforwardrules resources.
 */
export interface ObjectIcapProfileRespmodforwardrulesState {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    headerGroups?: pulumi.Input<pulumi.Input<inputs.ObjectIcapProfileRespmodforwardrulesHeaderGroup>[]>;
    host?: pulumi.Input<string>;
    httpRespStatusCodes?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    profile?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectIcapProfileRespmodforwardrules resource.
 */
export interface ObjectIcapProfileRespmodforwardrulesArgs {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    headerGroups?: pulumi.Input<pulumi.Input<inputs.ObjectIcapProfileRespmodforwardrulesHeaderGroup>[]>;
    host?: pulumi.Input<string>;
    httpRespStatusCodes?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    profile: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
}
