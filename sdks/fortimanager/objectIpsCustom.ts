// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectIpsCustom extends pulumi.CustomResource {
    /**
     * Get an existing ObjectIpsCustom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectIpsCustomState, opts?: pulumi.CustomResourceOptions): ObjectIpsCustom {
        return new ObjectIpsCustom(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectIpsCustom:ObjectIpsCustom';

    /**
     * Returns true if the given object is an instance of ObjectIpsCustom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectIpsCustom {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectIpsCustom.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly applications!: pulumi.Output<string[]>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly locations!: pulumi.Output<string[]>;
    public readonly log!: pulumi.Output<string>;
    public readonly logPacket!: pulumi.Output<string>;
    public readonly os!: pulumi.Output<string[]>;
    public readonly protocol!: pulumi.Output<string | undefined>;
    public readonly ruleId!: pulumi.Output<number>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly severity!: pulumi.Output<string | undefined>;
    public readonly sigName!: pulumi.Output<string | undefined>;
    public readonly signature!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly tag!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectIpsCustom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectIpsCustomArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectIpsCustomArgs | ObjectIpsCustomState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectIpsCustomState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["locations"] = state ? state.locations : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["logPacket"] = state ? state.logPacket : undefined;
            resourceInputs["os"] = state ? state.os : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["sigName"] = state ? state.sigName : undefined;
            resourceInputs["signature"] = state ? state.signature : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
        } else {
            const args = argsOrState as ObjectIpsCustomArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["locations"] = args ? args.locations : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["logPacket"] = args ? args.logPacket : undefined;
            resourceInputs["os"] = args ? args.os : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["ruleId"] = args ? args.ruleId : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["sigName"] = args ? args.sigName : undefined;
            resourceInputs["signature"] = args ? args.signature : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tag"] = args ? args.tag : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectIpsCustom.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectIpsCustom resources.
 */
export interface ObjectIpsCustomState {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    comment?: pulumi.Input<string>;
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    log?: pulumi.Input<string>;
    logPacket?: pulumi.Input<string>;
    os?: pulumi.Input<pulumi.Input<string>[]>;
    protocol?: pulumi.Input<string>;
    ruleId?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    sigName?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectIpsCustom resource.
 */
export interface ObjectIpsCustomArgs {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    comment?: pulumi.Input<string>;
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    log?: pulumi.Input<string>;
    logPacket?: pulumi.Input<string>;
    os?: pulumi.Input<pulumi.Input<string>[]>;
    protocol?: pulumi.Input<string>;
    ruleId?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    sigName?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}
