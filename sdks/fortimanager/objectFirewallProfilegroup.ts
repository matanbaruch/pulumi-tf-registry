// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectFirewallProfilegroup extends pulumi.CustomResource {
    /**
     * Get an existing ObjectFirewallProfilegroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectFirewallProfilegroupState, opts?: pulumi.CustomResourceOptions): ObjectFirewallProfilegroup {
        return new ObjectFirewallProfilegroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectFirewallProfilegroup:ObjectFirewallProfilegroup';

    /**
     * Returns true if the given object is an instance of ObjectFirewallProfilegroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectFirewallProfilegroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectFirewallProfilegroup.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly applicationList!: pulumi.Output<string | undefined>;
    public readonly avProfile!: pulumi.Output<string | undefined>;
    public readonly casbProfile!: pulumi.Output<string | undefined>;
    public readonly cifsProfile!: pulumi.Output<string | undefined>;
    public readonly diameterFilterProfile!: pulumi.Output<string | undefined>;
    public readonly dlpProfile!: pulumi.Output<string | undefined>;
    public readonly dlpSensor!: pulumi.Output<string | undefined>;
    public readonly dnsfilterProfile!: pulumi.Output<string | undefined>;
    public readonly emailfilterProfile!: pulumi.Output<string | undefined>;
    public readonly fileFilterProfile!: pulumi.Output<string | undefined>;
    public readonly icapProfile!: pulumi.Output<string | undefined>;
    public readonly ipsSensor!: pulumi.Output<string | undefined>;
    public readonly ipsVoipFilter!: pulumi.Output<string | undefined>;
    public readonly mmsProfile!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly profileProtocolOptions!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sctpFilterProfile!: pulumi.Output<string | undefined>;
    public readonly spamfilterProfile!: pulumi.Output<string | undefined>;
    public readonly sshFilterProfile!: pulumi.Output<string | undefined>;
    public readonly sslSshProfile!: pulumi.Output<string>;
    public readonly videofilterProfile!: pulumi.Output<string | undefined>;
    public readonly virtualPatchProfile!: pulumi.Output<string | undefined>;
    public readonly voipProfile!: pulumi.Output<string | undefined>;
    public readonly wafProfile!: pulumi.Output<string | undefined>;
    public readonly webfilterProfile!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectFirewallProfilegroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectFirewallProfilegroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectFirewallProfilegroupArgs | ObjectFirewallProfilegroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectFirewallProfilegroupState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["applicationList"] = state ? state.applicationList : undefined;
            resourceInputs["avProfile"] = state ? state.avProfile : undefined;
            resourceInputs["casbProfile"] = state ? state.casbProfile : undefined;
            resourceInputs["cifsProfile"] = state ? state.cifsProfile : undefined;
            resourceInputs["diameterFilterProfile"] = state ? state.diameterFilterProfile : undefined;
            resourceInputs["dlpProfile"] = state ? state.dlpProfile : undefined;
            resourceInputs["dlpSensor"] = state ? state.dlpSensor : undefined;
            resourceInputs["dnsfilterProfile"] = state ? state.dnsfilterProfile : undefined;
            resourceInputs["emailfilterProfile"] = state ? state.emailfilterProfile : undefined;
            resourceInputs["fileFilterProfile"] = state ? state.fileFilterProfile : undefined;
            resourceInputs["icapProfile"] = state ? state.icapProfile : undefined;
            resourceInputs["ipsSensor"] = state ? state.ipsSensor : undefined;
            resourceInputs["ipsVoipFilter"] = state ? state.ipsVoipFilter : undefined;
            resourceInputs["mmsProfile"] = state ? state.mmsProfile : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profileProtocolOptions"] = state ? state.profileProtocolOptions : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sctpFilterProfile"] = state ? state.sctpFilterProfile : undefined;
            resourceInputs["spamfilterProfile"] = state ? state.spamfilterProfile : undefined;
            resourceInputs["sshFilterProfile"] = state ? state.sshFilterProfile : undefined;
            resourceInputs["sslSshProfile"] = state ? state.sslSshProfile : undefined;
            resourceInputs["videofilterProfile"] = state ? state.videofilterProfile : undefined;
            resourceInputs["virtualPatchProfile"] = state ? state.virtualPatchProfile : undefined;
            resourceInputs["voipProfile"] = state ? state.voipProfile : undefined;
            resourceInputs["wafProfile"] = state ? state.wafProfile : undefined;
            resourceInputs["webfilterProfile"] = state ? state.webfilterProfile : undefined;
        } else {
            const args = argsOrState as ObjectFirewallProfilegroupArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["applicationList"] = args ? args.applicationList : undefined;
            resourceInputs["avProfile"] = args ? args.avProfile : undefined;
            resourceInputs["casbProfile"] = args ? args.casbProfile : undefined;
            resourceInputs["cifsProfile"] = args ? args.cifsProfile : undefined;
            resourceInputs["diameterFilterProfile"] = args ? args.diameterFilterProfile : undefined;
            resourceInputs["dlpProfile"] = args ? args.dlpProfile : undefined;
            resourceInputs["dlpSensor"] = args ? args.dlpSensor : undefined;
            resourceInputs["dnsfilterProfile"] = args ? args.dnsfilterProfile : undefined;
            resourceInputs["emailfilterProfile"] = args ? args.emailfilterProfile : undefined;
            resourceInputs["fileFilterProfile"] = args ? args.fileFilterProfile : undefined;
            resourceInputs["icapProfile"] = args ? args.icapProfile : undefined;
            resourceInputs["ipsSensor"] = args ? args.ipsSensor : undefined;
            resourceInputs["ipsVoipFilter"] = args ? args.ipsVoipFilter : undefined;
            resourceInputs["mmsProfile"] = args ? args.mmsProfile : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profileProtocolOptions"] = args ? args.profileProtocolOptions : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sctpFilterProfile"] = args ? args.sctpFilterProfile : undefined;
            resourceInputs["spamfilterProfile"] = args ? args.spamfilterProfile : undefined;
            resourceInputs["sshFilterProfile"] = args ? args.sshFilterProfile : undefined;
            resourceInputs["sslSshProfile"] = args ? args.sslSshProfile : undefined;
            resourceInputs["videofilterProfile"] = args ? args.videofilterProfile : undefined;
            resourceInputs["virtualPatchProfile"] = args ? args.virtualPatchProfile : undefined;
            resourceInputs["voipProfile"] = args ? args.voipProfile : undefined;
            resourceInputs["wafProfile"] = args ? args.wafProfile : undefined;
            resourceInputs["webfilterProfile"] = args ? args.webfilterProfile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectFirewallProfilegroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectFirewallProfilegroup resources.
 */
export interface ObjectFirewallProfilegroupState {
    adom?: pulumi.Input<string>;
    applicationList?: pulumi.Input<string>;
    avProfile?: pulumi.Input<string>;
    casbProfile?: pulumi.Input<string>;
    cifsProfile?: pulumi.Input<string>;
    diameterFilterProfile?: pulumi.Input<string>;
    dlpProfile?: pulumi.Input<string>;
    dlpSensor?: pulumi.Input<string>;
    dnsfilterProfile?: pulumi.Input<string>;
    emailfilterProfile?: pulumi.Input<string>;
    fileFilterProfile?: pulumi.Input<string>;
    icapProfile?: pulumi.Input<string>;
    ipsSensor?: pulumi.Input<string>;
    ipsVoipFilter?: pulumi.Input<string>;
    mmsProfile?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    profileProtocolOptions?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sctpFilterProfile?: pulumi.Input<string>;
    spamfilterProfile?: pulumi.Input<string>;
    sshFilterProfile?: pulumi.Input<string>;
    sslSshProfile?: pulumi.Input<string>;
    videofilterProfile?: pulumi.Input<string>;
    virtualPatchProfile?: pulumi.Input<string>;
    voipProfile?: pulumi.Input<string>;
    wafProfile?: pulumi.Input<string>;
    webfilterProfile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectFirewallProfilegroup resource.
 */
export interface ObjectFirewallProfilegroupArgs {
    adom?: pulumi.Input<string>;
    applicationList?: pulumi.Input<string>;
    avProfile?: pulumi.Input<string>;
    casbProfile?: pulumi.Input<string>;
    cifsProfile?: pulumi.Input<string>;
    diameterFilterProfile?: pulumi.Input<string>;
    dlpProfile?: pulumi.Input<string>;
    dlpSensor?: pulumi.Input<string>;
    dnsfilterProfile?: pulumi.Input<string>;
    emailfilterProfile?: pulumi.Input<string>;
    fileFilterProfile?: pulumi.Input<string>;
    icapProfile?: pulumi.Input<string>;
    ipsSensor?: pulumi.Input<string>;
    ipsVoipFilter?: pulumi.Input<string>;
    mmsProfile?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    profileProtocolOptions?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sctpFilterProfile?: pulumi.Input<string>;
    spamfilterProfile?: pulumi.Input<string>;
    sshFilterProfile?: pulumi.Input<string>;
    sslSshProfile?: pulumi.Input<string>;
    videofilterProfile?: pulumi.Input<string>;
    virtualPatchProfile?: pulumi.Input<string>;
    voipProfile?: pulumi.Input<string>;
    wafProfile?: pulumi.Input<string>;
    webfilterProfile?: pulumi.Input<string>;
}
