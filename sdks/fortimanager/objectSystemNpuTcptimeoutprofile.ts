// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ObjectSystemNpuTcptimeoutprofile extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSystemNpuTcptimeoutprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSystemNpuTcptimeoutprofileState, opts?: pulumi.CustomResourceOptions): ObjectSystemNpuTcptimeoutprofile {
        return new ObjectSystemNpuTcptimeoutprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSystemNpuTcptimeoutprofile:ObjectSystemNpuTcptimeoutprofile';

    /**
     * Returns true if the given object is an instance of ObjectSystemNpuTcptimeoutprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSystemNpuTcptimeoutprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSystemNpuTcptimeoutprofile.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly closeWait!: pulumi.Output<number | undefined>;
    public readonly finWait!: pulumi.Output<number | undefined>;
    public readonly fosid!: pulumi.Output<number | undefined>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly synSent!: pulumi.Output<number | undefined>;
    public readonly synWait!: pulumi.Output<number | undefined>;
    public readonly tcpIdle!: pulumi.Output<number | undefined>;
    public readonly timeWait!: pulumi.Output<number | undefined>;

    /**
     * Create a ObjectSystemNpuTcptimeoutprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSystemNpuTcptimeoutprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSystemNpuTcptimeoutprofileArgs | ObjectSystemNpuTcptimeoutprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSystemNpuTcptimeoutprofileState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["closeWait"] = state ? state.closeWait : undefined;
            resourceInputs["finWait"] = state ? state.finWait : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["synSent"] = state ? state.synSent : undefined;
            resourceInputs["synWait"] = state ? state.synWait : undefined;
            resourceInputs["tcpIdle"] = state ? state.tcpIdle : undefined;
            resourceInputs["timeWait"] = state ? state.timeWait : undefined;
        } else {
            const args = argsOrState as ObjectSystemNpuTcptimeoutprofileArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["closeWait"] = args ? args.closeWait : undefined;
            resourceInputs["finWait"] = args ? args.finWait : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["synSent"] = args ? args.synSent : undefined;
            resourceInputs["synWait"] = args ? args.synWait : undefined;
            resourceInputs["tcpIdle"] = args ? args.tcpIdle : undefined;
            resourceInputs["timeWait"] = args ? args.timeWait : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSystemNpuTcptimeoutprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSystemNpuTcptimeoutprofile resources.
 */
export interface ObjectSystemNpuTcptimeoutprofileState {
    adom?: pulumi.Input<string>;
    closeWait?: pulumi.Input<number>;
    finWait?: pulumi.Input<number>;
    fosid?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    synSent?: pulumi.Input<number>;
    synWait?: pulumi.Input<number>;
    tcpIdle?: pulumi.Input<number>;
    timeWait?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ObjectSystemNpuTcptimeoutprofile resource.
 */
export interface ObjectSystemNpuTcptimeoutprofileArgs {
    adom?: pulumi.Input<string>;
    closeWait?: pulumi.Input<number>;
    finWait?: pulumi.Input<number>;
    fosid?: pulumi.Input<number>;
    scopetype?: pulumi.Input<string>;
    synSent?: pulumi.Input<number>;
    synWait?: pulumi.Input<number>;
    tcpIdle?: pulumi.Input<number>;
    timeWait?: pulumi.Input<number>;
}
