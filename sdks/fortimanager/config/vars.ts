// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("fortimanager");

export declare const adom: string | undefined;
Object.defineProperty(exports, "adom", {
    get() {
        return __config.get("adom");
    },
    enumerable: true,
});

/**
 * CA Bundle file
 */
export declare const cabundlefile: string | undefined;
Object.defineProperty(exports, "cabundlefile", {
    get() {
        return __config.get("cabundlefile");
    },
    enumerable: true,
});

export declare const cleanSession: boolean | undefined;
Object.defineProperty(exports, "cleanSession", {
    get() {
        return __config.getObject<boolean>("cleanSession");
    },
    enumerable: true,
});

export declare const fmgCloudToken: string | undefined;
Object.defineProperty(exports, "fmgCloudToken", {
    get() {
        return __config.get("fmgCloudToken");
    },
    enumerable: true,
});

export declare const fmgType: string | undefined;
Object.defineProperty(exports, "fmgType", {
    get() {
        return __config.get("fmgType");
    },
    enumerable: true,
});

/**
 * The hostname/IP address of the FORTIMANAGER to be connected
 */
export declare const hostname: string | undefined;
Object.defineProperty(exports, "hostname", {
    get() {
        return __config.get("hostname");
    },
    enumerable: true,
});

export declare const importOptions: string[] | undefined;
Object.defineProperty(exports, "importOptions", {
    get() {
        return __config.getObject<string[]>("importOptions");
    },
    enumerable: true,
});

export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

export declare const logsession: boolean | undefined;
Object.defineProperty(exports, "logsession", {
    get() {
        return __config.getObject<boolean>("logsession");
    },
    enumerable: true,
});

export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

export declare const presession: string | undefined;
Object.defineProperty(exports, "presession", {
    get() {
        return __config.get("presession");
    },
    enumerable: true,
});

export declare const scopetype: string | undefined;
Object.defineProperty(exports, "scopetype", {
    get() {
        return __config.get("scopetype");
    },
    enumerable: true,
});

export declare const token: string | undefined;
Object.defineProperty(exports, "token", {
    get() {
        return __config.get("token");
    },
    enumerable: true,
});

export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

