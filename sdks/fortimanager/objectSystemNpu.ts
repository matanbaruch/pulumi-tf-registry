// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectSystemNpu extends pulumi.CustomResource {
    /**
     * Get an existing ObjectSystemNpu resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectSystemNpuState, opts?: pulumi.CustomResourceOptions): ObjectSystemNpu {
        return new ObjectSystemNpu(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortimanager:index/objectSystemNpu:ObjectSystemNpu';

    /**
     * Returns true if the given object is an instance of ObjectSystemNpu.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectSystemNpu {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectSystemNpu.__pulumiType;
    }

    public readonly adom!: pulumi.Output<string | undefined>;
    public readonly backgroundSseScan!: pulumi.Output<outputs.ObjectSystemNpuBackgroundSseScan | undefined>;
    public readonly capwapOffload!: pulumi.Output<string>;
    public readonly dedicatedManagementAffinity!: pulumi.Output<string>;
    public readonly dedicatedManagementCpu!: pulumi.Output<string>;
    public readonly defaultQosType!: pulumi.Output<string>;
    public readonly defaultTcpRefreshDir!: pulumi.Output<string>;
    public readonly defaultUdpRefreshDir!: pulumi.Output<string>;
    public readonly dosOptions!: pulumi.Output<outputs.ObjectSystemNpuDosOptions | undefined>;
    public readonly doubleLevelMcastOffload!: pulumi.Output<string>;
    public readonly dseTimeout!: pulumi.Output<number | undefined>;
    public readonly dswDtsProfiles!: pulumi.Output<outputs.ObjectSystemNpuDswDtsProfile[] | undefined>;
    public readonly dswQueueDtsProfiles!: pulumi.Output<outputs.ObjectSystemNpuDswQueueDtsProfile[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly fastpath!: pulumi.Output<string>;
    public readonly fpAnomaly!: pulumi.Output<outputs.ObjectSystemNpuFpAnomaly | undefined>;
    public readonly gtpEnhancedCpuRange!: pulumi.Output<string>;
    public readonly gtpEnhancedMode!: pulumi.Output<string>;
    public readonly gtpSupport!: pulumi.Output<string>;
    public readonly hashConfig!: pulumi.Output<string | undefined>;
    public readonly hashIpv6Sel!: pulumi.Output<number | undefined>;
    public readonly hashTblSpread!: pulumi.Output<string>;
    public readonly hostShortcutMode!: pulumi.Output<string>;
    public readonly hpe!: pulumi.Output<outputs.ObjectSystemNpuHpe | undefined>;
    public readonly htabDediQueueNr!: pulumi.Output<number | undefined>;
    public readonly htabMsgQueue!: pulumi.Output<string>;
    public readonly htxGtseQuota!: pulumi.Output<string>;
    public readonly htxIcmpCsumChk!: pulumi.Output<string>;
    public readonly hwHaScanInterval!: pulumi.Output<number>;
    public readonly icmpRateCtrl!: pulumi.Output<outputs.ObjectSystemNpuIcmpRateCtrl | undefined>;
    public readonly inboundDscpCopy!: pulumi.Output<string | undefined>;
    public readonly inboundDscpCopyPorts!: pulumi.Output<string[]>;
    public readonly intfShapingOffload!: pulumi.Output<string>;
    public readonly ipFragmentOffload!: pulumi.Output<string>;
    public readonly ipReassembly!: pulumi.Output<outputs.ObjectSystemNpuIpReassembly | undefined>;
    public readonly iphRsvdReCksum!: pulumi.Output<string>;
    public readonly ippoolOverloadHigh!: pulumi.Output<number | undefined>;
    public readonly ippoolOverloadLow!: pulumi.Output<number | undefined>;
    public readonly ipsecDecSubengineMask!: pulumi.Output<string>;
    public readonly ipsecEncSubengineMask!: pulumi.Output<string>;
    public readonly ipsecHostDfclr!: pulumi.Output<string | undefined>;
    public readonly ipsecInboundCache!: pulumi.Output<string>;
    public readonly ipsecLocalUespPort!: pulumi.Output<number>;
    public readonly ipsecMtuOverride!: pulumi.Output<string>;
    public readonly ipsecObNpSel!: pulumi.Output<string>;
    public readonly ipsecOverVlink!: pulumi.Output<string>;
    public readonly ipsecStsTimeout!: pulumi.Output<string>;
    public readonly ipsecThroughputMsgFrequency!: pulumi.Output<string>;
    public readonly iptStsTimeout!: pulumi.Output<string>;
    public readonly iptThroughputMsgFrequency!: pulumi.Output<string>;
    public readonly isfNpQueues!: pulumi.Output<outputs.ObjectSystemNpuIsfNpQueues | undefined>;
    public readonly isfNpRxTrDistr!: pulumi.Output<string>;
    public readonly lagOutPortSelect!: pulumi.Output<string>;
    public readonly maxReceiveUnit!: pulumi.Output<number | undefined>;
    public readonly maxSessionTimeout!: pulumi.Output<number>;
    public readonly mcastSessionAccounting!: pulumi.Output<string>;
    public readonly mcastSessionCounting!: pulumi.Output<string | undefined>;
    public readonly mcastSessionCounting6!: pulumi.Output<string>;
    public readonly napiBreakInterval!: pulumi.Output<number | undefined>;
    public readonly nat46ForceIpv4PacketForwarding!: pulumi.Output<string | undefined>;
    public readonly np6CpsOptimizationMode!: pulumi.Output<string>;
    public readonly npQueues!: pulumi.Output<outputs.ObjectSystemNpuNpQueues | undefined>;
    public readonly npuGroupEffectiveScope!: pulumi.Output<number>;
    public readonly npuTcams!: pulumi.Output<outputs.ObjectSystemNpuNpuTcam[] | undefined>;
    public readonly nssThreadsOption!: pulumi.Output<string>;
    public readonly pbaEim!: pulumi.Output<string | undefined>;
    public readonly pbaPortSelectMode!: pulumi.Output<string>;
    public readonly perPolicyAccounting!: pulumi.Output<string>;
    public readonly perSessionAccounting!: pulumi.Output<string>;
    public readonly pleNonSynTcpAction!: pulumi.Output<string>;
    public readonly policyOffloadLevel!: pulumi.Output<string>;
    public readonly portCpuMaps!: pulumi.Output<outputs.ObjectSystemNpuPortCpuMap[] | undefined>;
    public readonly portNpuMaps!: pulumi.Output<outputs.ObjectSystemNpuPortNpuMap[] | undefined>;
    public readonly portPathOption!: pulumi.Output<outputs.ObjectSystemNpuPortPathOption | undefined>;
    public readonly priorityProtocol!: pulumi.Output<outputs.ObjectSystemNpuPriorityProtocol | undefined>;
    public readonly processIcmpByHost!: pulumi.Output<string | undefined>;
    public readonly prpPortIn!: pulumi.Output<string | undefined>;
    public readonly prpPortOut!: pulumi.Output<string | undefined>;
    public readonly prpSessionClearMode!: pulumi.Output<string>;
    public readonly qosMode!: pulumi.Output<string>;
    public readonly qtmBufMode!: pulumi.Output<string>;
    public readonly rdpOffload!: pulumi.Output<string>;
    public readonly recoverNp6Link!: pulumi.Output<string>;
    public readonly rpsMode!: pulumi.Output<string>;
    public readonly scopetype!: pulumi.Output<string | undefined>;
    public readonly sessionAcctInterval!: pulumi.Output<number>;
    public readonly sessionDeniedOffload!: pulumi.Output<string>;
    public readonly shapingStats!: pulumi.Output<string>;
    public readonly spaPortSelectMode!: pulumi.Output<string>;
    public readonly splitIpsecEngines!: pulumi.Output<string>;
    public readonly sseBackpressure!: pulumi.Output<string>;
    public readonly sseHaScan!: pulumi.Output<outputs.ObjectSystemNpuSseHaScan | undefined>;
    public readonly stripClearTextPadding!: pulumi.Output<string>;
    public readonly stripEspPadding!: pulumi.Output<string>;
    public readonly swEhHash!: pulumi.Output<outputs.ObjectSystemNpuSwEhHash | undefined>;
    public readonly swNpBandwidth!: pulumi.Output<string>;
    public readonly swTrHash!: pulumi.Output<outputs.ObjectSystemNpuSwTrHash | undefined>;
    public readonly switchNpHash!: pulumi.Output<string>;
    public readonly tcpRstTimeout!: pulumi.Output<number | undefined>;
    public readonly tcpTimeoutProfiles!: pulumi.Output<outputs.ObjectSystemNpuTcpTimeoutProfile[] | undefined>;
    public readonly tunnelOverVlink!: pulumi.Output<string>;
    public readonly udpTimeoutProfiles!: pulumi.Output<outputs.ObjectSystemNpuUdpTimeoutProfile[] | undefined>;
    public readonly uespOffload!: pulumi.Output<string>;
    public readonly ullPortMode!: pulumi.Output<string>;
    public readonly vlanLookupCache!: pulumi.Output<string>;
    public readonly vxlanOffload!: pulumi.Output<string | undefined>;

    /**
     * Create a ObjectSystemNpu resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObjectSystemNpuArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectSystemNpuArgs | ObjectSystemNpuState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectSystemNpuState | undefined;
            resourceInputs["adom"] = state ? state.adom : undefined;
            resourceInputs["backgroundSseScan"] = state ? state.backgroundSseScan : undefined;
            resourceInputs["capwapOffload"] = state ? state.capwapOffload : undefined;
            resourceInputs["dedicatedManagementAffinity"] = state ? state.dedicatedManagementAffinity : undefined;
            resourceInputs["dedicatedManagementCpu"] = state ? state.dedicatedManagementCpu : undefined;
            resourceInputs["defaultQosType"] = state ? state.defaultQosType : undefined;
            resourceInputs["defaultTcpRefreshDir"] = state ? state.defaultTcpRefreshDir : undefined;
            resourceInputs["defaultUdpRefreshDir"] = state ? state.defaultUdpRefreshDir : undefined;
            resourceInputs["dosOptions"] = state ? state.dosOptions : undefined;
            resourceInputs["doubleLevelMcastOffload"] = state ? state.doubleLevelMcastOffload : undefined;
            resourceInputs["dseTimeout"] = state ? state.dseTimeout : undefined;
            resourceInputs["dswDtsProfiles"] = state ? state.dswDtsProfiles : undefined;
            resourceInputs["dswQueueDtsProfiles"] = state ? state.dswQueueDtsProfiles : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fastpath"] = state ? state.fastpath : undefined;
            resourceInputs["fpAnomaly"] = state ? state.fpAnomaly : undefined;
            resourceInputs["gtpEnhancedCpuRange"] = state ? state.gtpEnhancedCpuRange : undefined;
            resourceInputs["gtpEnhancedMode"] = state ? state.gtpEnhancedMode : undefined;
            resourceInputs["gtpSupport"] = state ? state.gtpSupport : undefined;
            resourceInputs["hashConfig"] = state ? state.hashConfig : undefined;
            resourceInputs["hashIpv6Sel"] = state ? state.hashIpv6Sel : undefined;
            resourceInputs["hashTblSpread"] = state ? state.hashTblSpread : undefined;
            resourceInputs["hostShortcutMode"] = state ? state.hostShortcutMode : undefined;
            resourceInputs["hpe"] = state ? state.hpe : undefined;
            resourceInputs["htabDediQueueNr"] = state ? state.htabDediQueueNr : undefined;
            resourceInputs["htabMsgQueue"] = state ? state.htabMsgQueue : undefined;
            resourceInputs["htxGtseQuota"] = state ? state.htxGtseQuota : undefined;
            resourceInputs["htxIcmpCsumChk"] = state ? state.htxIcmpCsumChk : undefined;
            resourceInputs["hwHaScanInterval"] = state ? state.hwHaScanInterval : undefined;
            resourceInputs["icmpRateCtrl"] = state ? state.icmpRateCtrl : undefined;
            resourceInputs["inboundDscpCopy"] = state ? state.inboundDscpCopy : undefined;
            resourceInputs["inboundDscpCopyPorts"] = state ? state.inboundDscpCopyPorts : undefined;
            resourceInputs["intfShapingOffload"] = state ? state.intfShapingOffload : undefined;
            resourceInputs["ipFragmentOffload"] = state ? state.ipFragmentOffload : undefined;
            resourceInputs["ipReassembly"] = state ? state.ipReassembly : undefined;
            resourceInputs["iphRsvdReCksum"] = state ? state.iphRsvdReCksum : undefined;
            resourceInputs["ippoolOverloadHigh"] = state ? state.ippoolOverloadHigh : undefined;
            resourceInputs["ippoolOverloadLow"] = state ? state.ippoolOverloadLow : undefined;
            resourceInputs["ipsecDecSubengineMask"] = state ? state.ipsecDecSubengineMask : undefined;
            resourceInputs["ipsecEncSubengineMask"] = state ? state.ipsecEncSubengineMask : undefined;
            resourceInputs["ipsecHostDfclr"] = state ? state.ipsecHostDfclr : undefined;
            resourceInputs["ipsecInboundCache"] = state ? state.ipsecInboundCache : undefined;
            resourceInputs["ipsecLocalUespPort"] = state ? state.ipsecLocalUespPort : undefined;
            resourceInputs["ipsecMtuOverride"] = state ? state.ipsecMtuOverride : undefined;
            resourceInputs["ipsecObNpSel"] = state ? state.ipsecObNpSel : undefined;
            resourceInputs["ipsecOverVlink"] = state ? state.ipsecOverVlink : undefined;
            resourceInputs["ipsecStsTimeout"] = state ? state.ipsecStsTimeout : undefined;
            resourceInputs["ipsecThroughputMsgFrequency"] = state ? state.ipsecThroughputMsgFrequency : undefined;
            resourceInputs["iptStsTimeout"] = state ? state.iptStsTimeout : undefined;
            resourceInputs["iptThroughputMsgFrequency"] = state ? state.iptThroughputMsgFrequency : undefined;
            resourceInputs["isfNpQueues"] = state ? state.isfNpQueues : undefined;
            resourceInputs["isfNpRxTrDistr"] = state ? state.isfNpRxTrDistr : undefined;
            resourceInputs["lagOutPortSelect"] = state ? state.lagOutPortSelect : undefined;
            resourceInputs["maxReceiveUnit"] = state ? state.maxReceiveUnit : undefined;
            resourceInputs["maxSessionTimeout"] = state ? state.maxSessionTimeout : undefined;
            resourceInputs["mcastSessionAccounting"] = state ? state.mcastSessionAccounting : undefined;
            resourceInputs["mcastSessionCounting"] = state ? state.mcastSessionCounting : undefined;
            resourceInputs["mcastSessionCounting6"] = state ? state.mcastSessionCounting6 : undefined;
            resourceInputs["napiBreakInterval"] = state ? state.napiBreakInterval : undefined;
            resourceInputs["nat46ForceIpv4PacketForwarding"] = state ? state.nat46ForceIpv4PacketForwarding : undefined;
            resourceInputs["np6CpsOptimizationMode"] = state ? state.np6CpsOptimizationMode : undefined;
            resourceInputs["npQueues"] = state ? state.npQueues : undefined;
            resourceInputs["npuGroupEffectiveScope"] = state ? state.npuGroupEffectiveScope : undefined;
            resourceInputs["npuTcams"] = state ? state.npuTcams : undefined;
            resourceInputs["nssThreadsOption"] = state ? state.nssThreadsOption : undefined;
            resourceInputs["pbaEim"] = state ? state.pbaEim : undefined;
            resourceInputs["pbaPortSelectMode"] = state ? state.pbaPortSelectMode : undefined;
            resourceInputs["perPolicyAccounting"] = state ? state.perPolicyAccounting : undefined;
            resourceInputs["perSessionAccounting"] = state ? state.perSessionAccounting : undefined;
            resourceInputs["pleNonSynTcpAction"] = state ? state.pleNonSynTcpAction : undefined;
            resourceInputs["policyOffloadLevel"] = state ? state.policyOffloadLevel : undefined;
            resourceInputs["portCpuMaps"] = state ? state.portCpuMaps : undefined;
            resourceInputs["portNpuMaps"] = state ? state.portNpuMaps : undefined;
            resourceInputs["portPathOption"] = state ? state.portPathOption : undefined;
            resourceInputs["priorityProtocol"] = state ? state.priorityProtocol : undefined;
            resourceInputs["processIcmpByHost"] = state ? state.processIcmpByHost : undefined;
            resourceInputs["prpPortIn"] = state ? state.prpPortIn : undefined;
            resourceInputs["prpPortOut"] = state ? state.prpPortOut : undefined;
            resourceInputs["prpSessionClearMode"] = state ? state.prpSessionClearMode : undefined;
            resourceInputs["qosMode"] = state ? state.qosMode : undefined;
            resourceInputs["qtmBufMode"] = state ? state.qtmBufMode : undefined;
            resourceInputs["rdpOffload"] = state ? state.rdpOffload : undefined;
            resourceInputs["recoverNp6Link"] = state ? state.recoverNp6Link : undefined;
            resourceInputs["rpsMode"] = state ? state.rpsMode : undefined;
            resourceInputs["scopetype"] = state ? state.scopetype : undefined;
            resourceInputs["sessionAcctInterval"] = state ? state.sessionAcctInterval : undefined;
            resourceInputs["sessionDeniedOffload"] = state ? state.sessionDeniedOffload : undefined;
            resourceInputs["shapingStats"] = state ? state.shapingStats : undefined;
            resourceInputs["spaPortSelectMode"] = state ? state.spaPortSelectMode : undefined;
            resourceInputs["splitIpsecEngines"] = state ? state.splitIpsecEngines : undefined;
            resourceInputs["sseBackpressure"] = state ? state.sseBackpressure : undefined;
            resourceInputs["sseHaScan"] = state ? state.sseHaScan : undefined;
            resourceInputs["stripClearTextPadding"] = state ? state.stripClearTextPadding : undefined;
            resourceInputs["stripEspPadding"] = state ? state.stripEspPadding : undefined;
            resourceInputs["swEhHash"] = state ? state.swEhHash : undefined;
            resourceInputs["swNpBandwidth"] = state ? state.swNpBandwidth : undefined;
            resourceInputs["swTrHash"] = state ? state.swTrHash : undefined;
            resourceInputs["switchNpHash"] = state ? state.switchNpHash : undefined;
            resourceInputs["tcpRstTimeout"] = state ? state.tcpRstTimeout : undefined;
            resourceInputs["tcpTimeoutProfiles"] = state ? state.tcpTimeoutProfiles : undefined;
            resourceInputs["tunnelOverVlink"] = state ? state.tunnelOverVlink : undefined;
            resourceInputs["udpTimeoutProfiles"] = state ? state.udpTimeoutProfiles : undefined;
            resourceInputs["uespOffload"] = state ? state.uespOffload : undefined;
            resourceInputs["ullPortMode"] = state ? state.ullPortMode : undefined;
            resourceInputs["vlanLookupCache"] = state ? state.vlanLookupCache : undefined;
            resourceInputs["vxlanOffload"] = state ? state.vxlanOffload : undefined;
        } else {
            const args = argsOrState as ObjectSystemNpuArgs | undefined;
            resourceInputs["adom"] = args ? args.adom : undefined;
            resourceInputs["backgroundSseScan"] = args ? args.backgroundSseScan : undefined;
            resourceInputs["capwapOffload"] = args ? args.capwapOffload : undefined;
            resourceInputs["dedicatedManagementAffinity"] = args ? args.dedicatedManagementAffinity : undefined;
            resourceInputs["dedicatedManagementCpu"] = args ? args.dedicatedManagementCpu : undefined;
            resourceInputs["defaultQosType"] = args ? args.defaultQosType : undefined;
            resourceInputs["defaultTcpRefreshDir"] = args ? args.defaultTcpRefreshDir : undefined;
            resourceInputs["defaultUdpRefreshDir"] = args ? args.defaultUdpRefreshDir : undefined;
            resourceInputs["dosOptions"] = args ? args.dosOptions : undefined;
            resourceInputs["doubleLevelMcastOffload"] = args ? args.doubleLevelMcastOffload : undefined;
            resourceInputs["dseTimeout"] = args ? args.dseTimeout : undefined;
            resourceInputs["dswDtsProfiles"] = args ? args.dswDtsProfiles : undefined;
            resourceInputs["dswQueueDtsProfiles"] = args ? args.dswQueueDtsProfiles : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fastpath"] = args ? args.fastpath : undefined;
            resourceInputs["fpAnomaly"] = args ? args.fpAnomaly : undefined;
            resourceInputs["gtpEnhancedCpuRange"] = args ? args.gtpEnhancedCpuRange : undefined;
            resourceInputs["gtpEnhancedMode"] = args ? args.gtpEnhancedMode : undefined;
            resourceInputs["gtpSupport"] = args ? args.gtpSupport : undefined;
            resourceInputs["hashConfig"] = args ? args.hashConfig : undefined;
            resourceInputs["hashIpv6Sel"] = args ? args.hashIpv6Sel : undefined;
            resourceInputs["hashTblSpread"] = args ? args.hashTblSpread : undefined;
            resourceInputs["hostShortcutMode"] = args ? args.hostShortcutMode : undefined;
            resourceInputs["hpe"] = args ? args.hpe : undefined;
            resourceInputs["htabDediQueueNr"] = args ? args.htabDediQueueNr : undefined;
            resourceInputs["htabMsgQueue"] = args ? args.htabMsgQueue : undefined;
            resourceInputs["htxGtseQuota"] = args ? args.htxGtseQuota : undefined;
            resourceInputs["htxIcmpCsumChk"] = args ? args.htxIcmpCsumChk : undefined;
            resourceInputs["hwHaScanInterval"] = args ? args.hwHaScanInterval : undefined;
            resourceInputs["icmpRateCtrl"] = args ? args.icmpRateCtrl : undefined;
            resourceInputs["inboundDscpCopy"] = args ? args.inboundDscpCopy : undefined;
            resourceInputs["inboundDscpCopyPorts"] = args ? args.inboundDscpCopyPorts : undefined;
            resourceInputs["intfShapingOffload"] = args ? args.intfShapingOffload : undefined;
            resourceInputs["ipFragmentOffload"] = args ? args.ipFragmentOffload : undefined;
            resourceInputs["ipReassembly"] = args ? args.ipReassembly : undefined;
            resourceInputs["iphRsvdReCksum"] = args ? args.iphRsvdReCksum : undefined;
            resourceInputs["ippoolOverloadHigh"] = args ? args.ippoolOverloadHigh : undefined;
            resourceInputs["ippoolOverloadLow"] = args ? args.ippoolOverloadLow : undefined;
            resourceInputs["ipsecDecSubengineMask"] = args ? args.ipsecDecSubengineMask : undefined;
            resourceInputs["ipsecEncSubengineMask"] = args ? args.ipsecEncSubengineMask : undefined;
            resourceInputs["ipsecHostDfclr"] = args ? args.ipsecHostDfclr : undefined;
            resourceInputs["ipsecInboundCache"] = args ? args.ipsecInboundCache : undefined;
            resourceInputs["ipsecLocalUespPort"] = args ? args.ipsecLocalUespPort : undefined;
            resourceInputs["ipsecMtuOverride"] = args ? args.ipsecMtuOverride : undefined;
            resourceInputs["ipsecObNpSel"] = args ? args.ipsecObNpSel : undefined;
            resourceInputs["ipsecOverVlink"] = args ? args.ipsecOverVlink : undefined;
            resourceInputs["ipsecStsTimeout"] = args ? args.ipsecStsTimeout : undefined;
            resourceInputs["ipsecThroughputMsgFrequency"] = args ? args.ipsecThroughputMsgFrequency : undefined;
            resourceInputs["iptStsTimeout"] = args ? args.iptStsTimeout : undefined;
            resourceInputs["iptThroughputMsgFrequency"] = args ? args.iptThroughputMsgFrequency : undefined;
            resourceInputs["isfNpQueues"] = args ? args.isfNpQueues : undefined;
            resourceInputs["isfNpRxTrDistr"] = args ? args.isfNpRxTrDistr : undefined;
            resourceInputs["lagOutPortSelect"] = args ? args.lagOutPortSelect : undefined;
            resourceInputs["maxReceiveUnit"] = args ? args.maxReceiveUnit : undefined;
            resourceInputs["maxSessionTimeout"] = args ? args.maxSessionTimeout : undefined;
            resourceInputs["mcastSessionAccounting"] = args ? args.mcastSessionAccounting : undefined;
            resourceInputs["mcastSessionCounting"] = args ? args.mcastSessionCounting : undefined;
            resourceInputs["mcastSessionCounting6"] = args ? args.mcastSessionCounting6 : undefined;
            resourceInputs["napiBreakInterval"] = args ? args.napiBreakInterval : undefined;
            resourceInputs["nat46ForceIpv4PacketForwarding"] = args ? args.nat46ForceIpv4PacketForwarding : undefined;
            resourceInputs["np6CpsOptimizationMode"] = args ? args.np6CpsOptimizationMode : undefined;
            resourceInputs["npQueues"] = args ? args.npQueues : undefined;
            resourceInputs["npuGroupEffectiveScope"] = args ? args.npuGroupEffectiveScope : undefined;
            resourceInputs["npuTcams"] = args ? args.npuTcams : undefined;
            resourceInputs["nssThreadsOption"] = args ? args.nssThreadsOption : undefined;
            resourceInputs["pbaEim"] = args ? args.pbaEim : undefined;
            resourceInputs["pbaPortSelectMode"] = args ? args.pbaPortSelectMode : undefined;
            resourceInputs["perPolicyAccounting"] = args ? args.perPolicyAccounting : undefined;
            resourceInputs["perSessionAccounting"] = args ? args.perSessionAccounting : undefined;
            resourceInputs["pleNonSynTcpAction"] = args ? args.pleNonSynTcpAction : undefined;
            resourceInputs["policyOffloadLevel"] = args ? args.policyOffloadLevel : undefined;
            resourceInputs["portCpuMaps"] = args ? args.portCpuMaps : undefined;
            resourceInputs["portNpuMaps"] = args ? args.portNpuMaps : undefined;
            resourceInputs["portPathOption"] = args ? args.portPathOption : undefined;
            resourceInputs["priorityProtocol"] = args ? args.priorityProtocol : undefined;
            resourceInputs["processIcmpByHost"] = args ? args.processIcmpByHost : undefined;
            resourceInputs["prpPortIn"] = args ? args.prpPortIn : undefined;
            resourceInputs["prpPortOut"] = args ? args.prpPortOut : undefined;
            resourceInputs["prpSessionClearMode"] = args ? args.prpSessionClearMode : undefined;
            resourceInputs["qosMode"] = args ? args.qosMode : undefined;
            resourceInputs["qtmBufMode"] = args ? args.qtmBufMode : undefined;
            resourceInputs["rdpOffload"] = args ? args.rdpOffload : undefined;
            resourceInputs["recoverNp6Link"] = args ? args.recoverNp6Link : undefined;
            resourceInputs["rpsMode"] = args ? args.rpsMode : undefined;
            resourceInputs["scopetype"] = args ? args.scopetype : undefined;
            resourceInputs["sessionAcctInterval"] = args ? args.sessionAcctInterval : undefined;
            resourceInputs["sessionDeniedOffload"] = args ? args.sessionDeniedOffload : undefined;
            resourceInputs["shapingStats"] = args ? args.shapingStats : undefined;
            resourceInputs["spaPortSelectMode"] = args ? args.spaPortSelectMode : undefined;
            resourceInputs["splitIpsecEngines"] = args ? args.splitIpsecEngines : undefined;
            resourceInputs["sseBackpressure"] = args ? args.sseBackpressure : undefined;
            resourceInputs["sseHaScan"] = args ? args.sseHaScan : undefined;
            resourceInputs["stripClearTextPadding"] = args ? args.stripClearTextPadding : undefined;
            resourceInputs["stripEspPadding"] = args ? args.stripEspPadding : undefined;
            resourceInputs["swEhHash"] = args ? args.swEhHash : undefined;
            resourceInputs["swNpBandwidth"] = args ? args.swNpBandwidth : undefined;
            resourceInputs["swTrHash"] = args ? args.swTrHash : undefined;
            resourceInputs["switchNpHash"] = args ? args.switchNpHash : undefined;
            resourceInputs["tcpRstTimeout"] = args ? args.tcpRstTimeout : undefined;
            resourceInputs["tcpTimeoutProfiles"] = args ? args.tcpTimeoutProfiles : undefined;
            resourceInputs["tunnelOverVlink"] = args ? args.tunnelOverVlink : undefined;
            resourceInputs["udpTimeoutProfiles"] = args ? args.udpTimeoutProfiles : undefined;
            resourceInputs["uespOffload"] = args ? args.uespOffload : undefined;
            resourceInputs["ullPortMode"] = args ? args.ullPortMode : undefined;
            resourceInputs["vlanLookupCache"] = args ? args.vlanLookupCache : undefined;
            resourceInputs["vxlanOffload"] = args ? args.vxlanOffload : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectSystemNpu.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectSystemNpu resources.
 */
export interface ObjectSystemNpuState {
    adom?: pulumi.Input<string>;
    backgroundSseScan?: pulumi.Input<inputs.ObjectSystemNpuBackgroundSseScan>;
    capwapOffload?: pulumi.Input<string>;
    dedicatedManagementAffinity?: pulumi.Input<string>;
    dedicatedManagementCpu?: pulumi.Input<string>;
    defaultQosType?: pulumi.Input<string>;
    defaultTcpRefreshDir?: pulumi.Input<string>;
    defaultUdpRefreshDir?: pulumi.Input<string>;
    dosOptions?: pulumi.Input<inputs.ObjectSystemNpuDosOptions>;
    doubleLevelMcastOffload?: pulumi.Input<string>;
    dseTimeout?: pulumi.Input<number>;
    dswDtsProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuDswDtsProfile>[]>;
    dswQueueDtsProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuDswQueueDtsProfile>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    fastpath?: pulumi.Input<string>;
    fpAnomaly?: pulumi.Input<inputs.ObjectSystemNpuFpAnomaly>;
    gtpEnhancedCpuRange?: pulumi.Input<string>;
    gtpEnhancedMode?: pulumi.Input<string>;
    gtpSupport?: pulumi.Input<string>;
    hashConfig?: pulumi.Input<string>;
    hashIpv6Sel?: pulumi.Input<number>;
    hashTblSpread?: pulumi.Input<string>;
    hostShortcutMode?: pulumi.Input<string>;
    hpe?: pulumi.Input<inputs.ObjectSystemNpuHpe>;
    htabDediQueueNr?: pulumi.Input<number>;
    htabMsgQueue?: pulumi.Input<string>;
    htxGtseQuota?: pulumi.Input<string>;
    htxIcmpCsumChk?: pulumi.Input<string>;
    hwHaScanInterval?: pulumi.Input<number>;
    icmpRateCtrl?: pulumi.Input<inputs.ObjectSystemNpuIcmpRateCtrl>;
    inboundDscpCopy?: pulumi.Input<string>;
    inboundDscpCopyPorts?: pulumi.Input<pulumi.Input<string>[]>;
    intfShapingOffload?: pulumi.Input<string>;
    ipFragmentOffload?: pulumi.Input<string>;
    ipReassembly?: pulumi.Input<inputs.ObjectSystemNpuIpReassembly>;
    iphRsvdReCksum?: pulumi.Input<string>;
    ippoolOverloadHigh?: pulumi.Input<number>;
    ippoolOverloadLow?: pulumi.Input<number>;
    ipsecDecSubengineMask?: pulumi.Input<string>;
    ipsecEncSubengineMask?: pulumi.Input<string>;
    ipsecHostDfclr?: pulumi.Input<string>;
    ipsecInboundCache?: pulumi.Input<string>;
    ipsecLocalUespPort?: pulumi.Input<number>;
    ipsecMtuOverride?: pulumi.Input<string>;
    ipsecObNpSel?: pulumi.Input<string>;
    ipsecOverVlink?: pulumi.Input<string>;
    ipsecStsTimeout?: pulumi.Input<string>;
    ipsecThroughputMsgFrequency?: pulumi.Input<string>;
    iptStsTimeout?: pulumi.Input<string>;
    iptThroughputMsgFrequency?: pulumi.Input<string>;
    isfNpQueues?: pulumi.Input<inputs.ObjectSystemNpuIsfNpQueues>;
    isfNpRxTrDistr?: pulumi.Input<string>;
    lagOutPortSelect?: pulumi.Input<string>;
    maxReceiveUnit?: pulumi.Input<number>;
    maxSessionTimeout?: pulumi.Input<number>;
    mcastSessionAccounting?: pulumi.Input<string>;
    mcastSessionCounting?: pulumi.Input<string>;
    mcastSessionCounting6?: pulumi.Input<string>;
    napiBreakInterval?: pulumi.Input<number>;
    nat46ForceIpv4PacketForwarding?: pulumi.Input<string>;
    np6CpsOptimizationMode?: pulumi.Input<string>;
    npQueues?: pulumi.Input<inputs.ObjectSystemNpuNpQueues>;
    npuGroupEffectiveScope?: pulumi.Input<number>;
    npuTcams?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuNpuTcam>[]>;
    nssThreadsOption?: pulumi.Input<string>;
    pbaEim?: pulumi.Input<string>;
    pbaPortSelectMode?: pulumi.Input<string>;
    perPolicyAccounting?: pulumi.Input<string>;
    perSessionAccounting?: pulumi.Input<string>;
    pleNonSynTcpAction?: pulumi.Input<string>;
    policyOffloadLevel?: pulumi.Input<string>;
    portCpuMaps?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuPortCpuMap>[]>;
    portNpuMaps?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuPortNpuMap>[]>;
    portPathOption?: pulumi.Input<inputs.ObjectSystemNpuPortPathOption>;
    priorityProtocol?: pulumi.Input<inputs.ObjectSystemNpuPriorityProtocol>;
    processIcmpByHost?: pulumi.Input<string>;
    prpPortIn?: pulumi.Input<string>;
    prpPortOut?: pulumi.Input<string>;
    prpSessionClearMode?: pulumi.Input<string>;
    qosMode?: pulumi.Input<string>;
    qtmBufMode?: pulumi.Input<string>;
    rdpOffload?: pulumi.Input<string>;
    recoverNp6Link?: pulumi.Input<string>;
    rpsMode?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sessionAcctInterval?: pulumi.Input<number>;
    sessionDeniedOffload?: pulumi.Input<string>;
    shapingStats?: pulumi.Input<string>;
    spaPortSelectMode?: pulumi.Input<string>;
    splitIpsecEngines?: pulumi.Input<string>;
    sseBackpressure?: pulumi.Input<string>;
    sseHaScan?: pulumi.Input<inputs.ObjectSystemNpuSseHaScan>;
    stripClearTextPadding?: pulumi.Input<string>;
    stripEspPadding?: pulumi.Input<string>;
    swEhHash?: pulumi.Input<inputs.ObjectSystemNpuSwEhHash>;
    swNpBandwidth?: pulumi.Input<string>;
    swTrHash?: pulumi.Input<inputs.ObjectSystemNpuSwTrHash>;
    switchNpHash?: pulumi.Input<string>;
    tcpRstTimeout?: pulumi.Input<number>;
    tcpTimeoutProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuTcpTimeoutProfile>[]>;
    tunnelOverVlink?: pulumi.Input<string>;
    udpTimeoutProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuUdpTimeoutProfile>[]>;
    uespOffload?: pulumi.Input<string>;
    ullPortMode?: pulumi.Input<string>;
    vlanLookupCache?: pulumi.Input<string>;
    vxlanOffload?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectSystemNpu resource.
 */
export interface ObjectSystemNpuArgs {
    adom?: pulumi.Input<string>;
    backgroundSseScan?: pulumi.Input<inputs.ObjectSystemNpuBackgroundSseScan>;
    capwapOffload?: pulumi.Input<string>;
    dedicatedManagementAffinity?: pulumi.Input<string>;
    dedicatedManagementCpu?: pulumi.Input<string>;
    defaultQosType?: pulumi.Input<string>;
    defaultTcpRefreshDir?: pulumi.Input<string>;
    defaultUdpRefreshDir?: pulumi.Input<string>;
    dosOptions?: pulumi.Input<inputs.ObjectSystemNpuDosOptions>;
    doubleLevelMcastOffload?: pulumi.Input<string>;
    dseTimeout?: pulumi.Input<number>;
    dswDtsProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuDswDtsProfile>[]>;
    dswQueueDtsProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuDswQueueDtsProfile>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    fastpath?: pulumi.Input<string>;
    fpAnomaly?: pulumi.Input<inputs.ObjectSystemNpuFpAnomaly>;
    gtpEnhancedCpuRange?: pulumi.Input<string>;
    gtpEnhancedMode?: pulumi.Input<string>;
    gtpSupport?: pulumi.Input<string>;
    hashConfig?: pulumi.Input<string>;
    hashIpv6Sel?: pulumi.Input<number>;
    hashTblSpread?: pulumi.Input<string>;
    hostShortcutMode?: pulumi.Input<string>;
    hpe?: pulumi.Input<inputs.ObjectSystemNpuHpe>;
    htabDediQueueNr?: pulumi.Input<number>;
    htabMsgQueue?: pulumi.Input<string>;
    htxGtseQuota?: pulumi.Input<string>;
    htxIcmpCsumChk?: pulumi.Input<string>;
    hwHaScanInterval?: pulumi.Input<number>;
    icmpRateCtrl?: pulumi.Input<inputs.ObjectSystemNpuIcmpRateCtrl>;
    inboundDscpCopy?: pulumi.Input<string>;
    inboundDscpCopyPorts?: pulumi.Input<pulumi.Input<string>[]>;
    intfShapingOffload?: pulumi.Input<string>;
    ipFragmentOffload?: pulumi.Input<string>;
    ipReassembly?: pulumi.Input<inputs.ObjectSystemNpuIpReassembly>;
    iphRsvdReCksum?: pulumi.Input<string>;
    ippoolOverloadHigh?: pulumi.Input<number>;
    ippoolOverloadLow?: pulumi.Input<number>;
    ipsecDecSubengineMask?: pulumi.Input<string>;
    ipsecEncSubengineMask?: pulumi.Input<string>;
    ipsecHostDfclr?: pulumi.Input<string>;
    ipsecInboundCache?: pulumi.Input<string>;
    ipsecLocalUespPort?: pulumi.Input<number>;
    ipsecMtuOverride?: pulumi.Input<string>;
    ipsecObNpSel?: pulumi.Input<string>;
    ipsecOverVlink?: pulumi.Input<string>;
    ipsecStsTimeout?: pulumi.Input<string>;
    ipsecThroughputMsgFrequency?: pulumi.Input<string>;
    iptStsTimeout?: pulumi.Input<string>;
    iptThroughputMsgFrequency?: pulumi.Input<string>;
    isfNpQueues?: pulumi.Input<inputs.ObjectSystemNpuIsfNpQueues>;
    isfNpRxTrDistr?: pulumi.Input<string>;
    lagOutPortSelect?: pulumi.Input<string>;
    maxReceiveUnit?: pulumi.Input<number>;
    maxSessionTimeout?: pulumi.Input<number>;
    mcastSessionAccounting?: pulumi.Input<string>;
    mcastSessionCounting?: pulumi.Input<string>;
    mcastSessionCounting6?: pulumi.Input<string>;
    napiBreakInterval?: pulumi.Input<number>;
    nat46ForceIpv4PacketForwarding?: pulumi.Input<string>;
    np6CpsOptimizationMode?: pulumi.Input<string>;
    npQueues?: pulumi.Input<inputs.ObjectSystemNpuNpQueues>;
    npuGroupEffectiveScope?: pulumi.Input<number>;
    npuTcams?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuNpuTcam>[]>;
    nssThreadsOption?: pulumi.Input<string>;
    pbaEim?: pulumi.Input<string>;
    pbaPortSelectMode?: pulumi.Input<string>;
    perPolicyAccounting?: pulumi.Input<string>;
    perSessionAccounting?: pulumi.Input<string>;
    pleNonSynTcpAction?: pulumi.Input<string>;
    policyOffloadLevel?: pulumi.Input<string>;
    portCpuMaps?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuPortCpuMap>[]>;
    portNpuMaps?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuPortNpuMap>[]>;
    portPathOption?: pulumi.Input<inputs.ObjectSystemNpuPortPathOption>;
    priorityProtocol?: pulumi.Input<inputs.ObjectSystemNpuPriorityProtocol>;
    processIcmpByHost?: pulumi.Input<string>;
    prpPortIn?: pulumi.Input<string>;
    prpPortOut?: pulumi.Input<string>;
    prpSessionClearMode?: pulumi.Input<string>;
    qosMode?: pulumi.Input<string>;
    qtmBufMode?: pulumi.Input<string>;
    rdpOffload?: pulumi.Input<string>;
    recoverNp6Link?: pulumi.Input<string>;
    rpsMode?: pulumi.Input<string>;
    scopetype?: pulumi.Input<string>;
    sessionAcctInterval?: pulumi.Input<number>;
    sessionDeniedOffload?: pulumi.Input<string>;
    shapingStats?: pulumi.Input<string>;
    spaPortSelectMode?: pulumi.Input<string>;
    splitIpsecEngines?: pulumi.Input<string>;
    sseBackpressure?: pulumi.Input<string>;
    sseHaScan?: pulumi.Input<inputs.ObjectSystemNpuSseHaScan>;
    stripClearTextPadding?: pulumi.Input<string>;
    stripEspPadding?: pulumi.Input<string>;
    swEhHash?: pulumi.Input<inputs.ObjectSystemNpuSwEhHash>;
    swNpBandwidth?: pulumi.Input<string>;
    swTrHash?: pulumi.Input<inputs.ObjectSystemNpuSwTrHash>;
    switchNpHash?: pulumi.Input<string>;
    tcpRstTimeout?: pulumi.Input<number>;
    tcpTimeoutProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuTcpTimeoutProfile>[]>;
    tunnelOverVlink?: pulumi.Input<string>;
    udpTimeoutProfiles?: pulumi.Input<pulumi.Input<inputs.ObjectSystemNpuUdpTimeoutProfile>[]>;
    uespOffload?: pulumi.Input<string>;
    ullPortMode?: pulumi.Input<string>;
    vlanLookupCache?: pulumi.Input<string>;
    vxlanOffload?: pulumi.Input<string>;
}
