// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeUrlMap extends pulumi.CustomResource {
    /**
     * Get an existing ComputeUrlMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeUrlMapState, opts?: pulumi.CustomResourceOptions): ComputeUrlMap {
        return new ComputeUrlMap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeUrlMap:ComputeUrlMap';

    /**
     * Returns true if the given object is an instance of ComputeUrlMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeUrlMap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeUrlMap.__pulumiType;
    }

    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * defaultCustomErrorResponsePolicy specifies how the Load Balancer returns error responses when BackendServiceor
     * BackendBucket responds with an error. This policy takes effect at the PathMatcher level and applies only when no policy
     * has been defined for the error code at lower levels like RouteRule and PathRule within this PathMatcher. If an error
     * code does not have a policy defined in defaultCustomErrorResponsePolicy, then a policy defined for the error code in
     * UrlMap.defaultCustomErrorResponsePolicy takes effect. For example, consider a UrlMap with the following configuration:
     * UrlMap.defaultCustomErrorResponsePolicy is configured with policies for 5xx and 4xx errors A RouteRule for /coming_soon/
     * is configured for the error code 404. If the request is for www.myotherdomain.com and a 404 is encountered, the policy
     * under UrlMap.defaultCustomErrorResponsePolicy takes effect. If a 404 response is encountered for the request
     * www.example.com/current_events/, the pathMatcher's policy takes effect. If however, the request for
     * www.example.com/coming_soon/ encounters a 404, the policy in RouteRule.customErrorResponsePolicy takes effect. If any of
     * the requests in this example encounter a 500 error code, the policy at UrlMap.defaultCustomErrorResponsePolicy takes
     * effect. When used in conjunction with pathMatcher.defaultRouteAction.retryPolicy, retries take precedence. Only once all
     * retries are exhausted, the defaultCustomErrorResponsePolicy is applied. While attempting a retry, if load balancer is
     * successful in reaching the service, the defaultCustomErrorResponsePolicy is ignored and the response from the service is
     * returned to the client. defaultCustomErrorResponsePolicy is supported only for global external Application Load
     * Balancers.
     */
    public readonly defaultCustomErrorResponsePolicy!: pulumi.Output<outputs.ComputeUrlMapDefaultCustomErrorResponsePolicy | undefined>;
    /**
     * defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
     * like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If
     * defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
     * is set, defaultRouteAction cannot contain any weightedBackendServices. Only one of defaultRouteAction or
     * defaultUrlRedirect must be set.
     */
    public readonly defaultRouteAction!: pulumi.Output<outputs.ComputeUrlMapDefaultRouteAction | undefined>;
    /**
     * The backend service or backend bucket to use when none of the given rules match.
     */
    public readonly defaultService!: pulumi.Output<string | undefined>;
    /**
     * When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If
     * defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
     */
    public readonly defaultUrlRedirect!: pulumi.Output<outputs.ComputeUrlMapDefaultUrlRedirect | undefined>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * Specifies changes to request and response headers that need to take effect for the selected backendService. The
     * headerAction specified here take effect after headerAction specified under pathMatcher.
     */
    public readonly headerAction!: pulumi.Output<outputs.ComputeUrlMapHeaderAction | undefined>;
    /**
     * The list of HostRules to use against the URL.
     */
    public readonly hostRules!: pulumi.Output<outputs.ComputeUrlMapHostRule[] | undefined>;
    /**
     * The unique identifier for the resource.
     */
    public /*out*/ readonly mapId!: pulumi.Output<number>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of named PathMatchers to use against the URL.
     */
    public readonly pathMatchers!: pulumi.Output<outputs.ComputeUrlMapPathMatcher[] | undefined>;
    public readonly project!: pulumi.Output<string>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
     * You can specify a maximum of 100 tests per UrlMap.
     */
    public readonly tests!: pulumi.Output<outputs.ComputeUrlMapTest[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeUrlMapTimeouts | undefined>;

    /**
     * Create a ComputeUrlMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComputeUrlMapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeUrlMapArgs | ComputeUrlMapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeUrlMapState | undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["defaultCustomErrorResponsePolicy"] = state ? state.defaultCustomErrorResponsePolicy : undefined;
            resourceInputs["defaultRouteAction"] = state ? state.defaultRouteAction : undefined;
            resourceInputs["defaultService"] = state ? state.defaultService : undefined;
            resourceInputs["defaultUrlRedirect"] = state ? state.defaultUrlRedirect : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["headerAction"] = state ? state.headerAction : undefined;
            resourceInputs["hostRules"] = state ? state.hostRules : undefined;
            resourceInputs["mapId"] = state ? state.mapId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pathMatchers"] = state ? state.pathMatchers : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["tests"] = state ? state.tests : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ComputeUrlMapArgs | undefined;
            resourceInputs["defaultCustomErrorResponsePolicy"] = args ? args.defaultCustomErrorResponsePolicy : undefined;
            resourceInputs["defaultRouteAction"] = args ? args.defaultRouteAction : undefined;
            resourceInputs["defaultService"] = args ? args.defaultService : undefined;
            resourceInputs["defaultUrlRedirect"] = args ? args.defaultUrlRedirect : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["headerAction"] = args ? args.headerAction : undefined;
            resourceInputs["hostRules"] = args ? args.hostRules : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pathMatchers"] = args ? args.pathMatchers : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["tests"] = args ? args.tests : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["mapId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeUrlMap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeUrlMap resources.
 */
export interface ComputeUrlMapState {
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * defaultCustomErrorResponsePolicy specifies how the Load Balancer returns error responses when BackendServiceor
     * BackendBucket responds with an error. This policy takes effect at the PathMatcher level and applies only when no policy
     * has been defined for the error code at lower levels like RouteRule and PathRule within this PathMatcher. If an error
     * code does not have a policy defined in defaultCustomErrorResponsePolicy, then a policy defined for the error code in
     * UrlMap.defaultCustomErrorResponsePolicy takes effect. For example, consider a UrlMap with the following configuration:
     * UrlMap.defaultCustomErrorResponsePolicy is configured with policies for 5xx and 4xx errors A RouteRule for /coming_soon/
     * is configured for the error code 404. If the request is for www.myotherdomain.com and a 404 is encountered, the policy
     * under UrlMap.defaultCustomErrorResponsePolicy takes effect. If a 404 response is encountered for the request
     * www.example.com/current_events/, the pathMatcher's policy takes effect. If however, the request for
     * www.example.com/coming_soon/ encounters a 404, the policy in RouteRule.customErrorResponsePolicy takes effect. If any of
     * the requests in this example encounter a 500 error code, the policy at UrlMap.defaultCustomErrorResponsePolicy takes
     * effect. When used in conjunction with pathMatcher.defaultRouteAction.retryPolicy, retries take precedence. Only once all
     * retries are exhausted, the defaultCustomErrorResponsePolicy is applied. While attempting a retry, if load balancer is
     * successful in reaching the service, the defaultCustomErrorResponsePolicy is ignored and the response from the service is
     * returned to the client. defaultCustomErrorResponsePolicy is supported only for global external Application Load
     * Balancers.
     */
    defaultCustomErrorResponsePolicy?: pulumi.Input<inputs.ComputeUrlMapDefaultCustomErrorResponsePolicy>;
    /**
     * defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
     * like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If
     * defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
     * is set, defaultRouteAction cannot contain any weightedBackendServices. Only one of defaultRouteAction or
     * defaultUrlRedirect must be set.
     */
    defaultRouteAction?: pulumi.Input<inputs.ComputeUrlMapDefaultRouteAction>;
    /**
     * The backend service or backend bucket to use when none of the given rules match.
     */
    defaultService?: pulumi.Input<string>;
    /**
     * When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If
     * defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
     */
    defaultUrlRedirect?: pulumi.Input<inputs.ComputeUrlMapDefaultUrlRedirect>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Specifies changes to request and response headers that need to take effect for the selected backendService. The
     * headerAction specified here take effect after headerAction specified under pathMatcher.
     */
    headerAction?: pulumi.Input<inputs.ComputeUrlMapHeaderAction>;
    /**
     * The list of HostRules to use against the URL.
     */
    hostRules?: pulumi.Input<pulumi.Input<inputs.ComputeUrlMapHostRule>[]>;
    /**
     * The unique identifier for the resource.
     */
    mapId?: pulumi.Input<number>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of named PathMatchers to use against the URL.
     */
    pathMatchers?: pulumi.Input<pulumi.Input<inputs.ComputeUrlMapPathMatcher>[]>;
    project?: pulumi.Input<string>;
    selfLink?: pulumi.Input<string>;
    /**
     * The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
     * You can specify a maximum of 100 tests per UrlMap.
     */
    tests?: pulumi.Input<pulumi.Input<inputs.ComputeUrlMapTest>[]>;
    timeouts?: pulumi.Input<inputs.ComputeUrlMapTimeouts>;
}

/**
 * The set of arguments for constructing a ComputeUrlMap resource.
 */
export interface ComputeUrlMapArgs {
    /**
     * defaultCustomErrorResponsePolicy specifies how the Load Balancer returns error responses when BackendServiceor
     * BackendBucket responds with an error. This policy takes effect at the PathMatcher level and applies only when no policy
     * has been defined for the error code at lower levels like RouteRule and PathRule within this PathMatcher. If an error
     * code does not have a policy defined in defaultCustomErrorResponsePolicy, then a policy defined for the error code in
     * UrlMap.defaultCustomErrorResponsePolicy takes effect. For example, consider a UrlMap with the following configuration:
     * UrlMap.defaultCustomErrorResponsePolicy is configured with policies for 5xx and 4xx errors A RouteRule for /coming_soon/
     * is configured for the error code 404. If the request is for www.myotherdomain.com and a 404 is encountered, the policy
     * under UrlMap.defaultCustomErrorResponsePolicy takes effect. If a 404 response is encountered for the request
     * www.example.com/current_events/, the pathMatcher's policy takes effect. If however, the request for
     * www.example.com/coming_soon/ encounters a 404, the policy in RouteRule.customErrorResponsePolicy takes effect. If any of
     * the requests in this example encounter a 500 error code, the policy at UrlMap.defaultCustomErrorResponsePolicy takes
     * effect. When used in conjunction with pathMatcher.defaultRouteAction.retryPolicy, retries take precedence. Only once all
     * retries are exhausted, the defaultCustomErrorResponsePolicy is applied. While attempting a retry, if load balancer is
     * successful in reaching the service, the defaultCustomErrorResponsePolicy is ignored and the response from the service is
     * returned to the client. defaultCustomErrorResponsePolicy is supported only for global external Application Load
     * Balancers.
     */
    defaultCustomErrorResponsePolicy?: pulumi.Input<inputs.ComputeUrlMapDefaultCustomErrorResponsePolicy>;
    /**
     * defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions
     * like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If
     * defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService
     * is set, defaultRouteAction cannot contain any weightedBackendServices. Only one of defaultRouteAction or
     * defaultUrlRedirect must be set.
     */
    defaultRouteAction?: pulumi.Input<inputs.ComputeUrlMapDefaultRouteAction>;
    /**
     * The backend service or backend bucket to use when none of the given rules match.
     */
    defaultService?: pulumi.Input<string>;
    /**
     * When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If
     * defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.
     */
    defaultUrlRedirect?: pulumi.Input<inputs.ComputeUrlMapDefaultUrlRedirect>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies changes to request and response headers that need to take effect for the selected backendService. The
     * headerAction specified here take effect after headerAction specified under pathMatcher.
     */
    headerAction?: pulumi.Input<inputs.ComputeUrlMapHeaderAction>;
    /**
     * The list of HostRules to use against the URL.
     */
    hostRules?: pulumi.Input<pulumi.Input<inputs.ComputeUrlMapHostRule>[]>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of named PathMatchers to use against the URL.
     */
    pathMatchers?: pulumi.Input<pulumi.Input<inputs.ComputeUrlMapPathMatcher>[]>;
    project?: pulumi.Input<string>;
    /**
     * The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass.
     * You can specify a maximum of 100 tests per UrlMap.
     */
    tests?: pulumi.Input<pulumi.Input<inputs.ComputeUrlMapTest>[]>;
    timeouts?: pulumi.Input<inputs.ComputeUrlMapTimeouts>;
}
