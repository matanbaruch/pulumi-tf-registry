// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArtifactRegistryRepository(args: GetArtifactRegistryRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetArtifactRegistryRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getArtifactRegistryRepository:getArtifactRegistryRepository", {
        "id": args.id,
        "location": args.location,
        "project": args.project,
        "repositoryId": args.repositoryId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArtifactRegistryRepository.
 */
export interface GetArtifactRegistryRepositoryArgs {
    id?: string;
    location: string;
    project?: string;
    repositoryId: string;
}

/**
 * A collection of values returned by getArtifactRegistryRepository.
 */
export interface GetArtifactRegistryRepositoryResult {
    readonly cleanupPolicies: outputs.GetArtifactRegistryRepositoryCleanupPolicy[];
    readonly cleanupPolicyDryRun: boolean;
    readonly createTime: string;
    readonly description: string;
    readonly dockerConfigs: outputs.GetArtifactRegistryRepositoryDockerConfig[];
    readonly effectiveLabels: {[key: string]: string};
    readonly format: string;
    readonly id: string;
    readonly kmsKeyName: string;
    readonly labels: {[key: string]: string};
    readonly location: string;
    readonly mavenConfigs: outputs.GetArtifactRegistryRepositoryMavenConfig[];
    readonly mode: string;
    readonly name: string;
    readonly project?: string;
    readonly remoteRepositoryConfigs: outputs.GetArtifactRegistryRepositoryRemoteRepositoryConfig[];
    readonly repositoryId: string;
    readonly terraformLabels: {[key: string]: string};
    readonly updateTime: string;
    readonly virtualRepositoryConfigs: outputs.GetArtifactRegistryRepositoryVirtualRepositoryConfig[];
}
export function getArtifactRegistryRepositoryOutput(args: GetArtifactRegistryRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArtifactRegistryRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getArtifactRegistryRepository(a, opts))
}

/**
 * A collection of arguments for invoking getArtifactRegistryRepository.
 */
export interface GetArtifactRegistryRepositoryOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    repositoryId: pulumi.Input<string>;
}
