// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeRegionSslCertificate(args: GetComputeRegionSslCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeRegionSslCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getComputeRegionSslCertificate:getComputeRegionSslCertificate", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeRegionSslCertificate.
 */
export interface GetComputeRegionSslCertificateArgs {
    id?: string;
    name: string;
    project?: string;
    region?: string;
}

/**
 * A collection of values returned by getComputeRegionSslCertificate.
 */
export interface GetComputeRegionSslCertificateResult {
    readonly certificate: string;
    readonly certificateId: number;
    readonly creationTimestamp: string;
    readonly description: string;
    readonly expireTime: string;
    readonly id: string;
    readonly name: string;
    readonly namePrefix: string;
    readonly privateKey: string;
    readonly project?: string;
    readonly region?: string;
    readonly selfLink: string;
}
export function getComputeRegionSslCertificateOutput(args: GetComputeRegionSslCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeRegionSslCertificateResult> {
    return pulumi.output(args).apply((a: any) => getComputeRegionSslCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getComputeRegionSslCertificate.
 */
export interface GetComputeRegionSslCertificateOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
