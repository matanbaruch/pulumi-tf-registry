// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OrganizationIamCustomRole extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationIamCustomRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationIamCustomRoleState, opts?: pulumi.CustomResourceOptions): OrganizationIamCustomRole {
        return new OrganizationIamCustomRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/organizationIamCustomRole:OrganizationIamCustomRole';

    /**
     * Returns true if the given object is an instance of OrganizationIamCustomRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationIamCustomRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationIamCustomRole.__pulumiType;
    }

    /**
     * The current deleted state of the role.
     */
    public /*out*/ readonly deleted!: pulumi.Output<boolean>;
    /**
     * A human-readable description for the role.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the role in the format organizations/{{org_id}}/roles/{{role_id}}. Like id, this field can be used as a
     * reference in other resources such as IAM role bindings.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The numeric ID of the organization in which you want to create a custom role.
     */
    public readonly orgId!: pulumi.Output<string>;
    /**
     * The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
     */
    public readonly permissions!: pulumi.Output<string[]>;
    /**
     * The role id to use for this role.
     */
    public readonly roleId!: pulumi.Output<string>;
    /**
     * The current launch stage of the role. Defaults to GA.
     */
    public readonly stage!: pulumi.Output<string | undefined>;
    /**
     * A human-readable title for the role.
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a OrganizationIamCustomRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationIamCustomRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationIamCustomRoleArgs | OrganizationIamCustomRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationIamCustomRoleState | undefined;
            resourceInputs["deleted"] = state ? state.deleted : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["stage"] = state ? state.stage : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as OrganizationIamCustomRoleArgs | undefined;
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if ((!args || args.permissions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissions'");
            }
            if ((!args || args.roleId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleId'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["roleId"] = args ? args.roleId : undefined;
            resourceInputs["stage"] = args ? args.stage : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["deleted"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationIamCustomRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationIamCustomRole resources.
 */
export interface OrganizationIamCustomRoleState {
    /**
     * The current deleted state of the role.
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * A human-readable description for the role.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the role in the format organizations/{{org_id}}/roles/{{role_id}}. Like id, this field can be used as a
     * reference in other resources such as IAM role bindings.
     */
    name?: pulumi.Input<string>;
    /**
     * The numeric ID of the organization in which you want to create a custom role.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role id to use for this role.
     */
    roleId?: pulumi.Input<string>;
    /**
     * The current launch stage of the role. Defaults to GA.
     */
    stage?: pulumi.Input<string>;
    /**
     * A human-readable title for the role.
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationIamCustomRole resource.
 */
export interface OrganizationIamCustomRoleArgs {
    /**
     * A human-readable description for the role.
     */
    description?: pulumi.Input<string>;
    /**
     * The numeric ID of the organization in which you want to create a custom role.
     */
    orgId: pulumi.Input<string>;
    /**
     * The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
     */
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role id to use for this role.
     */
    roleId: pulumi.Input<string>;
    /**
     * The current launch stage of the role. Defaults to GA.
     */
    stage?: pulumi.Input<string>;
    /**
     * A human-readable title for the role.
     */
    title: pulumi.Input<string>;
}
