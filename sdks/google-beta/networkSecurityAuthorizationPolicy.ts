// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkSecurityAuthorizationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing NetworkSecurityAuthorizationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkSecurityAuthorizationPolicyState, opts?: pulumi.CustomResourceOptions): NetworkSecurityAuthorizationPolicy {
        return new NetworkSecurityAuthorizationPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/networkSecurityAuthorizationPolicy:NetworkSecurityAuthorizationPolicy';

    /**
     * Returns true if the given object is an instance of NetworkSecurityAuthorizationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkSecurityAuthorizationPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkSecurityAuthorizationPolicy.__pulumiType;
    }

    /**
     * The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Time the AuthorizationPolicy was created in UTC.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
     * only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location of the authorization policy. The default value is 'global'.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Name of the AuthorizationPolicy resource.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
     * field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
     * in the action field will be applied on every request.
     */
    public readonly rules!: pulumi.Output<outputs.NetworkSecurityAuthorizationPolicyRule[] | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.NetworkSecurityAuthorizationPolicyTimeouts | undefined>;
    /**
     * Time the AuthorizationPolicy was updated in UTC.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a NetworkSecurityAuthorizationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkSecurityAuthorizationPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkSecurityAuthorizationPolicyArgs | NetworkSecurityAuthorizationPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkSecurityAuthorizationPolicyState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as NetworkSecurityAuthorizationPolicyArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkSecurityAuthorizationPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkSecurityAuthorizationPolicy resources.
 */
export interface NetworkSecurityAuthorizationPolicyState {
    /**
     * The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
     */
    action?: pulumi.Input<string>;
    /**
     * Time the AuthorizationPolicy was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
     * only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location of the authorization policy. The default value is 'global'.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the AuthorizationPolicy resource.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
     * field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
     * in the action field will be applied on every request.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityAuthorizationPolicyRule>[]>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.NetworkSecurityAuthorizationPolicyTimeouts>;
    /**
     * Time the AuthorizationPolicy was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkSecurityAuthorizationPolicy resource.
 */
export interface NetworkSecurityAuthorizationPolicyArgs {
    /**
     * The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
     */
    action: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
     * only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location of the authorization policy. The default value is 'global'.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the AuthorizationPolicy resource.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
     * field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
     * in the action field will be applied on every request.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.NetworkSecurityAuthorizationPolicyRule>[]>;
    timeouts?: pulumi.Input<inputs.NetworkSecurityAuthorizationPolicyTimeouts>;
}
