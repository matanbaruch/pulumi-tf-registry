// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitoringIstioCanonicalService(args: GetMonitoringIstioCanonicalServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringIstioCanonicalServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getMonitoringIstioCanonicalService:getMonitoringIstioCanonicalService", {
        "canonicalService": args.canonicalService,
        "canonicalServiceNamespace": args.canonicalServiceNamespace,
        "id": args.id,
        "meshUid": args.meshUid,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitoringIstioCanonicalService.
 */
export interface GetMonitoringIstioCanonicalServiceArgs {
    canonicalService: string;
    canonicalServiceNamespace: string;
    id?: string;
    meshUid: string;
    project?: string;
}

/**
 * A collection of values returned by getMonitoringIstioCanonicalService.
 */
export interface GetMonitoringIstioCanonicalServiceResult {
    readonly canonicalService: string;
    readonly canonicalServiceNamespace: string;
    readonly displayName: string;
    readonly id: string;
    readonly meshUid: string;
    readonly name: string;
    readonly project?: string;
    readonly serviceId: string;
    readonly telemetries: outputs.GetMonitoringIstioCanonicalServiceTelemetry[];
    readonly userLabels: {[key: string]: string};
}
export function getMonitoringIstioCanonicalServiceOutput(args: GetMonitoringIstioCanonicalServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoringIstioCanonicalServiceResult> {
    return pulumi.output(args).apply((a: any) => getMonitoringIstioCanonicalService(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoringIstioCanonicalService.
 */
export interface GetMonitoringIstioCanonicalServiceOutputArgs {
    canonicalService: pulumi.Input<string>;
    canonicalServiceNamespace: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    meshUid: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
