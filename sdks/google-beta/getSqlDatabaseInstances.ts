// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSqlDatabaseInstances(args?: GetSqlDatabaseInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlDatabaseInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getSqlDatabaseInstances:getSqlDatabaseInstances", {
        "databaseVersion": args.databaseVersion,
        "id": args.id,
        "project": args.project,
        "region": args.region,
        "state": args.state,
        "tier": args.tier,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSqlDatabaseInstances.
 */
export interface GetSqlDatabaseInstancesArgs {
    databaseVersion?: string;
    id?: string;
    project?: string;
    region?: string;
    state?: string;
    tier?: string;
    zone?: string;
}

/**
 * A collection of values returned by getSqlDatabaseInstances.
 */
export interface GetSqlDatabaseInstancesResult {
    readonly databaseVersion?: string;
    readonly id: string;
    readonly instances: outputs.GetSqlDatabaseInstancesInstance[];
    readonly project?: string;
    readonly region?: string;
    readonly state?: string;
    readonly tier?: string;
    readonly zone?: string;
}
export function getSqlDatabaseInstancesOutput(args?: GetSqlDatabaseInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlDatabaseInstancesResult> {
    return pulumi.output(args).apply((a: any) => getSqlDatabaseInstances(a, opts))
}

/**
 * A collection of arguments for invoking getSqlDatabaseInstances.
 */
export interface GetSqlDatabaseInstancesOutputArgs {
    databaseVersion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
