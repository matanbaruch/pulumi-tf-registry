// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKmsSecretAsymmetric(args: GetKmsSecretAsymmetricArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsSecretAsymmetricResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getKmsSecretAsymmetric:getKmsSecretAsymmetric", {
        "ciphertext": args.ciphertext,
        "crc32": args.crc32,
        "cryptoKeyVersion": args.cryptoKeyVersion,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsSecretAsymmetric.
 */
export interface GetKmsSecretAsymmetricArgs {
    ciphertext: string;
    crc32?: string;
    cryptoKeyVersion: string;
    id?: string;
}

/**
 * A collection of values returned by getKmsSecretAsymmetric.
 */
export interface GetKmsSecretAsymmetricResult {
    readonly ciphertext: string;
    readonly crc32?: string;
    readonly cryptoKeyVersion: string;
    readonly id: string;
    readonly plaintext: string;
}
export function getKmsSecretAsymmetricOutput(args: GetKmsSecretAsymmetricOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsSecretAsymmetricResult> {
    return pulumi.output(args).apply((a: any) => getKmsSecretAsymmetric(a, opts))
}

/**
 * A collection of arguments for invoking getKmsSecretAsymmetric.
 */
export interface GetKmsSecretAsymmetricOutputArgs {
    ciphertext: pulumi.Input<string>;
    crc32?: pulumi.Input<string>;
    cryptoKeyVersion: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
