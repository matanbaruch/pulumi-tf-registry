// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VmwareengineSubnet extends pulumi.CustomResource {
    /**
     * Get an existing VmwareengineSubnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmwareengineSubnetState, opts?: pulumi.CustomResourceOptions): VmwareengineSubnet {
        return new VmwareengineSubnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/vmwareengineSubnet:VmwareengineSubnet';

    /**
     * Returns true if the given object is an instance of VmwareengineSubnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VmwareengineSubnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VmwareengineSubnet.__pulumiType;
    }

    /**
     * Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * DHCP address ranges.
     */
    public /*out*/ readonly dhcpAddressRanges!: pulumi.Output<outputs.VmwareengineSubnetDhcpAddressRange[]>;
    /**
     * The canonical identifier of the logical router that this subnet is attached to.
     */
    public /*out*/ readonly gatewayId!: pulumi.Output<string>;
    /**
     * The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
     */
    public /*out*/ readonly gatewayIp!: pulumi.Output<string>;
    /**
     * The IP address range of the subnet in CIDR format.
     */
    public readonly ipCidrRange!: pulumi.Output<string>;
    /**
     * The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
     * to 5.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
     * conventions in https://cloud.google.com/apis/design/resource_names. For example:
     * projects/my-project/locations/us-west1-a/privateClouds/my-cloud
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud. If false,
     * the subnet cannot be modified through Google Cloud, only through NSX-T directly.
     */
    public /*out*/ readonly standardConfig!: pulumi.Output<boolean>;
    /**
     * State of the subnet.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.VmwareengineSubnetTimeouts | undefined>;
    /**
     * The type of the subnet.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * System-generated unique identifier for the resource.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * VLAN ID of the VLAN on which the subnet is configured.
     */
    public /*out*/ readonly vlanId!: pulumi.Output<number>;

    /**
     * Create a VmwareengineSubnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmwareengineSubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VmwareengineSubnetArgs | VmwareengineSubnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VmwareengineSubnetState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dhcpAddressRanges"] = state ? state.dhcpAddressRanges : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["gatewayIp"] = state ? state.gatewayIp : undefined;
            resourceInputs["ipCidrRange"] = state ? state.ipCidrRange : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["standardConfig"] = state ? state.standardConfig : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
        } else {
            const args = argsOrState as VmwareengineSubnetArgs | undefined;
            if ((!args || args.ipCidrRange === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipCidrRange'");
            }
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            resourceInputs["ipCidrRange"] = args ? args.ipCidrRange : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dhcpAddressRanges"] = undefined /*out*/;
            resourceInputs["gatewayId"] = undefined /*out*/;
            resourceInputs["gatewayIp"] = undefined /*out*/;
            resourceInputs["standardConfig"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["vlanId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VmwareengineSubnet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VmwareengineSubnet resources.
 */
export interface VmwareengineSubnetState {
    /**
     * Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * DHCP address ranges.
     */
    dhcpAddressRanges?: pulumi.Input<pulumi.Input<inputs.VmwareengineSubnetDhcpAddressRange>[]>;
    /**
     * The canonical identifier of the logical router that this subnet is attached to.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
     */
    gatewayIp?: pulumi.Input<string>;
    /**
     * The IP address range of the subnet in CIDR format.
     */
    ipCidrRange?: pulumi.Input<string>;
    /**
     * The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
     * to 5.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
     * conventions in https://cloud.google.com/apis/design/resource_names. For example:
     * projects/my-project/locations/us-west1-a/privateClouds/my-cloud
     */
    parent?: pulumi.Input<string>;
    /**
     * Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud. If false,
     * the subnet cannot be modified through Google Cloud, only through NSX-T directly.
     */
    standardConfig?: pulumi.Input<boolean>;
    /**
     * State of the subnet.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VmwareengineSubnetTimeouts>;
    /**
     * The type of the subnet.
     */
    type?: pulumi.Input<string>;
    /**
     * System-generated unique identifier for the resource.
     */
    uid?: pulumi.Input<string>;
    /**
     * Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
    /**
     * VLAN ID of the VLAN on which the subnet is configured.
     */
    vlanId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VmwareengineSubnet resource.
 */
export interface VmwareengineSubnetArgs {
    /**
     * The IP address range of the subnet in CIDR format.
     */
    ipCidrRange: pulumi.Input<string>;
    /**
     * The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
     * to 5.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
     * conventions in https://cloud.google.com/apis/design/resource_names. For example:
     * projects/my-project/locations/us-west1-a/privateClouds/my-cloud
     */
    parent: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VmwareengineSubnetTimeouts>;
}
