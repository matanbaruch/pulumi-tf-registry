// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBigqueryDataset(args: GetBigqueryDatasetArgs, opts?: pulumi.InvokeOptions): Promise<GetBigqueryDatasetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getBigqueryDataset:getBigqueryDataset", {
        "datasetId": args.datasetId,
        "id": args.id,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBigqueryDataset.
 */
export interface GetBigqueryDatasetArgs {
    datasetId: string;
    id?: string;
    project?: string;
}

/**
 * A collection of values returned by getBigqueryDataset.
 */
export interface GetBigqueryDatasetResult {
    readonly accesses: outputs.GetBigqueryDatasetAccess[];
    readonly creationTime: number;
    readonly datasetId: string;
    readonly defaultCollation: string;
    readonly defaultEncryptionConfigurations: outputs.GetBigqueryDatasetDefaultEncryptionConfiguration[];
    readonly defaultPartitionExpirationMs: number;
    readonly defaultTableExpirationMs: number;
    readonly deleteContentsOnDestroy: boolean;
    readonly description: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly etag: string;
    readonly externalDatasetReferences: outputs.GetBigqueryDatasetExternalDatasetReference[];
    readonly friendlyName: string;
    readonly id: string;
    readonly isCaseInsensitive: boolean;
    readonly labels: {[key: string]: string};
    readonly lastModifiedTime: number;
    readonly location: string;
    readonly maxTimeTravelHours: string;
    readonly project?: string;
    readonly resourceTags: {[key: string]: string};
    readonly selfLink: string;
    readonly storageBillingModel: string;
    readonly terraformLabels: {[key: string]: string};
}
export function getBigqueryDatasetOutput(args: GetBigqueryDatasetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBigqueryDatasetResult> {
    return pulumi.output(args).apply((a: any) => getBigqueryDataset(a, opts))
}

/**
 * A collection of arguments for invoking getBigqueryDataset.
 */
export interface GetBigqueryDatasetOutputArgs {
    datasetId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
