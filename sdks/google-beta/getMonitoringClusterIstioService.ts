// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitoringClusterIstioService(args: GetMonitoringClusterIstioServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringClusterIstioServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getMonitoringClusterIstioService:getMonitoringClusterIstioService", {
        "clusterName": args.clusterName,
        "id": args.id,
        "location": args.location,
        "project": args.project,
        "serviceName": args.serviceName,
        "serviceNamespace": args.serviceNamespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitoringClusterIstioService.
 */
export interface GetMonitoringClusterIstioServiceArgs {
    clusterName: string;
    id?: string;
    location: string;
    project?: string;
    serviceName: string;
    serviceNamespace: string;
}

/**
 * A collection of values returned by getMonitoringClusterIstioService.
 */
export interface GetMonitoringClusterIstioServiceResult {
    readonly clusterName: string;
    readonly displayName: string;
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly project?: string;
    readonly serviceId: string;
    readonly serviceName: string;
    readonly serviceNamespace: string;
    readonly telemetries: outputs.GetMonitoringClusterIstioServiceTelemetry[];
    readonly userLabels: {[key: string]: string};
}
export function getMonitoringClusterIstioServiceOutput(args: GetMonitoringClusterIstioServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoringClusterIstioServiceResult> {
    return pulumi.output(args).apply((a: any) => getMonitoringClusterIstioService(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoringClusterIstioService.
 */
export interface GetMonitoringClusterIstioServiceOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    serviceNamespace: pulumi.Input<string>;
}
