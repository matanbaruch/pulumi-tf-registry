// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApigeeFlowhook extends pulumi.CustomResource {
    /**
     * Get an existing ApigeeFlowhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigeeFlowhookState, opts?: pulumi.CustomResourceOptions): ApigeeFlowhook {
        return new ApigeeFlowhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/apigeeFlowhook:ApigeeFlowhook';

    /**
     * Returns true if the given object is an instance of ApigeeFlowhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigeeFlowhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigeeFlowhook.__pulumiType;
    }

    /**
     * Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
     * execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
     */
    public readonly continueOnError!: pulumi.Output<boolean | undefined>;
    /**
     * Description of the flow hook.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The resource ID of the environment.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
     * PreTargetFlowHook, or PostTargetFlowHook.
     */
    public readonly flowHookPoint!: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the environment
     */
    public readonly orgId!: pulumi.Output<string>;
    /**
     * Id of the Sharedflow attaching to a flowhook point.
     */
    public readonly sharedflow!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApigeeFlowhookTimeouts | undefined>;

    /**
     * Create a ApigeeFlowhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigeeFlowhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigeeFlowhookArgs | ApigeeFlowhookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigeeFlowhookState | undefined;
            resourceInputs["continueOnError"] = state ? state.continueOnError : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["flowHookPoint"] = state ? state.flowHookPoint : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["sharedflow"] = state ? state.sharedflow : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ApigeeFlowhookArgs | undefined;
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.flowHookPoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flowHookPoint'");
            }
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if ((!args || args.sharedflow === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sharedflow'");
            }
            resourceInputs["continueOnError"] = args ? args.continueOnError : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["flowHookPoint"] = args ? args.flowHookPoint : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["sharedflow"] = args ? args.sharedflow : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigeeFlowhook.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApigeeFlowhook resources.
 */
export interface ApigeeFlowhookState {
    /**
     * Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
     * execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
     */
    continueOnError?: pulumi.Input<boolean>;
    /**
     * Description of the flow hook.
     */
    description?: pulumi.Input<string>;
    /**
     * The resource ID of the environment.
     */
    environment?: pulumi.Input<string>;
    /**
     * Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
     * PreTargetFlowHook, or PostTargetFlowHook.
     */
    flowHookPoint?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the environment
     */
    orgId?: pulumi.Input<string>;
    /**
     * Id of the Sharedflow attaching to a flowhook point.
     */
    sharedflow?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeFlowhookTimeouts>;
}

/**
 * The set of arguments for constructing a ApigeeFlowhook resource.
 */
export interface ApigeeFlowhookArgs {
    /**
     * Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
     * execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
     */
    continueOnError?: pulumi.Input<boolean>;
    /**
     * Description of the flow hook.
     */
    description?: pulumi.Input<string>;
    /**
     * The resource ID of the environment.
     */
    environment: pulumi.Input<string>;
    /**
     * Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
     * PreTargetFlowHook, or PostTargetFlowHook.
     */
    flowHookPoint: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the environment
     */
    orgId: pulumi.Input<string>;
    /**
     * Id of the Sharedflow attaching to a flowhook point.
     */
    sharedflow: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeFlowhookTimeouts>;
}
