// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirebaseAndroidApp extends pulumi.CustomResource {
    /**
     * Get an existing FirebaseAndroidApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirebaseAndroidAppState, opts?: pulumi.CustomResourceOptions): FirebaseAndroidApp {
        return new FirebaseAndroidApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/firebaseAndroidApp:FirebaseAndroidApp';

    /**
     * Returns true if the given object is an instance of FirebaseAndroidApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirebaseAndroidApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirebaseAndroidApp.__pulumiType;
    }

    /**
     * The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the AndroidApp. If
     * apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the AndroidApp. This
     * auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     */
    public readonly apiKeyId!: pulumi.Output<string>;
    /**
     * The globally unique, Firebase-assigned identifier of the AndroidApp. This identifier should be treated as an opaque
     * token, as the data format is not specified.
     */
    public /*out*/ readonly appId!: pulumi.Output<string>;
    public readonly deletionPolicy!: pulumi.Output<string | undefined>;
    /**
     * The user-assigned display name of the AndroidApp.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to
     * ensure the client has an up-to-date value before proceeding.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The fully qualified resource name of the AndroidApp, for example: projects/projectId/androidApps/appId
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The canonical package name of the Android app as would appear in the Google Play Developer Console.
     */
    public readonly packageName!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The SHA1 certificate hashes for the AndroidApp.
     */
    public readonly sha1Hashes!: pulumi.Output<string[] | undefined>;
    /**
     * The SHA256 certificate hashes for the AndroidApp.
     */
    public readonly sha256Hashes!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.FirebaseAndroidAppTimeouts | undefined>;

    /**
     * Create a FirebaseAndroidApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirebaseAndroidAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirebaseAndroidAppArgs | FirebaseAndroidAppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirebaseAndroidAppState | undefined;
            resourceInputs["apiKeyId"] = state ? state.apiKeyId : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packageName"] = state ? state.packageName : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["sha1Hashes"] = state ? state.sha1Hashes : undefined;
            resourceInputs["sha256Hashes"] = state ? state.sha256Hashes : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as FirebaseAndroidAppArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.packageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packageName'");
            }
            resourceInputs["apiKeyId"] = args ? args.apiKeyId : undefined;
            resourceInputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["packageName"] = args ? args.packageName : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["sha1Hashes"] = args ? args.sha1Hashes : undefined;
            resourceInputs["sha256Hashes"] = args ? args.sha256Hashes : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirebaseAndroidApp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirebaseAndroidApp resources.
 */
export interface FirebaseAndroidAppState {
    /**
     * The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the AndroidApp. If
     * apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the AndroidApp. This
     * auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     */
    apiKeyId?: pulumi.Input<string>;
    /**
     * The globally unique, Firebase-assigned identifier of the AndroidApp. This identifier should be treated as an opaque
     * token, as the data format is not specified.
     */
    appId?: pulumi.Input<string>;
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The user-assigned display name of the AndroidApp.
     */
    displayName?: pulumi.Input<string>;
    /**
     * This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to
     * ensure the client has an up-to-date value before proceeding.
     */
    etag?: pulumi.Input<string>;
    /**
     * The fully qualified resource name of the AndroidApp, for example: projects/projectId/androidApps/appId
     */
    name?: pulumi.Input<string>;
    /**
     * The canonical package name of the Android app as would appear in the Google Play Developer Console.
     */
    packageName?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The SHA1 certificate hashes for the AndroidApp.
     */
    sha1Hashes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The SHA256 certificate hashes for the AndroidApp.
     */
    sha256Hashes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.FirebaseAndroidAppTimeouts>;
}

/**
 * The set of arguments for constructing a FirebaseAndroidApp resource.
 */
export interface FirebaseAndroidAppArgs {
    /**
     * The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the AndroidApp. If
     * apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the AndroidApp. This
     * auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     */
    apiKeyId?: pulumi.Input<string>;
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The user-assigned display name of the AndroidApp.
     */
    displayName: pulumi.Input<string>;
    /**
     * The canonical package name of the Android app as would appear in the Google Play Developer Console.
     */
    packageName: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The SHA1 certificate hashes for the AndroidApp.
     */
    sha1Hashes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The SHA256 certificate hashes for the AndroidApp.
     */
    sha256Hashes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.FirebaseAndroidAppTimeouts>;
}
