// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeNetworkEndpointGroup(args?: GetComputeNetworkEndpointGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeNetworkEndpointGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getComputeNetworkEndpointGroup:getComputeNetworkEndpointGroup", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
        "selfLink": args.selfLink,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeNetworkEndpointGroup.
 */
export interface GetComputeNetworkEndpointGroupArgs {
    id?: string;
    name?: string;
    project?: string;
    selfLink?: string;
    zone?: string;
}

/**
 * A collection of values returned by getComputeNetworkEndpointGroup.
 */
export interface GetComputeNetworkEndpointGroupResult {
    readonly defaultPort: number;
    readonly description: string;
    readonly id: string;
    readonly name?: string;
    readonly network: string;
    readonly networkEndpointType: string;
    readonly project?: string;
    readonly selfLink?: string;
    readonly size: number;
    readonly subnetwork: string;
    readonly zone?: string;
}
export function getComputeNetworkEndpointGroupOutput(args?: GetComputeNetworkEndpointGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeNetworkEndpointGroupResult> {
    return pulumi.output(args).apply((a: any) => getComputeNetworkEndpointGroup(a, opts))
}

/**
 * A collection of arguments for invoking getComputeNetworkEndpointGroup.
 */
export interface GetComputeNetworkEndpointGroupOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    selfLink?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
