// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IdentityPlatformConfig extends pulumi.CustomResource {
    /**
     * Get an existing IdentityPlatformConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityPlatformConfigState, opts?: pulumi.CustomResourceOptions): IdentityPlatformConfig {
        return new IdentityPlatformConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/identityPlatformConfig:IdentityPlatformConfig';

    /**
     * Returns true if the given object is an instance of IdentityPlatformConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityPlatformConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityPlatformConfig.__pulumiType;
    }

    /**
     * List of domains authorized for OAuth redirects.
     */
    public readonly authorizedDomains!: pulumi.Output<string[]>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days
     */
    public readonly autodeleteAnonymousUsers!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration related to blocking functions.
     */
    public readonly blockingFunctions!: pulumi.Output<outputs.IdentityPlatformConfigBlockingFunctions | undefined>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    public readonly client!: pulumi.Output<outputs.IdentityPlatformConfigClient | undefined>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    public readonly mfa!: pulumi.Output<outputs.IdentityPlatformConfigMfa | undefined>;
    /**
     * Configuration related to monitoring project activity.
     */
    public readonly monitoring!: pulumi.Output<outputs.IdentityPlatformConfigMonitoring | undefined>;
    /**
     * Configuration related to multi-tenant functionality.
     */
    public readonly multiTenant!: pulumi.Output<outputs.IdentityPlatformConfigMultiTenant | undefined>;
    /**
     * The name of the Config resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Configuration related to quotas.
     */
    public readonly quota!: pulumi.Output<outputs.IdentityPlatformConfigQuota | undefined>;
    /**
     * Configuration related to local sign in methods.
     */
    public readonly signIn!: pulumi.Output<outputs.IdentityPlatformConfigSignIn | undefined>;
    /**
     * Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the
     * calling code of the destination phone number.
     */
    public readonly smsRegionConfig!: pulumi.Output<outputs.IdentityPlatformConfigSmsRegionConfig | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.IdentityPlatformConfigTimeouts | undefined>;

    /**
     * Create a IdentityPlatformConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IdentityPlatformConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityPlatformConfigArgs | IdentityPlatformConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityPlatformConfigState | undefined;
            resourceInputs["authorizedDomains"] = state ? state.authorizedDomains : undefined;
            resourceInputs["autodeleteAnonymousUsers"] = state ? state.autodeleteAnonymousUsers : undefined;
            resourceInputs["blockingFunctions"] = state ? state.blockingFunctions : undefined;
            resourceInputs["client"] = state ? state.client : undefined;
            resourceInputs["mfa"] = state ? state.mfa : undefined;
            resourceInputs["monitoring"] = state ? state.monitoring : undefined;
            resourceInputs["multiTenant"] = state ? state.multiTenant : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["quota"] = state ? state.quota : undefined;
            resourceInputs["signIn"] = state ? state.signIn : undefined;
            resourceInputs["smsRegionConfig"] = state ? state.smsRegionConfig : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as IdentityPlatformConfigArgs | undefined;
            resourceInputs["authorizedDomains"] = args ? args.authorizedDomains : undefined;
            resourceInputs["autodeleteAnonymousUsers"] = args ? args.autodeleteAnonymousUsers : undefined;
            resourceInputs["blockingFunctions"] = args ? args.blockingFunctions : undefined;
            resourceInputs["client"] = args ? args.client : undefined;
            resourceInputs["mfa"] = args ? args.mfa : undefined;
            resourceInputs["monitoring"] = args ? args.monitoring : undefined;
            resourceInputs["multiTenant"] = args ? args.multiTenant : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["quota"] = args ? args.quota : undefined;
            resourceInputs["signIn"] = args ? args.signIn : undefined;
            resourceInputs["smsRegionConfig"] = args ? args.smsRegionConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IdentityPlatformConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IdentityPlatformConfig resources.
 */
export interface IdentityPlatformConfigState {
    /**
     * List of domains authorized for OAuth redirects.
     */
    authorizedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days
     */
    autodeleteAnonymousUsers?: pulumi.Input<boolean>;
    /**
     * Configuration related to blocking functions.
     */
    blockingFunctions?: pulumi.Input<inputs.IdentityPlatformConfigBlockingFunctions>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    client?: pulumi.Input<inputs.IdentityPlatformConfigClient>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    mfa?: pulumi.Input<inputs.IdentityPlatformConfigMfa>;
    /**
     * Configuration related to monitoring project activity.
     */
    monitoring?: pulumi.Input<inputs.IdentityPlatformConfigMonitoring>;
    /**
     * Configuration related to multi-tenant functionality.
     */
    multiTenant?: pulumi.Input<inputs.IdentityPlatformConfigMultiTenant>;
    /**
     * The name of the Config resource
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Configuration related to quotas.
     */
    quota?: pulumi.Input<inputs.IdentityPlatformConfigQuota>;
    /**
     * Configuration related to local sign in methods.
     */
    signIn?: pulumi.Input<inputs.IdentityPlatformConfigSignIn>;
    /**
     * Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the
     * calling code of the destination phone number.
     */
    smsRegionConfig?: pulumi.Input<inputs.IdentityPlatformConfigSmsRegionConfig>;
    timeouts?: pulumi.Input<inputs.IdentityPlatformConfigTimeouts>;
}

/**
 * The set of arguments for constructing a IdentityPlatformConfig resource.
 */
export interface IdentityPlatformConfigArgs {
    /**
     * List of domains authorized for OAuth redirects.
     */
    authorizedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days
     */
    autodeleteAnonymousUsers?: pulumi.Input<boolean>;
    /**
     * Configuration related to blocking functions.
     */
    blockingFunctions?: pulumi.Input<inputs.IdentityPlatformConfigBlockingFunctions>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    client?: pulumi.Input<inputs.IdentityPlatformConfigClient>;
    /**
     * Options related to how clients making requests on behalf of a project should be configured.
     */
    mfa?: pulumi.Input<inputs.IdentityPlatformConfigMfa>;
    /**
     * Configuration related to monitoring project activity.
     */
    monitoring?: pulumi.Input<inputs.IdentityPlatformConfigMonitoring>;
    /**
     * Configuration related to multi-tenant functionality.
     */
    multiTenant?: pulumi.Input<inputs.IdentityPlatformConfigMultiTenant>;
    project?: pulumi.Input<string>;
    /**
     * Configuration related to quotas.
     */
    quota?: pulumi.Input<inputs.IdentityPlatformConfigQuota>;
    /**
     * Configuration related to local sign in methods.
     */
    signIn?: pulumi.Input<inputs.IdentityPlatformConfigSignIn>;
    /**
     * Configures the regions where users are allowed to send verification SMS for the project or tenant. This is based on the
     * calling code of the destination phone number.
     */
    smsRegionConfig?: pulumi.Input<inputs.IdentityPlatformConfigSmsRegionConfig>;
    timeouts?: pulumi.Input<inputs.IdentityPlatformConfigTimeouts>;
}
