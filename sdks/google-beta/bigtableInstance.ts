// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BigtableInstance extends pulumi.CustomResource {
    /**
     * Get an existing BigtableInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BigtableInstanceState, opts?: pulumi.CustomResourceOptions): BigtableInstance {
        return new BigtableInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/bigtableInstance:BigtableInstance';

    /**
     * Returns true if the given object is an instance of BigtableInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BigtableInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BigtableInstance.__pulumiType;
    }

    /**
     * A block of cluster configuration options. This can be specified at least once.
     */
    public readonly clusters!: pulumi.Output<outputs.BigtableInstanceCluster[] | undefined>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * The human-readable display name of the Bigtable instance. Defaults to the instance name.
     */
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * When deleting a BigTable instance, this boolean option will delete all backups within the instance.
     */
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
     *
     * @deprecated Deprecated
     */
    public readonly instanceType!: pulumi.Output<string | undefined>;
    /**
     * A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name (also called Instance Id in the Cloud Console) of the Cloud Bigtable instance. Must be 6-33 characters and must
     * only contain hyphens, lowercase letters and numbers.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.BigtableInstanceTimeouts | undefined>;

    /**
     * Create a BigtableInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BigtableInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BigtableInstanceArgs | BigtableInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BigtableInstanceState | undefined;
            resourceInputs["clusters"] = state ? state.clusters : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BigtableInstanceArgs | undefined;
            resourceInputs["clusters"] = args ? args.clusters : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BigtableInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BigtableInstance resources.
 */
export interface BigtableInstanceState {
    /**
     * A block of cluster configuration options. This can be specified at least once.
     */
    clusters?: pulumi.Input<pulumi.Input<inputs.BigtableInstanceCluster>[]>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The human-readable display name of the Bigtable instance. Defaults to the instance name.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * When deleting a BigTable instance, this boolean option will delete all backups within the instance.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
     *
     * @deprecated Deprecated
     */
    instanceType?: pulumi.Input<string>;
    /**
     * A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name (also called Instance Id in the Cloud Console) of the Cloud Bigtable instance. Must be 6-33 characters and must
     * only contain hyphens, lowercase letters and numbers.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.BigtableInstanceTimeouts>;
}

/**
 * The set of arguments for constructing a BigtableInstance resource.
 */
export interface BigtableInstanceArgs {
    /**
     * A block of cluster configuration options. This can be specified at least once.
     */
    clusters?: pulumi.Input<pulumi.Input<inputs.BigtableInstanceCluster>[]>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The human-readable display name of the Bigtable instance. Defaults to the instance name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * When deleting a BigTable instance, this boolean option will delete all backups within the instance.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
     *
     * @deprecated Deprecated
     */
    instanceType?: pulumi.Input<string>;
    /**
     * A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name (also called Instance Id in the Cloud Console) of the Cloud Bigtable instance. Must be 6-33 characters and must
     * only contain hyphens, lowercase letters and numbers.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BigtableInstanceTimeouts>;
}
