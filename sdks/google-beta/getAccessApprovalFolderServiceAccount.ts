// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccessApprovalFolderServiceAccount(args: GetAccessApprovalFolderServiceAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessApprovalFolderServiceAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getAccessApprovalFolderServiceAccount:getAccessApprovalFolderServiceAccount", {
        "folderId": args.folderId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessApprovalFolderServiceAccount.
 */
export interface GetAccessApprovalFolderServiceAccountArgs {
    folderId: string;
    id?: string;
}

/**
 * A collection of values returned by getAccessApprovalFolderServiceAccount.
 */
export interface GetAccessApprovalFolderServiceAccountResult {
    readonly accountEmail: string;
    readonly folderId: string;
    readonly id: string;
    readonly name: string;
}
export function getAccessApprovalFolderServiceAccountOutput(args: GetAccessApprovalFolderServiceAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessApprovalFolderServiceAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccessApprovalFolderServiceAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccessApprovalFolderServiceAccount.
 */
export interface GetAccessApprovalFolderServiceAccountOutputArgs {
    folderId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
