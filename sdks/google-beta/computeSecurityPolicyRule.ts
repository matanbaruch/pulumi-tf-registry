// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeSecurityPolicyRule extends pulumi.CustomResource {
    /**
     * Get an existing ComputeSecurityPolicyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeSecurityPolicyRuleState, opts?: pulumi.CustomResourceOptions): ComputeSecurityPolicyRule {
        return new ComputeSecurityPolicyRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeSecurityPolicyRule:ComputeSecurityPolicyRule';

    /**
     * Returns true if the given object is an instance of ComputeSecurityPolicyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeSecurityPolicyRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeSecurityPolicyRule.__pulumiType;
    }

    /**
     * The Action to perform when the rule is matched. The following are the valid actions: * allow: allow access to target. *
     * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and
     * 502. * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the
     * threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set. * redirect:
     * redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via
     * a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in
     * Global Security Policies of type CLOUD_ARMOR. * throttle: limit client traffic to the configured threshold. Configure
     * parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
     * enforced.
     */
    public readonly match!: pulumi.Output<outputs.ComputeSecurityPolicyRuleMatch | undefined>;
    /**
     * Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e.,
     * if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     */
    public readonly preconfiguredWafConfig!: pulumi.Output<outputs.ComputeSecurityPolicyRulePreconfiguredWafConfig | undefined>;
    /**
     * If set to true, the specified action is not enforced.
     */
    public readonly preview!: pulumi.Output<boolean | undefined>;
    /**
     * An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
     * 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
     * lowest priority.
     */
    public readonly priority!: pulumi.Output<number>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
     */
    public readonly rateLimitOptions!: pulumi.Output<outputs.ComputeSecurityPolicyRuleRateLimitOptions | undefined>;
    /**
     * The name of the security policy this rule belongs to.
     */
    public readonly securityPolicy!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeSecurityPolicyRuleTimeouts | undefined>;

    /**
     * Create a ComputeSecurityPolicyRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeSecurityPolicyRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeSecurityPolicyRuleArgs | ComputeSecurityPolicyRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeSecurityPolicyRuleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["match"] = state ? state.match : undefined;
            resourceInputs["preconfiguredWafConfig"] = state ? state.preconfiguredWafConfig : undefined;
            resourceInputs["preview"] = state ? state.preview : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["rateLimitOptions"] = state ? state.rateLimitOptions : undefined;
            resourceInputs["securityPolicy"] = state ? state.securityPolicy : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ComputeSecurityPolicyRuleArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.securityPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicy'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["match"] = args ? args.match : undefined;
            resourceInputs["preconfiguredWafConfig"] = args ? args.preconfiguredWafConfig : undefined;
            resourceInputs["preview"] = args ? args.preview : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["rateLimitOptions"] = args ? args.rateLimitOptions : undefined;
            resourceInputs["securityPolicy"] = args ? args.securityPolicy : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeSecurityPolicyRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeSecurityPolicyRule resources.
 */
export interface ComputeSecurityPolicyRuleState {
    /**
     * The Action to perform when the rule is matched. The following are the valid actions: * allow: allow access to target. *
     * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and
     * 502. * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the
     * threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set. * redirect:
     * redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via
     * a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in
     * Global Security Policies of type CLOUD_ARMOR. * throttle: limit client traffic to the configured threshold. Configure
     * parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
     */
    action?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
     * enforced.
     */
    match?: pulumi.Input<inputs.ComputeSecurityPolicyRuleMatch>;
    /**
     * Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e.,
     * if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     */
    preconfiguredWafConfig?: pulumi.Input<inputs.ComputeSecurityPolicyRulePreconfiguredWafConfig>;
    /**
     * If set to true, the specified action is not enforced.
     */
    preview?: pulumi.Input<boolean>;
    /**
     * An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
     * 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
     * lowest priority.
     */
    priority?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
     */
    rateLimitOptions?: pulumi.Input<inputs.ComputeSecurityPolicyRuleRateLimitOptions>;
    /**
     * The name of the security policy this rule belongs to.
     */
    securityPolicy?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeSecurityPolicyRuleTimeouts>;
}

/**
 * The set of arguments for constructing a ComputeSecurityPolicyRule resource.
 */
export interface ComputeSecurityPolicyRuleArgs {
    /**
     * The Action to perform when the rule is matched. The following are the valid actions: * allow: allow access to target. *
     * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and
     * 502. * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the
     * threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set. * redirect:
     * redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via
     * a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in
     * Global Security Policies of type CLOUD_ARMOR. * throttle: limit client traffic to the configured threshold. Configure
     * parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
     */
    action: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
     * enforced.
     */
    match?: pulumi.Input<inputs.ComputeSecurityPolicyRuleMatch>;
    /**
     * Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e.,
     * if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     */
    preconfiguredWafConfig?: pulumi.Input<inputs.ComputeSecurityPolicyRulePreconfiguredWafConfig>;
    /**
     * If set to true, the specified action is not enforced.
     */
    preview?: pulumi.Input<boolean>;
    /**
     * An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
     * 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
     * lowest priority.
     */
    priority: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
     */
    rateLimitOptions?: pulumi.Input<inputs.ComputeSecurityPolicyRuleRateLimitOptions>;
    /**
     * The name of the security policy this rule belongs to.
     */
    securityPolicy: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeSecurityPolicyRuleTimeouts>;
}
