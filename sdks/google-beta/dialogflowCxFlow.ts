// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DialogflowCxFlow extends pulumi.CustomResource {
    /**
     * Get an existing DialogflowCxFlow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DialogflowCxFlowState, opts?: pulumi.CustomResourceOptions): DialogflowCxFlow {
        return new DialogflowCxFlow(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dialogflowCxFlow:DialogflowCxFlow';

    /**
     * Returns true if the given object is an instance of DialogflowCxFlow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DialogflowCxFlow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DialogflowCxFlow.__pulumiType;
    }

    /**
     * Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at
     * the higher level. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
     */
    public readonly advancedSettings!: pulumi.Output<outputs.DialogflowCxFlowAdvancedSettings | undefined>;
    /**
     * The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The human-readable name of the flow.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * A flow's event handlers serve two purposes: They are responsible for handling events (e.g. no match, webhook errors) in
     * the flow. They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common
     * events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the
     * flow. Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event
     * get executed, with the rest being ignored.
     */
    public readonly eventHandlers!: pulumi.Output<outputs.DialogflowCxFlowEventHandler[] | undefined>;
    /**
     * Marks this as the [Default Start Flow](https://cloud.google.com/dialogflow/cx/docs/concept/flow#start) for an agent.
     * When you create an agent, the Default Start Flow is created automatically. The Default Start Flow cannot be deleted;
     * deleting the 'google_dialogflow_cx_flow' resource does nothing to the underlying GCP resources. > Avoid having multiple
     * 'google_dialogflow_cx_flow' resources linked to the same agent with 'is_default_start_flow = true' because they will
     * compete to control a single Default Start Flow resource in GCP.
     */
    public readonly isDefaultStartFlow!: pulumi.Output<boolean | undefined>;
    /**
     * The language of the following fields in flow: Flow.event_handlers.trigger_fulfillment.messages
     * Flow.event_handlers.trigger_fulfillment.conditional_cases Flow.transition_routes.trigger_fulfillment.messages
     * Flow.transition_routes.trigger_fulfillment.conditional_cases If not specified, the agent's default language is used.
     * Many languages are supported. Note: languages must be enabled in the agent before they can be used.
     */
    public readonly languageCode!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of the flow. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
     * ID>.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * NLU related settings of the flow.
     */
    public readonly nluSettings!: pulumi.Output<outputs.DialogflowCxFlowNluSettings | undefined>;
    /**
     * The agent to create a flow for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    public readonly parent!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DialogflowCxFlowTimeouts | undefined>;
    /**
     * A flow's transition route group serve two purposes: They are responsible for matching the user's first utterances in the
     * flow. They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route
     * groups defined in the page have higher priority than those defined in the flow. Format:projects/<Project
     * ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
     */
    public readonly transitionRouteGroups!: pulumi.Output<string[] | undefined>;
    /**
     * A flow's transition routes serve two purposes: They are responsible for matching the user's first utterances in the
     * flow. They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as
     * the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page.
     * Transition routes defined in the page have higher priority than those defined in the flow. TransitionRoutes are
     * evalauted in the following order: TransitionRoutes with intent specified. TransitionRoutes with only condition
     * specified. TransitionRoutes with intent specified are inherited by pages in the flow.
     */
    public readonly transitionRoutes!: pulumi.Output<outputs.DialogflowCxFlowTransitionRoute[] | undefined>;

    /**
     * Create a DialogflowCxFlow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DialogflowCxFlowArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DialogflowCxFlowArgs | DialogflowCxFlowState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DialogflowCxFlowState | undefined;
            resourceInputs["advancedSettings"] = state ? state.advancedSettings : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["eventHandlers"] = state ? state.eventHandlers : undefined;
            resourceInputs["isDefaultStartFlow"] = state ? state.isDefaultStartFlow : undefined;
            resourceInputs["languageCode"] = state ? state.languageCode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nluSettings"] = state ? state.nluSettings : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["transitionRouteGroups"] = state ? state.transitionRouteGroups : undefined;
            resourceInputs["transitionRoutes"] = state ? state.transitionRoutes : undefined;
        } else {
            const args = argsOrState as DialogflowCxFlowArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["advancedSettings"] = args ? args.advancedSettings : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["eventHandlers"] = args ? args.eventHandlers : undefined;
            resourceInputs["isDefaultStartFlow"] = args ? args.isDefaultStartFlow : undefined;
            resourceInputs["languageCode"] = args ? args.languageCode : undefined;
            resourceInputs["nluSettings"] = args ? args.nluSettings : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["transitionRouteGroups"] = args ? args.transitionRouteGroups : undefined;
            resourceInputs["transitionRoutes"] = args ? args.transitionRoutes : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DialogflowCxFlow.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DialogflowCxFlow resources.
 */
export interface DialogflowCxFlowState {
    /**
     * Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at
     * the higher level. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
     */
    advancedSettings?: pulumi.Input<inputs.DialogflowCxFlowAdvancedSettings>;
    /**
     * The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the flow.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A flow's event handlers serve two purposes: They are responsible for handling events (e.g. no match, webhook errors) in
     * the flow. They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common
     * events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the
     * flow. Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event
     * get executed, with the rest being ignored.
     */
    eventHandlers?: pulumi.Input<pulumi.Input<inputs.DialogflowCxFlowEventHandler>[]>;
    /**
     * Marks this as the [Default Start Flow](https://cloud.google.com/dialogflow/cx/docs/concept/flow#start) for an agent.
     * When you create an agent, the Default Start Flow is created automatically. The Default Start Flow cannot be deleted;
     * deleting the 'google_dialogflow_cx_flow' resource does nothing to the underlying GCP resources. > Avoid having multiple
     * 'google_dialogflow_cx_flow' resources linked to the same agent with 'is_default_start_flow = true' because they will
     * compete to control a single Default Start Flow resource in GCP.
     */
    isDefaultStartFlow?: pulumi.Input<boolean>;
    /**
     * The language of the following fields in flow: Flow.event_handlers.trigger_fulfillment.messages
     * Flow.event_handlers.trigger_fulfillment.conditional_cases Flow.transition_routes.trigger_fulfillment.messages
     * Flow.transition_routes.trigger_fulfillment.conditional_cases If not specified, the agent's default language is used.
     * Many languages are supported. Note: languages must be enabled in the agent before they can be used.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * The unique identifier of the flow. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
     * ID>.
     */
    name?: pulumi.Input<string>;
    /**
     * NLU related settings of the flow.
     */
    nluSettings?: pulumi.Input<inputs.DialogflowCxFlowNluSettings>;
    /**
     * The agent to create a flow for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowCxFlowTimeouts>;
    /**
     * A flow's transition route group serve two purposes: They are responsible for matching the user's first utterances in the
     * flow. They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route
     * groups defined in the page have higher priority than those defined in the flow. Format:projects/<Project
     * ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
     */
    transitionRouteGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A flow's transition routes serve two purposes: They are responsible for matching the user's first utterances in the
     * flow. They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as
     * the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page.
     * Transition routes defined in the page have higher priority than those defined in the flow. TransitionRoutes are
     * evalauted in the following order: TransitionRoutes with intent specified. TransitionRoutes with only condition
     * specified. TransitionRoutes with intent specified are inherited by pages in the flow.
     */
    transitionRoutes?: pulumi.Input<pulumi.Input<inputs.DialogflowCxFlowTransitionRoute>[]>;
}

/**
 * The set of arguments for constructing a DialogflowCxFlow resource.
 */
export interface DialogflowCxFlowArgs {
    /**
     * Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at
     * the higher level. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
     */
    advancedSettings?: pulumi.Input<inputs.DialogflowCxFlowAdvancedSettings>;
    /**
     * The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the flow.
     */
    displayName: pulumi.Input<string>;
    /**
     * A flow's event handlers serve two purposes: They are responsible for handling events (e.g. no match, webhook errors) in
     * the flow. They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common
     * events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the
     * flow. Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event
     * get executed, with the rest being ignored.
     */
    eventHandlers?: pulumi.Input<pulumi.Input<inputs.DialogflowCxFlowEventHandler>[]>;
    /**
     * Marks this as the [Default Start Flow](https://cloud.google.com/dialogflow/cx/docs/concept/flow#start) for an agent.
     * When you create an agent, the Default Start Flow is created automatically. The Default Start Flow cannot be deleted;
     * deleting the 'google_dialogflow_cx_flow' resource does nothing to the underlying GCP resources. > Avoid having multiple
     * 'google_dialogflow_cx_flow' resources linked to the same agent with 'is_default_start_flow = true' because they will
     * compete to control a single Default Start Flow resource in GCP.
     */
    isDefaultStartFlow?: pulumi.Input<boolean>;
    /**
     * The language of the following fields in flow: Flow.event_handlers.trigger_fulfillment.messages
     * Flow.event_handlers.trigger_fulfillment.conditional_cases Flow.transition_routes.trigger_fulfillment.messages
     * Flow.transition_routes.trigger_fulfillment.conditional_cases If not specified, the agent's default language is used.
     * Many languages are supported. Note: languages must be enabled in the agent before they can be used.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * NLU related settings of the flow.
     */
    nluSettings?: pulumi.Input<inputs.DialogflowCxFlowNluSettings>;
    /**
     * The agent to create a flow for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowCxFlowTimeouts>;
    /**
     * A flow's transition route group serve two purposes: They are responsible for matching the user's first utterances in the
     * flow. They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route
     * groups defined in the page have higher priority than those defined in the flow. Format:projects/<Project
     * ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
     */
    transitionRouteGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A flow's transition routes serve two purposes: They are responsible for matching the user's first utterances in the
     * flow. They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as
     * the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page.
     * Transition routes defined in the page have higher priority than those defined in the flow. TransitionRoutes are
     * evalauted in the following order: TransitionRoutes with intent specified. TransitionRoutes with only condition
     * specified. TransitionRoutes with intent specified are inherited by pages in the flow.
     */
    transitionRoutes?: pulumi.Input<pulumi.Input<inputs.DialogflowCxFlowTransitionRoute>[]>;
}
