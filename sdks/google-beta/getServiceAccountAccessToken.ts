// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceAccountAccessToken(args: GetServiceAccountAccessTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceAccountAccessTokenResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getServiceAccountAccessToken:getServiceAccountAccessToken", {
        "delegates": args.delegates,
        "id": args.id,
        "lifetime": args.lifetime,
        "scopes": args.scopes,
        "targetServiceAccount": args.targetServiceAccount,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceAccountAccessToken.
 */
export interface GetServiceAccountAccessTokenArgs {
    delegates?: string[];
    id?: string;
    lifetime?: string;
    scopes: string[];
    targetServiceAccount: string;
}

/**
 * A collection of values returned by getServiceAccountAccessToken.
 */
export interface GetServiceAccountAccessTokenResult {
    readonly accessToken: string;
    readonly delegates?: string[];
    readonly id: string;
    readonly lifetime?: string;
    readonly scopes: string[];
    readonly targetServiceAccount: string;
}
export function getServiceAccountAccessTokenOutput(args: GetServiceAccountAccessTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceAccountAccessTokenResult> {
    return pulumi.output(args).apply((a: any) => getServiceAccountAccessToken(a, opts))
}

/**
 * A collection of arguments for invoking getServiceAccountAccessToken.
 */
export interface GetServiceAccountAccessTokenOutputArgs {
    delegates?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    lifetime?: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
    targetServiceAccount: pulumi.Input<string>;
}
