// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeRegions(args?: GetComputeRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeRegionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getComputeRegions:getComputeRegions", {
        "id": args.id,
        "project": args.project,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeRegions.
 */
export interface GetComputeRegionsArgs {
    id?: string;
    project?: string;
    status?: string;
}

/**
 * A collection of values returned by getComputeRegions.
 */
export interface GetComputeRegionsResult {
    readonly id: string;
    readonly names: string[];
    readonly project: string;
    readonly status?: string;
}
export function getComputeRegionsOutput(args?: GetComputeRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeRegionsResult> {
    return pulumi.output(args).apply((a: any) => getComputeRegions(a, opts))
}

/**
 * A collection of arguments for invoking getComputeRegions.
 */
export interface GetComputeRegionsOutputArgs {
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
