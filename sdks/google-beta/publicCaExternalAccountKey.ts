// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PublicCaExternalAccountKey extends pulumi.CustomResource {
    /**
     * Get an existing PublicCaExternalAccountKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PublicCaExternalAccountKeyState, opts?: pulumi.CustomResourceOptions): PublicCaExternalAccountKey {
        return new PublicCaExternalAccountKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/publicCaExternalAccountKey:PublicCaExternalAccountKey';

    /**
     * Returns true if the given object is an instance of PublicCaExternalAccountKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublicCaExternalAccountKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicCaExternalAccountKey.__pulumiType;
    }

    /**
     * Base64-URL-encoded HS256 key. It is generated by the PublicCertificateAuthorityService when the ExternalAccountKey is
     * created.
     */
    public /*out*/ readonly b64MacKey!: pulumi.Output<string>;
    /**
     * It is generated by the PublicCertificateAuthorityService when the ExternalAccountKey is created.
     */
    public /*out*/ readonly keyId!: pulumi.Output<string>;
    /**
     * Location for the externalAccountKey. Currently only 'global' is supported.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Resource name. projects/{project}/locations/{location}/externalAccountKeys/{keyId}.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.PublicCaExternalAccountKeyTimeouts | undefined>;

    /**
     * Create a PublicCaExternalAccountKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PublicCaExternalAccountKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PublicCaExternalAccountKeyArgs | PublicCaExternalAccountKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PublicCaExternalAccountKeyState | undefined;
            resourceInputs["b64MacKey"] = state ? state.b64MacKey : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as PublicCaExternalAccountKeyArgs | undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["b64MacKey"] = undefined /*out*/;
            resourceInputs["keyId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["b64MacKey", "keyId"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PublicCaExternalAccountKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PublicCaExternalAccountKey resources.
 */
export interface PublicCaExternalAccountKeyState {
    /**
     * Base64-URL-encoded HS256 key. It is generated by the PublicCertificateAuthorityService when the ExternalAccountKey is
     * created.
     */
    b64MacKey?: pulumi.Input<string>;
    /**
     * It is generated by the PublicCertificateAuthorityService when the ExternalAccountKey is created.
     */
    keyId?: pulumi.Input<string>;
    /**
     * Location for the externalAccountKey. Currently only 'global' is supported.
     */
    location?: pulumi.Input<string>;
    /**
     * Resource name. projects/{project}/locations/{location}/externalAccountKeys/{keyId}.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PublicCaExternalAccountKeyTimeouts>;
}

/**
 * The set of arguments for constructing a PublicCaExternalAccountKey resource.
 */
export interface PublicCaExternalAccountKeyArgs {
    /**
     * Location for the externalAccountKey. Currently only 'global' is supported.
     */
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PublicCaExternalAccountKeyTimeouts>;
}
