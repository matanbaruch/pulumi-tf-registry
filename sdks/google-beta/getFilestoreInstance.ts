// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFilestoreInstance(args: GetFilestoreInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetFilestoreInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getFilestoreInstance:getFilestoreInstance", {
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFilestoreInstance.
 */
export interface GetFilestoreInstanceArgs {
    id?: string;
    location?: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getFilestoreInstance.
 */
export interface GetFilestoreInstanceResult {
    readonly createTime: string;
    readonly description: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly etag: string;
    readonly fileShares: outputs.GetFilestoreInstanceFileShare[];
    readonly id: string;
    readonly kmsKeyName: string;
    readonly labels: {[key: string]: string};
    readonly location?: string;
    readonly name: string;
    readonly networks: outputs.GetFilestoreInstanceNetwork[];
    readonly project?: string;
    readonly protocol: string;
    readonly terraformLabels: {[key: string]: string};
    readonly tier: string;
    readonly zone: string;
}
export function getFilestoreInstanceOutput(args: GetFilestoreInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFilestoreInstanceResult> {
    return pulumi.output(args).apply((a: any) => getFilestoreInstance(a, opts))
}

/**
 * A collection of arguments for invoking getFilestoreInstance.
 */
export interface GetFilestoreInstanceOutputArgs {
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
