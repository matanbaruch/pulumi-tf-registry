// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageManagedFolderIamPolicy(args: GetStorageManagedFolderIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageManagedFolderIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getStorageManagedFolderIamPolicy:getStorageManagedFolderIamPolicy", {
        "bucket": args.bucket,
        "id": args.id,
        "managedFolder": args.managedFolder,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageManagedFolderIamPolicy.
 */
export interface GetStorageManagedFolderIamPolicyArgs {
    bucket: string;
    id?: string;
    managedFolder: string;
}

/**
 * A collection of values returned by getStorageManagedFolderIamPolicy.
 */
export interface GetStorageManagedFolderIamPolicyResult {
    readonly bucket: string;
    readonly etag: string;
    readonly id: string;
    readonly managedFolder: string;
    readonly policyData: string;
}
export function getStorageManagedFolderIamPolicyOutput(args: GetStorageManagedFolderIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageManagedFolderIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getStorageManagedFolderIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getStorageManagedFolderIamPolicy.
 */
export interface GetStorageManagedFolderIamPolicyOutputArgs {
    bucket: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    managedFolder: pulumi.Input<string>;
}
