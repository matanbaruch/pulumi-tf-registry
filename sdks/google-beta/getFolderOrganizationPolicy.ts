// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFolderOrganizationPolicy(args: GetFolderOrganizationPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetFolderOrganizationPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getFolderOrganizationPolicy:getFolderOrganizationPolicy", {
        "constraint": args.constraint,
        "folder": args.folder,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFolderOrganizationPolicy.
 */
export interface GetFolderOrganizationPolicyArgs {
    constraint: string;
    folder: string;
    id?: string;
}

/**
 * A collection of values returned by getFolderOrganizationPolicy.
 */
export interface GetFolderOrganizationPolicyResult {
    readonly booleanPolicies: outputs.GetFolderOrganizationPolicyBooleanPolicy[];
    readonly constraint: string;
    readonly etag: string;
    readonly folder: string;
    readonly id: string;
    readonly listPolicies: outputs.GetFolderOrganizationPolicyListPolicy[];
    readonly restorePolicies: outputs.GetFolderOrganizationPolicyRestorePolicy[];
    readonly updateTime: string;
    readonly version: number;
}
export function getFolderOrganizationPolicyOutput(args: GetFolderOrganizationPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFolderOrganizationPolicyResult> {
    return pulumi.output(args).apply((a: any) => getFolderOrganizationPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getFolderOrganizationPolicy.
 */
export interface GetFolderOrganizationPolicyOutputArgs {
    constraint: pulumi.Input<string>;
    folder: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
