// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecretManagerSecretVersionAccess(args: GetSecretManagerSecretVersionAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretManagerSecretVersionAccessResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getSecretManagerSecretVersionAccess:getSecretManagerSecretVersionAccess", {
        "id": args.id,
        "project": args.project,
        "secret": args.secret,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretManagerSecretVersionAccess.
 */
export interface GetSecretManagerSecretVersionAccessArgs {
    id?: string;
    project?: string;
    secret: string;
    version?: string;
}

/**
 * A collection of values returned by getSecretManagerSecretVersionAccess.
 */
export interface GetSecretManagerSecretVersionAccessResult {
    readonly id: string;
    readonly name: string;
    readonly project: string;
    readonly secret: string;
    readonly secretData: string;
    readonly version: string;
}
export function getSecretManagerSecretVersionAccessOutput(args: GetSecretManagerSecretVersionAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretManagerSecretVersionAccessResult> {
    return pulumi.output(args).apply((a: any) => getSecretManagerSecretVersionAccess(a, opts))
}

/**
 * A collection of arguments for invoking getSecretManagerSecretVersionAccess.
 */
export interface GetSecretManagerSecretVersionAccessOutputArgs {
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
