// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkServicesLbRouteExtension extends pulumi.CustomResource {
    /**
     * Get an existing NetworkServicesLbRouteExtension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkServicesLbRouteExtensionState, opts?: pulumi.CustomResourceOptions): NetworkServicesLbRouteExtension {
        return new NetworkServicesLbRouteExtension(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/networkServicesLbRouteExtension:NetworkServicesLbRouteExtension';

    /**
     * Returns true if the given object is an instance of NetworkServicesLbRouteExtension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkServicesLbRouteExtension {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkServicesLbRouteExtension.__pulumiType;
    }

    /**
     * A human-readable description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each
     * extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that
     * matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per
     * resource.
     */
    public readonly extensionChains!: pulumi.Output<outputs.NetworkServicesLbRouteExtensionExtensionChain[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding
     * rule is required. There can be only one LbRouteExtension resource per forwarding rule.
     */
    public readonly forwardingRules!: pulumi.Output<string[]>;
    /**
     * Set of labels associated with the LbRouteExtension resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
     * more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
     * [Supported application load
     * balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
     * ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
     */
    public readonly loadBalancingScheme!: pulumi.Output<string>;
    /**
     * The location of the route extension
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Name of the LbRouteExtension resource in the following format:
     * projects/{project}/locations/{location}/lbRouteExtensions/{lbRouteExtension}
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.NetworkServicesLbRouteExtensionTimeouts | undefined>;

    /**
     * Create a NetworkServicesLbRouteExtension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkServicesLbRouteExtensionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkServicesLbRouteExtensionArgs | NetworkServicesLbRouteExtensionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkServicesLbRouteExtensionState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["extensionChains"] = state ? state.extensionChains : undefined;
            resourceInputs["forwardingRules"] = state ? state.forwardingRules : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["loadBalancingScheme"] = state ? state.loadBalancingScheme : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as NetworkServicesLbRouteExtensionArgs | undefined;
            if ((!args || args.extensionChains === undefined) && !opts.urn) {
                throw new Error("Missing required property 'extensionChains'");
            }
            if ((!args || args.forwardingRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardingRules'");
            }
            if ((!args || args.loadBalancingScheme === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancingScheme'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["extensionChains"] = args ? args.extensionChains : undefined;
            resourceInputs["forwardingRules"] = args ? args.forwardingRules : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["loadBalancingScheme"] = args ? args.loadBalancingScheme : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkServicesLbRouteExtension.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkServicesLbRouteExtension resources.
 */
export interface NetworkServicesLbRouteExtensionState {
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each
     * extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that
     * matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per
     * resource.
     */
    extensionChains?: pulumi.Input<pulumi.Input<inputs.NetworkServicesLbRouteExtensionExtensionChain>[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding
     * rule is required. There can be only one LbRouteExtension resource per forwarding rule.
     */
    forwardingRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of labels associated with the LbRouteExtension resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
     * more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
     * [Supported application load
     * balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
     * ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
     */
    loadBalancingScheme?: pulumi.Input<string>;
    /**
     * The location of the route extension
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the LbRouteExtension resource in the following format:
     * projects/{project}/locations/{location}/lbRouteExtensions/{lbRouteExtension}
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.NetworkServicesLbRouteExtensionTimeouts>;
}

/**
 * The set of arguments for constructing a NetworkServicesLbRouteExtension resource.
 */
export interface NetworkServicesLbRouteExtensionArgs {
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute. Match conditions for each
     * extension chain are evaluated in sequence for a given request. The first extension chain that has a condition that
     * matches the request is executed. Any subsequent extension chains do not execute. Limited to 5 extension chains per
     * resource.
     */
    extensionChains: pulumi.Input<pulumi.Input<inputs.NetworkServicesLbRouteExtensionExtensionChain>[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to. At least one forwarding
     * rule is required. There can be only one LbRouteExtension resource per forwarding rule.
     */
    forwardingRules: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of labels associated with the LbRouteExtension resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
     * more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
     * [Supported application load
     * balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs). Possible values:
     * ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
     */
    loadBalancingScheme: pulumi.Input<string>;
    /**
     * The location of the route extension
     */
    location: pulumi.Input<string>;
    /**
     * Name of the LbRouteExtension resource in the following format:
     * projects/{project}/locations/{location}/lbRouteExtensions/{lbRouteExtension}
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.NetworkServicesLbRouteExtensionTimeouts>;
}
