// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkServicesServiceLbPolicies extends pulumi.CustomResource {
    /**
     * Get an existing NetworkServicesServiceLbPolicies resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkServicesServiceLbPoliciesState, opts?: pulumi.CustomResourceOptions): NetworkServicesServiceLbPolicies {
        return new NetworkServicesServiceLbPolicies(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/networkServicesServiceLbPolicies:NetworkServicesServiceLbPolicies';

    /**
     * Returns true if the given object is an instance of NetworkServicesServiceLbPolicies.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkServicesServiceLbPolicies {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkServicesServiceLbPolicies.__pulumiType;
    }

    /**
     * Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
     */
    public readonly autoCapacityDrain!: pulumi.Output<outputs.NetworkServicesServiceLbPoliciesAutoCapacityDrain | undefined>;
    /**
     * Time the ServiceLbPolicy was created in UTC.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
     */
    public readonly failoverConfig!: pulumi.Output<outputs.NetworkServicesServiceLbPoliciesFailoverConfig | undefined>;
    /**
     * Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
     * ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
     */
    public readonly loadBalancingAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * The location of the service lb policy.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Name of the ServiceLbPolicy resource. It matches pattern
     * 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.NetworkServicesServiceLbPoliciesTimeouts | undefined>;
    /**
     * Time the ServiceLbPolicy was updated in UTC.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a NetworkServicesServiceLbPolicies resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkServicesServiceLbPoliciesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkServicesServiceLbPoliciesArgs | NetworkServicesServiceLbPoliciesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkServicesServiceLbPoliciesState | undefined;
            resourceInputs["autoCapacityDrain"] = state ? state.autoCapacityDrain : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["failoverConfig"] = state ? state.failoverConfig : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["loadBalancingAlgorithm"] = state ? state.loadBalancingAlgorithm : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as NetworkServicesServiceLbPoliciesArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["autoCapacityDrain"] = args ? args.autoCapacityDrain : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["failoverConfig"] = args ? args.failoverConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["loadBalancingAlgorithm"] = args ? args.loadBalancingAlgorithm : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkServicesServiceLbPolicies.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkServicesServiceLbPolicies resources.
 */
export interface NetworkServicesServiceLbPoliciesState {
    /**
     * Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
     */
    autoCapacityDrain?: pulumi.Input<inputs.NetworkServicesServiceLbPoliciesAutoCapacityDrain>;
    /**
     * Time the ServiceLbPolicy was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
     */
    failoverConfig?: pulumi.Input<inputs.NetworkServicesServiceLbPoliciesFailoverConfig>;
    /**
     * Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
     * ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
     */
    loadBalancingAlgorithm?: pulumi.Input<string>;
    /**
     * The location of the service lb policy.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the ServiceLbPolicy resource. It matches pattern
     * 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.NetworkServicesServiceLbPoliciesTimeouts>;
    /**
     * Time the ServiceLbPolicy was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkServicesServiceLbPolicies resource.
 */
export interface NetworkServicesServiceLbPoliciesArgs {
    /**
     * Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
     */
    autoCapacityDrain?: pulumi.Input<inputs.NetworkServicesServiceLbPoliciesAutoCapacityDrain>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
     */
    failoverConfig?: pulumi.Input<inputs.NetworkServicesServiceLbPoliciesFailoverConfig>;
    /**
     * Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
     * ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
     */
    loadBalancingAlgorithm?: pulumi.Input<string>;
    /**
     * The location of the service lb policy.
     */
    location: pulumi.Input<string>;
    /**
     * Name of the ServiceLbPolicy resource. It matches pattern
     * 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.NetworkServicesServiceLbPoliciesTimeouts>;
}
