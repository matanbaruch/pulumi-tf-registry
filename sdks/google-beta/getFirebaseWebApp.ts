// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirebaseWebApp(args: GetFirebaseWebAppArgs, opts?: pulumi.InvokeOptions): Promise<GetFirebaseWebAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getFirebaseWebApp:getFirebaseWebApp", {
        "appId": args.appId,
        "id": args.id,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirebaseWebApp.
 */
export interface GetFirebaseWebAppArgs {
    appId: string;
    id?: string;
    project?: string;
}

/**
 * A collection of values returned by getFirebaseWebApp.
 */
export interface GetFirebaseWebAppResult {
    readonly apiKeyId: string;
    readonly appId: string;
    readonly appUrls: string[];
    readonly deletionPolicy: string;
    readonly displayName: string;
    readonly id: string;
    readonly name: string;
    readonly project?: string;
}
export function getFirebaseWebAppOutput(args: GetFirebaseWebAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirebaseWebAppResult> {
    return pulumi.output(args).apply((a: any) => getFirebaseWebApp(a, opts))
}

/**
 * A collection of arguments for invoking getFirebaseWebApp.
 */
export interface GetFirebaseWebAppOutputArgs {
    appId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
