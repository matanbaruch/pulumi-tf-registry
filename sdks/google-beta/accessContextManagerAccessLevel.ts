// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AccessContextManagerAccessLevel extends pulumi.CustomResource {
    /**
     * Get an existing AccessContextManagerAccessLevel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessContextManagerAccessLevelState, opts?: pulumi.CustomResourceOptions): AccessContextManagerAccessLevel {
        return new AccessContextManagerAccessLevel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/accessContextManagerAccessLevel:AccessContextManagerAccessLevel';

    /**
     * Returns true if the given object is an instance of AccessContextManagerAccessLevel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessContextManagerAccessLevel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessContextManagerAccessLevel.__pulumiType;
    }

    /**
     * A set of predefined conditions for the access level and a combining function.
     */
    public readonly basic!: pulumi.Output<outputs.AccessContextManagerAccessLevelBasic | undefined>;
    /**
     * Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions
     * for the level to apply to a request. See CEL spec at: https://github.com/google/cel-spec.
     */
    public readonly custom!: pulumi.Output<outputs.AccessContextManagerAccessLevelCustom | undefined>;
    /**
     * Description of the AccessLevel and its use. Does not affect behavior.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Resource name for the Access Level. The short_name component must begin with a letter and only include alphanumeric and
     * '_'. Format: accessPolicies/{policy_id}/accessLevels/{short_name}
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The AccessPolicy this AccessLevel lives in. Format: accessPolicies/{policy_id}
     */
    public readonly parent!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AccessContextManagerAccessLevelTimeouts | undefined>;
    /**
     * Human readable title. Must be unique within the Policy.
     */
    public readonly title!: pulumi.Output<string>;

    /**
     * Create a AccessContextManagerAccessLevel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessContextManagerAccessLevelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessContextManagerAccessLevelArgs | AccessContextManagerAccessLevelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessContextManagerAccessLevelState | undefined;
            resourceInputs["basic"] = state ? state.basic : undefined;
            resourceInputs["custom"] = state ? state.custom : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
        } else {
            const args = argsOrState as AccessContextManagerAccessLevelArgs | undefined;
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["basic"] = args ? args.basic : undefined;
            resourceInputs["custom"] = args ? args.custom : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessContextManagerAccessLevel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AccessContextManagerAccessLevel resources.
 */
export interface AccessContextManagerAccessLevelState {
    /**
     * A set of predefined conditions for the access level and a combining function.
     */
    basic?: pulumi.Input<inputs.AccessContextManagerAccessLevelBasic>;
    /**
     * Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions
     * for the level to apply to a request. See CEL spec at: https://github.com/google/cel-spec.
     */
    custom?: pulumi.Input<inputs.AccessContextManagerAccessLevelCustom>;
    /**
     * Description of the AccessLevel and its use. Does not affect behavior.
     */
    description?: pulumi.Input<string>;
    /**
     * Resource name for the Access Level. The short_name component must begin with a letter and only include alphanumeric and
     * '_'. Format: accessPolicies/{policy_id}/accessLevels/{short_name}
     */
    name?: pulumi.Input<string>;
    /**
     * The AccessPolicy this AccessLevel lives in. Format: accessPolicies/{policy_id}
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AccessContextManagerAccessLevelTimeouts>;
    /**
     * Human readable title. Must be unique within the Policy.
     */
    title?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessContextManagerAccessLevel resource.
 */
export interface AccessContextManagerAccessLevelArgs {
    /**
     * A set of predefined conditions for the access level and a combining function.
     */
    basic?: pulumi.Input<inputs.AccessContextManagerAccessLevelBasic>;
    /**
     * Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions
     * for the level to apply to a request. See CEL spec at: https://github.com/google/cel-spec.
     */
    custom?: pulumi.Input<inputs.AccessContextManagerAccessLevelCustom>;
    /**
     * Description of the AccessLevel and its use. Does not affect behavior.
     */
    description?: pulumi.Input<string>;
    /**
     * Resource name for the Access Level. The short_name component must begin with a letter and only include alphanumeric and
     * '_'. Format: accessPolicies/{policy_id}/accessLevels/{short_name}
     */
    name?: pulumi.Input<string>;
    /**
     * The AccessPolicy this AccessLevel lives in. Format: accessPolicies/{policy_id}
     */
    parent: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AccessContextManagerAccessLevelTimeouts>;
    /**
     * Human readable title. Must be unique within the Policy.
     */
    title: pulumi.Input<string>;
}
