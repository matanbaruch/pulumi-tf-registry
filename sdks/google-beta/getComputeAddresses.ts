// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeAddresses(args?: GetComputeAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeAddressesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getComputeAddresses:getComputeAddresses", {
        "filter": args.filter,
        "id": args.id,
        "project": args.project,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeAddresses.
 */
export interface GetComputeAddressesArgs {
    filter?: string;
    id?: string;
    project?: string;
    region?: string;
}

/**
 * A collection of values returned by getComputeAddresses.
 */
export interface GetComputeAddressesResult {
    readonly addresses: outputs.GetComputeAddressesAddress[];
    readonly filter?: string;
    readonly id: string;
    readonly project: string;
    readonly region?: string;
}
export function getComputeAddressesOutput(args?: GetComputeAddressesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeAddressesResult> {
    return pulumi.output(args).apply((a: any) => getComputeAddresses(a, opts))
}

/**
 * A collection of arguments for invoking getComputeAddresses.
 */
export interface GetComputeAddressesOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
