// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageBucketIamPolicy(args: GetStorageBucketIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageBucketIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getStorageBucketIamPolicy:getStorageBucketIamPolicy", {
        "bucket": args.bucket,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageBucketIamPolicy.
 */
export interface GetStorageBucketIamPolicyArgs {
    bucket: string;
    id?: string;
}

/**
 * A collection of values returned by getStorageBucketIamPolicy.
 */
export interface GetStorageBucketIamPolicyResult {
    readonly bucket: string;
    readonly etag: string;
    readonly id: string;
    readonly policyData: string;
}
export function getStorageBucketIamPolicyOutput(args: GetStorageBucketIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageBucketIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getStorageBucketIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getStorageBucketIamPolicy.
 */
export interface GetStorageBucketIamPolicyOutputArgs {
    bucket: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
