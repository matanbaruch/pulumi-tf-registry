// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComposerUserWorkloadsConfigMap extends pulumi.CustomResource {
    /**
     * Get an existing ComposerUserWorkloadsConfigMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComposerUserWorkloadsConfigMapState, opts?: pulumi.CustomResourceOptions): ComposerUserWorkloadsConfigMap {
        return new ComposerUserWorkloadsConfigMap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/composerUserWorkloadsConfigMap:ComposerUserWorkloadsConfigMap';

    /**
     * Returns true if the given object is an instance of ComposerUserWorkloadsConfigMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComposerUserWorkloadsConfigMap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComposerUserWorkloadsConfigMap.__pulumiType;
    }

    /**
     * The "data" field of Kubernetes ConfigMap, organized in key-value pairs. For details see:
     * https://kubernetes.io/docs/concepts/configuration/configmap/
     */
    public readonly data!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Environment where the Kubernetes ConfigMap will be stored and used.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * Name of the Kubernetes ConfigMap.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The location or Compute Engine region for the environment.
     */
    public readonly region!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ComposerUserWorkloadsConfigMapTimeouts | undefined>;

    /**
     * Create a ComposerUserWorkloadsConfigMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComposerUserWorkloadsConfigMapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComposerUserWorkloadsConfigMapArgs | ComposerUserWorkloadsConfigMapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComposerUserWorkloadsConfigMapState | undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ComposerUserWorkloadsConfigMapArgs | undefined;
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComposerUserWorkloadsConfigMap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComposerUserWorkloadsConfigMap resources.
 */
export interface ComposerUserWorkloadsConfigMapState {
    /**
     * The "data" field of Kubernetes ConfigMap, organized in key-value pairs. For details see:
     * https://kubernetes.io/docs/concepts/configuration/configmap/
     */
    data?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Environment where the Kubernetes ConfigMap will be stored and used.
     */
    environment?: pulumi.Input<string>;
    /**
     * Name of the Kubernetes ConfigMap.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The location or Compute Engine region for the environment.
     */
    region?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComposerUserWorkloadsConfigMapTimeouts>;
}

/**
 * The set of arguments for constructing a ComposerUserWorkloadsConfigMap resource.
 */
export interface ComposerUserWorkloadsConfigMapArgs {
    /**
     * The "data" field of Kubernetes ConfigMap, organized in key-value pairs. For details see:
     * https://kubernetes.io/docs/concepts/configuration/configmap/
     */
    data?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Environment where the Kubernetes ConfigMap will be stored and used.
     */
    environment: pulumi.Input<string>;
    /**
     * Name of the Kubernetes ConfigMap.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The location or Compute Engine region for the environment.
     */
    region?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComposerUserWorkloadsConfigMapTimeouts>;
}
