// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKmsCryptoKey(args: GetKmsCryptoKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKmsCryptoKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getKmsCryptoKey:getKmsCryptoKey", {
        "id": args.id,
        "keyRing": args.keyRing,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKmsCryptoKey.
 */
export interface GetKmsCryptoKeyArgs {
    id?: string;
    keyRing: string;
    name: string;
}

/**
 * A collection of values returned by getKmsCryptoKey.
 */
export interface GetKmsCryptoKeyResult {
    readonly cryptoKeyBackend: string;
    readonly destroyScheduledDuration: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly id: string;
    readonly importOnly: boolean;
    readonly keyAccessJustificationsPolicies: outputs.GetKmsCryptoKeyKeyAccessJustificationsPolicy[];
    readonly keyRing: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly primaries: outputs.GetKmsCryptoKeyPrimary[];
    readonly purpose: string;
    readonly rotationPeriod: string;
    readonly skipInitialVersionCreation: boolean;
    readonly terraformLabels: {[key: string]: string};
    readonly versionTemplates: outputs.GetKmsCryptoKeyVersionTemplate[];
}
export function getKmsCryptoKeyOutput(args: GetKmsCryptoKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKmsCryptoKeyResult> {
    return pulumi.output(args).apply((a: any) => getKmsCryptoKey(a, opts))
}

/**
 * A collection of arguments for invoking getKmsCryptoKey.
 */
export interface GetKmsCryptoKeyOutputArgs {
    id?: pulumi.Input<string>;
    keyRing: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
