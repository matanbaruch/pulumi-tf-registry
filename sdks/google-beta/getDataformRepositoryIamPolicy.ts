// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDataformRepositoryIamPolicy(args: GetDataformRepositoryIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDataformRepositoryIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getDataformRepositoryIamPolicy:getDataformRepositoryIamPolicy", {
        "id": args.id,
        "project": args.project,
        "region": args.region,
        "repository": args.repository,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataformRepositoryIamPolicy.
 */
export interface GetDataformRepositoryIamPolicyArgs {
    id?: string;
    project?: string;
    region?: string;
    repository: string;
}

/**
 * A collection of values returned by getDataformRepositoryIamPolicy.
 */
export interface GetDataformRepositoryIamPolicyResult {
    readonly etag: string;
    readonly id: string;
    readonly policyData: string;
    readonly project: string;
    readonly region: string;
    readonly repository: string;
}
export function getDataformRepositoryIamPolicyOutput(args: GetDataformRepositoryIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataformRepositoryIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getDataformRepositoryIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getDataformRepositoryIamPolicy.
 */
export interface GetDataformRepositoryIamPolicyOutputArgs {
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    repository: pulumi.Input<string>;
}
