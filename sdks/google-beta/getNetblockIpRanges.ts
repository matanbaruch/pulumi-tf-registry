// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetblockIpRanges(args?: GetNetblockIpRangesArgs, opts?: pulumi.InvokeOptions): Promise<GetNetblockIpRangesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getNetblockIpRanges:getNetblockIpRanges", {
        "id": args.id,
        "rangeType": args.rangeType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetblockIpRanges.
 */
export interface GetNetblockIpRangesArgs {
    id?: string;
    rangeType?: string;
}

/**
 * A collection of values returned by getNetblockIpRanges.
 */
export interface GetNetblockIpRangesResult {
    readonly cidrBlocks: string[];
    readonly cidrBlocksIpv4s: string[];
    readonly cidrBlocksIpv6s: string[];
    readonly id: string;
    readonly rangeType?: string;
}
export function getNetblockIpRangesOutput(args?: GetNetblockIpRangesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetblockIpRangesResult> {
    return pulumi.output(args).apply((a: any) => getNetblockIpRanges(a, opts))
}

/**
 * A collection of arguments for invoking getNetblockIpRanges.
 */
export interface GetNetblockIpRangesOutputArgs {
    id?: pulumi.Input<string>;
    rangeType?: pulumi.Input<string>;
}
