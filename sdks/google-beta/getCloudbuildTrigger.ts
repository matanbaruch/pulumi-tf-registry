// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudbuildTrigger(args: GetCloudbuildTriggerArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudbuildTriggerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getCloudbuildTrigger:getCloudbuildTrigger", {
        "id": args.id,
        "location": args.location,
        "project": args.project,
        "triggerId": args.triggerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudbuildTrigger.
 */
export interface GetCloudbuildTriggerArgs {
    id?: string;
    location: string;
    project?: string;
    triggerId: string;
}

/**
 * A collection of values returned by getCloudbuildTrigger.
 */
export interface GetCloudbuildTriggerResult {
    readonly approvalConfigs: outputs.GetCloudbuildTriggerApprovalConfig[];
    readonly bitbucketServerTriggerConfigs: outputs.GetCloudbuildTriggerBitbucketServerTriggerConfig[];
    readonly builds: outputs.GetCloudbuildTriggerBuild[];
    readonly createTime: string;
    readonly description: string;
    readonly disabled: boolean;
    readonly filename: string;
    readonly filter: string;
    readonly gitFileSources: outputs.GetCloudbuildTriggerGitFileSource[];
    readonly githubs: outputs.GetCloudbuildTriggerGithub[];
    readonly id: string;
    readonly ignoredFiles: string[];
    readonly includeBuildLogs: string;
    readonly includedFiles: string[];
    readonly location: string;
    readonly name: string;
    readonly project?: string;
    readonly pubsubConfigs: outputs.GetCloudbuildTriggerPubsubConfig[];
    readonly repositoryEventConfigs: outputs.GetCloudbuildTriggerRepositoryEventConfig[];
    readonly serviceAccount: string;
    readonly sourceToBuilds: outputs.GetCloudbuildTriggerSourceToBuild[];
    readonly substitutions: {[key: string]: string};
    readonly tags: string[];
    readonly triggerId: string;
    readonly triggerTemplates: outputs.GetCloudbuildTriggerTriggerTemplate[];
    readonly webhookConfigs: outputs.GetCloudbuildTriggerWebhookConfig[];
}
export function getCloudbuildTriggerOutput(args: GetCloudbuildTriggerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudbuildTriggerResult> {
    return pulumi.output(args).apply((a: any) => getCloudbuildTrigger(a, opts))
}

/**
 * A collection of arguments for invoking getCloudbuildTrigger.
 */
export interface GetCloudbuildTriggerOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    triggerId: pulumi.Input<string>;
}
