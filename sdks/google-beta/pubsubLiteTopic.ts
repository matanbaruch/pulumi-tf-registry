// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PubsubLiteTopic extends pulumi.CustomResource {
    /**
     * Get an existing PubsubLiteTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PubsubLiteTopicState, opts?: pulumi.CustomResourceOptions): PubsubLiteTopic {
        return new PubsubLiteTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/pubsubLiteTopic:PubsubLiteTopic';

    /**
     * Returns true if the given object is an instance of PubsubLiteTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PubsubLiteTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PubsubLiteTopic.__pulumiType;
    }

    /**
     * Name of the topic.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The settings for this topic's partitions.
     */
    public readonly partitionConfig!: pulumi.Output<outputs.PubsubLiteTopicPartitionConfig | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The region of the pubsub lite topic.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The settings for this topic's Reservation usage.
     */
    public readonly reservationConfig!: pulumi.Output<outputs.PubsubLiteTopicReservationConfig | undefined>;
    /**
     * The settings for a topic's message retention.
     */
    public readonly retentionConfig!: pulumi.Output<outputs.PubsubLiteTopicRetentionConfig | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.PubsubLiteTopicTimeouts | undefined>;
    /**
     * The zone of the pubsub lite topic.
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a PubsubLiteTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PubsubLiteTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PubsubLiteTopicArgs | PubsubLiteTopicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PubsubLiteTopicState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["partitionConfig"] = state ? state.partitionConfig : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["reservationConfig"] = state ? state.reservationConfig : undefined;
            resourceInputs["retentionConfig"] = state ? state.retentionConfig : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as PubsubLiteTopicArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["partitionConfig"] = args ? args.partitionConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["reservationConfig"] = args ? args.reservationConfig : undefined;
            resourceInputs["retentionConfig"] = args ? args.retentionConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PubsubLiteTopic.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PubsubLiteTopic resources.
 */
export interface PubsubLiteTopicState {
    /**
     * Name of the topic.
     */
    name?: pulumi.Input<string>;
    /**
     * The settings for this topic's partitions.
     */
    partitionConfig?: pulumi.Input<inputs.PubsubLiteTopicPartitionConfig>;
    project?: pulumi.Input<string>;
    /**
     * The region of the pubsub lite topic.
     */
    region?: pulumi.Input<string>;
    /**
     * The settings for this topic's Reservation usage.
     */
    reservationConfig?: pulumi.Input<inputs.PubsubLiteTopicReservationConfig>;
    /**
     * The settings for a topic's message retention.
     */
    retentionConfig?: pulumi.Input<inputs.PubsubLiteTopicRetentionConfig>;
    timeouts?: pulumi.Input<inputs.PubsubLiteTopicTimeouts>;
    /**
     * The zone of the pubsub lite topic.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PubsubLiteTopic resource.
 */
export interface PubsubLiteTopicArgs {
    /**
     * Name of the topic.
     */
    name?: pulumi.Input<string>;
    /**
     * The settings for this topic's partitions.
     */
    partitionConfig?: pulumi.Input<inputs.PubsubLiteTopicPartitionConfig>;
    project?: pulumi.Input<string>;
    /**
     * The region of the pubsub lite topic.
     */
    region?: pulumi.Input<string>;
    /**
     * The settings for this topic's Reservation usage.
     */
    reservationConfig?: pulumi.Input<inputs.PubsubLiteTopicReservationConfig>;
    /**
     * The settings for a topic's message retention.
     */
    retentionConfig?: pulumi.Input<inputs.PubsubLiteTopicRetentionConfig>;
    timeouts?: pulumi.Input<inputs.PubsubLiteTopicTimeouts>;
    /**
     * The zone of the pubsub lite topic.
     */
    zone?: pulumi.Input<string>;
}
