// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DialogflowCxPage extends pulumi.CustomResource {
    /**
     * Get an existing DialogflowCxPage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DialogflowCxPageState, opts?: pulumi.CustomResourceOptions): DialogflowCxPage {
        return new DialogflowCxPage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dialogflowCxPage:DialogflowCxPage';

    /**
     * Returns true if the given object is an instance of DialogflowCxPage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DialogflowCxPage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DialogflowCxPage.__pulumiType;
    }

    /**
     * Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at
     * the higher level. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
     */
    public readonly advancedSettings!: pulumi.Output<outputs.DialogflowCxPageAdvancedSettings | undefined>;
    /**
     * The human-readable name of the page, unique within the agent.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The fulfillment to call when the session is entering the page.
     */
    public readonly entryFulfillment!: pulumi.Output<outputs.DialogflowCxPageEntryFulfillment | undefined>;
    /**
     * Handlers associated with the page to handle events such as webhook errors, no match or no input.
     */
    public readonly eventHandlers!: pulumi.Output<outputs.DialogflowCxPageEventHandler[] | undefined>;
    /**
     * The form associated with the page, used for collecting parameters relevant to the page.
     */
    public readonly form!: pulumi.Output<outputs.DialogflowCxPageForm | undefined>;
    /**
     * The language of the following fields in page: Page.entry_fulfillment.messages Page.entry_fulfillment.conditional_cases
     * Page.event_handlers.trigger_fulfillment.messages Page.event_handlers.trigger_fulfillment.conditional_cases
     * Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
     * Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
     * Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
     * Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
     * Page.transition_routes.trigger_fulfillment.messages Page.transition_routes.trigger_fulfillment.conditional_cases If not
     * specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the
     * agent before they can be used.
     */
    public readonly languageCode!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of the page. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
     * ID>/pages/<Page ID>.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The flow to create a page for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
     */
    public readonly parent!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DialogflowCxPageTimeouts | undefined>;
    /**
     * Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page. If
     * multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition
     * route > page's transition route group > flow's transition routes. If multiple transition route groups within a page
     * contain the same intent, then the first group in the ordered list takes precedence. Format:projects/<Project
     * ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
     */
    public readonly transitionRouteGroups!: pulumi.Output<string[] | undefined>;
    /**
     * A list of transitions for the transition rules of this page. They route the conversation to another page in the same
     * flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order:
     * TransitionRoutes defined in the page with intent specified. TransitionRoutes defined in the transition route groups with
     * intent specified. TransitionRoutes defined in flow with intent specified. TransitionRoutes defined in the transition
     * route groups with intent specified. TransitionRoutes defined in the page with only condition specified. TransitionRoutes
     * defined in the transition route groups with only condition specified.
     */
    public readonly transitionRoutes!: pulumi.Output<outputs.DialogflowCxPageTransitionRoute[] | undefined>;

    /**
     * Create a DialogflowCxPage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DialogflowCxPageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DialogflowCxPageArgs | DialogflowCxPageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DialogflowCxPageState | undefined;
            resourceInputs["advancedSettings"] = state ? state.advancedSettings : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["entryFulfillment"] = state ? state.entryFulfillment : undefined;
            resourceInputs["eventHandlers"] = state ? state.eventHandlers : undefined;
            resourceInputs["form"] = state ? state.form : undefined;
            resourceInputs["languageCode"] = state ? state.languageCode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["transitionRouteGroups"] = state ? state.transitionRouteGroups : undefined;
            resourceInputs["transitionRoutes"] = state ? state.transitionRoutes : undefined;
        } else {
            const args = argsOrState as DialogflowCxPageArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["advancedSettings"] = args ? args.advancedSettings : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["entryFulfillment"] = args ? args.entryFulfillment : undefined;
            resourceInputs["eventHandlers"] = args ? args.eventHandlers : undefined;
            resourceInputs["form"] = args ? args.form : undefined;
            resourceInputs["languageCode"] = args ? args.languageCode : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["transitionRouteGroups"] = args ? args.transitionRouteGroups : undefined;
            resourceInputs["transitionRoutes"] = args ? args.transitionRoutes : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DialogflowCxPage.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DialogflowCxPage resources.
 */
export interface DialogflowCxPageState {
    /**
     * Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at
     * the higher level. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
     */
    advancedSettings?: pulumi.Input<inputs.DialogflowCxPageAdvancedSettings>;
    /**
     * The human-readable name of the page, unique within the agent.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The fulfillment to call when the session is entering the page.
     */
    entryFulfillment?: pulumi.Input<inputs.DialogflowCxPageEntryFulfillment>;
    /**
     * Handlers associated with the page to handle events such as webhook errors, no match or no input.
     */
    eventHandlers?: pulumi.Input<pulumi.Input<inputs.DialogflowCxPageEventHandler>[]>;
    /**
     * The form associated with the page, used for collecting parameters relevant to the page.
     */
    form?: pulumi.Input<inputs.DialogflowCxPageForm>;
    /**
     * The language of the following fields in page: Page.entry_fulfillment.messages Page.entry_fulfillment.conditional_cases
     * Page.event_handlers.trigger_fulfillment.messages Page.event_handlers.trigger_fulfillment.conditional_cases
     * Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
     * Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
     * Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
     * Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
     * Page.transition_routes.trigger_fulfillment.messages Page.transition_routes.trigger_fulfillment.conditional_cases If not
     * specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the
     * agent before they can be used.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * The unique identifier of the page. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
     * ID>/pages/<Page ID>.
     */
    name?: pulumi.Input<string>;
    /**
     * The flow to create a page for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowCxPageTimeouts>;
    /**
     * Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page. If
     * multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition
     * route > page's transition route group > flow's transition routes. If multiple transition route groups within a page
     * contain the same intent, then the first group in the ordered list takes precedence. Format:projects/<Project
     * ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
     */
    transitionRouteGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of transitions for the transition rules of this page. They route the conversation to another page in the same
     * flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order:
     * TransitionRoutes defined in the page with intent specified. TransitionRoutes defined in the transition route groups with
     * intent specified. TransitionRoutes defined in flow with intent specified. TransitionRoutes defined in the transition
     * route groups with intent specified. TransitionRoutes defined in the page with only condition specified. TransitionRoutes
     * defined in the transition route groups with only condition specified.
     */
    transitionRoutes?: pulumi.Input<pulumi.Input<inputs.DialogflowCxPageTransitionRoute>[]>;
}

/**
 * The set of arguments for constructing a DialogflowCxPage resource.
 */
export interface DialogflowCxPageArgs {
    /**
     * Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at
     * the higher level. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
     */
    advancedSettings?: pulumi.Input<inputs.DialogflowCxPageAdvancedSettings>;
    /**
     * The human-readable name of the page, unique within the agent.
     */
    displayName: pulumi.Input<string>;
    /**
     * The fulfillment to call when the session is entering the page.
     */
    entryFulfillment?: pulumi.Input<inputs.DialogflowCxPageEntryFulfillment>;
    /**
     * Handlers associated with the page to handle events such as webhook errors, no match or no input.
     */
    eventHandlers?: pulumi.Input<pulumi.Input<inputs.DialogflowCxPageEventHandler>[]>;
    /**
     * The form associated with the page, used for collecting parameters relevant to the page.
     */
    form?: pulumi.Input<inputs.DialogflowCxPageForm>;
    /**
     * The language of the following fields in page: Page.entry_fulfillment.messages Page.entry_fulfillment.conditional_cases
     * Page.event_handlers.trigger_fulfillment.messages Page.event_handlers.trigger_fulfillment.conditional_cases
     * Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages
     * Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases
     * Page.form.parameters.fill_behavior.reprompt_event_handlers.messages
     * Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases
     * Page.transition_routes.trigger_fulfillment.messages Page.transition_routes.trigger_fulfillment.conditional_cases If not
     * specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the
     * agent before they can be used.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * The flow to create a page for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.
     */
    parent?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DialogflowCxPageTimeouts>;
    /**
     * Ordered list of TransitionRouteGroups associated with the page. Transition route groups must be unique within a page. If
     * multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition
     * route > page's transition route group > flow's transition routes. If multiple transition route groups within a page
     * contain the same intent, then the first group in the ordered list takes precedence. Format:projects/<Project
     * ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>/transitionRouteGroups/<TransitionRouteGroup ID>.
     */
    transitionRouteGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of transitions for the transition rules of this page. They route the conversation to another page in the same
     * flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order:
     * TransitionRoutes defined in the page with intent specified. TransitionRoutes defined in the transition route groups with
     * intent specified. TransitionRoutes defined in flow with intent specified. TransitionRoutes defined in the transition
     * route groups with intent specified. TransitionRoutes defined in the page with only condition specified. TransitionRoutes
     * defined in the transition route groups with only condition specified.
     */
    transitionRoutes?: pulumi.Input<pulumi.Input<inputs.DialogflowCxPageTransitionRoute>[]>;
}
