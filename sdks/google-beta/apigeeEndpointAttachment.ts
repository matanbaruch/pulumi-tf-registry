// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApigeeEndpointAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ApigeeEndpointAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigeeEndpointAttachmentState, opts?: pulumi.CustomResourceOptions): ApigeeEndpointAttachment {
        return new ApigeeEndpointAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/apigeeEndpointAttachment:ApigeeEndpointAttachment';

    /**
     * Returns true if the given object is an instance of ApigeeEndpointAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigeeEndpointAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigeeEndpointAttachment.__pulumiType;
    }

    /**
     * State of the endpoint attachment connection to the service attachment.
     */
    public /*out*/ readonly connectionState!: pulumi.Output<string>;
    /**
     * ID of the endpoint attachment.
     */
    public readonly endpointAttachmentId!: pulumi.Output<string>;
    /**
     * Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
     */
    public /*out*/ readonly host!: pulumi.Output<string>;
    /**
     * Location of the endpoint attachment.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Name of the Endpoint Attachment in the following format:
     * organizations/{organization}/endpointAttachments/{endpointAttachment}.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
     */
    public readonly orgId!: pulumi.Output<string>;
    /**
     * Format: projects/*&#47;regions/*&#47;serviceAttachments/*
     */
    public readonly serviceAttachment!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApigeeEndpointAttachmentTimeouts | undefined>;

    /**
     * Create a ApigeeEndpointAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigeeEndpointAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigeeEndpointAttachmentArgs | ApigeeEndpointAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigeeEndpointAttachmentState | undefined;
            resourceInputs["connectionState"] = state ? state.connectionState : undefined;
            resourceInputs["endpointAttachmentId"] = state ? state.endpointAttachmentId : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["serviceAttachment"] = state ? state.serviceAttachment : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ApigeeEndpointAttachmentArgs | undefined;
            if ((!args || args.endpointAttachmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointAttachmentId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if ((!args || args.serviceAttachment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAttachment'");
            }
            resourceInputs["endpointAttachmentId"] = args ? args.endpointAttachmentId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["serviceAttachment"] = args ? args.serviceAttachment : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["connectionState"] = undefined /*out*/;
            resourceInputs["host"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigeeEndpointAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApigeeEndpointAttachment resources.
 */
export interface ApigeeEndpointAttachmentState {
    /**
     * State of the endpoint attachment connection to the service attachment.
     */
    connectionState?: pulumi.Input<string>;
    /**
     * ID of the endpoint attachment.
     */
    endpointAttachmentId?: pulumi.Input<string>;
    /**
     * Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
     */
    host?: pulumi.Input<string>;
    /**
     * Location of the endpoint attachment.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the Endpoint Attachment in the following format:
     * organizations/{organization}/endpointAttachments/{endpointAttachment}.
     */
    name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Format: projects/*&#47;regions/*&#47;serviceAttachments/*
     */
    serviceAttachment?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeEndpointAttachmentTimeouts>;
}

/**
 * The set of arguments for constructing a ApigeeEndpointAttachment resource.
 */
export interface ApigeeEndpointAttachmentArgs {
    /**
     * ID of the endpoint attachment.
     */
    endpointAttachmentId: pulumi.Input<string>;
    /**
     * Location of the endpoint attachment.
     */
    location: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
     */
    orgId: pulumi.Input<string>;
    /**
     * Format: projects/*&#47;regions/*&#47;serviceAttachments/*
     */
    serviceAttachment: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApigeeEndpointAttachmentTimeouts>;
}
