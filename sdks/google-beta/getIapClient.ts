// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIapClient(args: GetIapClientArgs, opts?: pulumi.InvokeOptions): Promise<GetIapClientResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getIapClient:getIapClient", {
        "brand": args.brand,
        "clientId": args.clientId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIapClient.
 */
export interface GetIapClientArgs {
    brand: string;
    clientId: string;
    id?: string;
}

/**
 * A collection of values returned by getIapClient.
 */
export interface GetIapClientResult {
    readonly brand: string;
    readonly clientId: string;
    readonly displayName: string;
    readonly id: string;
    readonly secret: string;
}
export function getIapClientOutput(args: GetIapClientOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIapClientResult> {
    return pulumi.output(args).apply((a: any) => getIapClient(a, opts))
}

/**
 * A collection of arguments for invoking getIapClient.
 */
export interface GetIapClientOutputArgs {
    brand: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
