// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeRegionSecurityPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ComputeRegionSecurityPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeRegionSecurityPolicyState, opts?: pulumi.CustomResourceOptions): ComputeRegionSecurityPolicy {
        return new ComputeRegionSecurityPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeRegionSecurityPolicy:ComputeRegionSecurityPolicy';

    /**
     * Returns true if the given object is an instance of ComputeRegionSecurityPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeRegionSecurityPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeRegionSecurityPolicy.__pulumiType;
    }

    /**
     * Configuration for Google Cloud Armor DDOS Proctection Config.
     */
    public readonly ddosProtectionConfig!: pulumi.Output<outputs.ComputeRegionSecurityPolicyDdosProtectionConfig | undefined>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of this resource. This field is used internally during updates of this resource.
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    public /*out*/ readonly policyId!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The Region in which the created Region Security Policy should reside. If it is not provided, the provider region is
     * used.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Server-defined URL for the resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    public /*out*/ readonly selfLinkWithPolicyId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeRegionSecurityPolicyTimeouts | undefined>;
    /**
     * The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be
     * configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
     * servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests
     * targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
     * requests before the request is served from Google's cache. - CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be
     * configured to filter packets targeting network load balancing resources such as backend services, target pools, target
     * instances, and instances with external IPs. They filter requests before the request is served from the application. This
     * field can be set only at resource creation time. Possible values: ["CLOUD_ARMOR", "CLOUD_ARMOR_EDGE",
     * "CLOUD_ARMOR_NETWORK"]
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies. A user-defined field consists of up to 4 bytes
     * extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to
     * select certain bits. Rules may then specify matching values for these fields.
     */
    public readonly userDefinedFields!: pulumi.Output<outputs.ComputeRegionSecurityPolicyUserDefinedField[] | undefined>;

    /**
     * Create a ComputeRegionSecurityPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComputeRegionSecurityPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeRegionSecurityPolicyArgs | ComputeRegionSecurityPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeRegionSecurityPolicyState | undefined;
            resourceInputs["ddosProtectionConfig"] = state ? state.ddosProtectionConfig : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["selfLinkWithPolicyId"] = state ? state.selfLinkWithPolicyId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userDefinedFields"] = state ? state.userDefinedFields : undefined;
        } else {
            const args = argsOrState as ComputeRegionSecurityPolicyArgs | undefined;
            resourceInputs["ddosProtectionConfig"] = args ? args.ddosProtectionConfig : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userDefinedFields"] = args ? args.userDefinedFields : undefined;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["policyId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["selfLinkWithPolicyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeRegionSecurityPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeRegionSecurityPolicy resources.
 */
export interface ComputeRegionSecurityPolicyState {
    /**
     * Configuration for Google Cloud Armor DDOS Proctection Config.
     */
    ddosProtectionConfig?: pulumi.Input<inputs.ComputeRegionSecurityPolicyDdosProtectionConfig>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Fingerprint of this resource. This field is used internally during updates of this resource.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    policyId?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The Region in which the created Region Security Policy should reside. If it is not provided, the provider region is
     * used.
     */
    region?: pulumi.Input<string>;
    /**
     * Server-defined URL for the resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    selfLinkWithPolicyId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeRegionSecurityPolicyTimeouts>;
    /**
     * The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be
     * configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
     * servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests
     * targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
     * requests before the request is served from Google's cache. - CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be
     * configured to filter packets targeting network load balancing resources such as backend services, target pools, target
     * instances, and instances with external IPs. They filter requests before the request is served from the application. This
     * field can be set only at resource creation time. Possible values: ["CLOUD_ARMOR", "CLOUD_ARMOR_EDGE",
     * "CLOUD_ARMOR_NETWORK"]
     */
    type?: pulumi.Input<string>;
    /**
     * Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies. A user-defined field consists of up to 4 bytes
     * extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to
     * select certain bits. Rules may then specify matching values for these fields.
     */
    userDefinedFields?: pulumi.Input<pulumi.Input<inputs.ComputeRegionSecurityPolicyUserDefinedField>[]>;
}

/**
 * The set of arguments for constructing a ComputeRegionSecurityPolicy resource.
 */
export interface ComputeRegionSecurityPolicyArgs {
    /**
     * Configuration for Google Cloud Armor DDOS Proctection Config.
     */
    ddosProtectionConfig?: pulumi.Input<inputs.ComputeRegionSecurityPolicyDdosProtectionConfig>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The Region in which the created Region Security Policy should reside. If it is not provided, the provider region is
     * used.
     */
    region?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeRegionSecurityPolicyTimeouts>;
    /**
     * The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be
     * configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
     * servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests
     * targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
     * requests before the request is served from Google's cache. - CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be
     * configured to filter packets targeting network load balancing resources such as backend services, target pools, target
     * instances, and instances with external IPs. They filter requests before the request is served from the application. This
     * field can be set only at resource creation time. Possible values: ["CLOUD_ARMOR", "CLOUD_ARMOR_EDGE",
     * "CLOUD_ARMOR_NETWORK"]
     */
    type?: pulumi.Input<string>;
    /**
     * Definitions of user-defined fields for CLOUD_ARMOR_NETWORK policies. A user-defined field consists of up to 4 bytes
     * extracted from a fixed offset in the packet, relative to the IPv4, IPv6, TCP, or UDP header, with an optional mask to
     * select certain bits. Rules may then specify matching values for these fields.
     */
    userDefinedFields?: pulumi.Input<pulumi.Input<inputs.ComputeRegionSecurityPolicyUserDefinedField>[]>;
}
