// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirebaseWebApp extends pulumi.CustomResource {
    /**
     * Get an existing FirebaseWebApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirebaseWebAppState, opts?: pulumi.CustomResourceOptions): FirebaseWebApp {
        return new FirebaseWebApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/firebaseWebApp:FirebaseWebApp';

    /**
     * Returns true if the given object is an instance of FirebaseWebApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirebaseWebApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirebaseWebApp.__pulumiType;
    }

    /**
     * The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the WebApp. If apiKeyId
     * is not set during creation, then Firebase automatically associates an apiKeyId with the WebApp. This auto-associated key
     * may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     */
    public readonly apiKeyId!: pulumi.Output<string>;
    /**
     * The globally unique, Firebase-assigned identifier of the App. This identifier should be treated as an opaque token, as
     * the data format is not specified.
     */
    public /*out*/ readonly appId!: pulumi.Output<string>;
    /**
     * The URLs where the 'WebApp' is hosted.
     */
    public /*out*/ readonly appUrls!: pulumi.Output<string[]>;
    public readonly deletionPolicy!: pulumi.Output<string | undefined>;
    /**
     * The user-assigned display name of the App.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The fully qualified resource name of the App, for example: projects/projectId/webApps/appId
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.FirebaseWebAppTimeouts | undefined>;

    /**
     * Create a FirebaseWebApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirebaseWebAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirebaseWebAppArgs | FirebaseWebAppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirebaseWebAppState | undefined;
            resourceInputs["apiKeyId"] = state ? state.apiKeyId : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["appUrls"] = state ? state.appUrls : undefined;
            resourceInputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as FirebaseWebAppArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["apiKeyId"] = args ? args.apiKeyId : undefined;
            resourceInputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["appUrls"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirebaseWebApp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirebaseWebApp resources.
 */
export interface FirebaseWebAppState {
    /**
     * The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the WebApp. If apiKeyId
     * is not set during creation, then Firebase automatically associates an apiKeyId with the WebApp. This auto-associated key
     * may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     */
    apiKeyId?: pulumi.Input<string>;
    /**
     * The globally unique, Firebase-assigned identifier of the App. This identifier should be treated as an opaque token, as
     * the data format is not specified.
     */
    appId?: pulumi.Input<string>;
    /**
     * The URLs where the 'WebApp' is hosted.
     */
    appUrls?: pulumi.Input<pulumi.Input<string>[]>;
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The user-assigned display name of the App.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The fully qualified resource name of the App, for example: projects/projectId/webApps/appId
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FirebaseWebAppTimeouts>;
}

/**
 * The set of arguments for constructing a FirebaseWebApp resource.
 */
export interface FirebaseWebAppArgs {
    /**
     * The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the WebApp. If apiKeyId
     * is not set during creation, then Firebase automatically associates an apiKeyId with the WebApp. This auto-associated key
     * may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     */
    apiKeyId?: pulumi.Input<string>;
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The user-assigned display name of the App.
     */
    displayName: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FirebaseWebAppTimeouts>;
}
