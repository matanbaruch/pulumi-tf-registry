// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LookerInstance extends pulumi.CustomResource {
    /**
     * Get an existing LookerInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LookerInstanceState, opts?: pulumi.CustomResourceOptions): LookerInstance {
        return new LookerInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/lookerInstance:LookerInstance';

    /**
     * Returns true if the given object is an instance of LookerInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LookerInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LookerInstance.__pulumiType;
    }

    /**
     * Looker instance Admin settings.
     */
    public readonly adminSettings!: pulumi.Output<outputs.LookerInstanceAdminSettings | undefined>;
    /**
     * Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
     * consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
     */
    public readonly consumerNetwork!: pulumi.Output<string | undefined>;
    /**
     * The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Custom domain settings for a Looker instance.
     */
    public readonly customDomain!: pulumi.Output<outputs.LookerInstanceCustomDomain | undefined>;
    /**
     * Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
     * deny maintenance periods.
     */
    public readonly denyMaintenancePeriod!: pulumi.Output<outputs.LookerInstanceDenyMaintenancePeriod | undefined>;
    /**
     * Public Egress IP (IPv4).
     */
    public /*out*/ readonly egressPublicIp!: pulumi.Output<string>;
    /**
     * Looker instance encryption settings.
     */
    public readonly encryptionConfig!: pulumi.Output<outputs.LookerInstanceEncryptionConfig | undefined>;
    /**
     * Private Ingress IP (IPv4).
     */
    public /*out*/ readonly ingressPrivateIp!: pulumi.Output<string>;
    /**
     * Public Ingress IP (IPv4).
     */
    public /*out*/ readonly ingressPublicIp!: pulumi.Output<string>;
    /**
     * Looker instance URI which can be used to access the Looker Instance UI.
     */
    public /*out*/ readonly lookerUri!: pulumi.Output<string>;
    /**
     * The Looker version that the instance is using.
     */
    public /*out*/ readonly lookerVersion!: pulumi.Output<string>;
    /**
     * Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
     * instance to be restarted during updates, which will temporarily disrupt service.
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.LookerInstanceMaintenanceWindow | undefined>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Looker Instance OAuth login settings.
     */
    public readonly oauthConfig!: pulumi.Output<outputs.LookerInstanceOauthConfig | undefined>;
    /**
     * Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
     * these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
     * instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
     * LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
     * Default value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD",
     * "LOOKER_CORE_STANDARD_ANNUAL", "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL"]
     */
    public readonly platformEdition!: pulumi.Output<string | undefined>;
    /**
     * Whether private IP is enabled on the Looker instance.
     */
    public readonly privateIpEnabled!: pulumi.Output<boolean | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Whether public IP is enabled on the Looker instance.
     */
    public readonly publicIpEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Looker region of the instance.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
     * may or may not specify this in a request.
     */
    public readonly reservedRange!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.LookerInstanceTimeouts | undefined>;
    /**
     * The time the instance was updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
     * is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
     * Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
     * Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
     * Standard, and Developer.
     */
    public readonly userMetadata!: pulumi.Output<outputs.LookerInstanceUserMetadata | undefined>;

    /**
     * Create a LookerInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LookerInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LookerInstanceArgs | LookerInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LookerInstanceState | undefined;
            resourceInputs["adminSettings"] = state ? state.adminSettings : undefined;
            resourceInputs["consumerNetwork"] = state ? state.consumerNetwork : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customDomain"] = state ? state.customDomain : undefined;
            resourceInputs["denyMaintenancePeriod"] = state ? state.denyMaintenancePeriod : undefined;
            resourceInputs["egressPublicIp"] = state ? state.egressPublicIp : undefined;
            resourceInputs["encryptionConfig"] = state ? state.encryptionConfig : undefined;
            resourceInputs["ingressPrivateIp"] = state ? state.ingressPrivateIp : undefined;
            resourceInputs["ingressPublicIp"] = state ? state.ingressPublicIp : undefined;
            resourceInputs["lookerUri"] = state ? state.lookerUri : undefined;
            resourceInputs["lookerVersion"] = state ? state.lookerVersion : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oauthConfig"] = state ? state.oauthConfig : undefined;
            resourceInputs["platformEdition"] = state ? state.platformEdition : undefined;
            resourceInputs["privateIpEnabled"] = state ? state.privateIpEnabled : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["publicIpEnabled"] = state ? state.publicIpEnabled : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["reservedRange"] = state ? state.reservedRange : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["userMetadata"] = state ? state.userMetadata : undefined;
        } else {
            const args = argsOrState as LookerInstanceArgs | undefined;
            resourceInputs["adminSettings"] = args ? args.adminSettings : undefined;
            resourceInputs["consumerNetwork"] = args ? args.consumerNetwork : undefined;
            resourceInputs["customDomain"] = args ? args.customDomain : undefined;
            resourceInputs["denyMaintenancePeriod"] = args ? args.denyMaintenancePeriod : undefined;
            resourceInputs["encryptionConfig"] = args ? args.encryptionConfig : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oauthConfig"] = args ? args.oauthConfig : undefined;
            resourceInputs["platformEdition"] = args ? args.platformEdition : undefined;
            resourceInputs["privateIpEnabled"] = args ? args.privateIpEnabled : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["publicIpEnabled"] = args ? args.publicIpEnabled : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["reservedRange"] = args ? args.reservedRange : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userMetadata"] = args ? args.userMetadata : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["egressPublicIp"] = undefined /*out*/;
            resourceInputs["ingressPrivateIp"] = undefined /*out*/;
            resourceInputs["ingressPublicIp"] = undefined /*out*/;
            resourceInputs["lookerUri"] = undefined /*out*/;
            resourceInputs["lookerVersion"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LookerInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LookerInstance resources.
 */
export interface LookerInstanceState {
    /**
     * Looker instance Admin settings.
     */
    adminSettings?: pulumi.Input<inputs.LookerInstanceAdminSettings>;
    /**
     * Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
     * consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
     */
    consumerNetwork?: pulumi.Input<string>;
    /**
     * The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Custom domain settings for a Looker instance.
     */
    customDomain?: pulumi.Input<inputs.LookerInstanceCustomDomain>;
    /**
     * Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
     * deny maintenance periods.
     */
    denyMaintenancePeriod?: pulumi.Input<inputs.LookerInstanceDenyMaintenancePeriod>;
    /**
     * Public Egress IP (IPv4).
     */
    egressPublicIp?: pulumi.Input<string>;
    /**
     * Looker instance encryption settings.
     */
    encryptionConfig?: pulumi.Input<inputs.LookerInstanceEncryptionConfig>;
    /**
     * Private Ingress IP (IPv4).
     */
    ingressPrivateIp?: pulumi.Input<string>;
    /**
     * Public Ingress IP (IPv4).
     */
    ingressPublicIp?: pulumi.Input<string>;
    /**
     * Looker instance URI which can be used to access the Looker Instance UI.
     */
    lookerUri?: pulumi.Input<string>;
    /**
     * The Looker version that the instance is using.
     */
    lookerVersion?: pulumi.Input<string>;
    /**
     * Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
     * instance to be restarted during updates, which will temporarily disrupt service.
     */
    maintenanceWindow?: pulumi.Input<inputs.LookerInstanceMaintenanceWindow>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Looker Instance OAuth login settings.
     */
    oauthConfig?: pulumi.Input<inputs.LookerInstanceOauthConfig>;
    /**
     * Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
     * these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
     * instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
     * LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
     * Default value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD",
     * "LOOKER_CORE_STANDARD_ANNUAL", "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL"]
     */
    platformEdition?: pulumi.Input<string>;
    /**
     * Whether private IP is enabled on the Looker instance.
     */
    privateIpEnabled?: pulumi.Input<boolean>;
    project?: pulumi.Input<string>;
    /**
     * Whether public IP is enabled on the Looker instance.
     */
    publicIpEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Looker region of the instance.
     */
    region?: pulumi.Input<string>;
    /**
     * Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
     * may or may not specify this in a request.
     */
    reservedRange?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LookerInstanceTimeouts>;
    /**
     * The time the instance was updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
     * is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
     * Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
     * Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
     * Standard, and Developer.
     */
    userMetadata?: pulumi.Input<inputs.LookerInstanceUserMetadata>;
}

/**
 * The set of arguments for constructing a LookerInstance resource.
 */
export interface LookerInstanceArgs {
    /**
     * Looker instance Admin settings.
     */
    adminSettings?: pulumi.Input<inputs.LookerInstanceAdminSettings>;
    /**
     * Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
     * consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
     */
    consumerNetwork?: pulumi.Input<string>;
    /**
     * Custom domain settings for a Looker instance.
     */
    customDomain?: pulumi.Input<inputs.LookerInstanceCustomDomain>;
    /**
     * Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
     * deny maintenance periods.
     */
    denyMaintenancePeriod?: pulumi.Input<inputs.LookerInstanceDenyMaintenancePeriod>;
    /**
     * Looker instance encryption settings.
     */
    encryptionConfig?: pulumi.Input<inputs.LookerInstanceEncryptionConfig>;
    /**
     * Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
     * instance to be restarted during updates, which will temporarily disrupt service.
     */
    maintenanceWindow?: pulumi.Input<inputs.LookerInstanceMaintenanceWindow>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Looker Instance OAuth login settings.
     */
    oauthConfig?: pulumi.Input<inputs.LookerInstanceOauthConfig>;
    /**
     * Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
     * these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
     * instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
     * LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
     * Default value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD",
     * "LOOKER_CORE_STANDARD_ANNUAL", "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL"]
     */
    platformEdition?: pulumi.Input<string>;
    /**
     * Whether private IP is enabled on the Looker instance.
     */
    privateIpEnabled?: pulumi.Input<boolean>;
    project?: pulumi.Input<string>;
    /**
     * Whether public IP is enabled on the Looker instance.
     */
    publicIpEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Looker region of the instance.
     */
    region?: pulumi.Input<string>;
    /**
     * Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
     * may or may not specify this in a request.
     */
    reservedRange?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LookerInstanceTimeouts>;
    /**
     * Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
     * is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
     * Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
     * Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
     * Standard, and Developer.
     */
    userMetadata?: pulumi.Input<inputs.LookerInstanceUserMetadata>;
}
