// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPubsubTopic(args: GetPubsubTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetPubsubTopicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getPubsubTopic:getPubsubTopic", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPubsubTopic.
 */
export interface GetPubsubTopicArgs {
    id?: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getPubsubTopic.
 */
export interface GetPubsubTopicResult {
    readonly effectiveLabels: {[key: string]: string};
    readonly id: string;
    readonly ingestionDataSourceSettings: outputs.GetPubsubTopicIngestionDataSourceSetting[];
    readonly kmsKeyName: string;
    readonly labels: {[key: string]: string};
    readonly messageRetentionDuration: string;
    readonly messageStoragePolicies: outputs.GetPubsubTopicMessageStoragePolicy[];
    readonly name: string;
    readonly project?: string;
    readonly schemaSettings: outputs.GetPubsubTopicSchemaSetting[];
    readonly terraformLabels: {[key: string]: string};
}
export function getPubsubTopicOutput(args: GetPubsubTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPubsubTopicResult> {
    return pulumi.output(args).apply((a: any) => getPubsubTopic(a, opts))
}

/**
 * A collection of arguments for invoking getPubsubTopic.
 */
export interface GetPubsubTopicOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
