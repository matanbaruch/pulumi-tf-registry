// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HealthcareConsentStore extends pulumi.CustomResource {
    /**
     * Get an existing HealthcareConsentStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HealthcareConsentStoreState, opts?: pulumi.CustomResourceOptions): HealthcareConsentStore {
        return new HealthcareConsentStore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/healthcareConsentStore:HealthcareConsentStore';

    /**
     * Returns true if the given object is an instance of HealthcareConsentStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HealthcareConsentStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HealthcareConsentStore.__pulumiType;
    }

    /**
     * Identifies the dataset addressed by this request. Must be in the format
     * 'projects/{project}/locations/{location}/datasets/{dataset}'
     */
    public readonly dataset!: pulumi.Output<string>;
    /**
     * Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
     * expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
     * Example: "3.5s".
     */
    public readonly defaultConsentTtl!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
     * exist.
     */
    public readonly enableConsentCreateOnUpdate!: pulumi.Output<boolean | undefined>;
    /**
     * User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
     * a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
     * '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
     * UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
     * '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
     * of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of this ConsentStore, for example: "consent1"
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.HealthcareConsentStoreTimeouts | undefined>;

    /**
     * Create a HealthcareConsentStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HealthcareConsentStoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HealthcareConsentStoreArgs | HealthcareConsentStoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HealthcareConsentStoreState | undefined;
            resourceInputs["dataset"] = state ? state.dataset : undefined;
            resourceInputs["defaultConsentTtl"] = state ? state.defaultConsentTtl : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["enableConsentCreateOnUpdate"] = state ? state.enableConsentCreateOnUpdate : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as HealthcareConsentStoreArgs | undefined;
            if ((!args || args.dataset === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataset'");
            }
            resourceInputs["dataset"] = args ? args.dataset : undefined;
            resourceInputs["defaultConsentTtl"] = args ? args.defaultConsentTtl : undefined;
            resourceInputs["enableConsentCreateOnUpdate"] = args ? args.enableConsentCreateOnUpdate : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HealthcareConsentStore.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HealthcareConsentStore resources.
 */
export interface HealthcareConsentStoreState {
    /**
     * Identifies the dataset addressed by this request. Must be in the format
     * 'projects/{project}/locations/{location}/datasets/{dataset}'
     */
    dataset?: pulumi.Input<string>;
    /**
     * Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
     * expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
     * Example: "3.5s".
     */
    defaultConsentTtl?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
     * exist.
     */
    enableConsentCreateOnUpdate?: pulumi.Input<boolean>;
    /**
     * User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
     * a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
     * '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
     * UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
     * '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
     * of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of this ConsentStore, for example: "consent1"
     */
    name?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.HealthcareConsentStoreTimeouts>;
}

/**
 * The set of arguments for constructing a HealthcareConsentStore resource.
 */
export interface HealthcareConsentStoreArgs {
    /**
     * Identifies the dataset addressed by this request. Must be in the format
     * 'projects/{project}/locations/{location}/datasets/{dataset}'
     */
    dataset: pulumi.Input<string>;
    /**
     * Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
     * expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
     * Example: "3.5s".
     */
    defaultConsentTtl?: pulumi.Input<string>;
    /**
     * If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
     * exist.
     */
    enableConsentCreateOnUpdate?: pulumi.Input<boolean>;
    /**
     * User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
     * a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
     * '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
     * UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
     * '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
     * of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
     * non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of this ConsentStore, for example: "consent1"
     */
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.HealthcareConsentStoreTimeouts>;
}
