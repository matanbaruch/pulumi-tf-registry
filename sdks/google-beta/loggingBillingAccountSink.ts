// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LoggingBillingAccountSink extends pulumi.CustomResource {
    /**
     * Get an existing LoggingBillingAccountSink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoggingBillingAccountSinkState, opts?: pulumi.CustomResourceOptions): LoggingBillingAccountSink {
        return new LoggingBillingAccountSink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/loggingBillingAccountSink:LoggingBillingAccountSink';

    /**
     * Returns true if the given object is an instance of LoggingBillingAccountSink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoggingBillingAccountSink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoggingBillingAccountSink.__pulumiType;
    }

    /**
     * Options that affect sinks exporting data to BigQuery.
     */
    public readonly bigqueryOptions!: pulumi.Output<outputs.LoggingBillingAccountSinkBigqueryOptions | undefined>;
    /**
     * The billing account exported to the sink.
     */
    public readonly billingAccount!: pulumi.Output<string>;
    /**
     * A description of this sink. The maximum length of the description is 8000 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
     * topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
     * "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
     * "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
     * write to the above resource.
     */
    public readonly destination!: pulumi.Output<string>;
    /**
     * If set to True, then this sink is disabled and it does not export any log entries.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
     * one of exclusion's filters, it will not be exported.
     */
    public readonly exclusions!: pulumi.Output<outputs.LoggingBillingAccountSinkExclusion[] | undefined>;
    /**
     * The filter to apply when exporting logs. Only log entries that match the filter are exported.
     */
    public readonly filter!: pulumi.Output<string | undefined>;
    /**
     * The name of the logging sink.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The identity associated with this sink. This identity must be granted write access to the configured destination.
     */
    public /*out*/ readonly writerIdentity!: pulumi.Output<string>;

    /**
     * Create a LoggingBillingAccountSink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoggingBillingAccountSinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoggingBillingAccountSinkArgs | LoggingBillingAccountSinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoggingBillingAccountSinkState | undefined;
            resourceInputs["bigqueryOptions"] = state ? state.bigqueryOptions : undefined;
            resourceInputs["billingAccount"] = state ? state.billingAccount : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["exclusions"] = state ? state.exclusions : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["writerIdentity"] = state ? state.writerIdentity : undefined;
        } else {
            const args = argsOrState as LoggingBillingAccountSinkArgs | undefined;
            if ((!args || args.billingAccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'billingAccount'");
            }
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            resourceInputs["bigqueryOptions"] = args ? args.bigqueryOptions : undefined;
            resourceInputs["billingAccount"] = args ? args.billingAccount : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["exclusions"] = args ? args.exclusions : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["writerIdentity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoggingBillingAccountSink.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LoggingBillingAccountSink resources.
 */
export interface LoggingBillingAccountSinkState {
    /**
     * Options that affect sinks exporting data to BigQuery.
     */
    bigqueryOptions?: pulumi.Input<inputs.LoggingBillingAccountSinkBigqueryOptions>;
    /**
     * The billing account exported to the sink.
     */
    billingAccount?: pulumi.Input<string>;
    /**
     * A description of this sink. The maximum length of the description is 8000 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
     * topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
     * "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
     * "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
     * write to the above resource.
     */
    destination?: pulumi.Input<string>;
    /**
     * If set to True, then this sink is disabled and it does not export any log entries.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
     * one of exclusion's filters, it will not be exported.
     */
    exclusions?: pulumi.Input<pulumi.Input<inputs.LoggingBillingAccountSinkExclusion>[]>;
    /**
     * The filter to apply when exporting logs. Only log entries that match the filter are exported.
     */
    filter?: pulumi.Input<string>;
    /**
     * The name of the logging sink.
     */
    name?: pulumi.Input<string>;
    /**
     * The identity associated with this sink. This identity must be granted write access to the configured destination.
     */
    writerIdentity?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LoggingBillingAccountSink resource.
 */
export interface LoggingBillingAccountSinkArgs {
    /**
     * Options that affect sinks exporting data to BigQuery.
     */
    bigqueryOptions?: pulumi.Input<inputs.LoggingBillingAccountSinkBigqueryOptions>;
    /**
     * The billing account exported to the sink.
     */
    billingAccount: pulumi.Input<string>;
    /**
     * A description of this sink. The maximum length of the description is 8000 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
     * topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
     * "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
     * "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
     * write to the above resource.
     */
    destination: pulumi.Input<string>;
    /**
     * If set to True, then this sink is disabled and it does not export any log entries.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
     * one of exclusion's filters, it will not be exported.
     */
    exclusions?: pulumi.Input<pulumi.Input<inputs.LoggingBillingAccountSinkExclusion>[]>;
    /**
     * The filter to apply when exporting logs. Only log entries that match the filter are exported.
     */
    filter?: pulumi.Input<string>;
    /**
     * The name of the logging sink.
     */
    name?: pulumi.Input<string>;
}
