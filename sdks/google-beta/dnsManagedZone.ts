// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DnsManagedZone extends pulumi.CustomResource {
    /**
     * Get an existing DnsManagedZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsManagedZoneState, opts?: pulumi.CustomResourceOptions): DnsManagedZone {
        return new DnsManagedZone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dnsManagedZone:DnsManagedZone';

    /**
     * Returns true if the given object is an instance of DnsManagedZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsManagedZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsManagedZone.__pulumiType;
    }

    /**
     * Cloud logging configuration
     */
    public readonly cloudLoggingConfig!: pulumi.Output<outputs.DnsManagedZoneCloudLoggingConfig | undefined>;
    /**
     * The time that this resource was created on the server. This is in RFC3339 text format.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DNS name of this managed zone, for instance "example.com.".
     */
    public readonly dnsName!: pulumi.Output<string>;
    /**
     * DNSSEC configuration
     */
    public readonly dnssecConfig!: pulumi.Output<outputs.DnsManagedZoneDnssecConfig | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Set this true to delete all records in the zone.
     */
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field
     * contains the set of destinations to forward to.
     */
    public readonly forwardingConfig!: pulumi.Output<outputs.DnsManagedZoneForwardingConfig | undefined>;
    /**
     * A set of key/value label pairs to assign to this ManagedZone. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Unique identifier for the resource; defined by the server.
     */
    public /*out*/ readonly managedZoneId!: pulumi.Output<number>;
    /**
     * User assigned name for this resource. Must be unique within the project.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Delegate your managed_zone to these virtual name servers; defined by the server
     */
    public /*out*/ readonly nameServers!: pulumi.Output<string[]>;
    /**
     * The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the
     * network to peer with.
     */
    public readonly peeringConfig!: pulumi.Output<outputs.DnsManagedZonePeeringConfig | undefined>;
    /**
     * For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from. At least one of
     * 'gke_clusters' or 'networks' must be specified.
     */
    public readonly privateVisibilityConfig!: pulumi.Output<outputs.DnsManagedZonePrivateVisibilityConfig | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse lookup queries using
     * automatically configured records for VPC resources. This only applies to networks listed under
     * 'private_visibility_config'.
     */
    public readonly reverseLookup!: pulumi.Output<boolean | undefined>;
    /**
     * The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains
     * information related to the namespace associated with the zone.
     */
    public readonly serviceDirectoryConfig!: pulumi.Output<outputs.DnsManagedZoneServiceDirectoryConfig | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DnsManagedZoneTimeouts | undefined>;
    /**
     * The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private
     * Cloud resources. Default value: "public" Possible values: ["private", "public"]
     */
    public readonly visibility!: pulumi.Output<string | undefined>;

    /**
     * Create a DnsManagedZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsManagedZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsManagedZoneArgs | DnsManagedZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsManagedZoneState | undefined;
            resourceInputs["cloudLoggingConfig"] = state ? state.cloudLoggingConfig : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["dnssecConfig"] = state ? state.dnssecConfig : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["forwardingConfig"] = state ? state.forwardingConfig : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["managedZoneId"] = state ? state.managedZoneId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameServers"] = state ? state.nameServers : undefined;
            resourceInputs["peeringConfig"] = state ? state.peeringConfig : undefined;
            resourceInputs["privateVisibilityConfig"] = state ? state.privateVisibilityConfig : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["reverseLookup"] = state ? state.reverseLookup : undefined;
            resourceInputs["serviceDirectoryConfig"] = state ? state.serviceDirectoryConfig : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["visibility"] = state ? state.visibility : undefined;
        } else {
            const args = argsOrState as DnsManagedZoneArgs | undefined;
            if ((!args || args.dnsName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dnsName'");
            }
            resourceInputs["cloudLoggingConfig"] = args ? args.cloudLoggingConfig : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsName"] = args ? args.dnsName : undefined;
            resourceInputs["dnssecConfig"] = args ? args.dnssecConfig : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["forwardingConfig"] = args ? args.forwardingConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["peeringConfig"] = args ? args.peeringConfig : undefined;
            resourceInputs["privateVisibilityConfig"] = args ? args.privateVisibilityConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["reverseLookup"] = args ? args.reverseLookup : undefined;
            resourceInputs["serviceDirectoryConfig"] = args ? args.serviceDirectoryConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["managedZoneId"] = undefined /*out*/;
            resourceInputs["nameServers"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsManagedZone.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnsManagedZone resources.
 */
export interface DnsManagedZoneState {
    /**
     * Cloud logging configuration
     */
    cloudLoggingConfig?: pulumi.Input<inputs.DnsManagedZoneCloudLoggingConfig>;
    /**
     * The time that this resource was created on the server. This is in RFC3339 text format.
     */
    creationTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * The DNS name of this managed zone, for instance "example.com.".
     */
    dnsName?: pulumi.Input<string>;
    /**
     * DNSSEC configuration
     */
    dnssecConfig?: pulumi.Input<inputs.DnsManagedZoneDnssecConfig>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set this true to delete all records in the zone.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field
     * contains the set of destinations to forward to.
     */
    forwardingConfig?: pulumi.Input<inputs.DnsManagedZoneForwardingConfig>;
    /**
     * A set of key/value label pairs to assign to this ManagedZone. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Unique identifier for the resource; defined by the server.
     */
    managedZoneId?: pulumi.Input<number>;
    /**
     * User assigned name for this resource. Must be unique within the project.
     */
    name?: pulumi.Input<string>;
    /**
     * Delegate your managed_zone to these virtual name servers; defined by the server
     */
    nameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the
     * network to peer with.
     */
    peeringConfig?: pulumi.Input<inputs.DnsManagedZonePeeringConfig>;
    /**
     * For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from. At least one of
     * 'gke_clusters' or 'networks' must be specified.
     */
    privateVisibilityConfig?: pulumi.Input<inputs.DnsManagedZonePrivateVisibilityConfig>;
    project?: pulumi.Input<string>;
    /**
     * Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse lookup queries using
     * automatically configured records for VPC resources. This only applies to networks listed under
     * 'private_visibility_config'.
     */
    reverseLookup?: pulumi.Input<boolean>;
    /**
     * The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains
     * information related to the namespace associated with the zone.
     */
    serviceDirectoryConfig?: pulumi.Input<inputs.DnsManagedZoneServiceDirectoryConfig>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DnsManagedZoneTimeouts>;
    /**
     * The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private
     * Cloud resources. Default value: "public" Possible values: ["private", "public"]
     */
    visibility?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DnsManagedZone resource.
 */
export interface DnsManagedZoneArgs {
    /**
     * Cloud logging configuration
     */
    cloudLoggingConfig?: pulumi.Input<inputs.DnsManagedZoneCloudLoggingConfig>;
    description?: pulumi.Input<string>;
    /**
     * The DNS name of this managed zone, for instance "example.com.".
     */
    dnsName: pulumi.Input<string>;
    /**
     * DNSSEC configuration
     */
    dnssecConfig?: pulumi.Input<inputs.DnsManagedZoneDnssecConfig>;
    /**
     * Set this true to delete all records in the zone.
     */
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field
     * contains the set of destinations to forward to.
     */
    forwardingConfig?: pulumi.Input<inputs.DnsManagedZoneForwardingConfig>;
    /**
     * A set of key/value label pairs to assign to this ManagedZone. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User assigned name for this resource. Must be unique within the project.
     */
    name?: pulumi.Input<string>;
    /**
     * The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the
     * network to peer with.
     */
    peeringConfig?: pulumi.Input<inputs.DnsManagedZonePeeringConfig>;
    /**
     * For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from. At least one of
     * 'gke_clusters' or 'networks' must be specified.
     */
    privateVisibilityConfig?: pulumi.Input<inputs.DnsManagedZonePrivateVisibilityConfig>;
    project?: pulumi.Input<string>;
    /**
     * Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse lookup queries using
     * automatically configured records for VPC resources. This only applies to networks listed under
     * 'private_visibility_config'.
     */
    reverseLookup?: pulumi.Input<boolean>;
    /**
     * The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains
     * information related to the namespace associated with the zone.
     */
    serviceDirectoryConfig?: pulumi.Input<inputs.DnsManagedZoneServiceDirectoryConfig>;
    timeouts?: pulumi.Input<inputs.DnsManagedZoneTimeouts>;
    /**
     * The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private
     * Cloud resources. Default value: "public" Possible values: ["private", "public"]
     */
    visibility?: pulumi.Input<string>;
}
