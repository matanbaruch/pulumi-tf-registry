// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeResizeRequest extends pulumi.CustomResource {
    /**
     * Get an existing ComputeResizeRequest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeResizeRequestState, opts?: pulumi.CustomResourceOptions): ComputeResizeRequest {
        return new ComputeResizeRequest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeResizeRequest:ComputeResizeRequest';

    /**
     * Returns true if the given object is an instance of ComputeResizeRequest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeResizeRequest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeResizeRequest.__pulumiType;
    }

    /**
     * The creation timestamp for this resize request in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resize-request.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the managed instance group. The name should conform to RFC1035 or be a resource ID. Authorization requires
     * the following IAM permission on the specified resource instanceGroupManager: *compute.instanceGroupManagers.update
     */
    public readonly instanceGroupManager!: pulumi.Output<string>;
    /**
     * The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Requested run duration for instances that will be created by this request. At the end of the run duration instance will
     * be deleted.
     */
    public readonly requestedRunDuration!: pulumi.Output<outputs.ComputeResizeRequestRequestedRunDuration | undefined>;
    /**
     * The number of instances to be created by this resize request. The group's target size will be increased by this number.
     */
    public readonly resizeBy!: pulumi.Output<number>;
    /**
     * [Output only] Current state of the request.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * [Output only] Status of the request.
     */
    public /*out*/ readonly statuses!: pulumi.Output<outputs.ComputeResizeRequestStatus[]>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeResizeRequestTimeouts | undefined>;
    /**
     * Name of the compute zone scoping this request. Name should conform to RFC1035.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a ComputeResizeRequest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeResizeRequestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeResizeRequestArgs | ComputeResizeRequestState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeResizeRequestState | undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceGroupManager"] = state ? state.instanceGroupManager : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["requestedRunDuration"] = state ? state.requestedRunDuration : undefined;
            resourceInputs["resizeBy"] = state ? state.resizeBy : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["statuses"] = state ? state.statuses : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as ComputeResizeRequestArgs | undefined;
            if ((!args || args.instanceGroupManager === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceGroupManager'");
            }
            if ((!args || args.resizeBy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resizeBy'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceGroupManager"] = args ? args.instanceGroupManager : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["requestedRunDuration"] = args ? args.requestedRunDuration : undefined;
            resourceInputs["resizeBy"] = args ? args.resizeBy : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["statuses"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeResizeRequest.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeResizeRequest resources.
 */
export interface ComputeResizeRequestState {
    /**
     * The creation timestamp for this resize request in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resize-request.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the managed instance group. The name should conform to RFC1035 or be a resource ID. Authorization requires
     * the following IAM permission on the specified resource instanceGroupManager: *compute.instanceGroupManagers.update
     */
    instanceGroupManager?: pulumi.Input<string>;
    /**
     * The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Requested run duration for instances that will be created by this request. At the end of the run duration instance will
     * be deleted.
     */
    requestedRunDuration?: pulumi.Input<inputs.ComputeResizeRequestRequestedRunDuration>;
    /**
     * The number of instances to be created by this resize request. The group's target size will be increased by this number.
     */
    resizeBy?: pulumi.Input<number>;
    /**
     * [Output only] Current state of the request.
     */
    state?: pulumi.Input<string>;
    /**
     * [Output only] Status of the request.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.ComputeResizeRequestStatus>[]>;
    timeouts?: pulumi.Input<inputs.ComputeResizeRequestTimeouts>;
    /**
     * Name of the compute zone scoping this request. Name should conform to RFC1035.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeResizeRequest resource.
 */
export interface ComputeResizeRequestArgs {
    /**
     * An optional description of this resize-request.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the managed instance group. The name should conform to RFC1035 or be a resource ID. Authorization requires
     * the following IAM permission on the specified resource instanceGroupManager: *compute.instanceGroupManagers.update
     */
    instanceGroupManager: pulumi.Input<string>;
    /**
     * The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Requested run duration for instances that will be created by this request. At the end of the run duration instance will
     * be deleted.
     */
    requestedRunDuration?: pulumi.Input<inputs.ComputeResizeRequestRequestedRunDuration>;
    /**
     * The number of instances to be created by this resize request. The group's target size will be increased by this number.
     */
    resizeBy: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.ComputeResizeRequestTimeouts>;
    /**
     * Name of the compute zone scoping this request. Name should conform to RFC1035.
     */
    zone: pulumi.Input<string>;
}
