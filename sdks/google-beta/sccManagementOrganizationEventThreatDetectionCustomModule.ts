// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SccManagementOrganizationEventThreatDetectionCustomModule extends pulumi.CustomResource {
    /**
     * Get an existing SccManagementOrganizationEventThreatDetectionCustomModule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SccManagementOrganizationEventThreatDetectionCustomModuleState, opts?: pulumi.CustomResourceOptions): SccManagementOrganizationEventThreatDetectionCustomModule {
        return new SccManagementOrganizationEventThreatDetectionCustomModule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/sccManagementOrganizationEventThreatDetectionCustomModule:SccManagementOrganizationEventThreatDetectionCustomModule';

    /**
     * Returns true if the given object is an instance of SccManagementOrganizationEventThreatDetectionCustomModule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SccManagementOrganizationEventThreatDetectionCustomModule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SccManagementOrganizationEventThreatDetectionCustomModule.__pulumiType;
    }

    /**
     * Config for the module. For the resident module, its config value is defined at this level. For the inherited module, its
     * config value is inherited from the ancestor module.
     */
    public readonly config!: pulumi.Output<string | undefined>;
    /**
     * The human readable name to be displayed for the module.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The state of enablement for the module at the given level of the hierarchy. Possible values: ["ENABLED", "DISABLED"]
     */
    public readonly enablementState!: pulumi.Output<string | undefined>;
    /**
     * The editor that last updated the custom module
     */
    public /*out*/ readonly lastEditor!: pulumi.Output<string>;
    /**
     * Location ID of the parent organization. Only global is supported at the moment.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The resource name of the Event Threat Detection custom module. Its format is
     * "organizations/{organization}/locations/{location}/eventThreatDetectionCustomModules/{eventThreatDetectionCustomModule}".
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Numerical ID of the parent organization.
     */
    public readonly organization!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SccManagementOrganizationEventThreatDetectionCustomModuleTimeouts | undefined>;
    /**
     * Immutable. Type for the module. e.g. CONFIGURABLE_BAD_IP.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The time at which the custom module was last updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a SccManagementOrganizationEventThreatDetectionCustomModule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SccManagementOrganizationEventThreatDetectionCustomModuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SccManagementOrganizationEventThreatDetectionCustomModuleArgs | SccManagementOrganizationEventThreatDetectionCustomModuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SccManagementOrganizationEventThreatDetectionCustomModuleState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enablementState"] = state ? state.enablementState : undefined;
            resourceInputs["lastEditor"] = state ? state.lastEditor : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as SccManagementOrganizationEventThreatDetectionCustomModuleArgs | undefined;
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enablementState"] = args ? args.enablementState : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["lastEditor"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SccManagementOrganizationEventThreatDetectionCustomModule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SccManagementOrganizationEventThreatDetectionCustomModule resources.
 */
export interface SccManagementOrganizationEventThreatDetectionCustomModuleState {
    /**
     * Config for the module. For the resident module, its config value is defined at this level. For the inherited module, its
     * config value is inherited from the ancestor module.
     */
    config?: pulumi.Input<string>;
    /**
     * The human readable name to be displayed for the module.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The state of enablement for the module at the given level of the hierarchy. Possible values: ["ENABLED", "DISABLED"]
     */
    enablementState?: pulumi.Input<string>;
    /**
     * The editor that last updated the custom module
     */
    lastEditor?: pulumi.Input<string>;
    /**
     * Location ID of the parent organization. Only global is supported at the moment.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the Event Threat Detection custom module. Its format is
     * "organizations/{organization}/locations/{location}/eventThreatDetectionCustomModules/{eventThreatDetectionCustomModule}".
     */
    name?: pulumi.Input<string>;
    /**
     * Numerical ID of the parent organization.
     */
    organization?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SccManagementOrganizationEventThreatDetectionCustomModuleTimeouts>;
    /**
     * Immutable. Type for the module. e.g. CONFIGURABLE_BAD_IP.
     */
    type?: pulumi.Input<string>;
    /**
     * The time at which the custom module was last updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SccManagementOrganizationEventThreatDetectionCustomModule resource.
 */
export interface SccManagementOrganizationEventThreatDetectionCustomModuleArgs {
    /**
     * Config for the module. For the resident module, its config value is defined at this level. For the inherited module, its
     * config value is inherited from the ancestor module.
     */
    config?: pulumi.Input<string>;
    /**
     * The human readable name to be displayed for the module.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The state of enablement for the module at the given level of the hierarchy. Possible values: ["ENABLED", "DISABLED"]
     */
    enablementState?: pulumi.Input<string>;
    /**
     * Location ID of the parent organization. Only global is supported at the moment.
     */
    location?: pulumi.Input<string>;
    /**
     * Numerical ID of the parent organization.
     */
    organization: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SccManagementOrganizationEventThreatDetectionCustomModuleTimeouts>;
    /**
     * Immutable. Type for the module. e.g. CONFIGURABLE_BAD_IP.
     */
    type?: pulumi.Input<string>;
}
