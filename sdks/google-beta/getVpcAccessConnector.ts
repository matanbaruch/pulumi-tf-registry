// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcAccessConnector(args: GetVpcAccessConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcAccessConnectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getVpcAccessConnector:getVpcAccessConnector", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcAccessConnector.
 */
export interface GetVpcAccessConnectorArgs {
    id?: string;
    name: string;
    project?: string;
    region?: string;
}

/**
 * A collection of values returned by getVpcAccessConnector.
 */
export interface GetVpcAccessConnectorResult {
    readonly connectedProjects: string[];
    readonly id: string;
    readonly ipCidrRange: string;
    readonly machineType: string;
    readonly maxInstances: number;
    readonly maxThroughput: number;
    readonly minInstances: number;
    readonly minThroughput: number;
    readonly name: string;
    readonly network: string;
    readonly project?: string;
    readonly region?: string;
    readonly selfLink: string;
    readonly state: string;
    readonly subnets: outputs.GetVpcAccessConnectorSubnet[];
}
export function getVpcAccessConnectorOutput(args: GetVpcAccessConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcAccessConnectorResult> {
    return pulumi.output(args).apply((a: any) => getVpcAccessConnector(a, opts))
}

/**
 * A collection of arguments for invoking getVpcAccessConnector.
 */
export interface GetVpcAccessConnectorOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
