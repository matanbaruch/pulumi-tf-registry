// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PubsubTopic extends pulumi.CustomResource {
    /**
     * Get an existing PubsubTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PubsubTopicState, opts?: pulumi.CustomResourceOptions): PubsubTopic {
        return new PubsubTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/pubsubTopic:PubsubTopic';

    /**
     * Returns true if the given object is an instance of PubsubTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PubsubTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PubsubTopic.__pulumiType;
    }

    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Settings for ingestion from a data source into this topic.
     */
    public readonly ingestionDataSourceSettings!: pulumi.Output<outputs.PubsubTopicIngestionDataSourceSettings | undefined>;
    /**
     * The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
     * project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
     * 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
     * 'projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*'
     */
    public readonly kmsKeyName!: pulumi.Output<string | undefined>;
    /**
     * A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
     * the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
     * the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
     * published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
     * any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
     * not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
     * a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
     */
    public readonly messageRetentionDuration!: pulumi.Output<string | undefined>;
    /**
     * Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
     * present, then no constraints are in effect.
     */
    public readonly messageStoragePolicy!: pulumi.Output<outputs.PubsubTopicMessageStoragePolicy | undefined>;
    /**
     * Name of the topic.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Settings for validating messages published against a schema.
     */
    public readonly schemaSettings!: pulumi.Output<outputs.PubsubTopicSchemaSettings | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.PubsubTopicTimeouts | undefined>;

    /**
     * Create a PubsubTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PubsubTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PubsubTopicArgs | PubsubTopicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PubsubTopicState | undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["ingestionDataSourceSettings"] = state ? state.ingestionDataSourceSettings : undefined;
            resourceInputs["kmsKeyName"] = state ? state.kmsKeyName : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["messageRetentionDuration"] = state ? state.messageRetentionDuration : undefined;
            resourceInputs["messageStoragePolicy"] = state ? state.messageStoragePolicy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["schemaSettings"] = state ? state.schemaSettings : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as PubsubTopicArgs | undefined;
            resourceInputs["ingestionDataSourceSettings"] = args ? args.ingestionDataSourceSettings : undefined;
            resourceInputs["kmsKeyName"] = args ? args.kmsKeyName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["messageRetentionDuration"] = args ? args.messageRetentionDuration : undefined;
            resourceInputs["messageStoragePolicy"] = args ? args.messageStoragePolicy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["schemaSettings"] = args ? args.schemaSettings : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PubsubTopic.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PubsubTopic resources.
 */
export interface PubsubTopicState {
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Settings for ingestion from a data source into this topic.
     */
    ingestionDataSourceSettings?: pulumi.Input<inputs.PubsubTopicIngestionDataSourceSettings>;
    /**
     * The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
     * project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
     * 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
     * 'projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*'
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
     * the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
     * the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
     * published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
     * any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
     * not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
     * a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
     */
    messageRetentionDuration?: pulumi.Input<string>;
    /**
     * Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
     * present, then no constraints are in effect.
     */
    messageStoragePolicy?: pulumi.Input<inputs.PubsubTopicMessageStoragePolicy>;
    /**
     * Name of the topic.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Settings for validating messages published against a schema.
     */
    schemaSettings?: pulumi.Input<inputs.PubsubTopicSchemaSettings>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.PubsubTopicTimeouts>;
}

/**
 * The set of arguments for constructing a PubsubTopic resource.
 */
export interface PubsubTopicArgs {
    /**
     * Settings for ingestion from a data source into this topic.
     */
    ingestionDataSourceSettings?: pulumi.Input<inputs.PubsubTopicIngestionDataSourceSettings>;
    /**
     * The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
     * project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
     * 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
     * 'projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*'
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
     * the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
     * the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
     * published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
     * any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
     * not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
     * a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
     */
    messageRetentionDuration?: pulumi.Input<string>;
    /**
     * Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
     * present, then no constraints are in effect.
     */
    messageStoragePolicy?: pulumi.Input<inputs.PubsubTopicMessageStoragePolicy>;
    /**
     * Name of the topic.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Settings for validating messages published against a schema.
     */
    schemaSettings?: pulumi.Input<inputs.PubsubTopicSchemaSettings>;
    timeouts?: pulumi.Input<inputs.PubsubTopicTimeouts>;
}
