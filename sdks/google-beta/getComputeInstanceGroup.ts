// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeInstanceGroup(args?: GetComputeInstanceGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeInstanceGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getComputeInstanceGroup:getComputeInstanceGroup", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
        "selfLink": args.selfLink,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeInstanceGroup.
 */
export interface GetComputeInstanceGroupArgs {
    id?: string;
    name?: string;
    project?: string;
    selfLink?: string;
    zone?: string;
}

/**
 * A collection of values returned by getComputeInstanceGroup.
 */
export interface GetComputeInstanceGroupResult {
    readonly description: string;
    readonly id: string;
    readonly instances: string[];
    readonly name?: string;
    readonly namedPorts: outputs.GetComputeInstanceGroupNamedPort[];
    readonly network: string;
    readonly project: string;
    readonly selfLink: string;
    readonly size: number;
    readonly zone: string;
}
export function getComputeInstanceGroupOutput(args?: GetComputeInstanceGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeInstanceGroupResult> {
    return pulumi.output(args).apply((a: any) => getComputeInstanceGroup(a, opts))
}

/**
 * A collection of arguments for invoking getComputeInstanceGroup.
 */
export interface GetComputeInstanceGroupOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    selfLink?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
