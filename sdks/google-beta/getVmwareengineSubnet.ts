// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVmwareengineSubnet(args: GetVmwareengineSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetVmwareengineSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getVmwareengineSubnet:getVmwareengineSubnet", {
        "id": args.id,
        "name": args.name,
        "parent": args.parent,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVmwareengineSubnet.
 */
export interface GetVmwareengineSubnetArgs {
    id?: string;
    name: string;
    parent: string;
}

/**
 * A collection of values returned by getVmwareengineSubnet.
 */
export interface GetVmwareengineSubnetResult {
    readonly createTime: string;
    readonly dhcpAddressRanges: outputs.GetVmwareengineSubnetDhcpAddressRange[];
    readonly gatewayId: string;
    readonly gatewayIp: string;
    readonly id: string;
    readonly ipCidrRange: string;
    readonly name: string;
    readonly parent: string;
    readonly standardConfig: boolean;
    readonly state: string;
    readonly type: string;
    readonly uid: string;
    readonly updateTime: string;
    readonly vlanId: number;
}
export function getVmwareengineSubnetOutput(args: GetVmwareengineSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmwareengineSubnetResult> {
    return pulumi.output(args).apply((a: any) => getVmwareengineSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getVmwareengineSubnet.
 */
export interface GetVmwareengineSubnetOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parent: pulumi.Input<string>;
}
