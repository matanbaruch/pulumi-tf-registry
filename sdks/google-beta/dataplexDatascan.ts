// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataplexDatascan extends pulumi.CustomResource {
    /**
     * Get an existing DataplexDatascan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataplexDatascanState, opts?: pulumi.CustomResourceOptions): DataplexDatascan {
        return new DataplexDatascan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dataplexDatascan:DataplexDatascan';

    /**
     * Returns true if the given object is an instance of DataplexDatascan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataplexDatascan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataplexDatascan.__pulumiType;
    }

    /**
     * The time when the scan was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The data source for DataScan.
     */
    public readonly data!: pulumi.Output<outputs.DataplexDatascanData>;
    /**
     * DataProfileScan related setting.
     */
    public readonly dataProfileSpec!: pulumi.Output<outputs.DataplexDatascanDataProfileSpec | undefined>;
    /**
     * DataQualityScan related setting.
     */
    public readonly dataQualitySpec!: pulumi.Output<outputs.DataplexDatascanDataQualitySpec | undefined>;
    /**
     * DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
     * number or a letter.
     */
    public readonly dataScanId!: pulumi.Output<string>;
    /**
     * Description of the scan.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * User friendly display name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * DataScan execution settings.
     */
    public readonly executionSpec!: pulumi.Output<outputs.DataplexDatascanExecutionSpec>;
    /**
     * Status of the data scan execution.
     */
    public /*out*/ readonly executionStatuses!: pulumi.Output<outputs.DataplexDatascanExecutionStatus[]>;
    /**
     * User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location where the data scan should reside.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The relative resource name of the scan, of the form: projects/{project}/locations/{locationId}/dataScans/{datascan_id},
     * where project refers to a project_id or project_number and locationId refers to a GCP region.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Current state of the DataScan.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DataplexDatascanTimeouts | undefined>;
    /**
     * The type of DataScan.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with
     * the same name.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The time when the scan was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a DataplexDatascan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataplexDatascanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataplexDatascanArgs | DataplexDatascanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataplexDatascanState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["dataProfileSpec"] = state ? state.dataProfileSpec : undefined;
            resourceInputs["dataQualitySpec"] = state ? state.dataQualitySpec : undefined;
            resourceInputs["dataScanId"] = state ? state.dataScanId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["executionSpec"] = state ? state.executionSpec : undefined;
            resourceInputs["executionStatuses"] = state ? state.executionStatuses : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as DataplexDatascanArgs | undefined;
            if ((!args || args.data === undefined) && !opts.urn) {
                throw new Error("Missing required property 'data'");
            }
            if ((!args || args.dataScanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataScanId'");
            }
            if ((!args || args.executionSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'executionSpec'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["dataProfileSpec"] = args ? args.dataProfileSpec : undefined;
            resourceInputs["dataQualitySpec"] = args ? args.dataQualitySpec : undefined;
            resourceInputs["dataScanId"] = args ? args.dataScanId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["executionSpec"] = args ? args.executionSpec : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["executionStatuses"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataplexDatascan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataplexDatascan resources.
 */
export interface DataplexDatascanState {
    /**
     * The time when the scan was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The data source for DataScan.
     */
    data?: pulumi.Input<inputs.DataplexDatascanData>;
    /**
     * DataProfileScan related setting.
     */
    dataProfileSpec?: pulumi.Input<inputs.DataplexDatascanDataProfileSpec>;
    /**
     * DataQualityScan related setting.
     */
    dataQualitySpec?: pulumi.Input<inputs.DataplexDatascanDataQualitySpec>;
    /**
     * DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
     * number or a letter.
     */
    dataScanId?: pulumi.Input<string>;
    /**
     * Description of the scan.
     */
    description?: pulumi.Input<string>;
    /**
     * User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * DataScan execution settings.
     */
    executionSpec?: pulumi.Input<inputs.DataplexDatascanExecutionSpec>;
    /**
     * Status of the data scan execution.
     */
    executionStatuses?: pulumi.Input<pulumi.Input<inputs.DataplexDatascanExecutionStatus>[]>;
    /**
     * User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the data scan should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * The relative resource name of the scan, of the form: projects/{project}/locations/{locationId}/dataScans/{datascan_id},
     * where project refers to a project_id or project_number and locationId refers to a GCP region.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Current state of the DataScan.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DataplexDatascanTimeouts>;
    /**
     * The type of DataScan.
     */
    type?: pulumi.Input<string>;
    /**
     * System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with
     * the same name.
     */
    uid?: pulumi.Input<string>;
    /**
     * The time when the scan was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataplexDatascan resource.
 */
export interface DataplexDatascanArgs {
    /**
     * The data source for DataScan.
     */
    data: pulumi.Input<inputs.DataplexDatascanData>;
    /**
     * DataProfileScan related setting.
     */
    dataProfileSpec?: pulumi.Input<inputs.DataplexDatascanDataProfileSpec>;
    /**
     * DataQualityScan related setting.
     */
    dataQualitySpec?: pulumi.Input<inputs.DataplexDatascanDataQualitySpec>;
    /**
     * DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
     * number or a letter.
     */
    dataScanId: pulumi.Input<string>;
    /**
     * Description of the scan.
     */
    description?: pulumi.Input<string>;
    /**
     * User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * DataScan execution settings.
     */
    executionSpec: pulumi.Input<inputs.DataplexDatascanExecutionSpec>;
    /**
     * User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the data scan should reside.
     */
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataplexDatascanTimeouts>;
}
