// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPubsubSubscriptionIamPolicy(args: GetPubsubSubscriptionIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPubsubSubscriptionIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getPubsubSubscriptionIamPolicy:getPubsubSubscriptionIamPolicy", {
        "id": args.id,
        "project": args.project,
        "subscription": args.subscription,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPubsubSubscriptionIamPolicy.
 */
export interface GetPubsubSubscriptionIamPolicyArgs {
    id?: string;
    project?: string;
    subscription: string;
}

/**
 * A collection of values returned by getPubsubSubscriptionIamPolicy.
 */
export interface GetPubsubSubscriptionIamPolicyResult {
    readonly etag: string;
    readonly id: string;
    readonly policyData: string;
    readonly project: string;
    readonly subscription: string;
}
export function getPubsubSubscriptionIamPolicyOutput(args: GetPubsubSubscriptionIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPubsubSubscriptionIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPubsubSubscriptionIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getPubsubSubscriptionIamPolicy.
 */
export interface GetPubsubSubscriptionIamPolicyOutputArgs {
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    subscription: pulumi.Input<string>;
}
