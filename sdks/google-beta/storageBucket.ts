// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StorageBucket extends pulumi.CustomResource {
    /**
     * Get an existing StorageBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageBucketState, opts?: pulumi.CustomResourceOptions): StorageBucket {
        return new StorageBucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/storageBucket:StorageBucket';

    /**
     * Returns true if the given object is an instance of StorageBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageBucket.__pulumiType;
    }

    /**
     * The bucket's autoclass configuration.
     */
    public readonly autoclass!: pulumi.Output<outputs.StorageBucketAutoclass | undefined>;
    /**
     * The bucket's Cross-Origin Resource Sharing (CORS) configuration.
     */
    public readonly cors!: pulumi.Output<outputs.StorageBucketCor[] | undefined>;
    /**
     * The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket.
     * If the bucket is designated a single or multi-region, the parameters are empty.
     */
    public readonly customPlacementConfig!: pulumi.Output<outputs.StorageBucketCustomPlacementConfig | undefined>;
    /**
     * Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
     */
    public readonly defaultEventBasedHold!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Enables each object in the bucket to have its own retention policy, which prevents deletion until stored for a specific
     * length of time.
     */
    public readonly enableObjectRetention!: pulumi.Output<boolean | undefined>;
    /**
     * The bucket's encryption configuration.
     */
    public readonly encryption!: pulumi.Output<outputs.StorageBucketEncryption | undefined>;
    public readonly forceDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * A set of key/value label pairs to assign to the bucket.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The bucket's Lifecycle Rules configuration.
     */
    public readonly lifecycleRules!: pulumi.Output<outputs.StorageBucketLifecycleRule[] | undefined>;
    /**
     * The Google Cloud Storage location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The bucket's Access & Storage Logs configuration.
     */
    public readonly logging!: pulumi.Output<outputs.StorageBucketLogging | undefined>;
    /**
     * The name of the bucket.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The project number of the project in which the resource belongs.
     */
    public /*out*/ readonly projectNumber!: pulumi.Output<number>;
    /**
     * Prevents public access to a bucket.
     */
    public readonly publicAccessPrevention!: pulumi.Output<string>;
    /**
     * Enables Requester Pays on a storage bucket.
     */
    public readonly requesterPays!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration of the bucket's data retention policy for how long objects in the bucket should be retained.
     */
    public readonly retentionPolicy!: pulumi.Output<outputs.StorageBucketRetentionPolicy | undefined>;
    /**
     * Specifies the RPO setting of bucket. If set 'ASYNC_TURBO', The Turbo Replication will be enabled for the dual-region
     * bucket. Value 'DEFAULT' will set RPO setting to default. Turbo Replication is only for buckets in dual-regions.See the
     * docs for more details.
     */
    public readonly rpo!: pulumi.Output<string>;
    /**
     * The URI of the created resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot
     * be permanently deleted. If it is not provided, by default Google Cloud Storage sets this to default soft delete policy
     */
    public readonly softDeletePolicy!: pulumi.Output<outputs.StorageBucketSoftDeletePolicy | undefined>;
    /**
     * The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
     * ARCHIVE.
     */
    public readonly storageClass!: pulumi.Output<string | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.StorageBucketTimeouts | undefined>;
    /**
     * Enables uniform bucket-level access on a bucket.
     */
    public readonly uniformBucketLevelAccess!: pulumi.Output<boolean>;
    /**
     * The base URL of the bucket, in the format gs://<bucket-name>.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;
    /**
     * The bucket's Versioning configuration.
     */
    public readonly versioning!: pulumi.Output<outputs.StorageBucketVersioning | undefined>;
    /**
     * Configuration if the bucket acts as a website.
     */
    public readonly website!: pulumi.Output<outputs.StorageBucketWebsite | undefined>;

    /**
     * Create a StorageBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageBucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageBucketArgs | StorageBucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageBucketState | undefined;
            resourceInputs["autoclass"] = state ? state.autoclass : undefined;
            resourceInputs["cors"] = state ? state.cors : undefined;
            resourceInputs["customPlacementConfig"] = state ? state.customPlacementConfig : undefined;
            resourceInputs["defaultEventBasedHold"] = state ? state.defaultEventBasedHold : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["enableObjectRetention"] = state ? state.enableObjectRetention : undefined;
            resourceInputs["encryption"] = state ? state.encryption : undefined;
            resourceInputs["forceDestroy"] = state ? state.forceDestroy : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["lifecycleRules"] = state ? state.lifecycleRules : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["projectNumber"] = state ? state.projectNumber : undefined;
            resourceInputs["publicAccessPrevention"] = state ? state.publicAccessPrevention : undefined;
            resourceInputs["requesterPays"] = state ? state.requesterPays : undefined;
            resourceInputs["retentionPolicy"] = state ? state.retentionPolicy : undefined;
            resourceInputs["rpo"] = state ? state.rpo : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["softDeletePolicy"] = state ? state.softDeletePolicy : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uniformBucketLevelAccess"] = state ? state.uniformBucketLevelAccess : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["versioning"] = state ? state.versioning : undefined;
            resourceInputs["website"] = state ? state.website : undefined;
        } else {
            const args = argsOrState as StorageBucketArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["autoclass"] = args ? args.autoclass : undefined;
            resourceInputs["cors"] = args ? args.cors : undefined;
            resourceInputs["customPlacementConfig"] = args ? args.customPlacementConfig : undefined;
            resourceInputs["defaultEventBasedHold"] = args ? args.defaultEventBasedHold : undefined;
            resourceInputs["enableObjectRetention"] = args ? args.enableObjectRetention : undefined;
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["forceDestroy"] = args ? args.forceDestroy : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lifecycleRules"] = args ? args.lifecycleRules : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["publicAccessPrevention"] = args ? args.publicAccessPrevention : undefined;
            resourceInputs["requesterPays"] = args ? args.requesterPays : undefined;
            resourceInputs["retentionPolicy"] = args ? args.retentionPolicy : undefined;
            resourceInputs["rpo"] = args ? args.rpo : undefined;
            resourceInputs["softDeletePolicy"] = args ? args.softDeletePolicy : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["uniformBucketLevelAccess"] = args ? args.uniformBucketLevelAccess : undefined;
            resourceInputs["versioning"] = args ? args.versioning : undefined;
            resourceInputs["website"] = args ? args.website : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["projectNumber"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageBucket.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageBucket resources.
 */
export interface StorageBucketState {
    /**
     * The bucket's autoclass configuration.
     */
    autoclass?: pulumi.Input<inputs.StorageBucketAutoclass>;
    /**
     * The bucket's Cross-Origin Resource Sharing (CORS) configuration.
     */
    cors?: pulumi.Input<pulumi.Input<inputs.StorageBucketCor>[]>;
    /**
     * The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket.
     * If the bucket is designated a single or multi-region, the parameters are empty.
     */
    customPlacementConfig?: pulumi.Input<inputs.StorageBucketCustomPlacementConfig>;
    /**
     * Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
     */
    defaultEventBasedHold?: pulumi.Input<boolean>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Enables each object in the bucket to have its own retention policy, which prevents deletion until stored for a specific
     * length of time.
     */
    enableObjectRetention?: pulumi.Input<boolean>;
    /**
     * The bucket's encryption configuration.
     */
    encryption?: pulumi.Input<inputs.StorageBucketEncryption>;
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * A set of key/value label pairs to assign to the bucket.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The bucket's Lifecycle Rules configuration.
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.StorageBucketLifecycleRule>[]>;
    /**
     * The Google Cloud Storage location
     */
    location?: pulumi.Input<string>;
    /**
     * The bucket's Access & Storage Logs configuration.
     */
    logging?: pulumi.Input<inputs.StorageBucketLogging>;
    /**
     * The name of the bucket.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The project number of the project in which the resource belongs.
     */
    projectNumber?: pulumi.Input<number>;
    /**
     * Prevents public access to a bucket.
     */
    publicAccessPrevention?: pulumi.Input<string>;
    /**
     * Enables Requester Pays on a storage bucket.
     */
    requesterPays?: pulumi.Input<boolean>;
    /**
     * Configuration of the bucket's data retention policy for how long objects in the bucket should be retained.
     */
    retentionPolicy?: pulumi.Input<inputs.StorageBucketRetentionPolicy>;
    /**
     * Specifies the RPO setting of bucket. If set 'ASYNC_TURBO', The Turbo Replication will be enabled for the dual-region
     * bucket. Value 'DEFAULT' will set RPO setting to default. Turbo Replication is only for buckets in dual-regions.See the
     * docs for more details.
     */
    rpo?: pulumi.Input<string>;
    /**
     * The URI of the created resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot
     * be permanently deleted. If it is not provided, by default Google Cloud Storage sets this to default soft delete policy
     */
    softDeletePolicy?: pulumi.Input<inputs.StorageBucketSoftDeletePolicy>;
    /**
     * The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
     * ARCHIVE.
     */
    storageClass?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.StorageBucketTimeouts>;
    /**
     * Enables uniform bucket-level access on a bucket.
     */
    uniformBucketLevelAccess?: pulumi.Input<boolean>;
    /**
     * The base URL of the bucket, in the format gs://<bucket-name>.
     */
    url?: pulumi.Input<string>;
    /**
     * The bucket's Versioning configuration.
     */
    versioning?: pulumi.Input<inputs.StorageBucketVersioning>;
    /**
     * Configuration if the bucket acts as a website.
     */
    website?: pulumi.Input<inputs.StorageBucketWebsite>;
}

/**
 * The set of arguments for constructing a StorageBucket resource.
 */
export interface StorageBucketArgs {
    /**
     * The bucket's autoclass configuration.
     */
    autoclass?: pulumi.Input<inputs.StorageBucketAutoclass>;
    /**
     * The bucket's Cross-Origin Resource Sharing (CORS) configuration.
     */
    cors?: pulumi.Input<pulumi.Input<inputs.StorageBucketCor>[]>;
    /**
     * The bucket's custom location configuration, which specifies the individual regions that comprise a dual-region bucket.
     * If the bucket is designated a single or multi-region, the parameters are empty.
     */
    customPlacementConfig?: pulumi.Input<inputs.StorageBucketCustomPlacementConfig>;
    /**
     * Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
     */
    defaultEventBasedHold?: pulumi.Input<boolean>;
    /**
     * Enables each object in the bucket to have its own retention policy, which prevents deletion until stored for a specific
     * length of time.
     */
    enableObjectRetention?: pulumi.Input<boolean>;
    /**
     * The bucket's encryption configuration.
     */
    encryption?: pulumi.Input<inputs.StorageBucketEncryption>;
    forceDestroy?: pulumi.Input<boolean>;
    /**
     * A set of key/value label pairs to assign to the bucket.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The bucket's Lifecycle Rules configuration.
     */
    lifecycleRules?: pulumi.Input<pulumi.Input<inputs.StorageBucketLifecycleRule>[]>;
    /**
     * The Google Cloud Storage location
     */
    location: pulumi.Input<string>;
    /**
     * The bucket's Access & Storage Logs configuration.
     */
    logging?: pulumi.Input<inputs.StorageBucketLogging>;
    /**
     * The name of the bucket.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Prevents public access to a bucket.
     */
    publicAccessPrevention?: pulumi.Input<string>;
    /**
     * Enables Requester Pays on a storage bucket.
     */
    requesterPays?: pulumi.Input<boolean>;
    /**
     * Configuration of the bucket's data retention policy for how long objects in the bucket should be retained.
     */
    retentionPolicy?: pulumi.Input<inputs.StorageBucketRetentionPolicy>;
    /**
     * Specifies the RPO setting of bucket. If set 'ASYNC_TURBO', The Turbo Replication will be enabled for the dual-region
     * bucket. Value 'DEFAULT' will set RPO setting to default. Turbo Replication is only for buckets in dual-regions.See the
     * docs for more details.
     */
    rpo?: pulumi.Input<string>;
    /**
     * The bucket's soft delete policy, which defines the period of time that soft-deleted objects will be retained, and cannot
     * be permanently deleted. If it is not provided, by default Google Cloud Storage sets this to default soft delete policy
     */
    softDeletePolicy?: pulumi.Input<inputs.StorageBucketSoftDeletePolicy>;
    /**
     * The Storage Class of the new bucket. Supported values include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
     * ARCHIVE.
     */
    storageClass?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageBucketTimeouts>;
    /**
     * Enables uniform bucket-level access on a bucket.
     */
    uniformBucketLevelAccess?: pulumi.Input<boolean>;
    /**
     * The bucket's Versioning configuration.
     */
    versioning?: pulumi.Input<inputs.StorageBucketVersioning>;
    /**
     * Configuration if the bucket acts as a website.
     */
    website?: pulumi.Input<inputs.StorageBucketWebsite>;
}
