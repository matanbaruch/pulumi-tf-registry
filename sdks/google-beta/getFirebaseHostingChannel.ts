// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirebaseHostingChannel(args: GetFirebaseHostingChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetFirebaseHostingChannelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getFirebaseHostingChannel:getFirebaseHostingChannel", {
        "channelId": args.channelId,
        "id": args.id,
        "siteId": args.siteId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirebaseHostingChannel.
 */
export interface GetFirebaseHostingChannelArgs {
    channelId: string;
    id?: string;
    siteId: string;
}

/**
 * A collection of values returned by getFirebaseHostingChannel.
 */
export interface GetFirebaseHostingChannelResult {
    readonly channelId: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly expireTime: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly retainedReleaseCount: number;
    readonly siteId: string;
    readonly terraformLabels: {[key: string]: string};
    readonly ttl: string;
}
export function getFirebaseHostingChannelOutput(args: GetFirebaseHostingChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirebaseHostingChannelResult> {
    return pulumi.output(args).apply((a: any) => getFirebaseHostingChannel(a, opts))
}

/**
 * A collection of arguments for invoking getFirebaseHostingChannel.
 */
export interface GetFirebaseHostingChannelOutputArgs {
    channelId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
}
