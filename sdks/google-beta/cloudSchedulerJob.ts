// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudSchedulerJob extends pulumi.CustomResource {
    /**
     * Get an existing CloudSchedulerJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudSchedulerJobState, opts?: pulumi.CustomResourceOptions): CloudSchedulerJob {
        return new CloudSchedulerJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/cloudSchedulerJob:CloudSchedulerJob';

    /**
     * Returns true if the given object is an instance of CloudSchedulerJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudSchedulerJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudSchedulerJob.__pulumiType;
    }

    /**
     * App Engine HTTP target. If the job providers a App Engine HTTP target the cron will send a request to the service
     * instance
     */
    public readonly appEngineHttpTarget!: pulumi.Output<outputs.CloudSchedulerJobAppEngineHttpTarget | undefined>;
    /**
     * The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled
     * and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in execution logs. Cloud
     * Scheduler will retry the job according to the RetryConfig. The allowed duration for this deadline is: * For HTTP
     * targets, between 15 seconds and 30 minutes. * For App Engine HTTP targets, between 15 seconds and 24 hours. * **Note**:
     * For PubSub targets, this field is ignored - setting it will introduce an unresolvable diff. A duration in seconds with
     * up to nine fractional digits, terminated by 's'. Example: "3.5s"
     */
    public readonly attemptDeadline!: pulumi.Output<string | undefined>;
    /**
     * A human-readable description for the job. This string must not contain more than 500 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * HTTP target. If the job providers a http_target the cron will send a request to the targeted url
     */
    public readonly httpTarget!: pulumi.Output<outputs.CloudSchedulerJobHttpTarget | undefined>;
    /**
     * The name of the job.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Sets the job to a paused state. Jobs default to being enabled when this property is not set.
     */
    public readonly paused!: pulumi.Output<boolean>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Pub/Sub target If the job providers a Pub/Sub target the cron will publish a message to the provided topic
     */
    public readonly pubsubTarget!: pulumi.Output<outputs.CloudSchedulerJobPubsubTarget | undefined>;
    public readonly region!: pulumi.Output<string>;
    /**
     * By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler,
     * then it will be retried with exponential backoff according to the settings
     */
    public readonly retryConfig!: pulumi.Output<outputs.CloudSchedulerJobRetryConfig | undefined>;
    /**
     * Describes the schedule on which the job will be executed.
     */
    public readonly schedule!: pulumi.Output<string | undefined>;
    /**
     * State of the job.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the
     * tz database.
     */
    public readonly timeZone!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.CloudSchedulerJobTimeouts | undefined>;

    /**
     * Create a CloudSchedulerJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudSchedulerJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudSchedulerJobArgs | CloudSchedulerJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudSchedulerJobState | undefined;
            resourceInputs["appEngineHttpTarget"] = state ? state.appEngineHttpTarget : undefined;
            resourceInputs["attemptDeadline"] = state ? state.attemptDeadline : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["httpTarget"] = state ? state.httpTarget : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paused"] = state ? state.paused : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pubsubTarget"] = state ? state.pubsubTarget : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["retryConfig"] = state ? state.retryConfig : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CloudSchedulerJobArgs | undefined;
            resourceInputs["appEngineHttpTarget"] = args ? args.appEngineHttpTarget : undefined;
            resourceInputs["attemptDeadline"] = args ? args.attemptDeadline : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["httpTarget"] = args ? args.httpTarget : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paused"] = args ? args.paused : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["pubsubTarget"] = args ? args.pubsubTarget : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["retryConfig"] = args ? args.retryConfig : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudSchedulerJob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudSchedulerJob resources.
 */
export interface CloudSchedulerJobState {
    /**
     * App Engine HTTP target. If the job providers a App Engine HTTP target the cron will send a request to the service
     * instance
     */
    appEngineHttpTarget?: pulumi.Input<inputs.CloudSchedulerJobAppEngineHttpTarget>;
    /**
     * The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled
     * and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in execution logs. Cloud
     * Scheduler will retry the job according to the RetryConfig. The allowed duration for this deadline is: * For HTTP
     * targets, between 15 seconds and 30 minutes. * For App Engine HTTP targets, between 15 seconds and 24 hours. * **Note**:
     * For PubSub targets, this field is ignored - setting it will introduce an unresolvable diff. A duration in seconds with
     * up to nine fractional digits, terminated by 's'. Example: "3.5s"
     */
    attemptDeadline?: pulumi.Input<string>;
    /**
     * A human-readable description for the job. This string must not contain more than 500 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * HTTP target. If the job providers a http_target the cron will send a request to the targeted url
     */
    httpTarget?: pulumi.Input<inputs.CloudSchedulerJobHttpTarget>;
    /**
     * The name of the job.
     */
    name?: pulumi.Input<string>;
    /**
     * Sets the job to a paused state. Jobs default to being enabled when this property is not set.
     */
    paused?: pulumi.Input<boolean>;
    project?: pulumi.Input<string>;
    /**
     * Pub/Sub target If the job providers a Pub/Sub target the cron will publish a message to the provided topic
     */
    pubsubTarget?: pulumi.Input<inputs.CloudSchedulerJobPubsubTarget>;
    region?: pulumi.Input<string>;
    /**
     * By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler,
     * then it will be retried with exponential backoff according to the settings
     */
    retryConfig?: pulumi.Input<inputs.CloudSchedulerJobRetryConfig>;
    /**
     * Describes the schedule on which the job will be executed.
     */
    schedule?: pulumi.Input<string>;
    /**
     * State of the job.
     */
    state?: pulumi.Input<string>;
    /**
     * Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the
     * tz database.
     */
    timeZone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudSchedulerJobTimeouts>;
}

/**
 * The set of arguments for constructing a CloudSchedulerJob resource.
 */
export interface CloudSchedulerJobArgs {
    /**
     * App Engine HTTP target. If the job providers a App Engine HTTP target the cron will send a request to the service
     * instance
     */
    appEngineHttpTarget?: pulumi.Input<inputs.CloudSchedulerJobAppEngineHttpTarget>;
    /**
     * The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled
     * and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in execution logs. Cloud
     * Scheduler will retry the job according to the RetryConfig. The allowed duration for this deadline is: * For HTTP
     * targets, between 15 seconds and 30 minutes. * For App Engine HTTP targets, between 15 seconds and 24 hours. * **Note**:
     * For PubSub targets, this field is ignored - setting it will introduce an unresolvable diff. A duration in seconds with
     * up to nine fractional digits, terminated by 's'. Example: "3.5s"
     */
    attemptDeadline?: pulumi.Input<string>;
    /**
     * A human-readable description for the job. This string must not contain more than 500 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * HTTP target. If the job providers a http_target the cron will send a request to the targeted url
     */
    httpTarget?: pulumi.Input<inputs.CloudSchedulerJobHttpTarget>;
    /**
     * The name of the job.
     */
    name?: pulumi.Input<string>;
    /**
     * Sets the job to a paused state. Jobs default to being enabled when this property is not set.
     */
    paused?: pulumi.Input<boolean>;
    project?: pulumi.Input<string>;
    /**
     * Pub/Sub target If the job providers a Pub/Sub target the cron will publish a message to the provided topic
     */
    pubsubTarget?: pulumi.Input<inputs.CloudSchedulerJobPubsubTarget>;
    region?: pulumi.Input<string>;
    /**
     * By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler,
     * then it will be retried with exponential backoff according to the settings
     */
    retryConfig?: pulumi.Input<inputs.CloudSchedulerJobRetryConfig>;
    /**
     * Describes the schedule on which the job will be executed.
     */
    schedule?: pulumi.Input<string>;
    /**
     * Specifies the time zone to be used in interpreting schedule. The value of this field must be a time zone name from the
     * tz database.
     */
    timeZone?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudSchedulerJobTimeouts>;
}
