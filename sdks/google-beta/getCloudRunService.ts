// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudRunService(args: GetCloudRunServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudRunServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getCloudRunService:getCloudRunService", {
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudRunService.
 */
export interface GetCloudRunServiceArgs {
    id?: string;
    location: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getCloudRunService.
 */
export interface GetCloudRunServiceResult {
    readonly autogenerateRevisionName: boolean;
    readonly id: string;
    readonly location: string;
    readonly metadatas: outputs.GetCloudRunServiceMetadata[];
    readonly name: string;
    readonly project?: string;
    readonly statuses: outputs.GetCloudRunServiceStatus[];
    readonly templates: outputs.GetCloudRunServiceTemplate[];
    readonly traffics: outputs.GetCloudRunServiceTraffic[];
}
export function getCloudRunServiceOutput(args: GetCloudRunServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudRunServiceResult> {
    return pulumi.output(args).apply((a: any) => getCloudRunService(a, opts))
}

/**
 * A collection of arguments for invoking getCloudRunService.
 */
export interface GetCloudRunServiceOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
