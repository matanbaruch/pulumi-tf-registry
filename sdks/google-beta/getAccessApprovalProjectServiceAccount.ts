// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccessApprovalProjectServiceAccount(args: GetAccessApprovalProjectServiceAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessApprovalProjectServiceAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getAccessApprovalProjectServiceAccount:getAccessApprovalProjectServiceAccount", {
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessApprovalProjectServiceAccount.
 */
export interface GetAccessApprovalProjectServiceAccountArgs {
    id?: string;
    projectId: string;
}

/**
 * A collection of values returned by getAccessApprovalProjectServiceAccount.
 */
export interface GetAccessApprovalProjectServiceAccountResult {
    readonly accountEmail: string;
    readonly id: string;
    readonly name: string;
    readonly projectId: string;
}
export function getAccessApprovalProjectServiceAccountOutput(args: GetAccessApprovalProjectServiceAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessApprovalProjectServiceAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccessApprovalProjectServiceAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccessApprovalProjectServiceAccount.
 */
export interface GetAccessApprovalProjectServiceAccountOutputArgs {
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
