// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudbuildWorkerPool extends pulumi.CustomResource {
    /**
     * Get an existing CloudbuildWorkerPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudbuildWorkerPoolState, opts?: pulumi.CustomResourceOptions): CloudbuildWorkerPool {
        return new CloudbuildWorkerPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/cloudbuildWorkerPool:CloudbuildWorkerPool';

    /**
     * Returns true if the given object is an instance of CloudbuildWorkerPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudbuildWorkerPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudbuildWorkerPool.__pulumiType;
    }

    /**
     * User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size
     * limitations. **Note**: This field is non-authoritative, and will only manage the annotations present in your
     * configuration. Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Output only. Time at which the request to create the `WorkerPool` was received.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Output only. Time at which the request to delete the `WorkerPool` was received.
     */
    public /*out*/ readonly deleteTime!: pulumi.Output<string>;
    /**
     * A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveAnnotations!: pulumi.Output<{[key: string]: string}>;
    /**
     * The location for the resource
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * User-defined name of the `WorkerPool`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network configuration for the `WorkerPool`.
     */
    public readonly networkConfig!: pulumi.Output<outputs.CloudbuildWorkerPoolNetworkConfig | undefined>;
    /**
     * The project for the resource
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Output only. `WorkerPool` state. Possible values: STATE_UNSPECIFIED, PENDING, APPROVED, REJECTED, CANCELLED
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CloudbuildWorkerPoolTimeouts | undefined>;
    /**
     * Output only. A unique identifier for the `WorkerPool`.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * Output only. Time at which the request to update the `WorkerPool` was received.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Configuration to be used for a creating workers in the `WorkerPool`.
     */
    public readonly workerConfig!: pulumi.Output<outputs.CloudbuildWorkerPoolWorkerConfig | undefined>;

    /**
     * Create a CloudbuildWorkerPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudbuildWorkerPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudbuildWorkerPoolArgs | CloudbuildWorkerPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudbuildWorkerPoolState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deleteTime"] = state ? state.deleteTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveAnnotations"] = state ? state.effectiveAnnotations : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["workerConfig"] = state ? state.workerConfig : undefined;
        } else {
            const args = argsOrState as CloudbuildWorkerPoolArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["workerConfig"] = args ? args.workerConfig : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["deleteTime"] = undefined /*out*/;
            resourceInputs["effectiveAnnotations"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudbuildWorkerPool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudbuildWorkerPool resources.
 */
export interface CloudbuildWorkerPoolState {
    /**
     * User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size
     * limitations. **Note**: This field is non-authoritative, and will only manage the annotations present in your
     * configuration. Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Output only. Time at which the request to create the `WorkerPool` was received.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Output only. Time at which the request to delete the `WorkerPool` was received.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     */
    displayName?: pulumi.Input<string>;
    effectiveAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    /**
     * User-defined name of the `WorkerPool`.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration for the `WorkerPool`.
     */
    networkConfig?: pulumi.Input<inputs.CloudbuildWorkerPoolNetworkConfig>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Output only. `WorkerPool` state. Possible values: STATE_UNSPECIFIED, PENDING, APPROVED, REJECTED, CANCELLED
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudbuildWorkerPoolTimeouts>;
    /**
     * Output only. A unique identifier for the `WorkerPool`.
     */
    uid?: pulumi.Input<string>;
    /**
     * Output only. Time at which the request to update the `WorkerPool` was received.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Configuration to be used for a creating workers in the `WorkerPool`.
     */
    workerConfig?: pulumi.Input<inputs.CloudbuildWorkerPoolWorkerConfig>;
}

/**
 * The set of arguments for constructing a CloudbuildWorkerPool resource.
 */
export interface CloudbuildWorkerPoolArgs {
    /**
     * User specified annotations. See https://google.aip.dev/128#annotations for more details such as format and size
     * limitations. **Note**: This field is non-authoritative, and will only manage the annotations present in your
     * configuration. Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-specified, human-readable name for the `WorkerPool`. If provided, this value must be 1-63 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The location for the resource
     */
    location: pulumi.Input<string>;
    /**
     * User-defined name of the `WorkerPool`.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration for the `WorkerPool`.
     */
    networkConfig?: pulumi.Input<inputs.CloudbuildWorkerPoolNetworkConfig>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CloudbuildWorkerPoolTimeouts>;
    /**
     * Configuration to be used for a creating workers in the `WorkerPool`.
     */
    workerConfig?: pulumi.Input<inputs.CloudbuildWorkerPoolWorkerConfig>;
}
