// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeRegionHealthCheck extends pulumi.CustomResource {
    /**
     * Get an existing ComputeRegionHealthCheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeRegionHealthCheckState, opts?: pulumi.CustomResourceOptions): ComputeRegionHealthCheck {
        return new ComputeRegionHealthCheck(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeRegionHealthCheck:ComputeRegionHealthCheck';

    /**
     * Returns true if the given object is an instance of ComputeRegionHealthCheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeRegionHealthCheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeRegionHealthCheck.__pulumiType;
    }

    /**
     * How often (in seconds) to send a health check. The default value is 5 seconds.
     */
    public readonly checkIntervalSec!: pulumi.Output<number | undefined>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A nested object resource
     */
    public readonly grpcHealthCheck!: pulumi.Output<outputs.ComputeRegionHealthCheckGrpcHealthCheck | undefined>;
    /**
     * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
     */
    public readonly healthyThreshold!: pulumi.Output<number | undefined>;
    /**
     * A nested object resource
     */
    public readonly http2HealthCheck!: pulumi.Output<outputs.ComputeRegionHealthCheckHttp2HealthCheck | undefined>;
    /**
     * A nested object resource
     */
    public readonly httpHealthCheck!: pulumi.Output<outputs.ComputeRegionHealthCheckHttpHealthCheck | undefined>;
    /**
     * A nested object resource
     */
    public readonly httpsHealthCheck!: pulumi.Output<outputs.ComputeRegionHealthCheckHttpsHealthCheck | undefined>;
    /**
     * Configure logging on this health check.
     */
    public readonly logConfig!: pulumi.Output<outputs.ComputeRegionHealthCheckLogConfig | undefined>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The Region in which the created health check should reside. If it is not provided, the provider region is used.
     */
    public readonly region!: pulumi.Output<string>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * A nested object resource
     */
    public readonly sslHealthCheck!: pulumi.Output<outputs.ComputeRegionHealthCheckSslHealthCheck | undefined>;
    /**
     * A nested object resource
     */
    public readonly tcpHealthCheck!: pulumi.Output<outputs.ComputeRegionHealthCheckTcpHealthCheck | undefined>;
    /**
     * How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
     * have greater value than checkIntervalSec.
     */
    public readonly timeoutSec!: pulumi.Output<number | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeRegionHealthCheckTimeouts | undefined>;
    /**
     * The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
     */
    public readonly unhealthyThreshold!: pulumi.Output<number | undefined>;

    /**
     * Create a ComputeRegionHealthCheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComputeRegionHealthCheckArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeRegionHealthCheckArgs | ComputeRegionHealthCheckState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeRegionHealthCheckState | undefined;
            resourceInputs["checkIntervalSec"] = state ? state.checkIntervalSec : undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["grpcHealthCheck"] = state ? state.grpcHealthCheck : undefined;
            resourceInputs["healthyThreshold"] = state ? state.healthyThreshold : undefined;
            resourceInputs["http2HealthCheck"] = state ? state.http2HealthCheck : undefined;
            resourceInputs["httpHealthCheck"] = state ? state.httpHealthCheck : undefined;
            resourceInputs["httpsHealthCheck"] = state ? state.httpsHealthCheck : undefined;
            resourceInputs["logConfig"] = state ? state.logConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["sslHealthCheck"] = state ? state.sslHealthCheck : undefined;
            resourceInputs["tcpHealthCheck"] = state ? state.tcpHealthCheck : undefined;
            resourceInputs["timeoutSec"] = state ? state.timeoutSec : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["unhealthyThreshold"] = state ? state.unhealthyThreshold : undefined;
        } else {
            const args = argsOrState as ComputeRegionHealthCheckArgs | undefined;
            resourceInputs["checkIntervalSec"] = args ? args.checkIntervalSec : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["grpcHealthCheck"] = args ? args.grpcHealthCheck : undefined;
            resourceInputs["healthyThreshold"] = args ? args.healthyThreshold : undefined;
            resourceInputs["http2HealthCheck"] = args ? args.http2HealthCheck : undefined;
            resourceInputs["httpHealthCheck"] = args ? args.httpHealthCheck : undefined;
            resourceInputs["httpsHealthCheck"] = args ? args.httpsHealthCheck : undefined;
            resourceInputs["logConfig"] = args ? args.logConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["sslHealthCheck"] = args ? args.sslHealthCheck : undefined;
            resourceInputs["tcpHealthCheck"] = args ? args.tcpHealthCheck : undefined;
            resourceInputs["timeoutSec"] = args ? args.timeoutSec : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["unhealthyThreshold"] = args ? args.unhealthyThreshold : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeRegionHealthCheck.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeRegionHealthCheck resources.
 */
export interface ComputeRegionHealthCheckState {
    /**
     * How often (in seconds) to send a health check. The default value is 5 seconds.
     */
    checkIntervalSec?: pulumi.Input<number>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A nested object resource
     */
    grpcHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckGrpcHealthCheck>;
    /**
     * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * A nested object resource
     */
    http2HealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckHttp2HealthCheck>;
    /**
     * A nested object resource
     */
    httpHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckHttpHealthCheck>;
    /**
     * A nested object resource
     */
    httpsHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckHttpsHealthCheck>;
    /**
     * Configure logging on this health check.
     */
    logConfig?: pulumi.Input<inputs.ComputeRegionHealthCheckLogConfig>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The Region in which the created health check should reside. If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    selfLink?: pulumi.Input<string>;
    /**
     * A nested object resource
     */
    sslHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckSslHealthCheck>;
    /**
     * A nested object resource
     */
    tcpHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckTcpHealthCheck>;
    /**
     * How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
     * have greater value than checkIntervalSec.
     */
    timeoutSec?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.ComputeRegionHealthCheckTimeouts>;
    /**
     * The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.
     */
    type?: pulumi.Input<string>;
    /**
     * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ComputeRegionHealthCheck resource.
 */
export interface ComputeRegionHealthCheckArgs {
    /**
     * How often (in seconds) to send a health check. The default value is 5 seconds.
     */
    checkIntervalSec?: pulumi.Input<number>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A nested object resource
     */
    grpcHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckGrpcHealthCheck>;
    /**
     * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * A nested object resource
     */
    http2HealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckHttp2HealthCheck>;
    /**
     * A nested object resource
     */
    httpHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckHttpHealthCheck>;
    /**
     * A nested object resource
     */
    httpsHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckHttpsHealthCheck>;
    /**
     * Configure logging on this health check.
     */
    logConfig?: pulumi.Input<inputs.ComputeRegionHealthCheckLogConfig>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The Region in which the created health check should reside. If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * A nested object resource
     */
    sslHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckSslHealthCheck>;
    /**
     * A nested object resource
     */
    tcpHealthCheck?: pulumi.Input<inputs.ComputeRegionHealthCheckTcpHealthCheck>;
    /**
     * How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
     * have greater value than checkIntervalSec.
     */
    timeoutSec?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.ComputeRegionHealthCheckTimeouts>;
    /**
     * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}
