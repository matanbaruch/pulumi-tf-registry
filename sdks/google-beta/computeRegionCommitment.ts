// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeRegionCommitment extends pulumi.CustomResource {
    /**
     * Get an existing ComputeRegionCommitment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeRegionCommitmentState, opts?: pulumi.CustomResourceOptions): ComputeRegionCommitment {
        return new ComputeRegionCommitment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeRegionCommitment:ComputeRegionCommitment';

    /**
     * Returns true if the given object is an instance of ComputeRegionCommitment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeRegionCommitment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeRegionCommitment.__pulumiType;
    }

    /**
     * Specifies whether to enable automatic renewal for the commitment. The default value is false if not specified. If the
     * field is set to true, the commitment will be automatically renewed for either one or three years according to the terms
     * of the existing commitment.
     */
    public readonly autoRenew!: pulumi.Output<boolean>;
    /**
     * The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or
     * MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in
     * licenseResources. Note that only MACHINE commitments should have a Type specified. Possible values: ["LICENSE",
     * "MACHINE"]
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Unique identifier for the resource.
     */
    public /*out*/ readonly commitmentId!: pulumi.Output<number>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Commitment end time in RFC3339 text format.
     */
    public /*out*/ readonly endTimestamp!: pulumi.Output<string>;
    /**
     * The license specification required as part of a license commitment.
     */
    public readonly licenseResource!: pulumi.Output<outputs.ComputeRegionCommitmentLicenseResource | undefined>;
    /**
     * Name of the resource. The name must be 1-63 characters long and match the regular expression 'a-z?' which means the
     * first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The plan for this commitment, which determines duration and discount rate. The currently supported plans are
     * TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years). Possible values: ["TWELVE_MONTH", "THIRTY_SIX_MONTH"]
     */
    public readonly plan!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * URL of the region where this commitment may be used.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * A list of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur
     * together.
     */
    public readonly resources!: pulumi.Output<outputs.ComputeRegionCommitmentResource[] | undefined>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Commitment start time in RFC3339 text format.
     */
    public /*out*/ readonly startTimestamp!: pulumi.Output<string>;
    /**
     * Status of the commitment with regards to eventual expiration (each commitment has an end date defined).
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A human-readable explanation of the status.
     */
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeRegionCommitmentTimeouts | undefined>;
    /**
     * The type of commitment, which affects the discount rate and the eligible resources. The type could be one of the
     * following value: 'MEMORY_OPTIMIZED', 'ACCELERATOR_OPTIMIZED', 'GENERAL_PURPOSE_N1', 'GENERAL_PURPOSE_N2',
     * 'GENERAL_PURPOSE_N2D', 'GENERAL_PURPOSE_E2', 'GENERAL_PURPOSE_T2D', 'GENERAL_PURPOSE_C3', 'COMPUTE_OPTIMIZED_C2',
     * 'COMPUTE_OPTIMIZED_C2D' and 'GRAPHICS_OPTIMIZED_G2'
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a ComputeRegionCommitment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeRegionCommitmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeRegionCommitmentArgs | ComputeRegionCommitmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeRegionCommitmentState | undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["commitmentId"] = state ? state.commitmentId : undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endTimestamp"] = state ? state.endTimestamp : undefined;
            resourceInputs["licenseResource"] = state ? state.licenseResource : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["plan"] = state ? state.plan : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["startTimestamp"] = state ? state.startTimestamp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusMessage"] = state ? state.statusMessage : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ComputeRegionCommitmentArgs | undefined;
            if ((!args || args.plan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'plan'");
            }
            resourceInputs["autoRenew"] = args ? args.autoRenew : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["licenseResource"] = args ? args.licenseResource : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["commitmentId"] = undefined /*out*/;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["endTimestamp"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["startTimestamp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeRegionCommitment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeRegionCommitment resources.
 */
export interface ComputeRegionCommitmentState {
    /**
     * Specifies whether to enable automatic renewal for the commitment. The default value is false if not specified. If the
     * field is set to true, the commitment will be automatically renewed for either one or three years according to the terms
     * of the existing commitment.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or
     * MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in
     * licenseResources. Note that only MACHINE commitments should have a Type specified. Possible values: ["LICENSE",
     * "MACHINE"]
     */
    category?: pulumi.Input<string>;
    /**
     * Unique identifier for the resource.
     */
    commitmentId?: pulumi.Input<number>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Commitment end time in RFC3339 text format.
     */
    endTimestamp?: pulumi.Input<string>;
    /**
     * The license specification required as part of a license commitment.
     */
    licenseResource?: pulumi.Input<inputs.ComputeRegionCommitmentLicenseResource>;
    /**
     * Name of the resource. The name must be 1-63 characters long and match the regular expression 'a-z?' which means the
     * first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The plan for this commitment, which determines duration and discount rate. The currently supported plans are
     * TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years). Possible values: ["TWELVE_MONTH", "THIRTY_SIX_MONTH"]
     */
    plan?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * URL of the region where this commitment may be used.
     */
    region?: pulumi.Input<string>;
    /**
     * A list of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur
     * together.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ComputeRegionCommitmentResource>[]>;
    selfLink?: pulumi.Input<string>;
    /**
     * Commitment start time in RFC3339 text format.
     */
    startTimestamp?: pulumi.Input<string>;
    /**
     * Status of the commitment with regards to eventual expiration (each commitment has an end date defined).
     */
    status?: pulumi.Input<string>;
    /**
     * A human-readable explanation of the status.
     */
    statusMessage?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeRegionCommitmentTimeouts>;
    /**
     * The type of commitment, which affects the discount rate and the eligible resources. The type could be one of the
     * following value: 'MEMORY_OPTIMIZED', 'ACCELERATOR_OPTIMIZED', 'GENERAL_PURPOSE_N1', 'GENERAL_PURPOSE_N2',
     * 'GENERAL_PURPOSE_N2D', 'GENERAL_PURPOSE_E2', 'GENERAL_PURPOSE_T2D', 'GENERAL_PURPOSE_C3', 'COMPUTE_OPTIMIZED_C2',
     * 'COMPUTE_OPTIMIZED_C2D' and 'GRAPHICS_OPTIMIZED_G2'
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeRegionCommitment resource.
 */
export interface ComputeRegionCommitmentArgs {
    /**
     * Specifies whether to enable automatic renewal for the commitment. The default value is false if not specified. If the
     * field is set to true, the commitment will be automatically renewed for either one or three years according to the terms
     * of the existing commitment.
     */
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or
     * MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in
     * licenseResources. Note that only MACHINE commitments should have a Type specified. Possible values: ["LICENSE",
     * "MACHINE"]
     */
    category?: pulumi.Input<string>;
    /**
     * An optional description of this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The license specification required as part of a license commitment.
     */
    licenseResource?: pulumi.Input<inputs.ComputeRegionCommitmentLicenseResource>;
    /**
     * Name of the resource. The name must be 1-63 characters long and match the regular expression 'a-z?' which means the
     * first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The plan for this commitment, which determines duration and discount rate. The currently supported plans are
     * TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years). Possible values: ["TWELVE_MONTH", "THIRTY_SIX_MONTH"]
     */
    plan: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * URL of the region where this commitment may be used.
     */
    region?: pulumi.Input<string>;
    /**
     * A list of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur
     * together.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ComputeRegionCommitmentResource>[]>;
    timeouts?: pulumi.Input<inputs.ComputeRegionCommitmentTimeouts>;
    /**
     * The type of commitment, which affects the discount rate and the eligible resources. The type could be one of the
     * following value: 'MEMORY_OPTIMIZED', 'ACCELERATOR_OPTIMIZED', 'GENERAL_PURPOSE_N1', 'GENERAL_PURPOSE_N2',
     * 'GENERAL_PURPOSE_N2D', 'GENERAL_PURPOSE_E2', 'GENERAL_PURPOSE_T2D', 'GENERAL_PURPOSE_C3', 'COMPUTE_OPTIMIZED_C2',
     * 'COMPUTE_OPTIMIZED_C2D' and 'GRAPHICS_OPTIMIZED_G2'
     */
    type?: pulumi.Input<string>;
}
