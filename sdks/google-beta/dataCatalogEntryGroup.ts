// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataCatalogEntryGroup extends pulumi.CustomResource {
    /**
     * Get an existing DataCatalogEntryGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataCatalogEntryGroupState, opts?: pulumi.CustomResourceOptions): DataCatalogEntryGroup {
        return new DataCatalogEntryGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dataCatalogEntryGroup:DataCatalogEntryGroup';

    /**
     * Returns true if the given object is an instance of DataCatalogEntryGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataCatalogEntryGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataCatalogEntryGroup.__pulumiType;
    }

    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
     * numbers and underscores, and be at most 64 characters.
     */
    public readonly entryGroupId!: pulumi.Output<string>;
    /**
     * The resource name of the entry group in URL format. Example:
     * projects/{project}/locations/{location}/entryGroups/{entryGroupId}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * EntryGroup location region.
     */
    public readonly region!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DataCatalogEntryGroupTimeouts | undefined>;

    /**
     * Create a DataCatalogEntryGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataCatalogEntryGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataCatalogEntryGroupArgs | DataCatalogEntryGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataCatalogEntryGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["entryGroupId"] = state ? state.entryGroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DataCatalogEntryGroupArgs | undefined;
            if ((!args || args.entryGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entryGroupId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["entryGroupId"] = args ? args.entryGroupId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataCatalogEntryGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataCatalogEntryGroup resources.
 */
export interface DataCatalogEntryGroupState {
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    description?: pulumi.Input<string>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    displayName?: pulumi.Input<string>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
     * numbers and underscores, and be at most 64 characters.
     */
    entryGroupId?: pulumi.Input<string>;
    /**
     * The resource name of the entry group in URL format. Example:
     * projects/{project}/locations/{location}/entryGroups/{entryGroupId}
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * EntryGroup location region.
     */
    region?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataCatalogEntryGroupTimeouts>;
}

/**
 * The set of arguments for constructing a DataCatalogEntryGroup resource.
 */
export interface DataCatalogEntryGroupArgs {
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    description?: pulumi.Input<string>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    displayName?: pulumi.Input<string>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
     * numbers and underscores, and be at most 64 characters.
     */
    entryGroupId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * EntryGroup location region.
     */
    region?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataCatalogEntryGroupTimeouts>;
}
