// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudRunV2Job(args: GetCloudRunV2JobArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudRunV2JobResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getCloudRunV2Job:getCloudRunV2Job", {
        "id": args.id,
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudRunV2Job.
 */
export interface GetCloudRunV2JobArgs {
    id?: string;
    location?: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getCloudRunV2Job.
 */
export interface GetCloudRunV2JobResult {
    readonly annotations: {[key: string]: string};
    readonly binaryAuthorizations: outputs.GetCloudRunV2JobBinaryAuthorization[];
    readonly client: string;
    readonly clientVersion: string;
    readonly conditions: outputs.GetCloudRunV2JobCondition[];
    readonly createTime: string;
    readonly creator: string;
    readonly deleteTime: string;
    readonly deletionProtection: boolean;
    readonly effectiveAnnotations: {[key: string]: string};
    readonly effectiveLabels: {[key: string]: string};
    readonly etag: string;
    readonly executionCount: number;
    readonly expireTime: string;
    readonly generation: string;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly lastModifier: string;
    readonly latestCreatedExecutions: outputs.GetCloudRunV2JobLatestCreatedExecution[];
    readonly launchStage: string;
    readonly location?: string;
    readonly name: string;
    readonly observedGeneration: string;
    readonly project?: string;
    readonly reconciling: boolean;
    readonly runExecutionToken: string;
    readonly startExecutionToken: string;
    readonly templates: outputs.GetCloudRunV2JobTemplate[];
    readonly terminalConditions: outputs.GetCloudRunV2JobTerminalCondition[];
    readonly terraformLabels: {[key: string]: string};
    readonly uid: string;
    readonly updateTime: string;
}
export function getCloudRunV2JobOutput(args: GetCloudRunV2JobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudRunV2JobResult> {
    return pulumi.output(args).apply((a: any) => getCloudRunV2Job(a, opts))
}

/**
 * A collection of arguments for invoking getCloudRunV2Job.
 */
export interface GetCloudRunV2JobOutputArgs {
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
