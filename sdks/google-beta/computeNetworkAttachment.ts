// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeNetworkAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ComputeNetworkAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeNetworkAttachmentState, opts?: pulumi.CustomResourceOptions): ComputeNetworkAttachment {
        return new ComputeNetworkAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeNetworkAttachment:ComputeNetworkAttachment';

    /**
     * Returns true if the given object is an instance of ComputeNetworkAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeNetworkAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeNetworkAttachment.__pulumiType;
    }

    /**
     * An array of connections for all the producers connected to this network attachment.
     */
    public /*out*/ readonly connectionEndpoints!: pulumi.Output<outputs.ComputeNetworkAttachmentConnectionEndpoint[]>;
    /**
     * The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
     * attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
     * ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
     */
    public readonly connectionPreference!: pulumi.Output<string>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An
     * up-to-date fingerprint must be provided in order to patch.
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * Type of the resource.
     */
    public /*out*/ readonly kind!: pulumi.Output<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of
     * the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is
     * assured that the Network Attachment belongs to the same network as all the subnetworks.
     */
    public /*out*/ readonly network!: pulumi.Output<string>;
    /**
     * Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     */
    public readonly producerAcceptLists!: pulumi.Output<string[] | undefined>;
    /**
     * Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
     * number.
     */
    public readonly producerRejectLists!: pulumi.Output<string[] | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
     * this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Server-defined URL for the resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Server-defined URL for this resource's resource id.
     */
    public /*out*/ readonly selfLinkWithId!: pulumi.Output<string>;
    /**
     * An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
     * producers that connect to this network attachment.
     */
    public readonly subnetworks!: pulumi.Output<string[]>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeNetworkAttachmentTimeouts | undefined>;

    /**
     * Create a ComputeNetworkAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeNetworkAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeNetworkAttachmentArgs | ComputeNetworkAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeNetworkAttachmentState | undefined;
            resourceInputs["connectionEndpoints"] = state ? state.connectionEndpoints : undefined;
            resourceInputs["connectionPreference"] = state ? state.connectionPreference : undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["producerAcceptLists"] = state ? state.producerAcceptLists : undefined;
            resourceInputs["producerRejectLists"] = state ? state.producerRejectLists : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["selfLinkWithId"] = state ? state.selfLinkWithId : undefined;
            resourceInputs["subnetworks"] = state ? state.subnetworks : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ComputeNetworkAttachmentArgs | undefined;
            if ((!args || args.connectionPreference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionPreference'");
            }
            if ((!args || args.subnetworks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetworks'");
            }
            resourceInputs["connectionPreference"] = args ? args.connectionPreference : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["producerAcceptLists"] = args ? args.producerAcceptLists : undefined;
            resourceInputs["producerRejectLists"] = args ? args.producerRejectLists : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["subnetworks"] = args ? args.subnetworks : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["connectionEndpoints"] = undefined /*out*/;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["network"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["selfLinkWithId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeNetworkAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeNetworkAttachment resources.
 */
export interface ComputeNetworkAttachmentState {
    /**
     * An array of connections for all the producers connected to this network attachment.
     */
    connectionEndpoints?: pulumi.Input<pulumi.Input<inputs.ComputeNetworkAttachmentConnectionEndpoint>[]>;
    /**
     * The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
     * attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
     * ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
     */
    connectionPreference?: pulumi.Input<string>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An
     * up-to-date fingerprint must be provided in order to patch.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Type of the resource.
     */
    kind?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of
     * the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is
     * assured that the Network Attachment belongs to the same network as all the subnetworks.
     */
    network?: pulumi.Input<string>;
    /**
     * Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     */
    producerAcceptLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
     * number.
     */
    producerRejectLists?: pulumi.Input<pulumi.Input<string>[]>;
    project?: pulumi.Input<string>;
    /**
     * URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
     * this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    region?: pulumi.Input<string>;
    /**
     * Server-defined URL for the resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Server-defined URL for this resource's resource id.
     */
    selfLinkWithId?: pulumi.Input<string>;
    /**
     * An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
     * producers that connect to this network attachment.
     */
    subnetworks?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ComputeNetworkAttachmentTimeouts>;
}

/**
 * The set of arguments for constructing a ComputeNetworkAttachment resource.
 */
export interface ComputeNetworkAttachmentArgs {
    /**
     * The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
     * attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
     * ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
     */
    connectionPreference: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
     * digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     */
    producerAcceptLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
     * number.
     */
    producerRejectLists?: pulumi.Input<pulumi.Input<string>[]>;
    project?: pulumi.Input<string>;
    /**
     * URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
     * this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    region?: pulumi.Input<string>;
    /**
     * An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
     * producers that connect to this network attachment.
     */
    subnetworks: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ComputeNetworkAttachmentTimeouts>;
}
