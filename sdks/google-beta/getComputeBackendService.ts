// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComputeBackendService(args: GetComputeBackendServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeBackendServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getComputeBackendService:getComputeBackendService", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeBackendService.
 */
export interface GetComputeBackendServiceArgs {
    id?: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getComputeBackendService.
 */
export interface GetComputeBackendServiceResult {
    readonly affinityCookieTtlSec: number;
    readonly backends: outputs.GetComputeBackendServiceBackend[];
    readonly cdnPolicies: outputs.GetComputeBackendServiceCdnPolicy[];
    readonly circuitBreakers: outputs.GetComputeBackendServiceCircuitBreaker[];
    readonly compressionMode: string;
    readonly connectionDrainingTimeoutSec: number;
    readonly consistentHashes: outputs.GetComputeBackendServiceConsistentHash[];
    readonly creationTimestamp: string;
    readonly customRequestHeaders: string[];
    readonly customResponseHeaders: string[];
    readonly description: string;
    readonly edgeSecurityPolicy: string;
    readonly enableCdn: boolean;
    readonly fingerprint: string;
    readonly generatedId: number;
    readonly healthChecks: string[];
    readonly iaps: outputs.GetComputeBackendServiceIap[];
    readonly id: string;
    readonly loadBalancingScheme: string;
    readonly localityLbPolicies: outputs.GetComputeBackendServiceLocalityLbPolicy[];
    readonly localityLbPolicy: string;
    readonly logConfigs: outputs.GetComputeBackendServiceLogConfig[];
    readonly name: string;
    readonly outlierDetections: outputs.GetComputeBackendServiceOutlierDetection[];
    readonly portName: string;
    readonly project?: string;
    readonly protocol: string;
    readonly securityPolicy: string;
    readonly securitySettings: outputs.GetComputeBackendServiceSecuritySetting[];
    readonly selfLink: string;
    readonly serviceLbPolicy: string;
    readonly sessionAffinity: string;
    readonly timeoutSec: number;
}
export function getComputeBackendServiceOutput(args: GetComputeBackendServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeBackendServiceResult> {
    return pulumi.output(args).apply((a: any) => getComputeBackendService(a, opts))
}

/**
 * A collection of arguments for invoking getComputeBackendService.
 */
export interface GetComputeBackendServiceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
