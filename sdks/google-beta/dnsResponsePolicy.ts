// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DnsResponsePolicy extends pulumi.CustomResource {
    /**
     * Get an existing DnsResponsePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsResponsePolicyState, opts?: pulumi.CustomResourceOptions): DnsResponsePolicy {
        return new DnsResponsePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dnsResponsePolicy:DnsResponsePolicy';

    /**
     * Returns true if the given object is an instance of DnsResponsePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnsResponsePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnsResponsePolicy.__pulumiType;
    }

    /**
     * The description of the response policy, such as 'My new response policy'.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The list of Google Kubernetes Engine clusters that can see this zone.
     */
    public readonly gkeClusters!: pulumi.Output<outputs.DnsResponsePolicyGkeCluster[] | undefined>;
    /**
     * The list of network names specifying networks to which this policy is applied.
     */
    public readonly networks!: pulumi.Output<outputs.DnsResponsePolicyNetwork[] | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The user assigned name for this Response Policy, such as 'myresponsepolicy'.
     */
    public readonly responsePolicyName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DnsResponsePolicyTimeouts | undefined>;

    /**
     * Create a DnsResponsePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsResponsePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsResponsePolicyArgs | DnsResponsePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnsResponsePolicyState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gkeClusters"] = state ? state.gkeClusters : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["responsePolicyName"] = state ? state.responsePolicyName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DnsResponsePolicyArgs | undefined;
            if ((!args || args.responsePolicyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'responsePolicyName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["gkeClusters"] = args ? args.gkeClusters : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["responsePolicyName"] = args ? args.responsePolicyName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnsResponsePolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnsResponsePolicy resources.
 */
export interface DnsResponsePolicyState {
    /**
     * The description of the response policy, such as 'My new response policy'.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of Google Kubernetes Engine clusters that can see this zone.
     */
    gkeClusters?: pulumi.Input<pulumi.Input<inputs.DnsResponsePolicyGkeCluster>[]>;
    /**
     * The list of network names specifying networks to which this policy is applied.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.DnsResponsePolicyNetwork>[]>;
    project?: pulumi.Input<string>;
    /**
     * The user assigned name for this Response Policy, such as 'myresponsepolicy'.
     */
    responsePolicyName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DnsResponsePolicyTimeouts>;
}

/**
 * The set of arguments for constructing a DnsResponsePolicy resource.
 */
export interface DnsResponsePolicyArgs {
    /**
     * The description of the response policy, such as 'My new response policy'.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of Google Kubernetes Engine clusters that can see this zone.
     */
    gkeClusters?: pulumi.Input<pulumi.Input<inputs.DnsResponsePolicyGkeCluster>[]>;
    /**
     * The list of network names specifying networks to which this policy is applied.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.DnsResponsePolicyNetwork>[]>;
    project?: pulumi.Input<string>;
    /**
     * The user assigned name for this Response Policy, such as 'myresponsepolicy'.
     */
    responsePolicyName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DnsResponsePolicyTimeouts>;
}
