// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagedKafkaCluster extends pulumi.CustomResource {
    /**
     * Get an existing ManagedKafkaCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedKafkaClusterState, opts?: pulumi.CustomResourceOptions): ManagedKafkaCluster {
        return new ManagedKafkaCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/managedKafkaCluster:ManagedKafkaCluster';

    /**
     * Returns true if the given object is an instance of ManagedKafkaCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedKafkaCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedKafkaCluster.__pulumiType;
    }

    /**
     * A capacity configuration of a Kafka cluster.
     */
    public readonly capacityConfig!: pulumi.Output<outputs.ManagedKafkaClusterCapacityConfig>;
    /**
     * The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
     * characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
     * 'my-cluster-id'.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The time when the cluster was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
     */
    public readonly gcpConfig!: pulumi.Output<outputs.ManagedKafkaClusterGcpConfig>;
    /**
     * List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
     * underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
     * characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
     * supported locations.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the cluster. Structured like: 'projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID'.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Defines rebalancing behavior of a Kafka cluster.
     */
    public readonly rebalanceConfig!: pulumi.Output<outputs.ManagedKafkaClusterRebalanceConfig | undefined>;
    /**
     * The current state of the cluster. Possible values: 'STATE_UNSPECIFIED', 'CREATING', 'ACTIVE', 'DELETING'.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.ManagedKafkaClusterTimeouts | undefined>;
    /**
     * The time when the cluster was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ManagedKafkaCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedKafkaClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedKafkaClusterArgs | ManagedKafkaClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedKafkaClusterState | undefined;
            resourceInputs["capacityConfig"] = state ? state.capacityConfig : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["gcpConfig"] = state ? state.gcpConfig : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["rebalanceConfig"] = state ? state.rebalanceConfig : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as ManagedKafkaClusterArgs | undefined;
            if ((!args || args.capacityConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacityConfig'");
            }
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.gcpConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gcpConfig'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["capacityConfig"] = args ? args.capacityConfig : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["gcpConfig"] = args ? args.gcpConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["rebalanceConfig"] = args ? args.rebalanceConfig : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedKafkaCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ManagedKafkaCluster resources.
 */
export interface ManagedKafkaClusterState {
    /**
     * A capacity configuration of a Kafka cluster.
     */
    capacityConfig?: pulumi.Input<inputs.ManagedKafkaClusterCapacityConfig>;
    /**
     * The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
     * characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
     * 'my-cluster-id'.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The time when the cluster was created.
     */
    createTime?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
     */
    gcpConfig?: pulumi.Input<inputs.ManagedKafkaClusterGcpConfig>;
    /**
     * List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
     * underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
     * characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
     * supported locations.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the cluster. Structured like: 'projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID'.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Defines rebalancing behavior of a Kafka cluster.
     */
    rebalanceConfig?: pulumi.Input<inputs.ManagedKafkaClusterRebalanceConfig>;
    /**
     * The current state of the cluster. Possible values: 'STATE_UNSPECIFIED', 'CREATING', 'ACTIVE', 'DELETING'.
     */
    state?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ManagedKafkaClusterTimeouts>;
    /**
     * The time when the cluster was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagedKafkaCluster resource.
 */
export interface ManagedKafkaClusterArgs {
    /**
     * A capacity configuration of a Kafka cluster.
     */
    capacityConfig: pulumi.Input<inputs.ManagedKafkaClusterCapacityConfig>;
    /**
     * The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
     * characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
     * 'my-cluster-id'.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
     */
    gcpConfig: pulumi.Input<inputs.ManagedKafkaClusterGcpConfig>;
    /**
     * List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
     * underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
     * characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
     * configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
     * supported locations.
     */
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Defines rebalancing behavior of a Kafka cluster.
     */
    rebalanceConfig?: pulumi.Input<inputs.ManagedKafkaClusterRebalanceConfig>;
    timeouts?: pulumi.Input<inputs.ManagedKafkaClusterTimeouts>;
}
