// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DataformRepository extends pulumi.CustomResource {
    /**
     * Get an existing DataformRepository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataformRepositoryState, opts?: pulumi.CustomResourceOptions): DataformRepository {
        return new DataformRepository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dataformRepository:DataformRepository';

    /**
     * Returns true if the given object is an instance of DataformRepository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataformRepository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataformRepository.__pulumiType;
    }

    /**
     * Optional. The repository's user-friendly name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Optional. If set, configures this repository to be linked to a Git remote.
     */
    public readonly gitRemoteSettings!: pulumi.Output<outputs.DataformRepositoryGitRemoteSettings | undefined>;
    /**
     * Optional. The reference to a KMS encryption key. If provided, it will be used to encrypt user data in the repository and
     * all child resources. It is not possible to add or update the encryption key after the repository is created. Example
     * projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
     */
    public readonly kmsKeyName!: pulumi.Output<string | undefined>;
    /**
     * Optional. Repository user labels. An object containing a list of "key": value pairs. Example: { "name": "wrench",
     * "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
     * your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The repository's name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for
     * package installation operations. Must be in the format projects/*&#47;secrets/*&#47;versions/*. The file itself must be in a
     * JSON format.
     */
    public readonly npmrcEnvironmentVariablesSecretVersion!: pulumi.Output<string | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * A reference to the region
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The service account to run workflow invocations under.
     */
    public readonly serviceAccount!: pulumi.Output<string | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DataformRepositoryTimeouts | undefined>;
    /**
     * If set, fields of workspaceCompilationOverrides override the default compilation settings that are specified in
     * dataform.json when creating workspace-scoped compilation results.
     */
    public readonly workspaceCompilationOverrides!: pulumi.Output<outputs.DataformRepositoryWorkspaceCompilationOverrides | undefined>;

    /**
     * Create a DataformRepository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DataformRepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataformRepositoryArgs | DataformRepositoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataformRepositoryState | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["gitRemoteSettings"] = state ? state.gitRemoteSettings : undefined;
            resourceInputs["kmsKeyName"] = state ? state.kmsKeyName : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["npmrcEnvironmentVariablesSecretVersion"] = state ? state.npmrcEnvironmentVariablesSecretVersion : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["serviceAccount"] = state ? state.serviceAccount : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["workspaceCompilationOverrides"] = state ? state.workspaceCompilationOverrides : undefined;
        } else {
            const args = argsOrState as DataformRepositoryArgs | undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["gitRemoteSettings"] = args ? args.gitRemoteSettings : undefined;
            resourceInputs["kmsKeyName"] = args ? args.kmsKeyName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["npmrcEnvironmentVariablesSecretVersion"] = args ? args.npmrcEnvironmentVariablesSecretVersion : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["workspaceCompilationOverrides"] = args ? args.workspaceCompilationOverrides : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataformRepository.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DataformRepository resources.
 */
export interface DataformRepositoryState {
    /**
     * Optional. The repository's user-friendly name.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. If set, configures this repository to be linked to a Git remote.
     */
    gitRemoteSettings?: pulumi.Input<inputs.DataformRepositoryGitRemoteSettings>;
    /**
     * Optional. The reference to a KMS encryption key. If provided, it will be used to encrypt user data in the repository and
     * all child resources. It is not possible to add or update the encryption key after the repository is created. Example
     * projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * Optional. Repository user labels. An object containing a list of "key": value pairs. Example: { "name": "wrench",
     * "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
     * your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The repository's name.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for
     * package installation operations. Must be in the format projects/*&#47;secrets/*&#47;versions/*. The file itself must be in a
     * JSON format.
     */
    npmrcEnvironmentVariablesSecretVersion?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * A reference to the region
     */
    region?: pulumi.Input<string>;
    /**
     * The service account to run workflow invocations under.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DataformRepositoryTimeouts>;
    /**
     * If set, fields of workspaceCompilationOverrides override the default compilation settings that are specified in
     * dataform.json when creating workspace-scoped compilation results.
     */
    workspaceCompilationOverrides?: pulumi.Input<inputs.DataformRepositoryWorkspaceCompilationOverrides>;
}

/**
 * The set of arguments for constructing a DataformRepository resource.
 */
export interface DataformRepositoryArgs {
    /**
     * Optional. The repository's user-friendly name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Optional. If set, configures this repository to be linked to a Git remote.
     */
    gitRemoteSettings?: pulumi.Input<inputs.DataformRepositoryGitRemoteSettings>;
    /**
     * Optional. The reference to a KMS encryption key. If provided, it will be used to encrypt user data in the repository and
     * all child resources. It is not possible to add or update the encryption key after the repository is created. Example
     * projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
     */
    kmsKeyName?: pulumi.Input<string>;
    /**
     * Optional. Repository user labels. An object containing a list of "key": value pairs. Example: { "name": "wrench",
     * "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
     * your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The repository's name.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional. The name of the Secret Manager secret version to be used to interpolate variables into the .npmrc file for
     * package installation operations. Must be in the format projects/*&#47;secrets/*&#47;versions/*. The file itself must be in a
     * JSON format.
     */
    npmrcEnvironmentVariablesSecretVersion?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * A reference to the region
     */
    region?: pulumi.Input<string>;
    /**
     * The service account to run workflow invocations under.
     */
    serviceAccount?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DataformRepositoryTimeouts>;
    /**
     * If set, fields of workspaceCompilationOverrides override the default compilation settings that are specified in
     * dataform.json when creating workspace-scoped compilation results.
     */
    workspaceCompilationOverrides?: pulumi.Input<inputs.DataformRepositoryWorkspaceCompilationOverrides>;
}
