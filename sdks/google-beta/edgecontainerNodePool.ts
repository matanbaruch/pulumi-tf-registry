// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EdgecontainerNodePool extends pulumi.CustomResource {
    /**
     * Get an existing EdgecontainerNodePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgecontainerNodePoolState, opts?: pulumi.CustomResourceOptions): EdgecontainerNodePool {
        return new EdgecontainerNodePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/edgecontainerNodePool:EdgecontainerNodePool';

    /**
     * Returns true if the given object is an instance of EdgecontainerNodePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgecontainerNodePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgecontainerNodePool.__pulumiType;
    }

    /**
     * The name of the target Distributed Cloud Edge Cluster.
     */
    public readonly cluster!: pulumi.Output<string>;
    /**
     * The time when the node pool was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Labels associated with this resource. **Note**: This field is non-authoritative, and will only manage the labels present
     * in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Local disk encryption options. This field is only used when enabling CMEK support.
     */
    public readonly localDiskEncryption!: pulumi.Output<outputs.EdgecontainerNodePoolLocalDiskEncryption | undefined>;
    /**
     * The location of the resource.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Only machines matching this filter will be allowed to join the node pool. The filtering language accepts strings like
     * "name=<name>", and is documented in more detail in [AIP-160](https://google.aip.dev/160).
     */
    public readonly machineFilter!: pulumi.Output<string>;
    /**
     * The resource name of the node pool.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Configuration for each node in the NodePool
     */
    public readonly nodeConfig!: pulumi.Output<outputs.EdgecontainerNodePoolNodeConfig | undefined>;
    /**
     * The number of nodes in the pool.
     */
    public readonly nodeCount!: pulumi.Output<number>;
    /**
     * Name of the Google Distributed Cloud Edge zone where this node pool will be created. For example:
     * 'us-central1-edge-customer-a'.
     */
    public readonly nodeLocation!: pulumi.Output<string>;
    /**
     * The lowest release version among all worker nodes.
     */
    public /*out*/ readonly nodeVersion!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.EdgecontainerNodePoolTimeouts | undefined>;
    /**
     * The time when the node pool was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a EdgecontainerNodePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgecontainerNodePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgecontainerNodePoolArgs | EdgecontainerNodePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EdgecontainerNodePoolState | undefined;
            resourceInputs["cluster"] = state ? state.cluster : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["localDiskEncryption"] = state ? state.localDiskEncryption : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["machineFilter"] = state ? state.machineFilter : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeConfig"] = state ? state.nodeConfig : undefined;
            resourceInputs["nodeCount"] = state ? state.nodeCount : undefined;
            resourceInputs["nodeLocation"] = state ? state.nodeLocation : undefined;
            resourceInputs["nodeVersion"] = state ? state.nodeVersion : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as EdgecontainerNodePoolArgs | undefined;
            if ((!args || args.cluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cluster'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.nodeCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeCount'");
            }
            if ((!args || args.nodeLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeLocation'");
            }
            resourceInputs["cluster"] = args ? args.cluster : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["localDiskEncryption"] = args ? args.localDiskEncryption : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["machineFilter"] = args ? args.machineFilter : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeConfig"] = args ? args.nodeConfig : undefined;
            resourceInputs["nodeCount"] = args ? args.nodeCount : undefined;
            resourceInputs["nodeLocation"] = args ? args.nodeLocation : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["nodeVersion"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EdgecontainerNodePool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EdgecontainerNodePool resources.
 */
export interface EdgecontainerNodePoolState {
    /**
     * The name of the target Distributed Cloud Edge Cluster.
     */
    cluster?: pulumi.Input<string>;
    /**
     * The time when the node pool was created.
     */
    createTime?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Labels associated with this resource. **Note**: This field is non-authoritative, and will only manage the labels present
     * in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Local disk encryption options. This field is only used when enabling CMEK support.
     */
    localDiskEncryption?: pulumi.Input<inputs.EdgecontainerNodePoolLocalDiskEncryption>;
    /**
     * The location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Only machines matching this filter will be allowed to join the node pool. The filtering language accepts strings like
     * "name=<name>", and is documented in more detail in [AIP-160](https://google.aip.dev/160).
     */
    machineFilter?: pulumi.Input<string>;
    /**
     * The resource name of the node pool.
     */
    name?: pulumi.Input<string>;
    /**
     * Configuration for each node in the NodePool
     */
    nodeConfig?: pulumi.Input<inputs.EdgecontainerNodePoolNodeConfig>;
    /**
     * The number of nodes in the pool.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * Name of the Google Distributed Cloud Edge zone where this node pool will be created. For example:
     * 'us-central1-edge-customer-a'.
     */
    nodeLocation?: pulumi.Input<string>;
    /**
     * The lowest release version among all worker nodes.
     */
    nodeVersion?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.EdgecontainerNodePoolTimeouts>;
    /**
     * The time when the node pool was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdgecontainerNodePool resource.
 */
export interface EdgecontainerNodePoolArgs {
    /**
     * The name of the target Distributed Cloud Edge Cluster.
     */
    cluster: pulumi.Input<string>;
    /**
     * Labels associated with this resource. **Note**: This field is non-authoritative, and will only manage the labels present
     * in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Local disk encryption options. This field is only used when enabling CMEK support.
     */
    localDiskEncryption?: pulumi.Input<inputs.EdgecontainerNodePoolLocalDiskEncryption>;
    /**
     * The location of the resource.
     */
    location: pulumi.Input<string>;
    /**
     * Only machines matching this filter will be allowed to join the node pool. The filtering language accepts strings like
     * "name=<name>", and is documented in more detail in [AIP-160](https://google.aip.dev/160).
     */
    machineFilter?: pulumi.Input<string>;
    /**
     * The resource name of the node pool.
     */
    name?: pulumi.Input<string>;
    /**
     * Configuration for each node in the NodePool
     */
    nodeConfig?: pulumi.Input<inputs.EdgecontainerNodePoolNodeConfig>;
    /**
     * The number of nodes in the pool.
     */
    nodeCount: pulumi.Input<number>;
    /**
     * Name of the Google Distributed Cloud Edge zone where this node pool will be created. For example:
     * 'us-central1-edge-customer-a'.
     */
    nodeLocation: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.EdgecontainerNodePoolTimeouts>;
}
