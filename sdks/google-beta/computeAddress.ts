// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeAddress extends pulumi.CustomResource {
    /**
     * Get an existing ComputeAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeAddressState, opts?: pulumi.CustomResourceOptions): ComputeAddress {
        return new ComputeAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/computeAddress:ComputeAddress';

    /**
     * Returns true if the given object is an instance of ComputeAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeAddress.__pulumiType;
    }

    /**
     * The static external IP address represented by this resource. The IP address must be inside the specified subnetwork, if
     * any. Set by the API if undefined.
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * The type of address to reserve. Note: if you set this argument's value as 'INTERNAL' you need to leave the
     * 'network_tier' argument unset in that resource block. Default value: "EXTERNAL" Possible values: ["INTERNAL",
     * "EXTERNAL"]
     */
    public readonly addressType!: pulumi.Output<string | undefined>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The IP Version that will be used by this address. The default value is 'IPV4'. Possible values: ["IPV4", "IPV6"]
     */
    public readonly ipVersion!: pulumi.Output<string | undefined>;
    /**
     * The endpoint type of this address, which should be VM or NETLB. This is used for deciding which type of endpoint this
     * address can be used after the external IPv6 address reservation. Possible values: ["VM", "NETLB"]
     */
    public readonly ipv6EndpointType!: pulumi.Output<string | undefined>;
    /**
     * The fingerprint used for optimistic locking of this resource. Used internally during updates.
     */
    public /*out*/ readonly labelFingerprint!: pulumi.Output<string>;
    /**
     * Labels to apply to this address. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
     * 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
     * dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The URL of the network in which to reserve the address. This field can only be used with INTERNAL type with the
     * VPC_PEERING and IPSEC_INTERCONNECT purposes.
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * The networking tier used for configuring this address. If this field is not specified, it is assumed to be PREMIUM. This
     * argument should not be used when configuring Internal addresses, because [network tier cannot be set for internal
     * traffic; it's always Premium](https://cloud.google.com/network-tiers/docs/overview). Possible values: ["PREMIUM",
     * "STANDARD"]
     */
    public readonly networkTier!: pulumi.Output<string>;
    /**
     * The prefix length if the resource represents an IP range.
     */
    public readonly prefixLength!: pulumi.Output<number>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The purpose of this resource, which can be one of the following values. * GCE_ENDPOINT for addresses that are used by VM
     * instances, alias IP ranges, load balancers, and similar resources. * SHARED_LOADBALANCER_VIP for an address that can be
     * used by multiple internal load balancers. * VPC_PEERING for addresses that are reserved for VPC peer networks. *
     * IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an HA VPN
     * over Cloud Interconnect configuration. These addresses are regional resources. * PRIVATE_SERVICE_CONNECT for a private
     * network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose.
     * This should only be set when using an Internal address.
     */
    public readonly purpose!: pulumi.Output<string>;
    /**
     * The Region in which the created address should reside. If it is not provided, the provider region is used.
     */
    public readonly region!: pulumi.Output<string>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the
     * subnetwork's IP range. This field can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER purposes.
     */
    public readonly subnetwork!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeAddressTimeouts | undefined>;
    /**
     * The URLs of the resources that are using this address.
     */
    public /*out*/ readonly users!: pulumi.Output<string[]>;

    /**
     * Create a ComputeAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ComputeAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeAddressArgs | ComputeAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeAddressState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["addressType"] = state ? state.addressType : undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["ipv6EndpointType"] = state ? state.ipv6EndpointType : undefined;
            resourceInputs["labelFingerprint"] = state ? state.labelFingerprint : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["networkTier"] = state ? state.networkTier : undefined;
            resourceInputs["prefixLength"] = state ? state.prefixLength : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["purpose"] = state ? state.purpose : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["subnetwork"] = state ? state.subnetwork : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as ComputeAddressArgs | undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["addressType"] = args ? args.addressType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["ipv6EndpointType"] = args ? args.ipv6EndpointType : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["networkTier"] = args ? args.networkTier : undefined;
            resourceInputs["prefixLength"] = args ? args.prefixLength : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["purpose"] = args ? args.purpose : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["subnetwork"] = args ? args.subnetwork : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["labelFingerprint"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["users"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeAddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeAddress resources.
 */
export interface ComputeAddressState {
    /**
     * The static external IP address represented by this resource. The IP address must be inside the specified subnetwork, if
     * any. Set by the API if undefined.
     */
    address?: pulumi.Input<string>;
    /**
     * The type of address to reserve. Note: if you set this argument's value as 'INTERNAL' you need to leave the
     * 'network_tier' argument unset in that resource block. Default value: "EXTERNAL" Possible values: ["INTERNAL",
     * "EXTERNAL"]
     */
    addressType?: pulumi.Input<string>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource.
     */
    description?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The IP Version that will be used by this address. The default value is 'IPV4'. Possible values: ["IPV4", "IPV6"]
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The endpoint type of this address, which should be VM or NETLB. This is used for deciding which type of endpoint this
     * address can be used after the external IPv6 address reservation. Possible values: ["VM", "NETLB"]
     */
    ipv6EndpointType?: pulumi.Input<string>;
    /**
     * The fingerprint used for optimistic locking of this resource. Used internally during updates.
     */
    labelFingerprint?: pulumi.Input<string>;
    /**
     * Labels to apply to this address. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
     * 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
     * dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The URL of the network in which to reserve the address. This field can only be used with INTERNAL type with the
     * VPC_PEERING and IPSEC_INTERCONNECT purposes.
     */
    network?: pulumi.Input<string>;
    /**
     * The networking tier used for configuring this address. If this field is not specified, it is assumed to be PREMIUM. This
     * argument should not be used when configuring Internal addresses, because [network tier cannot be set for internal
     * traffic; it's always Premium](https://cloud.google.com/network-tiers/docs/overview). Possible values: ["PREMIUM",
     * "STANDARD"]
     */
    networkTier?: pulumi.Input<string>;
    /**
     * The prefix length if the resource represents an IP range.
     */
    prefixLength?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * The purpose of this resource, which can be one of the following values. * GCE_ENDPOINT for addresses that are used by VM
     * instances, alias IP ranges, load balancers, and similar resources. * SHARED_LOADBALANCER_VIP for an address that can be
     * used by multiple internal load balancers. * VPC_PEERING for addresses that are reserved for VPC peer networks. *
     * IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an HA VPN
     * over Cloud Interconnect configuration. These addresses are regional resources. * PRIVATE_SERVICE_CONNECT for a private
     * network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose.
     * This should only be set when using an Internal address.
     */
    purpose?: pulumi.Input<string>;
    /**
     * The Region in which the created address should reside. If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    selfLink?: pulumi.Input<string>;
    /**
     * The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the
     * subnetwork's IP range. This field can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER purposes.
     */
    subnetwork?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ComputeAddressTimeouts>;
    /**
     * The URLs of the resources that are using this address.
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ComputeAddress resource.
 */
export interface ComputeAddressArgs {
    /**
     * The static external IP address represented by this resource. The IP address must be inside the specified subnetwork, if
     * any. Set by the API if undefined.
     */
    address?: pulumi.Input<string>;
    /**
     * The type of address to reserve. Note: if you set this argument's value as 'INTERNAL' you need to leave the
     * 'network_tier' argument unset in that resource block. Default value: "EXTERNAL" Possible values: ["INTERNAL",
     * "EXTERNAL"]
     */
    addressType?: pulumi.Input<string>;
    /**
     * An optional description of this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The IP Version that will be used by this address. The default value is 'IPV4'. Possible values: ["IPV4", "IPV6"]
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * The endpoint type of this address, which should be VM or NETLB. This is used for deciding which type of endpoint this
     * address can be used after the external IPv6 address reservation. Possible values: ["VM", "NETLB"]
     */
    ipv6EndpointType?: pulumi.Input<string>;
    /**
     * Labels to apply to this address. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
     * 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
     * dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The URL of the network in which to reserve the address. This field can only be used with INTERNAL type with the
     * VPC_PEERING and IPSEC_INTERCONNECT purposes.
     */
    network?: pulumi.Input<string>;
    /**
     * The networking tier used for configuring this address. If this field is not specified, it is assumed to be PREMIUM. This
     * argument should not be used when configuring Internal addresses, because [network tier cannot be set for internal
     * traffic; it's always Premium](https://cloud.google.com/network-tiers/docs/overview). Possible values: ["PREMIUM",
     * "STANDARD"]
     */
    networkTier?: pulumi.Input<string>;
    /**
     * The prefix length if the resource represents an IP range.
     */
    prefixLength?: pulumi.Input<number>;
    project?: pulumi.Input<string>;
    /**
     * The purpose of this resource, which can be one of the following values. * GCE_ENDPOINT for addresses that are used by VM
     * instances, alias IP ranges, load balancers, and similar resources. * SHARED_LOADBALANCER_VIP for an address that can be
     * used by multiple internal load balancers. * VPC_PEERING for addresses that are reserved for VPC peer networks. *
     * IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an HA VPN
     * over Cloud Interconnect configuration. These addresses are regional resources. * PRIVATE_SERVICE_CONNECT for a private
     * network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose.
     * This should only be set when using an Internal address.
     */
    purpose?: pulumi.Input<string>;
    /**
     * The Region in which the created address should reside. If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the
     * subnetwork's IP range. This field can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER purposes.
     */
    subnetwork?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ComputeAddressTimeouts>;
}
