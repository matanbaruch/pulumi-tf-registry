// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSqlDatabaseInstance(args: GetSqlDatabaseInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlDatabaseInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getSqlDatabaseInstance:getSqlDatabaseInstance", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSqlDatabaseInstance.
 */
export interface GetSqlDatabaseInstanceArgs {
    id?: string;
    name: string;
    project?: string;
}

/**
 * A collection of values returned by getSqlDatabaseInstance.
 */
export interface GetSqlDatabaseInstanceResult {
    readonly availableMaintenanceVersions: string[];
    readonly clones: outputs.GetSqlDatabaseInstanceClone[];
    readonly connectionName: string;
    readonly databaseVersion: string;
    readonly deletionProtection: boolean;
    readonly dnsName: string;
    readonly encryptionKeyName: string;
    readonly firstIpAddress: string;
    readonly id: string;
    readonly instanceType: string;
    readonly ipAddresses: outputs.GetSqlDatabaseInstanceIpAddress[];
    readonly maintenanceVersion: string;
    readonly masterInstanceName: string;
    readonly name: string;
    readonly privateIpAddress: string;
    readonly project?: string;
    readonly pscServiceAttachmentLink: string;
    readonly publicIpAddress: string;
    readonly region: string;
    readonly replicaConfigurations: outputs.GetSqlDatabaseInstanceReplicaConfiguration[];
    readonly restoreBackupContexts: outputs.GetSqlDatabaseInstanceRestoreBackupContext[];
    readonly rootPassword: string;
    readonly selfLink: string;
    readonly serverCaCerts: outputs.GetSqlDatabaseInstanceServerCaCert[];
    readonly serviceAccountEmailAddress: string;
    readonly settings: outputs.GetSqlDatabaseInstanceSetting[];
}
export function getSqlDatabaseInstanceOutput(args: GetSqlDatabaseInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlDatabaseInstanceResult> {
    return pulumi.output(args).apply((a: any) => getSqlDatabaseInstance(a, opts))
}

/**
 * A collection of arguments for invoking getSqlDatabaseInstance.
 */
export interface GetSqlDatabaseInstanceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
