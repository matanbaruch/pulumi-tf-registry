// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BigqueryReservationAssignment extends pulumi.CustomResource {
    /**
     * Get an existing BigqueryReservationAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BigqueryReservationAssignmentState, opts?: pulumi.CustomResourceOptions): BigqueryReservationAssignment {
        return new BigqueryReservationAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/bigqueryReservationAssignment:BigqueryReservationAssignment';

    /**
     * Returns true if the given object is an instance of BigqueryReservationAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BigqueryReservationAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BigqueryReservationAssignment.__pulumiType;
    }

    /**
     * The resource which will use the reservation. E.g. projects/myproject, folders/123, organizations/456.
     */
    public readonly assignee!: pulumi.Output<string>;
    /**
     * Types of job, which could be specified when using the reservation. Possible values: JOB_TYPE_UNSPECIFIED, PIPELINE,
     * QUERY
     */
    public readonly jobType!: pulumi.Output<string>;
    /**
     * The location for the resource
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Output only. The resource name of the assignment.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The reservation for the resource
     */
    public readonly reservation!: pulumi.Output<string>;
    /**
     * Assignment will remain in PENDING state if no active capacity commitment is present. It will become ACTIVE when some
     * capacity commitment becomes active. Possible values: STATE_UNSPECIFIED, PENDING, ACTIVE
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.BigqueryReservationAssignmentTimeouts | undefined>;

    /**
     * Create a BigqueryReservationAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BigqueryReservationAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BigqueryReservationAssignmentArgs | BigqueryReservationAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BigqueryReservationAssignmentState | undefined;
            resourceInputs["assignee"] = state ? state.assignee : undefined;
            resourceInputs["jobType"] = state ? state.jobType : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["reservation"] = state ? state.reservation : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BigqueryReservationAssignmentArgs | undefined;
            if ((!args || args.assignee === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assignee'");
            }
            if ((!args || args.jobType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobType'");
            }
            if ((!args || args.reservation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reservation'");
            }
            resourceInputs["assignee"] = args ? args.assignee : undefined;
            resourceInputs["jobType"] = args ? args.jobType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["reservation"] = args ? args.reservation : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BigqueryReservationAssignment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BigqueryReservationAssignment resources.
 */
export interface BigqueryReservationAssignmentState {
    /**
     * The resource which will use the reservation. E.g. projects/myproject, folders/123, organizations/456.
     */
    assignee?: pulumi.Input<string>;
    /**
     * Types of job, which could be specified when using the reservation. Possible values: JOB_TYPE_UNSPECIFIED, PIPELINE,
     * QUERY
     */
    jobType?: pulumi.Input<string>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    /**
     * Output only. The resource name of the assignment.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The reservation for the resource
     */
    reservation?: pulumi.Input<string>;
    /**
     * Assignment will remain in PENDING state if no active capacity commitment is present. It will become ACTIVE when some
     * capacity commitment becomes active. Possible values: STATE_UNSPECIFIED, PENDING, ACTIVE
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BigqueryReservationAssignmentTimeouts>;
}

/**
 * The set of arguments for constructing a BigqueryReservationAssignment resource.
 */
export interface BigqueryReservationAssignmentArgs {
    /**
     * The resource which will use the reservation. E.g. projects/myproject, folders/123, organizations/456.
     */
    assignee: pulumi.Input<string>;
    /**
     * Types of job, which could be specified when using the reservation. Possible values: JOB_TYPE_UNSPECIFIED, PIPELINE,
     * QUERY
     */
    jobType: pulumi.Input<string>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The reservation for the resource
     */
    reservation: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.BigqueryReservationAssignmentTimeouts>;
}
