// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WorkstationsWorkstationConfig extends pulumi.CustomResource {
    /**
     * Get an existing WorkstationsWorkstationConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkstationsWorkstationConfigState, opts?: pulumi.CustomResourceOptions): WorkstationsWorkstationConfig {
        return new WorkstationsWorkstationConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/workstationsWorkstationConfig:WorkstationsWorkstationConfig';

    /**
     * Returns true if the given object is an instance of WorkstationsWorkstationConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkstationsWorkstationConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkstationsWorkstationConfig.__pulumiType;
    }

    /**
     * Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
     * manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
     * annotations present on the resource.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Status conditions describing the current resource state.
     */
    public /*out*/ readonly conditions!: pulumi.Output<outputs.WorkstationsWorkstationConfigCondition[]>;
    /**
     * Container that will be run for each workstation using this configuration when that workstation is started.
     */
    public readonly container!: pulumi.Output<outputs.WorkstationsWorkstationConfigContainer | undefined>;
    /**
     * Time when this resource was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
     * Details can be found in the conditions field.
     */
    public /*out*/ readonly degraded!: pulumi.Output<boolean>;
    /**
     * Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
     * websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
     * plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
     */
    public readonly disableTcpConnections!: pulumi.Output<boolean | undefined>;
    /**
     * Human-readable name for this resource.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly effectiveAnnotations!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
     * has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
     */
    public readonly enableAuditAgent!: pulumi.Output<boolean | undefined>;
    /**
     * Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
     * disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
     * not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
     * If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
     * recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
     * persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
     * workstation session will automatically be stopped within 7 hours.
     */
    public readonly encryptionKey!: pulumi.Output<outputs.WorkstationsWorkstationConfigEncryptionKey | undefined>;
    /**
     * Ephemeral directories which won't persist across workstation sessions.
     */
    public readonly ephemeralDirectories!: pulumi.Output<outputs.WorkstationsWorkstationConfigEphemeralDirectory[] | undefined>;
    /**
     * Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date
     * value before proceeding.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * Runtime host for a workstation.
     */
    public readonly host!: pulumi.Output<outputs.WorkstationsWorkstationConfigHost | undefined>;
    /**
     * How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
     * indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
     * to nine fractional digits, ending with 's'. Example: "3.5s".
     */
    public readonly idleTimeout!: pulumi.Output<string | undefined>;
    /**
     * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
     * resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location where the workstation cluster config should reside.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Full name of this resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Directories to persist across workstation sessions.
     */
    public readonly persistentDirectories!: pulumi.Output<outputs.WorkstationsWorkstationConfigPersistentDirectory[] | undefined>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Readiness checks to be performed on a workstation.
     */
    public readonly readinessChecks!: pulumi.Output<outputs.WorkstationsWorkstationConfigReadinessCheck[] | undefined>;
    /**
     * Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
     * workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
     * empty, two default zones within the region are used. Immutable after the workstation configuration is created.
     */
    public readonly replicaZones!: pulumi.Output<string[]>;
    /**
     * How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
     * workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
     * 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
     * ending with 's'. Example: "3.5s".
     */
    public readonly runningTimeout!: pulumi.Output<string | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.WorkstationsWorkstationConfigTimeouts | undefined>;
    /**
     * The system-generated UID of the resource.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The ID of the parent workstation cluster.
     */
    public readonly workstationClusterId!: pulumi.Output<string>;
    /**
     * The ID to be assigned to the workstation cluster config.
     */
    public readonly workstationConfigId!: pulumi.Output<string>;

    /**
     * Create a WorkstationsWorkstationConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkstationsWorkstationConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkstationsWorkstationConfigArgs | WorkstationsWorkstationConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkstationsWorkstationConfigState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["conditions"] = state ? state.conditions : undefined;
            resourceInputs["container"] = state ? state.container : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["degraded"] = state ? state.degraded : undefined;
            resourceInputs["disableTcpConnections"] = state ? state.disableTcpConnections : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveAnnotations"] = state ? state.effectiveAnnotations : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["enableAuditAgent"] = state ? state.enableAuditAgent : undefined;
            resourceInputs["encryptionKey"] = state ? state.encryptionKey : undefined;
            resourceInputs["ephemeralDirectories"] = state ? state.ephemeralDirectories : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["persistentDirectories"] = state ? state.persistentDirectories : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["readinessChecks"] = state ? state.readinessChecks : undefined;
            resourceInputs["replicaZones"] = state ? state.replicaZones : undefined;
            resourceInputs["runningTimeout"] = state ? state.runningTimeout : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["workstationClusterId"] = state ? state.workstationClusterId : undefined;
            resourceInputs["workstationConfigId"] = state ? state.workstationConfigId : undefined;
        } else {
            const args = argsOrState as WorkstationsWorkstationConfigArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.workstationClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workstationClusterId'");
            }
            if ((!args || args.workstationConfigId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workstationConfigId'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["container"] = args ? args.container : undefined;
            resourceInputs["disableTcpConnections"] = args ? args.disableTcpConnections : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableAuditAgent"] = args ? args.enableAuditAgent : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["ephemeralDirectories"] = args ? args.ephemeralDirectories : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["persistentDirectories"] = args ? args.persistentDirectories : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["readinessChecks"] = args ? args.readinessChecks : undefined;
            resourceInputs["replicaZones"] = args ? args.replicaZones : undefined;
            resourceInputs["runningTimeout"] = args ? args.runningTimeout : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["workstationClusterId"] = args ? args.workstationClusterId : undefined;
            resourceInputs["workstationConfigId"] = args ? args.workstationConfigId : undefined;
            resourceInputs["conditions"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["degraded"] = undefined /*out*/;
            resourceInputs["effectiveAnnotations"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkstationsWorkstationConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WorkstationsWorkstationConfig resources.
 */
export interface WorkstationsWorkstationConfigState {
    /**
     * Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
     * manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
     * annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Status conditions describing the current resource state.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.WorkstationsWorkstationConfigCondition>[]>;
    /**
     * Container that will be run for each workstation using this configuration when that workstation is started.
     */
    container?: pulumi.Input<inputs.WorkstationsWorkstationConfigContainer>;
    /**
     * Time when this resource was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
     * Details can be found in the conditions field.
     */
    degraded?: pulumi.Input<boolean>;
    /**
     * Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
     * websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
     * plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
     */
    disableTcpConnections?: pulumi.Input<boolean>;
    /**
     * Human-readable name for this resource.
     */
    displayName?: pulumi.Input<string>;
    effectiveAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
     * has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
     */
    enableAuditAgent?: pulumi.Input<boolean>;
    /**
     * Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
     * disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
     * not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
     * If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
     * recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
     * persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
     * workstation session will automatically be stopped within 7 hours.
     */
    encryptionKey?: pulumi.Input<inputs.WorkstationsWorkstationConfigEncryptionKey>;
    /**
     * Ephemeral directories which won't persist across workstation sessions.
     */
    ephemeralDirectories?: pulumi.Input<pulumi.Input<inputs.WorkstationsWorkstationConfigEphemeralDirectory>[]>;
    /**
     * Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date
     * value before proceeding.
     */
    etag?: pulumi.Input<string>;
    /**
     * Runtime host for a workstation.
     */
    host?: pulumi.Input<inputs.WorkstationsWorkstationConfigHost>;
    /**
     * How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
     * indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
     * to nine fractional digits, ending with 's'. Example: "3.5s".
     */
    idleTimeout?: pulumi.Input<string>;
    /**
     * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
     * resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the workstation cluster config should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * Full name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Directories to persist across workstation sessions.
     */
    persistentDirectories?: pulumi.Input<pulumi.Input<inputs.WorkstationsWorkstationConfigPersistentDirectory>[]>;
    project?: pulumi.Input<string>;
    /**
     * Readiness checks to be performed on a workstation.
     */
    readinessChecks?: pulumi.Input<pulumi.Input<inputs.WorkstationsWorkstationConfigReadinessCheck>[]>;
    /**
     * Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
     * workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
     * empty, two default zones within the region are used. Immutable after the workstation configuration is created.
     */
    replicaZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
     * workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
     * 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
     * ending with 's'. Example: "3.5s".
     */
    runningTimeout?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.WorkstationsWorkstationConfigTimeouts>;
    /**
     * The system-generated UID of the resource.
     */
    uid?: pulumi.Input<string>;
    /**
     * The ID of the parent workstation cluster.
     */
    workstationClusterId?: pulumi.Input<string>;
    /**
     * The ID to be assigned to the workstation cluster config.
     */
    workstationConfigId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkstationsWorkstationConfig resource.
 */
export interface WorkstationsWorkstationConfigArgs {
    /**
     * Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
     * manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
     * annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Container that will be run for each workstation using this configuration when that workstation is started.
     */
    container?: pulumi.Input<inputs.WorkstationsWorkstationConfigContainer>;
    /**
     * Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
     * websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
     * plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
     */
    disableTcpConnections?: pulumi.Input<boolean>;
    /**
     * Human-readable name for this resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
     * has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
     */
    enableAuditAgent?: pulumi.Input<boolean>;
    /**
     * Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
     * disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
     * not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
     * If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
     * recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
     * persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
     * workstation session will automatically be stopped within 7 hours.
     */
    encryptionKey?: pulumi.Input<inputs.WorkstationsWorkstationConfigEncryptionKey>;
    /**
     * Ephemeral directories which won't persist across workstation sessions.
     */
    ephemeralDirectories?: pulumi.Input<pulumi.Input<inputs.WorkstationsWorkstationConfigEphemeralDirectory>[]>;
    /**
     * Runtime host for a workstation.
     */
    host?: pulumi.Input<inputs.WorkstationsWorkstationConfigHost>;
    /**
     * How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
     * indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
     * to nine fractional digits, ending with 's'. Example: "3.5s".
     */
    idleTimeout?: pulumi.Input<string>;
    /**
     * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
     * resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location where the workstation cluster config should reside.
     */
    location: pulumi.Input<string>;
    /**
     * Directories to persist across workstation sessions.
     */
    persistentDirectories?: pulumi.Input<pulumi.Input<inputs.WorkstationsWorkstationConfigPersistentDirectory>[]>;
    project?: pulumi.Input<string>;
    /**
     * Readiness checks to be performed on a workstation.
     */
    readinessChecks?: pulumi.Input<pulumi.Input<inputs.WorkstationsWorkstationConfigReadinessCheck>[]>;
    /**
     * Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
     * workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
     * empty, two default zones within the region are used. Immutable after the workstation configuration is created.
     */
    replicaZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
     * workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
     * 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
     * ending with 's'. Example: "3.5s".
     */
    runningTimeout?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.WorkstationsWorkstationConfigTimeouts>;
    /**
     * The ID of the parent workstation cluster.
     */
    workstationClusterId: pulumi.Input<string>;
    /**
     * The ID to be assigned to the workstation cluster config.
     */
    workstationConfigId: pulumi.Input<string>;
}
