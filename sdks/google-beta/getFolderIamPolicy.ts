// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFolderIamPolicy(args: GetFolderIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetFolderIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("google-beta:index/getFolderIamPolicy:getFolderIamPolicy", {
        "folder": args.folder,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFolderIamPolicy.
 */
export interface GetFolderIamPolicyArgs {
    folder: string;
    id?: string;
}

/**
 * A collection of values returned by getFolderIamPolicy.
 */
export interface GetFolderIamPolicyResult {
    readonly etag: string;
    readonly folder: string;
    readonly id: string;
    readonly policyData: string;
}
export function getFolderIamPolicyOutput(args: GetFolderIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFolderIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getFolderIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getFolderIamPolicy.
 */
export interface GetFolderIamPolicyOutputArgs {
    folder: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
