// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DialogflowCxIntent extends pulumi.CustomResource {
    /**
     * Get an existing DialogflowCxIntent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DialogflowCxIntentState, opts?: pulumi.CustomResourceOptions): DialogflowCxIntent {
        return new DialogflowCxIntent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'google-beta:index/dialogflowCxIntent:DialogflowCxIntent';

    /**
     * Returns true if the given object is an instance of DialogflowCxIntent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DialogflowCxIntent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DialogflowCxIntent.__pulumiType;
    }

    /**
     * Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
     * limit: 140 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The human-readable name of the intent, unique within the agent.
     */
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
     * agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
     * be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
     * having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
     * true' because they will compete to control a single Default Negative Intent resource in GCP.
     */
    public readonly isDefaultNegativeIntent!: pulumi.Output<boolean | undefined>;
    /**
     * Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
     * agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
     * deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
     * having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
     * because they will compete to control a single Default Welcome Intent resource in GCP.
     */
    public readonly isDefaultWelcomeIntent!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
     * added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
     * mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
     * event. To manage the fallback intent, set 'is_default_negative_intent = true'
     */
    public readonly isFallback!: pulumi.Output<boolean | undefined>;
    /**
     * The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
     * International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
     * values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
     * labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
     * value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
     * containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
     * field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
     * language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
     */
    public readonly languageCode!: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of the intent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/intents/<Intent ID>.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The collection of parameters associated with the intent.
     */
    public readonly parameters!: pulumi.Output<outputs.DialogflowCxIntentParameter[] | undefined>;
    /**
     * The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    public readonly parent!: pulumi.Output<string | undefined>;
    /**
     * The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
     * service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
     * is negative, the intent is ignored in runtime detect intent requests.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    public /*out*/ readonly terraformLabels!: pulumi.Output<{[key: string]: string}>;
    public readonly timeouts!: pulumi.Output<outputs.DialogflowCxIntentTimeouts | undefined>;
    /**
     * The collection of training phrases the agent is trained on to identify the intent.
     */
    public readonly trainingPhrases!: pulumi.Output<outputs.DialogflowCxIntentTrainingPhrase[] | undefined>;

    /**
     * Create a DialogflowCxIntent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DialogflowCxIntentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DialogflowCxIntentArgs | DialogflowCxIntentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DialogflowCxIntentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["isDefaultNegativeIntent"] = state ? state.isDefaultNegativeIntent : undefined;
            resourceInputs["isDefaultWelcomeIntent"] = state ? state.isDefaultWelcomeIntent : undefined;
            resourceInputs["isFallback"] = state ? state.isFallback : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["languageCode"] = state ? state.languageCode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["terraformLabels"] = state ? state.terraformLabels : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["trainingPhrases"] = state ? state.trainingPhrases : undefined;
        } else {
            const args = argsOrState as DialogflowCxIntentArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["isDefaultNegativeIntent"] = args ? args.isDefaultNegativeIntent : undefined;
            resourceInputs["isDefaultWelcomeIntent"] = args ? args.isDefaultWelcomeIntent : undefined;
            resourceInputs["isFallback"] = args ? args.isFallback : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["languageCode"] = args ? args.languageCode : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["trainingPhrases"] = args ? args.trainingPhrases : undefined;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["terraformLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DialogflowCxIntent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DialogflowCxIntent resources.
 */
export interface DialogflowCxIntentState {
    /**
     * Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
     * limit: 140 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the intent, unique within the agent.
     */
    displayName?: pulumi.Input<string>;
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
     * agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
     * be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
     * having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
     * true' because they will compete to control a single Default Negative Intent resource in GCP.
     */
    isDefaultNegativeIntent?: pulumi.Input<boolean>;
    /**
     * Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
     * agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
     * deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
     * having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
     * because they will compete to control a single Default Welcome Intent resource in GCP.
     */
    isDefaultWelcomeIntent?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
     * added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
     * mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
     * event. To manage the fallback intent, set 'is_default_negative_intent = true'
     */
    isFallback?: pulumi.Input<boolean>;
    /**
     * The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
     * International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
     * values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
     * labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
     * value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
     * containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
     * field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
     * language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * The unique identifier of the intent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
     * ID>/intents/<Intent ID>.
     */
    name?: pulumi.Input<string>;
    /**
     * The collection of parameters associated with the intent.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.DialogflowCxIntentParameter>[]>;
    /**
     * The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    parent?: pulumi.Input<string>;
    /**
     * The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
     * service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
     * is negative, the intent is ignored in runtime detect intent requests.
     */
    priority?: pulumi.Input<number>;
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     */
    terraformLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DialogflowCxIntentTimeouts>;
    /**
     * The collection of training phrases the agent is trained on to identify the intent.
     */
    trainingPhrases?: pulumi.Input<pulumi.Input<inputs.DialogflowCxIntentTrainingPhrase>[]>;
}

/**
 * The set of arguments for constructing a DialogflowCxIntent resource.
 */
export interface DialogflowCxIntentArgs {
    /**
     * Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
     * limit: 140 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The human-readable name of the intent, unique within the agent.
     */
    displayName: pulumi.Input<string>;
    /**
     * Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
     * agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
     * be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
     * having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
     * true' because they will compete to control a single Default Negative Intent resource in GCP.
     */
    isDefaultNegativeIntent?: pulumi.Input<boolean>;
    /**
     * Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
     * agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
     * deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
     * having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
     * because they will compete to control a single Default Welcome Intent resource in GCP.
     */
    isDefaultWelcomeIntent?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
     * added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
     * mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
     * event. To manage the fallback intent, set 'is_default_negative_intent = true'
     */
    isFallback?: pulumi.Input<boolean>;
    /**
     * The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
     * International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
     * values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
     * labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
     * value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
     * containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
     * field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
     * 'effective_labels' for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
     * language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * The collection of parameters associated with the intent.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.DialogflowCxIntentParameter>[]>;
    /**
     * The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
     */
    parent?: pulumi.Input<string>;
    /**
     * The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
     * service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
     * is negative, the intent is ignored in runtime detect intent requests.
     */
    priority?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.DialogflowCxIntentTimeouts>;
    /**
     * The collection of training phrases the agent is trained on to identify the intent.
     */
    trainingPhrases?: pulumi.Input<pulumi.Input<inputs.DialogflowCxIntentTrainingPhrase>[]>;
}
