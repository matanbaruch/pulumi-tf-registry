// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlanAzure(args: GetPlanAzureArgs, opts?: pulumi.InvokeOptions): Promise<GetPlanAzureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cbs:index/getPlanAzure:getPlanAzure", {
        "id": args.id,
        "planVersion": args.planVersion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlanAzure.
 */
export interface GetPlanAzureArgs {
    id?: string;
    planVersion: string;
}

/**
 * A collection of values returned by getPlanAzure.
 */
export interface GetPlanAzureResult {
    readonly id: string;
    readonly name: string;
    readonly planVersion: string;
    readonly product: string;
    readonly publisher: string;
    readonly version: string;
}
export function getPlanAzureOutput(args: GetPlanAzureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlanAzureResult> {
    return pulumi.output(args).apply((a: any) => getPlanAzure(a, opts))
}

/**
 * A collection of arguments for invoking getPlanAzure.
 */
export interface GetPlanAzureOutputArgs {
    id?: pulumi.Input<string>;
    planVersion: pulumi.Input<string>;
}
