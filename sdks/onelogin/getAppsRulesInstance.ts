// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAppsRulesInstance(args: GetAppsRulesInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetAppsRulesInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onelogin:index/getAppsRulesInstance:getAppsRulesInstance", {
        "actions": args.actions,
        "appsId": args.appsId,
        "conditions": args.conditions,
        "enabled": args.enabled,
        "id": args.id,
        "match": args.match,
        "name": args.name,
        "position": args.position,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppsRulesInstance.
 */
export interface GetAppsRulesInstanceArgs {
    actions?: inputs.GetAppsRulesInstanceAction[];
    appsId: string;
    conditions?: inputs.GetAppsRulesInstanceCondition[];
    enabled?: boolean;
    id: string;
    match?: string;
    name?: string;
    position?: number;
}

/**
 * A collection of values returned by getAppsRulesInstance.
 */
export interface GetAppsRulesInstanceResult {
    readonly actions?: outputs.GetAppsRulesInstanceAction[];
    readonly appsId: string;
    readonly conditions?: outputs.GetAppsRulesInstanceCondition[];
    readonly enabled: boolean;
    readonly id: string;
    readonly match: string;
    readonly name: string;
    readonly position: number;
}
export function getAppsRulesInstanceOutput(args: GetAppsRulesInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppsRulesInstanceResult> {
    return pulumi.output(args).apply((a: any) => getAppsRulesInstance(a, opts))
}

/**
 * A collection of arguments for invoking getAppsRulesInstance.
 */
export interface GetAppsRulesInstanceOutputArgs {
    actions?: pulumi.Input<pulumi.Input<inputs.GetAppsRulesInstanceActionArgs>[]>;
    appsId: pulumi.Input<string>;
    conditions?: pulumi.Input<pulumi.Input<inputs.GetAppsRulesInstanceConditionArgs>[]>;
    enabled?: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    match?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    position?: pulumi.Input<number>;
}
