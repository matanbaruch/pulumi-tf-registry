// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsersDevices(args: GetUsersDevicesArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersDevicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onelogin:index/getUsersDevices:getUsersDevices", {
        "authFactorName": args.authFactorName,
        "default": args.default,
        "deviceId": args.deviceId,
        "filters": args.filters,
        "id": args.id,
        "typeDisplayName": args.typeDisplayName,
        "userDisplayName": args.userDisplayName,
        "usersId": args.usersId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsersDevices.
 */
export interface GetUsersDevicesArgs {
    authFactorName?: string;
    default?: boolean;
    deviceId?: string;
    filters?: inputs.GetUsersDevicesFilter[];
    id?: string;
    typeDisplayName?: string;
    userDisplayName?: string;
    usersId: string;
}

/**
 * A collection of values returned by getUsersDevices.
 */
export interface GetUsersDevicesResult {
    readonly authFactorName: string;
    readonly default: boolean;
    readonly deviceId: string;
    readonly filters?: outputs.GetUsersDevicesFilter[];
    readonly id: string;
    readonly typeDisplayName: string;
    readonly userDisplayName: string;
    readonly usersId: string;
}
export function getUsersDevicesOutput(args: GetUsersDevicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersDevicesResult> {
    return pulumi.output(args).apply((a: any) => getUsersDevices(a, opts))
}

/**
 * A collection of arguments for invoking getUsersDevices.
 */
export interface GetUsersDevicesOutputArgs {
    authFactorName?: pulumi.Input<string>;
    default?: pulumi.Input<boolean>;
    deviceId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetUsersDevicesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    typeDisplayName?: pulumi.Input<string>;
    userDisplayName?: pulumi.Input<string>;
    usersId: pulumi.Input<string>;
}
