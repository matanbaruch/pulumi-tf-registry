// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRolesApps(args: GetRolesAppsArgs, opts?: pulumi.InvokeOptions): Promise<GetRolesAppsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onelogin:index/getRolesApps:getRolesApps", {
        "filters": args.filters,
        "iconUrl": args.iconUrl,
        "id": args.id,
        "name": args.name,
        "rolesId": args.rolesId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRolesApps.
 */
export interface GetRolesAppsArgs {
    filters?: inputs.GetRolesAppsFilter[];
    iconUrl?: string;
    id?: string;
    name?: string;
    rolesId: string;
}

/**
 * A collection of values returned by getRolesApps.
 */
export interface GetRolesAppsResult {
    readonly filters?: outputs.GetRolesAppsFilter[];
    readonly iconUrl: string;
    readonly id: string;
    readonly name: string;
    readonly rolesId: string;
}
export function getRolesAppsOutput(args: GetRolesAppsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRolesAppsResult> {
    return pulumi.output(args).apply((a: any) => getRolesApps(a, opts))
}

/**
 * A collection of arguments for invoking getRolesApps.
 */
export interface GetRolesAppsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetRolesAppsFilterArgs>[]>;
    iconUrl?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    rolesId: pulumi.Input<string>;
}
