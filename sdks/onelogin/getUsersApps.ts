// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsersApps(args: GetUsersAppsArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersAppsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("onelogin:index/getUsersApps:getUsersApps", {
        "extension": args.extension,
        "filters": args.filters,
        "iconUrl": args.iconUrl,
        "id": args.id,
        "loginId": args.loginId,
        "name": args.name,
        "provisioningEnabled": args.provisioningEnabled,
        "provisioningState": args.provisioningState,
        "provisioningStatus": args.provisioningStatus,
        "usersId": args.usersId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsersApps.
 */
export interface GetUsersAppsArgs {
    extension?: boolean;
    filters?: inputs.GetUsersAppsFilter[];
    iconUrl?: string;
    id?: string;
    loginId?: number;
    name?: string;
    provisioningEnabled?: boolean;
    provisioningState?: string;
    provisioningStatus?: string;
    usersId: string;
}

/**
 * A collection of values returned by getUsersApps.
 */
export interface GetUsersAppsResult {
    readonly extension: boolean;
    readonly filters?: outputs.GetUsersAppsFilter[];
    readonly iconUrl: string;
    readonly id: string;
    readonly loginId: number;
    readonly name: string;
    readonly provisioningEnabled: boolean;
    readonly provisioningState: string;
    readonly provisioningStatus: string;
    readonly usersId: string;
}
export function getUsersAppsOutput(args: GetUsersAppsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersAppsResult> {
    return pulumi.output(args).apply((a: any) => getUsersApps(a, opts))
}

/**
 * A collection of arguments for invoking getUsersApps.
 */
export interface GetUsersAppsOutputArgs {
    extension?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetUsersAppsFilterArgs>[]>;
    iconUrl?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    loginId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    provisioningEnabled?: pulumi.Input<boolean>;
    provisioningState?: pulumi.Input<string>;
    provisioningStatus?: pulumi.Input<string>;
    usersId: pulumi.Input<string>;
}
