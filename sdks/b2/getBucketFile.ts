// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBucketFile(args: GetBucketFileArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketFileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("b2:index/getBucketFile:getBucketFile", {
        "bucketId": args.bucketId,
        "fileName": args.fileName,
        "id": args.id,
        "showVersions": args.showVersions,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBucketFile.
 */
export interface GetBucketFileArgs {
    bucketId: string;
    fileName: string;
    id?: string;
    showVersions?: boolean;
}

/**
 * A collection of values returned by getBucketFile.
 */
export interface GetBucketFileResult {
    readonly bucketId: string;
    readonly fileName: string;
    readonly fileVersions: outputs.GetBucketFileFileVersion[];
    readonly id: string;
    readonly showVersions?: boolean;
}
export function getBucketFileOutput(args: GetBucketFileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketFileResult> {
    return pulumi.output(args).apply((a: any) => getBucketFile(a, opts))
}

/**
 * A collection of arguments for invoking getBucketFile.
 */
export interface GetBucketFileOutputArgs {
    bucketId: pulumi.Input<string>;
    fileName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    showVersions?: pulumi.Input<boolean>;
}
