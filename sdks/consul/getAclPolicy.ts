// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAclPolicy(args: GetAclPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAclPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getAclPolicy:getAclPolicy", {
        "id": args.id,
        "name": args.name,
        "namespace": args.namespace,
        "partition": args.partition,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAclPolicy.
 */
export interface GetAclPolicyArgs {
    id?: string;
    name: string;
    namespace?: string;
    partition?: string;
}

/**
 * A collection of values returned by getAclPolicy.
 */
export interface GetAclPolicyResult {
    readonly datacenters: string[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly namespace?: string;
    readonly partition?: string;
    readonly rules: string;
}
export function getAclPolicyOutput(args: GetAclPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAclPolicyResult> {
    return pulumi.output(args).apply((a: any) => getAclPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAclPolicy.
 */
export interface GetAclPolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    partition?: pulumi.Input<string>;
}
