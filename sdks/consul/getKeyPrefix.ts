// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeyPrefix(args: GetKeyPrefixArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyPrefixResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getKeyPrefix:getKeyPrefix", {
        "datacenter": args.datacenter,
        "id": args.id,
        "namespace": args.namespace,
        "partition": args.partition,
        "pathPrefix": args.pathPrefix,
        "subkey": args.subkey,
        "token": args.token,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeyPrefix.
 */
export interface GetKeyPrefixArgs {
    datacenter?: string;
    id?: string;
    namespace?: string;
    partition?: string;
    pathPrefix: string;
    subkey?: inputs.GetKeyPrefixSubkey[];
    /**
     * @deprecated Deprecated
     */
    token?: string;
}

/**
 * A collection of values returned by getKeyPrefix.
 */
export interface GetKeyPrefixResult {
    readonly datacenter: string;
    readonly id: string;
    readonly namespace?: string;
    readonly partition?: string;
    readonly pathPrefix: string;
    readonly subkey?: outputs.GetKeyPrefixSubkey[];
    readonly subkeys: {[key: string]: string};
    /**
     * @deprecated Deprecated
     */
    readonly token?: string;
    readonly var: {[key: string]: string};
}
export function getKeyPrefixOutput(args: GetKeyPrefixOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyPrefixResult> {
    return pulumi.output(args).apply((a: any) => getKeyPrefix(a, opts))
}

/**
 * A collection of arguments for invoking getKeyPrefix.
 */
export interface GetKeyPrefixOutputArgs {
    datacenter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    partition?: pulumi.Input<string>;
    pathPrefix: pulumi.Input<string>;
    subkey?: pulumi.Input<pulumi.Input<inputs.GetKeyPrefixSubkeyArgs>[]>;
    /**
     * @deprecated Deprecated
     */
    token?: pulumi.Input<string>;
}
