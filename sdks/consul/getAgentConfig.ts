// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAgentConfig(args?: GetAgentConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentConfigResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getAgentConfig:getAgentConfig", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgentConfig.
 */
export interface GetAgentConfigArgs {
    id?: string;
}

/**
 * A collection of values returned by getAgentConfig.
 */
export interface GetAgentConfigResult {
    readonly datacenter: string;
    readonly id: string;
    readonly nodeId: string;
    readonly nodeName: string;
    readonly revision: string;
    readonly server: boolean;
    readonly version: string;
}
export function getAgentConfigOutput(args?: GetAgentConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentConfigResult> {
    return pulumi.output(args).apply((a: any) => getAgentConfig(a, opts))
}

/**
 * A collection of arguments for invoking getAgentConfig.
 */
export interface GetAgentConfigOutputArgs {
    id?: pulumi.Input<string>;
}
