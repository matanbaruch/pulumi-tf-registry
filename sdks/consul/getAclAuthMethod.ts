// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAclAuthMethod(args: GetAclAuthMethodArgs, opts?: pulumi.InvokeOptions): Promise<GetAclAuthMethodResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getAclAuthMethod:getAclAuthMethod", {
        "id": args.id,
        "name": args.name,
        "namespace": args.namespace,
        "partition": args.partition,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAclAuthMethod.
 */
export interface GetAclAuthMethodArgs {
    id?: string;
    name: string;
    namespace?: string;
    partition?: string;
}

/**
 * A collection of values returned by getAclAuthMethod.
 */
export interface GetAclAuthMethodResult {
    /**
     * @deprecated Deprecated
     */
    readonly config: {[key: string]: string};
    readonly configJson: string;
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly maxTokenTtl: string;
    readonly name: string;
    readonly namespace?: string;
    readonly namespaceRules: outputs.GetAclAuthMethodNamespaceRule[];
    readonly partition?: string;
    readonly tokenLocality: string;
    readonly type: string;
}
export function getAclAuthMethodOutput(args: GetAclAuthMethodOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAclAuthMethodResult> {
    return pulumi.output(args).apply((a: any) => getAclAuthMethod(a, opts))
}

/**
 * A collection of arguments for invoking getAclAuthMethod.
 */
export interface GetAclAuthMethodOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    partition?: pulumi.Input<string>;
}
