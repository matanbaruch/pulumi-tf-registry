// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutopilotHealth(args?: GetAutopilotHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetAutopilotHealthResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getAutopilotHealth:getAutopilotHealth", {
        "datacenter": args.datacenter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutopilotHealth.
 */
export interface GetAutopilotHealthArgs {
    datacenter?: string;
    id?: string;
}

/**
 * A collection of values returned by getAutopilotHealth.
 */
export interface GetAutopilotHealthResult {
    readonly datacenter?: string;
    readonly failureTolerance: number;
    readonly healthy: boolean;
    readonly id: string;
    readonly servers: outputs.GetAutopilotHealthServer[];
}
export function getAutopilotHealthOutput(args?: GetAutopilotHealthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutopilotHealthResult> {
    return pulumi.output(args).apply((a: any) => getAutopilotHealth(a, opts))
}

/**
 * A collection of arguments for invoking getAutopilotHealth.
 */
export interface GetAutopilotHealthOutputArgs {
    datacenter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
