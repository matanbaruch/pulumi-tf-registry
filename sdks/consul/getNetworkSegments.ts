// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkSegments(args?: GetNetworkSegmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkSegmentsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getNetworkSegments:getNetworkSegments", {
        "datacenter": args.datacenter,
        "id": args.id,
        "token": args.token,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkSegments.
 */
export interface GetNetworkSegmentsArgs {
    datacenter?: string;
    id?: string;
    /**
     * @deprecated Deprecated
     */
    token?: string;
}

/**
 * A collection of values returned by getNetworkSegments.
 */
export interface GetNetworkSegmentsResult {
    readonly datacenter: string;
    readonly id: string;
    readonly segments: string[];
    /**
     * @deprecated Deprecated
     */
    readonly token?: string;
}
export function getNetworkSegmentsOutput(args?: GetNetworkSegmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkSegmentsResult> {
    return pulumi.output(args).apply((a: any) => getNetworkSegments(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkSegments.
 */
export interface GetNetworkSegmentsOutputArgs {
    datacenter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    token?: pulumi.Input<string>;
}
