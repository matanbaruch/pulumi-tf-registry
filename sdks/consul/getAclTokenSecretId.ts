// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAclTokenSecretId(args: GetAclTokenSecretIdArgs, opts?: pulumi.InvokeOptions): Promise<GetAclTokenSecretIdResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("consul:index/getAclTokenSecretId:getAclTokenSecretId", {
        "accessorId": args.accessorId,
        "id": args.id,
        "namespace": args.namespace,
        "partition": args.partition,
        "pgpKey": args.pgpKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAclTokenSecretId.
 */
export interface GetAclTokenSecretIdArgs {
    accessorId: string;
    id?: string;
    namespace?: string;
    partition?: string;
    pgpKey?: string;
}

/**
 * A collection of values returned by getAclTokenSecretId.
 */
export interface GetAclTokenSecretIdResult {
    readonly accessorId: string;
    readonly encryptedSecretId: string;
    readonly id: string;
    readonly namespace?: string;
    readonly partition?: string;
    readonly pgpKey?: string;
    readonly secretId: string;
}
export function getAclTokenSecretIdOutput(args: GetAclTokenSecretIdOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAclTokenSecretIdResult> {
    return pulumi.output(args).apply((a: any) => getAclTokenSecretId(a, opts))
}

/**
 * A collection of arguments for invoking getAclTokenSecretId.
 */
export interface GetAclTokenSecretIdOutputArgs {
    accessorId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    partition?: pulumi.Input<string>;
    pgpKey?: pulumi.Input<string>;
}
