// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnapshotrule(args?: GetSnapshotruleArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotruleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("powerstore:index/getSnapshotrule:getSnapshotrule", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSnapshotrule.
 */
export interface GetSnapshotruleArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getSnapshotrule.
 */
export interface GetSnapshotruleResult {
    readonly id: string;
    readonly name?: string;
    readonly snapshotRules: outputs.GetSnapshotruleSnapshotRule[];
}
export function getSnapshotruleOutput(args?: GetSnapshotruleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotruleResult> {
    return pulumi.output(args).apply((a: any) => getSnapshotrule(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshotrule.
 */
export interface GetSnapshotruleOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
