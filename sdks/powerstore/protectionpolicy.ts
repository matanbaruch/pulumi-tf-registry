// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Protectionpolicy extends pulumi.CustomResource {
    /**
     * Get an existing Protectionpolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtectionpolicyState, opts?: pulumi.CustomResourceOptions): Protectionpolicy {
        return new Protectionpolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'powerstore:index/protectionpolicy:Protectionpolicy';

    /**
     * Returns true if the given object is an instance of Protectionpolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Protectionpolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Protectionpolicy.__pulumiType;
    }

    /**
     * The description of the protection policy.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Indicates whether this policy can be modified.
     */
    public /*out*/ readonly isReadOnly!: pulumi.Output<boolean>;
    /**
     * The name of the protection policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of the replication rule IDs that are associated with this policy.
     */
    public readonly replicationRuleIds!: pulumi.Output<string[]>;
    /**
     * List of the replication rule names that are associated with this policy.
     */
    public readonly replicationRuleNames!: pulumi.Output<string[]>;
    /**
     * List of the snapshot rule IDs that are associated with this policy.
     */
    public readonly snapshotRuleIds!: pulumi.Output<string[]>;
    /**
     * List of the snapshot rule names that are associated with this policy.
     */
    public readonly snapshotRuleNames!: pulumi.Output<string[]>;
    /**
     * The type of the protection policy.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Protectionpolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProtectionpolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtectionpolicyArgs | ProtectionpolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtectionpolicyState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isReadOnly"] = state ? state.isReadOnly : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["replicationRuleIds"] = state ? state.replicationRuleIds : undefined;
            resourceInputs["replicationRuleNames"] = state ? state.replicationRuleNames : undefined;
            resourceInputs["snapshotRuleIds"] = state ? state.snapshotRuleIds : undefined;
            resourceInputs["snapshotRuleNames"] = state ? state.snapshotRuleNames : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ProtectionpolicyArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replicationRuleIds"] = args ? args.replicationRuleIds : undefined;
            resourceInputs["replicationRuleNames"] = args ? args.replicationRuleNames : undefined;
            resourceInputs["snapshotRuleIds"] = args ? args.snapshotRuleIds : undefined;
            resourceInputs["snapshotRuleNames"] = args ? args.snapshotRuleNames : undefined;
            resourceInputs["isReadOnly"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Protectionpolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Protectionpolicy resources.
 */
export interface ProtectionpolicyState {
    /**
     * The description of the protection policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether this policy can be modified.
     */
    isReadOnly?: pulumi.Input<boolean>;
    /**
     * The name of the protection policy.
     */
    name?: pulumi.Input<string>;
    /**
     * List of the replication rule IDs that are associated with this policy.
     */
    replicationRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the replication rule names that are associated with this policy.
     */
    replicationRuleNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the snapshot rule IDs that are associated with this policy.
     */
    snapshotRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the snapshot rule names that are associated with this policy.
     */
    snapshotRuleNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of the protection policy.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Protectionpolicy resource.
 */
export interface ProtectionpolicyArgs {
    /**
     * The description of the protection policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the protection policy.
     */
    name?: pulumi.Input<string>;
    /**
     * List of the replication rule IDs that are associated with this policy.
     */
    replicationRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the replication rule names that are associated with this policy.
     */
    replicationRuleNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the snapshot rule IDs that are associated with this policy.
     */
    snapshotRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of the snapshot rule names that are associated with this policy.
     */
    snapshotRuleNames?: pulumi.Input<pulumi.Input<string>[]>;
}
