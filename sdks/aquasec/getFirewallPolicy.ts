// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewallPolicy(args: GetFirewallPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getFirewallPolicy:getFirewallPolicy", {
        "id": args.id,
        "name": args.name,
        "outboundNetworks": args.outboundNetworks,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewallPolicy.
 */
export interface GetFirewallPolicyArgs {
    id?: string;
    name: string;
    outboundNetworks?: inputs.GetFirewallPolicyOutboundNetwork[];
}

/**
 * A collection of values returned by getFirewallPolicy.
 */
export interface GetFirewallPolicyResult {
    readonly author: string;
    readonly blockIcmpPing: boolean;
    readonly blockMetadataService: boolean;
    readonly description: string;
    readonly id: string;
    readonly inboundNetworks: outputs.GetFirewallPolicyInboundNetwork[];
    readonly lastupdate: number;
    readonly name: string;
    readonly outboundNetworks?: outputs.GetFirewallPolicyOutboundNetwork[];
    readonly type: string;
    readonly version: string;
}
export function getFirewallPolicyOutput(args: GetFirewallPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallPolicyResult> {
    return pulumi.output(args).apply((a: any) => getFirewallPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallPolicy.
 */
export interface GetFirewallPolicyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    outboundNetworks?: pulumi.Input<pulumi.Input<inputs.GetFirewallPolicyOutboundNetworkArgs>[]>;
}
