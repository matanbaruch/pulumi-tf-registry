// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNotifications(args?: GetNotificationsArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getNotifications:getNotifications", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNotifications.
 */
export interface GetNotificationsArgs {
    id?: string;
}

/**
 * A collection of values returned by getNotifications.
 */
export interface GetNotificationsResult {
    readonly emails: outputs.GetNotificationsEmail[];
    readonly id: string;
    readonly jiras: outputs.GetNotificationsJira[];
    readonly servicenows: outputs.GetNotificationsServicenow[];
    readonly slacks: outputs.GetNotificationsSlack[];
    readonly splunks: outputs.GetNotificationsSplunk[];
    readonly teams: outputs.GetNotificationsTeam[];
    readonly webhooks: outputs.GetNotificationsWebhook[];
}
export function getNotificationsOutput(args?: GetNotificationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationsResult> {
    return pulumi.output(args).apply((a: any) => getNotifications(a, opts))
}

/**
 * A collection of arguments for invoking getNotifications.
 */
export interface GetNotificationsOutputArgs {
    id?: pulumi.Input<string>;
}
