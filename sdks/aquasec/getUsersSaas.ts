// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsersSaas(args?: GetUsersSaasArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersSaasResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getUsersSaas:getUsersSaas", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsersSaas.
 */
export interface GetUsersSaasArgs {
    id?: string;
}

/**
 * A collection of values returned by getUsersSaas.
 */
export interface GetUsersSaasResult {
    readonly id: string;
    readonly users: outputs.GetUsersSaasUser[];
}
export function getUsersSaasOutput(args?: GetUsersSaasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersSaasResult> {
    return pulumi.output(args).apply((a: any) => getUsersSaas(a, opts))
}

/**
 * A collection of arguments for invoking getUsersSaas.
 */
export interface GetUsersSaasOutputArgs {
    id?: pulumi.Input<string>;
}
