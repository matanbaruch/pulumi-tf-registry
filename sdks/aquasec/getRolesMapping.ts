// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRolesMapping(args?: GetRolesMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetRolesMappingResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getRolesMapping:getRolesMapping", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRolesMapping.
 */
export interface GetRolesMappingArgs {
    id?: string;
}

/**
 * A collection of values returned by getRolesMapping.
 */
export interface GetRolesMappingResult {
    readonly id: string;
    readonly ldaps: outputs.GetRolesMappingLdap[];
    readonly oauth2s: outputs.GetRolesMappingOauth2[];
    readonly openids: outputs.GetRolesMappingOpenid[];
    readonly samls: outputs.GetRolesMappingSaml[];
}
export function getRolesMappingOutput(args?: GetRolesMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRolesMappingResult> {
    return pulumi.output(args).apply((a: any) => getRolesMapping(a, opts))
}

/**
 * A collection of arguments for invoking getRolesMapping.
 */
export interface GetRolesMappingOutputArgs {
    id?: pulumi.Input<string>;
}
