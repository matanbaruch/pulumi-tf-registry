// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRolesMappingSaas(args?: GetRolesMappingSaasArgs, opts?: pulumi.InvokeOptions): Promise<GetRolesMappingSaasResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getRolesMappingSaas:getRolesMappingSaas", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRolesMappingSaas.
 */
export interface GetRolesMappingSaasArgs {
    id?: string;
}

/**
 * A collection of values returned by getRolesMappingSaas.
 */
export interface GetRolesMappingSaasResult {
    readonly id: string;
    readonly rolesMappings: outputs.GetRolesMappingSaasRolesMapping[];
}
export function getRolesMappingSaasOutput(args?: GetRolesMappingSaasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRolesMappingSaasResult> {
    return pulumi.output(args).apply((a: any) => getRolesMappingSaas(a, opts))
}

/**
 * A collection of arguments for invoking getRolesMappingSaas.
 */
export interface GetRolesMappingSaasOutputArgs {
    id?: pulumi.Input<string>;
}
