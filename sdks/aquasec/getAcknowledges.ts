// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAcknowledges(args?: GetAcknowledgesArgs, opts?: pulumi.InvokeOptions): Promise<GetAcknowledgesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getAcknowledges:getAcknowledges", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAcknowledges.
 */
export interface GetAcknowledgesArgs {
    id?: string;
}

/**
 * A collection of values returned by getAcknowledges.
 */
export interface GetAcknowledgesResult {
    readonly acknowledges: outputs.GetAcknowledgesAcknowledge[];
    readonly id: string;
}
export function getAcknowledgesOutput(args?: GetAcknowledgesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAcknowledgesResult> {
    return pulumi.output(args).apply((a: any) => getAcknowledges(a, opts))
}

/**
 * A collection of arguments for invoking getAcknowledges.
 */
export interface GetAcknowledgesOutputArgs {
    id?: pulumi.Input<string>;
}
