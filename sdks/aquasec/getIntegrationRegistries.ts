// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIntegrationRegistries(args: GetIntegrationRegistriesArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationRegistriesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getIntegrationRegistries:getIntegrationRegistries", {
        "advancedSettingsCleanup": args.advancedSettingsCleanup,
        "alwaysPullPatterns": args.alwaysPullPatterns,
        "id": args.id,
        "imageCreationDateCondition": args.imageCreationDateCondition,
        "lastupdate": args.lastupdate,
        "name": args.name,
        "options": args.options,
        "pullImageAge": args.pullImageAge,
        "pullImageCount": args.pullImageCount,
        "pullImageTagPatterns": args.pullImageTagPatterns,
        "pullRepoPatternsExcludeds": args.pullRepoPatternsExcludeds,
        "registryScanTimeout": args.registryScanTimeout,
        "scannerNames": args.scannerNames,
        "scannerType": args.scannerType,
        "webhooks": args.webhooks,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIntegrationRegistries.
 */
export interface GetIntegrationRegistriesArgs {
    advancedSettingsCleanup?: boolean;
    alwaysPullPatterns?: string[];
    id?: string;
    imageCreationDateCondition?: string;
    lastupdate?: number;
    name: string;
    options?: inputs.GetIntegrationRegistriesOption[];
    pullImageAge?: string;
    pullImageCount?: number;
    pullImageTagPatterns?: string[];
    pullRepoPatternsExcludeds?: string[];
    registryScanTimeout?: number;
    scannerNames?: string[];
    scannerType?: string;
    webhooks?: inputs.GetIntegrationRegistriesWebhook[];
}

/**
 * A collection of values returned by getIntegrationRegistries.
 */
export interface GetIntegrationRegistriesResult {
    readonly advancedSettingsCleanup?: boolean;
    readonly alwaysPullPatterns?: string[];
    readonly autoCleanup: boolean;
    readonly autoPull: boolean;
    readonly autoPullInterval: number;
    readonly autoPullMax: number;
    readonly autoPullRescan: boolean;
    readonly autoPullTime: string;
    readonly description: string;
    readonly id: string;
    readonly imageCreationDateCondition: string;
    readonly lastupdate: number;
    readonly name: string;
    readonly options?: outputs.GetIntegrationRegistriesOption[];
    readonly password: string;
    readonly prefixes: string[];
    readonly pullImageAge: string;
    readonly pullImageCount: number;
    readonly pullImageTagPatterns?: string[];
    readonly pullRepoPatternsExcludeds?: string[];
    readonly registryScanTimeout?: number;
    readonly scannerNames: string[];
    readonly scannerType: string;
    readonly type: string;
    readonly url: string;
    readonly username: string;
    readonly webhooks?: outputs.GetIntegrationRegistriesWebhook[];
}
export function getIntegrationRegistriesOutput(args: GetIntegrationRegistriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIntegrationRegistriesResult> {
    return pulumi.output(args).apply((a: any) => getIntegrationRegistries(a, opts))
}

/**
 * A collection of arguments for invoking getIntegrationRegistries.
 */
export interface GetIntegrationRegistriesOutputArgs {
    advancedSettingsCleanup?: pulumi.Input<boolean>;
    alwaysPullPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    imageCreationDateCondition?: pulumi.Input<string>;
    lastupdate?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    options?: pulumi.Input<pulumi.Input<inputs.GetIntegrationRegistriesOptionArgs>[]>;
    pullImageAge?: pulumi.Input<string>;
    pullImageCount?: pulumi.Input<number>;
    pullImageTagPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    pullRepoPatternsExcludeds?: pulumi.Input<pulumi.Input<string>[]>;
    registryScanTimeout?: pulumi.Input<number>;
    scannerNames?: pulumi.Input<pulumi.Input<string>[]>;
    scannerType?: pulumi.Input<string>;
    webhooks?: pulumi.Input<pulumi.Input<inputs.GetIntegrationRegistriesWebhookArgs>[]>;
}
