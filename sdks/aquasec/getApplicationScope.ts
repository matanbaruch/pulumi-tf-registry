// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplicationScope(args: GetApplicationScopeArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationScopeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aquasec:index/getApplicationScope:getApplicationScope", {
        "categories": args.categories,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationScope.
 */
export interface GetApplicationScopeArgs {
    categories?: inputs.GetApplicationScopeCategory[];
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getApplicationScope.
 */
export interface GetApplicationScopeResult {
    readonly author: string;
    readonly categories?: outputs.GetApplicationScopeCategory[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly ownerEmail: string;
}
export function getApplicationScopeOutput(args: GetApplicationScopeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationScopeResult> {
    return pulumi.output(args).apply((a: any) => getApplicationScope(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationScope.
 */
export interface GetApplicationScopeOutputArgs {
    categories?: pulumi.Input<pulumi.Input<inputs.GetApplicationScopeCategoryArgs>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
