// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccessClientApp(args: GetAccessClientAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessClientAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("appd:index/getAccessClientApp:getAccessClientApp", {
        "clientId": args.clientId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessClientApp.
 */
export interface GetAccessClientAppArgs {
    clientId: string;
    id?: string;
}

/**
 * A collection of values returned by getAccessClientApp.
 */
export interface GetAccessClientAppResult {
    readonly authType: string;
    readonly clientId: string;
    readonly createdAt: string;
    readonly description: string;
    readonly displayName: string;
    readonly hasRotatedSecrets: boolean;
    readonly id: string;
    readonly rotatedSecretExpiresAt: string;
    readonly updatedAt: string;
}
export function getAccessClientAppOutput(args: GetAccessClientAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessClientAppResult> {
    return pulumi.output(args).apply((a: any) => getAccessClientApp(a, opts))
}

/**
 * A collection of arguments for invoking getAccessClientApp.
 */
export interface GetAccessClientAppOutputArgs {
    clientId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
