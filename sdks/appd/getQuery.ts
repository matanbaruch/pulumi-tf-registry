// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getQuery(args: GetQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("appd:index/getQuery:getQuery", {
        "id": args.id,
        "query": args.query,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQuery.
 */
export interface GetQueryArgs {
    id?: string;
    query: string;
}

/**
 * A collection of values returned by getQuery.
 */
export interface GetQueryResult {
    readonly id: string;
    readonly query: string;
    readonly response: string;
}
export function getQueryOutput(args: GetQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueryResult> {
    return pulumi.output(args).apply((a: any) => getQuery(a, opts))
}

/**
 * A collection of arguments for invoking getQuery.
 */
export interface GetQueryOutputArgs {
    id?: pulumi.Input<string>;
    query: pulumi.Input<string>;
}
