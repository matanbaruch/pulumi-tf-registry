// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ConnectionAwsConfigurationDetails {
    /**
     * Configuration for importing tags of resources that are being monitored
     */
    importTags?: pulumi.Input<inputs.ConnectionAwsConfigurationDetailsImportTags>;
    /**
     * How often the selected connection is polled for information
     */
    polling?: pulumi.Input<inputs.ConnectionAwsConfigurationDetailsPolling>;
    /**
     * Geographic locations used to fetch metrics
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Services for which we will fetch metrics
     */
    services?: pulumi.Input<pulumi.Input<inputs.ConnectionAwsConfigurationDetailsService>[]>;
    /**
     * Expression for filtering resources to be monitored, based on tags. Example: (tags(env) = 'prod' || tags(env) = 'production')) && tags(project) = 'cloudcollectors'
     */
    tagFilter?: pulumi.Input<string>;
}

export interface ConnectionAwsConfigurationDetailsImportTags {
    /**
     * It is true by default. Tags will be imported for all the resources that are being monitored by default
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Array of tag keys that need to be excluded from being imported. It can be set only when enabled is true
     */
    excludedKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConnectionAwsConfigurationDetailsPolling {
    /**
     * The default polling interval is five (5) minutes
     */
    interval?: pulumi.Input<number>;
    /**
     * The unit of polling interval, currently only support 'minute'. Defaults to the same
     */
    unit?: pulumi.Input<string>;
}

export interface ConnectionAwsConfigurationDetailsService {
    /**
     * Configuration for importing tags of resources that are being monitored
     */
    importTags?: pulumi.Input<inputs.ConnectionAwsConfigurationDetailsServiceImportTags>;
    /**
     * Service name for which we will fetch metrics
     */
    name: pulumi.Input<string>;
    /**
     * How often the selected connection is polled for information
     */
    polling?: pulumi.Input<inputs.ConnectionAwsConfigurationDetailsServicePolling>;
    /**
     * Expression for filtering resources to be monitored, based on tags. Example: (tags(env) = 'prod' || tags(env) = 'production')) && tags(project) = 'cloudcollectors'
     */
    tagFilter?: pulumi.Input<string>;
}

export interface ConnectionAwsConfigurationDetailsServiceImportTags {
    /**
     * It is true by default. Tags will be imported for all the resources that are being monitored by default
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Array of tag keys that need to be excluded from being imported. It can be set only when enabled is true
     */
    excludedKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConnectionAwsConfigurationDetailsServicePolling {
    /**
     * The default polling interval is five (5) minutes
     */
    interval?: pulumi.Input<number>;
    /**
     * The unit of polling interval, currently only support 'minute'. Defaults to the same
     */
    unit?: pulumi.Input<string>;
}

export interface ConnectionAwsConnectionDetails {
    /**
     * AWS Access keys are long-term credentials for an AWS IAM user, or account root user. The access key ID is one of two access keys needed to authenticate to AWS. The other is a secret access key. You need access keys to make programmatic calls using the AWS CLI, AWS Tools, or PowerShell.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * Connection type discriminator, supported types are `role_delegation` and `access_key`.
     */
    accessType: pulumi.Input<string>;
    /**
     * AWS Account ID provided by the user
     */
    accountId?: pulumi.Input<string>;
    /**
     * AppDynamics AWS Account ID. Delegates a user to an Identity Access Management (IAM) role in AWS. The AWS IAM role provides AppDynamics access to resources.
     * 						https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
     */
    appdynamicsAwsAccountId?: pulumi.Input<string>;
    /**
     * AWS Account ID fetched by the server
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * Returns an external ID for AWS role delegation connections 
     * 						https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html
     */
    externalId?: pulumi.Input<string>;
    /**
     * Role name for AWS iam role
     */
    roleName?: pulumi.Input<string>;
    /**
     * The secret access key is one of two access keys needed to authenticate to AWS. The other is an access key ID. The secret access key is only available once, when you create it. Download the generated secret access key and save in a secure location. If the secret access key is lost or deleted, you must create a new one. You need access keys to make programmatic calls using the AWS CLI, AWS Tools, or PowerShell.
     */
    secretAccessKey?: pulumi.Input<string>;
}

export interface ConnectionAzureConfigurationDetails {
    /**
     * Configuration for importing tags of resources that are being monitored
     */
    importTags?: pulumi.Input<inputs.ConnectionAzureConfigurationDetailsImportTags>;
    /**
     * How often the selected connection is polled for information
     */
    polling?: pulumi.Input<inputs.ConnectionAzureConfigurationDetailsPolling>;
    /**
     * Geographic locations used to fetch metrics
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Azure Resource groups used to fetch metrics
     */
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Services for which we will fetch metrics
     */
    services?: pulumi.Input<pulumi.Input<inputs.ConnectionAzureConfigurationDetailsService>[]>;
    /**
     * Expression for filtering resources to be monitored, based on tags. Example: (tags(env) = 'prod' || tags(env) = 'production')) && tags(project) = 'cloudcollectors'
     */
    tagFilter?: pulumi.Input<string>;
}

export interface ConnectionAzureConfigurationDetailsImportTags {
    /**
     * It is true by default. Tags will be imported for all the resources that are being monitored by default
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Array of tag keys that need to be excluded from being imported. It can be set only when enabled is true
     */
    excludedKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConnectionAzureConfigurationDetailsPolling {
    /**
     * The default polling interval is five (5) minutes
     */
    interval?: pulumi.Input<number>;
    /**
     * The unit of polling interval, currently only support 'minute'. Defaults to the same
     */
    unit?: pulumi.Input<string>;
}

export interface ConnectionAzureConfigurationDetailsService {
    /**
     * Configuration for importing tags of resources that are being monitored
     */
    importTags?: pulumi.Input<inputs.ConnectionAzureConfigurationDetailsServiceImportTags>;
    /**
     * Service name for which we will fetch metrics
     */
    name: pulumi.Input<string>;
    /**
     * How often the selected connection is polled for information
     */
    polling?: pulumi.Input<inputs.ConnectionAzureConfigurationDetailsServicePolling>;
    /**
     * Expression for filtering resources to be monitored, based on tags. Example: (tags(env) = 'prod' || tags(env) = 'production')) && tags(project) = 'cloudcollectors'
     */
    tagFilter?: pulumi.Input<string>;
}

export interface ConnectionAzureConfigurationDetailsServiceImportTags {
    /**
     * It is true by default. Tags will be imported for all the resources that are being monitored by default
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Array of tag keys that need to be excluded from being imported. It can be set only when enabled is true
     */
    excludedKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConnectionAzureConfigurationDetailsServicePolling {
    /**
     * The default polling interval is five (5) minutes
     */
    interval?: pulumi.Input<number>;
    /**
     * The unit of polling interval, currently only support 'minute'. Defaults to the same
     */
    unit?: pulumi.Input<string>;
}

export interface ConnectionAzureConnectionDetails {
    /**
     * Client IDs, also known as Application IDs, are long-term credentials for an Azure user, or account root user. The Client ID is one of three properties needed to authenticate to Azure, the other two being Client Secret and Tenant (Directory) ID
     */
    clientId: pulumi.Input<string>;
    /**
     * A Client Secret allows an Azure application to provide its identity when requesting an access token. The Client Secret is one of three properties needed to authenticate to Azure, the other two being Client ID (Application ID) and Tenant (Directory) ID
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Specify a GUID Subscription ID to monitor. If monitoring all subscriptions, do not specify a Subscription ID.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * The Azure AD Tenant (Directory) IDis one of three properties needed to authenticate to Azure. The other two are Client Secret and Client ID (Application ID).
     */
    tenantId: pulumi.Input<string>;
}

