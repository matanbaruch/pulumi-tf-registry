// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceLevelObjectives(args?: GetServiceLevelObjectivesArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceLevelObjectivesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getServiceLevelObjectives:getServiceLevelObjectives", {
        "errorOnEmptyResult": args.errorOnEmptyResult,
        "id": args.id,
        "ids": args.ids,
        "metricsQuery": args.metricsQuery,
        "nameQuery": args.nameQuery,
        "query": args.query,
        "tagsQuery": args.tagsQuery,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceLevelObjectives.
 */
export interface GetServiceLevelObjectivesArgs {
    errorOnEmptyResult?: boolean;
    id?: string;
    ids?: string[];
    metricsQuery?: string;
    nameQuery?: string;
    query?: string;
    tagsQuery?: string;
}

/**
 * A collection of values returned by getServiceLevelObjectives.
 */
export interface GetServiceLevelObjectivesResult {
    readonly errorOnEmptyResult?: boolean;
    readonly id: string;
    readonly ids?: string[];
    readonly metricsQuery?: string;
    readonly nameQuery?: string;
    readonly query?: string;
    readonly slos: outputs.GetServiceLevelObjectivesSlo[];
    readonly tagsQuery?: string;
}
export function getServiceLevelObjectivesOutput(args?: GetServiceLevelObjectivesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceLevelObjectivesResult> {
    return pulumi.output(args).apply((a: any) => getServiceLevelObjectives(a, opts))
}

/**
 * A collection of arguments for invoking getServiceLevelObjectives.
 */
export interface GetServiceLevelObjectivesOutputArgs {
    errorOnEmptyResult?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    metricsQuery?: pulumi.Input<string>;
    nameQuery?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    tagsQuery?: pulumi.Input<string>;
}
