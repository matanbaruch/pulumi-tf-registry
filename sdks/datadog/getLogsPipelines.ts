// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogsPipelines(args?: GetLogsPipelinesArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsPipelinesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getLogsPipelines:getLogsPipelines", {
        "id": args.id,
        "isReadOnly": args.isReadOnly,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogsPipelines.
 */
export interface GetLogsPipelinesArgs {
    id?: string;
    isReadOnly?: string;
}

/**
 * A collection of values returned by getLogsPipelines.
 */
export interface GetLogsPipelinesResult {
    readonly id: string;
    readonly isReadOnly?: string;
    readonly logsPipelines: outputs.GetLogsPipelinesLogsPipeline[];
}
export function getLogsPipelinesOutput(args?: GetLogsPipelinesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogsPipelinesResult> {
    return pulumi.output(args).apply((a: any) => getLogsPipelines(a, opts))
}

/**
 * A collection of arguments for invoking getLogsPipelines.
 */
export interface GetLogsPipelinesOutputArgs {
    id?: pulumi.Input<string>;
    isReadOnly?: pulumi.Input<string>;
}
