// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHosts(args?: GetHostsArgs, opts?: pulumi.InvokeOptions): Promise<GetHostsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getHosts:getHosts", {
        "filter": args.filter,
        "from": args.from,
        "includeMutedHostsData": args.includeMutedHostsData,
        "sortDir": args.sortDir,
        "sortField": args.sortField,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHosts.
 */
export interface GetHostsArgs {
    filter?: string;
    from?: number;
    includeMutedHostsData?: boolean;
    sortDir?: string;
    sortField?: string;
}

/**
 * A collection of values returned by getHosts.
 */
export interface GetHostsResult {
    readonly filter?: string;
    readonly from?: number;
    readonly hostLists: outputs.GetHostsHostList[];
    readonly id: string;
    readonly includeMutedHostsData?: boolean;
    readonly sortDir?: string;
    readonly sortField?: string;
    readonly totalMatching: number;
    readonly totalReturned: number;
}
export function getHostsOutput(args?: GetHostsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHostsResult> {
    return pulumi.output(args).apply((a: any) => getHosts(a, opts))
}

/**
 * A collection of arguments for invoking getHosts.
 */
export interface GetHostsOutputArgs {
    filter?: pulumi.Input<string>;
    from?: pulumi.Input<number>;
    includeMutedHostsData?: pulumi.Input<boolean>;
    sortDir?: pulumi.Input<string>;
    sortField?: pulumi.Input<string>;
}
