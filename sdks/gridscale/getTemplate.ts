// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTemplate(args: GetTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getTemplate:getTemplate", {
        "id": args.id,
        "labels": args.labels,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTemplate.
 */
export interface GetTemplateArgs {
    id?: string;
    labels?: string[];
    name: string;
}

/**
 * A collection of values returned by getTemplate.
 */
export interface GetTemplateResult {
    readonly capacity: number;
    readonly changeTime: string;
    readonly createTime: string;
    readonly currentPrice: number;
    readonly description: string;
    readonly distro: string;
    readonly id: string;
    readonly labels?: string[];
    readonly licenseProductNo: number;
    readonly locationCountry: string;
    readonly locationIata: string;
    readonly locationName: string;
    readonly locationUuid: string;
    readonly name: string;
    readonly ostype: string;
    readonly private: boolean;
    readonly status: string;
    readonly usageInMinutes: number;
    readonly version: string;
}
export function getTemplateOutput(args: GetTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplateResult> {
    return pulumi.output(args).apply((a: any) => getTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getTemplate.
 */
export interface GetTemplateOutputArgs {
    id?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}
