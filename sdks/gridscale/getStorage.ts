// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorage(args: GetStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getStorage:getStorage", {
        "id": args.id,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorage.
 */
export interface GetStorageArgs {
    id?: string;
    resourceId: string;
}

/**
 * A collection of values returned by getStorage.
 */
export interface GetStorageResult {
    readonly capacity: number;
    readonly changeTime: string;
    readonly createTime: string;
    readonly currentPrice: number;
    readonly id: string;
    readonly labels: string[];
    readonly lastUsedTemplate: string;
    readonly licenseProductNo: number;
    readonly locationCountry: string;
    readonly locationIata: string;
    readonly locationName: string;
    readonly locationUuid: string;
    readonly name: string;
    readonly parentUuid: string;
    readonly resourceId: string;
    readonly status: string;
    readonly storageType: string;
    readonly usageInMinutes: number;
}
export function getStorageOutput(args: GetStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageResult> {
    return pulumi.output(args).apply((a: any) => getStorage(a, opts))
}

/**
 * A collection of arguments for invoking getStorage.
 */
export interface GetStorageOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
}
