// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMarketplaceApplication(args: GetMarketplaceApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetMarketplaceApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getMarketplaceApplication:getMarketplaceApplication", {
        "id": args.id,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMarketplaceApplication.
 */
export interface GetMarketplaceApplicationArgs {
    id?: string;
    resourceId: string;
}

/**
 * A collection of values returned by getMarketplaceApplication.
 */
export interface GetMarketplaceApplicationResult {
    readonly category: string;
    readonly changeTime: string;
    readonly createTime: string;
    readonly id: string;
    readonly isApplicationOwner: boolean;
    readonly isPublishGlobal: boolean;
    readonly isPublishGlobalRequested: boolean;
    readonly isPublishRequested: boolean;
    readonly isPublished: boolean;
    readonly metaAdvices: string;
    readonly metaAuthor: string;
    readonly metaComponents: string[];
    readonly metaFeatures: string;
    readonly metaHints: string;
    readonly metaIcon: string;
    readonly metaLicense: string;
    readonly metaOs: string;
    readonly metaOverview: string;
    readonly metaTermsOfUse: string;
    readonly name: string;
    readonly objectStoragePath: string;
    readonly publishGlobalRequestedDate: string;
    readonly publishRequestedDate: string;
    readonly publishedDate: string;
    readonly publishedGlobalDate: string;
    readonly resourceId: string;
    readonly setupCores: number;
    readonly setupMemory: number;
    readonly setupStorageCapacity: number;
    readonly status: string;
    readonly type: string;
    readonly uniqueHash: string;
}
export function getMarketplaceApplicationOutput(args: GetMarketplaceApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMarketplaceApplicationResult> {
    return pulumi.output(args).apply((a: any) => getMarketplaceApplication(a, opts))
}

/**
 * A collection of arguments for invoking getMarketplaceApplication.
 */
export interface GetMarketplaceApplicationOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
}
