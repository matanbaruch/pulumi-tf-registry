// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewall(args: GetFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getFirewall:getFirewall", {
        "id": args.id,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallArgs {
    id?: string;
    resourceId: string;
}

/**
 * A collection of values returned by getFirewall.
 */
export interface GetFirewallResult {
    readonly changeTime: string;
    readonly createTime: string;
    readonly description: string;
    readonly id: string;
    readonly labels: string[];
    readonly locationName: string;
    readonly name: string;
    readonly networks: outputs.GetFirewallNetwork[];
    readonly private: boolean;
    readonly resourceId: string;
    readonly rulesV4Ins: outputs.GetFirewallRulesV4In[];
    readonly rulesV4Outs: outputs.GetFirewallRulesV4Out[];
    readonly rulesV6Ins: outputs.GetFirewallRulesV6In[];
    readonly rulesV6Outs: outputs.GetFirewallRulesV6Out[];
    readonly status: string;
}
export function getFirewallOutput(args: GetFirewallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallResult> {
    return pulumi.output(args).apply((a: any) => getFirewall(a, opts))
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
}
