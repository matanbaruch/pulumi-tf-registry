// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServer(args: GetServerArgs, opts?: pulumi.InvokeOptions): Promise<GetServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getServer:getServer", {
        "id": args.id,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerArgs {
    id?: string;
    resourceId: string;
}

/**
 * A collection of values returned by getServer.
 */
export interface GetServerResult {
    readonly autoRecovery: boolean;
    readonly availabilityZone: string;
    readonly changeTime: string;
    readonly consoleToken: string;
    readonly cores: number;
    readonly createTime: string;
    readonly currentPrice: number;
    readonly hardwareProfile: string;
    readonly hardwareProfileConfigs: outputs.GetServerHardwareProfileConfig[];
    readonly id: string;
    readonly ipv4: string;
    readonly ipv6: string;
    readonly isoimage: string;
    readonly labels: string[];
    readonly legacy: boolean;
    readonly locationUuid: string;
    readonly memory: number;
    readonly name: string;
    readonly networks: outputs.GetServerNetwork[];
    readonly power: boolean;
    readonly resourceId: string;
    readonly status: string;
    readonly storages: outputs.GetServerStorage[];
    readonly usageInMinutesCores: number;
    readonly usageInMinutesMemory: number;
    readonly userDataBase64: string;
}
export function getServerOutput(args: GetServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerResult> {
    return pulumi.output(args).apply((a: any) => getServer(a, opts))
}

/**
 * A collection of arguments for invoking getServer.
 */
export interface GetServerOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
}
