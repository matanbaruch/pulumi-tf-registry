// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetwork(args: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getNetwork:getNetwork", {
        "id": args.id,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    id?: string;
    resourceId: string;
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly autoAssignedServers: outputs.GetNetworkAutoAssignedServer[];
    readonly changeTime: string;
    readonly createTime: string;
    readonly deleteBlock: boolean;
    readonly dhcpActive: boolean;
    readonly dhcpDns: string;
    readonly dhcpGateway: string;
    readonly dhcpRange: string;
    readonly dhcpReservedSubnets: string[];
    readonly id: string;
    readonly l2security: boolean;
    readonly labels: string[];
    readonly locationCountry: string;
    readonly locationIata: string;
    readonly locationName: string;
    readonly locationUuid: string;
    readonly name: string;
    readonly networkType: string;
    readonly pinnedServers: outputs.GetNetworkPinnedServer[];
    readonly resourceId: string;
    readonly status: string;
}
export function getNetworkOutput(args: GetNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
}
