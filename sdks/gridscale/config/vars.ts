// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("gridscale");

/**
 * the url for the gridscale API.
 */
export declare const apiUrl: string | undefined;
Object.defineProperty(exports, "apiUrl", {
    get() {
        return __config.get("apiUrl");
    },
    enumerable: true,
});

/**
 * Custom HTTP headers
 */
export declare const httpHeaders: string | undefined;
Object.defineProperty(exports, "httpHeaders", {
    get() {
        return __config.get("httpHeaders");
    },
    enumerable: true,
});

/**
 * Custom maximum number of retries. The retryable requests can be retried up to max_n_retries. If max_n_retries is reached
 * and the request is not successful, the last error is returned.
 */
export declare const maxNRetries: number | undefined;
Object.defineProperty(exports, "maxNRetries", {
    get() {
        return __config.getObject<number>("maxNRetries");
    },
    enumerable: true,
});

/**
 * Custom request delay interval in ms. This time interval is used to delay the synchronous request checks, or delay
 * retryable requests.
 */
export declare const requestDelayInterval: number | undefined;
Object.defineProperty(exports, "requestDelayInterval", {
    get() {
        return __config.getObject<number>("requestDelayInterval");
    },
    enumerable: true,
});

/**
 * API-token for the gridscale API.
 */
export declare const token: string | undefined;
Object.defineProperty(exports, "token", {
    get() {
        return __config.get("token");
    },
    enumerable: true,
});

/**
 * User-UUID for the gridscale API.
 */
export declare const uuid: string | undefined;
Object.defineProperty(exports, "uuid", {
    get() {
        return __config.get("uuid");
    },
    enumerable: true,
});

