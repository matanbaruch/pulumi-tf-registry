// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnapshotschedule(args: GetSnapshotscheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotscheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getSnapshotschedule:getSnapshotschedule", {
        "id": args.id,
        "resourceId": args.resourceId,
        "storageUuid": args.storageUuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSnapshotschedule.
 */
export interface GetSnapshotscheduleArgs {
    id?: string;
    resourceId: string;
    storageUuid: string;
}

/**
 * A collection of values returned by getSnapshotschedule.
 */
export interface GetSnapshotscheduleResult {
    readonly changeTime: string;
    readonly createTime: string;
    readonly id: string;
    readonly keepSnapshots: number;
    readonly labels: string[];
    readonly name: string;
    readonly nextRuntime: string;
    readonly resourceId: string;
    readonly runInterval: number;
    readonly snapshots: outputs.GetSnapshotscheduleSnapshot[];
    readonly status: string;
    readonly storageUuid: string;
}
export function getSnapshotscheduleOutput(args: GetSnapshotscheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotscheduleResult> {
    return pulumi.output(args).apply((a: any) => getSnapshotschedule(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshotschedule.
 */
export interface GetSnapshotscheduleOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    storageUuid: pulumi.Input<string>;
}
