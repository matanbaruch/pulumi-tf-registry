// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPaas(args: GetPaasArgs, opts?: pulumi.InvokeOptions): Promise<GetPaasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getPaas:getPaas", {
        "id": args.id,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPaas.
 */
export interface GetPaasArgs {
    id?: string;
    resourceId: string;
}

/**
 * A collection of values returned by getPaas.
 */
export interface GetPaasResult {
    readonly changeTime: string;
    readonly createTime: string;
    readonly currentPrice: number;
    readonly id: string;
    readonly labels: string[];
    readonly listenPorts: outputs.GetPaasListenPort[];
    readonly name: string;
    readonly networkUuid: string;
    readonly parameters: outputs.GetPaasParameter[];
    readonly password: string;
    readonly resourceId: string;
    readonly resourceLimits: outputs.GetPaasResourceLimit[];
    readonly securityZoneUuid: string;
    readonly serviceTemplateCategory: string;
    readonly serviceTemplateUuid: string;
    readonly status: string;
    readonly usageInMinute: number;
    readonly username: string;
}
export function getPaasOutput(args: GetPaasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPaasResult> {
    return pulumi.output(args).apply((a: any) => getPaas(a, opts))
}

/**
 * A collection of arguments for invoking getPaas.
 */
export interface GetPaasOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
}
