// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBackupschedule(args: GetBackupscheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupscheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getBackupschedule:getBackupschedule", {
        "id": args.id,
        "resourceId": args.resourceId,
        "storageUuid": args.storageUuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBackupschedule.
 */
export interface GetBackupscheduleArgs {
    id?: string;
    resourceId: string;
    storageUuid: string;
}

/**
 * A collection of values returned by getBackupschedule.
 */
export interface GetBackupscheduleResult {
    readonly active: boolean;
    readonly backupLocationName: string;
    readonly backupLocationUuid: string;
    readonly changeTime: string;
    readonly createTime: string;
    readonly id: string;
    readonly keepBackups: number;
    readonly name: string;
    readonly nextRuntime: string;
    readonly resourceId: string;
    readonly runInterval: number;
    readonly status: string;
    readonly storageBackups: outputs.GetBackupscheduleStorageBackup[];
    readonly storageUuid: string;
}
export function getBackupscheduleOutput(args: GetBackupscheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupscheduleResult> {
    return pulumi.output(args).apply((a: any) => getBackupschedule(a, opts))
}

/**
 * A collection of arguments for invoking getBackupschedule.
 */
export interface GetBackupscheduleOutputArgs {
    id?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    storageUuid: pulumi.Input<string>;
}
