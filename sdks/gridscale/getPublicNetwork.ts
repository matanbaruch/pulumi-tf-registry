// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPublicNetwork(args?: GetPublicNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gridscale:index/getPublicNetwork:getPublicNetwork", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPublicNetwork.
 */
export interface GetPublicNetworkArgs {
    id?: string;
}

/**
 * A collection of values returned by getPublicNetwork.
 */
export interface GetPublicNetworkResult {
    readonly changeTime: string;
    readonly createTime: string;
    readonly deleteBlock: boolean;
    readonly id: string;
    readonly l2security: boolean;
    readonly labels: string[];
    readonly locationCountry: string;
    readonly locationIata: string;
    readonly locationName: string;
    readonly locationUuid: string;
    readonly name: string;
    readonly networkType: string;
    readonly status: string;
}
export function getPublicNetworkOutput(args?: GetPublicNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublicNetworkResult> {
    return pulumi.output(args).apply((a: any) => getPublicNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getPublicNetwork.
 */
export interface GetPublicNetworkOutputArgs {
    id?: pulumi.Input<string>;
}
