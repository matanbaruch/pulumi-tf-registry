// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MarketplaceApplicationImport extends pulumi.CustomResource {
    /**
     * Get an existing MarketplaceApplicationImport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MarketplaceApplicationImportState, opts?: pulumi.CustomResourceOptions): MarketplaceApplicationImport {
        return new MarketplaceApplicationImport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gridscale:index/marketplaceApplicationImport:MarketplaceApplicationImport';

    /**
     * Returns true if the given object is an instance of MarketplaceApplicationImport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MarketplaceApplicationImport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MarketplaceApplicationImport.__pulumiType;
    }

    /**
     * Category of marketplace application. Accepted values: "CMS", "project management", "Adminpanel", "Collaboration", "Cloud
     * Storage", "Archiving"
     */
    public /*out*/ readonly category!: pulumi.Output<string>;
    /**
     * Defines the date and time of the last object change
     */
    public /*out*/ readonly changeTime!: pulumi.Output<string>;
    /**
     * Defines the date and time the object was initially created
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Hash of a specific marketplace application that you want to import
     */
    public readonly importUniqueHash!: pulumi.Output<string>;
    /**
     * Whether the you are the owner of application or not
     */
    public /*out*/ readonly isApplicationOwner!: pulumi.Output<boolean>;
    /**
     * Whether a template is published to other partner or not
     */
    public /*out*/ readonly isPublishGlobal!: pulumi.Output<boolean>;
    /**
     * Whether a partner wants their tenant template published to other partners
     */
    public /*out*/ readonly isPublishGlobalRequested!: pulumi.Output<boolean>;
    /**
     * Whether the tenants want their template to be published or not
     */
    public /*out*/ readonly isPublishRequested!: pulumi.Output<boolean>;
    /**
     * Whether the template is published by the partner to their tenant
     */
    public /*out*/ readonly isPublished!: pulumi.Output<boolean>;
    public /*out*/ readonly metaAdvices!: pulumi.Output<string>;
    public /*out*/ readonly metaAuthor!: pulumi.Output<string>;
    public /*out*/ readonly metaComponents!: pulumi.Output<string[]>;
    public /*out*/ readonly metaFeatures!: pulumi.Output<string>;
    public /*out*/ readonly metaHints!: pulumi.Output<string>;
    public /*out*/ readonly metaIcon!: pulumi.Output<string>;
    public /*out*/ readonly metaLicense!: pulumi.Output<string>;
    public /*out*/ readonly metaOs!: pulumi.Output<string>;
    public /*out*/ readonly metaOverview!: pulumi.Output<string>;
    public /*out*/ readonly metaTermsOfUse!: pulumi.Output<string>;
    /**
     * The human-readable name of the object. It supports the full UTF-8 character set, with a maximum of 64 characters
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Path to the images for the application, must be in .gz format and started with s3//
     */
    public /*out*/ readonly objectStoragePath!: pulumi.Output<string>;
    /**
     * The date when a partner requested their tenants template to be published
     */
    public /*out*/ readonly publishGlobalRequestedDate!: pulumi.Output<string>;
    /**
     * The date when the tenant requested their template to be published
     */
    public /*out*/ readonly publishRequestedDate!: pulumi.Output<string>;
    /**
     * The date when the template is published into other tenant in the same partner
     */
    public /*out*/ readonly publishedDate!: pulumi.Output<string>;
    /**
     * The date when a template is published to other partner
     */
    public /*out*/ readonly publishedGlobalDate!: pulumi.Output<string>;
    /**
     * Number of server's cores
     */
    public /*out*/ readonly setupCores!: pulumi.Output<number>;
    /**
     * The capacity of server's memory in GB
     */
    public /*out*/ readonly setupMemory!: pulumi.Output<number>;
    /**
     * The capacity of server's storage in GB
     */
    public /*out*/ readonly setupStorageCapacity!: pulumi.Output<number>;
    /**
     * status indicates the status of the object
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.MarketplaceApplicationImportTimeouts | undefined>;
    /**
     * The type of template
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Unique hash to allow user to import the self-created marketplace application
     */
    public /*out*/ readonly uniqueHash!: pulumi.Output<string>;

    /**
     * Create a MarketplaceApplicationImport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MarketplaceApplicationImportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MarketplaceApplicationImportArgs | MarketplaceApplicationImportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MarketplaceApplicationImportState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["changeTime"] = state ? state.changeTime : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["importUniqueHash"] = state ? state.importUniqueHash : undefined;
            resourceInputs["isApplicationOwner"] = state ? state.isApplicationOwner : undefined;
            resourceInputs["isPublishGlobal"] = state ? state.isPublishGlobal : undefined;
            resourceInputs["isPublishGlobalRequested"] = state ? state.isPublishGlobalRequested : undefined;
            resourceInputs["isPublishRequested"] = state ? state.isPublishRequested : undefined;
            resourceInputs["isPublished"] = state ? state.isPublished : undefined;
            resourceInputs["metaAdvices"] = state ? state.metaAdvices : undefined;
            resourceInputs["metaAuthor"] = state ? state.metaAuthor : undefined;
            resourceInputs["metaComponents"] = state ? state.metaComponents : undefined;
            resourceInputs["metaFeatures"] = state ? state.metaFeatures : undefined;
            resourceInputs["metaHints"] = state ? state.metaHints : undefined;
            resourceInputs["metaIcon"] = state ? state.metaIcon : undefined;
            resourceInputs["metaLicense"] = state ? state.metaLicense : undefined;
            resourceInputs["metaOs"] = state ? state.metaOs : undefined;
            resourceInputs["metaOverview"] = state ? state.metaOverview : undefined;
            resourceInputs["metaTermsOfUse"] = state ? state.metaTermsOfUse : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectStoragePath"] = state ? state.objectStoragePath : undefined;
            resourceInputs["publishGlobalRequestedDate"] = state ? state.publishGlobalRequestedDate : undefined;
            resourceInputs["publishRequestedDate"] = state ? state.publishRequestedDate : undefined;
            resourceInputs["publishedDate"] = state ? state.publishedDate : undefined;
            resourceInputs["publishedGlobalDate"] = state ? state.publishedGlobalDate : undefined;
            resourceInputs["setupCores"] = state ? state.setupCores : undefined;
            resourceInputs["setupMemory"] = state ? state.setupMemory : undefined;
            resourceInputs["setupStorageCapacity"] = state ? state.setupStorageCapacity : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uniqueHash"] = state ? state.uniqueHash : undefined;
        } else {
            const args = argsOrState as MarketplaceApplicationImportArgs | undefined;
            if ((!args || args.importUniqueHash === undefined) && !opts.urn) {
                throw new Error("Missing required property 'importUniqueHash'");
            }
            resourceInputs["importUniqueHash"] = args ? args.importUniqueHash : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["category"] = undefined /*out*/;
            resourceInputs["changeTime"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["isApplicationOwner"] = undefined /*out*/;
            resourceInputs["isPublishGlobal"] = undefined /*out*/;
            resourceInputs["isPublishGlobalRequested"] = undefined /*out*/;
            resourceInputs["isPublishRequested"] = undefined /*out*/;
            resourceInputs["isPublished"] = undefined /*out*/;
            resourceInputs["metaAdvices"] = undefined /*out*/;
            resourceInputs["metaAuthor"] = undefined /*out*/;
            resourceInputs["metaComponents"] = undefined /*out*/;
            resourceInputs["metaFeatures"] = undefined /*out*/;
            resourceInputs["metaHints"] = undefined /*out*/;
            resourceInputs["metaIcon"] = undefined /*out*/;
            resourceInputs["metaLicense"] = undefined /*out*/;
            resourceInputs["metaOs"] = undefined /*out*/;
            resourceInputs["metaOverview"] = undefined /*out*/;
            resourceInputs["metaTermsOfUse"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["objectStoragePath"] = undefined /*out*/;
            resourceInputs["publishGlobalRequestedDate"] = undefined /*out*/;
            resourceInputs["publishRequestedDate"] = undefined /*out*/;
            resourceInputs["publishedDate"] = undefined /*out*/;
            resourceInputs["publishedGlobalDate"] = undefined /*out*/;
            resourceInputs["setupCores"] = undefined /*out*/;
            resourceInputs["setupMemory"] = undefined /*out*/;
            resourceInputs["setupStorageCapacity"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uniqueHash"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MarketplaceApplicationImport.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MarketplaceApplicationImport resources.
 */
export interface MarketplaceApplicationImportState {
    /**
     * Category of marketplace application. Accepted values: "CMS", "project management", "Adminpanel", "Collaboration", "Cloud
     * Storage", "Archiving"
     */
    category?: pulumi.Input<string>;
    /**
     * Defines the date and time of the last object change
     */
    changeTime?: pulumi.Input<string>;
    /**
     * Defines the date and time the object was initially created
     */
    createTime?: pulumi.Input<string>;
    /**
     * Hash of a specific marketplace application that you want to import
     */
    importUniqueHash?: pulumi.Input<string>;
    /**
     * Whether the you are the owner of application or not
     */
    isApplicationOwner?: pulumi.Input<boolean>;
    /**
     * Whether a template is published to other partner or not
     */
    isPublishGlobal?: pulumi.Input<boolean>;
    /**
     * Whether a partner wants their tenant template published to other partners
     */
    isPublishGlobalRequested?: pulumi.Input<boolean>;
    /**
     * Whether the tenants want their template to be published or not
     */
    isPublishRequested?: pulumi.Input<boolean>;
    /**
     * Whether the template is published by the partner to their tenant
     */
    isPublished?: pulumi.Input<boolean>;
    metaAdvices?: pulumi.Input<string>;
    metaAuthor?: pulumi.Input<string>;
    metaComponents?: pulumi.Input<pulumi.Input<string>[]>;
    metaFeatures?: pulumi.Input<string>;
    metaHints?: pulumi.Input<string>;
    metaIcon?: pulumi.Input<string>;
    metaLicense?: pulumi.Input<string>;
    metaOs?: pulumi.Input<string>;
    metaOverview?: pulumi.Input<string>;
    metaTermsOfUse?: pulumi.Input<string>;
    /**
     * The human-readable name of the object. It supports the full UTF-8 character set, with a maximum of 64 characters
     */
    name?: pulumi.Input<string>;
    /**
     * Path to the images for the application, must be in .gz format and started with s3//
     */
    objectStoragePath?: pulumi.Input<string>;
    /**
     * The date when a partner requested their tenants template to be published
     */
    publishGlobalRequestedDate?: pulumi.Input<string>;
    /**
     * The date when the tenant requested their template to be published
     */
    publishRequestedDate?: pulumi.Input<string>;
    /**
     * The date when the template is published into other tenant in the same partner
     */
    publishedDate?: pulumi.Input<string>;
    /**
     * The date when a template is published to other partner
     */
    publishedGlobalDate?: pulumi.Input<string>;
    /**
     * Number of server's cores
     */
    setupCores?: pulumi.Input<number>;
    /**
     * The capacity of server's memory in GB
     */
    setupMemory?: pulumi.Input<number>;
    /**
     * The capacity of server's storage in GB
     */
    setupStorageCapacity?: pulumi.Input<number>;
    /**
     * status indicates the status of the object
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MarketplaceApplicationImportTimeouts>;
    /**
     * The type of template
     */
    type?: pulumi.Input<string>;
    /**
     * Unique hash to allow user to import the self-created marketplace application
     */
    uniqueHash?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MarketplaceApplicationImport resource.
 */
export interface MarketplaceApplicationImportArgs {
    /**
     * Hash of a specific marketplace application that you want to import
     */
    importUniqueHash: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MarketplaceApplicationImportTimeouts>;
}
