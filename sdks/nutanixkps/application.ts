// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanixkps:index/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * Description of the application. For example, describe the application's purpose.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of service domain and / or node IDs which are part of this application. Even if you want to add a single ID, use
     * square brackets. For example, [ '<svc domain id>' ]
     */
    public readonly edgeIds!: pulumi.Output<string[]>;
    /**
     * TGZ file name with path for the Helm chart for this application
     */
    public readonly helmChartFilename!: pulumi.Output<string>;
    /**
     * Values yaml file name with path
     */
    public readonly helmValuesFilename!: pulumi.Output<string | undefined>;
    /**
     * Name of the application: Name must include lowercase alphanumeric characters and must start and end with an lowercase
     * alphanumeric character. Dash (-) and dot (.) characters are allowed as delimiters. Maximum length of 200 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Id of the project to which this application belongs
     */
    public readonly projectId!: pulumi.Output<string>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["edgeIds"] = state ? state.edgeIds : undefined;
            resourceInputs["helmChartFilename"] = state ? state.helmChartFilename : undefined;
            resourceInputs["helmValuesFilename"] = state ? state.helmValuesFilename : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            if ((!args || args.edgeIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'edgeIds'");
            }
            if ((!args || args.helmChartFilename === undefined) && !opts.urn) {
                throw new Error("Missing required property 'helmChartFilename'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["edgeIds"] = args ? args.edgeIds : undefined;
            resourceInputs["helmChartFilename"] = args ? args.helmChartFilename : undefined;
            resourceInputs["helmValuesFilename"] = args ? args.helmValuesFilename : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Application.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * Description of the application. For example, describe the application's purpose.
     */
    description?: pulumi.Input<string>;
    /**
     * List of service domain and / or node IDs which are part of this application. Even if you want to add a single ID, use
     * square brackets. For example, [ '<svc domain id>' ]
     */
    edgeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TGZ file name with path for the Helm chart for this application
     */
    helmChartFilename?: pulumi.Input<string>;
    /**
     * Values yaml file name with path
     */
    helmValuesFilename?: pulumi.Input<string>;
    /**
     * Name of the application: Name must include lowercase alphanumeric characters and must start and end with an lowercase
     * alphanumeric character. Dash (-) and dot (.) characters are allowed as delimiters. Maximum length of 200 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the project to which this application belongs
     */
    projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * Description of the application. For example, describe the application's purpose.
     */
    description?: pulumi.Input<string>;
    /**
     * List of service domain and / or node IDs which are part of this application. Even if you want to add a single ID, use
     * square brackets. For example, [ '<svc domain id>' ]
     */
    edgeIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TGZ file name with path for the Helm chart for this application
     */
    helmChartFilename: pulumi.Input<string>;
    /**
     * Values yaml file name with path
     */
    helmValuesFilename?: pulumi.Input<string>;
    /**
     * Name of the application: Name must include lowercase alphanumeric characters and must start and end with an lowercase
     * alphanumeric character. Dash (-) and dot (.) characters are allowed as delimiters. Maximum length of 200 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of the project to which this application belongs
     */
    projectId: pulumi.Input<string>;
}
