// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceclasses(args?: GetServiceclassesArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceclassesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanixkps:index/getServiceclasses:getServiceclasses", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceclasses.
 */
export interface GetServiceclassesArgs {
    id?: string;
}

/**
 * A collection of values returned by getServiceclasses.
 */
export interface GetServiceclassesResult {
    readonly id: string;
    readonly serviceClasses: outputs.GetServiceclassesServiceClass[];
}
export function getServiceclassesOutput(args?: GetServiceclassesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceclassesResult> {
    return pulumi.output(args).apply((a: any) => getServiceclasses(a, opts))
}

/**
 * A collection of arguments for invoking getServiceclasses.
 */
export interface GetServiceclassesOutputArgs {
    id?: pulumi.Input<string>;
}
