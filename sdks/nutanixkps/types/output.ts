// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetNodeRole {
    master: boolean;
    worker: boolean;
}

export interface GetNodesNode {
    description: string;
    gateway: string;
    ipAddress: string;
    isBootstrapMaster: boolean;
    name: string;
    roles: outputs.GetNodesNodeRole[];
    serialNumber: string;
    serviceDomainId: string;
    subnet: string;
}

export interface GetNodesNodeRole {
    master: boolean;
    worker: boolean;
}

export interface GetServiceclassTag {
    name: string;
    value: string;
}

export interface GetServiceclassesServiceClass {
    description: string;
    minServiceDomainVersion: string;
    name: string;
    serviceVersion: string;
    state: string;
    tags: outputs.GetServiceclassesServiceClassTag[];
    type: string;
}

export interface GetServiceclassesServiceClassTag {
    name: string;
    value: string;
}

export interface GetServicedomainsServicedomain {
    description: string;
    id: string;
    name: string;
}

export interface GetUsersUser {
    email: string;
    name: string;
    role: string;
}

export interface NodeRole {
    master: boolean;
    worker: boolean;
}

export interface ProjectUser {
    /**
     * Valid values for Role are: PROJECT_ADMIN, PROJECT_USER
     */
    role: string;
    /**
     * ID of the user to be added to the project
     */
    userId: string;
}

export interface ServicebindingBindResource {
    /**
     * ID of the resource, either a service domain or a project
     */
    id: string;
    /**
     * Valid values for this field are: 'SERVICEDOMAIN' or 'PROJECT'
     */
    type: string;
}

export interface StorageprofileEbsStorageConfig {
    /**
     * Set to true if the data in the volume should be encrypted. By default this value is false.
     */
    encrypted?: string;
    /**
     * Input / output operations per second, measured in GB
     */
    iopsPerGb: string;
    /**
     * Type of the EBS volume. For example, gp2, gp3, io1, io2, st1, sc1
     */
    type: string;
}

export interface StorageprofileNutanixVolumesConfig {
    /**
     * IPv4 data services address used by Nutanix Volumes.
     * 							Nutanix Volumes is a load-balanced iSCSI target storage feature of AOS.
     * 							You can obtain this field value by logging in to the Nutanix Prism console.
     * 							In the Prism web console, see Cluster Details to get the cluster data services IP address.
     */
    dataServicesIp: string;
    /**
     * Data services default port 3260.
     */
    dataServicesPort?: number;
    flashMode?: boolean;
    /**
     * Prism Element cluster default port 9440.
     */
    prismElementClusterPort?: number;
    /**
     * This field sets a logical IP address for the cluster.
     * 							You can obtain this field value by logging in to the Nutanix Prism console. 
     * 							In the Prism web console, see Cluster Details to get the cluster virtual IP address.
     */
    prismElementClusterVip: string;
    /**
     * Password for the Prism element cluster.
     * 							You can obtain the credentials by contacting your Prism Element cluster administrator if you don't have them already.
     */
    prismElementPassword: string;
    /**
     * Name of the storage container: The maximum length is 75 characters.
     * 							Allowed characters are uppercase and lowercase standard Latin letters (A-Z and a-z), Simplified Chinese, decimal digits (0-9), dots (.), hyphens (-), and underscores (_).
     */
    prismElementStorageContainerName: string;
    /**
     * User name for the Prism element cluster.
     * 							You can obtain the credentials by contacting your Prism Element cluster administrator if you don't have them already.
     */
    prismElementUsername: string;
}

