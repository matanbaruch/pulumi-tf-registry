// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceclass(args?: GetServiceclassArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceclassResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nutanixkps:index/getServiceclass:getServiceclass", {
        "description": args.description,
        "id": args.id,
        "minServiceDomainVersion": args.minServiceDomainVersion,
        "name": args.name,
        "serviceClassId": args.serviceClassId,
        "serviceClassName": args.serviceClassName,
        "serviceVersion": args.serviceVersion,
        "state": args.state,
        "tags": args.tags,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceclass.
 */
export interface GetServiceclassArgs {
    description?: string;
    id?: string;
    minServiceDomainVersion?: string;
    name?: string;
    serviceClassId?: string;
    serviceClassName?: string;
    serviceVersion?: string;
    state?: string;
    tags?: inputs.GetServiceclassTag[];
    type?: string;
}

/**
 * A collection of values returned by getServiceclass.
 */
export interface GetServiceclassResult {
    readonly description: string;
    readonly id: string;
    readonly minServiceDomainVersion: string;
    readonly name: string;
    readonly serviceClassId?: string;
    readonly serviceClassName?: string;
    readonly serviceVersion: string;
    readonly state: string;
    readonly tags?: outputs.GetServiceclassTag[];
    readonly type: string;
}
export function getServiceclassOutput(args?: GetServiceclassOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceclassResult> {
    return pulumi.output(args).apply((a: any) => getServiceclass(a, opts))
}

/**
 * A collection of arguments for invoking getServiceclass.
 */
export interface GetServiceclassOutputArgs {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    minServiceDomainVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serviceClassId?: pulumi.Input<string>;
    serviceClassName?: pulumi.Input<string>;
    serviceVersion?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetServiceclassTagArgs>[]>;
    type?: pulumi.Input<string>;
}
