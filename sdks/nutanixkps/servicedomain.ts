// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Servicedomain extends pulumi.CustomResource {
    /**
     * Get an existing Servicedomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicedomainState, opts?: pulumi.CustomResourceOptions): Servicedomain {
        return new Servicedomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nutanixkps:index/servicedomain:Servicedomain';

    /**
     * Returns true if the given object is an instance of Servicedomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Servicedomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Servicedomain.__pulumiType;
    }

    /**
     * Describe the service domain. For example, the main purpose or use case of the service domain.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Last updated timestamp, auto-computed. No input required for this field.
     */
    public readonly lastUpdated!: pulumi.Output<string>;
    /**
     * Name of the service domain: Name must include lowercase alphanumeric characters and must start and end with an lowercase
     * alphanumeric character. Dash (-) and dot (.) characters are allowed as delimiters. Maximum length of 60 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Virtual IPv4 address for this Service Domain
     */
    public readonly virtualIp!: pulumi.Output<string | undefined>;

    /**
     * Create a Servicedomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicedomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicedomainArgs | ServicedomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicedomainState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["virtualIp"] = state ? state.virtualIp : undefined;
        } else {
            const args = argsOrState as ServicedomainArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["virtualIp"] = args ? args.virtualIp : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Servicedomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Servicedomain resources.
 */
export interface ServicedomainState {
    /**
     * Describe the service domain. For example, the main purpose or use case of the service domain.
     */
    description?: pulumi.Input<string>;
    /**
     * Last updated timestamp, auto-computed. No input required for this field.
     */
    lastUpdated?: pulumi.Input<string>;
    /**
     * Name of the service domain: Name must include lowercase alphanumeric characters and must start and end with an lowercase
     * alphanumeric character. Dash (-) and dot (.) characters are allowed as delimiters. Maximum length of 60 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Virtual IPv4 address for this Service Domain
     */
    virtualIp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Servicedomain resource.
 */
export interface ServicedomainArgs {
    /**
     * Describe the service domain. For example, the main purpose or use case of the service domain.
     */
    description: pulumi.Input<string>;
    /**
     * Last updated timestamp, auto-computed. No input required for this field.
     */
    lastUpdated?: pulumi.Input<string>;
    /**
     * Name of the service domain: Name must include lowercase alphanumeric characters and must start and end with an lowercase
     * alphanumeric character. Dash (-) and dot (.) characters are allowed as delimiters. Maximum length of 60 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Virtual IPv4 address for this Service Domain
     */
    virtualIp?: pulumi.Input<string>;
}
