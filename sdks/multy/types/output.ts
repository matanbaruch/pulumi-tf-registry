// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DatabaseAws {
    dbInstanceId: string;
    dbSubnetGroupId: string;
    defaultNetworkSecurityGroupId: string;
}

export interface DatabaseAzure {
    databaseServerId: string;
}

export interface DatabaseGcp {
    sqlDatabaseInstanceId: string;
}

export interface DatabaseGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export interface KubernetesClusterAws {
    eksClusterId: string;
    iamRoleArn: string;
}

export interface KubernetesClusterAzure {
    aksClusterId: string;
}

export interface KubernetesClusterDefaultNodePool {
    /**
     * Zones to place nodes in. If not set, they will be spread across multiple zones selected by the cloud provider.
     */
    availabilityZones?: number[];
    /**
     * AWS-specific ids of the underlying generated resources
     */
    aws: outputs.KubernetesClusterDefaultNodePoolAws;
    /**
     * AWS-specific attributes that will be set if this resource is deployed in AWS
     */
    awsOverrides?: outputs.KubernetesClusterDefaultNodePoolAwsOverrides;
    /**
     * Azure-specific ids of the underlying generated resources
     */
    azure: outputs.KubernetesClusterDefaultNodePoolAzure;
    /**
     * Azure-specific attributes that will be set if this resource is deployed in Azure
     */
    azureOverrides?: outputs.KubernetesClusterDefaultNodePoolAzureOverrides;
    /**
     * Id of the multy kubernetes cluster
     */
    clusterId: string;
    /**
     * Disk size used for each node.
     */
    diskSizeGb: number;
    /**
     * GCP-specific ids of the underlying generated resources
     */
    gcp: outputs.KubernetesClusterDefaultNodePoolGcp;
    id: string;
    /**
     * Labels to be applied to each node.
     */
    labels: {[key: string]: string};
    /**
     * Maximum number of nodes.
     */
    maxNodeCount: number;
    /**
     * Minimum number of nodes.
     */
    minNodeCount: number;
    /**
     * Name of kubernetes node pool
     */
    name: string;
    /**
     * Statuses of underlying created resources
     */
    resourceStatus: {[key: string]: string};
    /**
     * Number of initial nodes. Defaults to the minimum number of nodes.
     */
    startingNodeCount: number;
    /**
     * Subnet to place the node and pods in. Must have access to the Internet to connect with the control plane.
     */
    subnetId: string;
    /**
     * Size of Virtual Machine used for the nodes. Accepted values are `general_micro`, `general_medium`, `general_large`, `general_nano`, `general_small`, `general_xlarge`, `general_2xlarge`, `compute_large`, `compute_xlarge`, `compute_2xlarge`, `compute_4xlarge`, `compute_8xlarge`, `memory_large`, `memory_xlarge`, `memory_2xlarge`, `memory_4xlarge`, `memory_8xlarge`, `memory_12xlarge` or `memory_16xlarge`
     */
    vmSize: string;
}

export interface KubernetesClusterDefaultNodePoolAws {
    eksNodePoolId: string;
    iamRoleArn: string;
}

export interface KubernetesClusterDefaultNodePoolAwsOverrides {
    /**
     * The instance type to use for nodes.
     */
    instanceTypes?: string[];
}

export interface KubernetesClusterDefaultNodePoolAzure {
    aksNodePoolId: string;
}

export interface KubernetesClusterDefaultNodePoolAzureOverrides {
    /**
     * The size to use for nodes.
     */
    vmSize?: string;
}

export interface KubernetesClusterDefaultNodePoolGcp {
    gkeNodePoolId: string;
}

export interface KubernetesClusterGcp {
    gkeClusterId: string;
    serviceAccountEmail: string;
}

export interface KubernetesClusterGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export interface KubernetesNodePoolAws {
    eksNodePoolId: string;
    iamRoleArn: string;
}

export interface KubernetesNodePoolAwsOverrides {
    /**
     * The instance type to use for nodes.
     */
    instanceTypes?: string[];
}

export interface KubernetesNodePoolAzure {
    aksNodePoolId: string;
}

export interface KubernetesNodePoolAzureOverrides {
    /**
     * The size to use for nodes.
     */
    vmSize?: string;
}

export interface KubernetesNodePoolGcp {
    gkeNodePoolId: string;
}

export interface NetworkInterfaceAws {
    eipAssociationId: string;
    networkInterfaceId: string;
}

export interface NetworkInterfaceAzure {
    networkInterfaceId: string;
}

export interface NetworkSecurityGroupAws {
    securityGroupId: string;
}

export interface NetworkSecurityGroupAzure {
    networkSecurityGroupId: string;
}

export interface NetworkSecurityGroupGcp {
    computeFirewallIds: string[];
}

export interface NetworkSecurityGroupGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export interface NetworkSecurityGroupRule {
    /**
     * CIDR block of network rule
     */
    cidrBlock: string;
    /**
     * Direction of network rule. Accepted values are `ingress`, `egress` or `both`
     */
    direction: string;
    /**
     * From port of network rule port range. Value must be in between 0 and 65535
     */
    fromPort: number;
    /**
     * Priority of network rule. Value must be in between 0 and 0
     */
    priority: number;
    /**
     * Protocol of network rule. Accepted values are `tcp`, `udp` or `icmp`
     */
    protocol: string;
    /**
     * To port of network rule port range. Value must be in between 0 and 65535
     */
    toPort: number;
}

export interface ObjectStorageAws {
    s3BucketArn: string;
}

export interface ObjectStorageAzure {
    privateStorageContainerId: string;
    publicStorageContainerId: string;
    storageAccountId: string;
}

export interface ObjectStorageGcp {
    storageBucketId: string;
}

export interface ObjectStorageGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export interface ObjectStorageObjectAws {
    s3BucketObjectId: string;
}

export interface ObjectStorageObjectAzure {
    storageBlobId: string;
}

export interface ObjectStorageObjectGcp {
    storageBucketObjectId: string;
    storageObjectAccessControl: string;
}

export interface PublicIpAws {
    publicIpId: string;
}

export interface PublicIpAzure {
    publicIpId: string;
}

export interface PublicIpGcp {
    computeAddressId: string;
}

export interface PublicIpGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export interface RouteTableAssociationAws {
    routeTableAssociationIdByAvailabilityZone: {[key: string]: string};
}

export interface RouteTableAws {
    routeTableId: string;
}

export interface RouteTableAzure {
    routeTableId: string;
}

export interface RouteTableGcp {
    computeRouteIds: string[];
}

export interface RouteTableRoute {
    /**
     * CIDR block of network rule
     */
    cidrBlock: string;
    /**
     * Destination of route. Accepted values are `internet`
     */
    destination: string;
}

export interface SubnetAws {
    subnetIdByAvailabilityZone: {[key: string]: string};
}

export interface SubnetAzure {
    subnetId: string;
}

export interface SubnetGcp {
    computeSubnetworkId: string;
}

export interface VaultAccessPolicyAws {
    iamPolicyArn: string;
}

export interface VaultAccessPolicyAzure {
    keyVaultAccessPolicyId: string;
}

export interface VaultAccessPolicyGcp {
    secretManagerSecretIamMembershipIds: string[];
}

export interface VaultAzure {
    keyVaultId: string;
}

export interface VaultGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export interface VaultSecretAws {
    ssmParameterArn: string;
}

export interface VaultSecretAzure {
    keyVaultSecretId: string;
}

export interface VaultSecretGcp {
    secretManagerSecretId: string;
    secretManagerSecretVersionId: string;
}

export interface VirtualMachineAwsOverrides {
    /**
     * The instance type to use for the instance.
     */
    instanceType?: string;
}

export interface VirtualMachineAzureOverrides {
    /**
     * The size to use for the instance.
     */
    size?: string;
}

export interface VirtualMachineGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export interface VirtualMachineImageReference {
    /**
     * Operating System of Virtual Machine. Accepted values are `ubuntu`, `debian` or `cent_os`
     */
    os: string;
    /**
     * OS Version
     */
    version: string;
}

export interface VirtualNetworkAws {
    defaultSecurityGroupId: string;
    internetGatewayId: string;
    vpcId: string;
}

export interface VirtualNetworkAzure {
    localRouteTableId: string;
    virtualNetworkId: string;
}

export interface VirtualNetworkGcp {
    computeNetworkId: string;
    defaultComputeFirewallId: string;
}

export interface VirtualNetworkGcpOverrides {
    /**
     * The project to use for this resource.
     */
    project: string;
}

export namespace config {
    export interface Aws {
        /**
         * AWS Access Key ID. Can be provided via the `AWS_ACCESS_KEY_ID` environment variable
         */
        accessKeyId?: string;
        /**
         * AWS Secret Access Key. Can be provided via the `AWS_SECRET_ACCESS_KEY` environment variable
         */
        accessKeySecret?: string;
        /**
         * Optional AWS session token. Used to authenticate  Can be provided via the `AWS_SESSION_TOKEN` environment variable
         */
        sessionToken?: string;
    }

    export interface Azure {
        /**
         * Azure Client ID Can be provided via the `ARM_CLIENT_ID` environment variable
         */
        clientId?: string;
        /**
         * Azure Client Secret Can be provided via the `ARM_CLIENT_SECRET` environment variable
         */
        clientSecret?: string;
        /**
         * Azure Subscription ID. Can be provided via the `ARM_SUBSCRIPTION_ID` environment variable
         */
        subscriptionId?: string;
        /**
         * Azure Tenant ID Can be provided via the `ARM_TENANT_ID` environment variable
         */
        tenantId?: string;
    }

    export interface Gcp {
        /**
         * Either the path to or the contents of a service account key file in JSON format. Can be provided via the `GOOGLE_APPLICATION_CREDENTIALS` environment variable
         */
        credentials?: string;
        /**
         * The project to manage resources in. Can be provided via the `GOOGLE_CREDENTIALS` environment variable
         */
        project?: string;
    }

}
