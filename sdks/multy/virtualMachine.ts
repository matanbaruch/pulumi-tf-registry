// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualMachineState, opts?: pulumi.CustomResourceOptions): VirtualMachine {
        return new VirtualMachine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'multy:index/virtualMachine:VirtualMachine';

    /**
     * Returns true if the given object is an instance of VirtualMachine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualMachine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachine.__pulumiType;
    }

    /**
     * Availability zone where this machine should be placed
     */
    public readonly availabilityZone!: pulumi.Output<number>;
    /**
     * AWS-specific attributes that will be set if this resource is deployed in AWS
     */
    public readonly awsOverrides!: pulumi.Output<outputs.VirtualMachineAwsOverrides | undefined>;
    /**
     * Azure-specific attributes that will be set if this resource is deployed in Azure
     */
    public readonly azureOverrides!: pulumi.Output<outputs.VirtualMachineAzureOverrides | undefined>;
    /**
     * Cloud provider to deploy resource into. Accepted values are `aws`, `azure` or `gcp`
     */
    public readonly cloud!: pulumi.Output<string>;
    /**
     * GCP-specific attributes that will be set if this resource is deployed in GCP
     */
    public readonly gcpOverrides!: pulumi.Output<outputs.VirtualMachineGcpOverrides>;
    /**
     * If true, a public IP will be automatically generated. Cannot be used with `public_ip_id`
     */
    public readonly generatePublicIp!: pulumi.Output<boolean>;
    /**
     * Identity of Virtual Machine
     */
    public /*out*/ readonly identity!: pulumi.Output<string>;
    /**
     * Virtual Machine image definition
     */
    public readonly imageReference!: pulumi.Output<outputs.VirtualMachineImageReference>;
    /**
     * Location to deploy resource into. Read more about regions in [documentation](https://docs.multy.dev/regions)
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Name of Virtual Machine
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * IDs of `network_interface` resource
     */
    public readonly networkInterfaceIds!: pulumi.Output<string[] | undefined>;
    /**
     * IDs of `network_security_group` resource
     */
    public readonly networkSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Public IP of Virtual Machine
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * ID of `public_ip` resource. Cannot be used with `generate_public_ip`
     */
    public readonly publicIpId!: pulumi.Output<string | undefined>;
    /**
     * Public SSH Key of Virtual Machine
     */
    public readonly publicSshKey!: pulumi.Output<string | undefined>;
    public /*out*/ readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Statuses of underlying created resources
     */
    public /*out*/ readonly resourceStatus!: pulumi.Output<{[key: string]: string}>;
    /**
     * Size of Virtual Machine. Accepted values are `general_micro`, `general_medium`, `general_large`, `general_nano`,
     * `general_small`, `general_xlarge`, `general_2xlarge`, `compute_large`, `compute_xlarge`, `compute_2xlarge`,
     * `compute_4xlarge`, `compute_8xlarge`, `memory_large`, `memory_xlarge`, `memory_2xlarge`, `memory_4xlarge`,
     * `memory_8xlarge`, `memory_12xlarge` or `memory_16xlarge`
     */
    public readonly size!: pulumi.Output<string>;
    /**
     * ID of `subnet` resource
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * User Data script of Virtual Machine that will run on instance launch
     */
    public readonly userDataBase64!: pulumi.Output<string | undefined>;

    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualMachineArgs | VirtualMachineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualMachineState | undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["awsOverrides"] = state ? state.awsOverrides : undefined;
            resourceInputs["azureOverrides"] = state ? state.azureOverrides : undefined;
            resourceInputs["cloud"] = state ? state.cloud : undefined;
            resourceInputs["gcpOverrides"] = state ? state.gcpOverrides : undefined;
            resourceInputs["generatePublicIp"] = state ? state.generatePublicIp : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["imageReference"] = state ? state.imageReference : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInterfaceIds"] = state ? state.networkInterfaceIds : undefined;
            resourceInputs["networkSecurityGroupIds"] = state ? state.networkSecurityGroupIds : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["publicIpId"] = state ? state.publicIpId : undefined;
            resourceInputs["publicSshKey"] = state ? state.publicSshKey : undefined;
            resourceInputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            resourceInputs["resourceStatus"] = state ? state.resourceStatus : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["userDataBase64"] = state ? state.userDataBase64 : undefined;
        } else {
            const args = argsOrState as VirtualMachineArgs | undefined;
            if ((!args || args.cloud === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloud'");
            }
            if ((!args || args.imageReference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageReference'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["awsOverrides"] = args ? args.awsOverrides : undefined;
            resourceInputs["azureOverrides"] = args ? args.azureOverrides : undefined;
            resourceInputs["cloud"] = args ? args.cloud : undefined;
            resourceInputs["gcpOverrides"] = args ? args.gcpOverrides : undefined;
            resourceInputs["generatePublicIp"] = args ? args.generatePublicIp : undefined;
            resourceInputs["imageReference"] = args ? args.imageReference : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkInterfaceIds"] = args ? args.networkInterfaceIds : undefined;
            resourceInputs["networkSecurityGroupIds"] = args ? args.networkSecurityGroupIds : undefined;
            resourceInputs["publicIpId"] = args ? args.publicIpId : undefined;
            resourceInputs["publicSshKey"] = args ? args.publicSshKey : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["userDataBase64"] = args ? args.userDataBase64 : undefined;
            resourceInputs["identity"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["resourceGroupId"] = undefined /*out*/;
            resourceInputs["resourceStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualMachine.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VirtualMachine resources.
 */
export interface VirtualMachineState {
    /**
     * Availability zone where this machine should be placed
     */
    availabilityZone?: pulumi.Input<number>;
    /**
     * AWS-specific attributes that will be set if this resource is deployed in AWS
     */
    awsOverrides?: pulumi.Input<inputs.VirtualMachineAwsOverrides>;
    /**
     * Azure-specific attributes that will be set if this resource is deployed in Azure
     */
    azureOverrides?: pulumi.Input<inputs.VirtualMachineAzureOverrides>;
    /**
     * Cloud provider to deploy resource into. Accepted values are `aws`, `azure` or `gcp`
     */
    cloud?: pulumi.Input<string>;
    /**
     * GCP-specific attributes that will be set if this resource is deployed in GCP
     */
    gcpOverrides?: pulumi.Input<inputs.VirtualMachineGcpOverrides>;
    /**
     * If true, a public IP will be automatically generated. Cannot be used with `public_ip_id`
     */
    generatePublicIp?: pulumi.Input<boolean>;
    /**
     * Identity of Virtual Machine
     */
    identity?: pulumi.Input<string>;
    /**
     * Virtual Machine image definition
     */
    imageReference?: pulumi.Input<inputs.VirtualMachineImageReference>;
    /**
     * Location to deploy resource into. Read more about regions in [documentation](https://docs.multy.dev/regions)
     */
    location?: pulumi.Input<string>;
    /**
     * Name of Virtual Machine
     */
    name?: pulumi.Input<string>;
    /**
     * IDs of `network_interface` resource
     */
    networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IDs of `network_security_group` resource
     */
    networkSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Public IP of Virtual Machine
     */
    publicIp?: pulumi.Input<string>;
    /**
     * ID of `public_ip` resource. Cannot be used with `generate_public_ip`
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * Public SSH Key of Virtual Machine
     */
    publicSshKey?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    /**
     * Statuses of underlying created resources
     */
    resourceStatus?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Size of Virtual Machine. Accepted values are `general_micro`, `general_medium`, `general_large`, `general_nano`,
     * `general_small`, `general_xlarge`, `general_2xlarge`, `compute_large`, `compute_xlarge`, `compute_2xlarge`,
     * `compute_4xlarge`, `compute_8xlarge`, `memory_large`, `memory_xlarge`, `memory_2xlarge`, `memory_4xlarge`,
     * `memory_8xlarge`, `memory_12xlarge` or `memory_16xlarge`
     */
    size?: pulumi.Input<string>;
    /**
     * ID of `subnet` resource
     */
    subnetId?: pulumi.Input<string>;
    /**
     * User Data script of Virtual Machine that will run on instance launch
     */
    userDataBase64?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualMachine resource.
 */
export interface VirtualMachineArgs {
    /**
     * Availability zone where this machine should be placed
     */
    availabilityZone?: pulumi.Input<number>;
    /**
     * AWS-specific attributes that will be set if this resource is deployed in AWS
     */
    awsOverrides?: pulumi.Input<inputs.VirtualMachineAwsOverrides>;
    /**
     * Azure-specific attributes that will be set if this resource is deployed in Azure
     */
    azureOverrides?: pulumi.Input<inputs.VirtualMachineAzureOverrides>;
    /**
     * Cloud provider to deploy resource into. Accepted values are `aws`, `azure` or `gcp`
     */
    cloud: pulumi.Input<string>;
    /**
     * GCP-specific attributes that will be set if this resource is deployed in GCP
     */
    gcpOverrides?: pulumi.Input<inputs.VirtualMachineGcpOverrides>;
    /**
     * If true, a public IP will be automatically generated. Cannot be used with `public_ip_id`
     */
    generatePublicIp?: pulumi.Input<boolean>;
    /**
     * Virtual Machine image definition
     */
    imageReference: pulumi.Input<inputs.VirtualMachineImageReference>;
    /**
     * Location to deploy resource into. Read more about regions in [documentation](https://docs.multy.dev/regions)
     */
    location: pulumi.Input<string>;
    /**
     * Name of Virtual Machine
     */
    name?: pulumi.Input<string>;
    /**
     * IDs of `network_interface` resource
     */
    networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IDs of `network_security_group` resource
     */
    networkSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of `public_ip` resource. Cannot be used with `generate_public_ip`
     */
    publicIpId?: pulumi.Input<string>;
    /**
     * Public SSH Key of Virtual Machine
     */
    publicSshKey?: pulumi.Input<string>;
    /**
     * Size of Virtual Machine. Accepted values are `general_micro`, `general_medium`, `general_large`, `general_nano`,
     * `general_small`, `general_xlarge`, `general_2xlarge`, `compute_large`, `compute_xlarge`, `compute_2xlarge`,
     * `compute_4xlarge`, `compute_8xlarge`, `memory_large`, `memory_xlarge`, `memory_2xlarge`, `memory_4xlarge`,
     * `memory_8xlarge`, `memory_12xlarge` or `memory_16xlarge`
     */
    size: pulumi.Input<string>;
    /**
     * ID of `subnet` resource
     */
    subnetId: pulumi.Input<string>;
    /**
     * User Data script of Virtual Machine that will run on instance launch
     */
    userDataBase64?: pulumi.Input<string>;
}
