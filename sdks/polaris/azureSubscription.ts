// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AzureSubscription extends pulumi.CustomResource {
    /**
     * Get an existing AzureSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureSubscriptionState, opts?: pulumi.CustomResourceOptions): AzureSubscription {
        return new AzureSubscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/azureSubscription:AzureSubscription';

    /**
     * Returns true if the given object is an instance of AzureSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureSubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureSubscription.__pulumiType;
    }

    /**
     * Enable the RSC Cloud Native Archival feature for the Azure subscription.
     */
    public readonly cloudNativeArchival!: pulumi.Output<outputs.AzureSubscriptionCloudNativeArchival | undefined>;
    /**
     * Enable the RSC Cloud Native Archival Encryption feature for the Azure subscription.
     */
    public readonly cloudNativeArchivalEncryption!: pulumi.Output<outputs.AzureSubscriptionCloudNativeArchivalEncryption | undefined>;
    /**
     * Enable the RSC Cloud Native Protection feature for the Azure subscription.
     */
    public readonly cloudNativeProtection!: pulumi.Output<outputs.AzureSubscriptionCloudNativeProtection | undefined>;
    /**
     * Should snapshots be deleted when the resource is destroyed. Default value is `false`.
     */
    public readonly deleteSnapshotsOnDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * Enable the RSC Exocompute feature for the Azure subscription.
     */
    public readonly exocompute!: pulumi.Output<outputs.AzureSubscriptionExocompute | undefined>;
    /**
     * Enable the RSC SQL DB Protection feature for the Azure subscription.
     */
    public readonly sqlDbProtection!: pulumi.Output<outputs.AzureSubscriptionSqlDbProtection | undefined>;
    /**
     * Enable the RSC SQL MI Protection feature for the Azure subscription.
     */
    public readonly sqlMiProtection!: pulumi.Output<outputs.AzureSubscriptionSqlMiProtection | undefined>;
    /**
     * Azure subscription ID. Changing this forces a new resource to be created.
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * Azure subscription name.
     */
    public readonly subscriptionName!: pulumi.Output<string | undefined>;
    /**
     * Azure tenant primary domain. Changing this forces a new resource to be created.
     */
    public readonly tenantDomain!: pulumi.Output<string>;

    /**
     * Create a AzureSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureSubscriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureSubscriptionArgs | AzureSubscriptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureSubscriptionState | undefined;
            resourceInputs["cloudNativeArchival"] = state ? state.cloudNativeArchival : undefined;
            resourceInputs["cloudNativeArchivalEncryption"] = state ? state.cloudNativeArchivalEncryption : undefined;
            resourceInputs["cloudNativeProtection"] = state ? state.cloudNativeProtection : undefined;
            resourceInputs["deleteSnapshotsOnDestroy"] = state ? state.deleteSnapshotsOnDestroy : undefined;
            resourceInputs["exocompute"] = state ? state.exocompute : undefined;
            resourceInputs["sqlDbProtection"] = state ? state.sqlDbProtection : undefined;
            resourceInputs["sqlMiProtection"] = state ? state.sqlMiProtection : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["subscriptionName"] = state ? state.subscriptionName : undefined;
            resourceInputs["tenantDomain"] = state ? state.tenantDomain : undefined;
        } else {
            const args = argsOrState as AzureSubscriptionArgs | undefined;
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tenantDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantDomain'");
            }
            resourceInputs["cloudNativeArchival"] = args ? args.cloudNativeArchival : undefined;
            resourceInputs["cloudNativeArchivalEncryption"] = args ? args.cloudNativeArchivalEncryption : undefined;
            resourceInputs["cloudNativeProtection"] = args ? args.cloudNativeProtection : undefined;
            resourceInputs["deleteSnapshotsOnDestroy"] = args ? args.deleteSnapshotsOnDestroy : undefined;
            resourceInputs["exocompute"] = args ? args.exocompute : undefined;
            resourceInputs["sqlDbProtection"] = args ? args.sqlDbProtection : undefined;
            resourceInputs["sqlMiProtection"] = args ? args.sqlMiProtection : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["subscriptionName"] = args ? args.subscriptionName : undefined;
            resourceInputs["tenantDomain"] = args ? args.tenantDomain : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureSubscription.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AzureSubscription resources.
 */
export interface AzureSubscriptionState {
    /**
     * Enable the RSC Cloud Native Archival feature for the Azure subscription.
     */
    cloudNativeArchival?: pulumi.Input<inputs.AzureSubscriptionCloudNativeArchival>;
    /**
     * Enable the RSC Cloud Native Archival Encryption feature for the Azure subscription.
     */
    cloudNativeArchivalEncryption?: pulumi.Input<inputs.AzureSubscriptionCloudNativeArchivalEncryption>;
    /**
     * Enable the RSC Cloud Native Protection feature for the Azure subscription.
     */
    cloudNativeProtection?: pulumi.Input<inputs.AzureSubscriptionCloudNativeProtection>;
    /**
     * Should snapshots be deleted when the resource is destroyed. Default value is `false`.
     */
    deleteSnapshotsOnDestroy?: pulumi.Input<boolean>;
    /**
     * Enable the RSC Exocompute feature for the Azure subscription.
     */
    exocompute?: pulumi.Input<inputs.AzureSubscriptionExocompute>;
    /**
     * Enable the RSC SQL DB Protection feature for the Azure subscription.
     */
    sqlDbProtection?: pulumi.Input<inputs.AzureSubscriptionSqlDbProtection>;
    /**
     * Enable the RSC SQL MI Protection feature for the Azure subscription.
     */
    sqlMiProtection?: pulumi.Input<inputs.AzureSubscriptionSqlMiProtection>;
    /**
     * Azure subscription ID. Changing this forces a new resource to be created.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Azure subscription name.
     */
    subscriptionName?: pulumi.Input<string>;
    /**
     * Azure tenant primary domain. Changing this forces a new resource to be created.
     */
    tenantDomain?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureSubscription resource.
 */
export interface AzureSubscriptionArgs {
    /**
     * Enable the RSC Cloud Native Archival feature for the Azure subscription.
     */
    cloudNativeArchival?: pulumi.Input<inputs.AzureSubscriptionCloudNativeArchival>;
    /**
     * Enable the RSC Cloud Native Archival Encryption feature for the Azure subscription.
     */
    cloudNativeArchivalEncryption?: pulumi.Input<inputs.AzureSubscriptionCloudNativeArchivalEncryption>;
    /**
     * Enable the RSC Cloud Native Protection feature for the Azure subscription.
     */
    cloudNativeProtection?: pulumi.Input<inputs.AzureSubscriptionCloudNativeProtection>;
    /**
     * Should snapshots be deleted when the resource is destroyed. Default value is `false`.
     */
    deleteSnapshotsOnDestroy?: pulumi.Input<boolean>;
    /**
     * Enable the RSC Exocompute feature for the Azure subscription.
     */
    exocompute?: pulumi.Input<inputs.AzureSubscriptionExocompute>;
    /**
     * Enable the RSC SQL DB Protection feature for the Azure subscription.
     */
    sqlDbProtection?: pulumi.Input<inputs.AzureSubscriptionSqlDbProtection>;
    /**
     * Enable the RSC SQL MI Protection feature for the Azure subscription.
     */
    sqlMiProtection?: pulumi.Input<inputs.AzureSubscriptionSqlMiProtection>;
    /**
     * Azure subscription ID. Changing this forces a new resource to be created.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * Azure subscription name.
     */
    subscriptionName?: pulumi.Input<string>;
    /**
     * Azure tenant primary domain. Changing this forces a new resource to be created.
     */
    tenantDomain: pulumi.Input<string>;
}
