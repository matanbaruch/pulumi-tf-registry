// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AwsAccount extends pulumi.CustomResource {
    /**
     * Get an existing AwsAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsAccountState, opts?: pulumi.CustomResourceOptions): AwsAccount {
        return new AwsAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/awsAccount:AwsAccount';

    /**
     * Returns true if the given object is an instance of AwsAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsAccount.__pulumiType;
    }

    /**
     * Role ARN of role to assume.
     */
    public readonly assumeRole!: pulumi.Output<string | undefined>;
    /**
     * Enable the Cloud Native Protection feature for the AWS account.
     */
    public readonly cloudNativeProtection!: pulumi.Output<outputs.AwsAccountCloudNativeProtection>;
    /**
     * Should snapshots be deleted when the resource is destroyed.
     */
    public readonly deleteSnapshotsOnDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * Enable the Exocompute feature for the account.
     */
    public readonly exocompute!: pulumi.Output<outputs.AwsAccountExocompute | undefined>;
    /**
     * Account name in Polaris. If not given the name is taken from AWS Organizations or, if the required permissions are
     * missing, is derived from the AWS account ID and the named profile.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * When set to 'update' feature permissions can be updated by applying the configuration.
     */
    public readonly permissions!: pulumi.Output<string>;
    /**
     * AWS named profile.
     */
    public readonly profile!: pulumi.Output<string | undefined>;

    /**
     * Create a AwsAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsAccountArgs | AwsAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsAccountState | undefined;
            resourceInputs["assumeRole"] = state ? state.assumeRole : undefined;
            resourceInputs["cloudNativeProtection"] = state ? state.cloudNativeProtection : undefined;
            resourceInputs["deleteSnapshotsOnDestroy"] = state ? state.deleteSnapshotsOnDestroy : undefined;
            resourceInputs["exocompute"] = state ? state.exocompute : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
        } else {
            const args = argsOrState as AwsAccountArgs | undefined;
            if ((!args || args.cloudNativeProtection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudNativeProtection'");
            }
            resourceInputs["assumeRole"] = args ? args.assumeRole : undefined;
            resourceInputs["cloudNativeProtection"] = args ? args.cloudNativeProtection : undefined;
            resourceInputs["deleteSnapshotsOnDestroy"] = args ? args.deleteSnapshotsOnDestroy : undefined;
            resourceInputs["exocompute"] = args ? args.exocompute : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsAccount resources.
 */
export interface AwsAccountState {
    /**
     * Role ARN of role to assume.
     */
    assumeRole?: pulumi.Input<string>;
    /**
     * Enable the Cloud Native Protection feature for the AWS account.
     */
    cloudNativeProtection?: pulumi.Input<inputs.AwsAccountCloudNativeProtection>;
    /**
     * Should snapshots be deleted when the resource is destroyed.
     */
    deleteSnapshotsOnDestroy?: pulumi.Input<boolean>;
    /**
     * Enable the Exocompute feature for the account.
     */
    exocompute?: pulumi.Input<inputs.AwsAccountExocompute>;
    /**
     * Account name in Polaris. If not given the name is taken from AWS Organizations or, if the required permissions are
     * missing, is derived from the AWS account ID and the named profile.
     */
    name?: pulumi.Input<string>;
    /**
     * When set to 'update' feature permissions can be updated by applying the configuration.
     */
    permissions?: pulumi.Input<string>;
    /**
     * AWS named profile.
     */
    profile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsAccount resource.
 */
export interface AwsAccountArgs {
    /**
     * Role ARN of role to assume.
     */
    assumeRole?: pulumi.Input<string>;
    /**
     * Enable the Cloud Native Protection feature for the AWS account.
     */
    cloudNativeProtection: pulumi.Input<inputs.AwsAccountCloudNativeProtection>;
    /**
     * Should snapshots be deleted when the resource is destroyed.
     */
    deleteSnapshotsOnDestroy?: pulumi.Input<boolean>;
    /**
     * Enable the Exocompute feature for the account.
     */
    exocompute?: pulumi.Input<inputs.AwsAccountExocompute>;
    /**
     * Account name in Polaris. If not given the name is taken from AWS Organizations or, if the required permissions are
     * missing, is derived from the AWS account ID and the named profile.
     */
    name?: pulumi.Input<string>;
    /**
     * When set to 'update' feature permissions can be updated by applying the configuration.
     */
    permissions?: pulumi.Input<string>;
    /**
     * AWS named profile.
     */
    profile?: pulumi.Input<string>;
}
