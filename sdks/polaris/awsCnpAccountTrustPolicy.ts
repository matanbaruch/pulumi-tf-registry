// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsCnpAccountTrustPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AwsCnpAccountTrustPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsCnpAccountTrustPolicyState, opts?: pulumi.CustomResourceOptions): AwsCnpAccountTrustPolicy {
        return new AwsCnpAccountTrustPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/awsCnpAccountTrustPolicy:AwsCnpAccountTrustPolicy';

    /**
     * Returns true if the given object is an instance of AwsCnpAccountTrustPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsCnpAccountTrustPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsCnpAccountTrustPolicy.__pulumiType;
    }

    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * External ID. Changing this forces a new resource to be created.
     */
    public readonly externalId!: pulumi.Output<string | undefined>;
    /**
     * RSC features. Possible values are `CLOUD_NATIVE_ARCHIVAL`, `CLOUD_NATIVE_PROTECTION`, `CLOUD_NATIVE_S3_PROTECTION`,
     * `EXOCOMPUTE` and `RDS_PROTECTION`. Changing this forces a new resource to be created.
     */
    public readonly features!: pulumi.Output<string[]>;
    /**
     * AWS IAM trust policy.
     */
    public /*out*/ readonly policy!: pulumi.Output<string>;
    /**
     * RSC artifact key for the AWS role.
     */
    public readonly roleKey!: pulumi.Output<string>;

    /**
     * Create a AwsCnpAccountTrustPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsCnpAccountTrustPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsCnpAccountTrustPolicyArgs | AwsCnpAccountTrustPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsCnpAccountTrustPolicyState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["features"] = state ? state.features : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["roleKey"] = state ? state.roleKey : undefined;
        } else {
            const args = argsOrState as AwsCnpAccountTrustPolicyArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.features === undefined) && !opts.urn) {
                throw new Error("Missing required property 'features'");
            }
            if ((!args || args.roleKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleKey'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["features"] = args ? args.features : undefined;
            resourceInputs["roleKey"] = args ? args.roleKey : undefined;
            resourceInputs["policy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsCnpAccountTrustPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsCnpAccountTrustPolicy resources.
 */
export interface AwsCnpAccountTrustPolicyState {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId?: pulumi.Input<string>;
    /**
     * External ID. Changing this forces a new resource to be created.
     */
    externalId?: pulumi.Input<string>;
    /**
     * RSC features. Possible values are `CLOUD_NATIVE_ARCHIVAL`, `CLOUD_NATIVE_PROTECTION`, `CLOUD_NATIVE_S3_PROTECTION`,
     * `EXOCOMPUTE` and `RDS_PROTECTION`. Changing this forces a new resource to be created.
     */
    features?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS IAM trust policy.
     */
    policy?: pulumi.Input<string>;
    /**
     * RSC artifact key for the AWS role.
     */
    roleKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsCnpAccountTrustPolicy resource.
 */
export interface AwsCnpAccountTrustPolicyArgs {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId: pulumi.Input<string>;
    /**
     * External ID. Changing this forces a new resource to be created.
     */
    externalId?: pulumi.Input<string>;
    /**
     * RSC features. Possible values are `CLOUD_NATIVE_ARCHIVAL`, `CLOUD_NATIVE_PROTECTION`, `CLOUD_NATIVE_S3_PROTECTION`,
     * `EXOCOMPUTE` and `RDS_PROTECTION`. Changing this forces a new resource to be created.
     */
    features: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * RSC artifact key for the AWS role.
     */
    roleKey: pulumi.Input<string>;
}
