// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsExocompute extends pulumi.CustomResource {
    /**
     * Get an existing AwsExocompute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsExocomputeState, opts?: pulumi.CustomResourceOptions): AwsExocompute {
        return new AwsExocompute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/awsExocompute:AwsExocompute';

    /**
     * Returns true if the given object is an instance of AwsExocompute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsExocompute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsExocompute.__pulumiType;
    }

    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * AWS security group ID for the cluster. Changing this forces a new resource to be created.
     */
    public readonly clusterSecurityGroupId!: pulumi.Output<string>;
    /**
     * Exocompute host cloud account ID. Changing this forces a new resource to be created.
     */
    public readonly hostAccountId!: pulumi.Output<string | undefined>;
    /**
     * AWS security group ID for the nodes. Changing this forces a new resource to be created.
     */
    public readonly nodeSecurityGroupId!: pulumi.Output<string>;
    /**
     * If true the security groups are managed by RSC.
     */
    public /*out*/ readonly polarisManaged!: pulumi.Output<boolean>;
    /**
     * AWS region to run the Exocompute instance in. Changing this forces a new resource to be created.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * AWS subnet IDs for the cluster subnets. Changing this forces a new resource to be created.
     */
    public readonly subnets!: pulumi.Output<string[] | undefined>;
    /**
     * AWS VPC ID for the cluster network. Changing this forces a new resource to be created.
     */
    public readonly vpcId!: pulumi.Output<string | undefined>;

    /**
     * Create a AwsExocompute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsExocomputeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsExocomputeArgs | AwsExocomputeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsExocomputeState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["clusterSecurityGroupId"] = state ? state.clusterSecurityGroupId : undefined;
            resourceInputs["hostAccountId"] = state ? state.hostAccountId : undefined;
            resourceInputs["nodeSecurityGroupId"] = state ? state.nodeSecurityGroupId : undefined;
            resourceInputs["polarisManaged"] = state ? state.polarisManaged : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["subnets"] = state ? state.subnets : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AwsExocomputeArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["clusterSecurityGroupId"] = args ? args.clusterSecurityGroupId : undefined;
            resourceInputs["hostAccountId"] = args ? args.hostAccountId : undefined;
            resourceInputs["nodeSecurityGroupId"] = args ? args.nodeSecurityGroupId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["subnets"] = args ? args.subnets : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["polarisManaged"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsExocompute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsExocompute resources.
 */
export interface AwsExocomputeState {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId?: pulumi.Input<string>;
    /**
     * AWS security group ID for the cluster. Changing this forces a new resource to be created.
     */
    clusterSecurityGroupId?: pulumi.Input<string>;
    /**
     * Exocompute host cloud account ID. Changing this forces a new resource to be created.
     */
    hostAccountId?: pulumi.Input<string>;
    /**
     * AWS security group ID for the nodes. Changing this forces a new resource to be created.
     */
    nodeSecurityGroupId?: pulumi.Input<string>;
    /**
     * If true the security groups are managed by RSC.
     */
    polarisManaged?: pulumi.Input<boolean>;
    /**
     * AWS region to run the Exocompute instance in. Changing this forces a new resource to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * AWS subnet IDs for the cluster subnets. Changing this forces a new resource to be created.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS VPC ID for the cluster network. Changing this forces a new resource to be created.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsExocompute resource.
 */
export interface AwsExocomputeArgs {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId: pulumi.Input<string>;
    /**
     * AWS security group ID for the cluster. Changing this forces a new resource to be created.
     */
    clusterSecurityGroupId?: pulumi.Input<string>;
    /**
     * Exocompute host cloud account ID. Changing this forces a new resource to be created.
     */
    hostAccountId?: pulumi.Input<string>;
    /**
     * AWS security group ID for the nodes. Changing this forces a new resource to be created.
     */
    nodeSecurityGroupId?: pulumi.Input<string>;
    /**
     * AWS region to run the Exocompute instance in. Changing this forces a new resource to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * AWS subnet IDs for the cluster subnets. Changing this forces a new resource to be created.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS VPC ID for the cluster network. Changing this forces a new resource to be created.
     */
    vpcId?: pulumi.Input<string>;
}
