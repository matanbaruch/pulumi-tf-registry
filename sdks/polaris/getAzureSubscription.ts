// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAzureSubscription(args?: GetAzureSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureSubscriptionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("polaris:index/getAzureSubscription:getAzureSubscription", {
        "name": args.name,
        "subscriptionId": args.subscriptionId,
        "tenantDomain": args.tenantDomain,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAzureSubscription.
 */
export interface GetAzureSubscriptionArgs {
    name?: string;
    subscriptionId?: string;
    tenantDomain?: string;
}

/**
 * A collection of values returned by getAzureSubscription.
 */
export interface GetAzureSubscriptionResult {
    readonly id: string;
    readonly name?: string;
    readonly subscriptionId?: string;
    readonly tenantDomain?: string;
}
export function getAzureSubscriptionOutput(args?: GetAzureSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzureSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getAzureSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getAzureSubscription.
 */
export interface GetAzureSubscriptionOutputArgs {
    name?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantDomain?: pulumi.Input<string>;
}
