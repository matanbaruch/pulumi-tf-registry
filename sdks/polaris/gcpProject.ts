// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GcpProject extends pulumi.CustomResource {
    /**
     * Get an existing GcpProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpProjectState, opts?: pulumi.CustomResourceOptions): GcpProject {
        return new GcpProject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/gcpProject:GcpProject';

    /**
     * Returns true if the given object is an instance of GcpProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpProject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpProject.__pulumiType;
    }

    /**
     * Enable the Cloud Native Protection feature for the GCP project.
     */
    public readonly cloudNativeProtection!: pulumi.Output<outputs.GcpProjectCloudNativeProtection>;
    /**
     * Path to GCP service account key file.
     */
    public readonly credentials!: pulumi.Output<string | undefined>;
    /**
     * Should snapshots be deleted when the resource is destroyed.
     */
    public readonly deleteSnapshotsOnDestroy!: pulumi.Output<boolean | undefined>;
    /**
     * Organization name.
     */
    public readonly organizationName!: pulumi.Output<string>;
    /**
     * Signals that the permissions has been updated.
     */
    public readonly permissionsHash!: pulumi.Output<string | undefined>;
    /**
     * Project id.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Project name.
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * Project number.
     */
    public readonly projectNumber!: pulumi.Output<string>;

    /**
     * Create a GcpProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpProjectArgs | GcpProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpProjectState | undefined;
            resourceInputs["cloudNativeProtection"] = state ? state.cloudNativeProtection : undefined;
            resourceInputs["credentials"] = state ? state.credentials : undefined;
            resourceInputs["deleteSnapshotsOnDestroy"] = state ? state.deleteSnapshotsOnDestroy : undefined;
            resourceInputs["organizationName"] = state ? state.organizationName : undefined;
            resourceInputs["permissionsHash"] = state ? state.permissionsHash : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["projectNumber"] = state ? state.projectNumber : undefined;
        } else {
            const args = argsOrState as GcpProjectArgs | undefined;
            if ((!args || args.cloudNativeProtection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudNativeProtection'");
            }
            resourceInputs["cloudNativeProtection"] = args ? args.cloudNativeProtection : undefined;
            resourceInputs["credentials"] = args ? args.credentials : undefined;
            resourceInputs["deleteSnapshotsOnDestroy"] = args ? args.deleteSnapshotsOnDestroy : undefined;
            resourceInputs["organizationName"] = args ? args.organizationName : undefined;
            resourceInputs["permissionsHash"] = args ? args.permissionsHash : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["projectNumber"] = args ? args.projectNumber : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpProject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GcpProject resources.
 */
export interface GcpProjectState {
    /**
     * Enable the Cloud Native Protection feature for the GCP project.
     */
    cloudNativeProtection?: pulumi.Input<inputs.GcpProjectCloudNativeProtection>;
    /**
     * Path to GCP service account key file.
     */
    credentials?: pulumi.Input<string>;
    /**
     * Should snapshots be deleted when the resource is destroyed.
     */
    deleteSnapshotsOnDestroy?: pulumi.Input<boolean>;
    /**
     * Organization name.
     */
    organizationName?: pulumi.Input<string>;
    /**
     * Signals that the permissions has been updated.
     */
    permissionsHash?: pulumi.Input<string>;
    /**
     * Project id.
     */
    project?: pulumi.Input<string>;
    /**
     * Project name.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Project number.
     */
    projectNumber?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpProject resource.
 */
export interface GcpProjectArgs {
    /**
     * Enable the Cloud Native Protection feature for the GCP project.
     */
    cloudNativeProtection: pulumi.Input<inputs.GcpProjectCloudNativeProtection>;
    /**
     * Path to GCP service account key file.
     */
    credentials?: pulumi.Input<string>;
    /**
     * Should snapshots be deleted when the resource is destroyed.
     */
    deleteSnapshotsOnDestroy?: pulumi.Input<boolean>;
    /**
     * Organization name.
     */
    organizationName?: pulumi.Input<string>;
    /**
     * Signals that the permissions has been updated.
     */
    permissionsHash?: pulumi.Input<string>;
    /**
     * Project id.
     */
    project?: pulumi.Input<string>;
    /**
     * Project name.
     */
    projectName?: pulumi.Input<string>;
    /**
     * Project number.
     */
    projectNumber?: pulumi.Input<string>;
}
