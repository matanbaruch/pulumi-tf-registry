// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsArchivalLocation extends pulumi.CustomResource {
    /**
     * Get an existing AwsArchivalLocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsArchivalLocationState, opts?: pulumi.CustomResourceOptions): AwsArchivalLocation {
        return new AwsArchivalLocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/awsArchivalLocation:AwsArchivalLocation';

    /**
     * Returns true if the given object is an instance of AwsArchivalLocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsArchivalLocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsArchivalLocation.__pulumiType;
    }

    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * AWS bucket prefix. The prefix cannot be longer than 19 characters. Note that `rubrik-` will always be prepended to the
     * prefix. Changing this forces a new resource to be created.
     */
    public readonly bucketPrefix!: pulumi.Output<string>;
    /**
     * AWS bucket tags. Each tag will be added to the bucket created by RSC.
     */
    public readonly bucketTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Connection status of the cloud native archival location.
     */
    public /*out*/ readonly connectionStatus!: pulumi.Output<string>;
    /**
     * AWS KMS master key alias/ID. Default value is `aws/s3`.
     */
    public readonly kmsMasterKey!: pulumi.Output<string | undefined>;
    /**
     * Location template. If a region was specified, it will be `SPECIFIC_REGION`, otherwise `SOURCE_REGION`.
     */
    public /*out*/ readonly locationTemplate!: pulumi.Output<string>;
    /**
     * Name of the cloud native archival location.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * AWS region to store the snapshots in. If not specified, the snapshots will be stored in the same region as the workload.
     * Changing this forces a new resource to be created.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * AWS bucket storage class. Possible values are `STANDARD`, `STANDARD_IA`, `ONEZONE_IA`, `GLACIER_INSTANT_RETRIEVAL`,
     * `GLACIER_DEEP_ARCHIVE` and `GLACIER_FLEXIBLE_RETRIEVAL`. Default value is `STANDARD_IA`.
     */
    public readonly storageClass!: pulumi.Output<string | undefined>;

    /**
     * Create a AwsArchivalLocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsArchivalLocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsArchivalLocationArgs | AwsArchivalLocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsArchivalLocationState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["bucketPrefix"] = state ? state.bucketPrefix : undefined;
            resourceInputs["bucketTags"] = state ? state.bucketTags : undefined;
            resourceInputs["connectionStatus"] = state ? state.connectionStatus : undefined;
            resourceInputs["kmsMasterKey"] = state ? state.kmsMasterKey : undefined;
            resourceInputs["locationTemplate"] = state ? state.locationTemplate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["storageClass"] = state ? state.storageClass : undefined;
        } else {
            const args = argsOrState as AwsArchivalLocationArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.bucketPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucketPrefix'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["bucketPrefix"] = args ? args.bucketPrefix : undefined;
            resourceInputs["bucketTags"] = args ? args.bucketTags : undefined;
            resourceInputs["kmsMasterKey"] = args?.kmsMasterKey ? pulumi.secret(args.kmsMasterKey) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["storageClass"] = args ? args.storageClass : undefined;
            resourceInputs["connectionStatus"] = undefined /*out*/;
            resourceInputs["locationTemplate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["kmsMasterKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AwsArchivalLocation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsArchivalLocation resources.
 */
export interface AwsArchivalLocationState {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId?: pulumi.Input<string>;
    /**
     * AWS bucket prefix. The prefix cannot be longer than 19 characters. Note that `rubrik-` will always be prepended to the
     * prefix. Changing this forces a new resource to be created.
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * AWS bucket tags. Each tag will be added to the bucket created by RSC.
     */
    bucketTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Connection status of the cloud native archival location.
     */
    connectionStatus?: pulumi.Input<string>;
    /**
     * AWS KMS master key alias/ID. Default value is `aws/s3`.
     */
    kmsMasterKey?: pulumi.Input<string>;
    /**
     * Location template. If a region was specified, it will be `SPECIFIC_REGION`, otherwise `SOURCE_REGION`.
     */
    locationTemplate?: pulumi.Input<string>;
    /**
     * Name of the cloud native archival location.
     */
    name?: pulumi.Input<string>;
    /**
     * AWS region to store the snapshots in. If not specified, the snapshots will be stored in the same region as the workload.
     * Changing this forces a new resource to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * AWS bucket storage class. Possible values are `STANDARD`, `STANDARD_IA`, `ONEZONE_IA`, `GLACIER_INSTANT_RETRIEVAL`,
     * `GLACIER_DEEP_ARCHIVE` and `GLACIER_FLEXIBLE_RETRIEVAL`. Default value is `STANDARD_IA`.
     */
    storageClass?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsArchivalLocation resource.
 */
export interface AwsArchivalLocationArgs {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId: pulumi.Input<string>;
    /**
     * AWS bucket prefix. The prefix cannot be longer than 19 characters. Note that `rubrik-` will always be prepended to the
     * prefix. Changing this forces a new resource to be created.
     */
    bucketPrefix: pulumi.Input<string>;
    /**
     * AWS bucket tags. Each tag will be added to the bucket created by RSC.
     */
    bucketTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * AWS KMS master key alias/ID. Default value is `aws/s3`.
     */
    kmsMasterKey?: pulumi.Input<string>;
    /**
     * Name of the cloud native archival location.
     */
    name?: pulumi.Input<string>;
    /**
     * AWS region to store the snapshots in. If not specified, the snapshots will be stored in the same region as the workload.
     * Changing this forces a new resource to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * AWS bucket storage class. Possible values are `STANDARD`, `STANDARD_IA`, `ONEZONE_IA`, `GLACIER_INSTANT_RETRIEVAL`,
     * `GLACIER_DEEP_ARCHIVE` and `GLACIER_FLEXIBLE_RETRIEVAL`. Default value is `STANDARD_IA`.
     */
    storageClass?: pulumi.Input<string>;
}
