// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AwsCnpAccountAttachments extends pulumi.CustomResource {
    /**
     * Get an existing AwsCnpAccountAttachments resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsCnpAccountAttachmentsState, opts?: pulumi.CustomResourceOptions): AwsCnpAccountAttachments {
        return new AwsCnpAccountAttachments(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/awsCnpAccountAttachments:AwsCnpAccountAttachments';

    /**
     * Returns true if the given object is an instance of AwsCnpAccountAttachments.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsCnpAccountAttachments {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsCnpAccountAttachments.__pulumiType;
    }

    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * RSC features. Possible values are `CLOUD_NATIVE_ARCHIVAL`, `CLOUD_NATIVE_PROTECTION`, `CLOUD_NATIVE_S3_PROTECTION`,
     * `EXOCOMPUTE` and `RDS_PROTECTION`.
     */
    public readonly features!: pulumi.Output<string[]>;
    /**
     * Instance profiles to attach to the cloud account.
     */
    public readonly instanceProfiles!: pulumi.Output<outputs.AwsCnpAccountAttachmentsInstanceProfile[] | undefined>;
    /**
     * Roles to attach to the cloud account.
     */
    public readonly roles!: pulumi.Output<outputs.AwsCnpAccountAttachmentsRole[]>;

    /**
     * Create a AwsCnpAccountAttachments resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsCnpAccountAttachmentsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsCnpAccountAttachmentsArgs | AwsCnpAccountAttachmentsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsCnpAccountAttachmentsState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["features"] = state ? state.features : undefined;
            resourceInputs["instanceProfiles"] = state ? state.instanceProfiles : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
        } else {
            const args = argsOrState as AwsCnpAccountAttachmentsArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.features === undefined) && !opts.urn) {
                throw new Error("Missing required property 'features'");
            }
            if ((!args || args.roles === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roles'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["features"] = args ? args.features : undefined;
            resourceInputs["instanceProfiles"] = args ? args.instanceProfiles : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsCnpAccountAttachments.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsCnpAccountAttachments resources.
 */
export interface AwsCnpAccountAttachmentsState {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId?: pulumi.Input<string>;
    /**
     * RSC features. Possible values are `CLOUD_NATIVE_ARCHIVAL`, `CLOUD_NATIVE_PROTECTION`, `CLOUD_NATIVE_S3_PROTECTION`,
     * `EXOCOMPUTE` and `RDS_PROTECTION`.
     */
    features?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance profiles to attach to the cloud account.
     */
    instanceProfiles?: pulumi.Input<pulumi.Input<inputs.AwsCnpAccountAttachmentsInstanceProfile>[]>;
    /**
     * Roles to attach to the cloud account.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.AwsCnpAccountAttachmentsRole>[]>;
}

/**
 * The set of arguments for constructing a AwsCnpAccountAttachments resource.
 */
export interface AwsCnpAccountAttachmentsArgs {
    /**
     * RSC cloud account ID (UUID). Changing this forces a new resource to be created.
     */
    accountId: pulumi.Input<string>;
    /**
     * RSC features. Possible values are `CLOUD_NATIVE_ARCHIVAL`, `CLOUD_NATIVE_PROTECTION`, `CLOUD_NATIVE_S3_PROTECTION`,
     * `EXOCOMPUTE` and `RDS_PROTECTION`.
     */
    features: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance profiles to attach to the cloud account.
     */
    instanceProfiles?: pulumi.Input<pulumi.Input<inputs.AwsCnpAccountAttachmentsInstanceProfile>[]>;
    /**
     * Roles to attach to the cloud account.
     */
    roles: pulumi.Input<pulumi.Input<inputs.AwsCnpAccountAttachmentsRole>[]>;
}
