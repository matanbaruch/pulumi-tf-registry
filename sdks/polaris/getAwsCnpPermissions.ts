// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAwsCnpPermissions(args: GetAwsCnpPermissionsArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsCnpPermissionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("polaris:index/getAwsCnpPermissions:getAwsCnpPermissions", {
        "cloud": args.cloud,
        "ec2RecoveryRolePath": args.ec2RecoveryRolePath,
        "features": args.features,
        "roleKey": args.roleKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAwsCnpPermissions.
 */
export interface GetAwsCnpPermissionsArgs {
    cloud?: string;
    ec2RecoveryRolePath?: string;
    features: inputs.GetAwsCnpPermissionsFeature[];
    roleKey: string;
}

/**
 * A collection of values returned by getAwsCnpPermissions.
 */
export interface GetAwsCnpPermissionsResult {
    readonly cloud?: string;
    readonly customerManagedPolicies: outputs.GetAwsCnpPermissionsCustomerManagedPolicy[];
    readonly ec2RecoveryRolePath?: string;
    readonly features: outputs.GetAwsCnpPermissionsFeature[];
    readonly id: string;
    readonly managedPolicies: string[];
    readonly roleKey: string;
}
export function getAwsCnpPermissionsOutput(args: GetAwsCnpPermissionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwsCnpPermissionsResult> {
    return pulumi.output(args).apply((a: any) => getAwsCnpPermissions(a, opts))
}

/**
 * A collection of arguments for invoking getAwsCnpPermissions.
 */
export interface GetAwsCnpPermissionsOutputArgs {
    cloud?: pulumi.Input<string>;
    ec2RecoveryRolePath?: pulumi.Input<string>;
    features: pulumi.Input<pulumi.Input<inputs.GetAwsCnpPermissionsFeatureArgs>[]>;
    roleKey: pulumi.Input<string>;
}
