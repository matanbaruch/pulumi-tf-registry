// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AzureExocompute extends pulumi.CustomResource {
    /**
     * Get an existing AzureExocompute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureExocomputeState, opts?: pulumi.CustomResourceOptions): AzureExocompute {
        return new AzureExocompute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'polaris:index/azureExocompute:AzureExocompute';

    /**
     * Returns true if the given object is an instance of AzureExocompute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureExocompute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureExocompute.__pulumiType;
    }

    /**
     * RSC cloud account ID. This is the ID of the `polaris.AzureSubscription` resource for which the Exocompute service runs.
     * Changing this forces a new resource to be created.
     */
    public readonly cloudAccountId!: pulumi.Output<string | undefined>;
    /**
     * RSC cloud account ID of the shared exocompute host account. Changing this forces a new resource to be created.
     */
    public readonly hostCloudAccountId!: pulumi.Output<string | undefined>;
    /**
     * The CIDR range assigned to pods when launching Exocompute with the CNI overlay network plugin mode. Changing this forces
     * a new resource to be created.
     */
    public readonly podOverlayNetworkCidr!: pulumi.Output<string | undefined>;
    /**
     * Azure region to run the exocompute service in. Should be specified in the standard Azure style, e.g. `eastus`. Changing
     * this forces a new resource to be created.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Azure subnet ID of the cluster subnet corresponding to the Exocompute configuration. This subnet will be used to
     * allocate IP addresses to the nodes of the cluster. Changing this forces a new resource to be created.
     */
    public readonly subnet!: pulumi.Output<string | undefined>;
    /**
     * RSC cloud account ID. This is the ID of the `polaris.AzureSubscription` resource for which the Exocompute service runs.
     * Changing this forces a new resource to be created. **Deprecated:** use `cloud_account_id` instead.
     *
     * @deprecated Deprecated
     */
    public readonly subscriptionId!: pulumi.Output<string | undefined>;

    /**
     * Create a AzureExocompute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AzureExocomputeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureExocomputeArgs | AzureExocomputeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureExocomputeState | undefined;
            resourceInputs["cloudAccountId"] = state ? state.cloudAccountId : undefined;
            resourceInputs["hostCloudAccountId"] = state ? state.hostCloudAccountId : undefined;
            resourceInputs["podOverlayNetworkCidr"] = state ? state.podOverlayNetworkCidr : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
        } else {
            const args = argsOrState as AzureExocomputeArgs | undefined;
            resourceInputs["cloudAccountId"] = args ? args.cloudAccountId : undefined;
            resourceInputs["hostCloudAccountId"] = args ? args.hostCloudAccountId : undefined;
            resourceInputs["podOverlayNetworkCidr"] = args ? args.podOverlayNetworkCidr : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureExocompute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AzureExocompute resources.
 */
export interface AzureExocomputeState {
    /**
     * RSC cloud account ID. This is the ID of the `polaris.AzureSubscription` resource for which the Exocompute service runs.
     * Changing this forces a new resource to be created.
     */
    cloudAccountId?: pulumi.Input<string>;
    /**
     * RSC cloud account ID of the shared exocompute host account. Changing this forces a new resource to be created.
     */
    hostCloudAccountId?: pulumi.Input<string>;
    /**
     * The CIDR range assigned to pods when launching Exocompute with the CNI overlay network plugin mode. Changing this forces
     * a new resource to be created.
     */
    podOverlayNetworkCidr?: pulumi.Input<string>;
    /**
     * Azure region to run the exocompute service in. Should be specified in the standard Azure style, e.g. `eastus`. Changing
     * this forces a new resource to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * Azure subnet ID of the cluster subnet corresponding to the Exocompute configuration. This subnet will be used to
     * allocate IP addresses to the nodes of the cluster. Changing this forces a new resource to be created.
     */
    subnet?: pulumi.Input<string>;
    /**
     * RSC cloud account ID. This is the ID of the `polaris.AzureSubscription` resource for which the Exocompute service runs.
     * Changing this forces a new resource to be created. **Deprecated:** use `cloud_account_id` instead.
     *
     * @deprecated Deprecated
     */
    subscriptionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureExocompute resource.
 */
export interface AzureExocomputeArgs {
    /**
     * RSC cloud account ID. This is the ID of the `polaris.AzureSubscription` resource for which the Exocompute service runs.
     * Changing this forces a new resource to be created.
     */
    cloudAccountId?: pulumi.Input<string>;
    /**
     * RSC cloud account ID of the shared exocompute host account. Changing this forces a new resource to be created.
     */
    hostCloudAccountId?: pulumi.Input<string>;
    /**
     * The CIDR range assigned to pods when launching Exocompute with the CNI overlay network plugin mode. Changing this forces
     * a new resource to be created.
     */
    podOverlayNetworkCidr?: pulumi.Input<string>;
    /**
     * Azure region to run the exocompute service in. Should be specified in the standard Azure style, e.g. `eastus`. Changing
     * this forces a new resource to be created.
     */
    region?: pulumi.Input<string>;
    /**
     * Azure subnet ID of the cluster subnet corresponding to the Exocompute configuration. This subnet will be used to
     * allocate IP addresses to the nodes of the cluster. Changing this forces a new resource to be created.
     */
    subnet?: pulumi.Input<string>;
    /**
     * RSC cloud account ID. This is the ID of the `polaris.AzureSubscription` resource for which the Exocompute service runs.
     * Changing this forces a new resource to be created. **Deprecated:** use `cloud_account_id` instead.
     *
     * @deprecated Deprecated
     */
    subscriptionId?: pulumi.Input<string>;
}
