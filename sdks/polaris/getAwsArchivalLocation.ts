// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAwsArchivalLocation(args?: GetAwsArchivalLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsArchivalLocationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("polaris:index/getAwsArchivalLocation:getAwsArchivalLocation", {
        "archivalLocationId": args.archivalLocationId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAwsArchivalLocation.
 */
export interface GetAwsArchivalLocationArgs {
    /**
     * @deprecated Deprecated
     */
    archivalLocationId?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getAwsArchivalLocation.
 */
export interface GetAwsArchivalLocationResult {
    /**
     * @deprecated Deprecated
     */
    readonly archivalLocationId?: string;
    readonly bucketPrefix: string;
    readonly bucketTags: {[key: string]: string};
    readonly connectionStatus: string;
    readonly id?: string;
    readonly kmsMasterKey: string;
    readonly locationTemplate: string;
    readonly name?: string;
    readonly region: string;
    readonly storageClass: string;
}
export function getAwsArchivalLocationOutput(args?: GetAwsArchivalLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwsArchivalLocationResult> {
    return pulumi.output(args).apply((a: any) => getAwsArchivalLocation(a, opts))
}

/**
 * A collection of arguments for invoking getAwsArchivalLocation.
 */
export interface GetAwsArchivalLocationOutputArgs {
    /**
     * @deprecated Deprecated
     */
    archivalLocationId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
