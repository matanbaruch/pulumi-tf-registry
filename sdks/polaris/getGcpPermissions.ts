// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGcpPermissions(args: GetGcpPermissionsArgs, opts?: pulumi.InvokeOptions): Promise<GetGcpPermissionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("polaris:index/getGcpPermissions:getGcpPermissions", {
        "features": args.features,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGcpPermissions.
 */
export interface GetGcpPermissionsArgs {
    features: string[];
    id?: string;
}

/**
 * A collection of values returned by getGcpPermissions.
 */
export interface GetGcpPermissionsResult {
    readonly features: string[];
    readonly hash: string;
    readonly id: string;
    readonly permissions: string[];
}
export function getGcpPermissionsOutput(args: GetGcpPermissionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGcpPermissionsResult> {
    return pulumi.output(args).apply((a: any) => getGcpPermissions(a, opts))
}

/**
 * A collection of arguments for invoking getGcpPermissions.
 */
export interface GetGcpPermissionsOutputArgs {
    features: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
}
