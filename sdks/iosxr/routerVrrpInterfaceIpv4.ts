// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterVrrpInterfaceIpv4 extends pulumi.CustomResource {
    /**
     * Get an existing RouterVrrpInterfaceIpv4 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterVrrpInterfaceIpv4State, opts?: pulumi.CustomResourceOptions): RouterVrrpInterfaceIpv4 {
        return new RouterVrrpInterfaceIpv4(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/routerVrrpInterfaceIpv4:RouterVrrpInterfaceIpv4';

    /**
     * Returns true if the given object is an instance of RouterVrrpInterfaceIpv4.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterVrrpInterfaceIpv4 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterVrrpInterfaceIpv4.__pulumiType;
    }

    /**
     * Disable accept mode
     */
    public readonly acceptModeDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Enable VRRP and specify IP address(es)
     */
    public readonly address!: pulumi.Output<string | undefined>;
    /**
     * BFD peer interface IPv4 address
     */
    public readonly bfdFastDetectPeerIpv4!: pulumi.Output<string | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * VRRP interface configuration subcommands
     */
    public readonly interfaceName!: pulumi.Output<string>;
    /**
     * Configure VRRP Session name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Wait before preempting - Range: `1`-`3600`
     */
    public readonly preemptDelay!: pulumi.Output<number | undefined>;
    /**
     * Disable preemption
     */
    public readonly preemptDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Set priority level - Range: `1`-`254`
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * VRRP IPv4 address
     */
    public readonly secondaryAddresses!: pulumi.Output<outputs.RouterVrrpInterfaceIpv4SecondaryAddress[] | undefined>;
    /**
     * Set plain text authentication string
     */
    public readonly textAuthentication!: pulumi.Output<string | undefined>;
    /**
     * Configure in milliseconds - Range: `100`-`40950`
     */
    public readonly timerAdvertisementMilliseconds!: pulumi.Output<number | undefined>;
    /**
     * Advertisement time in seconds - Range: `1`-`255`
     */
    public readonly timerAdvertisementSeconds!: pulumi.Output<number | undefined>;
    /**
     * Force the configured values to be used
     */
    public readonly timerForce!: pulumi.Output<boolean | undefined>;
    /**
     * Track an interface
     */
    public readonly trackInterfaces!: pulumi.Output<outputs.RouterVrrpInterfaceIpv4TrackInterface[] | undefined>;
    /**
     * Object Tracking
     */
    public readonly trackObjects!: pulumi.Output<outputs.RouterVrrpInterfaceIpv4TrackObject[] | undefined>;
    /**
     * VRRP version - Range: `2`-`3`
     */
    public readonly version!: pulumi.Output<number>;
    /**
     * VRRP configuration - Range: `1`-`255`
     */
    public readonly vrrpId!: pulumi.Output<number>;

    /**
     * Create a RouterVrrpInterfaceIpv4 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterVrrpInterfaceIpv4Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterVrrpInterfaceIpv4Args | RouterVrrpInterfaceIpv4State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterVrrpInterfaceIpv4State | undefined;
            resourceInputs["acceptModeDisable"] = state ? state.acceptModeDisable : undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["bfdFastDetectPeerIpv4"] = state ? state.bfdFastDetectPeerIpv4 : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["preemptDelay"] = state ? state.preemptDelay : undefined;
            resourceInputs["preemptDisable"] = state ? state.preemptDisable : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["secondaryAddresses"] = state ? state.secondaryAddresses : undefined;
            resourceInputs["textAuthentication"] = state ? state.textAuthentication : undefined;
            resourceInputs["timerAdvertisementMilliseconds"] = state ? state.timerAdvertisementMilliseconds : undefined;
            resourceInputs["timerAdvertisementSeconds"] = state ? state.timerAdvertisementSeconds : undefined;
            resourceInputs["timerForce"] = state ? state.timerForce : undefined;
            resourceInputs["trackInterfaces"] = state ? state.trackInterfaces : undefined;
            resourceInputs["trackObjects"] = state ? state.trackObjects : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vrrpId"] = state ? state.vrrpId : undefined;
        } else {
            const args = argsOrState as RouterVrrpInterfaceIpv4Args | undefined;
            if ((!args || args.interfaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interfaceName'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            if ((!args || args.vrrpId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vrrpId'");
            }
            resourceInputs["acceptModeDisable"] = args ? args.acceptModeDisable : undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["bfdFastDetectPeerIpv4"] = args ? args.bfdFastDetectPeerIpv4 : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["preemptDelay"] = args ? args.preemptDelay : undefined;
            resourceInputs["preemptDisable"] = args ? args.preemptDisable : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["secondaryAddresses"] = args ? args.secondaryAddresses : undefined;
            resourceInputs["textAuthentication"] = args ? args.textAuthentication : undefined;
            resourceInputs["timerAdvertisementMilliseconds"] = args ? args.timerAdvertisementMilliseconds : undefined;
            resourceInputs["timerAdvertisementSeconds"] = args ? args.timerAdvertisementSeconds : undefined;
            resourceInputs["timerForce"] = args ? args.timerForce : undefined;
            resourceInputs["trackInterfaces"] = args ? args.trackInterfaces : undefined;
            resourceInputs["trackObjects"] = args ? args.trackObjects : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["vrrpId"] = args ? args.vrrpId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterVrrpInterfaceIpv4.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterVrrpInterfaceIpv4 resources.
 */
export interface RouterVrrpInterfaceIpv4State {
    /**
     * Disable accept mode
     */
    acceptModeDisable?: pulumi.Input<boolean>;
    /**
     * Enable VRRP and specify IP address(es)
     */
    address?: pulumi.Input<string>;
    /**
     * BFD peer interface IPv4 address
     */
    bfdFastDetectPeerIpv4?: pulumi.Input<string>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * VRRP interface configuration subcommands
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * Configure VRRP Session name
     */
    name?: pulumi.Input<string>;
    /**
     * Wait before preempting - Range: `1`-`3600`
     */
    preemptDelay?: pulumi.Input<number>;
    /**
     * Disable preemption
     */
    preemptDisable?: pulumi.Input<boolean>;
    /**
     * Set priority level - Range: `1`-`254`
     */
    priority?: pulumi.Input<number>;
    /**
     * VRRP IPv4 address
     */
    secondaryAddresses?: pulumi.Input<pulumi.Input<inputs.RouterVrrpInterfaceIpv4SecondaryAddress>[]>;
    /**
     * Set plain text authentication string
     */
    textAuthentication?: pulumi.Input<string>;
    /**
     * Configure in milliseconds - Range: `100`-`40950`
     */
    timerAdvertisementMilliseconds?: pulumi.Input<number>;
    /**
     * Advertisement time in seconds - Range: `1`-`255`
     */
    timerAdvertisementSeconds?: pulumi.Input<number>;
    /**
     * Force the configured values to be used
     */
    timerForce?: pulumi.Input<boolean>;
    /**
     * Track an interface
     */
    trackInterfaces?: pulumi.Input<pulumi.Input<inputs.RouterVrrpInterfaceIpv4TrackInterface>[]>;
    /**
     * Object Tracking
     */
    trackObjects?: pulumi.Input<pulumi.Input<inputs.RouterVrrpInterfaceIpv4TrackObject>[]>;
    /**
     * VRRP version - Range: `2`-`3`
     */
    version?: pulumi.Input<number>;
    /**
     * VRRP configuration - Range: `1`-`255`
     */
    vrrpId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RouterVrrpInterfaceIpv4 resource.
 */
export interface RouterVrrpInterfaceIpv4Args {
    /**
     * Disable accept mode
     */
    acceptModeDisable?: pulumi.Input<boolean>;
    /**
     * Enable VRRP and specify IP address(es)
     */
    address?: pulumi.Input<string>;
    /**
     * BFD peer interface IPv4 address
     */
    bfdFastDetectPeerIpv4?: pulumi.Input<string>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * VRRP interface configuration subcommands
     */
    interfaceName: pulumi.Input<string>;
    /**
     * Configure VRRP Session name
     */
    name?: pulumi.Input<string>;
    /**
     * Wait before preempting - Range: `1`-`3600`
     */
    preemptDelay?: pulumi.Input<number>;
    /**
     * Disable preemption
     */
    preemptDisable?: pulumi.Input<boolean>;
    /**
     * Set priority level - Range: `1`-`254`
     */
    priority?: pulumi.Input<number>;
    /**
     * VRRP IPv4 address
     */
    secondaryAddresses?: pulumi.Input<pulumi.Input<inputs.RouterVrrpInterfaceIpv4SecondaryAddress>[]>;
    /**
     * Set plain text authentication string
     */
    textAuthentication?: pulumi.Input<string>;
    /**
     * Configure in milliseconds - Range: `100`-`40950`
     */
    timerAdvertisementMilliseconds?: pulumi.Input<number>;
    /**
     * Advertisement time in seconds - Range: `1`-`255`
     */
    timerAdvertisementSeconds?: pulumi.Input<number>;
    /**
     * Force the configured values to be used
     */
    timerForce?: pulumi.Input<boolean>;
    /**
     * Track an interface
     */
    trackInterfaces?: pulumi.Input<pulumi.Input<inputs.RouterVrrpInterfaceIpv4TrackInterface>[]>;
    /**
     * Object Tracking
     */
    trackObjects?: pulumi.Input<pulumi.Input<inputs.RouterVrrpInterfaceIpv4TrackObject>[]>;
    /**
     * VRRP version - Range: `2`-`3`
     */
    version: pulumi.Input<number>;
    /**
     * VRRP configuration - Range: `1`-`255`
     */
    vrrpId: pulumi.Input<number>;
}
