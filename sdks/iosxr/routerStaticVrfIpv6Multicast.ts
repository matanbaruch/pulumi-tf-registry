// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterStaticVrfIpv6Multicast extends pulumi.CustomResource {
    /**
     * Get an existing RouterStaticVrfIpv6Multicast resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterStaticVrfIpv6MulticastState, opts?: pulumi.CustomResourceOptions): RouterStaticVrfIpv6Multicast {
        return new RouterStaticVrfIpv6Multicast(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/routerStaticVrfIpv6Multicast:RouterStaticVrfIpv6Multicast';

    /**
     * Returns true if the given object is an instance of RouterStaticVrfIpv6Multicast.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterStaticVrfIpv6Multicast {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterStaticVrfIpv6Multicast.__pulumiType;
    }

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Forwarding router's address
     */
    public readonly nexthopAddresses!: pulumi.Output<outputs.RouterStaticVrfIpv6MulticastNexthopAddress[] | undefined>;
    /**
     * Forwarding interface
     */
    public readonly nexthopInterfaceAddresses!: pulumi.Output<outputs.RouterStaticVrfIpv6MulticastNexthopInterfaceAddress[] | undefined>;
    /**
     * Forwarding interface
     */
    public readonly nexthopInterfaces!: pulumi.Output<outputs.RouterStaticVrfIpv6MulticastNexthopInterface[] | undefined>;
    /**
     * Destination prefix
     */
    public readonly prefixAddress!: pulumi.Output<string>;
    /**
     * Destination prefix length - Range: `0`-`128`
     */
    public readonly prefixLength!: pulumi.Output<number>;
    /**
     * VRF Static route configuration subcommands
     */
    public readonly vrfName!: pulumi.Output<string>;
    /**
     * Destination VRF
     */
    public readonly vrfs!: pulumi.Output<outputs.RouterStaticVrfIpv6MulticastVrf[] | undefined>;

    /**
     * Create a RouterStaticVrfIpv6Multicast resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterStaticVrfIpv6MulticastArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterStaticVrfIpv6MulticastArgs | RouterStaticVrfIpv6MulticastState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterStaticVrfIpv6MulticastState | undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["nexthopAddresses"] = state ? state.nexthopAddresses : undefined;
            resourceInputs["nexthopInterfaceAddresses"] = state ? state.nexthopInterfaceAddresses : undefined;
            resourceInputs["nexthopInterfaces"] = state ? state.nexthopInterfaces : undefined;
            resourceInputs["prefixAddress"] = state ? state.prefixAddress : undefined;
            resourceInputs["prefixLength"] = state ? state.prefixLength : undefined;
            resourceInputs["vrfName"] = state ? state.vrfName : undefined;
            resourceInputs["vrfs"] = state ? state.vrfs : undefined;
        } else {
            const args = argsOrState as RouterStaticVrfIpv6MulticastArgs | undefined;
            if ((!args || args.prefixAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'prefixAddress'");
            }
            if ((!args || args.prefixLength === undefined) && !opts.urn) {
                throw new Error("Missing required property 'prefixLength'");
            }
            if ((!args || args.vrfName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vrfName'");
            }
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["nexthopAddresses"] = args ? args.nexthopAddresses : undefined;
            resourceInputs["nexthopInterfaceAddresses"] = args ? args.nexthopInterfaceAddresses : undefined;
            resourceInputs["nexthopInterfaces"] = args ? args.nexthopInterfaces : undefined;
            resourceInputs["prefixAddress"] = args ? args.prefixAddress : undefined;
            resourceInputs["prefixLength"] = args ? args.prefixLength : undefined;
            resourceInputs["vrfName"] = args ? args.vrfName : undefined;
            resourceInputs["vrfs"] = args ? args.vrfs : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterStaticVrfIpv6Multicast.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterStaticVrfIpv6Multicast resources.
 */
export interface RouterStaticVrfIpv6MulticastState {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Forwarding router's address
     */
    nexthopAddresses?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastNexthopAddress>[]>;
    /**
     * Forwarding interface
     */
    nexthopInterfaceAddresses?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastNexthopInterfaceAddress>[]>;
    /**
     * Forwarding interface
     */
    nexthopInterfaces?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastNexthopInterface>[]>;
    /**
     * Destination prefix
     */
    prefixAddress?: pulumi.Input<string>;
    /**
     * Destination prefix length - Range: `0`-`128`
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * VRF Static route configuration subcommands
     */
    vrfName?: pulumi.Input<string>;
    /**
     * Destination VRF
     */
    vrfs?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastVrf>[]>;
}

/**
 * The set of arguments for constructing a RouterStaticVrfIpv6Multicast resource.
 */
export interface RouterStaticVrfIpv6MulticastArgs {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Forwarding router's address
     */
    nexthopAddresses?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastNexthopAddress>[]>;
    /**
     * Forwarding interface
     */
    nexthopInterfaceAddresses?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastNexthopInterfaceAddress>[]>;
    /**
     * Forwarding interface
     */
    nexthopInterfaces?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastNexthopInterface>[]>;
    /**
     * Destination prefix
     */
    prefixAddress: pulumi.Input<string>;
    /**
     * Destination prefix length - Range: `0`-`128`
     */
    prefixLength: pulumi.Input<number>;
    /**
     * VRF Static route configuration subcommands
     */
    vrfName: pulumi.Input<string>;
    /**
     * Destination VRF
     */
    vrfs?: pulumi.Input<pulumi.Input<inputs.RouterStaticVrfIpv6MulticastVrf>[]>;
}
