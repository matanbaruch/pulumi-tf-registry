// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSegmentRoutingTe(args?: GetSegmentRoutingTeArgs, opts?: pulumi.InvokeOptions): Promise<GetSegmentRoutingTeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getSegmentRoutingTe:getSegmentRoutingTe", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSegmentRoutingTe.
 */
export interface GetSegmentRoutingTeArgs {
    device?: string;
}

/**
 * A collection of values returned by getSegmentRoutingTe.
 */
export interface GetSegmentRoutingTeResult {
    readonly device?: string;
    readonly id: string;
    readonly loggingPcepPeerStatus: boolean;
    readonly loggingPolicyStatus: boolean;
    readonly onDemandColors: outputs.GetSegmentRoutingTeOnDemandColor[];
    readonly pccDeadTimer: number;
    readonly pccDelegationTimeout: number;
    readonly pccInitiatedOrphan: number;
    readonly pccInitiatedState: number;
    readonly pccReportAll: boolean;
    readonly pccSourceAddress: string;
    readonly pcePeers: outputs.GetSegmentRoutingTePcePeer[];
    readonly policies: outputs.GetSegmentRoutingTePolicy[];
}
export function getSegmentRoutingTeOutput(args?: GetSegmentRoutingTeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSegmentRoutingTeResult> {
    return pulumi.output(args).apply((a: any) => getSegmentRoutingTe(a, opts))
}

/**
 * A collection of arguments for invoking getSegmentRoutingTe.
 */
export interface GetSegmentRoutingTeOutputArgs {
    device?: pulumi.Input<string>;
}
