// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EvpnSegmentRoutingSrv6Evi extends pulumi.CustomResource {
    /**
     * Get an existing EvpnSegmentRoutingSrv6Evi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EvpnSegmentRoutingSrv6EviState, opts?: pulumi.CustomResourceOptions): EvpnSegmentRoutingSrv6Evi {
        return new EvpnSegmentRoutingSrv6Evi(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/evpnSegmentRoutingSrv6Evi:EvpnSegmentRoutingSrv6Evi';

    /**
     * Returns true if the given object is an instance of EvpnSegmentRoutingSrv6Evi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EvpnSegmentRoutingSrv6Evi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EvpnSegmentRoutingSrv6Evi.__pulumiType;
    }

    /**
     * Configure EVPN Instance MAC advertisement
     */
    public readonly advertiseMac!: pulumi.Output<boolean | undefined>;
    /**
     * Four Byte AS number Route Target
     */
    public readonly bgpRouteTargetExportFourByteAsFormats!: pulumi.Output<outputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportFourByteAsFormat[] | undefined>;
    /**
     * IP address
     */
    public readonly bgpRouteTargetExportIpv4AddressFormats!: pulumi.Output<outputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportIpv4AddressFormat[] | undefined>;
    /**
     * Two Byte AS Number Route Target
     */
    public readonly bgpRouteTargetExportTwoByteAsFormats!: pulumi.Output<outputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportTwoByteAsFormat[] | undefined>;
    /**
     * Four Byte AS number Route Target
     */
    public readonly bgpRouteTargetImportFourByteAsFormats!: pulumi.Output<outputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportFourByteAsFormat[] | undefined>;
    /**
     * IP address
     */
    public readonly bgpRouteTargetImportIpv4AddressFormats!: pulumi.Output<outputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportIpv4AddressFormat[] | undefined>;
    /**
     * Two Byte AS Number Route Target
     */
    public readonly bgpRouteTargetImportTwoByteAsFormats!: pulumi.Output<outputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportTwoByteAsFormat[] | undefined>;
    /**
     * Description for this EVPN Instance
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * EVI locator to use for EVPN SID allocation
     */
    public readonly locator!: pulumi.Output<string | undefined>;
    /**
     * Configure EVPN Instance VPN ID - Range: `1`-`65534`
     */
    public readonly vpnId!: pulumi.Output<number>;

    /**
     * Create a EvpnSegmentRoutingSrv6Evi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EvpnSegmentRoutingSrv6EviArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EvpnSegmentRoutingSrv6EviArgs | EvpnSegmentRoutingSrv6EviState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EvpnSegmentRoutingSrv6EviState | undefined;
            resourceInputs["advertiseMac"] = state ? state.advertiseMac : undefined;
            resourceInputs["bgpRouteTargetExportFourByteAsFormats"] = state ? state.bgpRouteTargetExportFourByteAsFormats : undefined;
            resourceInputs["bgpRouteTargetExportIpv4AddressFormats"] = state ? state.bgpRouteTargetExportIpv4AddressFormats : undefined;
            resourceInputs["bgpRouteTargetExportTwoByteAsFormats"] = state ? state.bgpRouteTargetExportTwoByteAsFormats : undefined;
            resourceInputs["bgpRouteTargetImportFourByteAsFormats"] = state ? state.bgpRouteTargetImportFourByteAsFormats : undefined;
            resourceInputs["bgpRouteTargetImportIpv4AddressFormats"] = state ? state.bgpRouteTargetImportIpv4AddressFormats : undefined;
            resourceInputs["bgpRouteTargetImportTwoByteAsFormats"] = state ? state.bgpRouteTargetImportTwoByteAsFormats : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["locator"] = state ? state.locator : undefined;
            resourceInputs["vpnId"] = state ? state.vpnId : undefined;
        } else {
            const args = argsOrState as EvpnSegmentRoutingSrv6EviArgs | undefined;
            if ((!args || args.vpnId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnId'");
            }
            resourceInputs["advertiseMac"] = args ? args.advertiseMac : undefined;
            resourceInputs["bgpRouteTargetExportFourByteAsFormats"] = args ? args.bgpRouteTargetExportFourByteAsFormats : undefined;
            resourceInputs["bgpRouteTargetExportIpv4AddressFormats"] = args ? args.bgpRouteTargetExportIpv4AddressFormats : undefined;
            resourceInputs["bgpRouteTargetExportTwoByteAsFormats"] = args ? args.bgpRouteTargetExportTwoByteAsFormats : undefined;
            resourceInputs["bgpRouteTargetImportFourByteAsFormats"] = args ? args.bgpRouteTargetImportFourByteAsFormats : undefined;
            resourceInputs["bgpRouteTargetImportIpv4AddressFormats"] = args ? args.bgpRouteTargetImportIpv4AddressFormats : undefined;
            resourceInputs["bgpRouteTargetImportTwoByteAsFormats"] = args ? args.bgpRouteTargetImportTwoByteAsFormats : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["locator"] = args ? args.locator : undefined;
            resourceInputs["vpnId"] = args ? args.vpnId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EvpnSegmentRoutingSrv6Evi.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EvpnSegmentRoutingSrv6Evi resources.
 */
export interface EvpnSegmentRoutingSrv6EviState {
    /**
     * Configure EVPN Instance MAC advertisement
     */
    advertiseMac?: pulumi.Input<boolean>;
    /**
     * Four Byte AS number Route Target
     */
    bgpRouteTargetExportFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportFourByteAsFormat>[]>;
    /**
     * IP address
     */
    bgpRouteTargetExportIpv4AddressFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportIpv4AddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    bgpRouteTargetExportTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportTwoByteAsFormat>[]>;
    /**
     * Four Byte AS number Route Target
     */
    bgpRouteTargetImportFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportFourByteAsFormat>[]>;
    /**
     * IP address
     */
    bgpRouteTargetImportIpv4AddressFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportIpv4AddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    bgpRouteTargetImportTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportTwoByteAsFormat>[]>;
    /**
     * Description for this EVPN Instance
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * EVI locator to use for EVPN SID allocation
     */
    locator?: pulumi.Input<string>;
    /**
     * Configure EVPN Instance VPN ID - Range: `1`-`65534`
     */
    vpnId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a EvpnSegmentRoutingSrv6Evi resource.
 */
export interface EvpnSegmentRoutingSrv6EviArgs {
    /**
     * Configure EVPN Instance MAC advertisement
     */
    advertiseMac?: pulumi.Input<boolean>;
    /**
     * Four Byte AS number Route Target
     */
    bgpRouteTargetExportFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportFourByteAsFormat>[]>;
    /**
     * IP address
     */
    bgpRouteTargetExportIpv4AddressFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportIpv4AddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    bgpRouteTargetExportTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetExportTwoByteAsFormat>[]>;
    /**
     * Four Byte AS number Route Target
     */
    bgpRouteTargetImportFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportFourByteAsFormat>[]>;
    /**
     * IP address
     */
    bgpRouteTargetImportIpv4AddressFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportIpv4AddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    bgpRouteTargetImportTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.EvpnSegmentRoutingSrv6EviBgpRouteTargetImportTwoByteAsFormat>[]>;
    /**
     * Description for this EVPN Instance
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * EVI locator to use for EVPN SID allocation
     */
    locator?: pulumi.Input<string>;
    /**
     * Configure EVPN Instance VPN ID - Range: `1`-`65534`
     */
    vpnId: pulumi.Input<number>;
}
