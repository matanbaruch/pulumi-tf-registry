// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpv4AccessListOptions(args?: GetIpv4AccessListOptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4AccessListOptionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getIpv4AccessListOptions:getIpv4AccessListOptions", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv4AccessListOptions.
 */
export interface GetIpv4AccessListOptionsArgs {
    device?: string;
}

/**
 * A collection of values returned by getIpv4AccessListOptions.
 */
export interface GetIpv4AccessListOptionsResult {
    readonly device?: string;
    readonly icmpOff: boolean;
    readonly id: string;
    readonly logUpdateRate: number;
    readonly logUpdateThreshold: number;
}
export function getIpv4AccessListOptionsOutput(args?: GetIpv4AccessListOptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4AccessListOptionsResult> {
    return pulumi.output(args).apply((a: any) => getIpv4AccessListOptions(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4AccessListOptions.
 */
export interface GetIpv4AccessListOptionsOutputArgs {
    device?: pulumi.Input<string>;
}
