// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLldp(args?: GetLldpArgs, opts?: pulumi.InvokeOptions): Promise<GetLldpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getLldp:getLldp", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLldp.
 */
export interface GetLldpArgs {
    device?: string;
}

/**
 * A collection of values returned by getLldp.
 */
export interface GetLldpResult {
    readonly device?: string;
    readonly extendedShowWidthEnable: boolean;
    readonly holdtime: number;
    readonly id: string;
    readonly managementEnable: boolean;
    readonly priorityaddrEnable: boolean;
    readonly reinit: number;
    readonly subinterfacesEnable: boolean;
    readonly timer: number;
    readonly tlvSelectManagementAddressDisable: boolean;
    readonly tlvSelectPortDescriptionDisable: boolean;
    readonly tlvSelectSystemCapabilitiesDisable: boolean;
    readonly tlvSelectSystemDescriptionDisable: boolean;
    readonly tlvSelectSystemNameDisable: boolean;
}
export function getLldpOutput(args?: GetLldpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLldpResult> {
    return pulumi.output(args).apply((a: any) => getLldp(a, opts))
}

/**
 * A collection of arguments for invoking getLldp.
 */
export interface GetLldpOutputArgs {
    device?: pulumi.Input<string>;
}
