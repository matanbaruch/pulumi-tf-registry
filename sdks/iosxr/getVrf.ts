// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVrf(args: GetVrfArgs, opts?: pulumi.InvokeOptions): Promise<GetVrfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getVrf:getVrf", {
        "device": args.device,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVrf.
 */
export interface GetVrfArgs {
    device?: string;
    vrfName: string;
}

/**
 * A collection of values returned by getVrf.
 */
export interface GetVrfResult {
    readonly addressFamilyIpv4Flowspec: boolean;
    readonly addressFamilyIpv4Multicast: boolean;
    readonly addressFamilyIpv4Unicast: boolean;
    readonly addressFamilyIpv4UnicastExportRoutePolicy: string;
    readonly addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats: outputs.GetVrfAddressFamilyIpv4UnicastExportRouteTargetFourByteAsFormat[];
    readonly addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats: outputs.GetVrfAddressFamilyIpv4UnicastExportRouteTargetIpAddressFormat[];
    readonly addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats: outputs.GetVrfAddressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormat[];
    readonly addressFamilyIpv4UnicastImportRoutePolicy: string;
    readonly addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats: outputs.GetVrfAddressFamilyIpv4UnicastImportRouteTargetFourByteAsFormat[];
    readonly addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats: outputs.GetVrfAddressFamilyIpv4UnicastImportRouteTargetIpAddressFormat[];
    readonly addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats: outputs.GetVrfAddressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormat[];
    readonly addressFamilyIpv6Flowspec: boolean;
    readonly addressFamilyIpv6Multicast: boolean;
    readonly addressFamilyIpv6Unicast: boolean;
    readonly addressFamilyIpv6UnicastExportRoutePolicy: string;
    readonly addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats: outputs.GetVrfAddressFamilyIpv6UnicastExportRouteTargetFourByteAsFormat[];
    readonly addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats: outputs.GetVrfAddressFamilyIpv6UnicastExportRouteTargetIpAddressFormat[];
    readonly addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats: outputs.GetVrfAddressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormat[];
    readonly addressFamilyIpv6UnicastImportRoutePolicy: string;
    readonly addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats: outputs.GetVrfAddressFamilyIpv6UnicastImportRouteTargetFourByteAsFormat[];
    readonly addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats: outputs.GetVrfAddressFamilyIpv6UnicastImportRouteTargetIpAddressFormat[];
    readonly addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats: outputs.GetVrfAddressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormat[];
    readonly description: string;
    readonly device?: string;
    readonly id: string;
    readonly rdFourByteAsAsNumber: string;
    readonly rdFourByteAsIndex: number;
    readonly rdIpAddressIndex: number;
    readonly rdIpAddressIpv4Address: string;
    readonly rdTwoByteAsAsNumber: string;
    readonly rdTwoByteAsIndex: number;
    readonly vpnId: string;
    readonly vrfName: string;
}
export function getVrfOutput(args: GetVrfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVrfResult> {
    return pulumi.output(args).apply((a: any) => getVrf(a, opts))
}

/**
 * A collection of arguments for invoking getVrf.
 */
export interface GetVrfOutputArgs {
    device?: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
