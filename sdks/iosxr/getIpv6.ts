// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpv6(args?: GetIpv6Args, opts?: pulumi.InvokeOptions): Promise<GetIpv6Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getIpv6:getIpv6", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv6.
 */
export interface GetIpv6Args {
    device?: string;
}

/**
 * A collection of values returned by getIpv6.
 */
export interface GetIpv6Result {
    readonly assemblerFragHdrIncompleteEnable: boolean;
    readonly assemblerMaxPackets: number;
    readonly assemblerOverlapFragDropEnable: boolean;
    readonly assemblerReassemblerDropEnable: boolean;
    readonly assemblerTimeout: number;
    readonly device?: string;
    readonly hopLimit: number;
    readonly icmpErrorInterval: number;
    readonly icmpErrorIntervalBucketSize: number;
    readonly id: string;
    readonly pathMtuEnable: boolean;
    readonly pathMtuTimeout: number;
    readonly sourceRoute: boolean;
}
export function getIpv6Output(args?: GetIpv6OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv6Result> {
    return pulumi.output(args).apply((a: any) => getIpv6(a, opts))
}

/**
 * A collection of arguments for invoking getIpv6.
 */
export interface GetIpv6OutputArgs {
    device?: pulumi.Input<string>;
}
