// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Vrf extends pulumi.CustomResource {
    /**
     * Get an existing Vrf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VrfState, opts?: pulumi.CustomResourceOptions): Vrf {
        return new Vrf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/vrf:Vrf';

    /**
     * Returns true if the given object is an instance of Vrf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vrf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vrf.__pulumiType;
    }

    /**
     * Flowspec sub address family
     */
    public readonly addressFamilyIpv4Flowspec!: pulumi.Output<boolean | undefined>;
    /**
     * Multicast topology
     */
    public readonly addressFamilyIpv4Multicast!: pulumi.Output<boolean | undefined>;
    /**
     * Unicast sub address family
     */
    public readonly addressFamilyIpv4Unicast!: pulumi.Output<boolean | undefined>;
    /**
     * Use route-policy for export
     */
    public readonly addressFamilyIpv4UnicastExportRoutePolicy!: pulumi.Output<string | undefined>;
    /**
     * Four Byte AS number Route Target
     */
    public readonly addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv4UnicastExportRouteTargetFourByteAsFormat[] | undefined>;
    /**
     * IP address
     */
    public readonly addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv4UnicastExportRouteTargetIpAddressFormat[] | undefined>;
    /**
     * Two Byte AS Number Route Target
     */
    public readonly addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormat[] | undefined>;
    /**
     * Use route-policy for import filtering
     */
    public readonly addressFamilyIpv4UnicastImportRoutePolicy!: pulumi.Output<string | undefined>;
    /**
     * Four Byte AS number Route Target
     */
    public readonly addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv4UnicastImportRouteTargetFourByteAsFormat[] | undefined>;
    /**
     * IP address
     */
    public readonly addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv4UnicastImportRouteTargetIpAddressFormat[] | undefined>;
    /**
     * Two Byte AS Number Route Target
     */
    public readonly addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormat[] | undefined>;
    /**
     * Flowspec sub address family
     */
    public readonly addressFamilyIpv6Flowspec!: pulumi.Output<boolean | undefined>;
    /**
     * Multicast topology
     */
    public readonly addressFamilyIpv6Multicast!: pulumi.Output<boolean | undefined>;
    /**
     * Unicast sub address family
     */
    public readonly addressFamilyIpv6Unicast!: pulumi.Output<boolean | undefined>;
    /**
     * Use route-policy for export
     */
    public readonly addressFamilyIpv6UnicastExportRoutePolicy!: pulumi.Output<string | undefined>;
    /**
     * Four Byte AS number Route Target
     */
    public readonly addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv6UnicastExportRouteTargetFourByteAsFormat[] | undefined>;
    /**
     * IP address
     */
    public readonly addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv6UnicastExportRouteTargetIpAddressFormat[] | undefined>;
    /**
     * Two Byte AS Number Route Target
     */
    public readonly addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormat[] | undefined>;
    /**
     * Use route-policy for import filtering
     */
    public readonly addressFamilyIpv6UnicastImportRoutePolicy!: pulumi.Output<string | undefined>;
    /**
     * Four Byte AS number Route Target
     */
    public readonly addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv6UnicastImportRouteTargetFourByteAsFormat[] | undefined>;
    /**
     * IP address
     */
    public readonly addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv6UnicastImportRouteTargetIpAddressFormat[] | undefined>;
    /**
     * Two Byte AS Number Route Target
     */
    public readonly addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats!: pulumi.Output<outputs.VrfAddressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormat[] | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A description for the VRF
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * 4-byte AS number
     */
    public readonly rdFourByteAsAsNumber!: pulumi.Output<string | undefined>;
    /**
     * ASN2:index (hex or decimal format) - Range: `0`-`4294967295`
     */
    public readonly rdFourByteAsIndex!: pulumi.Output<number | undefined>;
    /**
     * IPv4Address:index (hex or decimal format) - Range: `0`-`65535`
     */
    public readonly rdIpAddressIndex!: pulumi.Output<number | undefined>;
    /**
     * configure this node
     */
    public readonly rdIpAddressIpv4Address!: pulumi.Output<string | undefined>;
    /**
     * bgp as-number
     */
    public readonly rdTwoByteAsAsNumber!: pulumi.Output<string | undefined>;
    /**
     * ASN2:index (hex or decimal format) - Range: `0`-`4294967295`
     */
    public readonly rdTwoByteAsIndex!: pulumi.Output<number | undefined>;
    /**
     * VPN ID, (OUI:VPN-Index) format(hex), 4 bytes VPN_Index Part
     */
    public readonly vpnId!: pulumi.Output<string | undefined>;
    /**
     * VRF name
     */
    public readonly vrfName!: pulumi.Output<string>;

    /**
     * Create a Vrf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VrfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VrfArgs | VrfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VrfState | undefined;
            resourceInputs["addressFamilyIpv4Flowspec"] = state ? state.addressFamilyIpv4Flowspec : undefined;
            resourceInputs["addressFamilyIpv4Multicast"] = state ? state.addressFamilyIpv4Multicast : undefined;
            resourceInputs["addressFamilyIpv4Unicast"] = state ? state.addressFamilyIpv4Unicast : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRoutePolicy"] = state ? state.addressFamilyIpv4UnicastExportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats"] = state ? state.addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats"] = state ? state.addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats"] = state ? state.addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRoutePolicy"] = state ? state.addressFamilyIpv4UnicastImportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats"] = state ? state.addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats"] = state ? state.addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats"] = state ? state.addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6Flowspec"] = state ? state.addressFamilyIpv6Flowspec : undefined;
            resourceInputs["addressFamilyIpv6Multicast"] = state ? state.addressFamilyIpv6Multicast : undefined;
            resourceInputs["addressFamilyIpv6Unicast"] = state ? state.addressFamilyIpv6Unicast : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRoutePolicy"] = state ? state.addressFamilyIpv6UnicastExportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats"] = state ? state.addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats"] = state ? state.addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats"] = state ? state.addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRoutePolicy"] = state ? state.addressFamilyIpv6UnicastImportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats"] = state ? state.addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats"] = state ? state.addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats"] = state ? state.addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["rdFourByteAsAsNumber"] = state ? state.rdFourByteAsAsNumber : undefined;
            resourceInputs["rdFourByteAsIndex"] = state ? state.rdFourByteAsIndex : undefined;
            resourceInputs["rdIpAddressIndex"] = state ? state.rdIpAddressIndex : undefined;
            resourceInputs["rdIpAddressIpv4Address"] = state ? state.rdIpAddressIpv4Address : undefined;
            resourceInputs["rdTwoByteAsAsNumber"] = state ? state.rdTwoByteAsAsNumber : undefined;
            resourceInputs["rdTwoByteAsIndex"] = state ? state.rdTwoByteAsIndex : undefined;
            resourceInputs["vpnId"] = state ? state.vpnId : undefined;
            resourceInputs["vrfName"] = state ? state.vrfName : undefined;
        } else {
            const args = argsOrState as VrfArgs | undefined;
            if ((!args || args.vrfName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vrfName'");
            }
            resourceInputs["addressFamilyIpv4Flowspec"] = args ? args.addressFamilyIpv4Flowspec : undefined;
            resourceInputs["addressFamilyIpv4Multicast"] = args ? args.addressFamilyIpv4Multicast : undefined;
            resourceInputs["addressFamilyIpv4Unicast"] = args ? args.addressFamilyIpv4Unicast : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRoutePolicy"] = args ? args.addressFamilyIpv4UnicastExportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats"] = args ? args.addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats"] = args ? args.addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats"] = args ? args.addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRoutePolicy"] = args ? args.addressFamilyIpv4UnicastImportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats"] = args ? args.addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats"] = args ? args.addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats"] = args ? args.addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6Flowspec"] = args ? args.addressFamilyIpv6Flowspec : undefined;
            resourceInputs["addressFamilyIpv6Multicast"] = args ? args.addressFamilyIpv6Multicast : undefined;
            resourceInputs["addressFamilyIpv6Unicast"] = args ? args.addressFamilyIpv6Unicast : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRoutePolicy"] = args ? args.addressFamilyIpv6UnicastExportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats"] = args ? args.addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats"] = args ? args.addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats"] = args ? args.addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRoutePolicy"] = args ? args.addressFamilyIpv6UnicastImportRoutePolicy : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats"] = args ? args.addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats"] = args ? args.addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats : undefined;
            resourceInputs["addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats"] = args ? args.addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["rdFourByteAsAsNumber"] = args ? args.rdFourByteAsAsNumber : undefined;
            resourceInputs["rdFourByteAsIndex"] = args ? args.rdFourByteAsIndex : undefined;
            resourceInputs["rdIpAddressIndex"] = args ? args.rdIpAddressIndex : undefined;
            resourceInputs["rdIpAddressIpv4Address"] = args ? args.rdIpAddressIpv4Address : undefined;
            resourceInputs["rdTwoByteAsAsNumber"] = args ? args.rdTwoByteAsAsNumber : undefined;
            resourceInputs["rdTwoByteAsIndex"] = args ? args.rdTwoByteAsIndex : undefined;
            resourceInputs["vpnId"] = args ? args.vpnId : undefined;
            resourceInputs["vrfName"] = args ? args.vrfName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vrf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vrf resources.
 */
export interface VrfState {
    /**
     * Flowspec sub address family
     */
    addressFamilyIpv4Flowspec?: pulumi.Input<boolean>;
    /**
     * Multicast topology
     */
    addressFamilyIpv4Multicast?: pulumi.Input<boolean>;
    /**
     * Unicast sub address family
     */
    addressFamilyIpv4Unicast?: pulumi.Input<boolean>;
    /**
     * Use route-policy for export
     */
    addressFamilyIpv4UnicastExportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastExportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastExportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Use route-policy for import filtering
     */
    addressFamilyIpv4UnicastImportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastImportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastImportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Flowspec sub address family
     */
    addressFamilyIpv6Flowspec?: pulumi.Input<boolean>;
    /**
     * Multicast topology
     */
    addressFamilyIpv6Multicast?: pulumi.Input<boolean>;
    /**
     * Unicast sub address family
     */
    addressFamilyIpv6Unicast?: pulumi.Input<boolean>;
    /**
     * Use route-policy for export
     */
    addressFamilyIpv6UnicastExportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastExportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastExportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Use route-policy for import filtering
     */
    addressFamilyIpv6UnicastImportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastImportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastImportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A description for the VRF
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * 4-byte AS number
     */
    rdFourByteAsAsNumber?: pulumi.Input<string>;
    /**
     * ASN2:index (hex or decimal format) - Range: `0`-`4294967295`
     */
    rdFourByteAsIndex?: pulumi.Input<number>;
    /**
     * IPv4Address:index (hex or decimal format) - Range: `0`-`65535`
     */
    rdIpAddressIndex?: pulumi.Input<number>;
    /**
     * configure this node
     */
    rdIpAddressIpv4Address?: pulumi.Input<string>;
    /**
     * bgp as-number
     */
    rdTwoByteAsAsNumber?: pulumi.Input<string>;
    /**
     * ASN2:index (hex or decimal format) - Range: `0`-`4294967295`
     */
    rdTwoByteAsIndex?: pulumi.Input<number>;
    /**
     * VPN ID, (OUI:VPN-Index) format(hex), 4 bytes VPN_Index Part
     */
    vpnId?: pulumi.Input<string>;
    /**
     * VRF name
     */
    vrfName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vrf resource.
 */
export interface VrfArgs {
    /**
     * Flowspec sub address family
     */
    addressFamilyIpv4Flowspec?: pulumi.Input<boolean>;
    /**
     * Multicast topology
     */
    addressFamilyIpv4Multicast?: pulumi.Input<boolean>;
    /**
     * Unicast sub address family
     */
    addressFamilyIpv4Unicast?: pulumi.Input<boolean>;
    /**
     * Use route-policy for export
     */
    addressFamilyIpv4UnicastExportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv4UnicastExportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastExportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv4UnicastExportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastExportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastExportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Use route-policy for import filtering
     */
    addressFamilyIpv4UnicastImportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv4UnicastImportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastImportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv4UnicastImportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastImportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv4UnicastImportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Flowspec sub address family
     */
    addressFamilyIpv6Flowspec?: pulumi.Input<boolean>;
    /**
     * Multicast topology
     */
    addressFamilyIpv6Multicast?: pulumi.Input<boolean>;
    /**
     * Unicast sub address family
     */
    addressFamilyIpv6Unicast?: pulumi.Input<boolean>;
    /**
     * Use route-policy for export
     */
    addressFamilyIpv6UnicastExportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv6UnicastExportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastExportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv6UnicastExportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastExportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastExportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Use route-policy for import filtering
     */
    addressFamilyIpv6UnicastImportRoutePolicy?: pulumi.Input<string>;
    /**
     * Four Byte AS number Route Target
     */
    addressFamilyIpv6UnicastImportRouteTargetFourByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastImportRouteTargetFourByteAsFormat>[]>;
    /**
     * IP address
     */
    addressFamilyIpv6UnicastImportRouteTargetIpAddressFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastImportRouteTargetIpAddressFormat>[]>;
    /**
     * Two Byte AS Number Route Target
     */
    addressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormats?: pulumi.Input<pulumi.Input<inputs.VrfAddressFamilyIpv6UnicastImportRouteTargetTwoByteAsFormat>[]>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A description for the VRF
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * 4-byte AS number
     */
    rdFourByteAsAsNumber?: pulumi.Input<string>;
    /**
     * ASN2:index (hex or decimal format) - Range: `0`-`4294967295`
     */
    rdFourByteAsIndex?: pulumi.Input<number>;
    /**
     * IPv4Address:index (hex or decimal format) - Range: `0`-`65535`
     */
    rdIpAddressIndex?: pulumi.Input<number>;
    /**
     * configure this node
     */
    rdIpAddressIpv4Address?: pulumi.Input<string>;
    /**
     * bgp as-number
     */
    rdTwoByteAsAsNumber?: pulumi.Input<string>;
    /**
     * ASN2:index (hex or decimal format) - Range: `0`-`4294967295`
     */
    rdTwoByteAsIndex?: pulumi.Input<number>;
    /**
     * VPN ID, (OUI:VPN-Index) format(hex), 4 bytes VPN_Index Part
     */
    vpnId?: pulumi.Input<string>;
    /**
     * VRF name
     */
    vrfName: pulumi.Input<string>;
}
