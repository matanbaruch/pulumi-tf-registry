// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServiceTimestamps(args?: GetServiceTimestampsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceTimestampsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getServiceTimestamps:getServiceTimestamps", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceTimestamps.
 */
export interface GetServiceTimestampsArgs {
    device?: string;
}

/**
 * A collection of values returned by getServiceTimestamps.
 */
export interface GetServiceTimestampsResult {
    readonly debugDatetimeLocaltime: boolean;
    readonly debugDatetimeLocaltimeOnly: boolean;
    readonly debugDatetimeMsec: boolean;
    readonly debugDatetimeShowTimezone: boolean;
    readonly debugDatetimeYear: boolean;
    readonly debugDisable: boolean;
    readonly debugUptime: boolean;
    readonly device?: string;
    readonly id: string;
    readonly logDatetimeLocaltime: boolean;
    readonly logDatetimeLocaltimeOnly: boolean;
    readonly logDatetimeMsec: boolean;
    readonly logDatetimeShowTimezone: boolean;
    readonly logDatetimeYear: boolean;
    readonly logDisable: boolean;
    readonly logUptime: boolean;
}
export function getServiceTimestampsOutput(args?: GetServiceTimestampsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceTimestampsResult> {
    return pulumi.output(args).apply((a: any) => getServiceTimestamps(a, opts))
}

/**
 * A collection of arguments for invoking getServiceTimestamps.
 */
export interface GetServiceTimestampsOutputArgs {
    device?: pulumi.Input<string>;
}
