// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterBgp(args: GetRouterBgpArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterBgpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRouterBgp:getRouterBgp", {
        "asNumber": args.asNumber,
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterBgp.
 */
export interface GetRouterBgpArgs {
    asNumber: string;
    device?: string;
}

/**
 * A collection of values returned by getRouterBgp.
 */
export interface GetRouterBgpResult {
    readonly asNumber: string;
    readonly bfdMinimumInterval: number;
    readonly bfdMultiplier: number;
    readonly bgpBestpathAigpIgnore: boolean;
    readonly bgpBestpathAsPathIgnore: boolean;
    readonly bgpBestpathAsPathMultipathRelax: boolean;
    readonly bgpBestpathCompareRouterid: boolean;
    readonly bgpBestpathCostCommunityIgnore: boolean;
    readonly bgpBestpathIgpMetricIgnore: boolean;
    readonly bgpBestpathIgpMetricSrPolicy: boolean;
    readonly bgpBestpathMedAlways: boolean;
    readonly bgpBestpathMedConfed: boolean;
    readonly bgpBestpathMedMissingAsWorst: boolean;
    readonly bgpBestpathOriginAsAllowInvalid: boolean;
    readonly bgpBestpathOriginAsUseValidity: boolean;
    readonly bgpBestpathSrPolicyForce: boolean;
    readonly bgpBestpathSrPolicyPrefer: boolean;
    readonly bgpGracefulRestartGracefulReset: boolean;
    readonly bgpLogNeighborChangesDetail: boolean;
    readonly bgpRedistributeInternal: boolean;
    readonly bgpRouterId: string;
    readonly defaultInformationOriginate: boolean;
    readonly defaultMetric: number;
    readonly device?: string;
    readonly ibgpPolicyOutEnforceModifications: boolean;
    readonly id: string;
    readonly neighbors: outputs.GetRouterBgpNeighbor[];
    readonly nexthopValidationColorExtcommDisable: boolean;
    readonly nexthopValidationColorExtcommSrPolicy: boolean;
    readonly nsrDisable: boolean;
    readonly segmentRoutingSrv6Locator: string;
    readonly timersBgpHoldtime: string;
    readonly timersBgpKeepaliveInterval: number;
    readonly timersBgpMinimumAcceptableHoldtime: string;
}
export function getRouterBgpOutput(args: GetRouterBgpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterBgpResult> {
    return pulumi.output(args).apply((a: any) => getRouterBgp(a, opts))
}

/**
 * A collection of arguments for invoking getRouterBgp.
 */
export interface GetRouterBgpOutputArgs {
    asNumber: pulumi.Input<string>;
    device?: pulumi.Input<string>;
}
