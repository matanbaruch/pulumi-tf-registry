// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMplsLdp(args?: GetMplsLdpArgs, opts?: pulumi.InvokeOptions): Promise<GetMplsLdpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getMplsLdp:getMplsLdp", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMplsLdp.
 */
export interface GetMplsLdpArgs {
    device?: string;
}

/**
 * A collection of values returned by getMplsLdp.
 */
export interface GetMplsLdpResult {
    readonly addressFamilies: outputs.GetMplsLdpAddressFamily[];
    readonly capabilitiesSacFec128Disable: boolean;
    readonly capabilitiesSacFec129Disable: boolean;
    readonly capabilitiesSacIpv4Disable: boolean;
    readonly capabilitiesSacIpv6Disable: boolean;
    readonly device?: string;
    readonly id: string;
    readonly igpSyncDelayOnProcRestart: number;
    readonly igpSyncDelayOnSessionUp: number;
    readonly interfaces: outputs.GetMplsLdpInterface[];
    readonly mldpAddressFamilies: outputs.GetMplsLdpMldpAddressFamily[];
    readonly mldpLoggingNotifications: boolean;
    readonly routerId: string;
    readonly sessionProtection: boolean;
}
export function getMplsLdpOutput(args?: GetMplsLdpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMplsLdpResult> {
    return pulumi.output(args).apply((a: any) => getMplsLdp(a, opts))
}

/**
 * A collection of arguments for invoking getMplsLdp.
 */
export interface GetMplsLdpOutputArgs {
    device?: pulumi.Input<string>;
}
