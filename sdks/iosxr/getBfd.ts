// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBfd(args?: GetBfdArgs, opts?: pulumi.InvokeOptions): Promise<GetBfdResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getBfd:getBfd", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBfd.
 */
export interface GetBfdArgs {
    device?: string;
}

/**
 * A collection of values returned by getBfd.
 */
export interface GetBfdResult {
    readonly bundleCoexistenceBobBlbInherit: boolean;
    readonly bundleCoexistenceBobBlbLogical: boolean;
    readonly dampeningBundleMemberInitialWait: number;
    readonly dampeningBundleMemberL3OnlyMode: boolean;
    readonly dampeningBundleMemberMaximumWait: number;
    readonly dampeningBundleMemberSecondaryWait: number;
    readonly dampeningDisable: boolean;
    readonly dampeningExtensionsDownMonitoring: boolean;
    readonly dampeningInitialWait: number;
    readonly dampeningMaximumWait: number;
    readonly dampeningSecondaryWait: number;
    readonly dampeningThreshold: number;
    readonly device?: string;
    readonly echoDisable: boolean;
    readonly echoIpv4BundlePerMemberPreferredMinimumInterval: number;
    readonly echoIpv4Source: string;
    readonly echoLatencyDetectCount: number;
    readonly echoLatencyDetectPercentage: number;
    readonly echoStartupValidateForce: boolean;
    readonly id: string;
    readonly interfaces: outputs.GetBfdInterface[];
    readonly ipv6ChecksumDisable: boolean;
    readonly multihopTtlDropThreshold: number;
    readonly multipathLocations: outputs.GetBfdMultipathLocation[];
    readonly trapSinglehopPreMapped: boolean;
}
export function getBfdOutput(args?: GetBfdOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBfdResult> {
    return pulumi.output(args).apply((a: any) => getBfd(a, opts))
}

/**
 * A collection of arguments for invoking getBfd.
 */
export interface GetBfdOutputArgs {
    device?: pulumi.Input<string>;
}
