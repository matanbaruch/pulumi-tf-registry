// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpv6PrefixList(args: GetIpv6PrefixListArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv6PrefixListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getIpv6PrefixList:getIpv6PrefixList", {
        "device": args.device,
        "prefixListName": args.prefixListName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv6PrefixList.
 */
export interface GetIpv6PrefixListArgs {
    device?: string;
    prefixListName: string;
}

/**
 * A collection of values returned by getIpv6PrefixList.
 */
export interface GetIpv6PrefixListResult {
    readonly device?: string;
    readonly id: string;
    readonly prefixListName: string;
    readonly sequences: outputs.GetIpv6PrefixListSequence[];
}
export function getIpv6PrefixListOutput(args: GetIpv6PrefixListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv6PrefixListResult> {
    return pulumi.output(args).apply((a: any) => getIpv6PrefixList(a, opts))
}

/**
 * A collection of arguments for invoking getIpv6PrefixList.
 */
export interface GetIpv6PrefixListOutputArgs {
    device?: pulumi.Input<string>;
    prefixListName: pulumi.Input<string>;
}
