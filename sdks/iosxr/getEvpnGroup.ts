// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEvpnGroup(args: GetEvpnGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetEvpnGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getEvpnGroup:getEvpnGroup", {
        "device": args.device,
        "groupId": args.groupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvpnGroup.
 */
export interface GetEvpnGroupArgs {
    device?: string;
    groupId: number;
}

/**
 * A collection of values returned by getEvpnGroup.
 */
export interface GetEvpnGroupResult {
    readonly coreInterfaces: outputs.GetEvpnGroupCoreInterface[];
    readonly device?: string;
    readonly groupId: number;
    readonly id: string;
}
export function getEvpnGroupOutput(args: GetEvpnGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvpnGroupResult> {
    return pulumi.output(args).apply((a: any) => getEvpnGroup(a, opts))
}

/**
 * A collection of arguments for invoking getEvpnGroup.
 */
export interface GetEvpnGroupOutputArgs {
    device?: pulumi.Input<string>;
    groupId: pulumi.Input<number>;
}
