// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpv6AccessList(args: GetIpv6AccessListArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv6AccessListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getIpv6AccessList:getIpv6AccessList", {
        "accessListName": args.accessListName,
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv6AccessList.
 */
export interface GetIpv6AccessListArgs {
    accessListName: string;
    device?: string;
}

/**
 * A collection of values returned by getIpv6AccessList.
 */
export interface GetIpv6AccessListResult {
    readonly accessListName: string;
    readonly device?: string;
    readonly id: string;
    readonly sequences: outputs.GetIpv6AccessListSequence[];
}
export function getIpv6AccessListOutput(args: GetIpv6AccessListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv6AccessListResult> {
    return pulumi.output(args).apply((a: any) => getIpv6AccessList(a, opts))
}

/**
 * A collection of arguments for invoking getIpv6AccessList.
 */
export interface GetIpv6AccessListOutputArgs {
    accessListName: pulumi.Input<string>;
    device?: pulumi.Input<string>;
}
