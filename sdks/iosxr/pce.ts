// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Pce extends pulumi.CustomResource {
    /**
     * Get an existing Pce resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PceState, opts?: pulumi.CustomResourceOptions): Pce {
        return new Pce(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/pce:Pce';

    /**
     * Returns true if the given object is an instance of Pce.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pce {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pce.__pulumiType;
    }

    /**
     * IPv4 address
     */
    public readonly addressIpv4!: pulumi.Output<string | undefined>;
    /**
     * IPv6 address
     */
    public readonly addressIpv6!: pulumi.Output<string | undefined>;
    /**
     * Use HTTP Digest authentication (MD5)
     */
    public readonly apiAuthenticationDigest!: pulumi.Output<boolean | undefined>;
    /**
     * IPv4 address of the PCE sibling
     */
    public readonly apiSiblingIpv4!: pulumi.Output<string | undefined>;
    /**
     * Northbound API username
     */
    public readonly apiUsers!: pulumi.Output<outputs.PceApiUser[] | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Access-list for IPv4 peer filtering
     */
    public readonly peerFilterIpv4AccessList!: pulumi.Output<string | undefined>;
    /**
     * IPv4 address
     */
    public readonly stateSyncIpv4s!: pulumi.Output<outputs.PceStateSyncIpv4[] | undefined>;

    /**
     * Create a Pce resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PceArgs | PceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PceState | undefined;
            resourceInputs["addressIpv4"] = state ? state.addressIpv4 : undefined;
            resourceInputs["addressIpv6"] = state ? state.addressIpv6 : undefined;
            resourceInputs["apiAuthenticationDigest"] = state ? state.apiAuthenticationDigest : undefined;
            resourceInputs["apiSiblingIpv4"] = state ? state.apiSiblingIpv4 : undefined;
            resourceInputs["apiUsers"] = state ? state.apiUsers : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["peerFilterIpv4AccessList"] = state ? state.peerFilterIpv4AccessList : undefined;
            resourceInputs["stateSyncIpv4s"] = state ? state.stateSyncIpv4s : undefined;
        } else {
            const args = argsOrState as PceArgs | undefined;
            resourceInputs["addressIpv4"] = args ? args.addressIpv4 : undefined;
            resourceInputs["addressIpv6"] = args ? args.addressIpv6 : undefined;
            resourceInputs["apiAuthenticationDigest"] = args ? args.apiAuthenticationDigest : undefined;
            resourceInputs["apiSiblingIpv4"] = args ? args.apiSiblingIpv4 : undefined;
            resourceInputs["apiUsers"] = args ? args.apiUsers : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["peerFilterIpv4AccessList"] = args ? args.peerFilterIpv4AccessList : undefined;
            resourceInputs["stateSyncIpv4s"] = args ? args.stateSyncIpv4s : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Pce.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Pce resources.
 */
export interface PceState {
    /**
     * IPv4 address
     */
    addressIpv4?: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    addressIpv6?: pulumi.Input<string>;
    /**
     * Use HTTP Digest authentication (MD5)
     */
    apiAuthenticationDigest?: pulumi.Input<boolean>;
    /**
     * IPv4 address of the PCE sibling
     */
    apiSiblingIpv4?: pulumi.Input<string>;
    /**
     * Northbound API username
     */
    apiUsers?: pulumi.Input<pulumi.Input<inputs.PceApiUser>[]>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Access-list for IPv4 peer filtering
     */
    peerFilterIpv4AccessList?: pulumi.Input<string>;
    /**
     * IPv4 address
     */
    stateSyncIpv4s?: pulumi.Input<pulumi.Input<inputs.PceStateSyncIpv4>[]>;
}

/**
 * The set of arguments for constructing a Pce resource.
 */
export interface PceArgs {
    /**
     * IPv4 address
     */
    addressIpv4?: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    addressIpv6?: pulumi.Input<string>;
    /**
     * Use HTTP Digest authentication (MD5)
     */
    apiAuthenticationDigest?: pulumi.Input<boolean>;
    /**
     * IPv4 address of the PCE sibling
     */
    apiSiblingIpv4?: pulumi.Input<string>;
    /**
     * Northbound API username
     */
    apiUsers?: pulumi.Input<pulumi.Input<inputs.PceApiUser>[]>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Access-list for IPv4 peer filtering
     */
    peerFilterIpv4AccessList?: pulumi.Input<string>;
    /**
     * IPv4 address
     */
    stateSyncIpv4s?: pulumi.Input<pulumi.Input<inputs.PceStateSyncIpv4>[]>;
}
