// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ClassMapQos extends pulumi.CustomResource {
    /**
     * Get an existing ClassMapQos resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClassMapQosState, opts?: pulumi.CustomResourceOptions): ClassMapQos {
        return new ClassMapQos(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/classMapQos:ClassMapQos';

    /**
     * Returns true if the given object is an instance of ClassMapQos.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClassMapQos {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClassMapQos.__pulumiType;
    }

    /**
     * Name of the class-map
     */
    public readonly classMapName!: pulumi.Output<string>;
    /**
     * Set description for this class-map
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Match any match criteria (default)
     */
    public readonly matchAny!: pulumi.Output<boolean | undefined>;
    /**
     * DSCP value
     */
    public readonly matchDscps!: pulumi.Output<string[] | undefined>;
    /**
     * MPLS experimental label
     */
    public readonly matchMplsExperimentalTopmosts!: pulumi.Output<number[] | undefined>;
    /**
     * QoS Group Id
     */
    public readonly matchQosGroups!: pulumi.Output<string[] | undefined>;
    /**
     * Traffic Class Id
     */
    public readonly matchTrafficClasses!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ClassMapQos resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClassMapQosArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClassMapQosArgs | ClassMapQosState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClassMapQosState | undefined;
            resourceInputs["classMapName"] = state ? state.classMapName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["matchAny"] = state ? state.matchAny : undefined;
            resourceInputs["matchDscps"] = state ? state.matchDscps : undefined;
            resourceInputs["matchMplsExperimentalTopmosts"] = state ? state.matchMplsExperimentalTopmosts : undefined;
            resourceInputs["matchQosGroups"] = state ? state.matchQosGroups : undefined;
            resourceInputs["matchTrafficClasses"] = state ? state.matchTrafficClasses : undefined;
        } else {
            const args = argsOrState as ClassMapQosArgs | undefined;
            if ((!args || args.classMapName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'classMapName'");
            }
            resourceInputs["classMapName"] = args ? args.classMapName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["matchAny"] = args ? args.matchAny : undefined;
            resourceInputs["matchDscps"] = args ? args.matchDscps : undefined;
            resourceInputs["matchMplsExperimentalTopmosts"] = args ? args.matchMplsExperimentalTopmosts : undefined;
            resourceInputs["matchQosGroups"] = args ? args.matchQosGroups : undefined;
            resourceInputs["matchTrafficClasses"] = args ? args.matchTrafficClasses : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClassMapQos.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ClassMapQos resources.
 */
export interface ClassMapQosState {
    /**
     * Name of the class-map
     */
    classMapName?: pulumi.Input<string>;
    /**
     * Set description for this class-map
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Match any match criteria (default)
     */
    matchAny?: pulumi.Input<boolean>;
    /**
     * DSCP value
     */
    matchDscps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * MPLS experimental label
     */
    matchMplsExperimentalTopmosts?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * QoS Group Id
     */
    matchQosGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Traffic Class Id
     */
    matchTrafficClasses?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ClassMapQos resource.
 */
export interface ClassMapQosArgs {
    /**
     * Name of the class-map
     */
    classMapName: pulumi.Input<string>;
    /**
     * Set description for this class-map
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Match any match criteria (default)
     */
    matchAny?: pulumi.Input<boolean>;
    /**
     * DSCP value
     */
    matchDscps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * MPLS experimental label
     */
    matchMplsExperimentalTopmosts?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * QoS Group Id
     */
    matchQosGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Traffic Class Id
     */
    matchTrafficClasses?: pulumi.Input<pulumi.Input<string>[]>;
}
