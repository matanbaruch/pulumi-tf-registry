// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicyMapQos(args: GetPolicyMapQosArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyMapQosResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getPolicyMapQos:getPolicyMapQos", {
        "device": args.device,
        "policyMapName": args.policyMapName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyMapQos.
 */
export interface GetPolicyMapQosArgs {
    device?: string;
    policyMapName: string;
}

/**
 * A collection of values returned by getPolicyMapQos.
 */
export interface GetPolicyMapQosResult {
    readonly classes: outputs.GetPolicyMapQosClass[];
    readonly description: string;
    readonly device?: string;
    readonly id: string;
    readonly policyMapName: string;
}
export function getPolicyMapQosOutput(args: GetPolicyMapQosOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyMapQosResult> {
    return pulumi.output(args).apply((a: any) => getPolicyMapQos(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyMapQos.
 */
export interface GetPolicyMapQosOutputArgs {
    device?: pulumi.Input<string>;
    policyMapName: pulumi.Input<string>;
}
