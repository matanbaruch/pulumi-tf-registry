// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterVrrpInterfaceIpv4(args: GetRouterVrrpInterfaceIpv4Args, opts?: pulumi.InvokeOptions): Promise<GetRouterVrrpInterfaceIpv4Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRouterVrrpInterfaceIpv4:getRouterVrrpInterfaceIpv4", {
        "device": args.device,
        "interfaceName": args.interfaceName,
        "version": args.version,
        "vrrpId": args.vrrpId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterVrrpInterfaceIpv4.
 */
export interface GetRouterVrrpInterfaceIpv4Args {
    device?: string;
    interfaceName: string;
    version: number;
    vrrpId: number;
}

/**
 * A collection of values returned by getRouterVrrpInterfaceIpv4.
 */
export interface GetRouterVrrpInterfaceIpv4Result {
    readonly acceptModeDisable: boolean;
    readonly address: string;
    readonly bfdFastDetectPeerIpv4: string;
    readonly device?: string;
    readonly id: string;
    readonly interfaceName: string;
    readonly name: string;
    readonly preemptDelay: number;
    readonly preemptDisable: boolean;
    readonly priority: number;
    readonly secondaryAddresses: outputs.GetRouterVrrpInterfaceIpv4SecondaryAddress[];
    readonly textAuthentication: string;
    readonly timerAdvertisementMilliseconds: number;
    readonly timerAdvertisementSeconds: number;
    readonly timerForce: boolean;
    readonly trackInterfaces: outputs.GetRouterVrrpInterfaceIpv4TrackInterface[];
    readonly trackObjects: outputs.GetRouterVrrpInterfaceIpv4TrackObject[];
    readonly version: number;
    readonly vrrpId: number;
}
export function getRouterVrrpInterfaceIpv4Output(args: GetRouterVrrpInterfaceIpv4OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterVrrpInterfaceIpv4Result> {
    return pulumi.output(args).apply((a: any) => getRouterVrrpInterfaceIpv4(a, opts))
}

/**
 * A collection of arguments for invoking getRouterVrrpInterfaceIpv4.
 */
export interface GetRouterVrrpInterfaceIpv4OutputArgs {
    device?: pulumi.Input<string>;
    interfaceName: pulumi.Input<string>;
    version: pulumi.Input<number>;
    vrrpId: pulumi.Input<number>;
}
