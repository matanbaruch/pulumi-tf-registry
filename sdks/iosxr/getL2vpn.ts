// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getL2vpn(args?: GetL2vpnArgs, opts?: pulumi.InvokeOptions): Promise<GetL2vpnResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getL2vpn:getL2vpn", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getL2vpn.
 */
export interface GetL2vpnArgs {
    device?: string;
}

/**
 * A collection of values returned by getL2vpn.
 */
export interface GetL2vpnResult {
    readonly description: string;
    readonly device?: string;
    readonly id: string;
    readonly loadBalancingFlowSrcDstIp: boolean;
    readonly loadBalancingFlowSrcDstMac: boolean;
    readonly routerId: string;
    readonly xconnectGroups: outputs.GetL2vpnXconnectGroup[];
}
export function getL2vpnOutput(args?: GetL2vpnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL2vpnResult> {
    return pulumi.output(args).apply((a: any) => getL2vpn(a, opts))
}

/**
 * A collection of arguments for invoking getL2vpn.
 */
export interface GetL2vpnOutputArgs {
    device?: pulumi.Input<string>;
}
