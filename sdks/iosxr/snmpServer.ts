// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SnmpServer extends pulumi.CustomResource {
    /**
     * Get an existing SnmpServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnmpServerState, opts?: pulumi.CustomResourceOptions): SnmpServer {
        return new SnmpServer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/snmpServer:SnmpServer';

    /**
     * Returns true if the given object is an instance of SnmpServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnmpServer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnmpServer.__pulumiType;
    }

    /**
     * The UNENCRYPTED (cleartext) community string
     */
    public readonly communities!: pulumi.Output<outputs.SnmpServerCommunity[] | undefined>;
    /**
     * Text for mib Object sysContact
     */
    public readonly contact!: pulumi.Output<string | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Name of the group
     */
    public readonly groups!: pulumi.Output<outputs.SnmpServerGroup[] | undefined>;
    /**
     * Text for mib Object sysLocation
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Assign an interface for the source address of all traps
     */
    public readonly trapSourceBoth!: pulumi.Output<string | undefined>;
    /**
     * Enable BFD traps
     */
    public readonly trapsBfd!: pulumi.Output<boolean | undefined>;
    /**
     * Enable CISCO-BGP4-MIB v2 up/down traps
     */
    public readonly trapsBgpBgp4MibUpdown!: pulumi.Output<boolean | undefined>;
    /**
     * Enable CISCO-BGP4-MIB v2 up/down traps
     */
    public readonly trapsBgpCbgp2Updown!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP Trap for Bridge MIB
     */
    public readonly trapsBridgemib!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP config traps
     */
    public readonly trapsConfig!: pulumi.Output<boolean | undefined>;
    /**
     * Enable CISCO-CONFIG-COPY-MIB ccCopyCompletion traps
     */
    public readonly trapsCopyComplete!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP entity traps
     */
    public readonly trapsEntity!: pulumi.Output<boolean | undefined>;
    /**
     * Enable all CISCO-ENTITY-REDUNDANCY-MIB traps
     */
    public readonly trapsEntityRedundancyAll!: pulumi.Output<boolean | undefined>;
    /**
     * Enable entity oper status enable notification
     */
    public readonly trapsEntityStateOperstatus!: pulumi.Output<boolean | undefined>;
    /**
     * Enable all OAM event traps
     */
    public readonly trapsEthernetOamEvents!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP entity FRU control traps
     */
    public readonly trapsFruCtrl!: pulumi.Output<boolean | undefined>;
    /**
     * isisAdjacencyChange - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisAdjacencyChange!: pulumi.Output<string>;
    /**
     * Enable all IS-IS traps - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisAll!: pulumi.Output<string>;
    /**
     * isisAreaMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisAreaMismatch!: pulumi.Output<string>;
    /**
     * isisAttemptToExceedMaxSequence - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisAttemptToExceedMaxSequence!: pulumi.Output<string>;
    /**
     * isisAuthenticationFailure - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisAuthenticationFailure!: pulumi.Output<string>;
    /**
     * isisAuthenticationTypeFailure - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisAuthenticationTypeFailure!: pulumi.Output<string>;
    /**
     * isisCorruptedLSPDetected - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisCorruptedLspDetected!: pulumi.Output<string>;
    /**
     * isisDatabaseOverload - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisDatabaseOverload!: pulumi.Output<string>;
    /**
     * isisIDLenMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisIdLenMismatch!: pulumi.Output<string>;
    /**
     * isisLSPErrorDetected - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisLspErrorDetected!: pulumi.Output<string>;
    /**
     * isisLSPTooLargeToPropagate - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisLspTooLargeToPropagate!: pulumi.Output<string>;
    /**
     * isisManualAddressDrops - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisManualAddressDrops!: pulumi.Output<string>;
    /**
     * isisMaxAreaAddressesMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisMaxAreaAddressesMismatch!: pulumi.Output<string>;
    /**
     * isisOrigLSPBuffSizeMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisOrigLspBuffSizeMismatch!: pulumi.Output<string>;
    /**
     * isisOwnLSPPurge - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisOwnLspPurge!: pulumi.Output<string>;
    /**
     * isisProtocolsSupportedMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisProtocolsSupportedMismatch!: pulumi.Output<string>;
    /**
     * isisRejectedAdjacency - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisRejectedAdjacency!: pulumi.Output<string>;
    /**
     * isisSequenceNumberSkip - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisSequenceNumberSkip!: pulumi.Output<string>;
    /**
     * isisVersionSkew - Choices: `disable`, `enable` - Default value: `disable`
     */
    public readonly trapsIsisVersionSkew!: pulumi.Output<string>;
    /**
     * Enable all L2VPN traps
     */
    public readonly trapsL2vpnAll!: pulumi.Output<boolean | undefined>;
    /**
     * Enable VC down traps
     */
    public readonly trapsL2vpnVcDown!: pulumi.Output<boolean | undefined>;
    /**
     * Enable VC up traps
     */
    public readonly trapsL2vpnVcUp!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP Cisco Ntp traps
     */
    public readonly trapsNtp!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP entity power traps
     */
    public readonly trapsPower!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP RF-MIB traps
     */
    public readonly trapsRf!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP entity sensor traps
     */
    public readonly trapsSensor!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMPv2-MIB linDownp traps
     */
    public readonly trapsSnmpLinkdown!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMPv2-MIB linkUp traps
     */
    public readonly trapsSnmpLinkup!: pulumi.Output<boolean | undefined>;
    /**
     * Enable SNMP SYSTEMMIB-MIB traps
     */
    public readonly trapsSystem!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the user
     */
    public readonly users!: pulumi.Output<outputs.SnmpServerUser[] | undefined>;

    /**
     * Create a SnmpServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SnmpServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnmpServerArgs | SnmpServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnmpServerState | undefined;
            resourceInputs["communities"] = state ? state.communities : undefined;
            resourceInputs["contact"] = state ? state.contact : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["trapSourceBoth"] = state ? state.trapSourceBoth : undefined;
            resourceInputs["trapsBfd"] = state ? state.trapsBfd : undefined;
            resourceInputs["trapsBgpBgp4MibUpdown"] = state ? state.trapsBgpBgp4MibUpdown : undefined;
            resourceInputs["trapsBgpCbgp2Updown"] = state ? state.trapsBgpCbgp2Updown : undefined;
            resourceInputs["trapsBridgemib"] = state ? state.trapsBridgemib : undefined;
            resourceInputs["trapsConfig"] = state ? state.trapsConfig : undefined;
            resourceInputs["trapsCopyComplete"] = state ? state.trapsCopyComplete : undefined;
            resourceInputs["trapsEntity"] = state ? state.trapsEntity : undefined;
            resourceInputs["trapsEntityRedundancyAll"] = state ? state.trapsEntityRedundancyAll : undefined;
            resourceInputs["trapsEntityStateOperstatus"] = state ? state.trapsEntityStateOperstatus : undefined;
            resourceInputs["trapsEthernetOamEvents"] = state ? state.trapsEthernetOamEvents : undefined;
            resourceInputs["trapsFruCtrl"] = state ? state.trapsFruCtrl : undefined;
            resourceInputs["trapsIsisAdjacencyChange"] = state ? state.trapsIsisAdjacencyChange : undefined;
            resourceInputs["trapsIsisAll"] = state ? state.trapsIsisAll : undefined;
            resourceInputs["trapsIsisAreaMismatch"] = state ? state.trapsIsisAreaMismatch : undefined;
            resourceInputs["trapsIsisAttemptToExceedMaxSequence"] = state ? state.trapsIsisAttemptToExceedMaxSequence : undefined;
            resourceInputs["trapsIsisAuthenticationFailure"] = state ? state.trapsIsisAuthenticationFailure : undefined;
            resourceInputs["trapsIsisAuthenticationTypeFailure"] = state ? state.trapsIsisAuthenticationTypeFailure : undefined;
            resourceInputs["trapsIsisCorruptedLspDetected"] = state ? state.trapsIsisCorruptedLspDetected : undefined;
            resourceInputs["trapsIsisDatabaseOverload"] = state ? state.trapsIsisDatabaseOverload : undefined;
            resourceInputs["trapsIsisIdLenMismatch"] = state ? state.trapsIsisIdLenMismatch : undefined;
            resourceInputs["trapsIsisLspErrorDetected"] = state ? state.trapsIsisLspErrorDetected : undefined;
            resourceInputs["trapsIsisLspTooLargeToPropagate"] = state ? state.trapsIsisLspTooLargeToPropagate : undefined;
            resourceInputs["trapsIsisManualAddressDrops"] = state ? state.trapsIsisManualAddressDrops : undefined;
            resourceInputs["trapsIsisMaxAreaAddressesMismatch"] = state ? state.trapsIsisMaxAreaAddressesMismatch : undefined;
            resourceInputs["trapsIsisOrigLspBuffSizeMismatch"] = state ? state.trapsIsisOrigLspBuffSizeMismatch : undefined;
            resourceInputs["trapsIsisOwnLspPurge"] = state ? state.trapsIsisOwnLspPurge : undefined;
            resourceInputs["trapsIsisProtocolsSupportedMismatch"] = state ? state.trapsIsisProtocolsSupportedMismatch : undefined;
            resourceInputs["trapsIsisRejectedAdjacency"] = state ? state.trapsIsisRejectedAdjacency : undefined;
            resourceInputs["trapsIsisSequenceNumberSkip"] = state ? state.trapsIsisSequenceNumberSkip : undefined;
            resourceInputs["trapsIsisVersionSkew"] = state ? state.trapsIsisVersionSkew : undefined;
            resourceInputs["trapsL2vpnAll"] = state ? state.trapsL2vpnAll : undefined;
            resourceInputs["trapsL2vpnVcDown"] = state ? state.trapsL2vpnVcDown : undefined;
            resourceInputs["trapsL2vpnVcUp"] = state ? state.trapsL2vpnVcUp : undefined;
            resourceInputs["trapsNtp"] = state ? state.trapsNtp : undefined;
            resourceInputs["trapsPower"] = state ? state.trapsPower : undefined;
            resourceInputs["trapsRf"] = state ? state.trapsRf : undefined;
            resourceInputs["trapsSensor"] = state ? state.trapsSensor : undefined;
            resourceInputs["trapsSnmpLinkdown"] = state ? state.trapsSnmpLinkdown : undefined;
            resourceInputs["trapsSnmpLinkup"] = state ? state.trapsSnmpLinkup : undefined;
            resourceInputs["trapsSystem"] = state ? state.trapsSystem : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as SnmpServerArgs | undefined;
            resourceInputs["communities"] = args ? args.communities : undefined;
            resourceInputs["contact"] = args ? args.contact : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["trapSourceBoth"] = args ? args.trapSourceBoth : undefined;
            resourceInputs["trapsBfd"] = args ? args.trapsBfd : undefined;
            resourceInputs["trapsBgpBgp4MibUpdown"] = args ? args.trapsBgpBgp4MibUpdown : undefined;
            resourceInputs["trapsBgpCbgp2Updown"] = args ? args.trapsBgpCbgp2Updown : undefined;
            resourceInputs["trapsBridgemib"] = args ? args.trapsBridgemib : undefined;
            resourceInputs["trapsConfig"] = args ? args.trapsConfig : undefined;
            resourceInputs["trapsCopyComplete"] = args ? args.trapsCopyComplete : undefined;
            resourceInputs["trapsEntity"] = args ? args.trapsEntity : undefined;
            resourceInputs["trapsEntityRedundancyAll"] = args ? args.trapsEntityRedundancyAll : undefined;
            resourceInputs["trapsEntityStateOperstatus"] = args ? args.trapsEntityStateOperstatus : undefined;
            resourceInputs["trapsEthernetOamEvents"] = args ? args.trapsEthernetOamEvents : undefined;
            resourceInputs["trapsFruCtrl"] = args ? args.trapsFruCtrl : undefined;
            resourceInputs["trapsIsisAdjacencyChange"] = args ? args.trapsIsisAdjacencyChange : undefined;
            resourceInputs["trapsIsisAll"] = args ? args.trapsIsisAll : undefined;
            resourceInputs["trapsIsisAreaMismatch"] = args ? args.trapsIsisAreaMismatch : undefined;
            resourceInputs["trapsIsisAttemptToExceedMaxSequence"] = args ? args.trapsIsisAttemptToExceedMaxSequence : undefined;
            resourceInputs["trapsIsisAuthenticationFailure"] = args ? args.trapsIsisAuthenticationFailure : undefined;
            resourceInputs["trapsIsisAuthenticationTypeFailure"] = args ? args.trapsIsisAuthenticationTypeFailure : undefined;
            resourceInputs["trapsIsisCorruptedLspDetected"] = args ? args.trapsIsisCorruptedLspDetected : undefined;
            resourceInputs["trapsIsisDatabaseOverload"] = args ? args.trapsIsisDatabaseOverload : undefined;
            resourceInputs["trapsIsisIdLenMismatch"] = args ? args.trapsIsisIdLenMismatch : undefined;
            resourceInputs["trapsIsisLspErrorDetected"] = args ? args.trapsIsisLspErrorDetected : undefined;
            resourceInputs["trapsIsisLspTooLargeToPropagate"] = args ? args.trapsIsisLspTooLargeToPropagate : undefined;
            resourceInputs["trapsIsisManualAddressDrops"] = args ? args.trapsIsisManualAddressDrops : undefined;
            resourceInputs["trapsIsisMaxAreaAddressesMismatch"] = args ? args.trapsIsisMaxAreaAddressesMismatch : undefined;
            resourceInputs["trapsIsisOrigLspBuffSizeMismatch"] = args ? args.trapsIsisOrigLspBuffSizeMismatch : undefined;
            resourceInputs["trapsIsisOwnLspPurge"] = args ? args.trapsIsisOwnLspPurge : undefined;
            resourceInputs["trapsIsisProtocolsSupportedMismatch"] = args ? args.trapsIsisProtocolsSupportedMismatch : undefined;
            resourceInputs["trapsIsisRejectedAdjacency"] = args ? args.trapsIsisRejectedAdjacency : undefined;
            resourceInputs["trapsIsisSequenceNumberSkip"] = args ? args.trapsIsisSequenceNumberSkip : undefined;
            resourceInputs["trapsIsisVersionSkew"] = args ? args.trapsIsisVersionSkew : undefined;
            resourceInputs["trapsL2vpnAll"] = args ? args.trapsL2vpnAll : undefined;
            resourceInputs["trapsL2vpnVcDown"] = args ? args.trapsL2vpnVcDown : undefined;
            resourceInputs["trapsL2vpnVcUp"] = args ? args.trapsL2vpnVcUp : undefined;
            resourceInputs["trapsNtp"] = args ? args.trapsNtp : undefined;
            resourceInputs["trapsPower"] = args ? args.trapsPower : undefined;
            resourceInputs["trapsRf"] = args ? args.trapsRf : undefined;
            resourceInputs["trapsSensor"] = args ? args.trapsSensor : undefined;
            resourceInputs["trapsSnmpLinkdown"] = args ? args.trapsSnmpLinkdown : undefined;
            resourceInputs["trapsSnmpLinkup"] = args ? args.trapsSnmpLinkup : undefined;
            resourceInputs["trapsSystem"] = args ? args.trapsSystem : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnmpServer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SnmpServer resources.
 */
export interface SnmpServerState {
    /**
     * The UNENCRYPTED (cleartext) community string
     */
    communities?: pulumi.Input<pulumi.Input<inputs.SnmpServerCommunity>[]>;
    /**
     * Text for mib Object sysContact
     */
    contact?: pulumi.Input<string>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Name of the group
     */
    groups?: pulumi.Input<pulumi.Input<inputs.SnmpServerGroup>[]>;
    /**
     * Text for mib Object sysLocation
     */
    location?: pulumi.Input<string>;
    /**
     * Assign an interface for the source address of all traps
     */
    trapSourceBoth?: pulumi.Input<string>;
    /**
     * Enable BFD traps
     */
    trapsBfd?: pulumi.Input<boolean>;
    /**
     * Enable CISCO-BGP4-MIB v2 up/down traps
     */
    trapsBgpBgp4MibUpdown?: pulumi.Input<boolean>;
    /**
     * Enable CISCO-BGP4-MIB v2 up/down traps
     */
    trapsBgpCbgp2Updown?: pulumi.Input<boolean>;
    /**
     * Enable SNMP Trap for Bridge MIB
     */
    trapsBridgemib?: pulumi.Input<boolean>;
    /**
     * Enable SNMP config traps
     */
    trapsConfig?: pulumi.Input<boolean>;
    /**
     * Enable CISCO-CONFIG-COPY-MIB ccCopyCompletion traps
     */
    trapsCopyComplete?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity traps
     */
    trapsEntity?: pulumi.Input<boolean>;
    /**
     * Enable all CISCO-ENTITY-REDUNDANCY-MIB traps
     */
    trapsEntityRedundancyAll?: pulumi.Input<boolean>;
    /**
     * Enable entity oper status enable notification
     */
    trapsEntityStateOperstatus?: pulumi.Input<boolean>;
    /**
     * Enable all OAM event traps
     */
    trapsEthernetOamEvents?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity FRU control traps
     */
    trapsFruCtrl?: pulumi.Input<boolean>;
    /**
     * isisAdjacencyChange - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAdjacencyChange?: pulumi.Input<string>;
    /**
     * Enable all IS-IS traps - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAll?: pulumi.Input<string>;
    /**
     * isisAreaMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAreaMismatch?: pulumi.Input<string>;
    /**
     * isisAttemptToExceedMaxSequence - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAttemptToExceedMaxSequence?: pulumi.Input<string>;
    /**
     * isisAuthenticationFailure - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAuthenticationFailure?: pulumi.Input<string>;
    /**
     * isisAuthenticationTypeFailure - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAuthenticationTypeFailure?: pulumi.Input<string>;
    /**
     * isisCorruptedLSPDetected - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisCorruptedLspDetected?: pulumi.Input<string>;
    /**
     * isisDatabaseOverload - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisDatabaseOverload?: pulumi.Input<string>;
    /**
     * isisIDLenMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisIdLenMismatch?: pulumi.Input<string>;
    /**
     * isisLSPErrorDetected - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisLspErrorDetected?: pulumi.Input<string>;
    /**
     * isisLSPTooLargeToPropagate - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisLspTooLargeToPropagate?: pulumi.Input<string>;
    /**
     * isisManualAddressDrops - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisManualAddressDrops?: pulumi.Input<string>;
    /**
     * isisMaxAreaAddressesMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisMaxAreaAddressesMismatch?: pulumi.Input<string>;
    /**
     * isisOrigLSPBuffSizeMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisOrigLspBuffSizeMismatch?: pulumi.Input<string>;
    /**
     * isisOwnLSPPurge - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisOwnLspPurge?: pulumi.Input<string>;
    /**
     * isisProtocolsSupportedMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisProtocolsSupportedMismatch?: pulumi.Input<string>;
    /**
     * isisRejectedAdjacency - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisRejectedAdjacency?: pulumi.Input<string>;
    /**
     * isisSequenceNumberSkip - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisSequenceNumberSkip?: pulumi.Input<string>;
    /**
     * isisVersionSkew - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisVersionSkew?: pulumi.Input<string>;
    /**
     * Enable all L2VPN traps
     */
    trapsL2vpnAll?: pulumi.Input<boolean>;
    /**
     * Enable VC down traps
     */
    trapsL2vpnVcDown?: pulumi.Input<boolean>;
    /**
     * Enable VC up traps
     */
    trapsL2vpnVcUp?: pulumi.Input<boolean>;
    /**
     * Enable SNMP Cisco Ntp traps
     */
    trapsNtp?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity power traps
     */
    trapsPower?: pulumi.Input<boolean>;
    /**
     * Enable SNMP RF-MIB traps
     */
    trapsRf?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity sensor traps
     */
    trapsSensor?: pulumi.Input<boolean>;
    /**
     * Enable SNMPv2-MIB linDownp traps
     */
    trapsSnmpLinkdown?: pulumi.Input<boolean>;
    /**
     * Enable SNMPv2-MIB linkUp traps
     */
    trapsSnmpLinkup?: pulumi.Input<boolean>;
    /**
     * Enable SNMP SYSTEMMIB-MIB traps
     */
    trapsSystem?: pulumi.Input<boolean>;
    /**
     * Name of the user
     */
    users?: pulumi.Input<pulumi.Input<inputs.SnmpServerUser>[]>;
}

/**
 * The set of arguments for constructing a SnmpServer resource.
 */
export interface SnmpServerArgs {
    /**
     * The UNENCRYPTED (cleartext) community string
     */
    communities?: pulumi.Input<pulumi.Input<inputs.SnmpServerCommunity>[]>;
    /**
     * Text for mib Object sysContact
     */
    contact?: pulumi.Input<string>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Name of the group
     */
    groups?: pulumi.Input<pulumi.Input<inputs.SnmpServerGroup>[]>;
    /**
     * Text for mib Object sysLocation
     */
    location?: pulumi.Input<string>;
    /**
     * Assign an interface for the source address of all traps
     */
    trapSourceBoth?: pulumi.Input<string>;
    /**
     * Enable BFD traps
     */
    trapsBfd?: pulumi.Input<boolean>;
    /**
     * Enable CISCO-BGP4-MIB v2 up/down traps
     */
    trapsBgpBgp4MibUpdown?: pulumi.Input<boolean>;
    /**
     * Enable CISCO-BGP4-MIB v2 up/down traps
     */
    trapsBgpCbgp2Updown?: pulumi.Input<boolean>;
    /**
     * Enable SNMP Trap for Bridge MIB
     */
    trapsBridgemib?: pulumi.Input<boolean>;
    /**
     * Enable SNMP config traps
     */
    trapsConfig?: pulumi.Input<boolean>;
    /**
     * Enable CISCO-CONFIG-COPY-MIB ccCopyCompletion traps
     */
    trapsCopyComplete?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity traps
     */
    trapsEntity?: pulumi.Input<boolean>;
    /**
     * Enable all CISCO-ENTITY-REDUNDANCY-MIB traps
     */
    trapsEntityRedundancyAll?: pulumi.Input<boolean>;
    /**
     * Enable entity oper status enable notification
     */
    trapsEntityStateOperstatus?: pulumi.Input<boolean>;
    /**
     * Enable all OAM event traps
     */
    trapsEthernetOamEvents?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity FRU control traps
     */
    trapsFruCtrl?: pulumi.Input<boolean>;
    /**
     * isisAdjacencyChange - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAdjacencyChange?: pulumi.Input<string>;
    /**
     * Enable all IS-IS traps - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAll?: pulumi.Input<string>;
    /**
     * isisAreaMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAreaMismatch?: pulumi.Input<string>;
    /**
     * isisAttemptToExceedMaxSequence - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAttemptToExceedMaxSequence?: pulumi.Input<string>;
    /**
     * isisAuthenticationFailure - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAuthenticationFailure?: pulumi.Input<string>;
    /**
     * isisAuthenticationTypeFailure - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisAuthenticationTypeFailure?: pulumi.Input<string>;
    /**
     * isisCorruptedLSPDetected - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisCorruptedLspDetected?: pulumi.Input<string>;
    /**
     * isisDatabaseOverload - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisDatabaseOverload?: pulumi.Input<string>;
    /**
     * isisIDLenMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisIdLenMismatch?: pulumi.Input<string>;
    /**
     * isisLSPErrorDetected - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisLspErrorDetected?: pulumi.Input<string>;
    /**
     * isisLSPTooLargeToPropagate - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisLspTooLargeToPropagate?: pulumi.Input<string>;
    /**
     * isisManualAddressDrops - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisManualAddressDrops?: pulumi.Input<string>;
    /**
     * isisMaxAreaAddressesMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisMaxAreaAddressesMismatch?: pulumi.Input<string>;
    /**
     * isisOrigLSPBuffSizeMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisOrigLspBuffSizeMismatch?: pulumi.Input<string>;
    /**
     * isisOwnLSPPurge - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisOwnLspPurge?: pulumi.Input<string>;
    /**
     * isisProtocolsSupportedMismatch - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisProtocolsSupportedMismatch?: pulumi.Input<string>;
    /**
     * isisRejectedAdjacency - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisRejectedAdjacency?: pulumi.Input<string>;
    /**
     * isisSequenceNumberSkip - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisSequenceNumberSkip?: pulumi.Input<string>;
    /**
     * isisVersionSkew - Choices: `disable`, `enable` - Default value: `disable`
     */
    trapsIsisVersionSkew?: pulumi.Input<string>;
    /**
     * Enable all L2VPN traps
     */
    trapsL2vpnAll?: pulumi.Input<boolean>;
    /**
     * Enable VC down traps
     */
    trapsL2vpnVcDown?: pulumi.Input<boolean>;
    /**
     * Enable VC up traps
     */
    trapsL2vpnVcUp?: pulumi.Input<boolean>;
    /**
     * Enable SNMP Cisco Ntp traps
     */
    trapsNtp?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity power traps
     */
    trapsPower?: pulumi.Input<boolean>;
    /**
     * Enable SNMP RF-MIB traps
     */
    trapsRf?: pulumi.Input<boolean>;
    /**
     * Enable SNMP entity sensor traps
     */
    trapsSensor?: pulumi.Input<boolean>;
    /**
     * Enable SNMPv2-MIB linDownp traps
     */
    trapsSnmpLinkdown?: pulumi.Input<boolean>;
    /**
     * Enable SNMPv2-MIB linkUp traps
     */
    trapsSnmpLinkup?: pulumi.Input<boolean>;
    /**
     * Enable SNMP SYSTEMMIB-MIB traps
     */
    trapsSystem?: pulumi.Input<boolean>;
    /**
     * Name of the user
     */
    users?: pulumi.Input<pulumi.Input<inputs.SnmpServerUser>[]>;
}
