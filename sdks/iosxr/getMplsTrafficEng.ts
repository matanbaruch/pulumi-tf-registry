// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMplsTrafficEng(args?: GetMplsTrafficEngArgs, opts?: pulumi.InvokeOptions): Promise<GetMplsTrafficEngResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getMplsTrafficEng:getMplsTrafficEng", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMplsTrafficEng.
 */
export interface GetMplsTrafficEngArgs {
    device?: string;
}

/**
 * A collection of values returned by getMplsTrafficEng.
 */
export interface GetMplsTrafficEngResult {
    readonly device?: string;
    readonly id: string;
    readonly trafficEng: boolean;
}
export function getMplsTrafficEngOutput(args?: GetMplsTrafficEngOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMplsTrafficEngResult> {
    return pulumi.output(args).apply((a: any) => getMplsTrafficEng(a, opts))
}

/**
 * A collection of arguments for invoking getMplsTrafficEng.
 */
export interface GetMplsTrafficEngOutputArgs {
    device?: pulumi.Input<string>;
}
