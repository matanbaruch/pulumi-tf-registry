// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ntp extends pulumi.CustomResource {
    /**
     * Get an existing Ntp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NtpState, opts?: pulumi.CustomResourceOptions): Ntp {
        return new Ntp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/ntp:Ntp';

    /**
     * Returns true if the given object is an instance of Ntp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ntp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ntp.__pulumiType;
    }

    /**
     * Provide full access
     */
    public readonly accessGroupIpv4Peer!: pulumi.Output<string | undefined>;
    /**
     * Allow only control queries
     */
    public readonly accessGroupIpv4QueryOnly!: pulumi.Output<string | undefined>;
    /**
     * Provide server and query access
     */
    public readonly accessGroupIpv4Serve!: pulumi.Output<string | undefined>;
    /**
     * Provide only server access
     */
    public readonly accessGroupIpv4ServeOnly!: pulumi.Output<string | undefined>;
    /**
     * Provide full access
     */
    public readonly accessGroupIpv6Peer!: pulumi.Output<string | undefined>;
    /**
     * Allow only control queries
     */
    public readonly accessGroupIpv6QueryOnly!: pulumi.Output<string | undefined>;
    /**
     * Provide server and query access
     */
    public readonly accessGroupIpv6Serve!: pulumi.Output<string | undefined>;
    /**
     * Provide only server access
     */
    public readonly accessGroupIpv6ServeOnly!: pulumi.Output<string | undefined>;
    /**
     * Specify non-default VRF
     */
    public readonly accessGroupVrfs!: pulumi.Output<outputs.NtpAccessGroupVrf[] | undefined>;
    /**
     * Use burst mode
     */
    public readonly adminPlaneBurst!: pulumi.Output<boolean | undefined>;
    /**
     * Use initial burst mode
     */
    public readonly adminPlaneIburst!: pulumi.Output<boolean | undefined>;
    /**
     * Configure peer authentication key - Range: `1`-`65535`
     */
    public readonly adminPlaneKey!: pulumi.Output<number | undefined>;
    /**
     * Configure maximum polling rate - Range: `4`-`17`
     */
    public readonly adminPlaneMaxpoll!: pulumi.Output<number | undefined>;
    /**
     * Configure minimum polling rate - Range: `4`-`17`
     */
    public readonly adminPlaneMinpoll!: pulumi.Output<number | undefined>;
    /**
     * Prefer this peer when possible
     */
    public readonly adminPlanePrefer!: pulumi.Output<boolean | undefined>;
    /**
     * Configure NTP version - Range: `1`-`4`
     */
    public readonly adminPlaneVersion!: pulumi.Output<number | undefined>;
    /**
     * Authenticate time sources
     */
    public readonly authenticate!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication key for trusted time sources
     */
    public readonly authenticationKeys!: pulumi.Output<outputs.NtpAuthenticationKey[] | undefined>;
    /**
     * Estimated round-trip delay - Range: `1`-`999999`
     */
    public readonly broadcastdelay!: pulumi.Output<number | undefined>;
    /**
     * CMAC Authentication key for trusted time sources
     */
    public readonly cmacAuthenticationKeys!: pulumi.Output<outputs.NtpCmacAuthenticationKey[] | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * HMA-SHA1 Authentication key for trusted time sources
     */
    public readonly hmacSha1AuthenticationKeys!: pulumi.Output<outputs.NtpHmacSha1AuthenticationKey[] | undefined>;
    /**
     * HMA-SHA2 Authentication key for trusted time sources
     */
    public readonly hmacSha2AuthenticationKeys!: pulumi.Output<outputs.NtpHmacSha2AuthenticationKey[] | undefined>;
    /**
     * Specify non-default VRF
     */
    public readonly interfaceVrfs!: pulumi.Output<outputs.NtpInterfaceVrf[] | undefined>;
    /**
     * Configure NTP on an interface
     */
    public readonly interfaces!: pulumi.Output<outputs.NtpInterface[] | undefined>;
    /**
     * Set IP DSCP (DiffServ CodePoint)
     */
    public readonly ipv4Dscp!: pulumi.Output<string | undefined>;
    /**
     * Specify IPv4 address
     */
    public readonly ipv4PeersServers!: pulumi.Output<outputs.NtpIpv4PeersServer[] | undefined>;
    /**
     * Set precedence - Choices: `critical`, `flash`, `flash-override`, `immediate`, `internet`, `network`, `priority`,
     * `routine`
     */
    public readonly ipv4Precedence!: pulumi.Output<string | undefined>;
    /**
     * Set IP DSCP (DiffServ CodePoint)
     */
    public readonly ipv6Dscp!: pulumi.Output<string | undefined>;
    /**
     * Specify IPv6 address
     */
    public readonly ipv6PeersServers!: pulumi.Output<outputs.NtpIpv6PeersServer[] | undefined>;
    /**
     * Set precedence - Choices: `critical`, `flash`, `flash-override`, `immediate`, `internet`, `network`, `priority`,
     * `routine`
     */
    public readonly ipv6Precedence!: pulumi.Output<string | undefined>;
    /**
     * Logs internal synchronization changes
     */
    public readonly logInternalSync!: pulumi.Output<boolean | undefined>;
    /**
     * Set maximum number of associations - Range: `0`-`4294967295`
     */
    public readonly maxAssociations!: pulumi.Output<number | undefined>;
    /**
     * Enable the passive associations
     */
    public readonly passive!: pulumi.Output<boolean | undefined>;
    /**
     * Specify non-default VRF
     */
    public readonly peersServersVrfs!: pulumi.Output<outputs.NtpPeersServersVrf[] | undefined>;
    /**
     * Use a primary reference clock as clock source
     */
    public readonly primaryReferenceClock!: pulumi.Output<boolean | undefined>;
    /**
     * Use NTP as clock source with stratum number <n> - Range: `1`-`15`
     */
    public readonly primaryStratumNumber!: pulumi.Output<number | undefined>;
    /**
     * default interface
     */
    public readonly sourceInterfaceName!: pulumi.Output<string | undefined>;
    /**
     * Specify non-default VRF
     */
    public readonly sourceVrfs!: pulumi.Output<outputs.NtpSourceVrf[] | undefined>;
    /**
     * Key numbers for trusted time sources
     */
    public readonly trustedKeys!: pulumi.Output<outputs.NtpTrustedKey[] | undefined>;
    /**
     * Periodically update calendar with NTP time
     */
    public readonly updateCalendar!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Ntp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NtpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NtpArgs | NtpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NtpState | undefined;
            resourceInputs["accessGroupIpv4Peer"] = state ? state.accessGroupIpv4Peer : undefined;
            resourceInputs["accessGroupIpv4QueryOnly"] = state ? state.accessGroupIpv4QueryOnly : undefined;
            resourceInputs["accessGroupIpv4Serve"] = state ? state.accessGroupIpv4Serve : undefined;
            resourceInputs["accessGroupIpv4ServeOnly"] = state ? state.accessGroupIpv4ServeOnly : undefined;
            resourceInputs["accessGroupIpv6Peer"] = state ? state.accessGroupIpv6Peer : undefined;
            resourceInputs["accessGroupIpv6QueryOnly"] = state ? state.accessGroupIpv6QueryOnly : undefined;
            resourceInputs["accessGroupIpv6Serve"] = state ? state.accessGroupIpv6Serve : undefined;
            resourceInputs["accessGroupIpv6ServeOnly"] = state ? state.accessGroupIpv6ServeOnly : undefined;
            resourceInputs["accessGroupVrfs"] = state ? state.accessGroupVrfs : undefined;
            resourceInputs["adminPlaneBurst"] = state ? state.adminPlaneBurst : undefined;
            resourceInputs["adminPlaneIburst"] = state ? state.adminPlaneIburst : undefined;
            resourceInputs["adminPlaneKey"] = state ? state.adminPlaneKey : undefined;
            resourceInputs["adminPlaneMaxpoll"] = state ? state.adminPlaneMaxpoll : undefined;
            resourceInputs["adminPlaneMinpoll"] = state ? state.adminPlaneMinpoll : undefined;
            resourceInputs["adminPlanePrefer"] = state ? state.adminPlanePrefer : undefined;
            resourceInputs["adminPlaneVersion"] = state ? state.adminPlaneVersion : undefined;
            resourceInputs["authenticate"] = state ? state.authenticate : undefined;
            resourceInputs["authenticationKeys"] = state ? state.authenticationKeys : undefined;
            resourceInputs["broadcastdelay"] = state ? state.broadcastdelay : undefined;
            resourceInputs["cmacAuthenticationKeys"] = state ? state.cmacAuthenticationKeys : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["hmacSha1AuthenticationKeys"] = state ? state.hmacSha1AuthenticationKeys : undefined;
            resourceInputs["hmacSha2AuthenticationKeys"] = state ? state.hmacSha2AuthenticationKeys : undefined;
            resourceInputs["interfaceVrfs"] = state ? state.interfaceVrfs : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["ipv4Dscp"] = state ? state.ipv4Dscp : undefined;
            resourceInputs["ipv4PeersServers"] = state ? state.ipv4PeersServers : undefined;
            resourceInputs["ipv4Precedence"] = state ? state.ipv4Precedence : undefined;
            resourceInputs["ipv6Dscp"] = state ? state.ipv6Dscp : undefined;
            resourceInputs["ipv6PeersServers"] = state ? state.ipv6PeersServers : undefined;
            resourceInputs["ipv6Precedence"] = state ? state.ipv6Precedence : undefined;
            resourceInputs["logInternalSync"] = state ? state.logInternalSync : undefined;
            resourceInputs["maxAssociations"] = state ? state.maxAssociations : undefined;
            resourceInputs["passive"] = state ? state.passive : undefined;
            resourceInputs["peersServersVrfs"] = state ? state.peersServersVrfs : undefined;
            resourceInputs["primaryReferenceClock"] = state ? state.primaryReferenceClock : undefined;
            resourceInputs["primaryStratumNumber"] = state ? state.primaryStratumNumber : undefined;
            resourceInputs["sourceInterfaceName"] = state ? state.sourceInterfaceName : undefined;
            resourceInputs["sourceVrfs"] = state ? state.sourceVrfs : undefined;
            resourceInputs["trustedKeys"] = state ? state.trustedKeys : undefined;
            resourceInputs["updateCalendar"] = state ? state.updateCalendar : undefined;
        } else {
            const args = argsOrState as NtpArgs | undefined;
            resourceInputs["accessGroupIpv4Peer"] = args ? args.accessGroupIpv4Peer : undefined;
            resourceInputs["accessGroupIpv4QueryOnly"] = args ? args.accessGroupIpv4QueryOnly : undefined;
            resourceInputs["accessGroupIpv4Serve"] = args ? args.accessGroupIpv4Serve : undefined;
            resourceInputs["accessGroupIpv4ServeOnly"] = args ? args.accessGroupIpv4ServeOnly : undefined;
            resourceInputs["accessGroupIpv6Peer"] = args ? args.accessGroupIpv6Peer : undefined;
            resourceInputs["accessGroupIpv6QueryOnly"] = args ? args.accessGroupIpv6QueryOnly : undefined;
            resourceInputs["accessGroupIpv6Serve"] = args ? args.accessGroupIpv6Serve : undefined;
            resourceInputs["accessGroupIpv6ServeOnly"] = args ? args.accessGroupIpv6ServeOnly : undefined;
            resourceInputs["accessGroupVrfs"] = args ? args.accessGroupVrfs : undefined;
            resourceInputs["adminPlaneBurst"] = args ? args.adminPlaneBurst : undefined;
            resourceInputs["adminPlaneIburst"] = args ? args.adminPlaneIburst : undefined;
            resourceInputs["adminPlaneKey"] = args ? args.adminPlaneKey : undefined;
            resourceInputs["adminPlaneMaxpoll"] = args ? args.adminPlaneMaxpoll : undefined;
            resourceInputs["adminPlaneMinpoll"] = args ? args.adminPlaneMinpoll : undefined;
            resourceInputs["adminPlanePrefer"] = args ? args.adminPlanePrefer : undefined;
            resourceInputs["adminPlaneVersion"] = args ? args.adminPlaneVersion : undefined;
            resourceInputs["authenticate"] = args ? args.authenticate : undefined;
            resourceInputs["authenticationKeys"] = args ? args.authenticationKeys : undefined;
            resourceInputs["broadcastdelay"] = args ? args.broadcastdelay : undefined;
            resourceInputs["cmacAuthenticationKeys"] = args ? args.cmacAuthenticationKeys : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["hmacSha1AuthenticationKeys"] = args ? args.hmacSha1AuthenticationKeys : undefined;
            resourceInputs["hmacSha2AuthenticationKeys"] = args ? args.hmacSha2AuthenticationKeys : undefined;
            resourceInputs["interfaceVrfs"] = args ? args.interfaceVrfs : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["ipv4Dscp"] = args ? args.ipv4Dscp : undefined;
            resourceInputs["ipv4PeersServers"] = args ? args.ipv4PeersServers : undefined;
            resourceInputs["ipv4Precedence"] = args ? args.ipv4Precedence : undefined;
            resourceInputs["ipv6Dscp"] = args ? args.ipv6Dscp : undefined;
            resourceInputs["ipv6PeersServers"] = args ? args.ipv6PeersServers : undefined;
            resourceInputs["ipv6Precedence"] = args ? args.ipv6Precedence : undefined;
            resourceInputs["logInternalSync"] = args ? args.logInternalSync : undefined;
            resourceInputs["maxAssociations"] = args ? args.maxAssociations : undefined;
            resourceInputs["passive"] = args ? args.passive : undefined;
            resourceInputs["peersServersVrfs"] = args ? args.peersServersVrfs : undefined;
            resourceInputs["primaryReferenceClock"] = args ? args.primaryReferenceClock : undefined;
            resourceInputs["primaryStratumNumber"] = args ? args.primaryStratumNumber : undefined;
            resourceInputs["sourceInterfaceName"] = args ? args.sourceInterfaceName : undefined;
            resourceInputs["sourceVrfs"] = args ? args.sourceVrfs : undefined;
            resourceInputs["trustedKeys"] = args ? args.trustedKeys : undefined;
            resourceInputs["updateCalendar"] = args ? args.updateCalendar : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ntp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ntp resources.
 */
export interface NtpState {
    /**
     * Provide full access
     */
    accessGroupIpv4Peer?: pulumi.Input<string>;
    /**
     * Allow only control queries
     */
    accessGroupIpv4QueryOnly?: pulumi.Input<string>;
    /**
     * Provide server and query access
     */
    accessGroupIpv4Serve?: pulumi.Input<string>;
    /**
     * Provide only server access
     */
    accessGroupIpv4ServeOnly?: pulumi.Input<string>;
    /**
     * Provide full access
     */
    accessGroupIpv6Peer?: pulumi.Input<string>;
    /**
     * Allow only control queries
     */
    accessGroupIpv6QueryOnly?: pulumi.Input<string>;
    /**
     * Provide server and query access
     */
    accessGroupIpv6Serve?: pulumi.Input<string>;
    /**
     * Provide only server access
     */
    accessGroupIpv6ServeOnly?: pulumi.Input<string>;
    /**
     * Specify non-default VRF
     */
    accessGroupVrfs?: pulumi.Input<pulumi.Input<inputs.NtpAccessGroupVrf>[]>;
    /**
     * Use burst mode
     */
    adminPlaneBurst?: pulumi.Input<boolean>;
    /**
     * Use initial burst mode
     */
    adminPlaneIburst?: pulumi.Input<boolean>;
    /**
     * Configure peer authentication key - Range: `1`-`65535`
     */
    adminPlaneKey?: pulumi.Input<number>;
    /**
     * Configure maximum polling rate - Range: `4`-`17`
     */
    adminPlaneMaxpoll?: pulumi.Input<number>;
    /**
     * Configure minimum polling rate - Range: `4`-`17`
     */
    adminPlaneMinpoll?: pulumi.Input<number>;
    /**
     * Prefer this peer when possible
     */
    adminPlanePrefer?: pulumi.Input<boolean>;
    /**
     * Configure NTP version - Range: `1`-`4`
     */
    adminPlaneVersion?: pulumi.Input<number>;
    /**
     * Authenticate time sources
     */
    authenticate?: pulumi.Input<boolean>;
    /**
     * Authentication key for trusted time sources
     */
    authenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpAuthenticationKey>[]>;
    /**
     * Estimated round-trip delay - Range: `1`-`999999`
     */
    broadcastdelay?: pulumi.Input<number>;
    /**
     * CMAC Authentication key for trusted time sources
     */
    cmacAuthenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpCmacAuthenticationKey>[]>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * HMA-SHA1 Authentication key for trusted time sources
     */
    hmacSha1AuthenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpHmacSha1AuthenticationKey>[]>;
    /**
     * HMA-SHA2 Authentication key for trusted time sources
     */
    hmacSha2AuthenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpHmacSha2AuthenticationKey>[]>;
    /**
     * Specify non-default VRF
     */
    interfaceVrfs?: pulumi.Input<pulumi.Input<inputs.NtpInterfaceVrf>[]>;
    /**
     * Configure NTP on an interface
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.NtpInterface>[]>;
    /**
     * Set IP DSCP (DiffServ CodePoint)
     */
    ipv4Dscp?: pulumi.Input<string>;
    /**
     * Specify IPv4 address
     */
    ipv4PeersServers?: pulumi.Input<pulumi.Input<inputs.NtpIpv4PeersServer>[]>;
    /**
     * Set precedence - Choices: `critical`, `flash`, `flash-override`, `immediate`, `internet`, `network`, `priority`,
     * `routine`
     */
    ipv4Precedence?: pulumi.Input<string>;
    /**
     * Set IP DSCP (DiffServ CodePoint)
     */
    ipv6Dscp?: pulumi.Input<string>;
    /**
     * Specify IPv6 address
     */
    ipv6PeersServers?: pulumi.Input<pulumi.Input<inputs.NtpIpv6PeersServer>[]>;
    /**
     * Set precedence - Choices: `critical`, `flash`, `flash-override`, `immediate`, `internet`, `network`, `priority`,
     * `routine`
     */
    ipv6Precedence?: pulumi.Input<string>;
    /**
     * Logs internal synchronization changes
     */
    logInternalSync?: pulumi.Input<boolean>;
    /**
     * Set maximum number of associations - Range: `0`-`4294967295`
     */
    maxAssociations?: pulumi.Input<number>;
    /**
     * Enable the passive associations
     */
    passive?: pulumi.Input<boolean>;
    /**
     * Specify non-default VRF
     */
    peersServersVrfs?: pulumi.Input<pulumi.Input<inputs.NtpPeersServersVrf>[]>;
    /**
     * Use a primary reference clock as clock source
     */
    primaryReferenceClock?: pulumi.Input<boolean>;
    /**
     * Use NTP as clock source with stratum number <n> - Range: `1`-`15`
     */
    primaryStratumNumber?: pulumi.Input<number>;
    /**
     * default interface
     */
    sourceInterfaceName?: pulumi.Input<string>;
    /**
     * Specify non-default VRF
     */
    sourceVrfs?: pulumi.Input<pulumi.Input<inputs.NtpSourceVrf>[]>;
    /**
     * Key numbers for trusted time sources
     */
    trustedKeys?: pulumi.Input<pulumi.Input<inputs.NtpTrustedKey>[]>;
    /**
     * Periodically update calendar with NTP time
     */
    updateCalendar?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Ntp resource.
 */
export interface NtpArgs {
    /**
     * Provide full access
     */
    accessGroupIpv4Peer?: pulumi.Input<string>;
    /**
     * Allow only control queries
     */
    accessGroupIpv4QueryOnly?: pulumi.Input<string>;
    /**
     * Provide server and query access
     */
    accessGroupIpv4Serve?: pulumi.Input<string>;
    /**
     * Provide only server access
     */
    accessGroupIpv4ServeOnly?: pulumi.Input<string>;
    /**
     * Provide full access
     */
    accessGroupIpv6Peer?: pulumi.Input<string>;
    /**
     * Allow only control queries
     */
    accessGroupIpv6QueryOnly?: pulumi.Input<string>;
    /**
     * Provide server and query access
     */
    accessGroupIpv6Serve?: pulumi.Input<string>;
    /**
     * Provide only server access
     */
    accessGroupIpv6ServeOnly?: pulumi.Input<string>;
    /**
     * Specify non-default VRF
     */
    accessGroupVrfs?: pulumi.Input<pulumi.Input<inputs.NtpAccessGroupVrf>[]>;
    /**
     * Use burst mode
     */
    adminPlaneBurst?: pulumi.Input<boolean>;
    /**
     * Use initial burst mode
     */
    adminPlaneIburst?: pulumi.Input<boolean>;
    /**
     * Configure peer authentication key - Range: `1`-`65535`
     */
    adminPlaneKey?: pulumi.Input<number>;
    /**
     * Configure maximum polling rate - Range: `4`-`17`
     */
    adminPlaneMaxpoll?: pulumi.Input<number>;
    /**
     * Configure minimum polling rate - Range: `4`-`17`
     */
    adminPlaneMinpoll?: pulumi.Input<number>;
    /**
     * Prefer this peer when possible
     */
    adminPlanePrefer?: pulumi.Input<boolean>;
    /**
     * Configure NTP version - Range: `1`-`4`
     */
    adminPlaneVersion?: pulumi.Input<number>;
    /**
     * Authenticate time sources
     */
    authenticate?: pulumi.Input<boolean>;
    /**
     * Authentication key for trusted time sources
     */
    authenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpAuthenticationKey>[]>;
    /**
     * Estimated round-trip delay - Range: `1`-`999999`
     */
    broadcastdelay?: pulumi.Input<number>;
    /**
     * CMAC Authentication key for trusted time sources
     */
    cmacAuthenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpCmacAuthenticationKey>[]>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * HMA-SHA1 Authentication key for trusted time sources
     */
    hmacSha1AuthenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpHmacSha1AuthenticationKey>[]>;
    /**
     * HMA-SHA2 Authentication key for trusted time sources
     */
    hmacSha2AuthenticationKeys?: pulumi.Input<pulumi.Input<inputs.NtpHmacSha2AuthenticationKey>[]>;
    /**
     * Specify non-default VRF
     */
    interfaceVrfs?: pulumi.Input<pulumi.Input<inputs.NtpInterfaceVrf>[]>;
    /**
     * Configure NTP on an interface
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.NtpInterface>[]>;
    /**
     * Set IP DSCP (DiffServ CodePoint)
     */
    ipv4Dscp?: pulumi.Input<string>;
    /**
     * Specify IPv4 address
     */
    ipv4PeersServers?: pulumi.Input<pulumi.Input<inputs.NtpIpv4PeersServer>[]>;
    /**
     * Set precedence - Choices: `critical`, `flash`, `flash-override`, `immediate`, `internet`, `network`, `priority`,
     * `routine`
     */
    ipv4Precedence?: pulumi.Input<string>;
    /**
     * Set IP DSCP (DiffServ CodePoint)
     */
    ipv6Dscp?: pulumi.Input<string>;
    /**
     * Specify IPv6 address
     */
    ipv6PeersServers?: pulumi.Input<pulumi.Input<inputs.NtpIpv6PeersServer>[]>;
    /**
     * Set precedence - Choices: `critical`, `flash`, `flash-override`, `immediate`, `internet`, `network`, `priority`,
     * `routine`
     */
    ipv6Precedence?: pulumi.Input<string>;
    /**
     * Logs internal synchronization changes
     */
    logInternalSync?: pulumi.Input<boolean>;
    /**
     * Set maximum number of associations - Range: `0`-`4294967295`
     */
    maxAssociations?: pulumi.Input<number>;
    /**
     * Enable the passive associations
     */
    passive?: pulumi.Input<boolean>;
    /**
     * Specify non-default VRF
     */
    peersServersVrfs?: pulumi.Input<pulumi.Input<inputs.NtpPeersServersVrf>[]>;
    /**
     * Use a primary reference clock as clock source
     */
    primaryReferenceClock?: pulumi.Input<boolean>;
    /**
     * Use NTP as clock source with stratum number <n> - Range: `1`-`15`
     */
    primaryStratumNumber?: pulumi.Input<number>;
    /**
     * default interface
     */
    sourceInterfaceName?: pulumi.Input<string>;
    /**
     * Specify non-default VRF
     */
    sourceVrfs?: pulumi.Input<pulumi.Input<inputs.NtpSourceVrf>[]>;
    /**
     * Key numbers for trusted time sources
     */
    trustedKeys?: pulumi.Input<pulumi.Input<inputs.NtpTrustedKey>[]>;
    /**
     * Periodically update calendar with NTP time
     */
    updateCalendar?: pulumi.Input<boolean>;
}
