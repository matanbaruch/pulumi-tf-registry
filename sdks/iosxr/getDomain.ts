// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDomain(args?: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getDomain:getDomain", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    device?: string;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    readonly defaultFlowsDisable: boolean;
    readonly device?: string;
    readonly domains: outputs.GetDomainDomain[];
    readonly id: string;
    readonly ipv4Hosts: outputs.GetDomainIpv4Host[];
    readonly ipv6Hosts: outputs.GetDomainIpv6Host[];
    readonly lookupDisable: boolean;
    readonly lookupSourceInterface: string;
    readonly multicast: string;
    readonly name: string;
    readonly nameServers: outputs.GetDomainNameServer[];
}
export function getDomainOutput(args?: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply((a: any) => getDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    device?: pulumi.Input<string>;
}
