// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterHsrpInterfaceIpv4GroupV1(args: GetRouterHsrpInterfaceIpv4GroupV1Args, opts?: pulumi.InvokeOptions): Promise<GetRouterHsrpInterfaceIpv4GroupV1Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRouterHsrpInterfaceIpv4GroupV1:getRouterHsrpInterfaceIpv4GroupV1", {
        "device": args.device,
        "groupId": args.groupId,
        "interfaceName": args.interfaceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterHsrpInterfaceIpv4GroupV1.
 */
export interface GetRouterHsrpInterfaceIpv4GroupV1Args {
    device?: string;
    groupId: number;
    interfaceName: string;
}

/**
 * A collection of values returned by getRouterHsrpInterfaceIpv4GroupV1.
 */
export interface GetRouterHsrpInterfaceIpv4GroupV1Result {
    readonly address: string;
    readonly addressLearn: boolean;
    readonly bfdFastDetectPeerInterface: string;
    readonly bfdFastDetectPeerIpv4: string;
    readonly device?: string;
    readonly groupId: number;
    readonly id: string;
    readonly interfaceName: string;
    readonly macAddress: string;
    readonly name: string;
    readonly preemptDelay: number;
    readonly priority: number;
    readonly secondaryIpv4Addresses: outputs.GetRouterHsrpInterfaceIpv4GroupV1SecondaryIpv4Address[];
    readonly timersHoldTime: number;
    readonly timersHoldTime2: number;
    readonly timersMsec: number;
    readonly timersMsec2: number;
    readonly trackInterfaces: outputs.GetRouterHsrpInterfaceIpv4GroupV1TrackInterface[];
    readonly trackObjects: outputs.GetRouterHsrpInterfaceIpv4GroupV1TrackObject[];
}
export function getRouterHsrpInterfaceIpv4GroupV1Output(args: GetRouterHsrpInterfaceIpv4GroupV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterHsrpInterfaceIpv4GroupV1Result> {
    return pulumi.output(args).apply((a: any) => getRouterHsrpInterfaceIpv4GroupV1(a, opts))
}

/**
 * A collection of arguments for invoking getRouterHsrpInterfaceIpv4GroupV1.
 */
export interface GetRouterHsrpInterfaceIpv4GroupV1OutputArgs {
    device?: pulumi.Input<string>;
    groupId: pulumi.Input<number>;
    interfaceName: pulumi.Input<string>;
}
