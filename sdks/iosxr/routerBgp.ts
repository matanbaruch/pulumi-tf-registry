// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterBgp extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpState, opts?: pulumi.CustomResourceOptions): RouterBgp {
        return new RouterBgp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/routerBgp:RouterBgp';

    /**
     * Returns true if the given object is an instance of RouterBgp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgp.__pulumiType;
    }

    /**
     * bgp as-number
     */
    public readonly asNumber!: pulumi.Output<string>;
    /**
     * Hello interval - Range: `3`-`30000`
     */
    public readonly bfdMinimumInterval!: pulumi.Output<number | undefined>;
    /**
     * Detect multiplier - Range: `2`-`16`
     */
    public readonly bfdMultiplier!: pulumi.Output<number | undefined>;
    /**
     * Ignore AIGP attribute
     */
    public readonly bgpBestpathAigpIgnore!: pulumi.Output<boolean | undefined>;
    /**
     * Ignore as-path length
     */
    public readonly bgpBestpathAsPathIgnore!: pulumi.Output<boolean | undefined>;
    /**
     * Relax as-path check for multipath selection
     */
    public readonly bgpBestpathAsPathMultipathRelax!: pulumi.Output<boolean | undefined>;
    /**
     * Compare router-id for identical EBGP paths
     */
    public readonly bgpBestpathCompareRouterid!: pulumi.Output<boolean | undefined>;
    /**
     * Ignore cost-community comparison
     */
    public readonly bgpBestpathCostCommunityIgnore!: pulumi.Output<boolean | undefined>;
    /**
     * Ignore IGP metric during path comparison
     */
    public readonly bgpBestpathIgpMetricIgnore!: pulumi.Output<boolean | undefined>;
    /**
     * Use next-hop admin/metric from SR policy at Next Hop metric comparison stage
     */
    public readonly bgpBestpathIgpMetricSrPolicy!: pulumi.Output<boolean | undefined>;
    /**
     * Allow comparing MED from different neighbors
     */
    public readonly bgpBestpathMedAlways!: pulumi.Output<boolean | undefined>;
    /**
     * Compare MED among confederation paths
     */
    public readonly bgpBestpathMedConfed!: pulumi.Output<boolean | undefined>;
    /**
     * Treat missing MED as the least preferred one
     */
    public readonly bgpBestpathMedMissingAsWorst!: pulumi.Output<boolean | undefined>;
    /**
     * BGP bestpath selection will allow 'invalid' origin-AS
     */
    public readonly bgpBestpathOriginAsAllowInvalid!: pulumi.Output<boolean | undefined>;
    /**
     * BGP bestpath selection will use origin-AS validity
     */
    public readonly bgpBestpathOriginAsUseValidity!: pulumi.Output<boolean | undefined>;
    /**
     * Consider only paths over SR Policy for bestpath selection, eBGP no-color ineligible
     */
    public readonly bgpBestpathSrPolicyForce!: pulumi.Output<boolean | undefined>;
    /**
     * Consider only paths over SR Policy for bestpath selection, eBGP no-color eligible
     */
    public readonly bgpBestpathSrPolicyPrefer!: pulumi.Output<boolean | undefined>;
    /**
     * Reset gracefully if configuration change forces a peer reset
     */
    public readonly bgpGracefulRestartGracefulReset!: pulumi.Output<boolean | undefined>;
    /**
     * Include extra detail in change messages
     */
    public readonly bgpLogNeighborChangesDetail!: pulumi.Output<boolean | undefined>;
    /**
     * Allow redistribution of iBGP into IGPs (dangerous)
     */
    public readonly bgpRedistributeInternal!: pulumi.Output<boolean | undefined>;
    /**
     * Configure Router-id
     */
    public readonly bgpRouterId!: pulumi.Output<string | undefined>;
    /**
     * Distribute a default route
     */
    public readonly defaultInformationOriginate!: pulumi.Output<boolean | undefined>;
    /**
     * default redistributed metric - Range: `1`-`4294967295`
     */
    public readonly defaultMetric!: pulumi.Output<number | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Allow policy to modify all attributes
     */
    public readonly ibgpPolicyOutEnforceModifications!: pulumi.Output<boolean | undefined>;
    /**
     * Neighbor address
     */
    public readonly neighbors!: pulumi.Output<outputs.RouterBgpNeighbor[] | undefined>;
    /**
     * Disable next-hop reachability validation for color-extcomm path
     */
    public readonly nexthopValidationColorExtcommDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Enable BGP next-hop reachability validation by SR Policy for color-extcomm paths
     */
    public readonly nexthopValidationColorExtcommSrPolicy!: pulumi.Output<boolean | undefined>;
    /**
     * Disable non-stop-routing support for all neighbors
     */
    public readonly nsrDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Configure locator name
     */
    public readonly segmentRoutingSrv6Locator!: pulumi.Output<string | undefined>;
    /**
     * Holdtime. Set 0 to disable keepalives/hold time.
     */
    public readonly timersBgpHoldtime!: pulumi.Output<string | undefined>;
    /**
     * BGP timers - Range: `0`-`65535`
     */
    public readonly timersBgpKeepaliveInterval!: pulumi.Output<number | undefined>;
    /**
     * Minimum acceptable holdtime from neighbor. Set 0 to disable keepalives/hold time.
     */
    public readonly timersBgpMinimumAcceptableHoldtime!: pulumi.Output<string | undefined>;

    /**
     * Create a RouterBgp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterBgpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpArgs | RouterBgpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpState | undefined;
            resourceInputs["asNumber"] = state ? state.asNumber : undefined;
            resourceInputs["bfdMinimumInterval"] = state ? state.bfdMinimumInterval : undefined;
            resourceInputs["bfdMultiplier"] = state ? state.bfdMultiplier : undefined;
            resourceInputs["bgpBestpathAigpIgnore"] = state ? state.bgpBestpathAigpIgnore : undefined;
            resourceInputs["bgpBestpathAsPathIgnore"] = state ? state.bgpBestpathAsPathIgnore : undefined;
            resourceInputs["bgpBestpathAsPathMultipathRelax"] = state ? state.bgpBestpathAsPathMultipathRelax : undefined;
            resourceInputs["bgpBestpathCompareRouterid"] = state ? state.bgpBestpathCompareRouterid : undefined;
            resourceInputs["bgpBestpathCostCommunityIgnore"] = state ? state.bgpBestpathCostCommunityIgnore : undefined;
            resourceInputs["bgpBestpathIgpMetricIgnore"] = state ? state.bgpBestpathIgpMetricIgnore : undefined;
            resourceInputs["bgpBestpathIgpMetricSrPolicy"] = state ? state.bgpBestpathIgpMetricSrPolicy : undefined;
            resourceInputs["bgpBestpathMedAlways"] = state ? state.bgpBestpathMedAlways : undefined;
            resourceInputs["bgpBestpathMedConfed"] = state ? state.bgpBestpathMedConfed : undefined;
            resourceInputs["bgpBestpathMedMissingAsWorst"] = state ? state.bgpBestpathMedMissingAsWorst : undefined;
            resourceInputs["bgpBestpathOriginAsAllowInvalid"] = state ? state.bgpBestpathOriginAsAllowInvalid : undefined;
            resourceInputs["bgpBestpathOriginAsUseValidity"] = state ? state.bgpBestpathOriginAsUseValidity : undefined;
            resourceInputs["bgpBestpathSrPolicyForce"] = state ? state.bgpBestpathSrPolicyForce : undefined;
            resourceInputs["bgpBestpathSrPolicyPrefer"] = state ? state.bgpBestpathSrPolicyPrefer : undefined;
            resourceInputs["bgpGracefulRestartGracefulReset"] = state ? state.bgpGracefulRestartGracefulReset : undefined;
            resourceInputs["bgpLogNeighborChangesDetail"] = state ? state.bgpLogNeighborChangesDetail : undefined;
            resourceInputs["bgpRedistributeInternal"] = state ? state.bgpRedistributeInternal : undefined;
            resourceInputs["bgpRouterId"] = state ? state.bgpRouterId : undefined;
            resourceInputs["defaultInformationOriginate"] = state ? state.defaultInformationOriginate : undefined;
            resourceInputs["defaultMetric"] = state ? state.defaultMetric : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["ibgpPolicyOutEnforceModifications"] = state ? state.ibgpPolicyOutEnforceModifications : undefined;
            resourceInputs["neighbors"] = state ? state.neighbors : undefined;
            resourceInputs["nexthopValidationColorExtcommDisable"] = state ? state.nexthopValidationColorExtcommDisable : undefined;
            resourceInputs["nexthopValidationColorExtcommSrPolicy"] = state ? state.nexthopValidationColorExtcommSrPolicy : undefined;
            resourceInputs["nsrDisable"] = state ? state.nsrDisable : undefined;
            resourceInputs["segmentRoutingSrv6Locator"] = state ? state.segmentRoutingSrv6Locator : undefined;
            resourceInputs["timersBgpHoldtime"] = state ? state.timersBgpHoldtime : undefined;
            resourceInputs["timersBgpKeepaliveInterval"] = state ? state.timersBgpKeepaliveInterval : undefined;
            resourceInputs["timersBgpMinimumAcceptableHoldtime"] = state ? state.timersBgpMinimumAcceptableHoldtime : undefined;
        } else {
            const args = argsOrState as RouterBgpArgs | undefined;
            if ((!args || args.asNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asNumber'");
            }
            resourceInputs["asNumber"] = args ? args.asNumber : undefined;
            resourceInputs["bfdMinimumInterval"] = args ? args.bfdMinimumInterval : undefined;
            resourceInputs["bfdMultiplier"] = args ? args.bfdMultiplier : undefined;
            resourceInputs["bgpBestpathAigpIgnore"] = args ? args.bgpBestpathAigpIgnore : undefined;
            resourceInputs["bgpBestpathAsPathIgnore"] = args ? args.bgpBestpathAsPathIgnore : undefined;
            resourceInputs["bgpBestpathAsPathMultipathRelax"] = args ? args.bgpBestpathAsPathMultipathRelax : undefined;
            resourceInputs["bgpBestpathCompareRouterid"] = args ? args.bgpBestpathCompareRouterid : undefined;
            resourceInputs["bgpBestpathCostCommunityIgnore"] = args ? args.bgpBestpathCostCommunityIgnore : undefined;
            resourceInputs["bgpBestpathIgpMetricIgnore"] = args ? args.bgpBestpathIgpMetricIgnore : undefined;
            resourceInputs["bgpBestpathIgpMetricSrPolicy"] = args ? args.bgpBestpathIgpMetricSrPolicy : undefined;
            resourceInputs["bgpBestpathMedAlways"] = args ? args.bgpBestpathMedAlways : undefined;
            resourceInputs["bgpBestpathMedConfed"] = args ? args.bgpBestpathMedConfed : undefined;
            resourceInputs["bgpBestpathMedMissingAsWorst"] = args ? args.bgpBestpathMedMissingAsWorst : undefined;
            resourceInputs["bgpBestpathOriginAsAllowInvalid"] = args ? args.bgpBestpathOriginAsAllowInvalid : undefined;
            resourceInputs["bgpBestpathOriginAsUseValidity"] = args ? args.bgpBestpathOriginAsUseValidity : undefined;
            resourceInputs["bgpBestpathSrPolicyForce"] = args ? args.bgpBestpathSrPolicyForce : undefined;
            resourceInputs["bgpBestpathSrPolicyPrefer"] = args ? args.bgpBestpathSrPolicyPrefer : undefined;
            resourceInputs["bgpGracefulRestartGracefulReset"] = args ? args.bgpGracefulRestartGracefulReset : undefined;
            resourceInputs["bgpLogNeighborChangesDetail"] = args ? args.bgpLogNeighborChangesDetail : undefined;
            resourceInputs["bgpRedistributeInternal"] = args ? args.bgpRedistributeInternal : undefined;
            resourceInputs["bgpRouterId"] = args ? args.bgpRouterId : undefined;
            resourceInputs["defaultInformationOriginate"] = args ? args.defaultInformationOriginate : undefined;
            resourceInputs["defaultMetric"] = args ? args.defaultMetric : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["ibgpPolicyOutEnforceModifications"] = args ? args.ibgpPolicyOutEnforceModifications : undefined;
            resourceInputs["neighbors"] = args ? args.neighbors : undefined;
            resourceInputs["nexthopValidationColorExtcommDisable"] = args ? args.nexthopValidationColorExtcommDisable : undefined;
            resourceInputs["nexthopValidationColorExtcommSrPolicy"] = args ? args.nexthopValidationColorExtcommSrPolicy : undefined;
            resourceInputs["nsrDisable"] = args ? args.nsrDisable : undefined;
            resourceInputs["segmentRoutingSrv6Locator"] = args ? args.segmentRoutingSrv6Locator : undefined;
            resourceInputs["timersBgpHoldtime"] = args ? args.timersBgpHoldtime : undefined;
            resourceInputs["timersBgpKeepaliveInterval"] = args ? args.timersBgpKeepaliveInterval : undefined;
            resourceInputs["timersBgpMinimumAcceptableHoldtime"] = args ? args.timersBgpMinimumAcceptableHoldtime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgp resources.
 */
export interface RouterBgpState {
    /**
     * bgp as-number
     */
    asNumber?: pulumi.Input<string>;
    /**
     * Hello interval - Range: `3`-`30000`
     */
    bfdMinimumInterval?: pulumi.Input<number>;
    /**
     * Detect multiplier - Range: `2`-`16`
     */
    bfdMultiplier?: pulumi.Input<number>;
    /**
     * Ignore AIGP attribute
     */
    bgpBestpathAigpIgnore?: pulumi.Input<boolean>;
    /**
     * Ignore as-path length
     */
    bgpBestpathAsPathIgnore?: pulumi.Input<boolean>;
    /**
     * Relax as-path check for multipath selection
     */
    bgpBestpathAsPathMultipathRelax?: pulumi.Input<boolean>;
    /**
     * Compare router-id for identical EBGP paths
     */
    bgpBestpathCompareRouterid?: pulumi.Input<boolean>;
    /**
     * Ignore cost-community comparison
     */
    bgpBestpathCostCommunityIgnore?: pulumi.Input<boolean>;
    /**
     * Ignore IGP metric during path comparison
     */
    bgpBestpathIgpMetricIgnore?: pulumi.Input<boolean>;
    /**
     * Use next-hop admin/metric from SR policy at Next Hop metric comparison stage
     */
    bgpBestpathIgpMetricSrPolicy?: pulumi.Input<boolean>;
    /**
     * Allow comparing MED from different neighbors
     */
    bgpBestpathMedAlways?: pulumi.Input<boolean>;
    /**
     * Compare MED among confederation paths
     */
    bgpBestpathMedConfed?: pulumi.Input<boolean>;
    /**
     * Treat missing MED as the least preferred one
     */
    bgpBestpathMedMissingAsWorst?: pulumi.Input<boolean>;
    /**
     * BGP bestpath selection will allow 'invalid' origin-AS
     */
    bgpBestpathOriginAsAllowInvalid?: pulumi.Input<boolean>;
    /**
     * BGP bestpath selection will use origin-AS validity
     */
    bgpBestpathOriginAsUseValidity?: pulumi.Input<boolean>;
    /**
     * Consider only paths over SR Policy for bestpath selection, eBGP no-color ineligible
     */
    bgpBestpathSrPolicyForce?: pulumi.Input<boolean>;
    /**
     * Consider only paths over SR Policy for bestpath selection, eBGP no-color eligible
     */
    bgpBestpathSrPolicyPrefer?: pulumi.Input<boolean>;
    /**
     * Reset gracefully if configuration change forces a peer reset
     */
    bgpGracefulRestartGracefulReset?: pulumi.Input<boolean>;
    /**
     * Include extra detail in change messages
     */
    bgpLogNeighborChangesDetail?: pulumi.Input<boolean>;
    /**
     * Allow redistribution of iBGP into IGPs (dangerous)
     */
    bgpRedistributeInternal?: pulumi.Input<boolean>;
    /**
     * Configure Router-id
     */
    bgpRouterId?: pulumi.Input<string>;
    /**
     * Distribute a default route
     */
    defaultInformationOriginate?: pulumi.Input<boolean>;
    /**
     * default redistributed metric - Range: `1`-`4294967295`
     */
    defaultMetric?: pulumi.Input<number>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Allow policy to modify all attributes
     */
    ibgpPolicyOutEnforceModifications?: pulumi.Input<boolean>;
    /**
     * Neighbor address
     */
    neighbors?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighbor>[]>;
    /**
     * Disable next-hop reachability validation for color-extcomm path
     */
    nexthopValidationColorExtcommDisable?: pulumi.Input<boolean>;
    /**
     * Enable BGP next-hop reachability validation by SR Policy for color-extcomm paths
     */
    nexthopValidationColorExtcommSrPolicy?: pulumi.Input<boolean>;
    /**
     * Disable non-stop-routing support for all neighbors
     */
    nsrDisable?: pulumi.Input<boolean>;
    /**
     * Configure locator name
     */
    segmentRoutingSrv6Locator?: pulumi.Input<string>;
    /**
     * Holdtime. Set 0 to disable keepalives/hold time.
     */
    timersBgpHoldtime?: pulumi.Input<string>;
    /**
     * BGP timers - Range: `0`-`65535`
     */
    timersBgpKeepaliveInterval?: pulumi.Input<number>;
    /**
     * Minimum acceptable holdtime from neighbor. Set 0 to disable keepalives/hold time.
     */
    timersBgpMinimumAcceptableHoldtime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterBgp resource.
 */
export interface RouterBgpArgs {
    /**
     * bgp as-number
     */
    asNumber: pulumi.Input<string>;
    /**
     * Hello interval - Range: `3`-`30000`
     */
    bfdMinimumInterval?: pulumi.Input<number>;
    /**
     * Detect multiplier - Range: `2`-`16`
     */
    bfdMultiplier?: pulumi.Input<number>;
    /**
     * Ignore AIGP attribute
     */
    bgpBestpathAigpIgnore?: pulumi.Input<boolean>;
    /**
     * Ignore as-path length
     */
    bgpBestpathAsPathIgnore?: pulumi.Input<boolean>;
    /**
     * Relax as-path check for multipath selection
     */
    bgpBestpathAsPathMultipathRelax?: pulumi.Input<boolean>;
    /**
     * Compare router-id for identical EBGP paths
     */
    bgpBestpathCompareRouterid?: pulumi.Input<boolean>;
    /**
     * Ignore cost-community comparison
     */
    bgpBestpathCostCommunityIgnore?: pulumi.Input<boolean>;
    /**
     * Ignore IGP metric during path comparison
     */
    bgpBestpathIgpMetricIgnore?: pulumi.Input<boolean>;
    /**
     * Use next-hop admin/metric from SR policy at Next Hop metric comparison stage
     */
    bgpBestpathIgpMetricSrPolicy?: pulumi.Input<boolean>;
    /**
     * Allow comparing MED from different neighbors
     */
    bgpBestpathMedAlways?: pulumi.Input<boolean>;
    /**
     * Compare MED among confederation paths
     */
    bgpBestpathMedConfed?: pulumi.Input<boolean>;
    /**
     * Treat missing MED as the least preferred one
     */
    bgpBestpathMedMissingAsWorst?: pulumi.Input<boolean>;
    /**
     * BGP bestpath selection will allow 'invalid' origin-AS
     */
    bgpBestpathOriginAsAllowInvalid?: pulumi.Input<boolean>;
    /**
     * BGP bestpath selection will use origin-AS validity
     */
    bgpBestpathOriginAsUseValidity?: pulumi.Input<boolean>;
    /**
     * Consider only paths over SR Policy for bestpath selection, eBGP no-color ineligible
     */
    bgpBestpathSrPolicyForce?: pulumi.Input<boolean>;
    /**
     * Consider only paths over SR Policy for bestpath selection, eBGP no-color eligible
     */
    bgpBestpathSrPolicyPrefer?: pulumi.Input<boolean>;
    /**
     * Reset gracefully if configuration change forces a peer reset
     */
    bgpGracefulRestartGracefulReset?: pulumi.Input<boolean>;
    /**
     * Include extra detail in change messages
     */
    bgpLogNeighborChangesDetail?: pulumi.Input<boolean>;
    /**
     * Allow redistribution of iBGP into IGPs (dangerous)
     */
    bgpRedistributeInternal?: pulumi.Input<boolean>;
    /**
     * Configure Router-id
     */
    bgpRouterId?: pulumi.Input<string>;
    /**
     * Distribute a default route
     */
    defaultInformationOriginate?: pulumi.Input<boolean>;
    /**
     * default redistributed metric - Range: `1`-`4294967295`
     */
    defaultMetric?: pulumi.Input<number>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Allow policy to modify all attributes
     */
    ibgpPolicyOutEnforceModifications?: pulumi.Input<boolean>;
    /**
     * Neighbor address
     */
    neighbors?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighbor>[]>;
    /**
     * Disable next-hop reachability validation for color-extcomm path
     */
    nexthopValidationColorExtcommDisable?: pulumi.Input<boolean>;
    /**
     * Enable BGP next-hop reachability validation by SR Policy for color-extcomm paths
     */
    nexthopValidationColorExtcommSrPolicy?: pulumi.Input<boolean>;
    /**
     * Disable non-stop-routing support for all neighbors
     */
    nsrDisable?: pulumi.Input<boolean>;
    /**
     * Configure locator name
     */
    segmentRoutingSrv6Locator?: pulumi.Input<string>;
    /**
     * Holdtime. Set 0 to disable keepalives/hold time.
     */
    timersBgpHoldtime?: pulumi.Input<string>;
    /**
     * BGP timers - Range: `0`-`65535`
     */
    timersBgpKeepaliveInterval?: pulumi.Input<number>;
    /**
     * Minimum acceptable holdtime from neighbor. Set 0 to disable keepalives/hold time.
     */
    timersBgpMinimumAcceptableHoldtime?: pulumi.Input<string>;
}
