// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class L2vpn extends pulumi.CustomResource {
    /**
     * Get an existing L2vpn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: L2vpnState, opts?: pulumi.CustomResourceOptions): L2vpn {
        return new L2vpn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/l2vpn:L2vpn';

    /**
     * Returns true if the given object is an instance of L2vpn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is L2vpn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === L2vpn.__pulumiType;
    }

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * Multi segment psedowire global description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Use source and destination IP addresses for hashing
     */
    public readonly loadBalancingFlowSrcDstIp!: pulumi.Output<boolean | undefined>;
    /**
     * Use source and destination MAC addresses for hashing
     */
    public readonly loadBalancingFlowSrcDstMac!: pulumi.Output<boolean | undefined>;
    /**
     * Global L2VPN Router ID
     */
    public readonly routerId!: pulumi.Output<string | undefined>;
    /**
     * Specify the group the cross connects belong to
     */
    public readonly xconnectGroups!: pulumi.Output<outputs.L2vpnXconnectGroup[] | undefined>;

    /**
     * Create a L2vpn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: L2vpnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: L2vpnArgs | L2vpnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as L2vpnState | undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["loadBalancingFlowSrcDstIp"] = state ? state.loadBalancingFlowSrcDstIp : undefined;
            resourceInputs["loadBalancingFlowSrcDstMac"] = state ? state.loadBalancingFlowSrcDstMac : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
            resourceInputs["xconnectGroups"] = state ? state.xconnectGroups : undefined;
        } else {
            const args = argsOrState as L2vpnArgs | undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["loadBalancingFlowSrcDstIp"] = args ? args.loadBalancingFlowSrcDstIp : undefined;
            resourceInputs["loadBalancingFlowSrcDstMac"] = args ? args.loadBalancingFlowSrcDstMac : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
            resourceInputs["xconnectGroups"] = args ? args.xconnectGroups : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(L2vpn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering L2vpn resources.
 */
export interface L2vpnState {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * Multi segment psedowire global description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Use source and destination IP addresses for hashing
     */
    loadBalancingFlowSrcDstIp?: pulumi.Input<boolean>;
    /**
     * Use source and destination MAC addresses for hashing
     */
    loadBalancingFlowSrcDstMac?: pulumi.Input<boolean>;
    /**
     * Global L2VPN Router ID
     */
    routerId?: pulumi.Input<string>;
    /**
     * Specify the group the cross connects belong to
     */
    xconnectGroups?: pulumi.Input<pulumi.Input<inputs.L2vpnXconnectGroup>[]>;
}

/**
 * The set of arguments for constructing a L2vpn resource.
 */
export interface L2vpnArgs {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * Multi segment psedowire global description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Use source and destination IP addresses for hashing
     */
    loadBalancingFlowSrcDstIp?: pulumi.Input<boolean>;
    /**
     * Use source and destination MAC addresses for hashing
     */
    loadBalancingFlowSrcDstMac?: pulumi.Input<boolean>;
    /**
     * Global L2VPN Router ID
     */
    routerId?: pulumi.Input<string>;
    /**
     * Specify the group the cross connects belong to
     */
    xconnectGroups?: pulumi.Input<pulumi.Input<inputs.L2vpnXconnectGroup>[]>;
}
