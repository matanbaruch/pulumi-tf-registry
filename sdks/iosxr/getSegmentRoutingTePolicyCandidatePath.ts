// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSegmentRoutingTePolicyCandidatePath(args: GetSegmentRoutingTePolicyCandidatePathArgs, opts?: pulumi.InvokeOptions): Promise<GetSegmentRoutingTePolicyCandidatePathResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getSegmentRoutingTePolicyCandidatePath:getSegmentRoutingTePolicyCandidatePath", {
        "device": args.device,
        "pathIndex": args.pathIndex,
        "policyName": args.policyName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSegmentRoutingTePolicyCandidatePath.
 */
export interface GetSegmentRoutingTePolicyCandidatePathArgs {
    device?: string;
    pathIndex: number;
    policyName: string;
}

/**
 * A collection of values returned by getSegmentRoutingTePolicyCandidatePath.
 */
export interface GetSegmentRoutingTePolicyCandidatePathResult {
    readonly device?: string;
    readonly id: string;
    readonly pathIndex: number;
    readonly pathInfos: outputs.GetSegmentRoutingTePolicyCandidatePathPathInfo[];
    readonly policyName: string;
}
export function getSegmentRoutingTePolicyCandidatePathOutput(args: GetSegmentRoutingTePolicyCandidatePathOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSegmentRoutingTePolicyCandidatePathResult> {
    return pulumi.output(args).apply((a: any) => getSegmentRoutingTePolicyCandidatePath(a, opts))
}

/**
 * A collection of arguments for invoking getSegmentRoutingTePolicyCandidatePath.
 */
export interface GetSegmentRoutingTePolicyCandidatePathOutputArgs {
    device?: pulumi.Input<string>;
    pathIndex: pulumi.Input<number>;
    policyName: pulumi.Input<string>;
}
