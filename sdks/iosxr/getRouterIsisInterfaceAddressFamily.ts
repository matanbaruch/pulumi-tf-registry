// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterIsisInterfaceAddressFamily(args: GetRouterIsisInterfaceAddressFamilyArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterIsisInterfaceAddressFamilyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRouterIsisInterfaceAddressFamily:getRouterIsisInterfaceAddressFamily", {
        "afName": args.afName,
        "device": args.device,
        "interfaceName": args.interfaceName,
        "processId": args.processId,
        "safName": args.safName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterIsisInterfaceAddressFamily.
 */
export interface GetRouterIsisInterfaceAddressFamilyArgs {
    afName: string;
    device?: string;
    interfaceName: string;
    processId: string;
    safName: string;
}

/**
 * A collection of values returned by getRouterIsisInterfaceAddressFamily.
 */
export interface GetRouterIsisInterfaceAddressFamilyResult {
    readonly advertisePrefixRoutePolicy: string;
    readonly afName: string;
    readonly device?: string;
    readonly fastReroutePerPrefix: boolean;
    readonly fastReroutePerPrefixLevels: outputs.GetRouterIsisInterfaceAddressFamilyFastReroutePerPrefixLevel[];
    readonly fastReroutePerPrefixTiLfa: boolean;
    readonly id: string;
    readonly interfaceName: string;
    readonly metric: number;
    readonly metricLevels: outputs.GetRouterIsisInterfaceAddressFamilyMetricLevel[];
    readonly metricMaximum: boolean;
    readonly prefixSidAbsolute: number;
    readonly prefixSidIndex: number;
    readonly prefixSidNFlagClear: boolean;
    readonly prefixSidStrictSpfAbsolute: number;
    readonly processId: string;
    readonly safName: string;
    readonly tag: number;
}
export function getRouterIsisInterfaceAddressFamilyOutput(args: GetRouterIsisInterfaceAddressFamilyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterIsisInterfaceAddressFamilyResult> {
    return pulumi.output(args).apply((a: any) => getRouterIsisInterfaceAddressFamily(a, opts))
}

/**
 * A collection of arguments for invoking getRouterIsisInterfaceAddressFamily.
 */
export interface GetRouterIsisInterfaceAddressFamilyOutputArgs {
    afName: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    interfaceName: pulumi.Input<string>;
    processId: pulumi.Input<string>;
    safName: pulumi.Input<string>;
}
