// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnmpServerView(args: GetSnmpServerViewArgs, opts?: pulumi.InvokeOptions): Promise<GetSnmpServerViewResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getSnmpServerView:getSnmpServerView", {
        "device": args.device,
        "viewName": args.viewName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSnmpServerView.
 */
export interface GetSnmpServerViewArgs {
    device?: string;
    viewName: string;
}

/**
 * A collection of values returned by getSnmpServerView.
 */
export interface GetSnmpServerViewResult {
    readonly device?: string;
    readonly id: string;
    readonly mibViewFamilies: outputs.GetSnmpServerViewMibViewFamily[];
    readonly viewName: string;
}
export function getSnmpServerViewOutput(args: GetSnmpServerViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnmpServerViewResult> {
    return pulumi.output(args).apply((a: any) => getSnmpServerView(a, opts))
}

/**
 * A collection of arguments for invoking getSnmpServerView.
 */
export interface GetSnmpServerViewOutputArgs {
    device?: pulumi.Input<string>;
    viewName: pulumi.Input<string>;
}
