// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRouterVrrpInterface(args: GetRouterVrrpInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterVrrpInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRouterVrrpInterface:getRouterVrrpInterface", {
        "device": args.device,
        "interfaceName": args.interfaceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterVrrpInterface.
 */
export interface GetRouterVrrpInterfaceArgs {
    device?: string;
    interfaceName: string;
}

/**
 * A collection of values returned by getRouterVrrpInterface.
 */
export interface GetRouterVrrpInterfaceResult {
    readonly bfdMinimumInterval: number;
    readonly bfdMultiplier: number;
    readonly delayMinimum: number;
    readonly delayReload: number;
    readonly device?: string;
    readonly id: string;
    readonly interfaceName: string;
    readonly macRefresh: number;
}
export function getRouterVrrpInterfaceOutput(args: GetRouterVrrpInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterVrrpInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getRouterVrrpInterface(a, opts))
}

/**
 * A collection of arguments for invoking getRouterVrrpInterface.
 */
export interface GetRouterVrrpInterfaceOutputArgs {
    device?: pulumi.Input<string>;
    interfaceName: pulumi.Input<string>;
}
