// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipv6 extends pulumi.CustomResource {
    /**
     * Get an existing Ipv6 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv6State, opts?: pulumi.CustomResourceOptions): Ipv6 {
        return new Ipv6(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxr:index/ipv6:Ipv6';

    /**
     * Returns true if the given object is an instance of Ipv6.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv6 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv6.__pulumiType;
    }

    /**
     * Enable dropping the frags with incomplete header
     */
    public readonly assemblerFragHdrIncompleteEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Maxinum packets allowed in assembly queues - Range: `1`-`50`
     */
    public readonly assemblerMaxPackets!: pulumi.Output<number | undefined>;
    /**
     * Enable dropping the frags which are overlapping
     */
    public readonly assemblerOverlapFragDropEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Enable dropping of reassembled ND packet
     */
    public readonly assemblerReassemblerDropEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Number of seconds an assembly queue will hold before timeout - Range: `1`-`120`
     */
    public readonly assemblerTimeout!: pulumi.Output<number | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Configure hop count limit - Range: `1`-`255`
     */
    public readonly hopLimit!: pulumi.Output<number | undefined>;
    /**
     * Interval between ICMP error messages - Range: `0`-`2147483647`
     */
    public readonly icmpErrorInterval!: pulumi.Output<number | undefined>;
    /**
     * Bucket size - Range: `1`-`200`
     */
    public readonly icmpErrorIntervalBucketSize!: pulumi.Output<number | undefined>;
    /**
     * Enable ipv6 path-mtu feature
     */
    public readonly pathMtuEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Configure path-mtu timeout value - Range: `1`-`15`
     */
    public readonly pathMtuTimeout!: pulumi.Output<number | undefined>;
    /**
     * Process packets with source routing header options
     */
    public readonly sourceRoute!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Ipv6 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ipv6Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv6Args | Ipv6State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv6State | undefined;
            resourceInputs["assemblerFragHdrIncompleteEnable"] = state ? state.assemblerFragHdrIncompleteEnable : undefined;
            resourceInputs["assemblerMaxPackets"] = state ? state.assemblerMaxPackets : undefined;
            resourceInputs["assemblerOverlapFragDropEnable"] = state ? state.assemblerOverlapFragDropEnable : undefined;
            resourceInputs["assemblerReassemblerDropEnable"] = state ? state.assemblerReassemblerDropEnable : undefined;
            resourceInputs["assemblerTimeout"] = state ? state.assemblerTimeout : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["hopLimit"] = state ? state.hopLimit : undefined;
            resourceInputs["icmpErrorInterval"] = state ? state.icmpErrorInterval : undefined;
            resourceInputs["icmpErrorIntervalBucketSize"] = state ? state.icmpErrorIntervalBucketSize : undefined;
            resourceInputs["pathMtuEnable"] = state ? state.pathMtuEnable : undefined;
            resourceInputs["pathMtuTimeout"] = state ? state.pathMtuTimeout : undefined;
            resourceInputs["sourceRoute"] = state ? state.sourceRoute : undefined;
        } else {
            const args = argsOrState as Ipv6Args | undefined;
            resourceInputs["assemblerFragHdrIncompleteEnable"] = args ? args.assemblerFragHdrIncompleteEnable : undefined;
            resourceInputs["assemblerMaxPackets"] = args ? args.assemblerMaxPackets : undefined;
            resourceInputs["assemblerOverlapFragDropEnable"] = args ? args.assemblerOverlapFragDropEnable : undefined;
            resourceInputs["assemblerReassemblerDropEnable"] = args ? args.assemblerReassemblerDropEnable : undefined;
            resourceInputs["assemblerTimeout"] = args ? args.assemblerTimeout : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["hopLimit"] = args ? args.hopLimit : undefined;
            resourceInputs["icmpErrorInterval"] = args ? args.icmpErrorInterval : undefined;
            resourceInputs["icmpErrorIntervalBucketSize"] = args ? args.icmpErrorIntervalBucketSize : undefined;
            resourceInputs["pathMtuEnable"] = args ? args.pathMtuEnable : undefined;
            resourceInputs["pathMtuTimeout"] = args ? args.pathMtuTimeout : undefined;
            resourceInputs["sourceRoute"] = args ? args.sourceRoute : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv6.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipv6 resources.
 */
export interface Ipv6State {
    /**
     * Enable dropping the frags with incomplete header
     */
    assemblerFragHdrIncompleteEnable?: pulumi.Input<boolean>;
    /**
     * Maxinum packets allowed in assembly queues - Range: `1`-`50`
     */
    assemblerMaxPackets?: pulumi.Input<number>;
    /**
     * Enable dropping the frags which are overlapping
     */
    assemblerOverlapFragDropEnable?: pulumi.Input<boolean>;
    /**
     * Enable dropping of reassembled ND packet
     */
    assemblerReassemblerDropEnable?: pulumi.Input<boolean>;
    /**
     * Number of seconds an assembly queue will hold before timeout - Range: `1`-`120`
     */
    assemblerTimeout?: pulumi.Input<number>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Configure hop count limit - Range: `1`-`255`
     */
    hopLimit?: pulumi.Input<number>;
    /**
     * Interval between ICMP error messages - Range: `0`-`2147483647`
     */
    icmpErrorInterval?: pulumi.Input<number>;
    /**
     * Bucket size - Range: `1`-`200`
     */
    icmpErrorIntervalBucketSize?: pulumi.Input<number>;
    /**
     * Enable ipv6 path-mtu feature
     */
    pathMtuEnable?: pulumi.Input<boolean>;
    /**
     * Configure path-mtu timeout value - Range: `1`-`15`
     */
    pathMtuTimeout?: pulumi.Input<number>;
    /**
     * Process packets with source routing header options
     */
    sourceRoute?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Ipv6 resource.
 */
export interface Ipv6Args {
    /**
     * Enable dropping the frags with incomplete header
     */
    assemblerFragHdrIncompleteEnable?: pulumi.Input<boolean>;
    /**
     * Maxinum packets allowed in assembly queues - Range: `1`-`50`
     */
    assemblerMaxPackets?: pulumi.Input<number>;
    /**
     * Enable dropping the frags which are overlapping
     */
    assemblerOverlapFragDropEnable?: pulumi.Input<boolean>;
    /**
     * Enable dropping of reassembled ND packet
     */
    assemblerReassemblerDropEnable?: pulumi.Input<boolean>;
    /**
     * Number of seconds an assembly queue will hold before timeout - Range: `1`-`120`
     */
    assemblerTimeout?: pulumi.Input<number>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Configure hop count limit - Range: `1`-`255`
     */
    hopLimit?: pulumi.Input<number>;
    /**
     * Interval between ICMP error messages - Range: `0`-`2147483647`
     */
    icmpErrorInterval?: pulumi.Input<number>;
    /**
     * Bucket size - Range: `1`-`200`
     */
    icmpErrorIntervalBucketSize?: pulumi.Input<number>;
    /**
     * Enable ipv6 path-mtu feature
     */
    pathMtuEnable?: pulumi.Input<boolean>;
    /**
     * Configure path-mtu timeout value - Range: `1`-`15`
     */
    pathMtuTimeout?: pulumi.Input<number>;
    /**
     * Process packets with source routing header options
     */
    sourceRoute?: pulumi.Input<boolean>;
}
