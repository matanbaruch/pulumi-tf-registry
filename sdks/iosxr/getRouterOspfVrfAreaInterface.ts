// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRouterOspfVrfAreaInterface(args: GetRouterOspfVrfAreaInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterOspfVrfAreaInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRouterOspfVrfAreaInterface:getRouterOspfVrfAreaInterface", {
        "areaId": args.areaId,
        "device": args.device,
        "interfaceName": args.interfaceName,
        "processName": args.processName,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterOspfVrfAreaInterface.
 */
export interface GetRouterOspfVrfAreaInterfaceArgs {
    areaId: string;
    device?: string;
    interfaceName: string;
    processName: string;
    vrfName: string;
}

/**
 * A collection of values returned by getRouterOspfVrfAreaInterface.
 */
export interface GetRouterOspfVrfAreaInterfaceResult {
    readonly areaId: string;
    readonly cost: number;
    readonly device?: string;
    readonly id: string;
    readonly interfaceName: string;
    readonly networkBroadcast: boolean;
    readonly networkNonBroadcast: boolean;
    readonly networkPointToMultipoint: boolean;
    readonly networkPointToPoint: boolean;
    readonly passiveDisable: boolean;
    readonly passiveEnable: boolean;
    readonly priority: number;
    readonly processName: string;
    readonly vrfName: string;
}
export function getRouterOspfVrfAreaInterfaceOutput(args: GetRouterOspfVrfAreaInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterOspfVrfAreaInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getRouterOspfVrfAreaInterface(a, opts))
}

/**
 * A collection of arguments for invoking getRouterOspfVrfAreaInterface.
 */
export interface GetRouterOspfVrfAreaInterfaceOutputArgs {
    areaId: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    interfaceName: pulumi.Input<string>;
    processName: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
