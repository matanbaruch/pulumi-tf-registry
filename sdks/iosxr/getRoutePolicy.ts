// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRoutePolicy(args: GetRoutePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRoutePolicy:getRoutePolicy", {
        "device": args.device,
        "routePolicyName": args.routePolicyName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoutePolicy.
 */
export interface GetRoutePolicyArgs {
    device?: string;
    routePolicyName: string;
}

/**
 * A collection of values returned by getRoutePolicy.
 */
export interface GetRoutePolicyResult {
    readonly device?: string;
    readonly id: string;
    readonly routePolicyName: string;
    readonly rpl: string;
}
export function getRoutePolicyOutput(args: GetRoutePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoutePolicyResult> {
    return pulumi.output(args).apply((a: any) => getRoutePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getRoutePolicy.
 */
export interface GetRoutePolicyOutputArgs {
    device?: pulumi.Input<string>;
    routePolicyName: pulumi.Input<string>;
}
