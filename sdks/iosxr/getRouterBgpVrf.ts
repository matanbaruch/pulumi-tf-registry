// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterBgpVrf(args: GetRouterBgpVrfArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterBgpVrfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxr:index/getRouterBgpVrf:getRouterBgpVrf", {
        "asNumber": args.asNumber,
        "device": args.device,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterBgpVrf.
 */
export interface GetRouterBgpVrfArgs {
    asNumber: string;
    device?: string;
    vrfName: string;
}

/**
 * A collection of values returned by getRouterBgpVrf.
 */
export interface GetRouterBgpVrfResult {
    readonly asNumber: string;
    readonly bfdMinimumInterval: number;
    readonly bfdMultiplier: number;
    readonly bgpRouterId: string;
    readonly defaultInformationOriginate: boolean;
    readonly defaultMetric: number;
    readonly device?: string;
    readonly id: string;
    readonly neighbors: outputs.GetRouterBgpVrfNeighbor[];
    readonly rdAuto: boolean;
    readonly rdFourByteAsAsNumber: string;
    readonly rdFourByteAsIndex: number;
    readonly rdIpAddressIndex: number;
    readonly rdIpAddressIpv4Address: string;
    readonly rdTwoByteAsAsNumber: string;
    readonly rdTwoByteAsIndex: number;
    readonly timersBgpHoldtime: string;
    readonly timersBgpKeepaliveInterval: number;
    readonly vrfName: string;
}
export function getRouterBgpVrfOutput(args: GetRouterBgpVrfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterBgpVrfResult> {
    return pulumi.output(args).apply((a: any) => getRouterBgpVrf(a, opts))
}

/**
 * A collection of arguments for invoking getRouterBgpVrf.
 */
export interface GetRouterBgpVrfOutputArgs {
    asNumber: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
