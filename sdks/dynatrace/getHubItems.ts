// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHubItems(args?: GetHubItemsArgs, opts?: pulumi.InvokeOptions): Promise<GetHubItemsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getHubItems:getHubItems", {
        "id": args.id,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHubItems.
 */
export interface GetHubItemsArgs {
    id?: string;
    type?: string;
}

/**
 * A collection of values returned by getHubItems.
 */
export interface GetHubItemsResult {
    readonly artifacts: {[key: string]: string};
    readonly id: string;
    readonly items: outputs.GetHubItemsItem[];
    readonly type?: string;
}
export function getHubItemsOutput(args?: GetHubItemsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHubItemsResult> {
    return pulumi.output(args).apply((a: any) => getHubItems(a, opts))
}

/**
 * A collection of arguments for invoking getHubItems.
 */
export interface GetHubItemsOutputArgs {
    id?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
