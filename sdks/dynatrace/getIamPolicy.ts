// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamPolicy(args: GetIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getIamPolicy:getIamPolicy", {
        "account": args.account,
        "environment": args.environment,
        "id": args.id,
        "name": args.name,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyArgs {
    account?: string;
    environment?: string;
    id?: string;
    name: string;
    uuid?: string;
}

/**
 * A collection of values returned by getIamPolicy.
 */
export interface GetIamPolicyResult {
    readonly account?: string;
    readonly environment?: string;
    readonly id: string;
    readonly name: string;
    readonly uuid: string;
}
export function getIamPolicyOutput(args: GetIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyOutputArgs {
    account?: pulumi.Input<string>;
    environment?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
