// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDocuments(args?: GetDocumentsArgs, opts?: pulumi.InvokeOptions): Promise<GetDocumentsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getDocuments:getDocuments", {
        "id": args.id,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDocuments.
 */
export interface GetDocumentsArgs {
    id?: string;
    type?: string;
}

/**
 * A collection of values returned by getDocuments.
 */
export interface GetDocumentsResult {
    readonly id: string;
    readonly type?: string;
    readonly values: outputs.GetDocumentsValue[];
}
export function getDocumentsOutput(args?: GetDocumentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDocumentsResult> {
    return pulumi.output(args).apply((a: any) => getDocuments(a, opts))
}

/**
 * A collection of arguments for invoking getDocuments.
 */
export interface GetDocumentsOutputArgs {
    id?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
