// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEntity(args?: GetEntityArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getEntity:getEntity", {
        "entitySelector": args.entitySelector,
        "from": args.from,
        "id": args.id,
        "name": args.name,
        "to": args.to,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEntity.
 */
export interface GetEntityArgs {
    entitySelector?: string;
    from?: string;
    id?: string;
    name?: string;
    to?: string;
    type?: string;
}

/**
 * A collection of values returned by getEntity.
 */
export interface GetEntityResult {
    readonly entitySelector?: string;
    readonly from?: string;
    readonly id: string;
    readonly name?: string;
    readonly properties: {[key: string]: string};
    readonly to?: string;
    readonly type?: string;
}
export function getEntityOutput(args?: GetEntityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityResult> {
    return pulumi.output(args).apply((a: any) => getEntity(a, opts))
}

/**
 * A collection of arguments for invoking getEntity.
 */
export interface GetEntityOutputArgs {
    entitySelector?: pulumi.Input<string>;
    from?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
