// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRemoteEnvironments(args?: GetRemoteEnvironmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetRemoteEnvironmentsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getRemoteEnvironments:getRemoteEnvironments", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRemoteEnvironments.
 */
export interface GetRemoteEnvironmentsArgs {
    id?: string;
}

/**
 * A collection of values returned by getRemoteEnvironments.
 */
export interface GetRemoteEnvironmentsResult {
    readonly id: string;
    readonly remoteEnvironments: outputs.GetRemoteEnvironmentsRemoteEnvironment[];
}
export function getRemoteEnvironmentsOutput(args?: GetRemoteEnvironmentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRemoteEnvironmentsResult> {
    return pulumi.output(args).apply((a: any) => getRemoteEnvironments(a, opts))
}

/**
 * A collection of arguments for invoking getRemoteEnvironments.
 */
export interface GetRemoteEnvironmentsOutputArgs {
    id?: pulumi.Input<string>;
}
