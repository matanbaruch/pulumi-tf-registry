// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGenericSettings(args?: GetGenericSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetGenericSettingsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getGenericSettings:getGenericSettings", {
        "filter": args.filter,
        "id": args.id,
        "schema": args.schema,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGenericSettings.
 */
export interface GetGenericSettingsArgs {
    filter?: string;
    id?: string;
    schema?: string;
    scope?: string;
}

/**
 * A collection of values returned by getGenericSettings.
 */
export interface GetGenericSettingsResult {
    readonly filter?: string;
    readonly id: string;
    readonly schema: string;
    readonly scope: string;
    readonly values: outputs.GetGenericSettingsValue[];
}
export function getGenericSettingsOutput(args?: GetGenericSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGenericSettingsResult> {
    return pulumi.output(args).apply((a: any) => getGenericSettings(a, opts))
}

/**
 * A collection of arguments for invoking getGenericSettings.
 */
export interface GetGenericSettingsOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    schema?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}
