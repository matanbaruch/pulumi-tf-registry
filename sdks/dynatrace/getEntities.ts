// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEntities(args?: GetEntitiesArgs, opts?: pulumi.InvokeOptions): Promise<GetEntitiesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getEntities:getEntities", {
        "entitySelector": args.entitySelector,
        "from": args.from,
        "id": args.id,
        "to": args.to,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEntities.
 */
export interface GetEntitiesArgs {
    entitySelector?: string;
    from?: string;
    id?: string;
    to?: string;
    type?: string;
}

/**
 * A collection of values returned by getEntities.
 */
export interface GetEntitiesResult {
    readonly entities: outputs.GetEntitiesEntity[];
    readonly entitySelector?: string;
    readonly from?: string;
    readonly id: string;
    readonly to?: string;
    readonly type?: string;
}
export function getEntitiesOutput(args?: GetEntitiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntitiesResult> {
    return pulumi.output(args).apply((a: any) => getEntities(a, opts))
}

/**
 * A collection of arguments for invoking getEntities.
 */
export interface GetEntitiesOutputArgs {
    entitySelector?: pulumi.Input<string>;
    from?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
