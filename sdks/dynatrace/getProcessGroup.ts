// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProcessGroup(args: GetProcessGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetProcessGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getProcessGroup:getProcessGroup", {
        "id": args.id,
        "name": args.name,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProcessGroup.
 */
export interface GetProcessGroupArgs {
    id?: string;
    name: string;
    tags?: string[];
}

/**
 * A collection of values returned by getProcessGroup.
 */
export interface GetProcessGroupResult {
    readonly id: string;
    readonly name: string;
    readonly tags?: string[];
}
export function getProcessGroupOutput(args: GetProcessGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProcessGroupResult> {
    return pulumi.output(args).apply((a: any) => getProcessGroup(a, opts))
}

/**
 * A collection of arguments for invoking getProcessGroup.
 */
export interface GetProcessGroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
