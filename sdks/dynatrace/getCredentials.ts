// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCredentials(args?: GetCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetCredentialsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getCredentials:getCredentials", {
        "id": args.id,
        "name": args.name,
        "scope": args.scope,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCredentials.
 */
export interface GetCredentialsArgs {
    id?: string;
    name?: string;
    scope?: string;
    type?: string;
}

/**
 * A collection of values returned by getCredentials.
 */
export interface GetCredentialsResult {
    readonly id: string;
    readonly name?: string;
    readonly scope?: string;
    readonly type?: string;
}
export function getCredentialsOutput(args?: GetCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getCredentials.
 */
export interface GetCredentialsOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
