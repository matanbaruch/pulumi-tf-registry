// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConsulAgentKubernetesSecret(args: GetConsulAgentKubernetesSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetConsulAgentKubernetesSecretResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getConsulAgentKubernetesSecret:getConsulAgentKubernetesSecret", {
        "clusterId": args.clusterId,
        "id": args.id,
        "projectId": args.projectId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConsulAgentKubernetesSecret.
 */
export interface GetConsulAgentKubernetesSecretArgs {
    clusterId: string;
    id?: string;
    projectId?: string;
    timeouts?: inputs.GetConsulAgentKubernetesSecretTimeouts;
}

/**
 * A collection of values returned by getConsulAgentKubernetesSecret.
 */
export interface GetConsulAgentKubernetesSecretResult {
    readonly clusterId: string;
    readonly id: string;
    readonly projectId: string;
    readonly secret: string;
    readonly timeouts?: outputs.GetConsulAgentKubernetesSecretTimeouts;
}
export function getConsulAgentKubernetesSecretOutput(args: GetConsulAgentKubernetesSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConsulAgentKubernetesSecretResult> {
    return pulumi.output(args).apply((a: any) => getConsulAgentKubernetesSecret(a, opts))
}

/**
 * A collection of arguments for invoking getConsulAgentKubernetesSecret.
 */
export interface GetConsulAgentKubernetesSecretOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetConsulAgentKubernetesSecretTimeoutsArgs>;
}
