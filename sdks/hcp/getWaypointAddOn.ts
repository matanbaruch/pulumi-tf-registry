// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWaypointAddOn(args?: GetWaypointAddOnArgs, opts?: pulumi.InvokeOptions): Promise<GetWaypointAddOnResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getWaypointAddOn:getWaypointAddOn", {
        "id": args.id,
        "inputVariables": args.inputVariables,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWaypointAddOn.
 */
export interface GetWaypointAddOnArgs {
    id?: string;
    inputVariables?: inputs.GetWaypointAddOnInputVariable[];
    name?: string;
}

/**
 * A collection of values returned by getWaypointAddOn.
 */
export interface GetWaypointAddOnResult {
    readonly applicationId: string;
    readonly createdBy: string;
    readonly definitionId: string;
    readonly description: string;
    readonly id: string;
    readonly inputVariables?: outputs.GetWaypointAddOnInputVariable[];
    readonly installCount: number;
    readonly labels: string[];
    readonly name: string;
    readonly organizationId: string;
    readonly outputValues: outputs.GetWaypointAddOnOutputValue[];
    readonly projectId: string;
    readonly readmeMarkdown: string;
    readonly status: number;
    readonly summary: string;
    readonly terraformNoCodeModuleSource: string;
}
export function getWaypointAddOnOutput(args?: GetWaypointAddOnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWaypointAddOnResult> {
    return pulumi.output(args).apply((a: any) => getWaypointAddOn(a, opts))
}

/**
 * A collection of arguments for invoking getWaypointAddOn.
 */
export interface GetWaypointAddOnOutputArgs {
    id?: pulumi.Input<string>;
    inputVariables?: pulumi.Input<pulumi.Input<inputs.GetWaypointAddOnInputVariableArgs>[]>;
    name?: pulumi.Input<string>;
}
