// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPackerBucketNames(args?: GetPackerBucketNamesArgs, opts?: pulumi.InvokeOptions): Promise<GetPackerBucketNamesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getPackerBucketNames:getPackerBucketNames", {
        "id": args.id,
        "projectId": args.projectId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackerBucketNames.
 */
export interface GetPackerBucketNamesArgs {
    id?: string;
    projectId?: string;
    timeouts?: inputs.GetPackerBucketNamesTimeouts;
}

/**
 * A collection of values returned by getPackerBucketNames.
 */
export interface GetPackerBucketNamesResult {
    readonly id: string;
    readonly names: string[];
    readonly organizationId: string;
    readonly projectId: string;
    readonly timeouts?: outputs.GetPackerBucketNamesTimeouts;
}
export function getPackerBucketNamesOutput(args?: GetPackerBucketNamesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackerBucketNamesResult> {
    return pulumi.output(args).apply((a: any) => getPackerBucketNames(a, opts))
}

/**
 * A collection of arguments for invoking getPackerBucketNames.
 */
export interface GetPackerBucketNamesOutputArgs {
    id?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetPackerBucketNamesTimeoutsArgs>;
}
