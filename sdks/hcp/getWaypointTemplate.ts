// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWaypointTemplate(args?: GetWaypointTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetWaypointTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getWaypointTemplate:getWaypointTemplate", {
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWaypointTemplate.
 */
export interface GetWaypointTemplateArgs {
    id?: string;
    name?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getWaypointTemplate.
 */
export interface GetWaypointTemplateResult {
    readonly description: string;
    readonly id: string;
    readonly labels: string[];
    readonly name: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly readmeMarkdownTemplate: string;
    readonly summary: string;
    readonly terraformCloudWorkspaceDetails: outputs.GetWaypointTemplateTerraformCloudWorkspaceDetails;
    readonly terraformNoCodeModuleSource: outputs.GetWaypointTemplateTerraformNoCodeModuleSource;
    readonly variableOptions: outputs.GetWaypointTemplateVariableOption[];
}
export function getWaypointTemplateOutput(args?: GetWaypointTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWaypointTemplateResult> {
    return pulumi.output(args).apply((a: any) => getWaypointTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getWaypointTemplate.
 */
export interface GetWaypointTemplateOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
