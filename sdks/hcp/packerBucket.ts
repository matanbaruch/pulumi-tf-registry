// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PackerBucket extends pulumi.CustomResource {
    /**
     * Get an existing PackerBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PackerBucketState, opts?: pulumi.CustomResourceOptions): PackerBucket {
        return new PackerBucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hcp:index/packerBucket:PackerBucket';

    /**
     * Returns true if the given object is an instance of PackerBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PackerBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PackerBucket.__pulumiType;
    }

    /**
     * The creation time of this bucket
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The bucket's name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the HCP organization where this bucket is located.
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * The ID of the project to create the bucket under. If unspecified, the bucket will be created in the project the provider
     * is configured with.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The buckets's HCP resource name in the format `packer/project/<project_id>/packer/<name>`.
     */
    public /*out*/ readonly resourceName!: pulumi.Output<string>;

    /**
     * Create a PackerBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PackerBucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PackerBucketArgs | PackerBucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PackerBucketState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["resourceName"] = state ? state.resourceName : undefined;
        } else {
            const args = argsOrState as PackerBucketArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["resourceName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PackerBucket.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PackerBucket resources.
 */
export interface PackerBucketState {
    /**
     * The creation time of this bucket
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The bucket's name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the HCP organization where this bucket is located.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The ID of the project to create the bucket under. If unspecified, the bucket will be created in the project the provider
     * is configured with.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The buckets's HCP resource name in the format `packer/project/<project_id>/packer/<name>`.
     */
    resourceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PackerBucket resource.
 */
export interface PackerBucketArgs {
    /**
     * The bucket's name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project to create the bucket under. If unspecified, the bucket will be created in the project the provider
     * is configured with.
     */
    projectId?: pulumi.Input<string>;
}
