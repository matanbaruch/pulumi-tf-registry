// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUserPrincipal(args?: GetUserPrincipalArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPrincipalResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getUserPrincipal:getUserPrincipal", {
        "email": args.email,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserPrincipal.
 */
export interface GetUserPrincipalArgs {
    email?: string;
    userId?: string;
}

/**
 * A collection of values returned by getUserPrincipal.
 */
export interface GetUserPrincipalResult {
    readonly email: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly userId: string;
}
export function getUserPrincipalOutput(args?: GetUserPrincipalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserPrincipalResult> {
    return pulumi.output(args).apply((a: any) => getUserPrincipal(a, opts))
}

/**
 * A collection of arguments for invoking getUserPrincipal.
 */
export interface GetUserPrincipalOutputArgs {
    email?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}
