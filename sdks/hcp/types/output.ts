// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AwsNetworkPeeringTimeouts {
    create?: string;
    default?: string;
    delete?: string;
}

export interface AwsTransitGatewayAttachmentTimeouts {
    create?: string;
    default?: string;
    delete?: string;
}

export interface AzurePeeringConnectionTimeouts {
    create?: string;
    default?: string;
    delete?: string;
}

export interface BoundaryClusterMaintenanceWindowConfig {
    /**
     * The maintenance day of the week for scheduled upgrades. Valid options for maintenance window day - `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`
     */
    day?: string;
    /**
     * The end time which upgrades can be performed. Uses 24H clock and must be in UTC time zone. Valid options include - 1 to 24 (inclusive)
     */
    end?: number;
    /**
     * The start time which upgrades can be performed. Uses 24H clock and must be in UTC time zone. Valid options include - 0 to 23 (inclusive)
     */
    start?: number;
    /**
     * The upgrade type for the cluster. Valid options for upgrade type - `AUTOMATIC`, `SCHEDULED`
     */
    upgradeType?: string;
}

export interface BoundaryClusterTimeouts {
    create?: string;
    default?: string;
    delete?: string;
}

export interface ConsulClusterIpAllowlist {
    /**
     * IP address range in CIDR notation.
     */
    address: string;
    /**
     * Description to help identify source (maximum 255 chars).
     */
    description?: string;
}

export interface ConsulClusterRootTokenTimeouts {
    default?: string;
}

export interface ConsulClusterTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    update?: string;
}

export interface ConsulSnapshotTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    update?: string;
}

export interface GetAwsNetworkPeeringTimeouts {
    read?: string;
}

export interface GetAwsTransitGatewayAttachmentTimeouts {
    default?: string;
}

export interface GetAzurePeeringConnectionTimeouts {
    read?: string;
}

export interface GetBoundaryClusterMaintenanceWindowConfig {
    day: string;
    end: number;
    start: number;
    upgradeType: string;
}

export interface GetBoundaryClusterTimeouts {
    default?: string;
}

export interface GetConsulAgentHelmConfigTimeouts {
    default?: string;
}

export interface GetConsulAgentKubernetesSecretTimeouts {
    default?: string;
}

export interface GetConsulClusterIpAllowlist {
    address: string;
    description: string;
}

export interface GetConsulClusterTimeouts {
    default?: string;
}

export interface GetConsulVersionsTimeouts {
    default?: string;
}

export interface GetHvnPeeringConnectionTimeouts {
    default?: string;
}

export interface GetHvnRouteAzureConfig {
    nextHopIpAddress: string;
    nextHopType: string;
}

export interface GetHvnRouteTimeouts {
    default?: string;
}

export interface GetHvnTimeouts {
    default?: string;
}

export interface GetIamPolicyBinding {
    /**
     * The set of principals to bind to the given role.
     */
    principals: string[];
    /**
     * The role name to bind to the given principals.
     */
    role: string;
}

export interface GetPackerBucketNamesTimeouts {
    default?: string;
}

export interface GetPackerRunTaskTimeouts {
    default?: string;
}

export interface GetVaultClusterAuditLogConfig {
    /**
     * CloudWatch access key ID for streaming audit logs
     */
    cloudwatchAccessKeyId: string;
    /**
     * CloudWatch group name of the target log stream for audit logs
     */
    cloudwatchGroupName: string;
    /**
     * CloudWatch region for streaming audit logs
     */
    cloudwatchRegion: string;
    /**
     * CloudWatch secret access key for streaming audit logs
     */
    cloudwatchSecretAccessKey: string;
    /**
     * CloudWatch stream name for the target log stream for audit logs
     */
    cloudwatchStreamName: string;
    /**
     * Datadog region for streaming audit logs
     */
    datadogRegion: string;
    /**
     * ElasticSearch dataset for streaming audit logs
     */
    elasticsearchDataset: string;
    /**
     * ElasticSearch endpoint for streaming audit logs
     */
    elasticsearchEndpoint: string;
    /**
     * ElasticSearch password for streaming audit logs
     */
    elasticsearchPassword: string;
    /**
     * ElasticSearch user for streaming audit logs
     */
    elasticsearchUser: string;
    /**
     * Grafana endpoint for streaming audit logs
     */
    grafanaEndpoint: string;
    /**
     * Grafana user for streaming audit logs
     */
    grafanaUser: string;
    /**
     * HTTP basic authentication password for streaming audit logs, one of the two available authentication methods, can be specified only if http_basic_user is also provided
     */
    httpBasicPassword: string;
    /**
     * HTTP basic authentication username for streaming audit logs, one of the two available authentication methods, can be specified only if http_basic_password is also provided
     */
    httpBasicUser: string;
    /**
     * HTTP bearer authentication token for streaming audit logs, one of the two available authentication methods, can be specified only if http_basic_user and http_basic_password are not provided
     */
    httpBearerToken: string;
    /**
     * HTTP codec for streaming audit logs, allowed values are JSON and NDJSON
     */
    httpCodec: string;
    /**
     * HTTP compression flag for streaming audit logs
     */
    httpCompression: boolean;
    /**
     * HTTP headers for streaming audit logs
     */
    httpHeaders: {[key: string]: string};
    /**
     * HTTP payload method for streaming audit logs, allowed values are PATCH, POST, or PUT
     */
    httpMethod: string;
    /**
     * HTTP payload prefix for streaming audit logs
     */
    httpPayloadPrefix: string;
    /**
     * HTTP payload suffix for streaming audit logs
     */
    httpPayloadSuffix: string;
    /**
     * HTTP URI for streaming audit logs
     */
    httpUri: string;
    /**
     * NewRelic Account ID for streaming audit logs
     */
    newrelicAccountId: string;
    /**
     * NewRelic license key for streaming audit logs
     */
    newrelicLicenseKey: string;
    /**
     * NewRelic region for streaming audit logs, allowed values are "US" and "EU"
     */
    newrelicRegion: string;
    /**
     * Splunk endpoint for streaming audit logs
     */
    splunkHecendpoint: string;
}

export interface GetVaultClusterIpAllowlist {
    address: string;
    description: string;
}

export interface GetVaultClusterMajorVersionUpgradeConfig {
    maintenanceWindowDay: string;
    maintenanceWindowTime: string;
    upgradeType: string;
}

export interface GetVaultClusterMetricsConfig {
    /**
     * CloudWatch access key ID for streaming metrics
     */
    cloudwatchAccessKeyId: string;
    /**
     * CloudWatch namespace for streaming metrics
     */
    cloudwatchNamespace: string;
    /**
     * CloudWatch region for streaming metrics
     */
    cloudwatchRegion: string;
    /**
     * CloudWatch secret access key for streaming metrics
     */
    cloudwatchSecretAccessKey: string;
    /**
     * Datadog region for streaming metrics
     */
    datadogRegion: string;
    /**
     * ElasticSearch dataset for streaming metrics
     */
    elasticsearchDataset: string;
    /**
     * ElasticSearch endpoint for streaming metrics
     */
    elasticsearchEndpoint: string;
    /**
     * ElasticSearch password for streaming metrics
     */
    elasticsearchPassword: string;
    /**
     * ElasticSearch user for streaming metrics
     */
    elasticsearchUser: string;
    /**
     * Grafana endpoint for streaming metrics
     */
    grafanaEndpoint: string;
    /**
     * Grafana user for streaming metrics
     */
    grafanaUser: string;
    /**
     * HTTP basic authentication password for streaming metrics, one of the two available authentication methods, can be specified only if http_basic_user is also provided
     */
    httpBasicPassword: string;
    /**
     * HTTP basic authentication username for streaming metrics, one of the two available authentication methods, can be specified only if http_basic_password is also provided
     */
    httpBasicUser: string;
    /**
     * HTTP bearer authentication token for streaming metrics, one of the two available authentication methods, can be specified only if http_basic_user and http_basic_password are not provided
     */
    httpBearerToken: string;
    /**
     * HTTP codec for streaming metrics, allowed values are JSON and NDJSON
     */
    httpCodec: string;
    /**
     * HTTP compression flag for streaming metrics
     */
    httpCompression: boolean;
    /**
     * HTTP headers for streaming metrics
     */
    httpHeaders: {[key: string]: string};
    /**
     * HTTP payload method for streaming metrics, allowed values are PATCH, POST, or PUT
     */
    httpMethod: string;
    /**
     * HTTP payload prefix for streaming metrics
     */
    httpPayloadPrefix: string;
    /**
     * HTTP payload suffix for streaming metrics
     */
    httpPayloadSuffix: string;
    /**
     * HTTP URI for streaming metrics
     */
    httpUri: string;
    /**
     * NewRelic Account ID for streaming metrics
     */
    newrelicAccountId: string;
    /**
     * NewRelic license key for streaming metrics
     */
    newrelicLicenseKey: string;
    /**
     * NewRelic region for streaming metrics, allowed values are "US" and "EU"
     */
    newrelicRegion: string;
    /**
     * Splunk endpoint for streaming metrics
     */
    splunkHecendpoint: string;
}

export interface GetVaultClusterTimeouts {
    default?: string;
}

export interface GetVaultPluginTimeouts {
    default?: string;
}

export interface GetWaypointActionRequest {
    /**
     * Custom mode allows users to define the HTTP method, the request body, etc.
     */
    custom: outputs.GetWaypointActionRequestCustom;
}

export interface GetWaypointActionRequestCustom {
    /**
     * The body to be submitted with the request.
     */
    body: string;
    /**
     * Key value headers to send with the request.
     */
    headers: {[key: string]: string};
    /**
     * The HTTP method to use for the request.
     */
    method: string;
    /**
     * The full URL this request should make when invoked.
     */
    url: string;
}

export interface GetWaypointAddOnDefinitionTerraformCloudWorkspaceDetails {
    name: string;
    terraformProjectId: string;
}

export interface GetWaypointAddOnDefinitionTerraformNoCodeModule {
    source: string;
    version: string;
}

export interface GetWaypointAddOnDefinitionVariableOption {
    /**
     * Variable name
     */
    name: string;
    /**
     * List of options
     */
    options: string[];
    /**
     * Whether the variable is editable by the user creating an add-on
     */
    userEditable: boolean;
    /**
     * Variable type
     */
    variableType: string;
}

export interface GetWaypointAddOnInputVariable {
    /**
     * Variable name
     */
    name: string;
    /**
     * Variable value
     */
    value: string;
    /**
     * Variable type
     */
    variableType: string;
}

export interface GetWaypointAddOnOutputValue {
    /**
     * The name of the output value.
     */
    name: string;
    /**
     * Whether the output value is sensitive.
     */
    sensitive: boolean;
    /**
     * The type of the output value.
     */
    type: string;
    /**
     * The value of the output value.
     */
    value: string;
}

export interface GetWaypointApplicationInputVariable {
    /**
     * Variable name
     */
    name: string;
    /**
     * Variable value
     */
    value: string;
    /**
     * Variable type
     */
    variableType: string;
}

export interface GetWaypointApplicationOutputValue {
    /**
     * The name of the output value.
     */
    name: string;
    /**
     * Whether the output value is Sensitive.
     */
    sensitive: boolean;
    /**
     * The type of the output value.
     */
    type: string;
    /**
     * The value of the output value.
     */
    value: string;
}

export interface GetWaypointTemplateTerraformCloudWorkspaceDetails {
    name: string;
    terraformProjectId: string;
}

export interface GetWaypointTemplateTerraformNoCodeModuleSource {
}

export interface GetWaypointTemplateVariableOption {
    /**
     * Variable name
     */
    name: string;
    /**
     * List of options
     */
    options: string[];
    /**
     * Whether the variable is editable by the user creating an application
     */
    userEditable: boolean;
    /**
     * Variable type
     */
    variableType: string;
}

export interface HvnPeeringConnectionTimeouts {
    create?: string;
    default?: string;
    delete?: string;
}

export interface HvnRouteAzureConfig {
    /**
     * Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VIRTUAL_APPLIANCE.
     */
    nextHopIpAddress: string;
    /**
     * The type of Azure hop the packet should be sent to. Valid options for Next Hop Type - `VIRTUAL_APPLIANCE` or `VIRTUAL_NETWORK_GATEWAY`
     */
    nextHopType: string;
}

export interface HvnRouteTimeouts {
    create?: string;
    default?: string;
    delete?: string;
}

export interface HvnTimeouts {
    create?: string;
    default?: string;
    delete?: string;
}

export interface IamWorkloadIdentityProviderAws {
    /**
     * The AWS Account ID that is allowed to exchange workload identities.
     */
    accountId: string;
}

export interface IamWorkloadIdentityProviderOidc {
    /**
     * allowed_audiences is the set of audiences set on the access token that are allowed to exchange identities. The access token must have an audience that is contained in this set. If no audience is set, the default allowed audience will be the resource name of the WorkloadIdentityProvider.
     */
    allowedAudiences: string[];
    /**
     * The URL of the OIDC Issuer that is allowed to exchange workload identities.
     */
    issuerUri: string;
}

export interface LogStreamingDestinationCloudwatch {
    /**
     * The external_id to provide when assuming the aws IAM role.
     */
    externalId: string;
    /**
     * The log_group_name of the CloudWatch destination.
     */
    logGroupName: string;
    /**
     * The region the CloudWatch destination is set up to stream to.
     */
    region: string;
    /**
     * The role_arn that will be assumed to stream logs.
     */
    roleArn: string;
}

export interface LogStreamingDestinationDatadog {
    /**
     * The value for the DD-API-KEY to send when making requests to DataDog.
     */
    apiKey: string;
    /**
     * The value for the DD-APPLICATION-KEY to send when making requests to DataDog.
     */
    applicationKey?: string;
    /**
     * The Datadog endpoint to send logs to.
     */
    endpoint: string;
}

export interface LogStreamingDestinationSplunkCloud {
    /**
     * The Splunk Cloud endpoint to send logs to.
     */
    endpoint: string;
    /**
     * The authentication token that will be used by the platform to access Splunk Cloud.
     */
    token: string;
}

export interface NotificationsWebhookConfig {
    /**
     * The arbitrary secret that HCP uses to sign all its webhook requests. This is a write-only field, it is written once and not visible thereafter.
     */
    hmacKey?: string;
    url: string;
}

export interface NotificationsWebhookSubscription {
    /**
     * The information about the events of a webhook subscription. The service that owns the resource is responsible for maintaining events. Refer to the service's webhook documentation for more information.
     */
    events: outputs.NotificationsWebhookSubscriptionEvent[];
    /**
     * Refers to the resource the webhook is subscribed to. If not set, the webhook subscribes to the emitted events listed in events for any resource in the webhook's project.
     */
    resourceId?: string;
}

export interface NotificationsWebhookSubscriptionEvent {
    /**
     * The list of event actions subscribed for the resource type set as the source. For example, `["create", "update"]`. When the action is '*', it means that the webhook is subscribed to all event actions for the event source.
     */
    actions: string[];
    source: string;
}

export interface PackerChannelAssignmentTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    update?: string;
}

export interface PackerChannelTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    update?: string;
}

export interface PackerRunTaskTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    update?: string;
}

export interface VaultClusterAdminTokenTimeouts {
    create?: string;
    delete?: string;
    read?: string;
}

export interface VaultClusterAuditLogConfig {
    /**
     * CloudWatch access key ID for streaming audit logs
     */
    cloudwatchAccessKeyId?: string;
    /**
     * CloudWatch group name of the target log stream for audit logs
     */
    cloudwatchGroupName: string;
    /**
     * CloudWatch region for streaming audit logs
     */
    cloudwatchRegion?: string;
    /**
     * CloudWatch secret access key for streaming audit logs
     */
    cloudwatchSecretAccessKey?: string;
    /**
     * CloudWatch stream name for the target log stream for audit logs
     */
    cloudwatchStreamName: string;
    /**
     * Datadog api key for streaming audit logs
     */
    datadogApiKey?: string;
    /**
     * Datadog region for streaming audit logs
     */
    datadogRegion?: string;
    /**
     * ElasticSearch dataset for streaming audit logs
     */
    elasticsearchDataset: string;
    /**
     * ElasticSearch endpoint for streaming audit logs
     */
    elasticsearchEndpoint?: string;
    /**
     * ElasticSearch password for streaming audit logs
     */
    elasticsearchPassword?: string;
    /**
     * ElasticSearch user for streaming audit logs
     */
    elasticsearchUser?: string;
    /**
     * Grafana endpoint for streaming audit logs
     */
    grafanaEndpoint?: string;
    /**
     * Grafana password for streaming audit logs
     */
    grafanaPassword?: string;
    /**
     * Grafana user for streaming audit logs
     */
    grafanaUser?: string;
    /**
     * HTTP basic authentication password for streaming audit logs, one of the two available authentication methods, can be specified only if http_basic_user is also provided
     */
    httpBasicPassword?: string;
    /**
     * HTTP basic authentication username for streaming audit logs, one of the two available authentication methods, can be specified only if http_basic_password is also provided
     */
    httpBasicUser?: string;
    /**
     * HTTP bearer authentication token for streaming audit logs, one of the two available authentication methods, can be specified only if http_basic_user and http_basic_password are not provided
     */
    httpBearerToken?: string;
    /**
     * HTTP codec for streaming audit logs, allowed values are JSON and NDJSON
     */
    httpCodec?: string;
    /**
     * HTTP compression flag for streaming audit logs
     */
    httpCompression?: boolean;
    /**
     * HTTP headers for streaming audit logs
     */
    httpHeaders?: {[key: string]: string};
    /**
     * HTTP payload method for streaming audit logs, , allowed values are PATCH, POST, or PUT
     */
    httpMethod?: string;
    /**
     * HTTP payload prefix for streaming audit logs
     */
    httpPayloadPrefix?: string;
    /**
     * HTTP payload suffix for streaming audit logs
     */
    httpPayloadSuffix?: string;
    /**
     * HTTP URI for streaming audit logs
     */
    httpUri?: string;
    /**
     * NewRelic Account ID for streaming audit logs
     */
    newrelicAccountId?: string;
    /**
     * NewRelic license key for streaming audit logs
     */
    newrelicLicenseKey?: string;
    /**
     * NewRelic region for streaming audit logs, allowed values are "US" and "EU"
     */
    newrelicRegion?: string;
    /**
     * Splunk endpoint for streaming audit logs
     */
    splunkHecendpoint?: string;
    /**
     * Splunk token for streaming audit logs
     */
    splunkToken?: string;
}

export interface VaultClusterIpAllowlist {
    /**
     * IP address range in CIDR notation.
     */
    address: string;
    /**
     * Description to help identify source (maximum 255 chars).
     */
    description?: string;
}

export interface VaultClusterMajorVersionUpgradeConfig {
    /**
     * The maintenance day of the week for scheduled upgrades. Valid options for maintenance window day - `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`
     */
    maintenanceWindowDay?: string;
    /**
     * The maintenance time frame for scheduled upgrades. Valid options for maintenance window time - `WINDOW_12AM_4AM`, `WINDOW_6AM_10AM`, `WINDOW_12PM_4PM`, `WINDOW_6PM_10PM`
     */
    maintenanceWindowTime?: string;
    /**
     * The major upgrade type for the cluster. Valid options for upgrade type - `AUTOMATIC`, `SCHEDULED`, `MANUAL`
     */
    upgradeType: string;
}

export interface VaultClusterMetricsConfig {
    /**
     * CloudWatch access key ID for streaming metrics
     */
    cloudwatchAccessKeyId?: string;
    /**
     * CloudWatch namespace for streaming metrics
     */
    cloudwatchNamespace: string;
    /**
     * CloudWatch region for streaming metrics
     */
    cloudwatchRegion?: string;
    /**
     * CloudWatch secret access key for streaming metrics
     */
    cloudwatchSecretAccessKey?: string;
    /**
     * Datadog api key for streaming metrics
     */
    datadogApiKey?: string;
    /**
     * Datadog region for streaming metrics
     */
    datadogRegion?: string;
    /**
     * ElasticSearch dataset for streaming metrics
     */
    elasticsearchDataset: string;
    /**
     * ElasticSearch endpoint for streaming metrics
     */
    elasticsearchEndpoint?: string;
    /**
     * ElasticSearch password for streaming metrics
     */
    elasticsearchPassword?: string;
    /**
     * ElasticSearch user for streaming metrics
     */
    elasticsearchUser?: string;
    /**
     * Grafana endpoint for streaming metrics
     */
    grafanaEndpoint?: string;
    /**
     * Grafana password for streaming metrics
     */
    grafanaPassword?: string;
    /**
     * Grafana user for streaming metrics
     */
    grafanaUser?: string;
    /**
     * HTTP basic authentication password for streaming metrics, one of the two available authentication methods, can be specified only if http_basic_user is also specified
     */
    httpBasicPassword?: string;
    /**
     * HTTP basic authentication username for streaming metrics, one of the two available authentication methods, can be specified only if http_basic_password is also specified
     */
    httpBasicUser?: string;
    /**
     * HTTP bearer authentication token for streaming metrics, one of the two available authentication methods, can be specified only if http_basic_user and http_basic_password are not provided
     */
    httpBearerToken?: string;
    /**
     * HTTP codec for streaming metrics, allowed values are JSON and NDJSON
     */
    httpCodec?: string;
    /**
     * HTTP compression flag for streaming metrics
     */
    httpCompression?: boolean;
    /**
     * HTTP headers for streaming metrics
     */
    httpHeaders?: {[key: string]: string};
    /**
     * HTTP payload method for streaming metrics, allowed values are PATCH, POST, or PUT
     */
    httpMethod?: string;
    /**
     * HTTP payload prefix for streaming metrics
     */
    httpPayloadPrefix?: string;
    /**
     * HTTP payload suffix for streaming metrics
     */
    httpPayloadSuffix?: string;
    /**
     * HTTP URI for streaming metrics
     */
    httpUri?: string;
    /**
     * NewRelic Account ID for streaming metrics
     */
    newrelicAccountId?: string;
    /**
     * NewRelic license key for streaming metrics
     */
    newrelicLicenseKey?: string;
    /**
     * NewRelic region for streaming metrics, allowed values are "US" and "EU"
     */
    newrelicRegion?: string;
    /**
     * Splunk endpoint for streaming metrics
     */
    splunkHecendpoint?: string;
    /**
     * Splunk token for streaming metrics
     */
    splunkToken?: string;
}

export interface VaultClusterTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    update?: string;
}

export interface VaultPluginTimeouts {
    default?: string;
}

export interface WaypointActionRequest {
    /**
     * Custom mode allows users to define the HTTP method, the request body, etc.
     */
    custom?: outputs.WaypointActionRequestCustom;
}

export interface WaypointActionRequestCustom {
    /**
     * The body to be submitted with the request.
     */
    body?: string;
    /**
     * Key value headers to send with the request.
     */
    headers?: {[key: string]: string};
    /**
     * The HTTP method to use for the request. Must be one of: 'GET', 'POST', 'PUT', 'DELETE', or 'PATCH'.
     */
    method: string;
    /**
     * The full URL this request should make when invoked.
     */
    url?: string;
}

export interface WaypointAddOnAddOnDefinitionInputVariable {
    /**
     * Variable name
     */
    name: string;
    /**
     * Variable value
     */
    value: string;
    /**
     * Variable type
     */
    variableType?: string;
}

export interface WaypointAddOnAddOnInputVariable {
    /**
     * Variable name
     */
    name: string;
    /**
     * Variable value
     */
    value: string;
    /**
     * Variable type
     */
    variableType: string;
}

export interface WaypointAddOnDefinitionTerraformCloudWorkspaceDetails {
    name: string;
    terraformProjectId: string;
}

export interface WaypointAddOnDefinitionVariableOption {
    /**
     * Variable name
     */
    name: string;
    /**
     * List of options
     */
    options: string[];
    /**
     * Whether the variable is editable by the user creating an add-on. If options are provided, then the user may only use those options, regardless of this setting.
     */
    userEditable: boolean;
    /**
     * Variable type
     */
    variableType: string;
}

export interface WaypointAddOnOutputValue {
    /**
     * The name of the output value.
     */
    name: string;
    /**
     * Whether the output value is sensitive.
     */
    sensitive: boolean;
    /**
     * The type of the output value.
     */
    type: string;
    /**
     * The value of the output value.
     */
    value: string;
}

export interface WaypointApplicationApplicationInputVariable {
    /**
     * Variable name
     */
    name: string;
    /**
     * Variable value
     */
    value: string;
    /**
     * Variable type
     */
    variableType: string;
}

export interface WaypointApplicationOutputValue {
    /**
     * The name of the output value.
     */
    name: string;
    /**
     * Whether the output value is Sensitive.
     */
    sensitive: boolean;
    /**
     * The type of the output value.
     */
    type: string;
    /**
     * The value of the output value.
     */
    value: string;
}

export interface WaypointApplicationTemplateInputVariable {
    /**
     * Variable name
     */
    name: string;
    /**
     * Variable value
     */
    value: string;
    /**
     * Variable type
     */
    variableType?: string;
}

export interface WaypointTemplateTerraformCloudWorkspaceDetails {
    name: string;
    terraformProjectId: string;
}

export interface WaypointTemplateVariableOption {
    /**
     * Variable name
     */
    name: string;
    /**
     * List of options
     */
    options: string[];
    /**
     * Whether the variable is editable by the user creating an application
     */
    userEditable: boolean;
    /**
     * Variable type
     */
    variableType: string;
}

export namespace config {
    export interface WorkloadIdentities {
        /**
         * The resource_name of the Workload Identity Provider to exchange the token with.
         */
        resourceName: string;
        /**
         * The JWT token retrieved from an OpenID Connect (OIDC) or OAuth2 provider. At least one of `token_file` or `token` must be set, if both are set then `token` takes precedence.
         */
        token?: string;
        /**
         * The path to a file containing a JWT token retrieved from an OpenID Connect (OIDC) or OAuth2 provider. At least one of `token_file` or `token` must be set, if both are set then `token` takes precedence.
         */
        tokenFile?: string;
    }

}
