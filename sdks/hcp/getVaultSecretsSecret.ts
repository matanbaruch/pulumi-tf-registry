// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVaultSecretsSecret(args: GetVaultSecretsSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetVaultSecretsSecretResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getVaultSecretsSecret:getVaultSecretsSecret", {
        "appName": args.appName,
        "secretName": args.secretName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVaultSecretsSecret.
 */
export interface GetVaultSecretsSecretArgs {
    appName: string;
    secretName: string;
}

/**
 * A collection of values returned by getVaultSecretsSecret.
 */
export interface GetVaultSecretsSecretResult {
    readonly appName: string;
    readonly id: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly secretName: string;
    readonly secretValue: string;
}
export function getVaultSecretsSecretOutput(args: GetVaultSecretsSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVaultSecretsSecretResult> {
    return pulumi.output(args).apply((a: any) => getVaultSecretsSecret(a, opts))
}

/**
 * A collection of arguments for invoking getVaultSecretsSecret.
 */
export interface GetVaultSecretsSecretOutputArgs {
    appName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}
