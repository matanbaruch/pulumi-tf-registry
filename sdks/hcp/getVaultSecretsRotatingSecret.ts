// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVaultSecretsRotatingSecret(args: GetVaultSecretsRotatingSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetVaultSecretsRotatingSecretResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getVaultSecretsRotatingSecret:getVaultSecretsRotatingSecret", {
        "appName": args.appName,
        "secretName": args.secretName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVaultSecretsRotatingSecret.
 */
export interface GetVaultSecretsRotatingSecretArgs {
    appName: string;
    secretName: string;
}

/**
 * A collection of values returned by getVaultSecretsRotatingSecret.
 */
export interface GetVaultSecretsRotatingSecretResult {
    readonly appName: string;
    readonly id: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly secretName: string;
    readonly secretProvider: string;
    readonly secretValues: {[key: string]: string};
    readonly secretVersion: number;
}
export function getVaultSecretsRotatingSecretOutput(args: GetVaultSecretsRotatingSecretOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVaultSecretsRotatingSecretResult> {
    return pulumi.output(args).apply((a: any) => getVaultSecretsRotatingSecret(a, opts))
}

/**
 * A collection of arguments for invoking getVaultSecretsRotatingSecret.
 */
export interface GetVaultSecretsRotatingSecretOutputArgs {
    appName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}
