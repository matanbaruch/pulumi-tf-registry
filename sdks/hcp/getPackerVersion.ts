// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPackerVersion(args: GetPackerVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetPackerVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getPackerVersion:getPackerVersion", {
        "bucketName": args.bucketName,
        "channelName": args.channelName,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackerVersion.
 */
export interface GetPackerVersionArgs {
    bucketName: string;
    channelName: string;
    projectId?: string;
}

/**
 * A collection of values returned by getPackerVersion.
 */
export interface GetPackerVersionResult {
    readonly authorId: string;
    readonly bucketName: string;
    readonly channelName: string;
    readonly createdAt: string;
    readonly fingerprint: string;
    readonly id: string;
    readonly name: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly revokeAt: string;
    readonly updatedAt: string;
}
export function getPackerVersionOutput(args: GetPackerVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackerVersionResult> {
    return pulumi.output(args).apply((a: any) => getPackerVersion(a, opts))
}

/**
 * A collection of arguments for invoking getPackerVersion.
 */
export interface GetPackerVersionOutputArgs {
    bucketName: pulumi.Input<string>;
    channelName: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
