// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Hvn extends pulumi.CustomResource {
    /**
     * Get an existing Hvn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HvnState, opts?: pulumi.CustomResourceOptions): Hvn {
        return new Hvn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hcp:index/hvn:Hvn';

    /**
     * Returns true if the given object is an instance of Hvn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hvn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hvn.__pulumiType;
    }

    /**
     * The CIDR range of the HVN. If this is not provided, the service will provide a default value.
     */
    public readonly cidrBlock!: pulumi.Output<string>;
    /**
     * The provider where the HVN is located. The provider 'aws' is generally available and 'azure' is in public beta.
     */
    public readonly cloudProvider!: pulumi.Output<string>;
    /**
     * The time that the HVN was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the HashiCorp Virtual Network (HVN).
     */
    public readonly hvnId!: pulumi.Output<string>;
    /**
     * The ID of the HCP organization where the HVN is located.
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * The ID of the HCP project where the HVN is located. If not specified, the project specified in the HCP Provider config
     * block will be used, if configured. If a project is not configured in the HCP Provider config block, the oldest project
     * in the organization will be used.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The provider account ID where the HVN is located.
     */
    public /*out*/ readonly providerAccountId!: pulumi.Output<string>;
    /**
     * The region where the HVN is located.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * A unique URL identifying the HVN.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The state of the HVN.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.HvnTimeouts | undefined>;

    /**
     * Create a Hvn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HvnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HvnArgs | HvnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HvnState | undefined;
            resourceInputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            resourceInputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["hvnId"] = state ? state.hvnId : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["providerAccountId"] = state ? state.providerAccountId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as HvnArgs | undefined;
            if ((!args || args.cloudProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProvider'");
            }
            if ((!args || args.hvnId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hvnId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["cloudProvider"] = args ? args.cloudProvider : undefined;
            resourceInputs["hvnId"] = args ? args.hvnId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["providerAccountId"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Hvn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Hvn resources.
 */
export interface HvnState {
    /**
     * The CIDR range of the HVN. If this is not provided, the service will provide a default value.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * The provider where the HVN is located. The provider 'aws' is generally available and 'azure' is in public beta.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * The time that the HVN was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the HashiCorp Virtual Network (HVN).
     */
    hvnId?: pulumi.Input<string>;
    /**
     * The ID of the HCP organization where the HVN is located.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The ID of the HCP project where the HVN is located. If not specified, the project specified in the HCP Provider config
     * block will be used, if configured. If a project is not configured in the HCP Provider config block, the oldest project
     * in the organization will be used.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The provider account ID where the HVN is located.
     */
    providerAccountId?: pulumi.Input<string>;
    /**
     * The region where the HVN is located.
     */
    region?: pulumi.Input<string>;
    /**
     * A unique URL identifying the HVN.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The state of the HVN.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.HvnTimeouts>;
}

/**
 * The set of arguments for constructing a Hvn resource.
 */
export interface HvnArgs {
    /**
     * The CIDR range of the HVN. If this is not provided, the service will provide a default value.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * The provider where the HVN is located. The provider 'aws' is generally available and 'azure' is in public beta.
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * The ID of the HashiCorp Virtual Network (HVN).
     */
    hvnId: pulumi.Input<string>;
    /**
     * The ID of the HCP project where the HVN is located. If not specified, the project specified in the HCP Provider config
     * block will be used, if configured. If a project is not configured in the HCP Provider config block, the oldest project
     * in the organization will be used.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region where the HVN is located.
     */
    region: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.HvnTimeouts>;
}
