// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WaypointApplication extends pulumi.CustomResource {
    /**
     * Get an existing WaypointApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WaypointApplicationState, opts?: pulumi.CustomResourceOptions): WaypointApplication {
        return new WaypointApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hcp:index/waypointApplication:WaypointApplication';

    /**
     * Returns true if the given object is an instance of WaypointApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WaypointApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WaypointApplication.__pulumiType;
    }

    /**
     * Input variables set for the application.
     */
    public readonly applicationInputVariables!: pulumi.Output<outputs.WaypointApplicationApplicationInputVariable[] | undefined>;
    /**
     * The name of the Application.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Internal Namespace ID.
     */
    public /*out*/ readonly namespaceId!: pulumi.Output<string>;
    /**
     * The ID of the HCP organization where the Waypoint Application is located.
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    public /*out*/ readonly outputValues!: pulumi.Output<outputs.WaypointApplicationOutputValue[]>;
    /**
     * The ID of the HCP project where the Waypoint Application is located.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Instructions for using the Application (markdown format supported). Note: this is a base64 encoded string, and can only
     * be set in configuration after initial creation. The initial version of the README is generated from the README Template
     * from source Template.
     */
    public readonly readmeMarkdown!: pulumi.Output<string>;
    /**
     * ID of the Template this Application is based on.
     */
    public readonly templateId!: pulumi.Output<string>;
    /**
     * Input variables set for the application.
     */
    public /*out*/ readonly templateInputVariables!: pulumi.Output<outputs.WaypointApplicationTemplateInputVariable[]>;
    /**
     * Name of the Template this Application is based on.
     */
    public /*out*/ readonly templateName!: pulumi.Output<string>;

    /**
     * Create a WaypointApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WaypointApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WaypointApplicationArgs | WaypointApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WaypointApplicationState | undefined;
            resourceInputs["applicationInputVariables"] = state ? state.applicationInputVariables : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespaceId"] = state ? state.namespaceId : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["outputValues"] = state ? state.outputValues : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["readmeMarkdown"] = state ? state.readmeMarkdown : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["templateInputVariables"] = state ? state.templateInputVariables : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
        } else {
            const args = argsOrState as WaypointApplicationArgs | undefined;
            if ((!args || args.templateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateId'");
            }
            resourceInputs["applicationInputVariables"] = args ? args.applicationInputVariables : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["readmeMarkdown"] = args ? args.readmeMarkdown : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["namespaceId"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["outputValues"] = undefined /*out*/;
            resourceInputs["templateInputVariables"] = undefined /*out*/;
            resourceInputs["templateName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WaypointApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WaypointApplication resources.
 */
export interface WaypointApplicationState {
    /**
     * Input variables set for the application.
     */
    applicationInputVariables?: pulumi.Input<pulumi.Input<inputs.WaypointApplicationApplicationInputVariable>[]>;
    /**
     * The name of the Application.
     */
    name?: pulumi.Input<string>;
    /**
     * Internal Namespace ID.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * The ID of the HCP organization where the Waypoint Application is located.
     */
    organizationId?: pulumi.Input<string>;
    outputValues?: pulumi.Input<pulumi.Input<inputs.WaypointApplicationOutputValue>[]>;
    /**
     * The ID of the HCP project where the Waypoint Application is located.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Instructions for using the Application (markdown format supported). Note: this is a base64 encoded string, and can only
     * be set in configuration after initial creation. The initial version of the README is generated from the README Template
     * from source Template.
     */
    readmeMarkdown?: pulumi.Input<string>;
    /**
     * ID of the Template this Application is based on.
     */
    templateId?: pulumi.Input<string>;
    /**
     * Input variables set for the application.
     */
    templateInputVariables?: pulumi.Input<pulumi.Input<inputs.WaypointApplicationTemplateInputVariable>[]>;
    /**
     * Name of the Template this Application is based on.
     */
    templateName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WaypointApplication resource.
 */
export interface WaypointApplicationArgs {
    /**
     * Input variables set for the application.
     */
    applicationInputVariables?: pulumi.Input<pulumi.Input<inputs.WaypointApplicationApplicationInputVariable>[]>;
    /**
     * The name of the Application.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the HCP project where the Waypoint Application is located.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Instructions for using the Application (markdown format supported). Note: this is a base64 encoded string, and can only
     * be set in configuration after initial creation. The initial version of the README is generated from the README Template
     * from source Template.
     */
    readmeMarkdown?: pulumi.Input<string>;
    /**
     * ID of the Template this Application is based on.
     */
    templateId: pulumi.Input<string>;
}
