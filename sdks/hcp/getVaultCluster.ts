// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVaultCluster(args: GetVaultClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetVaultClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcp:index/getVaultCluster:getVaultCluster", {
        "auditLogConfigs": args.auditLogConfigs,
        "clusterId": args.clusterId,
        "id": args.id,
        "metricsConfigs": args.metricsConfigs,
        "projectId": args.projectId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVaultCluster.
 */
export interface GetVaultClusterArgs {
    auditLogConfigs?: inputs.GetVaultClusterAuditLogConfig[];
    clusterId: string;
    id?: string;
    metricsConfigs?: inputs.GetVaultClusterMetricsConfig[];
    projectId?: string;
    timeouts?: inputs.GetVaultClusterTimeouts;
}

/**
 * A collection of values returned by getVaultCluster.
 */
export interface GetVaultClusterResult {
    readonly auditLogConfigs?: outputs.GetVaultClusterAuditLogConfig[];
    readonly cloudProvider: string;
    readonly clusterId: string;
    readonly createdAt: string;
    readonly hvnId: string;
    readonly id: string;
    readonly ipAllowlists: outputs.GetVaultClusterIpAllowlist[];
    readonly majorVersionUpgradeConfigs: outputs.GetVaultClusterMajorVersionUpgradeConfig[];
    readonly metricsConfigs?: outputs.GetVaultClusterMetricsConfig[];
    readonly minVaultVersion: string;
    readonly namespace: string;
    readonly organizationId: string;
    readonly pathsFilters: string[];
    readonly primaryLink: string;
    readonly projectId: string;
    readonly proxyEndpoint: string;
    readonly publicEndpoint: boolean;
    readonly region: string;
    readonly selfLink: string;
    readonly state: string;
    readonly tier: string;
    readonly timeouts?: outputs.GetVaultClusterTimeouts;
    readonly vaultPrivateEndpointUrl: string;
    readonly vaultProxyEndpointUrl: string;
    readonly vaultPublicEndpointUrl: string;
    readonly vaultVersion: string;
}
export function getVaultClusterOutput(args: GetVaultClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVaultClusterResult> {
    return pulumi.output(args).apply((a: any) => getVaultCluster(a, opts))
}

/**
 * A collection of arguments for invoking getVaultCluster.
 */
export interface GetVaultClusterOutputArgs {
    auditLogConfigs?: pulumi.Input<pulumi.Input<inputs.GetVaultClusterAuditLogConfigArgs>[]>;
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    metricsConfigs?: pulumi.Input<pulumi.Input<inputs.GetVaultClusterMetricsConfigArgs>[]>;
    projectId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetVaultClusterTimeoutsArgs>;
}
