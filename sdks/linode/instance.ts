// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'linode:index/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Configuration options for alert triggers on this Linode.
     */
    public readonly alerts!: pulumi.Output<outputs.InstanceAlerts | undefined>;
    /**
     * A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if 'image' is provided.
     */
    public readonly authorizedKeys!: pulumi.Output<string[] | undefined>;
    /**
     * A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's
     * `~/.ssh/authorized_keys` file automatically. Only accepted if 'image' is provided.
     */
    public readonly authorizedUsers!: pulumi.Output<string[] | undefined>;
    /**
     * A Backup ID from another Linode's available backups. Your User must have read_write access to that Linode, the Backup
     * must have a status of successful, and the Linode must be deployed to the same region as the Backup. See
     * /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually
     * exclusive.
     */
    public readonly backupId!: pulumi.Output<number | undefined>;
    /**
     * Information about this Linode's backups status.
     */
    public /*out*/ readonly backups!: pulumi.Output<outputs.InstanceBackup[]>;
    /**
     * If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will
     * incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
     */
    public readonly backupsEnabled!: pulumi.Output<boolean>;
    /**
     * The Label of the Instance Config that should be used to boot the Linode instance.
     */
    public readonly bootConfigLabel!: pulumi.Output<string>;
    public readonly booted!: pulumi.Output<boolean>;
    /**
     * Configuration profiles define the VM settings and boot behavior of the Linode Instance.
     *
     * @deprecated Deprecated
     */
    public readonly configs!: pulumi.Output<outputs.InstanceConfig[] | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly disks!: pulumi.Output<outputs.InstanceDisk[] | undefined>;
    /**
     * The ID of the firewall applied to the Linode instance during creation.
     */
    public readonly firewallId!: pulumi.Output<number | undefined>;
    /**
     * The display group of the Linode instance.
     *
     * @deprecated Deprecated
     */
    public readonly group!: pulumi.Output<string | undefined>;
    /**
     * Whether or not this Instance was created with user-data.
     */
    public /*out*/ readonly hasUserData!: pulumi.Output<boolean>;
    /**
     * The Linodeâ€™s host machine, as a UUID.
     */
    public /*out*/ readonly hostUuid!: pulumi.Output<string>;
    /**
     * An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/.
     * See /images for more information on the Images available for you to use.
     */
    public readonly image!: pulumi.Output<string | undefined>;
    /**
     * An array of Network Interfaces for this Linode to be created with. If an explicit config or disk is defined, interfaces
     * must be declared in the config block.
     */
    public readonly interfaces!: pulumi.Output<outputs.InstanceInterface[] | undefined>;
    /**
     * This Linode's Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address
     * will be used for this field.
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single
     * private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
     */
    public /*out*/ readonly ipv4s!: pulumi.Output<string[]>;
    /**
     * This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.
     */
    public /*out*/ readonly ipv6!: pulumi.Output<string>;
    /**
     * The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * Various fields related to the Linode Metadata service.
     */
    public readonly metadatas!: pulumi.Output<outputs.InstanceMetadata[] | undefined>;
    /**
     * The type of migration to use for resize and migration operations.
     */
    public readonly migrationType!: pulumi.Output<string | undefined>;
    /**
     * Fields related to the Placement Group this instance is assigned to.
     */
    public readonly placementGroup!: pulumi.Output<outputs.InstancePlacementGroup | undefined>;
    /**
     * If true, this placement group's assignment is externally managed and will NOT be updated by this resource.
     */
    public readonly placementGroupExternallyManaged!: pulumi.Output<boolean | undefined>;
    /**
     * If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within
     * the Linode's region.
     */
    public readonly privateIp!: pulumi.Output<boolean | undefined>;
    /**
     * This Linode's Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode
     * Instances in a region.
     */
    public /*out*/ readonly privateIpAddress!: pulumi.Output<string>;
    /**
     * This is the location where the Linode was deployed. This cannot be changed without opening a support ticket.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * If true, changes in Linode type will attempt to upsize or downsize implicitly created disks. This must be false if
     * explicit disks are defined. This is an irreversible action as Linode disks cannot be automatically downsized.
     */
    public readonly resizeDisk!: pulumi.Output<boolean | undefined>;
    /**
     * The password that will be initially assigned to the 'root' user account.
     */
    public readonly rootPass!: pulumi.Output<string | undefined>;
    /**
     * A set of IPv4 addresses to share with this Linode.
     */
    public readonly sharedIpv4s!: pulumi.Output<string[]>;
    /**
     * Information about the resources available to this Linode.
     */
    public /*out*/ readonly specs!: pulumi.Output<outputs.InstanceSpec[]>;
    /**
     * An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only
     * accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.
     */
    public readonly stackscriptData!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image
     * that is compatible with this StackScript.
     */
    public readonly stackscriptId!: pulumi.Output<number | undefined>;
    /**
     * The status of the instance, indicating the current readiness state.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This
     * is used to set the swap disk size for the newly-created Linode.
     */
    public readonly swapSize!: pulumi.Output<number>;
    /**
     * An array of tags applied to this object. Tags are for organizational purposes only.
     */
    public readonly tags!: pulumi.Output<string[]>;
    public readonly timeouts!: pulumi.Output<outputs.InstanceTimeouts | undefined>;
    /**
     * The type of instance to be deployed, determining the price and size.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off
     * unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To
     * prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
     */
    public readonly watchdogEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["alerts"] = state ? state.alerts : undefined;
            resourceInputs["authorizedKeys"] = state ? state.authorizedKeys : undefined;
            resourceInputs["authorizedUsers"] = state ? state.authorizedUsers : undefined;
            resourceInputs["backupId"] = state ? state.backupId : undefined;
            resourceInputs["backups"] = state ? state.backups : undefined;
            resourceInputs["backupsEnabled"] = state ? state.backupsEnabled : undefined;
            resourceInputs["bootConfigLabel"] = state ? state.bootConfigLabel : undefined;
            resourceInputs["booted"] = state ? state.booted : undefined;
            resourceInputs["configs"] = state ? state.configs : undefined;
            resourceInputs["disks"] = state ? state.disks : undefined;
            resourceInputs["firewallId"] = state ? state.firewallId : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["hasUserData"] = state ? state.hasUserData : undefined;
            resourceInputs["hostUuid"] = state ? state.hostUuid : undefined;
            resourceInputs["image"] = state ? state.image : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipv4s"] = state ? state.ipv4s : undefined;
            resourceInputs["ipv6"] = state ? state.ipv6 : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["migrationType"] = state ? state.migrationType : undefined;
            resourceInputs["placementGroup"] = state ? state.placementGroup : undefined;
            resourceInputs["placementGroupExternallyManaged"] = state ? state.placementGroupExternallyManaged : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["privateIpAddress"] = state ? state.privateIpAddress : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["resizeDisk"] = state ? state.resizeDisk : undefined;
            resourceInputs["rootPass"] = state ? state.rootPass : undefined;
            resourceInputs["sharedIpv4s"] = state ? state.sharedIpv4s : undefined;
            resourceInputs["specs"] = state ? state.specs : undefined;
            resourceInputs["stackscriptData"] = state ? state.stackscriptData : undefined;
            resourceInputs["stackscriptId"] = state ? state.stackscriptId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["swapSize"] = state ? state.swapSize : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["watchdogEnabled"] = state ? state.watchdogEnabled : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["alerts"] = args ? args.alerts : undefined;
            resourceInputs["authorizedKeys"] = args ? args.authorizedKeys : undefined;
            resourceInputs["authorizedUsers"] = args ? args.authorizedUsers : undefined;
            resourceInputs["backupId"] = args ? args.backupId : undefined;
            resourceInputs["backupsEnabled"] = args ? args.backupsEnabled : undefined;
            resourceInputs["bootConfigLabel"] = args ? args.bootConfigLabel : undefined;
            resourceInputs["booted"] = args ? args.booted : undefined;
            resourceInputs["configs"] = args ? args.configs : undefined;
            resourceInputs["disks"] = args ? args.disks : undefined;
            resourceInputs["firewallId"] = args ? args.firewallId : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["image"] = args ? args.image : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["metadatas"] = args ? args.metadatas : undefined;
            resourceInputs["migrationType"] = args ? args.migrationType : undefined;
            resourceInputs["placementGroup"] = args ? args.placementGroup : undefined;
            resourceInputs["placementGroupExternallyManaged"] = args ? args.placementGroupExternallyManaged : undefined;
            resourceInputs["privateIp"] = args ? args.privateIp : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["resizeDisk"] = args ? args.resizeDisk : undefined;
            resourceInputs["rootPass"] = args?.rootPass ? pulumi.secret(args.rootPass) : undefined;
            resourceInputs["sharedIpv4s"] = args ? args.sharedIpv4s : undefined;
            resourceInputs["stackscriptData"] = args?.stackscriptData ? pulumi.secret(args.stackscriptData) : undefined;
            resourceInputs["stackscriptId"] = args ? args.stackscriptId : undefined;
            resourceInputs["swapSize"] = args ? args.swapSize : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["watchdogEnabled"] = args ? args.watchdogEnabled : undefined;
            resourceInputs["backups"] = undefined /*out*/;
            resourceInputs["hasUserData"] = undefined /*out*/;
            resourceInputs["hostUuid"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["ipv4s"] = undefined /*out*/;
            resourceInputs["ipv6"] = undefined /*out*/;
            resourceInputs["privateIpAddress"] = undefined /*out*/;
            resourceInputs["specs"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["rootPass", "stackscriptData"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Configuration options for alert triggers on this Linode.
     */
    alerts?: pulumi.Input<inputs.InstanceAlerts>;
    /**
     * A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if 'image' is provided.
     */
    authorizedKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's
     * `~/.ssh/authorized_keys` file automatically. Only accepted if 'image' is provided.
     */
    authorizedUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Backup ID from another Linode's available backups. Your User must have read_write access to that Linode, the Backup
     * must have a status of successful, and the Linode must be deployed to the same region as the Backup. See
     * /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually
     * exclusive.
     */
    backupId?: pulumi.Input<number>;
    /**
     * Information about this Linode's backups status.
     */
    backups?: pulumi.Input<pulumi.Input<inputs.InstanceBackup>[]>;
    /**
     * If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will
     * incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
     */
    backupsEnabled?: pulumi.Input<boolean>;
    /**
     * The Label of the Instance Config that should be used to boot the Linode instance.
     */
    bootConfigLabel?: pulumi.Input<string>;
    booted?: pulumi.Input<boolean>;
    /**
     * Configuration profiles define the VM settings and boot behavior of the Linode Instance.
     *
     * @deprecated Deprecated
     */
    configs?: pulumi.Input<pulumi.Input<inputs.InstanceConfig>[]>;
    /**
     * @deprecated Deprecated
     */
    disks?: pulumi.Input<pulumi.Input<inputs.InstanceDisk>[]>;
    /**
     * The ID of the firewall applied to the Linode instance during creation.
     */
    firewallId?: pulumi.Input<number>;
    /**
     * The display group of the Linode instance.
     *
     * @deprecated Deprecated
     */
    group?: pulumi.Input<string>;
    /**
     * Whether or not this Instance was created with user-data.
     */
    hasUserData?: pulumi.Input<boolean>;
    /**
     * The Linodeâ€™s host machine, as a UUID.
     */
    hostUuid?: pulumi.Input<string>;
    /**
     * An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/.
     * See /images for more information on the Images available for you to use.
     */
    image?: pulumi.Input<string>;
    /**
     * An array of Network Interfaces for this Linode to be created with. If an explicit config or disk is defined, interfaces
     * must be declared in the config block.
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.InstanceInterface>[]>;
    /**
     * This Linode's Public IPv4 Address. If there are multiple public IPv4 addresses on this Instance, an arbitrary address
     * will be used for this field.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single
     * private IPv4 address if needed. You may need to open a support ticket to get additional IPv4 addresses.
     */
    ipv4s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.
     */
    ipv6?: pulumi.Input<string>;
    /**
     * The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned
     */
    label?: pulumi.Input<string>;
    /**
     * Various fields related to the Linode Metadata service.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.InstanceMetadata>[]>;
    /**
     * The type of migration to use for resize and migration operations.
     */
    migrationType?: pulumi.Input<string>;
    /**
     * Fields related to the Placement Group this instance is assigned to.
     */
    placementGroup?: pulumi.Input<inputs.InstancePlacementGroup>;
    /**
     * If true, this placement group's assignment is externally managed and will NOT be updated by this resource.
     */
    placementGroupExternallyManaged?: pulumi.Input<boolean>;
    /**
     * If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within
     * the Linode's region.
     */
    privateIp?: pulumi.Input<boolean>;
    /**
     * This Linode's Private IPv4 Address. The regional private IP address range is 192.168.128/17 address shared by all Linode
     * Instances in a region.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * This is the location where the Linode was deployed. This cannot be changed without opening a support ticket.
     */
    region?: pulumi.Input<string>;
    /**
     * If true, changes in Linode type will attempt to upsize or downsize implicitly created disks. This must be false if
     * explicit disks are defined. This is an irreversible action as Linode disks cannot be automatically downsized.
     */
    resizeDisk?: pulumi.Input<boolean>;
    /**
     * The password that will be initially assigned to the 'root' user account.
     */
    rootPass?: pulumi.Input<string>;
    /**
     * A set of IPv4 addresses to share with this Linode.
     */
    sharedIpv4s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Information about the resources available to this Linode.
     */
    specs?: pulumi.Input<pulumi.Input<inputs.InstanceSpec>[]>;
    /**
     * An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only
     * accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.
     */
    stackscriptData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image
     * that is compatible with this StackScript.
     */
    stackscriptId?: pulumi.Input<number>;
    /**
     * The status of the instance, indicating the current readiness state.
     */
    status?: pulumi.Input<string>;
    /**
     * When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This
     * is used to set the swap disk size for the newly-created Linode.
     */
    swapSize?: pulumi.Input<number>;
    /**
     * An array of tags applied to this object. Tags are for organizational purposes only.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.InstanceTimeouts>;
    /**
     * The type of instance to be deployed, determining the price and size.
     */
    type?: pulumi.Input<string>;
    /**
     * The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off
     * unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To
     * prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
     */
    watchdogEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Configuration options for alert triggers on this Linode.
     */
    alerts?: pulumi.Input<inputs.InstanceAlerts>;
    /**
     * A list of SSH public keys to deploy for the root user on the newly created Linode. Only accepted if 'image' is provided.
     */
    authorizedKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Linode usernames. If the usernames have associated SSH keys, the keys will be appended to the `root` user's
     * `~/.ssh/authorized_keys` file automatically. Only accepted if 'image' is provided.
     */
    authorizedUsers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Backup ID from another Linode's available backups. Your User must have read_write access to that Linode, the Backup
     * must have a status of successful, and the Linode must be deployed to the same region as the Backup. See
     * /linode/instances/{linodeId}/backups for a Linode's available backups. This field and the image field are mutually
     * exclusive.
     */
    backupId?: pulumi.Input<number>;
    /**
     * If this field is set to true, the created Linode will automatically be enrolled in the Linode Backup service. This will
     * incur an additional charge. The cost for the Backup service is dependent on the Type of Linode deployed.
     */
    backupsEnabled?: pulumi.Input<boolean>;
    /**
     * The Label of the Instance Config that should be used to boot the Linode instance.
     */
    bootConfigLabel?: pulumi.Input<string>;
    booted?: pulumi.Input<boolean>;
    /**
     * Configuration profiles define the VM settings and boot behavior of the Linode Instance.
     *
     * @deprecated Deprecated
     */
    configs?: pulumi.Input<pulumi.Input<inputs.InstanceConfig>[]>;
    /**
     * @deprecated Deprecated
     */
    disks?: pulumi.Input<pulumi.Input<inputs.InstanceDisk>[]>;
    /**
     * The ID of the firewall applied to the Linode instance during creation.
     */
    firewallId?: pulumi.Input<number>;
    /**
     * The display group of the Linode instance.
     *
     * @deprecated Deprecated
     */
    group?: pulumi.Input<string>;
    /**
     * An Image ID to deploy the Disk from. Official Linode Images start with linode/, while your Images start with private/.
     * See /images for more information on the Images available for you to use.
     */
    image?: pulumi.Input<string>;
    /**
     * An array of Network Interfaces for this Linode to be created with. If an explicit config or disk is defined, interfaces
     * must be declared in the config block.
     */
    interfaces?: pulumi.Input<pulumi.Input<inputs.InstanceInterface>[]>;
    /**
     * The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned
     */
    label?: pulumi.Input<string>;
    /**
     * Various fields related to the Linode Metadata service.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.InstanceMetadata>[]>;
    /**
     * The type of migration to use for resize and migration operations.
     */
    migrationType?: pulumi.Input<string>;
    /**
     * Fields related to the Placement Group this instance is assigned to.
     */
    placementGroup?: pulumi.Input<inputs.InstancePlacementGroup>;
    /**
     * If true, this placement group's assignment is externally managed and will NOT be updated by this resource.
     */
    placementGroupExternallyManaged?: pulumi.Input<boolean>;
    /**
     * If true, the created Linode will have private networking enabled, allowing use of the 192.168.128.0/17 network within
     * the Linode's region.
     */
    privateIp?: pulumi.Input<boolean>;
    /**
     * This is the location where the Linode was deployed. This cannot be changed without opening a support ticket.
     */
    region: pulumi.Input<string>;
    /**
     * If true, changes in Linode type will attempt to upsize or downsize implicitly created disks. This must be false if
     * explicit disks are defined. This is an irreversible action as Linode disks cannot be automatically downsized.
     */
    resizeDisk?: pulumi.Input<boolean>;
    /**
     * The password that will be initially assigned to the 'root' user account.
     */
    rootPass?: pulumi.Input<string>;
    /**
     * A set of IPv4 addresses to share with this Linode.
     */
    sharedIpv4s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only
     * accepted if 'stackscript_id' is given. The required values depend on the StackScript being deployed.
     */
    stackscriptData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The StackScript to deploy to the newly created Linode. If provided, 'image' must also be provided, and must be an Image
     * that is compatible with this StackScript.
     */
    stackscriptId?: pulumi.Input<number>;
    /**
     * When deploying from an Image, this field is optional with a Linode API default of 512mb, otherwise it is ignored. This
     * is used to set the swap disk size for the newly-created Linode.
     */
    swapSize?: pulumi.Input<number>;
    /**
     * An array of tags applied to this object. Tags are for organizational purposes only.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.InstanceTimeouts>;
    /**
     * The type of instance to be deployed, determining the price and size.
     */
    type?: pulumi.Input<string>;
    /**
     * The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off
     * unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To
     * prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.
     */
    watchdogEnabled?: pulumi.Input<boolean>;
}
