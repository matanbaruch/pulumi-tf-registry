// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Token extends pulumi.CustomResource {
    /**
     * Get an existing Token resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TokenState, opts?: pulumi.CustomResourceOptions): Token {
        return new Token(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'linode:index/token:Token';

    /**
     * Returns true if the given object is an instance of Token.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Token {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Token.__pulumiType;
    }

    /**
     * The date and time this token was created.
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * When this token will expire. Personal Access Tokens cannot be renewed, so after this time the token will be completely
     * unusable and a new token will need to be generated. Tokens may be created with 'null' as their expiry and will never
     * expire unless revoked. Format: 2006-01-02T15:04:05Z
     */
    public readonly expiry!: pulumi.Output<string>;
    /**
     * The label of the Linode Token.
     */
    public readonly label!: pulumi.Output<string | undefined>;
    /**
     * The scopes this token was created with. These define what parts of the Account the token can be used to access. Many
     * command-line tools, such as the Linode CLI, require tokens with access to *. Tokens with more restrictive scopes are
     * generally more secure. Multiple scopes are separated by a space character (e.g., "databases:read_only
     * events:read_only"). You can find the list of available scopes on Linode API docs site,
     * https://techdocs.akamai.com/linode-api/reference/get-started#oauth-reference
     */
    public readonly scopes!: pulumi.Output<string>;
    /**
     * The token used to access the API.
     */
    public /*out*/ readonly token!: pulumi.Output<string>;

    /**
     * Create a Token resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TokenArgs | TokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TokenState | undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["expiry"] = state ? state.expiry : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["scopes"] = state ? state.scopes : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
        } else {
            const args = argsOrState as TokenArgs | undefined;
            if ((!args || args.scopes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scopes'");
            }
            resourceInputs["expiry"] = args ? args.expiry : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["token"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Token.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Token resources.
 */
export interface TokenState {
    /**
     * The date and time this token was created.
     */
    created?: pulumi.Input<string>;
    /**
     * When this token will expire. Personal Access Tokens cannot be renewed, so after this time the token will be completely
     * unusable and a new token will need to be generated. Tokens may be created with 'null' as their expiry and will never
     * expire unless revoked. Format: 2006-01-02T15:04:05Z
     */
    expiry?: pulumi.Input<string>;
    /**
     * The label of the Linode Token.
     */
    label?: pulumi.Input<string>;
    /**
     * The scopes this token was created with. These define what parts of the Account the token can be used to access. Many
     * command-line tools, such as the Linode CLI, require tokens with access to *. Tokens with more restrictive scopes are
     * generally more secure. Multiple scopes are separated by a space character (e.g., "databases:read_only
     * events:read_only"). You can find the list of available scopes on Linode API docs site,
     * https://techdocs.akamai.com/linode-api/reference/get-started#oauth-reference
     */
    scopes?: pulumi.Input<string>;
    /**
     * The token used to access the API.
     */
    token?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Token resource.
 */
export interface TokenArgs {
    /**
     * When this token will expire. Personal Access Tokens cannot be renewed, so after this time the token will be completely
     * unusable and a new token will need to be generated. Tokens may be created with 'null' as their expiry and will never
     * expire unless revoked. Format: 2006-01-02T15:04:05Z
     */
    expiry?: pulumi.Input<string>;
    /**
     * The label of the Linode Token.
     */
    label?: pulumi.Input<string>;
    /**
     * The scopes this token was created with. These define what parts of the Account the token can be used to access. Many
     * command-line tools, such as the Linode CLI, require tokens with access to *. Tokens with more restrictive scopes are
     * generally more secure. Multiple scopes are separated by a space character (e.g., "databases:read_only
     * events:read_only"). You can find the list of available scopes on Linode API docs site,
     * https://techdocs.akamai.com/linode-api/reference/get-started#oauth-reference
     */
    scopes: pulumi.Input<string>;
}
