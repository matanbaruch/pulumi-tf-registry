// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNodebalancerNode(args: GetNodebalancerNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetNodebalancerNodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNodebalancerNode:getNodebalancerNode", {
        "configId": args.configId,
        "id": args.id,
        "nodebalancerId": args.nodebalancerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodebalancerNode.
 */
export interface GetNodebalancerNodeArgs {
    configId: number;
    id: number;
    nodebalancerId: number;
}

/**
 * A collection of values returned by getNodebalancerNode.
 */
export interface GetNodebalancerNodeResult {
    readonly address: string;
    readonly configId: number;
    readonly id: number;
    readonly label: string;
    readonly mode: string;
    readonly nodebalancerId: number;
    readonly status: string;
    readonly weight: number;
}
export function getNodebalancerNodeOutput(args: GetNodebalancerNodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodebalancerNodeResult> {
    return pulumi.output(args).apply((a: any) => getNodebalancerNode(a, opts))
}

/**
 * A collection of arguments for invoking getNodebalancerNode.
 */
export interface GetNodebalancerNodeOutputArgs {
    configId: pulumi.Input<number>;
    id: pulumi.Input<number>;
    nodebalancerId: pulumi.Input<number>;
}
