// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInstanceBackups(args: GetInstanceBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceBackupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getInstanceBackups:getInstanceBackups", {
        "linodeId": args.linodeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInstanceBackups.
 */
export interface GetInstanceBackupsArgs {
    linodeId: number;
}

/**
 * A collection of values returned by getInstanceBackups.
 */
export interface GetInstanceBackupsResult {
    readonly automatics: outputs.GetInstanceBackupsAutomatic[];
    readonly currents: outputs.GetInstanceBackupsCurrent[];
    readonly id: number;
    readonly inProgresses: outputs.GetInstanceBackupsInProgress[];
    readonly linodeId: number;
}
export function getInstanceBackupsOutput(args: GetInstanceBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceBackupsResult> {
    return pulumi.output(args).apply((a: any) => getInstanceBackups(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceBackups.
 */
export interface GetInstanceBackupsOutputArgs {
    linodeId: pulumi.Input<number>;
}
