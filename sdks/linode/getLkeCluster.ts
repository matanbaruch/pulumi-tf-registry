// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLkeCluster(args: GetLkeClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetLkeClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getLkeCluster:getLkeCluster", {
        "controlPlanes": args.controlPlanes,
        "id": args.id,
        "pools": args.pools,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLkeCluster.
 */
export interface GetLkeClusterArgs {
    controlPlanes?: inputs.GetLkeClusterControlPlane[];
    id: number;
    pools?: inputs.GetLkeClusterPool[];
}

/**
 * A collection of values returned by getLkeCluster.
 */
export interface GetLkeClusterResult {
    readonly apiEndpoints: string[];
    readonly controlPlanes?: outputs.GetLkeClusterControlPlane[];
    readonly created: string;
    readonly dashboardUrl: string;
    readonly id: number;
    readonly k8sVersion: string;
    readonly kubeconfig: string;
    readonly label: string;
    readonly pools?: outputs.GetLkeClusterPool[];
    readonly region: string;
    readonly status: string;
    readonly tags: string[];
    readonly updated: string;
}
export function getLkeClusterOutput(args: GetLkeClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLkeClusterResult> {
    return pulumi.output(args).apply((a: any) => getLkeCluster(a, opts))
}

/**
 * A collection of arguments for invoking getLkeCluster.
 */
export interface GetLkeClusterOutputArgs {
    controlPlanes?: pulumi.Input<pulumi.Input<inputs.GetLkeClusterControlPlaneArgs>[]>;
    id: pulumi.Input<number>;
    pools?: pulumi.Input<pulumi.Input<inputs.GetLkeClusterPoolArgs>[]>;
}
