// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseBackups(args: GetDatabaseBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseBackupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getDatabaseBackups:getDatabaseBackups", {
        "backups": args.backups,
        "databaseId": args.databaseId,
        "databaseType": args.databaseType,
        "filters": args.filters,
        "latest": args.latest,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseBackups.
 */
export interface GetDatabaseBackupsArgs {
    backups?: inputs.GetDatabaseBackupsBackup[];
    databaseId: number;
    databaseType: string;
    filters?: inputs.GetDatabaseBackupsFilter[];
    latest?: boolean;
    order?: string;
    orderBy?: string;
}

/**
 * A collection of values returned by getDatabaseBackups.
 */
export interface GetDatabaseBackupsResult {
    readonly backups?: outputs.GetDatabaseBackupsBackup[];
    readonly databaseId: number;
    readonly databaseType: string;
    readonly filters?: outputs.GetDatabaseBackupsFilter[];
    readonly id: number;
    readonly latest?: boolean;
    readonly order?: string;
    readonly orderBy?: string;
}
export function getDatabaseBackupsOutput(args: GetDatabaseBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseBackupsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseBackups(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseBackups.
 */
export interface GetDatabaseBackupsOutputArgs {
    backups?: pulumi.Input<pulumi.Input<inputs.GetDatabaseBackupsBackupArgs>[]>;
    databaseId: pulumi.Input<number>;
    databaseType: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabaseBackupsFilterArgs>[]>;
    latest?: pulumi.Input<boolean>;
    order?: pulumi.Input<string>;
    orderBy?: pulumi.Input<string>;
}
