// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabases(args?: GetDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabasesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getDatabases:getDatabases", {
        "databases": args.databases,
        "filters": args.filters,
        "order": args.order,
        "orderBy": args.orderBy,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabases.
 */
export interface GetDatabasesArgs {
    databases?: inputs.GetDatabasesDatabase[];
    filters?: inputs.GetDatabasesFilter[];
    order?: string;
    orderBy?: string;
}

/**
 * A collection of values returned by getDatabases.
 */
export interface GetDatabasesResult {
    readonly databases?: outputs.GetDatabasesDatabase[];
    readonly filters?: outputs.GetDatabasesFilter[];
    readonly id: string;
    readonly order?: string;
    readonly orderBy?: string;
}
export function getDatabasesOutput(args?: GetDatabasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabasesResult> {
    return pulumi.output(args).apply((a: any) => getDatabases(a, opts))
}

/**
 * A collection of arguments for invoking getDatabases.
 */
export interface GetDatabasesOutputArgs {
    databases?: pulumi.Input<pulumi.Input<inputs.GetDatabasesDatabaseArgs>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatabasesFilterArgs>[]>;
    order?: pulumi.Input<string>;
    orderBy?: pulumi.Input<string>;
}
