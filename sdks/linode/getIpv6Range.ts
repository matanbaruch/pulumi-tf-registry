// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpv6Range(args: GetIpv6RangeArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv6RangeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getIpv6Range:getIpv6Range", {
        "range": args.range,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv6Range.
 */
export interface GetIpv6RangeArgs {
    range: string;
}

/**
 * A collection of values returned by getIpv6Range.
 */
export interface GetIpv6RangeResult {
    readonly id: string;
    readonly isBgp: boolean;
    readonly linodes: number[];
    readonly prefix: number;
    readonly range: string;
    readonly region: string;
}
export function getIpv6RangeOutput(args: GetIpv6RangeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv6RangeResult> {
    return pulumi.output(args).apply((a: any) => getIpv6Range(a, opts))
}

/**
 * A collection of arguments for invoking getIpv6Range.
 */
export interface GetIpv6RangeOutputArgs {
    range: pulumi.Input<string>;
}
