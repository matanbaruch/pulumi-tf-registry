// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNodebalancerConfig(args: GetNodebalancerConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetNodebalancerConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNodebalancerConfig:getNodebalancerConfig", {
        "id": args.id,
        "nodebalancerId": args.nodebalancerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodebalancerConfig.
 */
export interface GetNodebalancerConfigArgs {
    id: number;
    nodebalancerId: number;
}

/**
 * A collection of values returned by getNodebalancerConfig.
 */
export interface GetNodebalancerConfigResult {
    readonly algorithm: string;
    readonly check: string;
    readonly checkAttempts: number;
    readonly checkBody: string;
    readonly checkInterval: number;
    readonly checkPassive: boolean;
    readonly checkPath: string;
    readonly checkTimeout: number;
    readonly cipherSuite: string;
    readonly id: number;
    readonly nodeStatuses: outputs.GetNodebalancerConfigNodeStatus[];
    readonly nodebalancerId: number;
    readonly port: number;
    readonly protocol: string;
    readonly proxyProtocol: string;
    readonly sslCommonname: string;
    readonly sslFingerprint: string;
    readonly stickiness: string;
}
export function getNodebalancerConfigOutput(args: GetNodebalancerConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodebalancerConfigResult> {
    return pulumi.output(args).apply((a: any) => getNodebalancerConfig(a, opts))
}

/**
 * A collection of arguments for invoking getNodebalancerConfig.
 */
export interface GetNodebalancerConfigOutputArgs {
    id: pulumi.Input<number>;
    nodebalancerId: pulumi.Input<number>;
}
