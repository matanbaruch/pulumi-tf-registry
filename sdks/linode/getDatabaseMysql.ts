// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseMysql(args?: GetDatabaseMysqlArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseMysqlResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getDatabaseMysql:getDatabaseMysql", {
        "databaseId": args.databaseId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseMysql.
 */
export interface GetDatabaseMysqlArgs {
    /**
     * @deprecated Deprecated
     */
    databaseId?: number;
    id?: number;
}

/**
 * A collection of values returned by getDatabaseMysql.
 */
export interface GetDatabaseMysqlResult {
    readonly allowLists: string[];
    readonly caCert: string;
    readonly clusterSize: number;
    readonly created: string;
    /**
     * @deprecated Deprecated
     */
    readonly databaseId?: number;
    readonly encrypted: boolean;
    readonly engine: string;
    readonly engineId: string;
    readonly hostPrimary: string;
    readonly hostSecondary: string;
    readonly id?: number;
    readonly label: string;
    readonly region: string;
    readonly replicationType: string;
    readonly rootPassword: string;
    readonly rootUsername: string;
    readonly sslConnection: boolean;
    readonly status: string;
    readonly type: string;
    readonly updated: string;
    readonly updates: outputs.GetDatabaseMysqlUpdate[];
    readonly version: string;
}
export function getDatabaseMysqlOutput(args?: GetDatabaseMysqlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseMysqlResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseMysql(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseMysql.
 */
export interface GetDatabaseMysqlOutputArgs {
    /**
     * @deprecated Deprecated
     */
    databaseId?: pulumi.Input<number>;
    id?: pulumi.Input<number>;
}
