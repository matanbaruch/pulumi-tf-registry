// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Firewall extends pulumi.CustomResource {
    /**
     * Get an existing Firewall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallState, opts?: pulumi.CustomResourceOptions): Firewall {
        return new Firewall(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'linode:index/firewall:Firewall';

    /**
     * Returns true if the given object is an instance of Firewall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Firewall {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Firewall.__pulumiType;
    }

    /**
     * When this firewall was created
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * The devices associated with this firewall.
     */
    public /*out*/ readonly devices!: pulumi.Output<outputs.FirewallDevice[]>;
    /**
     * If true, the Firewall is inactive.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * The default behavior for inbound traffic. This setting can be overridden by updating the inbound.action property for an
     * individual Firewall Rule.
     */
    public readonly inboundPolicy!: pulumi.Output<string>;
    /**
     * A firewall rule that specifies what inbound network traffic is allowed.
     */
    public readonly inbounds!: pulumi.Output<outputs.FirewallInbound[] | undefined>;
    /**
     * The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
     */
    public readonly label!: pulumi.Output<string>;
    /**
     * The IDs of Linodes to apply this firewall to.
     */
    public readonly linodes!: pulumi.Output<number[]>;
    /**
     * The IDs of NodeBalancers to apply this firewall to.
     */
    public readonly nodebalancers!: pulumi.Output<number[]>;
    /**
     * The default behavior for outbound traffic. This setting can be overridden by updating the outbound.action property for
     * an individual Firewall Rule.
     */
    public readonly outboundPolicy!: pulumi.Output<string>;
    /**
     * A firewall rule that specifies what outbound network traffic is allowed.
     */
    public readonly outbounds!: pulumi.Output<outputs.FirewallOutbound[] | undefined>;
    /**
     * The status of the firewall.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * An array of tags applied to this object. Tags are for organizational purposes only.
     */
    public readonly tags!: pulumi.Output<string[]>;
    /**
     * When this firewall was last updated
     */
    public /*out*/ readonly updated!: pulumi.Output<string>;

    /**
     * Create a Firewall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallArgs | FirewallState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallState | undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["devices"] = state ? state.devices : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["inboundPolicy"] = state ? state.inboundPolicy : undefined;
            resourceInputs["inbounds"] = state ? state.inbounds : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["linodes"] = state ? state.linodes : undefined;
            resourceInputs["nodebalancers"] = state ? state.nodebalancers : undefined;
            resourceInputs["outboundPolicy"] = state ? state.outboundPolicy : undefined;
            resourceInputs["outbounds"] = state ? state.outbounds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updated"] = state ? state.updated : undefined;
        } else {
            const args = argsOrState as FirewallArgs | undefined;
            if ((!args || args.inboundPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inboundPolicy'");
            }
            if ((!args || args.label === undefined) && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            if ((!args || args.outboundPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outboundPolicy'");
            }
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["inboundPolicy"] = args ? args.inboundPolicy : undefined;
            resourceInputs["inbounds"] = args ? args.inbounds : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["linodes"] = args ? args.linodes : undefined;
            resourceInputs["nodebalancers"] = args ? args.nodebalancers : undefined;
            resourceInputs["outboundPolicy"] = args ? args.outboundPolicy : undefined;
            resourceInputs["outbounds"] = args ? args.outbounds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["devices"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Firewall.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Firewall resources.
 */
export interface FirewallState {
    /**
     * When this firewall was created
     */
    created?: pulumi.Input<string>;
    /**
     * The devices associated with this firewall.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.FirewallDevice>[]>;
    /**
     * If true, the Firewall is inactive.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * The default behavior for inbound traffic. This setting can be overridden by updating the inbound.action property for an
     * individual Firewall Rule.
     */
    inboundPolicy?: pulumi.Input<string>;
    /**
     * A firewall rule that specifies what inbound network traffic is allowed.
     */
    inbounds?: pulumi.Input<pulumi.Input<inputs.FirewallInbound>[]>;
    /**
     * The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
     */
    label?: pulumi.Input<string>;
    /**
     * The IDs of Linodes to apply this firewall to.
     */
    linodes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The IDs of NodeBalancers to apply this firewall to.
     */
    nodebalancers?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The default behavior for outbound traffic. This setting can be overridden by updating the outbound.action property for
     * an individual Firewall Rule.
     */
    outboundPolicy?: pulumi.Input<string>;
    /**
     * A firewall rule that specifies what outbound network traffic is allowed.
     */
    outbounds?: pulumi.Input<pulumi.Input<inputs.FirewallOutbound>[]>;
    /**
     * The status of the firewall.
     */
    status?: pulumi.Input<string>;
    /**
     * An array of tags applied to this object. Tags are for organizational purposes only.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When this firewall was last updated
     */
    updated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Firewall resource.
 */
export interface FirewallArgs {
    /**
     * If true, the Firewall is inactive.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * The default behavior for inbound traffic. This setting can be overridden by updating the inbound.action property for an
     * individual Firewall Rule.
     */
    inboundPolicy: pulumi.Input<string>;
    /**
     * A firewall rule that specifies what inbound network traffic is allowed.
     */
    inbounds?: pulumi.Input<pulumi.Input<inputs.FirewallInbound>[]>;
    /**
     * The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
     */
    label: pulumi.Input<string>;
    /**
     * The IDs of Linodes to apply this firewall to.
     */
    linodes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The IDs of NodeBalancers to apply this firewall to.
     */
    nodebalancers?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The default behavior for outbound traffic. This setting can be overridden by updating the outbound.action property for
     * an individual Firewall Rule.
     */
    outboundPolicy: pulumi.Input<string>;
    /**
     * A firewall rule that specifies what outbound network traffic is allowed.
     */
    outbounds?: pulumi.Input<pulumi.Input<inputs.FirewallOutbound>[]>;
    /**
     * An array of tags applied to this object. Tags are for organizational purposes only.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
