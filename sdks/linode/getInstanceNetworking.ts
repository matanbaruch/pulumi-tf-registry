// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInstanceNetworking(args: GetInstanceNetworkingArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceNetworkingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getInstanceNetworking:getInstanceNetworking", {
        "linodeId": args.linodeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInstanceNetworking.
 */
export interface GetInstanceNetworkingArgs {
    linodeId: number;
}

/**
 * A collection of values returned by getInstanceNetworking.
 */
export interface GetInstanceNetworkingResult {
    readonly id: string;
    readonly ipv4s: outputs.GetInstanceNetworkingIpv4[];
    readonly ipv6s: outputs.GetInstanceNetworkingIpv6[];
    readonly linodeId: number;
}
export function getInstanceNetworkingOutput(args: GetInstanceNetworkingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceNetworkingResult> {
    return pulumi.output(args).apply((a: any) => getInstanceNetworking(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceNetworking.
 */
export interface GetInstanceNetworkingOutputArgs {
    linodeId: pulumi.Input<number>;
}
