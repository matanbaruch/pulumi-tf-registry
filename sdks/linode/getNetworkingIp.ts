// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkingIp(args: GetNetworkingIpArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkingIpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNetworkingIp:getNetworkingIp", {
        "address": args.address,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingIp.
 */
export interface GetNetworkingIpArgs {
    address: string;
}

/**
 * A collection of values returned by getNetworkingIp.
 */
export interface GetNetworkingIpResult {
    readonly address: string;
    readonly gateway: string;
    readonly id: string;
    readonly linodeId: number;
    readonly prefix: number;
    readonly public: boolean;
    readonly rdns: string;
    readonly region: string;
    readonly subnetMask: string;
    readonly type: string;
}
export function getNetworkingIpOutput(args: GetNetworkingIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingIpResult> {
    return pulumi.output(args).apply((a: any) => getNetworkingIp(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingIp.
 */
export interface GetNetworkingIpOutputArgs {
    address: pulumi.Input<string>;
}
