// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcIps(args?: GetVpcIpsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcIpsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getVpcIps:getVpcIps", {
        "filters": args.filters,
        "vpcId": args.vpcId,
        "vpcIps": args.vpcIps,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcIps.
 */
export interface GetVpcIpsArgs {
    filters?: inputs.GetVpcIpsFilter[];
    vpcId?: number;
    vpcIps?: inputs.GetVpcIpsVpcIp[];
}

/**
 * A collection of values returned by getVpcIps.
 */
export interface GetVpcIpsResult {
    readonly filters?: outputs.GetVpcIpsFilter[];
    readonly id: string;
    readonly vpcId?: number;
    readonly vpcIps?: outputs.GetVpcIpsVpcIp[];
}
export function getVpcIpsOutput(args?: GetVpcIpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcIpsResult> {
    return pulumi.output(args).apply((a: any) => getVpcIps(a, opts))
}

/**
 * A collection of arguments for invoking getVpcIps.
 */
export interface GetVpcIpsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcIpsFilterArgs>[]>;
    vpcId?: pulumi.Input<number>;
    vpcIps?: pulumi.Input<pulumi.Input<inputs.GetVpcIpsVpcIpArgs>[]>;
}
