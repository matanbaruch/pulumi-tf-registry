// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInstanceType(args: GetInstanceTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getInstanceType:getInstanceType", {
        "id": args.id,
        "label": args.label,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInstanceType.
 */
export interface GetInstanceTypeArgs {
    id: string;
    label?: string;
}

/**
 * A collection of values returned by getInstanceType.
 */
export interface GetInstanceTypeResult {
    readonly addons: outputs.GetInstanceTypeAddon[];
    readonly class: string;
    readonly disk: number;
    readonly id: string;
    readonly label: string;
    readonly memory: number;
    readonly networkOut: number;
    readonly prices: outputs.GetInstanceTypePrice[];
    readonly regionPrices: outputs.GetInstanceTypeRegionPrice[];
    readonly transfer: number;
    readonly vcpus: number;
}
export function getInstanceTypeOutput(args: GetInstanceTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceTypeResult> {
    return pulumi.output(args).apply((a: any) => getInstanceType(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceType.
 */
export interface GetInstanceTypeOutputArgs {
    id: pulumi.Input<string>;
    label?: pulumi.Input<string>;
}
