// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNodebalancer(args: GetNodebalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetNodebalancerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getNodebalancer:getNodebalancer", {
        "firewalls": args.firewalls,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodebalancer.
 */
export interface GetNodebalancerArgs {
    firewalls?: inputs.GetNodebalancerFirewall[];
    id: number;
}

/**
 * A collection of values returned by getNodebalancer.
 */
export interface GetNodebalancerResult {
    readonly clientConnThrottle: number;
    readonly created: string;
    readonly firewalls?: outputs.GetNodebalancerFirewall[];
    readonly hostname: string;
    readonly id: number;
    readonly ipv4: string;
    readonly ipv6: string;
    readonly label: string;
    readonly region: string;
    readonly tags: string[];
    readonly transfers: outputs.GetNodebalancerTransfer[];
    readonly updated: string;
}
export function getNodebalancerOutput(args: GetNodebalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodebalancerResult> {
    return pulumi.output(args).apply((a: any) => getNodebalancer(a, opts))
}

/**
 * A collection of arguments for invoking getNodebalancer.
 */
export interface GetNodebalancerOutputArgs {
    firewalls?: pulumi.Input<pulumi.Input<inputs.GetNodebalancerFirewallArgs>[]>;
    id: pulumi.Input<number>;
}
