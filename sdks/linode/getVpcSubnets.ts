// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcSubnets(args: GetVpcSubnetsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcSubnetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getVpcSubnets:getVpcSubnets", {
        "filters": args.filters,
        "vpcId": args.vpcId,
        "vpcSubnets": args.vpcSubnets,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsArgs {
    filters?: inputs.GetVpcSubnetsFilter[];
    vpcId: number;
    vpcSubnets?: inputs.GetVpcSubnetsVpcSubnet[];
}

/**
 * A collection of values returned by getVpcSubnets.
 */
export interface GetVpcSubnetsResult {
    readonly filters?: outputs.GetVpcSubnetsFilter[];
    readonly id: string;
    readonly vpcId: number;
    readonly vpcSubnets?: outputs.GetVpcSubnetsVpcSubnet[];
}
export function getVpcSubnetsOutput(args: GetVpcSubnetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcSubnetsResult> {
    return pulumi.output(args).apply((a: any) => getVpcSubnets(a, opts))
}

/**
 * A collection of arguments for invoking getVpcSubnets.
 */
export interface GetVpcSubnetsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetVpcSubnetsFilterArgs>[]>;
    vpcId: pulumi.Input<number>;
    vpcSubnets?: pulumi.Input<pulumi.Input<inputs.GetVpcSubnetsVpcSubnetArgs>[]>;
}
