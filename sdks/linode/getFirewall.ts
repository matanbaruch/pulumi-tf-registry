// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirewall(args: GetFirewallArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getFirewall:getFirewall", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallArgs {
    id: number;
}

/**
 * A collection of values returned by getFirewall.
 */
export interface GetFirewallResult {
    readonly created: string;
    readonly devices: outputs.GetFirewallDevice[];
    readonly disabled: boolean;
    readonly id: number;
    readonly inboundPolicy: string;
    readonly inbounds: outputs.GetFirewallInbound[];
    readonly label: string;
    readonly linodes: number[];
    readonly nodebalancers: number[];
    readonly outboundPolicy: string;
    readonly outbounds: outputs.GetFirewallOutbound[];
    readonly status: string;
    readonly tags: string[];
    readonly updated: string;
}
export function getFirewallOutput(args: GetFirewallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallResult> {
    return pulumi.output(args).apply((a: any) => getFirewall(a, opts))
}

/**
 * A collection of arguments for invoking getFirewall.
 */
export interface GetFirewallOutputArgs {
    id: pulumi.Input<number>;
}
