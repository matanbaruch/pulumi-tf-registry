// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getChildAccounts(args?: GetChildAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetChildAccountsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getChildAccounts:getChildAccounts", {
        "childAccounts": args.childAccounts,
        "filters": args.filters,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getChildAccounts.
 */
export interface GetChildAccountsArgs {
    childAccounts?: inputs.GetChildAccountsChildAccount[];
    filters?: inputs.GetChildAccountsFilter[];
}

/**
 * A collection of values returned by getChildAccounts.
 */
export interface GetChildAccountsResult {
    readonly childAccounts?: outputs.GetChildAccountsChildAccount[];
    readonly filters?: outputs.GetChildAccountsFilter[];
    readonly id: string;
}
export function getChildAccountsOutput(args?: GetChildAccountsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChildAccountsResult> {
    return pulumi.output(args).apply((a: any) => getChildAccounts(a, opts))
}

/**
 * A collection of arguments for invoking getChildAccounts.
 */
export interface GetChildAccountsOutputArgs {
    childAccounts?: pulumi.Input<pulumi.Input<inputs.GetChildAccountsChildAccountArgs>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetChildAccountsFilterArgs>[]>;
}
