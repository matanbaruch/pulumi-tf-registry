// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PlacementGroupAssignment extends pulumi.CustomResource {
    /**
     * Get an existing PlacementGroupAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PlacementGroupAssignmentState, opts?: pulumi.CustomResourceOptions): PlacementGroupAssignment {
        return new PlacementGroupAssignment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'linode:index/placementGroupAssignment:PlacementGroupAssignment';

    /**
     * Returns true if the given object is an instance of PlacementGroupAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PlacementGroupAssignment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PlacementGroupAssignment.__pulumiType;
    }

    public readonly compliantOnly!: pulumi.Output<boolean | undefined>;
    /**
     * A set of Linode IDs to assign to the Placement Group.
     */
    public readonly linodeId!: pulumi.Output<number>;
    /**
     * The ID of the Placement Group for this assignment.
     */
    public readonly placementGroupId!: pulumi.Output<number>;

    /**
     * Create a PlacementGroupAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PlacementGroupAssignmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PlacementGroupAssignmentArgs | PlacementGroupAssignmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PlacementGroupAssignmentState | undefined;
            resourceInputs["compliantOnly"] = state ? state.compliantOnly : undefined;
            resourceInputs["linodeId"] = state ? state.linodeId : undefined;
            resourceInputs["placementGroupId"] = state ? state.placementGroupId : undefined;
        } else {
            const args = argsOrState as PlacementGroupAssignmentArgs | undefined;
            if ((!args || args.linodeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'linodeId'");
            }
            if ((!args || args.placementGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'placementGroupId'");
            }
            resourceInputs["compliantOnly"] = args ? args.compliantOnly : undefined;
            resourceInputs["linodeId"] = args ? args.linodeId : undefined;
            resourceInputs["placementGroupId"] = args ? args.placementGroupId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PlacementGroupAssignment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PlacementGroupAssignment resources.
 */
export interface PlacementGroupAssignmentState {
    compliantOnly?: pulumi.Input<boolean>;
    /**
     * A set of Linode IDs to assign to the Placement Group.
     */
    linodeId?: pulumi.Input<number>;
    /**
     * The ID of the Placement Group for this assignment.
     */
    placementGroupId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PlacementGroupAssignment resource.
 */
export interface PlacementGroupAssignmentArgs {
    compliantOnly?: pulumi.Input<boolean>;
    /**
     * A set of Linode IDs to assign to the Placement Group.
     */
    linodeId: pulumi.Input<number>;
    /**
     * The ID of the Placement Group for this assignment.
     */
    placementGroupId: pulumi.Input<number>;
}
