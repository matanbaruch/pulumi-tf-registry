// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStackscript(args: GetStackscriptArgs, opts?: pulumi.InvokeOptions): Promise<GetStackscriptResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("linode:index/getStackscript:getStackscript", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStackscript.
 */
export interface GetStackscriptArgs {
    id: string;
}

/**
 * A collection of values returned by getStackscript.
 */
export interface GetStackscriptResult {
    readonly created: string;
    readonly deploymentsActive: number;
    readonly deploymentsTotal: number;
    readonly description: string;
    readonly id: string;
    readonly images: string[];
    readonly isPublic: boolean;
    readonly label: string;
    readonly revNote: string;
    readonly script: string;
    readonly updated: string;
    readonly userDefinedFields: outputs.GetStackscriptUserDefinedField[];
    readonly userGravatarId: string;
    readonly username: string;
}
export function getStackscriptOutput(args: GetStackscriptOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStackscriptResult> {
    return pulumi.output(args).apply((a: any) => getStackscript(a, opts))
}

/**
 * A collection of arguments for invoking getStackscript.
 */
export interface GetStackscriptOutputArgs {
    id: pulumi.Input<string>;
}
