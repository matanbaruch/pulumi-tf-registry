// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProjectInboundDataFilter extends pulumi.CustomResource {
    /**
     * Get an existing ProjectInboundDataFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectInboundDataFilterState, opts?: pulumi.CustomResourceOptions): ProjectInboundDataFilter {
        return new ProjectInboundDataFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sentry:index/projectInboundDataFilter:ProjectInboundDataFilter';

    /**
     * Returns true if the given object is an instance of ProjectInboundDataFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectInboundDataFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectInboundDataFilter.__pulumiType;
    }

    /**
     * Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.
     */
    public readonly active!: pulumi.Output<boolean | undefined>;
    /**
     * The type of filter toggle to update. See the [Sentry
     * documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available filters.
     */
    public readonly filterId!: pulumi.Output<string>;
    /**
     * The slug of the organization the project belongs to.
     */
    public readonly organization!: pulumi.Output<string>;
    /**
     * The slug of the project to create the filter for.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies which legacy browser filters should be active. Anything excluded from the list will be disabled. See the
     * [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available
     * subfilters.
     */
    public readonly subfilters!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ProjectInboundDataFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectInboundDataFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectInboundDataFilterArgs | ProjectInboundDataFilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectInboundDataFilterState | undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["filterId"] = state ? state.filterId : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["subfilters"] = state ? state.subfilters : undefined;
        } else {
            const args = argsOrState as ProjectInboundDataFilterArgs | undefined;
            if ((!args || args.filterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filterId'");
            }
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["filterId"] = args ? args.filterId : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["subfilters"] = args ? args.subfilters : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectInboundDataFilter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProjectInboundDataFilter resources.
 */
export interface ProjectInboundDataFilterState {
    /**
     * Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.
     */
    active?: pulumi.Input<boolean>;
    /**
     * The type of filter toggle to update. See the [Sentry
     * documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available filters.
     */
    filterId?: pulumi.Input<string>;
    /**
     * The slug of the organization the project belongs to.
     */
    organization?: pulumi.Input<string>;
    /**
     * The slug of the project to create the filter for.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies which legacy browser filters should be active. Anything excluded from the list will be disabled. See the
     * [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available
     * subfilters.
     */
    subfilters?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ProjectInboundDataFilter resource.
 */
export interface ProjectInboundDataFilterArgs {
    /**
     * Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.
     */
    active?: pulumi.Input<boolean>;
    /**
     * The type of filter toggle to update. See the [Sentry
     * documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available filters.
     */
    filterId: pulumi.Input<string>;
    /**
     * The slug of the organization the project belongs to.
     */
    organization: pulumi.Input<string>;
    /**
     * The slug of the project to create the filter for.
     */
    project: pulumi.Input<string>;
    /**
     * Specifies which legacy browser filters should be active. Anything excluded from the list will be disabled. See the
     * [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available
     * subfilters.
     */
    subfilters?: pulumi.Input<pulumi.Input<string>[]>;
}
