// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationIntegration(args: GetOrganizationIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationIntegrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sentry:index/getOrganizationIntegration:getOrganizationIntegration", {
        "name": args.name,
        "organization": args.organization,
        "providerKey": args.providerKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationIntegration.
 */
export interface GetOrganizationIntegrationArgs {
    name: string;
    organization: string;
    providerKey: string;
}

/**
 * A collection of values returned by getOrganizationIntegration.
 */
export interface GetOrganizationIntegrationResult {
    readonly id: string;
    /**
     * @deprecated Deprecated
     */
    readonly internalId: string;
    readonly name: string;
    readonly organization: string;
    readonly providerKey: string;
}
export function getOrganizationIntegrationOutput(args: GetOrganizationIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationIntegrationResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationIntegration.
 */
export interface GetOrganizationIntegrationOutputArgs {
    name: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    providerKey: pulumi.Input<string>;
}
