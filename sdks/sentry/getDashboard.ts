// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDashboard(args: GetDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sentry:index/getDashboard:getDashboard", {
        "id": args.id,
        "internalId": args.internalId,
        "organization": args.organization,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardArgs {
    id?: string;
    internalId: string;
    organization: string;
}

/**
 * A collection of values returned by getDashboard.
 */
export interface GetDashboardResult {
    readonly id: string;
    readonly internalId: string;
    readonly organization: string;
    readonly title: string;
    readonly widgets: outputs.GetDashboardWidget[];
}
export function getDashboardOutput(args: GetDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDashboardResult> {
    return pulumi.output(args).apply((a: any) => getDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getDashboard.
 */
export interface GetDashboardOutputArgs {
    id?: pulumi.Input<string>;
    internalId: pulumi.Input<string>;
    organization: pulumi.Input<string>;
}
