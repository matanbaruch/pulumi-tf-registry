// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMetricAlert(args: GetMetricAlertArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricAlertResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sentry:index/getMetricAlert:getMetricAlert", {
        "id": args.id,
        "internalId": args.internalId,
        "organization": args.organization,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetricAlert.
 */
export interface GetMetricAlertArgs {
    id?: string;
    internalId: string;
    organization: string;
    project: string;
}

/**
 * A collection of values returned by getMetricAlert.
 */
export interface GetMetricAlertResult {
    readonly aggregate: string;
    readonly dataset: string;
    readonly environment: string;
    readonly eventTypes: string[];
    readonly id: string;
    readonly internalId: string;
    readonly name: string;
    readonly organization: string;
    readonly owner: string;
    readonly project: string;
    readonly query: string;
    readonly resolveThreshold: number;
    readonly thresholdType: number;
    readonly timeWindow: number;
    readonly triggers: outputs.GetMetricAlertTrigger[];
}
export function getMetricAlertOutput(args: GetMetricAlertOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetricAlertResult> {
    return pulumi.output(args).apply((a: any) => getMetricAlert(a, opts))
}

/**
 * A collection of arguments for invoking getMetricAlert.
 */
export interface GetMetricAlertOutputArgs {
    id?: pulumi.Input<string>;
    internalId: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
