// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProjectSymbolSource extends pulumi.CustomResource {
    /**
     * Get an existing ProjectSymbolSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectSymbolSourceState, opts?: pulumi.CustomResourceOptions): ProjectSymbolSource {
        return new ProjectSymbolSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sentry:index/projectSymbolSource:ProjectSymbolSource';

    /**
     * Returns true if the given object is an instance of ProjectSymbolSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectSymbolSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectSymbolSource.__pulumiType;
    }

    /**
     * The AWS Access Key.Required for S3 sources, invalid for all others.
     */
    public readonly accessKey!: pulumi.Output<string | undefined>;
    /**
     * The App Store Connect Issuer ID. Required for AppStoreConnect sources, invalid for all others.
     */
    public readonly appConnectIssuer!: pulumi.Output<string | undefined>;
    /**
     * The App Store Connect API Private Key. Required for AppStoreConnect sources, invalid for all others.
     */
    public readonly appConnectPrivateKey!: pulumi.Output<string | undefined>;
    /**
     * The App Store Connect App ID. Required for AppStoreConnect sources, invalid for all others.
     */
    public readonly appId!: pulumi.Output<string | undefined>;
    /**
     * The GCS or S3 bucket where the source resides. Required for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect
     * sources.
     */
    public readonly bucket!: pulumi.Output<string | undefined>;
    /**
     * The GCS email address for authentication. Required for GCS sources, invalid for all others.
     */
    public readonly clientEmail!: pulumi.Output<string | undefined>;
    /**
     * Layout settings for the source. This is required for HTTP, GCS, and S3 sources and invalid for AppStoreConnect sources.
     */
    public readonly layout!: pulumi.Output<outputs.ProjectSymbolSourceLayout | undefined>;
    /**
     * The human-readable name of the source.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The slug of the organization the project belongs to.
     */
    public readonly organization!: pulumi.Output<string>;
    /**
     * The password for accessing the source. Optional for HTTP sources, invalid for all others.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The GCS or S3 prefix. Optional for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect sources.
     */
    public readonly prefix!: pulumi.Output<string | undefined>;
    /**
     * The GCS private key. Required for GCS sources, invalid for all others.
     */
    public readonly privateKey!: pulumi.Output<string | undefined>;
    /**
     * The slug of the project to create the filter for.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The source's S3 region. Required for S3 sources, invalid for all others.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The AWS Secret Access Key.Required for S3 sources, invalid for all others.
     */
    public readonly secretKey!: pulumi.Output<string | undefined>;
    /**
     * The type of symbol source. One of `appStoreConnect` (App Store Connect), `http` (SymbolServer (HTTP)), `gcs` (Google
     * Cloud Storage), `s3` (Amazon S3).
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The source's URL. Optional for HTTP sources, invalid for all others.
     */
    public readonly url!: pulumi.Output<string | undefined>;
    /**
     * The user name for accessing the source. Optional for HTTP sources, invalid for all others.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a ProjectSymbolSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectSymbolSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectSymbolSourceArgs | ProjectSymbolSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectSymbolSourceState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["appConnectIssuer"] = state ? state.appConnectIssuer : undefined;
            resourceInputs["appConnectPrivateKey"] = state ? state.appConnectPrivateKey : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["clientEmail"] = state ? state.clientEmail : undefined;
            resourceInputs["layout"] = state ? state.layout : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as ProjectSymbolSourceArgs | undefined;
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accessKey"] = args ? args.accessKey : undefined;
            resourceInputs["appConnectIssuer"] = args ? args.appConnectIssuer : undefined;
            resourceInputs["appConnectPrivateKey"] = args?.appConnectPrivateKey ? pulumi.secret(args.appConnectPrivateKey) : undefined;
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["clientEmail"] = args ? args.clientEmail : undefined;
            resourceInputs["layout"] = args ? args.layout : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["secretKey"] = args?.secretKey ? pulumi.secret(args.secretKey) : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["appConnectPrivateKey", "password", "privateKey", "secretKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ProjectSymbolSource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProjectSymbolSource resources.
 */
export interface ProjectSymbolSourceState {
    /**
     * The AWS Access Key.Required for S3 sources, invalid for all others.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The App Store Connect Issuer ID. Required for AppStoreConnect sources, invalid for all others.
     */
    appConnectIssuer?: pulumi.Input<string>;
    /**
     * The App Store Connect API Private Key. Required for AppStoreConnect sources, invalid for all others.
     */
    appConnectPrivateKey?: pulumi.Input<string>;
    /**
     * The App Store Connect App ID. Required for AppStoreConnect sources, invalid for all others.
     */
    appId?: pulumi.Input<string>;
    /**
     * The GCS or S3 bucket where the source resides. Required for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect
     * sources.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The GCS email address for authentication. Required for GCS sources, invalid for all others.
     */
    clientEmail?: pulumi.Input<string>;
    /**
     * Layout settings for the source. This is required for HTTP, GCS, and S3 sources and invalid for AppStoreConnect sources.
     */
    layout?: pulumi.Input<inputs.ProjectSymbolSourceLayout>;
    /**
     * The human-readable name of the source.
     */
    name?: pulumi.Input<string>;
    /**
     * The slug of the organization the project belongs to.
     */
    organization?: pulumi.Input<string>;
    /**
     * The password for accessing the source. Optional for HTTP sources, invalid for all others.
     */
    password?: pulumi.Input<string>;
    /**
     * The GCS or S3 prefix. Optional for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect sources.
     */
    prefix?: pulumi.Input<string>;
    /**
     * The GCS private key. Required for GCS sources, invalid for all others.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The slug of the project to create the filter for.
     */
    project?: pulumi.Input<string>;
    /**
     * The source's S3 region. Required for S3 sources, invalid for all others.
     */
    region?: pulumi.Input<string>;
    /**
     * The AWS Secret Access Key.Required for S3 sources, invalid for all others.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * The type of symbol source. One of `appStoreConnect` (App Store Connect), `http` (SymbolServer (HTTP)), `gcs` (Google
     * Cloud Storage), `s3` (Amazon S3).
     */
    type?: pulumi.Input<string>;
    /**
     * The source's URL. Optional for HTTP sources, invalid for all others.
     */
    url?: pulumi.Input<string>;
    /**
     * The user name for accessing the source. Optional for HTTP sources, invalid for all others.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProjectSymbolSource resource.
 */
export interface ProjectSymbolSourceArgs {
    /**
     * The AWS Access Key.Required for S3 sources, invalid for all others.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * The App Store Connect Issuer ID. Required for AppStoreConnect sources, invalid for all others.
     */
    appConnectIssuer?: pulumi.Input<string>;
    /**
     * The App Store Connect API Private Key. Required for AppStoreConnect sources, invalid for all others.
     */
    appConnectPrivateKey?: pulumi.Input<string>;
    /**
     * The App Store Connect App ID. Required for AppStoreConnect sources, invalid for all others.
     */
    appId?: pulumi.Input<string>;
    /**
     * The GCS or S3 bucket where the source resides. Required for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect
     * sources.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The GCS email address for authentication. Required for GCS sources, invalid for all others.
     */
    clientEmail?: pulumi.Input<string>;
    /**
     * Layout settings for the source. This is required for HTTP, GCS, and S3 sources and invalid for AppStoreConnect sources.
     */
    layout?: pulumi.Input<inputs.ProjectSymbolSourceLayout>;
    /**
     * The human-readable name of the source.
     */
    name?: pulumi.Input<string>;
    /**
     * The slug of the organization the project belongs to.
     */
    organization: pulumi.Input<string>;
    /**
     * The password for accessing the source. Optional for HTTP sources, invalid for all others.
     */
    password?: pulumi.Input<string>;
    /**
     * The GCS or S3 prefix. Optional for GCS and S3 sourcse, invalid for HTTP and AppStoreConnect sources.
     */
    prefix?: pulumi.Input<string>;
    /**
     * The GCS private key. Required for GCS sources, invalid for all others.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The slug of the project to create the filter for.
     */
    project: pulumi.Input<string>;
    /**
     * The source's S3 region. Required for S3 sources, invalid for all others.
     */
    region?: pulumi.Input<string>;
    /**
     * The AWS Secret Access Key.Required for S3 sources, invalid for all others.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * The type of symbol source. One of `appStoreConnect` (App Store Connect), `http` (SymbolServer (HTTP)), `gcs` (Google
     * Cloud Storage), `s3` (Amazon S3).
     */
    type: pulumi.Input<string>;
    /**
     * The source's URL. Optional for HTTP sources, invalid for all others.
     */
    url?: pulumi.Input<string>;
    /**
     * The user name for accessing the source. Optional for HTTP sources, invalid for all others.
     */
    username?: pulumi.Input<string>;
}
