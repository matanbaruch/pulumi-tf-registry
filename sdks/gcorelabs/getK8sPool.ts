// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getK8sPool(args: GetK8sPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetK8sPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcorelabs:index/getK8sPool:getK8sPool", {
        "clusterId": args.clusterId,
        "id": args.id,
        "poolId": args.poolId,
        "projectId": args.projectId,
        "projectName": args.projectName,
        "regionId": args.regionId,
        "regionName": args.regionName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getK8sPool.
 */
export interface GetK8sPoolArgs {
    clusterId: string;
    id?: string;
    poolId: string;
    projectId?: number;
    projectName?: string;
    regionId?: number;
    regionName?: string;
}

/**
 * A collection of values returned by getK8sPool.
 */
export interface GetK8sPoolResult {
    readonly clusterId: string;
    readonly createdAt: string;
    readonly dockerVolumeSize: number;
    readonly dockerVolumeType: string;
    readonly flavorId: string;
    readonly id: string;
    readonly isDefault: boolean;
    readonly maxNodeCount: number;
    readonly minNodeCount: number;
    readonly name: string;
    readonly nodeCount: number;
    readonly poolId: string;
    readonly projectId?: number;
    readonly projectName?: string;
    readonly regionId?: number;
    readonly regionName?: string;
    readonly stackId: string;
}
export function getK8sPoolOutput(args: GetK8sPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetK8sPoolResult> {
    return pulumi.output(args).apply((a: any) => getK8sPool(a, opts))
}

/**
 * A collection of arguments for invoking getK8sPool.
 */
export interface GetK8sPoolOutputArgs {
    clusterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    poolId: pulumi.Input<string>;
    projectId?: pulumi.Input<number>;
    projectName?: pulumi.Input<string>;
    regionId?: pulumi.Input<number>;
    regionName?: pulumi.Input<string>;
}
