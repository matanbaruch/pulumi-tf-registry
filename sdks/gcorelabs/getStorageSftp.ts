// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageSftp(args?: GetStorageSftpArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageSftpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcorelabs:index/getStorageSftp:getStorageSftp", {
        "id": args.id,
        "name": args.name,
        "storageId": args.storageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageSftp.
 */
export interface GetStorageSftpArgs {
    id?: string;
    name?: string;
    storageId?: number;
}

/**
 * A collection of values returned by getStorageSftp.
 */
export interface GetStorageSftpResult {
    readonly clientId: number;
    readonly generatedHttpEndpoint: string;
    readonly generatedSftpEndpoint: string;
    readonly httpExpiresHeaderValue: string;
    readonly httpServernameAlias: string;
    readonly id: string;
    readonly location: string;
    readonly name?: string;
    readonly sshKeyIds: number[];
    readonly storageId?: number;
}
export function getStorageSftpOutput(args?: GetStorageSftpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageSftpResult> {
    return pulumi.output(args).apply((a: any) => getStorageSftp(a, opts))
}

/**
 * A collection of arguments for invoking getStorageSftp.
 */
export interface GetStorageSftpOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    storageId?: pulumi.Input<number>;
}
