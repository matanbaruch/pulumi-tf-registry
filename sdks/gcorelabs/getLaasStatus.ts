// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLaasStatus(args?: GetLaasStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetLaasStatusResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcorelabs:index/getLaasStatus:getLaasStatus", {
        "id": args.id,
        "projectId": args.projectId,
        "projectName": args.projectName,
        "regionId": args.regionId,
        "regionName": args.regionName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLaasStatus.
 */
export interface GetLaasStatusArgs {
    id?: string;
    projectId?: number;
    projectName?: string;
    regionId?: number;
    regionName?: string;
}

/**
 * A collection of values returned by getLaasStatus.
 */
export interface GetLaasStatusResult {
    readonly id: string;
    readonly isInitialized: boolean;
    readonly namespace: string;
    readonly projectId?: number;
    readonly projectName?: string;
    readonly regionId?: number;
    readonly regionName?: string;
}
export function getLaasStatusOutput(args?: GetLaasStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLaasStatusResult> {
    return pulumi.output(args).apply((a: any) => getLaasStatus(a, opts))
}

/**
 * A collection of arguments for invoking getLaasStatus.
 */
export interface GetLaasStatusOutputArgs {
    id?: pulumi.Input<string>;
    projectId?: pulumi.Input<number>;
    projectName?: pulumi.Input<string>;
    regionId?: pulumi.Input<number>;
    regionName?: pulumi.Input<string>;
}
