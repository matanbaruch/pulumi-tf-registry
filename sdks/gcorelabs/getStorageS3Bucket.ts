// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageS3Bucket(args: GetStorageS3BucketArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageS3BucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcorelabs:index/getStorageS3Bucket:getStorageS3Bucket", {
        "id": args.id,
        "name": args.name,
        "storageId": args.storageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageS3Bucket.
 */
export interface GetStorageS3BucketArgs {
    id?: string;
    name: string;
    storageId: number;
}

/**
 * A collection of values returned by getStorageS3Bucket.
 */
export interface GetStorageS3BucketResult {
    readonly id: string;
    readonly name: string;
    readonly storageId: number;
}
export function getStorageS3BucketOutput(args: GetStorageS3BucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageS3BucketResult> {
    return pulumi.output(args).apply((a: any) => getStorageS3Bucket(a, opts))
}

/**
 * A collection of arguments for invoking getStorageS3Bucket.
 */
export interface GetStorageS3BucketOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    storageId: pulumi.Input<number>;
}
