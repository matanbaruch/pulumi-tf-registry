// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StorageS3 extends pulumi.CustomResource {
    /**
     * Get an existing StorageS3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageS3State, opts?: pulumi.CustomResourceOptions): StorageS3 {
        return new StorageS3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcorelabs:index/storageS3:StorageS3';

    /**
     * Returns true if the given object is an instance of StorageS3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageS3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageS3.__pulumiType;
    }

    /**
     * An client id of new storage resource.
     */
    public readonly clientId!: pulumi.Output<number>;
    /**
     * A s3 access key for new storage resource.
     */
    public readonly generatedAccessKey!: pulumi.Output<string>;
    /**
     * A s3 entry point for new storage resource.
     */
    public readonly generatedEndpoint!: pulumi.Output<string>;
    /**
     * A http s3 entry point for new storage resource.
     */
    public readonly generatedHttpEndpoint!: pulumi.Output<string>;
    /**
     * A s3 endpoint for new storage resource.
     */
    public readonly generatedS3Endpoint!: pulumi.Output<string>;
    /**
     * A s3 secret key for new storage resource.
     */
    public readonly generatedSecretKey!: pulumi.Output<string>;
    /**
     * A location of new storage resource. One of (s-ed1, s-darz1, s-ws1, s-dt2, s-drc2)
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * A name of new storage resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An id of new storage resource.
     */
    public readonly storageId!: pulumi.Output<number>;

    /**
     * Create a StorageS3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageS3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageS3Args | StorageS3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageS3State | undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["generatedAccessKey"] = state ? state.generatedAccessKey : undefined;
            resourceInputs["generatedEndpoint"] = state ? state.generatedEndpoint : undefined;
            resourceInputs["generatedHttpEndpoint"] = state ? state.generatedHttpEndpoint : undefined;
            resourceInputs["generatedS3Endpoint"] = state ? state.generatedS3Endpoint : undefined;
            resourceInputs["generatedSecretKey"] = state ? state.generatedSecretKey : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["storageId"] = state ? state.storageId : undefined;
        } else {
            const args = argsOrState as StorageS3Args | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["generatedAccessKey"] = args ? args.generatedAccessKey : undefined;
            resourceInputs["generatedEndpoint"] = args ? args.generatedEndpoint : undefined;
            resourceInputs["generatedHttpEndpoint"] = args ? args.generatedHttpEndpoint : undefined;
            resourceInputs["generatedS3Endpoint"] = args ? args.generatedS3Endpoint : undefined;
            resourceInputs["generatedSecretKey"] = args ? args.generatedSecretKey : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["storageId"] = args ? args.storageId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageS3.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageS3 resources.
 */
export interface StorageS3State {
    /**
     * An client id of new storage resource.
     */
    clientId?: pulumi.Input<number>;
    /**
     * A s3 access key for new storage resource.
     */
    generatedAccessKey?: pulumi.Input<string>;
    /**
     * A s3 entry point for new storage resource.
     */
    generatedEndpoint?: pulumi.Input<string>;
    /**
     * A http s3 entry point for new storage resource.
     */
    generatedHttpEndpoint?: pulumi.Input<string>;
    /**
     * A s3 endpoint for new storage resource.
     */
    generatedS3Endpoint?: pulumi.Input<string>;
    /**
     * A s3 secret key for new storage resource.
     */
    generatedSecretKey?: pulumi.Input<string>;
    /**
     * A location of new storage resource. One of (s-ed1, s-darz1, s-ws1, s-dt2, s-drc2)
     */
    location?: pulumi.Input<string>;
    /**
     * A name of new storage resource.
     */
    name?: pulumi.Input<string>;
    /**
     * An id of new storage resource.
     */
    storageId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a StorageS3 resource.
 */
export interface StorageS3Args {
    /**
     * An client id of new storage resource.
     */
    clientId?: pulumi.Input<number>;
    /**
     * A s3 access key for new storage resource.
     */
    generatedAccessKey?: pulumi.Input<string>;
    /**
     * A s3 entry point for new storage resource.
     */
    generatedEndpoint?: pulumi.Input<string>;
    /**
     * A http s3 entry point for new storage resource.
     */
    generatedHttpEndpoint?: pulumi.Input<string>;
    /**
     * A s3 endpoint for new storage resource.
     */
    generatedS3Endpoint?: pulumi.Input<string>;
    /**
     * A s3 secret key for new storage resource.
     */
    generatedSecretKey?: pulumi.Input<string>;
    /**
     * A location of new storage resource. One of (s-ed1, s-darz1, s-ws1, s-dt2, s-drc2)
     */
    location: pulumi.Input<string>;
    /**
     * A name of new storage resource.
     */
    name?: pulumi.Input<string>;
    /**
     * An id of new storage resource.
     */
    storageId?: pulumi.Input<number>;
}
