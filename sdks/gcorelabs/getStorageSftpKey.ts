// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageSftpKey(args: GetStorageSftpKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageSftpKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcorelabs:index/getStorageSftpKey:getStorageSftpKey", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageSftpKey.
 */
export interface GetStorageSftpKeyArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getStorageSftpKey.
 */
export interface GetStorageSftpKeyResult {
    readonly id: string;
    readonly keyId: number;
    readonly name: string;
}
export function getStorageSftpKeyOutput(args: GetStorageSftpKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageSftpKeyResult> {
    return pulumi.output(args).apply((a: any) => getStorageSftpKey(a, opts))
}

/**
 * A collection of arguments for invoking getStorageSftpKey.
 */
export interface GetStorageSftpKeyOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
