// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CdnRule extends pulumi.CustomResource {
    /**
     * Get an existing CdnRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdnRuleState, opts?: pulumi.CustomResourceOptions): CdnRule {
        return new CdnRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcorelabs:index/cdnRule:CdnRule';

    /**
     * Returns true if the given object is an instance of CdnRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdnRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdnRule.__pulumiType;
    }

    /**
     * Rule name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Each option in CDN resource settings. Each option added to CDN resource settings should have the following mandatory
     * request fields: enabled, value.
     */
    public readonly options!: pulumi.Output<outputs.CdnRuleOptions | undefined>;
    /**
     * ID of the Origins Group. Use one of your Origins Group or create a new one. You can use either 'origin' parameter or
     * 'originGroup' in the resource definition.
     */
    public readonly originGroup!: pulumi.Output<number | undefined>;
    /**
     * This option defines the protocol that will be used by CDN servers to request content from an origin source. If not
     * specified, it will be inherit from resource. Possible values are: HTTPS, HTTP, MATCH.
     */
    public readonly originProtocol!: pulumi.Output<string | undefined>;
    public readonly resourceId!: pulumi.Output<number>;
    /**
     * A pattern that defines when the rule is triggered. By default, we add a leading forward slash to any rule pattern.
     * Specify a pattern without a forward slash.
     */
    public readonly rule!: pulumi.Output<string>;
    /**
     * Type of rule. The rule is applied if the requested URI matches the rule pattern. It has two possible values: Type 0 —
     * RegEx. Must start with '^/' or '/'. Type 1 — RegEx. Legacy type. Note that for this rule type we automatically add /
     * to each rule pattern before your regular expression. Please use Type 0.
     */
    public readonly ruleType!: pulumi.Output<number>;
    /**
     * Rule weight that determines rule execution order: from the smallest (0) to the highest.
     */
    public readonly weight!: pulumi.Output<number | undefined>;

    /**
     * Create a CdnRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdnRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdnRuleArgs | CdnRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdnRuleState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["originGroup"] = state ? state.originGroup : undefined;
            resourceInputs["originProtocol"] = state ? state.originProtocol : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["rule"] = state ? state.rule : undefined;
            resourceInputs["ruleType"] = state ? state.ruleType : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as CdnRuleArgs | undefined;
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.rule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rule'");
            }
            if ((!args || args.ruleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleType'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["originGroup"] = args ? args.originGroup : undefined;
            resourceInputs["originProtocol"] = args ? args.originProtocol : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["rule"] = args ? args.rule : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdnRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CdnRule resources.
 */
export interface CdnRuleState {
    /**
     * Rule name
     */
    name?: pulumi.Input<string>;
    /**
     * Each option in CDN resource settings. Each option added to CDN resource settings should have the following mandatory
     * request fields: enabled, value.
     */
    options?: pulumi.Input<inputs.CdnRuleOptions>;
    /**
     * ID of the Origins Group. Use one of your Origins Group or create a new one. You can use either 'origin' parameter or
     * 'originGroup' in the resource definition.
     */
    originGroup?: pulumi.Input<number>;
    /**
     * This option defines the protocol that will be used by CDN servers to request content from an origin source. If not
     * specified, it will be inherit from resource. Possible values are: HTTPS, HTTP, MATCH.
     */
    originProtocol?: pulumi.Input<string>;
    resourceId?: pulumi.Input<number>;
    /**
     * A pattern that defines when the rule is triggered. By default, we add a leading forward slash to any rule pattern.
     * Specify a pattern without a forward slash.
     */
    rule?: pulumi.Input<string>;
    /**
     * Type of rule. The rule is applied if the requested URI matches the rule pattern. It has two possible values: Type 0 —
     * RegEx. Must start with '^/' or '/'. Type 1 — RegEx. Legacy type. Note that for this rule type we automatically add /
     * to each rule pattern before your regular expression. Please use Type 0.
     */
    ruleType?: pulumi.Input<number>;
    /**
     * Rule weight that determines rule execution order: from the smallest (0) to the highest.
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CdnRule resource.
 */
export interface CdnRuleArgs {
    /**
     * Rule name
     */
    name?: pulumi.Input<string>;
    /**
     * Each option in CDN resource settings. Each option added to CDN resource settings should have the following mandatory
     * request fields: enabled, value.
     */
    options?: pulumi.Input<inputs.CdnRuleOptions>;
    /**
     * ID of the Origins Group. Use one of your Origins Group or create a new one. You can use either 'origin' parameter or
     * 'originGroup' in the resource definition.
     */
    originGroup?: pulumi.Input<number>;
    /**
     * This option defines the protocol that will be used by CDN servers to request content from an origin source. If not
     * specified, it will be inherit from resource. Possible values are: HTTPS, HTTP, MATCH.
     */
    originProtocol?: pulumi.Input<string>;
    resourceId: pulumi.Input<number>;
    /**
     * A pattern that defines when the rule is triggered. By default, we add a leading forward slash to any rule pattern.
     * Specify a pattern without a forward slash.
     */
    rule: pulumi.Input<string>;
    /**
     * Type of rule. The rule is applied if the requested URI matches the rule pattern. It has two possible values: Type 0 —
     * RegEx. Must start with '^/' or '/'. Type 1 — RegEx. Legacy type. Note that for this rule type we automatically add /
     * to each rule pattern before your regular expression. Please use Type 0.
     */
    ruleType: pulumi.Input<number>;
    /**
     * Rule weight that determines rule execution order: from the smallest (0) to the highest.
     */
    weight?: pulumi.Input<number>;
}
