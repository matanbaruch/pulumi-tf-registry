// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetTemplatePostrender {
    /**
     * The command binary path.
     */
    binaryPath: string;
}

export interface GetTemplatePostrenderArgs {
    /**
     * The command binary path.
     */
    binaryPath: pulumi.Input<string>;
}

export interface GetTemplateSet {
    name: string;
    type?: string;
    value: string;
}

export interface GetTemplateSetArgs {
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetTemplateSetList {
    name: string;
    values: string[];
}

export interface GetTemplateSetListArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetTemplateSetSensitive {
    name: string;
    type?: string;
    value: string;
}

export interface GetTemplateSetSensitiveArgs {
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetTemplateSetString {
    name: string;
    value: string;
}

export interface GetTemplateSetStringArgs {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ProviderExperiments {
    /**
     * Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
     */
    manifest?: pulumi.Input<boolean>;
}

export interface ProviderKubernetes {
    /**
     * PEM-encoded client certificate for TLS authentication.
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * PEM-encoded client certificate key for TLS authentication.
     */
    clientKey?: pulumi.Input<string>;
    /**
     * PEM-encoded root certificates bundle for TLS authentication.
     */
    clusterCaCertificate?: pulumi.Input<string>;
    configContext?: pulumi.Input<string>;
    configContextAuthInfo?: pulumi.Input<string>;
    configContextCluster?: pulumi.Input<string>;
    /**
     * Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
     */
    configPath?: pulumi.Input<string>;
    /**
     * A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
     */
    configPaths?: pulumi.Input<pulumi.Input<string>[]>;
    exec?: pulumi.Input<inputs.ProviderKubernetesExec>;
    /**
     * The hostname (in form of URI) of Kubernetes master.
     */
    host?: pulumi.Input<string>;
    /**
     * Whether server should be accessed without verifying the TLS certificate.
     */
    insecure?: pulumi.Input<boolean>;
    /**
     * The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
     */
    password?: pulumi.Input<string>;
    /**
     * URL to the proxy to be used for all API requests
     */
    proxyUrl?: pulumi.Input<string>;
    /**
     * Server name passed to the server for SNI and is used in the client to check server certificates against.
     */
    tlsServerName?: pulumi.Input<string>;
    /**
     * Token to authenticate an service account
     */
    token?: pulumi.Input<string>;
    /**
     * The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
     */
    username?: pulumi.Input<string>;
}

export interface ProviderKubernetesExec {
    apiVersion: pulumi.Input<string>;
    args?: pulumi.Input<pulumi.Input<string>[]>;
    command: pulumi.Input<string>;
    env?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ProviderRegistry {
    /**
     * The password to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
     */
    password: pulumi.Input<string>;
    /**
     * OCI URL in form of oci://host:port or oci://host
     */
    url: pulumi.Input<string>;
    /**
     * The username to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
     */
    username: pulumi.Input<string>;
}

export interface ReleaseMetadata {
    appVersion: pulumi.Input<string>;
    chart: pulumi.Input<string>;
    firstDeployed: pulumi.Input<number>;
    lastDeployed: pulumi.Input<number>;
    name: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    notes: pulumi.Input<string>;
    revision: pulumi.Input<number>;
    values: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface ReleasePostrender {
    /**
     * an argument to the post-renderer (can specify multiple)
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The command binary path.
     */
    binaryPath: pulumi.Input<string>;
}

export interface ReleaseSet {
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ReleaseSetList {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ReleaseSetSensitive {
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}
export namespace config {
}
