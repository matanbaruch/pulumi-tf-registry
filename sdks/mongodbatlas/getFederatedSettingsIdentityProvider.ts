// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFederatedSettingsIdentityProvider(args: GetFederatedSettingsIdentityProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetFederatedSettingsIdentityProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFederatedSettingsIdentityProvider:getFederatedSettingsIdentityProvider", {
        "federationSettingsId": args.federationSettingsId,
        "id": args.id,
        "identityProviderId": args.identityProviderId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFederatedSettingsIdentityProvider.
 */
export interface GetFederatedSettingsIdentityProviderArgs {
    federationSettingsId: string;
    id?: string;
    identityProviderId: string;
}

/**
 * A collection of values returned by getFederatedSettingsIdentityProvider.
 */
export interface GetFederatedSettingsIdentityProviderResult {
    readonly acsUrl: string;
    readonly associatedDomains: string[];
    readonly associatedOrgs: outputs.GetFederatedSettingsIdentityProviderAssociatedOrg[];
    readonly audience: string;
    readonly audienceUri: string;
    readonly authorizationType: string;
    readonly clientId: string;
    readonly description: string;
    readonly displayName: string;
    readonly federationSettingsId: string;
    readonly groupsClaim: string;
    readonly id: string;
    readonly identityProviderId: string;
    readonly idpId: string;
    readonly idpType: string;
    readonly issuerUri: string;
    readonly oktaIdpId: string;
    readonly pemFileInfos: outputs.GetFederatedSettingsIdentityProviderPemFileInfo[];
    readonly protocol: string;
    readonly requestBinding: string;
    readonly requestedScopes: string[];
    readonly responseSignatureAlgorithm: string;
    readonly ssoDebugEnabled: boolean;
    readonly ssoUrl: string;
    readonly status: string;
    readonly userClaim: string;
}
export function getFederatedSettingsIdentityProviderOutput(args: GetFederatedSettingsIdentityProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFederatedSettingsIdentityProviderResult> {
    return pulumi.output(args).apply((a: any) => getFederatedSettingsIdentityProvider(a, opts))
}

/**
 * A collection of arguments for invoking getFederatedSettingsIdentityProvider.
 */
export interface GetFederatedSettingsIdentityProviderOutputArgs {
    federationSettingsId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identityProviderId: pulumi.Input<string>;
}
