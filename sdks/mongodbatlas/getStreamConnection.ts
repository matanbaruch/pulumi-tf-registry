// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStreamConnection(args: GetStreamConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamConnection:getStreamConnection", {
        "connectionName": args.connectionName,
        "instanceName": args.instanceName,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStreamConnection.
 */
export interface GetStreamConnectionArgs {
    connectionName: string;
    instanceName: string;
    projectId: string;
}

/**
 * A collection of values returned by getStreamConnection.
 */
export interface GetStreamConnectionResult {
    readonly authentication: outputs.GetStreamConnectionAuthentication;
    readonly bootstrapServers: string;
    readonly clusterName: string;
    readonly config: {[key: string]: string};
    readonly connectionName: string;
    readonly dbRoleToExecute: outputs.GetStreamConnectionDbRoleToExecute;
    readonly id: string;
    readonly instanceName: string;
    readonly projectId: string;
    readonly security: outputs.GetStreamConnectionSecurity;
    readonly type: string;
}
export function getStreamConnectionOutput(args: GetStreamConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamConnectionResult> {
    return pulumi.output(args).apply((a: any) => getStreamConnection(a, opts))
}

/**
 * A collection of arguments for invoking getStreamConnection.
 */
export interface GetStreamConnectionOutputArgs {
    connectionName: pulumi.Input<string>;
    instanceName: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
