// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProjectApiKey(args: GetProjectApiKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectApiKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getProjectApiKey:getProjectApiKey", {
        "apiKeyId": args.apiKeyId,
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectApiKey.
 */
export interface GetProjectApiKeyArgs {
    apiKeyId: string;
    id?: string;
    projectId: string;
}

/**
 * A collection of values returned by getProjectApiKey.
 */
export interface GetProjectApiKeyResult {
    readonly apiKeyId: string;
    readonly description: string;
    readonly id: string;
    readonly privateKey: string;
    readonly projectAssignments: outputs.GetProjectApiKeyProjectAssignment[];
    readonly projectId: string;
    readonly publicKey: string;
}
export function getProjectApiKeyOutput(args: GetProjectApiKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectApiKeyResult> {
    return pulumi.output(args).apply((a: any) => getProjectApiKey(a, opts))
}

/**
 * A collection of arguments for invoking getProjectApiKey.
 */
export interface GetProjectApiKeyOutputArgs {
    apiKeyId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
