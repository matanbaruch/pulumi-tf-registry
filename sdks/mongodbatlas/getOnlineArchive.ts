// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOnlineArchive(args: GetOnlineArchiveArgs, opts?: pulumi.InvokeOptions): Promise<GetOnlineArchiveResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getOnlineArchive:getOnlineArchive", {
        "archiveId": args.archiveId,
        "clusterName": args.clusterName,
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOnlineArchive.
 */
export interface GetOnlineArchiveArgs {
    archiveId: string;
    clusterName: string;
    id?: string;
    projectId: string;
}

/**
 * A collection of values returned by getOnlineArchive.
 */
export interface GetOnlineArchiveResult {
    readonly archiveId: string;
    readonly clusterName: string;
    readonly collName: string;
    readonly collectionType: string;
    readonly criterias: outputs.GetOnlineArchiveCriteria[];
    readonly dataExpirationRules: outputs.GetOnlineArchiveDataExpirationRule[];
    readonly dataProcessRegions: outputs.GetOnlineArchiveDataProcessRegion[];
    readonly dbName: string;
    readonly id: string;
    readonly partitionFields: outputs.GetOnlineArchivePartitionField[];
    readonly paused: boolean;
    readonly projectId: string;
    readonly schedules: outputs.GetOnlineArchiveSchedule[];
    readonly state: string;
}
export function getOnlineArchiveOutput(args: GetOnlineArchiveOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOnlineArchiveResult> {
    return pulumi.output(args).apply((a: any) => getOnlineArchive(a, opts))
}

/**
 * A collection of arguments for invoking getOnlineArchive.
 */
export interface GetOnlineArchiveOutputArgs {
    archiveId: pulumi.Input<string>;
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
