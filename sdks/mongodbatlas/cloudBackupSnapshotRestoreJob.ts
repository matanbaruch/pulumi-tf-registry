// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudBackupSnapshotRestoreJob extends pulumi.CustomResource {
    /**
     * Get an existing CloudBackupSnapshotRestoreJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudBackupSnapshotRestoreJobState, opts?: pulumi.CustomResourceOptions): CloudBackupSnapshotRestoreJob {
        return new CloudBackupSnapshotRestoreJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/cloudBackupSnapshotRestoreJob:CloudBackupSnapshotRestoreJob';

    /**
     * Returns true if the given object is an instance of CloudBackupSnapshotRestoreJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudBackupSnapshotRestoreJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudBackupSnapshotRestoreJob.__pulumiType;
    }

    public /*out*/ readonly cancelled!: pulumi.Output<boolean>;
    public readonly clusterName!: pulumi.Output<string>;
    public readonly deliveryTypeConfig!: pulumi.Output<outputs.CloudBackupSnapshotRestoreJobDeliveryTypeConfig | undefined>;
    public /*out*/ readonly deliveryUrls!: pulumi.Output<string[]>;
    public /*out*/ readonly expired!: pulumi.Output<boolean>;
    public /*out*/ readonly expiresAt!: pulumi.Output<string>;
    public /*out*/ readonly finishedAt!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly snapshotId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly snapshotRestoreJobId!: pulumi.Output<string>;
    public /*out*/ readonly timestamp!: pulumi.Output<string>;

    /**
     * Create a CloudBackupSnapshotRestoreJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudBackupSnapshotRestoreJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudBackupSnapshotRestoreJobArgs | CloudBackupSnapshotRestoreJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudBackupSnapshotRestoreJobState | undefined;
            resourceInputs["cancelled"] = state ? state.cancelled : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["deliveryTypeConfig"] = state ? state.deliveryTypeConfig : undefined;
            resourceInputs["deliveryUrls"] = state ? state.deliveryUrls : undefined;
            resourceInputs["expired"] = state ? state.expired : undefined;
            resourceInputs["expiresAt"] = state ? state.expiresAt : undefined;
            resourceInputs["finishedAt"] = state ? state.finishedAt : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["snapshotRestoreJobId"] = state ? state.snapshotRestoreJobId : undefined;
            resourceInputs["timestamp"] = state ? state.timestamp : undefined;
        } else {
            const args = argsOrState as CloudBackupSnapshotRestoreJobArgs | undefined;
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["deliveryTypeConfig"] = args ? args.deliveryTypeConfig : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["cancelled"] = undefined /*out*/;
            resourceInputs["deliveryUrls"] = undefined /*out*/;
            resourceInputs["expired"] = undefined /*out*/;
            resourceInputs["expiresAt"] = undefined /*out*/;
            resourceInputs["finishedAt"] = undefined /*out*/;
            resourceInputs["snapshotRestoreJobId"] = undefined /*out*/;
            resourceInputs["timestamp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudBackupSnapshotRestoreJob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudBackupSnapshotRestoreJob resources.
 */
export interface CloudBackupSnapshotRestoreJobState {
    cancelled?: pulumi.Input<boolean>;
    clusterName?: pulumi.Input<string>;
    deliveryTypeConfig?: pulumi.Input<inputs.CloudBackupSnapshotRestoreJobDeliveryTypeConfig>;
    deliveryUrls?: pulumi.Input<pulumi.Input<string>[]>;
    expired?: pulumi.Input<boolean>;
    expiresAt?: pulumi.Input<string>;
    finishedAt?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    snapshotRestoreJobId?: pulumi.Input<string>;
    timestamp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudBackupSnapshotRestoreJob resource.
 */
export interface CloudBackupSnapshotRestoreJobArgs {
    clusterName: pulumi.Input<string>;
    deliveryTypeConfig?: pulumi.Input<inputs.CloudBackupSnapshotRestoreJobDeliveryTypeConfig>;
    projectId: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
}
