// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProjectInvitation(args: GetProjectInvitationArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectInvitationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getProjectInvitation:getProjectInvitation", {
        "id": args.id,
        "invitationId": args.invitationId,
        "projectId": args.projectId,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectInvitation.
 */
export interface GetProjectInvitationArgs {
    id?: string;
    invitationId: string;
    projectId: string;
    username: string;
}

/**
 * A collection of values returned by getProjectInvitation.
 */
export interface GetProjectInvitationResult {
    readonly createdAt: string;
    readonly expiresAt: string;
    readonly id: string;
    readonly invitationId: string;
    readonly inviterUsername: string;
    readonly projectId: string;
    readonly roles: string[];
    readonly username: string;
}
export function getProjectInvitationOutput(args: GetProjectInvitationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectInvitationResult> {
    return pulumi.output(args).apply((a: any) => getProjectInvitation(a, opts))
}

/**
 * A collection of arguments for invoking getProjectInvitation.
 */
export interface GetProjectInvitationOutputArgs {
    id?: pulumi.Input<string>;
    invitationId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
