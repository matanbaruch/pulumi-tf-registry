// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudBackupSchedule(args: GetCloudBackupScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBackupScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSchedule:getCloudBackupSchedule", {
        "clusterName": args.clusterName,
        "id": args.id,
        "projectId": args.projectId,
        "useZoneIdForCopySettings": args.useZoneIdForCopySettings,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleArgs {
    clusterName: string;
    id?: string;
    projectId: string;
    useZoneIdForCopySettings?: boolean;
}

/**
 * A collection of values returned by getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleResult {
    readonly autoExportEnabled: boolean;
    readonly clusterId: string;
    readonly clusterName: string;
    readonly copySettings: outputs.GetCloudBackupScheduleCopySetting[];
    readonly exports: outputs.GetCloudBackupScheduleExport[];
    readonly id: string;
    readonly idPolicy: string;
    readonly nextSnapshot: string;
    readonly policyItemDailies: outputs.GetCloudBackupSchedulePolicyItemDaily[];
    readonly policyItemHourlies: outputs.GetCloudBackupSchedulePolicyItemHourly[];
    readonly policyItemMonthlies: outputs.GetCloudBackupSchedulePolicyItemMonthly[];
    readonly policyItemWeeklies: outputs.GetCloudBackupSchedulePolicyItemWeekly[];
    readonly policyItemYearlies: outputs.GetCloudBackupSchedulePolicyItemYearly[];
    readonly projectId: string;
    readonly referenceHourOfDay: number;
    readonly referenceMinuteOfHour: number;
    readonly restoreWindowDays: number;
    readonly useOrgAndGroupNamesInExportPrefix: boolean;
    readonly useZoneIdForCopySettings?: boolean;
}
export function getCloudBackupScheduleOutput(args: GetCloudBackupScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudBackupScheduleResult> {
    return pulumi.output(args).apply((a: any) => getCloudBackupSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getCloudBackupSchedule.
 */
export interface GetCloudBackupScheduleOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    useZoneIdForCopySettings?: pulumi.Input<boolean>;
}
