// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudBackupSnapshotExportJob(args: GetCloudBackupSnapshotExportJobArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBackupSnapshotExportJobResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSnapshotExportJob:getCloudBackupSnapshotExportJob", {
        "clusterName": args.clusterName,
        "exportJobId": args.exportJobId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshotExportJob.
 */
export interface GetCloudBackupSnapshotExportJobArgs {
    clusterName: string;
    exportJobId: string;
    projectId: string;
}

/**
 * A collection of values returned by getCloudBackupSnapshotExportJob.
 */
export interface GetCloudBackupSnapshotExportJobResult {
    readonly clusterName: string;
    readonly components: outputs.GetCloudBackupSnapshotExportJobComponent[];
    readonly createdAt: string;
    readonly customDatas: outputs.GetCloudBackupSnapshotExportJobCustomData[];
    /**
     * @deprecated Deprecated
     */
    readonly errMsg: string;
    readonly exportBucketId: string;
    readonly exportJobId: string;
    readonly exportStatusExportedCollections: number;
    readonly exportStatusTotalCollections: number;
    readonly finishedAt: string;
    readonly id: string;
    readonly prefix: string;
    readonly projectId: string;
    readonly snapshotId: string;
    readonly state: string;
}
export function getCloudBackupSnapshotExportJobOutput(args: GetCloudBackupSnapshotExportJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudBackupSnapshotExportJobResult> {
    return pulumi.output(args).apply((a: any) => getCloudBackupSnapshotExportJob(a, opts))
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshotExportJob.
 */
export interface GetCloudBackupSnapshotExportJobOutputArgs {
    clusterName: pulumi.Input<string>;
    exportJobId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
