// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSearchIndexes(args: GetSearchIndexesArgs, opts?: pulumi.InvokeOptions): Promise<GetSearchIndexesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getSearchIndexes:getSearchIndexes", {
        "clusterName": args.clusterName,
        "collectionName": args.collectionName,
        "database": args.database,
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSearchIndexes.
 */
export interface GetSearchIndexesArgs {
    clusterName: string;
    collectionName: string;
    database: string;
    id?: string;
    projectId: string;
}

/**
 * A collection of values returned by getSearchIndexes.
 */
export interface GetSearchIndexesResult {
    readonly clusterName: string;
    readonly collectionName: string;
    readonly database: string;
    readonly id: string;
    readonly projectId: string;
    readonly results: outputs.GetSearchIndexesResult[];
    readonly totalCount: number;
}
export function getSearchIndexesOutput(args: GetSearchIndexesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSearchIndexesResult> {
    return pulumi.output(args).apply((a: any) => getSearchIndexes(a, opts))
}

/**
 * A collection of arguments for invoking getSearchIndexes.
 */
export interface GetSearchIndexesOutputArgs {
    clusterName: pulumi.Input<string>;
    collectionName: pulumi.Input<string>;
    database: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
