// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Submit this field alongside your topology reconfiguration to request a new regional outage resistant topology
     */
    public readonly acceptDataRisksAndForceReplicaSetReconfig!: pulumi.Output<string>;
    public readonly advancedConfiguration!: pulumi.Output<outputs.ClusterAdvancedConfiguration | undefined>;
    public readonly autoScalingComputeEnabled!: pulumi.Output<boolean>;
    public readonly autoScalingComputeScaleDownEnabled!: pulumi.Output<boolean>;
    public readonly autoScalingDiskGbEnabled!: pulumi.Output<boolean>;
    public readonly backingProviderName!: pulumi.Output<string>;
    /**
     * Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
     */
    public readonly backupEnabled!: pulumi.Output<boolean>;
    public readonly biConnectorConfig!: pulumi.Output<outputs.ClusterBiConnectorConfig | undefined>;
    public readonly cloudBackup!: pulumi.Output<boolean>;
    public /*out*/ readonly clusterId!: pulumi.Output<string>;
    public readonly clusterType!: pulumi.Output<string>;
    public /*out*/ readonly connectionStrings!: pulumi.Output<outputs.ClusterConnectionString[]>;
    public /*out*/ readonly containerId!: pulumi.Output<string>;
    public readonly diskSizeGb!: pulumi.Output<number>;
    public readonly encryptionAtRestProvider!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly labels!: pulumi.Output<outputs.ClusterLabel[] | undefined>;
    public readonly mongoDbMajorVersion!: pulumi.Output<string>;
    public /*out*/ readonly mongoDbVersion!: pulumi.Output<string>;
    public /*out*/ readonly mongoUri!: pulumi.Output<string>;
    public /*out*/ readonly mongoUriUpdated!: pulumi.Output<string>;
    public /*out*/ readonly mongoUriWithOptions!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly numShards!: pulumi.Output<number>;
    public readonly paused!: pulumi.Output<boolean>;
    public readonly pitEnabled!: pulumi.Output<boolean>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly providerAutoScalingComputeMaxInstanceSize!: pulumi.Output<string>;
    public readonly providerAutoScalingComputeMinInstanceSize!: pulumi.Output<string>;
    public readonly providerDiskIops!: pulumi.Output<number>;
    public readonly providerDiskTypeName!: pulumi.Output<string>;
    /**
     * @deprecated Deprecated
     */
    public readonly providerEncryptEbsVolume!: pulumi.Output<boolean>;
    public /*out*/ readonly providerEncryptEbsVolumeFlag!: pulumi.Output<boolean>;
    public readonly providerInstanceSizeName!: pulumi.Output<string>;
    public readonly providerName!: pulumi.Output<string>;
    public readonly providerRegionName!: pulumi.Output<string>;
    public readonly providerVolumeType!: pulumi.Output<string>;
    public readonly replicationFactor!: pulumi.Output<number>;
    public readonly replicationSpecs!: pulumi.Output<outputs.ClusterReplicationSpec[] | undefined>;
    /**
     * Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
     */
    public readonly retainBackupsEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly snapshotBackupPolicies!: pulumi.Output<outputs.ClusterSnapshotBackupPolicy[]>;
    public /*out*/ readonly srvAddress!: pulumi.Output<string>;
    public /*out*/ readonly stateName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ClusterTag[] | undefined>;
    public readonly terminationProtectionEnabled!: pulumi.Output<boolean>;
    public readonly timeouts!: pulumi.Output<outputs.ClusterTimeouts | undefined>;
    public readonly versionReleaseSystem!: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["acceptDataRisksAndForceReplicaSetReconfig"] = state ? state.acceptDataRisksAndForceReplicaSetReconfig : undefined;
            resourceInputs["advancedConfiguration"] = state ? state.advancedConfiguration : undefined;
            resourceInputs["autoScalingComputeEnabled"] = state ? state.autoScalingComputeEnabled : undefined;
            resourceInputs["autoScalingComputeScaleDownEnabled"] = state ? state.autoScalingComputeScaleDownEnabled : undefined;
            resourceInputs["autoScalingDiskGbEnabled"] = state ? state.autoScalingDiskGbEnabled : undefined;
            resourceInputs["backingProviderName"] = state ? state.backingProviderName : undefined;
            resourceInputs["backupEnabled"] = state ? state.backupEnabled : undefined;
            resourceInputs["biConnectorConfig"] = state ? state.biConnectorConfig : undefined;
            resourceInputs["cloudBackup"] = state ? state.cloudBackup : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterType"] = state ? state.clusterType : undefined;
            resourceInputs["connectionStrings"] = state ? state.connectionStrings : undefined;
            resourceInputs["containerId"] = state ? state.containerId : undefined;
            resourceInputs["diskSizeGb"] = state ? state.diskSizeGb : undefined;
            resourceInputs["encryptionAtRestProvider"] = state ? state.encryptionAtRestProvider : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["mongoDbMajorVersion"] = state ? state.mongoDbMajorVersion : undefined;
            resourceInputs["mongoDbVersion"] = state ? state.mongoDbVersion : undefined;
            resourceInputs["mongoUri"] = state ? state.mongoUri : undefined;
            resourceInputs["mongoUriUpdated"] = state ? state.mongoUriUpdated : undefined;
            resourceInputs["mongoUriWithOptions"] = state ? state.mongoUriWithOptions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numShards"] = state ? state.numShards : undefined;
            resourceInputs["paused"] = state ? state.paused : undefined;
            resourceInputs["pitEnabled"] = state ? state.pitEnabled : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["providerAutoScalingComputeMaxInstanceSize"] = state ? state.providerAutoScalingComputeMaxInstanceSize : undefined;
            resourceInputs["providerAutoScalingComputeMinInstanceSize"] = state ? state.providerAutoScalingComputeMinInstanceSize : undefined;
            resourceInputs["providerDiskIops"] = state ? state.providerDiskIops : undefined;
            resourceInputs["providerDiskTypeName"] = state ? state.providerDiskTypeName : undefined;
            resourceInputs["providerEncryptEbsVolume"] = state ? state.providerEncryptEbsVolume : undefined;
            resourceInputs["providerEncryptEbsVolumeFlag"] = state ? state.providerEncryptEbsVolumeFlag : undefined;
            resourceInputs["providerInstanceSizeName"] = state ? state.providerInstanceSizeName : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["providerRegionName"] = state ? state.providerRegionName : undefined;
            resourceInputs["providerVolumeType"] = state ? state.providerVolumeType : undefined;
            resourceInputs["replicationFactor"] = state ? state.replicationFactor : undefined;
            resourceInputs["replicationSpecs"] = state ? state.replicationSpecs : undefined;
            resourceInputs["retainBackupsEnabled"] = state ? state.retainBackupsEnabled : undefined;
            resourceInputs["snapshotBackupPolicies"] = state ? state.snapshotBackupPolicies : undefined;
            resourceInputs["srvAddress"] = state ? state.srvAddress : undefined;
            resourceInputs["stateName"] = state ? state.stateName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terminationProtectionEnabled"] = state ? state.terminationProtectionEnabled : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["versionReleaseSystem"] = state ? state.versionReleaseSystem : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.providerInstanceSizeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerInstanceSizeName'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            resourceInputs["acceptDataRisksAndForceReplicaSetReconfig"] = args ? args.acceptDataRisksAndForceReplicaSetReconfig : undefined;
            resourceInputs["advancedConfiguration"] = args ? args.advancedConfiguration : undefined;
            resourceInputs["autoScalingComputeEnabled"] = args ? args.autoScalingComputeEnabled : undefined;
            resourceInputs["autoScalingComputeScaleDownEnabled"] = args ? args.autoScalingComputeScaleDownEnabled : undefined;
            resourceInputs["autoScalingDiskGbEnabled"] = args ? args.autoScalingDiskGbEnabled : undefined;
            resourceInputs["backingProviderName"] = args ? args.backingProviderName : undefined;
            resourceInputs["backupEnabled"] = args ? args.backupEnabled : undefined;
            resourceInputs["biConnectorConfig"] = args ? args.biConnectorConfig : undefined;
            resourceInputs["cloudBackup"] = args ? args.cloudBackup : undefined;
            resourceInputs["clusterType"] = args ? args.clusterType : undefined;
            resourceInputs["diskSizeGb"] = args ? args.diskSizeGb : undefined;
            resourceInputs["encryptionAtRestProvider"] = args ? args.encryptionAtRestProvider : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["mongoDbMajorVersion"] = args ? args.mongoDbMajorVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numShards"] = args ? args.numShards : undefined;
            resourceInputs["paused"] = args ? args.paused : undefined;
            resourceInputs["pitEnabled"] = args ? args.pitEnabled : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["providerAutoScalingComputeMaxInstanceSize"] = args ? args.providerAutoScalingComputeMaxInstanceSize : undefined;
            resourceInputs["providerAutoScalingComputeMinInstanceSize"] = args ? args.providerAutoScalingComputeMinInstanceSize : undefined;
            resourceInputs["providerDiskIops"] = args ? args.providerDiskIops : undefined;
            resourceInputs["providerDiskTypeName"] = args ? args.providerDiskTypeName : undefined;
            resourceInputs["providerEncryptEbsVolume"] = args ? args.providerEncryptEbsVolume : undefined;
            resourceInputs["providerInstanceSizeName"] = args ? args.providerInstanceSizeName : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["providerRegionName"] = args ? args.providerRegionName : undefined;
            resourceInputs["providerVolumeType"] = args ? args.providerVolumeType : undefined;
            resourceInputs["replicationFactor"] = args ? args.replicationFactor : undefined;
            resourceInputs["replicationSpecs"] = args ? args.replicationSpecs : undefined;
            resourceInputs["retainBackupsEnabled"] = args ? args.retainBackupsEnabled : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["terminationProtectionEnabled"] = args ? args.terminationProtectionEnabled : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["versionReleaseSystem"] = args ? args.versionReleaseSystem : undefined;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["connectionStrings"] = undefined /*out*/;
            resourceInputs["containerId"] = undefined /*out*/;
            resourceInputs["mongoDbVersion"] = undefined /*out*/;
            resourceInputs["mongoUri"] = undefined /*out*/;
            resourceInputs["mongoUriUpdated"] = undefined /*out*/;
            resourceInputs["mongoUriWithOptions"] = undefined /*out*/;
            resourceInputs["providerEncryptEbsVolumeFlag"] = undefined /*out*/;
            resourceInputs["snapshotBackupPolicies"] = undefined /*out*/;
            resourceInputs["srvAddress"] = undefined /*out*/;
            resourceInputs["stateName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Submit this field alongside your topology reconfiguration to request a new regional outage resistant topology
     */
    acceptDataRisksAndForceReplicaSetReconfig?: pulumi.Input<string>;
    advancedConfiguration?: pulumi.Input<inputs.ClusterAdvancedConfiguration>;
    autoScalingComputeEnabled?: pulumi.Input<boolean>;
    autoScalingComputeScaleDownEnabled?: pulumi.Input<boolean>;
    autoScalingDiskGbEnabled?: pulumi.Input<boolean>;
    backingProviderName?: pulumi.Input<string>;
    /**
     * Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
     */
    backupEnabled?: pulumi.Input<boolean>;
    biConnectorConfig?: pulumi.Input<inputs.ClusterBiConnectorConfig>;
    cloudBackup?: pulumi.Input<boolean>;
    clusterId?: pulumi.Input<string>;
    clusterType?: pulumi.Input<string>;
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.ClusterConnectionString>[]>;
    containerId?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    encryptionAtRestProvider?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    labels?: pulumi.Input<pulumi.Input<inputs.ClusterLabel>[]>;
    mongoDbMajorVersion?: pulumi.Input<string>;
    mongoDbVersion?: pulumi.Input<string>;
    mongoUri?: pulumi.Input<string>;
    mongoUriUpdated?: pulumi.Input<string>;
    mongoUriWithOptions?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numShards?: pulumi.Input<number>;
    paused?: pulumi.Input<boolean>;
    pitEnabled?: pulumi.Input<boolean>;
    projectId?: pulumi.Input<string>;
    providerAutoScalingComputeMaxInstanceSize?: pulumi.Input<string>;
    providerAutoScalingComputeMinInstanceSize?: pulumi.Input<string>;
    providerDiskIops?: pulumi.Input<number>;
    providerDiskTypeName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    providerEncryptEbsVolume?: pulumi.Input<boolean>;
    providerEncryptEbsVolumeFlag?: pulumi.Input<boolean>;
    providerInstanceSizeName?: pulumi.Input<string>;
    providerName?: pulumi.Input<string>;
    providerRegionName?: pulumi.Input<string>;
    providerVolumeType?: pulumi.Input<string>;
    replicationFactor?: pulumi.Input<number>;
    replicationSpecs?: pulumi.Input<pulumi.Input<inputs.ClusterReplicationSpec>[]>;
    /**
     * Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
     */
    retainBackupsEnabled?: pulumi.Input<boolean>;
    snapshotBackupPolicies?: pulumi.Input<pulumi.Input<inputs.ClusterSnapshotBackupPolicy>[]>;
    srvAddress?: pulumi.Input<string>;
    stateName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ClusterTag>[]>;
    terminationProtectionEnabled?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.ClusterTimeouts>;
    versionReleaseSystem?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Submit this field alongside your topology reconfiguration to request a new regional outage resistant topology
     */
    acceptDataRisksAndForceReplicaSetReconfig?: pulumi.Input<string>;
    advancedConfiguration?: pulumi.Input<inputs.ClusterAdvancedConfiguration>;
    autoScalingComputeEnabled?: pulumi.Input<boolean>;
    autoScalingComputeScaleDownEnabled?: pulumi.Input<boolean>;
    autoScalingDiskGbEnabled?: pulumi.Input<boolean>;
    backingProviderName?: pulumi.Input<string>;
    /**
     * Clusters running MongoDB FCV 4.2 or later and any new Atlas clusters of any type do not support this parameter
     */
    backupEnabled?: pulumi.Input<boolean>;
    biConnectorConfig?: pulumi.Input<inputs.ClusterBiConnectorConfig>;
    cloudBackup?: pulumi.Input<boolean>;
    clusterType?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    encryptionAtRestProvider?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    labels?: pulumi.Input<pulumi.Input<inputs.ClusterLabel>[]>;
    mongoDbMajorVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numShards?: pulumi.Input<number>;
    paused?: pulumi.Input<boolean>;
    pitEnabled?: pulumi.Input<boolean>;
    projectId: pulumi.Input<string>;
    providerAutoScalingComputeMaxInstanceSize?: pulumi.Input<string>;
    providerAutoScalingComputeMinInstanceSize?: pulumi.Input<string>;
    providerDiskIops?: pulumi.Input<number>;
    providerDiskTypeName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    providerEncryptEbsVolume?: pulumi.Input<boolean>;
    providerInstanceSizeName: pulumi.Input<string>;
    providerName: pulumi.Input<string>;
    providerRegionName?: pulumi.Input<string>;
    providerVolumeType?: pulumi.Input<string>;
    replicationFactor?: pulumi.Input<number>;
    replicationSpecs?: pulumi.Input<pulumi.Input<inputs.ClusterReplicationSpec>[]>;
    /**
     * Flag that indicates whether to retain backup snapshots for the deleted dedicated cluster
     */
    retainBackupsEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.ClusterTag>[]>;
    terminationProtectionEnabled?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.ClusterTimeouts>;
    versionReleaseSystem?: pulumi.Input<string>;
}
