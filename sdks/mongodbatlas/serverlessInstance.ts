// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ServerlessInstance extends pulumi.CustomResource {
    /**
     * Get an existing ServerlessInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerlessInstanceState, opts?: pulumi.CustomResourceOptions): ServerlessInstance {
        return new ServerlessInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/serverlessInstance:ServerlessInstance';

    /**
     * Returns true if the given object is an instance of ServerlessInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerlessInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerlessInstance.__pulumiType;
    }

    public readonly autoIndexing!: pulumi.Output<boolean>;
    public /*out*/ readonly connectionStringsPrivateEndpointSrvs!: pulumi.Output<string[]>;
    public /*out*/ readonly connectionStringsStandardSrv!: pulumi.Output<string>;
    public readonly continuousBackupEnabled!: pulumi.Output<boolean>;
    public /*out*/ readonly createDate!: pulumi.Output<string>;
    public readonly links!: pulumi.Output<outputs.ServerlessInstanceLink[] | undefined>;
    public /*out*/ readonly mongoDbVersion!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly providerSettingsBackingProviderName!: pulumi.Output<string>;
    public readonly providerSettingsProviderName!: pulumi.Output<string>;
    public readonly providerSettingsRegionName!: pulumi.Output<string>;
    public readonly stateName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ServerlessInstanceTag[] | undefined>;
    public readonly terminationProtectionEnabled!: pulumi.Output<boolean>;

    /**
     * Create a ServerlessInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerlessInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerlessInstanceArgs | ServerlessInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerlessInstanceState | undefined;
            resourceInputs["autoIndexing"] = state ? state.autoIndexing : undefined;
            resourceInputs["connectionStringsPrivateEndpointSrvs"] = state ? state.connectionStringsPrivateEndpointSrvs : undefined;
            resourceInputs["connectionStringsStandardSrv"] = state ? state.connectionStringsStandardSrv : undefined;
            resourceInputs["continuousBackupEnabled"] = state ? state.continuousBackupEnabled : undefined;
            resourceInputs["createDate"] = state ? state.createDate : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["mongoDbVersion"] = state ? state.mongoDbVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["providerSettingsBackingProviderName"] = state ? state.providerSettingsBackingProviderName : undefined;
            resourceInputs["providerSettingsProviderName"] = state ? state.providerSettingsProviderName : undefined;
            resourceInputs["providerSettingsRegionName"] = state ? state.providerSettingsRegionName : undefined;
            resourceInputs["stateName"] = state ? state.stateName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terminationProtectionEnabled"] = state ? state.terminationProtectionEnabled : undefined;
        } else {
            const args = argsOrState as ServerlessInstanceArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.providerSettingsBackingProviderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerSettingsBackingProviderName'");
            }
            if ((!args || args.providerSettingsProviderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerSettingsProviderName'");
            }
            if ((!args || args.providerSettingsRegionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerSettingsRegionName'");
            }
            resourceInputs["autoIndexing"] = args ? args.autoIndexing : undefined;
            resourceInputs["continuousBackupEnabled"] = args ? args.continuousBackupEnabled : undefined;
            resourceInputs["links"] = args ? args.links : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["providerSettingsBackingProviderName"] = args ? args.providerSettingsBackingProviderName : undefined;
            resourceInputs["providerSettingsProviderName"] = args ? args.providerSettingsProviderName : undefined;
            resourceInputs["providerSettingsRegionName"] = args ? args.providerSettingsRegionName : undefined;
            resourceInputs["stateName"] = args ? args.stateName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["terminationProtectionEnabled"] = args ? args.terminationProtectionEnabled : undefined;
            resourceInputs["connectionStringsPrivateEndpointSrvs"] = undefined /*out*/;
            resourceInputs["connectionStringsStandardSrv"] = undefined /*out*/;
            resourceInputs["createDate"] = undefined /*out*/;
            resourceInputs["mongoDbVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerlessInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServerlessInstance resources.
 */
export interface ServerlessInstanceState {
    autoIndexing?: pulumi.Input<boolean>;
    connectionStringsPrivateEndpointSrvs?: pulumi.Input<pulumi.Input<string>[]>;
    connectionStringsStandardSrv?: pulumi.Input<string>;
    continuousBackupEnabled?: pulumi.Input<boolean>;
    createDate?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.ServerlessInstanceLink>[]>;
    mongoDbVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    providerSettingsBackingProviderName?: pulumi.Input<string>;
    providerSettingsProviderName?: pulumi.Input<string>;
    providerSettingsRegionName?: pulumi.Input<string>;
    stateName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ServerlessInstanceTag>[]>;
    terminationProtectionEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ServerlessInstance resource.
 */
export interface ServerlessInstanceArgs {
    autoIndexing?: pulumi.Input<boolean>;
    continuousBackupEnabled?: pulumi.Input<boolean>;
    links?: pulumi.Input<pulumi.Input<inputs.ServerlessInstanceLink>[]>;
    name?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    providerSettingsBackingProviderName: pulumi.Input<string>;
    providerSettingsProviderName: pulumi.Input<string>;
    providerSettingsRegionName: pulumi.Input<string>;
    stateName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ServerlessInstanceTag>[]>;
    terminationProtectionEnabled?: pulumi.Input<boolean>;
}
