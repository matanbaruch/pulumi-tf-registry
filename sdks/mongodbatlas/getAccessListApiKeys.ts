// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccessListApiKeys(args: GetAccessListApiKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessListApiKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getAccessListApiKeys:getAccessListApiKeys", {
        "apiKeyId": args.apiKeyId,
        "id": args.id,
        "itemsPerPage": args.itemsPerPage,
        "orgId": args.orgId,
        "pageNum": args.pageNum,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessListApiKeys.
 */
export interface GetAccessListApiKeysArgs {
    apiKeyId: string;
    id?: string;
    itemsPerPage?: number;
    orgId: string;
    pageNum?: number;
}

/**
 * A collection of values returned by getAccessListApiKeys.
 */
export interface GetAccessListApiKeysResult {
    readonly apiKeyId: string;
    readonly id: string;
    readonly itemsPerPage?: number;
    readonly orgId: string;
    readonly pageNum?: number;
    readonly results: outputs.GetAccessListApiKeysResult[];
}
export function getAccessListApiKeysOutput(args: GetAccessListApiKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessListApiKeysResult> {
    return pulumi.output(args).apply((a: any) => getAccessListApiKeys(a, opts))
}

/**
 * A collection of arguments for invoking getAccessListApiKeys.
 */
export interface GetAccessListApiKeysOutputArgs {
    apiKeyId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    itemsPerPage?: pulumi.Input<number>;
    orgId: pulumi.Input<string>;
    pageNum?: pulumi.Input<number>;
}
