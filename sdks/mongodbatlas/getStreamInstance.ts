// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStreamInstance(args: GetStreamInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getStreamInstance:getStreamInstance", {
        "instanceName": args.instanceName,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStreamInstance.
 */
export interface GetStreamInstanceArgs {
    instanceName: string;
    projectId: string;
}

/**
 * A collection of values returned by getStreamInstance.
 */
export interface GetStreamInstanceResult {
    readonly dataProcessRegion: outputs.GetStreamInstanceDataProcessRegion;
    readonly hostnames: string[];
    readonly id: string;
    readonly instanceName: string;
    readonly projectId: string;
    readonly streamConfig: outputs.GetStreamInstanceStreamConfig;
}
export function getStreamInstanceOutput(args: GetStreamInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamInstanceResult> {
    return pulumi.output(args).apply((a: any) => getStreamInstance(a, opts))
}

/**
 * A collection of arguments for invoking getStreamInstance.
 */
export interface GetStreamInstanceOutputArgs {
    instanceName: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
