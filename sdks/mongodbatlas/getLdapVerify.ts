// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLdapVerify(args: GetLdapVerifyArgs, opts?: pulumi.InvokeOptions): Promise<GetLdapVerifyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getLdapVerify:getLdapVerify", {
        "id": args.id,
        "projectId": args.projectId,
        "requestId": args.requestId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLdapVerify.
 */
export interface GetLdapVerifyArgs {
    id?: string;
    projectId: string;
    requestId: string;
}

/**
 * A collection of values returned by getLdapVerify.
 */
export interface GetLdapVerifyResult {
    readonly bindUsername: string;
    readonly hostname: string;
    readonly id: string;
    readonly links: outputs.GetLdapVerifyLink[];
    readonly port: number;
    readonly projectId: string;
    readonly requestId: string;
    readonly status: string;
    readonly validations: outputs.GetLdapVerifyValidation[];
}
export function getLdapVerifyOutput(args: GetLdapVerifyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLdapVerifyResult> {
    return pulumi.output(args).apply((a: any) => getLdapVerify(a, opts))
}

/**
 * A collection of arguments for invoking getLdapVerify.
 */
export interface GetLdapVerifyOutputArgs {
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    requestId: pulumi.Input<string>;
}
