// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudBackupSnapshot(args: GetCloudBackupSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBackupSnapshotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSnapshot:getCloudBackupSnapshot", {
        "clusterName": args.clusterName,
        "id": args.id,
        "projectId": args.projectId,
        "snapshotId": args.snapshotId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshot.
 */
export interface GetCloudBackupSnapshotArgs {
    clusterName: string;
    id?: string;
    projectId: string;
    snapshotId: string;
}

/**
 * A collection of values returned by getCloudBackupSnapshot.
 */
export interface GetCloudBackupSnapshotResult {
    readonly cloudProvider: string;
    readonly clusterName: string;
    readonly createdAt: string;
    readonly description: string;
    readonly expiresAt: string;
    readonly id: string;
    readonly masterKeyUuid: string;
    readonly members: outputs.GetCloudBackupSnapshotMember[];
    readonly mongodVersion: string;
    readonly projectId: string;
    readonly replicaSetName: string;
    readonly snapshotId: string;
    readonly snapshotIds: string[];
    readonly snapshotType: string;
    readonly status: string;
    readonly storageSizeBytes: number;
    readonly type: string;
}
export function getCloudBackupSnapshotOutput(args: GetCloudBackupSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudBackupSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getCloudBackupSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshot.
 */
export interface GetCloudBackupSnapshotOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    snapshotId: pulumi.Input<string>;
}
