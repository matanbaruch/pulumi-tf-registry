// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPushBasedLogExport(args: GetPushBasedLogExportArgs, opts?: pulumi.InvokeOptions): Promise<GetPushBasedLogExportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getPushBasedLogExport:getPushBasedLogExport", {
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPushBasedLogExport.
 */
export interface GetPushBasedLogExportArgs {
    projectId: string;
}

/**
 * A collection of values returned by getPushBasedLogExport.
 */
export interface GetPushBasedLogExportResult {
    readonly bucketName: string;
    readonly createDate: string;
    readonly iamRoleId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly prefixPath: string;
    readonly projectId: string;
    readonly state: string;
}
export function getPushBasedLogExportOutput(args: GetPushBasedLogExportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPushBasedLogExportResult> {
    return pulumi.output(args).apply((a: any) => getPushBasedLogExport(a, opts))
}

/**
 * A collection of arguments for invoking getPushBasedLogExport.
 */
export interface GetPushBasedLogExportOutputArgs {
    projectId: pulumi.Input<string>;
}
