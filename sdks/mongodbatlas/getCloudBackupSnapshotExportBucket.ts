// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudBackupSnapshotExportBucket(args: GetCloudBackupSnapshotExportBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudBackupSnapshotExportBucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getCloudBackupSnapshotExportBucket:getCloudBackupSnapshotExportBucket", {
        "exportBucketId": args.exportBucketId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshotExportBucket.
 */
export interface GetCloudBackupSnapshotExportBucketArgs {
    exportBucketId: string;
    projectId: string;
}

/**
 * A collection of values returned by getCloudBackupSnapshotExportBucket.
 */
export interface GetCloudBackupSnapshotExportBucketResult {
    readonly bucketName: string;
    readonly cloudProvider: string;
    readonly exportBucketId: string;
    readonly iamRoleId: string;
    readonly id: string;
    readonly projectId: string;
    readonly roleId: string;
    readonly serviceUrl: string;
    readonly tenantId: string;
}
export function getCloudBackupSnapshotExportBucketOutput(args: GetCloudBackupSnapshotExportBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudBackupSnapshotExportBucketResult> {
    return pulumi.output(args).apply((a: any) => getCloudBackupSnapshotExportBucket(a, opts))
}

/**
 * A collection of arguments for invoking getCloudBackupSnapshotExportBucket.
 */
export interface GetCloudBackupSnapshotExportBucketOutputArgs {
    exportBucketId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
