// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFederatedSettings(args: GetFederatedSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetFederatedSettingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getFederatedSettings:getFederatedSettings", {
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFederatedSettings.
 */
export interface GetFederatedSettingsArgs {
    orgId: string;
}

/**
 * A collection of values returned by getFederatedSettings.
 */
export interface GetFederatedSettingsResult {
    readonly federatedDomains: string[];
    readonly hasRoleMappings: boolean;
    readonly id: string;
    readonly identityProviderId: string;
    readonly identityProviderStatus: string;
    readonly orgId: string;
}
export function getFederatedSettingsOutput(args: GetFederatedSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFederatedSettingsResult> {
    return pulumi.output(args).apply((a: any) => getFederatedSettings(a, opts))
}

/**
 * A collection of arguments for invoking getFederatedSettings.
 */
export interface GetFederatedSettingsOutputArgs {
    orgId: pulumi.Input<string>;
}
