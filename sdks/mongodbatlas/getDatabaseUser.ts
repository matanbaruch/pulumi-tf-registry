// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseUser(args: GetDatabaseUserArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getDatabaseUser:getDatabaseUser", {
        "authDatabaseName": args.authDatabaseName,
        "projectId": args.projectId,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseUser.
 */
export interface GetDatabaseUserArgs {
    authDatabaseName: string;
    projectId: string;
    username: string;
}

/**
 * A collection of values returned by getDatabaseUser.
 */
export interface GetDatabaseUserResult {
    readonly authDatabaseName: string;
    readonly awsIamType: string;
    readonly id: string;
    readonly labels: outputs.GetDatabaseUserLabel[];
    readonly ldapAuthType: string;
    readonly oidcAuthType: string;
    readonly projectId: string;
    readonly roles: outputs.GetDatabaseUserRole[];
    readonly scopes: outputs.GetDatabaseUserScope[];
    readonly username: string;
    readonly x509Type: string;
}
export function getDatabaseUserOutput(args: GetDatabaseUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseUserResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseUser(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseUser.
 */
export interface GetDatabaseUserOutputArgs {
    authDatabaseName: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
