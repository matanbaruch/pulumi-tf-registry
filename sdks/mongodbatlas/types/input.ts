// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AdvancedClusterAdvancedConfiguration {
    /**
     * @deprecated Deprecated
     */
    defaultReadConcern?: pulumi.Input<string>;
    defaultWriteConcern?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    failIndexKeyTooLong?: pulumi.Input<boolean>;
    javascriptEnabled?: pulumi.Input<boolean>;
    minimumEnabledTlsProtocol?: pulumi.Input<string>;
    noTableScan?: pulumi.Input<boolean>;
    oplogMinRetentionHours?: pulumi.Input<number>;
    oplogSizeMb?: pulumi.Input<number>;
    sampleRefreshIntervalBiConnector?: pulumi.Input<number>;
    sampleSizeBiConnector?: pulumi.Input<number>;
    transactionLifetimeLimitSeconds?: pulumi.Input<number>;
}

export interface AdvancedClusterBiConnectorConfig {
    enabled?: pulumi.Input<boolean>;
    readPreference?: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionString {
    private: pulumi.Input<string>;
    privateEndpoints: pulumi.Input<pulumi.Input<inputs.AdvancedClusterConnectionStringPrivateEndpoint>[]>;
    privateSrv: pulumi.Input<string>;
    standard: pulumi.Input<string>;
    standardSrv: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionStringPrivateEndpoint {
    connectionString: pulumi.Input<string>;
    endpoints: pulumi.Input<pulumi.Input<inputs.AdvancedClusterConnectionStringPrivateEndpointEndpoint>[]>;
    srvConnectionString: pulumi.Input<string>;
    srvShardOptimizedConnectionString: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AdvancedClusterConnectionStringPrivateEndpointEndpoint {
    endpointId: pulumi.Input<string>;
    providerName: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface AdvancedClusterLabel {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpec {
    containerId?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    externalId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    id?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    numShards?: pulumi.Input<number>;
    regionConfigs: pulumi.Input<pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfig>[]>;
    zoneId?: pulumi.Input<string>;
    zoneName?: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpecRegionConfig {
    analyticsAutoScaling?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling>;
    analyticsSpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs>;
    autoScaling?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigAutoScaling>;
    backingProviderName?: pulumi.Input<string>;
    electableSpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigElectableSpecs>;
    priority: pulumi.Input<number>;
    providerName: pulumi.Input<string>;
    readOnlySpecs?: pulumi.Input<inputs.AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs>;
    regionName: pulumi.Input<string>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAnalyticsAutoScaling {
    computeEnabled?: pulumi.Input<boolean>;
    computeMaxInstanceSize?: pulumi.Input<string>;
    computeMinInstanceSize?: pulumi.Input<string>;
    computeScaleDownEnabled?: pulumi.Input<boolean>;
    diskGbEnabled?: pulumi.Input<boolean>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAnalyticsSpecs {
    diskIops?: pulumi.Input<number>;
    diskSizeGb?: pulumi.Input<number>;
    ebsVolumeType?: pulumi.Input<string>;
    instanceSize: pulumi.Input<string>;
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterReplicationSpecRegionConfigAutoScaling {
    computeEnabled?: pulumi.Input<boolean>;
    computeMaxInstanceSize?: pulumi.Input<string>;
    computeMinInstanceSize?: pulumi.Input<string>;
    computeScaleDownEnabled?: pulumi.Input<boolean>;
    diskGbEnabled?: pulumi.Input<boolean>;
}

export interface AdvancedClusterReplicationSpecRegionConfigElectableSpecs {
    diskIops?: pulumi.Input<number>;
    diskSizeGb?: pulumi.Input<number>;
    ebsVolumeType?: pulumi.Input<string>;
    instanceSize: pulumi.Input<string>;
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterReplicationSpecRegionConfigReadOnlySpecs {
    diskIops?: pulumi.Input<number>;
    diskSizeGb?: pulumi.Input<number>;
    ebsVolumeType?: pulumi.Input<string>;
    instanceSize: pulumi.Input<string>;
    nodeCount?: pulumi.Input<number>;
}

export interface AdvancedClusterTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AdvancedClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AlertConfigurationMatcher {
    fieldName: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AlertConfigurationMetricThresholdConfig {
    metricName: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    units?: pulumi.Input<string>;
}

export interface AlertConfigurationNotification {
    apiToken?: pulumi.Input<string>;
    channelName?: pulumi.Input<string>;
    datadogApiKey?: pulumi.Input<string>;
    datadogRegion?: pulumi.Input<string>;
    delayMin?: pulumi.Input<number>;
    emailAddress?: pulumi.Input<string>;
    emailEnabled?: pulumi.Input<boolean>;
    integrationId?: pulumi.Input<string>;
    intervalMin?: pulumi.Input<number>;
    microsoftTeamsWebhookUrl?: pulumi.Input<string>;
    mobileNumber?: pulumi.Input<string>;
    notifierId?: pulumi.Input<string>;
    opsGenieApiKey?: pulumi.Input<string>;
    opsGenieRegion?: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    serviceKey?: pulumi.Input<string>;
    smsEnabled?: pulumi.Input<boolean>;
    teamId?: pulumi.Input<string>;
    teamName?: pulumi.Input<string>;
    typeName: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    victorOpsApiKey?: pulumi.Input<string>;
    victorOpsRoutingKey?: pulumi.Input<string>;
    webhookSecret?: pulumi.Input<string>;
    webhookUrl?: pulumi.Input<string>;
}

export interface AlertConfigurationThresholdConfig {
    operator?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    units?: pulumi.Input<string>;
}

export interface BackupCompliancePolicyOnDemandPolicyItem {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemDaily {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemHourly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemMonthly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemWeekly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface BackupCompliancePolicyPolicyItemYearly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupScheduleCopySetting {
    cloudProvider?: pulumi.Input<string>;
    frequencies?: pulumi.Input<pulumi.Input<string>[]>;
    regionName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    replicationSpecId?: pulumi.Input<string>;
    shouldCopyOplogs?: pulumi.Input<boolean>;
    zoneId?: pulumi.Input<string>;
}

export interface CloudBackupScheduleExport {
    exportBucketId?: pulumi.Input<string>;
    frequencyType?: pulumi.Input<string>;
}

export interface CloudBackupSchedulePolicyItemDaily {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemHourly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemMonthly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemWeekly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSchedulePolicyItemYearly {
    frequencyInterval: pulumi.Input<number>;
    frequencyType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface CloudBackupSnapshotExportJobComponent {
    exportId: pulumi.Input<string>;
    replicaSetName: pulumi.Input<string>;
}

export interface CloudBackupSnapshotExportJobCustomData {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudBackupSnapshotMember {
    cloudProvider: pulumi.Input<string>;
    id: pulumi.Input<string>;
    replicaSetName: pulumi.Input<string>;
}

export interface CloudBackupSnapshotRestoreJobDeliveryTypeConfig {
    automated?: pulumi.Input<boolean>;
    download?: pulumi.Input<boolean>;
    oplogInc?: pulumi.Input<number>;
    oplogTs?: pulumi.Input<number>;
    pointInTime?: pulumi.Input<boolean>;
    pointInTimeUtcSeconds?: pulumi.Input<number>;
    targetClusterName?: pulumi.Input<string>;
    targetProjectId?: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationAws {
    iamAssumedRoleArn: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationAzure {
    atlasAzureAppId: pulumi.Input<string>;
    servicePrincipalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface CloudProviderAccessAuthorizationFeatureUsage {
    featureId: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    featureType: pulumi.Input<string>;
}

export interface CloudProviderAccessSetupAwsConfig {
    atlasAssumedRoleExternalId: pulumi.Input<string>;
    atlasAwsAccountArn: pulumi.Input<string>;
}

export interface CloudProviderAccessSetupAzureConfig {
    atlasAzureAppId: pulumi.Input<string>;
    servicePrincipalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface ClusterAdvancedConfiguration {
    /**
     * @deprecated Deprecated
     */
    defaultReadConcern?: pulumi.Input<string>;
    defaultWriteConcern?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    failIndexKeyTooLong?: pulumi.Input<boolean>;
    javascriptEnabled?: pulumi.Input<boolean>;
    minimumEnabledTlsProtocol?: pulumi.Input<string>;
    noTableScan?: pulumi.Input<boolean>;
    oplogMinRetentionHours?: pulumi.Input<number>;
    oplogSizeMb?: pulumi.Input<number>;
    sampleRefreshIntervalBiConnector?: pulumi.Input<number>;
    sampleSizeBiConnector?: pulumi.Input<number>;
    transactionLifetimeLimitSeconds?: pulumi.Input<number>;
}

export interface ClusterBiConnectorConfig {
    enabled?: pulumi.Input<boolean>;
    readPreference?: pulumi.Input<string>;
}

export interface ClusterConnectionString {
    private: pulumi.Input<string>;
    privateEndpoints: pulumi.Input<pulumi.Input<inputs.ClusterConnectionStringPrivateEndpoint>[]>;
    privateSrv: pulumi.Input<string>;
    standard: pulumi.Input<string>;
    standardSrv: pulumi.Input<string>;
}

export interface ClusterConnectionStringPrivateEndpoint {
    connectionString: pulumi.Input<string>;
    endpoints: pulumi.Input<pulumi.Input<inputs.ClusterConnectionStringPrivateEndpointEndpoint>[]>;
    srvConnectionString: pulumi.Input<string>;
    srvShardOptimizedConnectionString: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ClusterConnectionStringPrivateEndpointEndpoint {
    endpointId: pulumi.Input<string>;
    providerName: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface ClusterLabel {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ClusterOutageSimulationOutageFilter {
    cloudProvider: pulumi.Input<string>;
    regionName: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ClusterOutageSimulationTimeouts {
    delete?: pulumi.Input<string>;
}

export interface ClusterReplicationSpec {
    id?: pulumi.Input<string>;
    numShards: pulumi.Input<number>;
    regionsConfigs?: pulumi.Input<pulumi.Input<inputs.ClusterReplicationSpecRegionsConfig>[]>;
    zoneName?: pulumi.Input<string>;
}

export interface ClusterReplicationSpecRegionsConfig {
    analyticsNodes?: pulumi.Input<number>;
    electableNodes?: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
    readOnlyNodes?: pulumi.Input<number>;
    regionName: pulumi.Input<string>;
}

export interface ClusterSnapshotBackupPolicy {
    clusterId: pulumi.Input<string>;
    clusterName: pulumi.Input<string>;
    nextSnapshot: pulumi.Input<string>;
    policies: pulumi.Input<pulumi.Input<inputs.ClusterSnapshotBackupPolicyPolicy>[]>;
    referenceHourOfDay: pulumi.Input<number>;
    referenceMinuteOfHour: pulumi.Input<number>;
    restoreWindowDays: pulumi.Input<number>;
    updateSnapshots: pulumi.Input<boolean>;
}

export interface ClusterSnapshotBackupPolicyPolicy {
    id: pulumi.Input<string>;
    policyItems: pulumi.Input<pulumi.Input<inputs.ClusterSnapshotBackupPolicyPolicyPolicyItem>[]>;
}

export interface ClusterSnapshotBackupPolicyPolicyPolicyItem {
    frequencyInterval: pulumi.Input<number>;
    frequencyType: pulumi.Input<string>;
    id: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface ClusterTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CustomDbRoleAction {
    action: pulumi.Input<string>;
    resources: pulumi.Input<pulumi.Input<inputs.CustomDbRoleActionResource>[]>;
}

export interface CustomDbRoleActionResource {
    cluster?: pulumi.Input<boolean>;
    collectionName?: pulumi.Input<string>;
    databaseName?: pulumi.Input<string>;
}

export interface CustomDbRoleInheritedRole {
    databaseName: pulumi.Input<string>;
    roleName: pulumi.Input<string>;
}

export interface DataLakePipelineIngestionSchedule {
    frequencyInterval: pulumi.Input<number>;
    frequencyType: pulumi.Input<string>;
    id: pulumi.Input<string>;
    retentionUnit: pulumi.Input<string>;
    retentionValue: pulumi.Input<number>;
}

export interface DataLakePipelineSink {
    partitionFields?: pulumi.Input<pulumi.Input<inputs.DataLakePipelineSinkPartitionField>[]>;
    provider?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataLakePipelineSinkPartitionField {
    fieldName: pulumi.Input<string>;
    order: pulumi.Input<number>;
}

export interface DataLakePipelineSnapshot {
    copyRegion: pulumi.Input<string>;
    createdAt: pulumi.Input<string>;
    expiresAt: pulumi.Input<string>;
    frequencyYype: pulumi.Input<string>;
    id: pulumi.Input<string>;
    masterKey: pulumi.Input<string>;
    mongodVersion: pulumi.Input<string>;
    policies: pulumi.Input<pulumi.Input<string>[]>;
    provider: pulumi.Input<string>;
    replicaSetName: pulumi.Input<string>;
    size: pulumi.Input<number>;
    snapshotType: pulumi.Input<string>;
    status: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataLakePipelineSource {
    clusterName?: pulumi.Input<string>;
    collectionName?: pulumi.Input<string>;
    databaseName?: pulumi.Input<string>;
    policyItemId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataLakePipelineTransformation {
    field?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DatabaseUserLabel {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DatabaseUserRole {
    collectionName?: pulumi.Input<string>;
    databaseName: pulumi.Input<string>;
    roleName: pulumi.Input<string>;
}

export interface DatabaseUserScope {
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface EncryptionAtRestAwsKmsConfig {
    accessKeyId?: pulumi.Input<string>;
    customerMasterKeyId?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    region?: pulumi.Input<string>;
    roleId?: pulumi.Input<string>;
    secretAccessKey?: pulumi.Input<string>;
}

export interface EncryptionAtRestAzureKeyVaultConfig {
    azureEnvironment?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    keyIdentifier?: pulumi.Input<string>;
    keyVaultName?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface EncryptionAtRestGoogleCloudKmsConfig {
    enabled?: pulumi.Input<boolean>;
    keyVersionResourceId?: pulumi.Input<string>;
    serviceAccountKey?: pulumi.Input<string>;
}

export interface EventTriggerEventProcessors {
    awsEventbridge?: pulumi.Input<inputs.EventTriggerEventProcessorsAwsEventbridge>;
}

export interface EventTriggerEventProcessorsAwsEventbridge {
    configAccountId?: pulumi.Input<string>;
    configRegion?: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceCloudProviderConfig {
    aws: pulumi.Input<inputs.FederatedDatabaseInstanceCloudProviderConfigAws>;
}

export interface FederatedDatabaseInstanceCloudProviderConfigAws {
    externalId?: pulumi.Input<string>;
    iamAssumedRoleArn?: pulumi.Input<string>;
    iamUserArn?: pulumi.Input<string>;
    roleId: pulumi.Input<string>;
    testS3Bucket: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceDataProcessRegion {
    cloudProvider: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceStorageDatabase {
    collections?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageDatabaseCollection>[]>;
    maxWildcardCollections?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    views?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageDatabaseView>[]>;
}

export interface FederatedDatabaseInstanceStorageDatabaseCollection {
    dataSources?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageDatabaseCollectionDataSource>[]>;
    name?: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceStorageDatabaseCollectionDataSource {
    allowInsecure?: pulumi.Input<boolean>;
    collection?: pulumi.Input<string>;
    collectionRegex?: pulumi.Input<string>;
    database?: pulumi.Input<string>;
    databaseRegex?: pulumi.Input<string>;
    datasetName?: pulumi.Input<string>;
    defaultFormat?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    provenanceFieldName?: pulumi.Input<string>;
    storeName?: pulumi.Input<string>;
    urls?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FederatedDatabaseInstanceStorageDatabaseView {
    name?: pulumi.Input<string>;
    pipeline?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
}

export interface FederatedDatabaseInstanceStorageStore {
    additionalStorageClasses?: pulumi.Input<pulumi.Input<string>[]>;
    allowInsecure?: pulumi.Input<boolean>;
    bucket?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    clusterId?: pulumi.Input<string>;
    clusterName?: pulumi.Input<string>;
    defaultFormat?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    includeTags?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    provider?: pulumi.Input<string>;
    public?: pulumi.Input<string>;
    readPreference?: pulumi.Input<inputs.FederatedDatabaseInstanceStorageStoreReadPreference>;
    region?: pulumi.Input<string>;
    urls?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FederatedDatabaseInstanceStorageStoreReadPreference {
    maxStalenessSeconds?: pulumi.Input<number>;
    mode?: pulumi.Input<string>;
    tagSets?: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet>[]>;
}

export interface FederatedDatabaseInstanceStorageStoreReadPreferenceTagSet {
    tags: pulumi.Input<pulumi.Input<inputs.FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag>[]>;
}

export interface FederatedDatabaseInstanceStorageStoreReadPreferenceTagSetTag {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface FederatedSettingsOrgConfigUserConflict {
    emailAddress: pulumi.Input<string>;
    federationSettingsId: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}

export interface FederatedSettingsOrgRoleMappingRoleAssignment {
    groupId?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetAlertConfigurationOutput {
    label?: string;
    type: string;
    value?: string;
}

export interface GetAlertConfigurationOutputArgs {
    label?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetAlertConfigurationsListOption {
    includeCount?: boolean;
    itemsPerPage?: number;
    pageNum?: number;
}

export interface GetAlertConfigurationsListOptionArgs {
    includeCount?: pulumi.Input<boolean>;
    itemsPerPage?: pulumi.Input<number>;
    pageNum?: pulumi.Input<number>;
}

export interface GetCloudProviderAccessSetupAzureConfig {
    atlasAzureAppId?: string;
    servicePrincipalId?: string;
    tenantId?: string;
}

export interface GetCloudProviderAccessSetupAzureConfigArgs {
    atlasAzureAppId?: pulumi.Input<string>;
    servicePrincipalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface GetCustomDbRoleInheritedRole {
    databaseName?: string;
    roleName?: string;
}

export interface GetCustomDbRoleInheritedRoleArgs {
    databaseName?: pulumi.Input<string>;
    roleName?: pulumi.Input<string>;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfig {
    aws?: inputs.GetFederatedDatabaseInstanceCloudProviderConfigAws;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigArgs {
    aws?: pulumi.Input<inputs.GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs>;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigAws {
    externalId?: string;
    iamAssumedRoleArn?: string;
    iamUserArn?: string;
    roleId?: string;
    testS3Bucket?: string;
}

export interface GetFederatedDatabaseInstanceCloudProviderConfigAwsArgs {
    externalId?: pulumi.Input<string>;
    iamAssumedRoleArn?: pulumi.Input<string>;
    iamUserArn?: pulumi.Input<string>;
    roleId?: pulumi.Input<string>;
    testS3Bucket?: pulumi.Input<string>;
}

export interface GetGlobalClusterConfigManagedNamespace {
    collection: string;
    customShardKey: string;
    db: string;
    isCustomShardKeyHashed?: boolean;
    isShardKeyUnique?: boolean;
}

export interface GetGlobalClusterConfigManagedNamespaceArgs {
    collection: pulumi.Input<string>;
    customShardKey: pulumi.Input<string>;
    db: pulumi.Input<string>;
    isCustomShardKeyHashed?: pulumi.Input<boolean>;
    isShardKeyUnique?: pulumi.Input<boolean>;
}

export interface GetServerlessInstanceLink {
    href?: string;
    rel?: string;
}

export interface GetServerlessInstanceLinkArgs {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface GlobalClusterConfigCustomZoneMapping {
    location?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}

export interface GlobalClusterConfigManagedNamespace {
    collection: pulumi.Input<string>;
    customShardKey: pulumi.Input<string>;
    db: pulumi.Input<string>;
    isCustomShardKeyHashed?: pulumi.Input<boolean>;
    isShardKeyUnique?: pulumi.Input<boolean>;
}

export interface LdapConfigurationUserToDnMapping {
    ldapQuery?: pulumi.Input<string>;
    match?: pulumi.Input<string>;
    substitution?: pulumi.Input<string>;
}

export interface LdapVerifyLink {
    href: pulumi.Input<string>;
    rel: pulumi.Input<string>;
}

export interface LdapVerifyValidation {
    status: pulumi.Input<string>;
    validationType: pulumi.Input<string>;
}

export interface OnlineArchiveCriteria {
    dateField?: pulumi.Input<string>;
    dateFormat?: pulumi.Input<string>;
    expireAfterDays?: pulumi.Input<number>;
    query?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface OnlineArchiveDataExpirationRule {
    expireAfterDays: pulumi.Input<number>;
}

export interface OnlineArchiveDataProcessRegion {
    cloudProvider?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface OnlineArchivePartitionField {
    fieldName: pulumi.Input<string>;
    fieldType?: pulumi.Input<string>;
    order: pulumi.Input<number>;
}

export interface OnlineArchiveSchedule {
    dayOfMonth?: pulumi.Input<number>;
    dayOfWeek?: pulumi.Input<number>;
    endHour?: pulumi.Input<number>;
    endMinute?: pulumi.Input<number>;
    startHour?: pulumi.Input<number>;
    startMinute?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface PrivateEndpointRegionalModeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivatelinkEndpointServerlessTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface PrivatelinkEndpointServiceDataFederationOnlineArchiveTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface PrivatelinkEndpointServiceEndpoint {
    endpointName?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface PrivatelinkEndpointServiceServerlessTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface PrivatelinkEndpointServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface PrivatelinkEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface ProjectApiKeyProjectAssignment {
    projectId: pulumi.Input<string>;
    roleNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectIpAccessListTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
     */
    read?: pulumi.Input<string>;
}

export interface ProjectIpAddresses {
    services?: pulumi.Input<inputs.ProjectIpAddressesServices>;
}

export interface ProjectIpAddressesServices {
    clusters?: pulumi.Input<pulumi.Input<inputs.ProjectIpAddressesServicesCluster>[]>;
}

export interface ProjectIpAddressesServicesCluster {
    clusterName?: pulumi.Input<string>;
    inbounds?: pulumi.Input<pulumi.Input<string>[]>;
    outbounds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProjectLimit {
    currentUsage?: pulumi.Input<number>;
    defaultLimit?: pulumi.Input<number>;
    maximumLimit?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface ProjectTeam {
    roleNames: pulumi.Input<pulumi.Input<string>[]>;
    teamId: pulumi.Input<string>;
}

export interface ProviderAssumeRole {
    /**
     * The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or µs), ms, s, h, or m.
     */
    duration?: pulumi.Input<string>;
    /**
     * A unique identifier that might be required when you assume a role in another account.
     */
    externalId?: pulumi.Input<string>;
    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     */
    policy?: pulumi.Input<string>;
    /**
     * Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     */
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * An identifier for the assumed role session.
     */
    sessionName?: pulumi.Input<string>;
    /**
     * Source identity specified by the principal assuming the role.
     */
    sourceIdentity?: pulumi.Input<string>;
    /**
     * Assume role session tags.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Assume role session tag keys to pass to any subsequent sessions.
     */
    transitiveTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PushBasedLogExportTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface SearchDeploymentSpec {
    /**
     * Hardware specification for the search node instance sizes. The [MongoDB Atlas API](https://www.mongodb.com/docs/atlas/reference/api-resources-spec/#tag/Atlas-Search/operation/createAtlasSearchDeployment) describes the valid values. More details can also be found in the [Search Node Documentation](https://www.mongodb.com/docs/atlas/cluster-config/multi-cloud-distribution/#search-tier).
     */
    instanceSize: pulumi.Input<string>;
    /**
     * Number of search nodes in the cluster.
     */
    nodeCount: pulumi.Input<number>;
}

export interface SearchDeploymentTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    create?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
     */
    delete?: pulumi.Input<string>;
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    update?: pulumi.Input<string>;
}

export interface SearchIndexSynonym {
    analyzer: pulumi.Input<string>;
    name: pulumi.Input<string>;
    sourceCollection: pulumi.Input<string>;
}

export interface SearchIndexTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServerlessInstanceLink {
    href?: pulumi.Input<string>;
    rel?: pulumi.Input<string>;
}

export interface ServerlessInstanceTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface StreamConnectionAuthentication {
    mechanism?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface StreamConnectionDbRoleToExecute {
    role: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamConnectionSecurity {
    brokerPublicCertificate?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
}

export interface StreamInstanceDataProcessRegion {
    cloudProvider: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface StreamInstanceStreamConfig {
    tier?: pulumi.Input<string>;
}

export interface X509AuthenticationDatabaseUserCertificate {
    createdAt: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    id: pulumi.Input<number>;
    notAfter: pulumi.Input<string>;
    subject: pulumi.Input<string>;
}
export namespace config {
}
