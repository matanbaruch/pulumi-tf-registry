// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CustomDbRole extends pulumi.CustomResource {
    /**
     * Get an existing CustomDbRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomDbRoleState, opts?: pulumi.CustomResourceOptions): CustomDbRole {
        return new CustomDbRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/customDbRole:CustomDbRole';

    /**
     * Returns true if the given object is an instance of CustomDbRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomDbRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomDbRole.__pulumiType;
    }

    public readonly actions!: pulumi.Output<outputs.CustomDbRoleAction[] | undefined>;
    public readonly inheritedRoles!: pulumi.Output<outputs.CustomDbRoleInheritedRole[] | undefined>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly roleName!: pulumi.Output<string>;

    /**
     * Create a CustomDbRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomDbRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomDbRoleArgs | CustomDbRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomDbRoleState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["inheritedRoles"] = state ? state.inheritedRoles : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
        } else {
            const args = argsOrState as CustomDbRoleArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.roleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["inheritedRoles"] = args ? args.inheritedRoles : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomDbRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CustomDbRole resources.
 */
export interface CustomDbRoleState {
    actions?: pulumi.Input<pulumi.Input<inputs.CustomDbRoleAction>[]>;
    inheritedRoles?: pulumi.Input<pulumi.Input<inputs.CustomDbRoleInheritedRole>[]>;
    projectId?: pulumi.Input<string>;
    roleName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomDbRole resource.
 */
export interface CustomDbRoleArgs {
    actions?: pulumi.Input<pulumi.Input<inputs.CustomDbRoleAction>[]>;
    inheritedRoles?: pulumi.Input<pulumi.Input<inputs.CustomDbRoleInheritedRole>[]>;
    projectId: pulumi.Input<string>;
    roleName: pulumi.Input<string>;
}
