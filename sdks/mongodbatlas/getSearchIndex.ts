// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSearchIndex(args: GetSearchIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetSearchIndexResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getSearchIndex:getSearchIndex", {
        "clusterName": args.clusterName,
        "id": args.id,
        "indexId": args.indexId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSearchIndex.
 */
export interface GetSearchIndexArgs {
    clusterName: string;
    id?: string;
    indexId: string;
    projectId: string;
}

/**
 * A collection of values returned by getSearchIndex.
 */
export interface GetSearchIndexResult {
    readonly analyzer: string;
    readonly analyzers: string;
    readonly clusterName: string;
    readonly collectionName: string;
    readonly database: string;
    readonly fields: string;
    readonly id: string;
    readonly indexId: string;
    readonly mappingsDynamic: boolean;
    readonly mappingsFields: string;
    readonly name: string;
    readonly projectId: string;
    readonly searchAnalyzer: string;
    readonly status: string;
    readonly storedSource: string;
    readonly synonyms: outputs.GetSearchIndexSynonym[];
    readonly type: string;
}
export function getSearchIndexOutput(args: GetSearchIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSearchIndexResult> {
    return pulumi.output(args).apply((a: any) => getSearchIndex(a, opts))
}

/**
 * A collection of arguments for invoking getSearchIndex.
 */
export interface GetSearchIndexOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    indexId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
