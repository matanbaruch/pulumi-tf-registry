// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPrivateEndpointRegionalMode(args: GetPrivateEndpointRegionalModeArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateEndpointRegionalModeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mongodbatlas:index/getPrivateEndpointRegionalMode:getPrivateEndpointRegionalMode", {
        "enabled": args.enabled,
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrivateEndpointRegionalMode.
 */
export interface GetPrivateEndpointRegionalModeArgs {
    enabled?: boolean;
    id?: string;
    projectId: string;
}

/**
 * A collection of values returned by getPrivateEndpointRegionalMode.
 */
export interface GetPrivateEndpointRegionalModeResult {
    readonly enabled?: boolean;
    readonly id: string;
    readonly projectId: string;
}
export function getPrivateEndpointRegionalModeOutput(args: GetPrivateEndpointRegionalModeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateEndpointRegionalModeResult> {
    return pulumi.output(args).apply((a: any) => getPrivateEndpointRegionalMode(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateEndpointRegionalMode.
 */
export interface GetPrivateEndpointRegionalModeOutputArgs {
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
