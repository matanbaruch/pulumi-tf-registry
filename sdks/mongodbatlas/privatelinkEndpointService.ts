// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PrivatelinkEndpointService extends pulumi.CustomResource {
    /**
     * Get an existing PrivatelinkEndpointService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivatelinkEndpointServiceState, opts?: pulumi.CustomResourceOptions): PrivatelinkEndpointService {
        return new PrivatelinkEndpointService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mongodbatlas:index/privatelinkEndpointService:PrivatelinkEndpointService';

    /**
     * Returns true if the given object is an instance of PrivatelinkEndpointService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivatelinkEndpointService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivatelinkEndpointService.__pulumiType;
    }

    public /*out*/ readonly awsConnectionStatus!: pulumi.Output<string>;
    public /*out*/ readonly azureStatus!: pulumi.Output<string>;
    public /*out*/ readonly deleteRequested!: pulumi.Output<boolean>;
    public /*out*/ readonly endpointGroupName!: pulumi.Output<string>;
    public readonly endpointServiceId!: pulumi.Output<string>;
    public readonly endpoints!: pulumi.Output<outputs.PrivatelinkEndpointServiceEndpoint[] | undefined>;
    public /*out*/ readonly errorMessage!: pulumi.Output<string>;
    public readonly gcpProjectId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly gcpStatus!: pulumi.Output<string>;
    public /*out*/ readonly interfaceEndpointId!: pulumi.Output<string>;
    public /*out*/ readonly privateEndpointConnectionName!: pulumi.Output<string>;
    public readonly privateEndpointIpAddress!: pulumi.Output<string>;
    public /*out*/ readonly privateEndpointResourceId!: pulumi.Output<string>;
    public readonly privateLinkId!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly providerName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.PrivatelinkEndpointServiceTimeouts | undefined>;

    /**
     * Create a PrivatelinkEndpointService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivatelinkEndpointServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivatelinkEndpointServiceArgs | PrivatelinkEndpointServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivatelinkEndpointServiceState | undefined;
            resourceInputs["awsConnectionStatus"] = state ? state.awsConnectionStatus : undefined;
            resourceInputs["azureStatus"] = state ? state.azureStatus : undefined;
            resourceInputs["deleteRequested"] = state ? state.deleteRequested : undefined;
            resourceInputs["endpointGroupName"] = state ? state.endpointGroupName : undefined;
            resourceInputs["endpointServiceId"] = state ? state.endpointServiceId : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["errorMessage"] = state ? state.errorMessage : undefined;
            resourceInputs["gcpProjectId"] = state ? state.gcpProjectId : undefined;
            resourceInputs["gcpStatus"] = state ? state.gcpStatus : undefined;
            resourceInputs["interfaceEndpointId"] = state ? state.interfaceEndpointId : undefined;
            resourceInputs["privateEndpointConnectionName"] = state ? state.privateEndpointConnectionName : undefined;
            resourceInputs["privateEndpointIpAddress"] = state ? state.privateEndpointIpAddress : undefined;
            resourceInputs["privateEndpointResourceId"] = state ? state.privateEndpointResourceId : undefined;
            resourceInputs["privateLinkId"] = state ? state.privateLinkId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as PrivatelinkEndpointServiceArgs | undefined;
            if ((!args || args.endpointServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointServiceId'");
            }
            if ((!args || args.privateLinkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateLinkId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            resourceInputs["endpointServiceId"] = args ? args.endpointServiceId : undefined;
            resourceInputs["endpoints"] = args ? args.endpoints : undefined;
            resourceInputs["gcpProjectId"] = args ? args.gcpProjectId : undefined;
            resourceInputs["privateEndpointIpAddress"] = args ? args.privateEndpointIpAddress : undefined;
            resourceInputs["privateLinkId"] = args ? args.privateLinkId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["awsConnectionStatus"] = undefined /*out*/;
            resourceInputs["azureStatus"] = undefined /*out*/;
            resourceInputs["deleteRequested"] = undefined /*out*/;
            resourceInputs["endpointGroupName"] = undefined /*out*/;
            resourceInputs["errorMessage"] = undefined /*out*/;
            resourceInputs["gcpStatus"] = undefined /*out*/;
            resourceInputs["interfaceEndpointId"] = undefined /*out*/;
            resourceInputs["privateEndpointConnectionName"] = undefined /*out*/;
            resourceInputs["privateEndpointResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivatelinkEndpointService.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrivatelinkEndpointService resources.
 */
export interface PrivatelinkEndpointServiceState {
    awsConnectionStatus?: pulumi.Input<string>;
    azureStatus?: pulumi.Input<string>;
    deleteRequested?: pulumi.Input<boolean>;
    endpointGroupName?: pulumi.Input<string>;
    endpointServiceId?: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.PrivatelinkEndpointServiceEndpoint>[]>;
    errorMessage?: pulumi.Input<string>;
    gcpProjectId?: pulumi.Input<string>;
    gcpStatus?: pulumi.Input<string>;
    interfaceEndpointId?: pulumi.Input<string>;
    privateEndpointConnectionName?: pulumi.Input<string>;
    privateEndpointIpAddress?: pulumi.Input<string>;
    privateEndpointResourceId?: pulumi.Input<string>;
    privateLinkId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    providerName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PrivatelinkEndpointServiceTimeouts>;
}

/**
 * The set of arguments for constructing a PrivatelinkEndpointService resource.
 */
export interface PrivatelinkEndpointServiceArgs {
    endpointServiceId: pulumi.Input<string>;
    endpoints?: pulumi.Input<pulumi.Input<inputs.PrivatelinkEndpointServiceEndpoint>[]>;
    gcpProjectId?: pulumi.Input<string>;
    privateEndpointIpAddress?: pulumi.Input<string>;
    privateLinkId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    providerName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PrivatelinkEndpointServiceTimeouts>;
}
