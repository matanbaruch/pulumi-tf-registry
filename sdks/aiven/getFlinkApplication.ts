// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFlinkApplication(args: GetFlinkApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetFlinkApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getFlinkApplication:getFlinkApplication", {
        "id": args.id,
        "name": args.name,
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFlinkApplication.
 */
export interface GetFlinkApplicationArgs {
    id?: string;
    name: string;
    project: string;
    serviceName: string;
}

/**
 * A collection of values returned by getFlinkApplication.
 */
export interface GetFlinkApplicationResult {
    readonly applicationId: string;
    readonly createdAt: string;
    readonly createdBy: string;
    readonly id: string;
    readonly name: string;
    readonly project: string;
    readonly serviceName: string;
    readonly updatedAt: string;
    readonly updatedBy: string;
}
export function getFlinkApplicationOutput(args: GetFlinkApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlinkApplicationResult> {
    return pulumi.output(args).apply((a: any) => getFlinkApplication(a, opts))
}

/**
 * A collection of arguments for invoking getFlinkApplication.
 */
export interface GetFlinkApplicationOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
