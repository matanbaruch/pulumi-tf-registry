// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationUserGroup(args: GetOrganizationUserGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationUserGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getOrganizationUserGroup:getOrganizationUserGroup", {
        "id": args.id,
        "name": args.name,
        "organizationId": args.organizationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationUserGroup.
 */
export interface GetOrganizationUserGroupArgs {
    id?: string;
    name: string;
    organizationId: string;
}

/**
 * A collection of values returned by getOrganizationUserGroup.
 */
export interface GetOrganizationUserGroupResult {
    readonly createTime: string;
    readonly description: string;
    readonly groupId: string;
    readonly id: string;
    readonly name: string;
    readonly organizationId: string;
    readonly updateTime: string;
}
export function getOrganizationUserGroupOutput(args: GetOrganizationUserGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationUserGroupResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationUserGroup(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationUserGroup.
 */
export interface GetOrganizationUserGroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
}
