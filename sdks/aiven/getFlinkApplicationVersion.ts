// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFlinkApplicationVersion(args: GetFlinkApplicationVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetFlinkApplicationVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getFlinkApplicationVersion:getFlinkApplicationVersion", {
        "applicationId": args.applicationId,
        "applicationVersionId": args.applicationVersionId,
        "id": args.id,
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFlinkApplicationVersion.
 */
export interface GetFlinkApplicationVersionArgs {
    applicationId: string;
    applicationVersionId: string;
    id?: string;
    project: string;
    serviceName: string;
}

/**
 * A collection of values returned by getFlinkApplicationVersion.
 */
export interface GetFlinkApplicationVersionResult {
    readonly applicationId: string;
    readonly applicationVersionId: string;
    readonly createdAt: string;
    readonly createdBy: string;
    readonly id: string;
    readonly project: string;
    readonly serviceName: string;
    readonly sink: outputs.GetFlinkApplicationVersionSink[];
    readonly sinks: outputs.GetFlinkApplicationVersionSink[];
    readonly source: outputs.GetFlinkApplicationVersionSource[];
    readonly sources: outputs.GetFlinkApplicationVersionSource[];
    readonly statement: string;
    readonly version: number;
}
export function getFlinkApplicationVersionOutput(args: GetFlinkApplicationVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlinkApplicationVersionResult> {
    return pulumi.output(args).apply((a: any) => getFlinkApplicationVersion(a, opts))
}

/**
 * A collection of arguments for invoking getFlinkApplicationVersion.
 */
export interface GetFlinkApplicationVersionOutputArgs {
    applicationId: pulumi.Input<string>;
    applicationVersionId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
