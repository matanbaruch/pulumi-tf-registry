// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationApplicationUser(args: GetOrganizationApplicationUserArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationApplicationUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getOrganizationApplicationUser:getOrganizationApplicationUser", {
        "id": args.id,
        "organizationId": args.organizationId,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationApplicationUser.
 */
export interface GetOrganizationApplicationUserArgs {
    id?: string;
    organizationId: string;
    userId: string;
}

/**
 * A collection of values returned by getOrganizationApplicationUser.
 */
export interface GetOrganizationApplicationUserResult {
    readonly email: string;
    readonly id: string;
    readonly isSuperAdmin: boolean;
    readonly name: string;
    readonly organizationId: string;
    readonly userId: string;
}
export function getOrganizationApplicationUserOutput(args: GetOrganizationApplicationUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationApplicationUserResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationApplicationUser(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationApplicationUser.
 */
export interface GetOrganizationApplicationUserOutputArgs {
    id?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
