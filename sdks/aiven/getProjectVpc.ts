// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProjectVpc(args?: GetProjectVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectVpcResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getProjectVpc:getProjectVpc", {
        "cloudName": args.cloudName,
        "id": args.id,
        "project": args.project,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectVpc.
 */
export interface GetProjectVpcArgs {
    cloudName?: string;
    id?: string;
    project?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getProjectVpc.
 */
export interface GetProjectVpcResult {
    readonly cloudName?: string;
    readonly id: string;
    readonly networkCidr: string;
    readonly project?: string;
    readonly state: string;
    readonly vpcId?: string;
}
export function getProjectVpcOutput(args?: GetProjectVpcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectVpcResult> {
    return pulumi.output(args).apply((a: any) => getProjectVpc(a, opts))
}

/**
 * A collection of arguments for invoking getProjectVpc.
 */
export interface GetProjectVpcOutputArgs {
    cloudName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
