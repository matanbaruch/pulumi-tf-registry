// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationUser(args: GetOrganizationUserArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getOrganizationUser:getOrganizationUser", {
        "id": args.id,
        "organizationId": args.organizationId,
        "userEmail": args.userEmail,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationUser.
 */
export interface GetOrganizationUserArgs {
    id?: string;
    organizationId: string;
    userEmail?: string;
    userId?: string;
}

/**
 * A collection of values returned by getOrganizationUser.
 */
export interface GetOrganizationUserResult {
    readonly createTime: string;
    readonly id: string;
    readonly organizationId: string;
    readonly userEmail?: string;
    readonly userId?: string;
}
export function getOrganizationUserOutput(args: GetOrganizationUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationUserResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationUser(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationUser.
 */
export interface GetOrganizationUserOutputArgs {
    id?: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    userEmail?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}
