// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaConnector(args: GetKafkaConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaConnectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getKafkaConnector:getKafkaConnector", {
        "connectorName": args.connectorName,
        "id": args.id,
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaConnector.
 */
export interface GetKafkaConnectorArgs {
    connectorName: string;
    id?: string;
    project: string;
    serviceName: string;
}

/**
 * A collection of values returned by getKafkaConnector.
 */
export interface GetKafkaConnectorResult {
    readonly config: {[key: string]: string};
    readonly connectorName: string;
    readonly id: string;
    readonly pluginAuthor: string;
    readonly pluginClass: string;
    readonly pluginDocUrl: string;
    readonly pluginTitle: string;
    readonly pluginType: string;
    readonly pluginVersion: string;
    readonly project: string;
    readonly serviceName: string;
    readonly tasks: outputs.GetKafkaConnectorTask[];
}
export function getKafkaConnectorOutput(args: GetKafkaConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaConnectorResult> {
    return pulumi.output(args).apply((a: any) => getKafkaConnector(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaConnector.
 */
export interface GetKafkaConnectorOutputArgs {
    connectorName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
