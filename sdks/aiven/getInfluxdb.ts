// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInfluxdb(args: GetInfluxdbArgs, opts?: pulumi.InvokeOptions): Promise<GetInfluxdbResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getInfluxdb:getInfluxdb", {
        "id": args.id,
        "project": args.project,
        "serviceName": args.serviceName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInfluxdb.
 */
export interface GetInfluxdbArgs {
    id?: string;
    project: string;
    serviceName: string;
}

/**
 * A collection of values returned by getInfluxdb.
 */
export interface GetInfluxdbResult {
    readonly additionalDiskSpace: string;
    readonly cloudName: string;
    readonly components: outputs.GetInfluxdbComponent[];
    readonly diskSpace: string;
    readonly diskSpaceCap: string;
    readonly diskSpaceDefault: string;
    readonly diskSpaceStep: string;
    readonly diskSpaceUsed: string;
    readonly id: string;
    readonly influxdbUserConfigs: outputs.GetInfluxdbInfluxdbUserConfig[];
    readonly influxdbs: outputs.GetInfluxdbInfluxdb[];
    readonly maintenanceWindowDow: string;
    readonly maintenanceWindowTime: string;
    readonly plan: string;
    readonly project: string;
    readonly projectVpcId: string;
    readonly serviceHost: string;
    readonly serviceIntegrations: outputs.GetInfluxdbServiceIntegration[];
    readonly serviceName: string;
    readonly servicePassword: string;
    readonly servicePort: number;
    readonly serviceType: string;
    readonly serviceUri: string;
    readonly serviceUsername: string;
    readonly state: string;
    readonly staticIps: string[];
    readonly tags: outputs.GetInfluxdbTag[];
    readonly techEmails: outputs.GetInfluxdbTechEmail[];
    readonly terminationProtection: boolean;
}
export function getInfluxdbOutput(args: GetInfluxdbOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInfluxdbResult> {
    return pulumi.output(args).apply((a: any) => getInfluxdb(a, opts))
}

/**
 * A collection of arguments for invoking getInfluxdb.
 */
export interface GetInfluxdbOutputArgs {
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
