// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceIntegrationEndpoint(args: GetServiceIntegrationEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceIntegrationEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getServiceIntegrationEndpoint:getServiceIntegrationEndpoint", {
        "endpointName": args.endpointName,
        "id": args.id,
        "project": args.project,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointArgs {
    endpointName: string;
    id?: string;
    project: string;
}

/**
 * A collection of values returned by getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointResult {
    readonly datadogUserConfigs: outputs.GetServiceIntegrationEndpointDatadogUserConfig[];
    readonly endpointConfig: {[key: string]: string};
    readonly endpointName: string;
    readonly endpointType: string;
    readonly externalAwsCloudwatchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchLogsUserConfig[];
    readonly externalAwsCloudwatchMetricsUserConfigs: outputs.GetServiceIntegrationEndpointExternalAwsCloudwatchMetricsUserConfig[];
    readonly externalElasticsearchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalElasticsearchLogsUserConfig[];
    readonly externalGoogleCloudBigqueries: outputs.GetServiceIntegrationEndpointExternalGoogleCloudBigquery[];
    readonly externalGoogleCloudLoggingUserConfigs: outputs.GetServiceIntegrationEndpointExternalGoogleCloudLoggingUserConfig[];
    readonly externalKafkaUserConfigs: outputs.GetServiceIntegrationEndpointExternalKafkaUserConfig[];
    readonly externalOpensearchLogsUserConfigs: outputs.GetServiceIntegrationEndpointExternalOpensearchLogsUserConfig[];
    readonly externalPostgresqls: outputs.GetServiceIntegrationEndpointExternalPostgresql[];
    readonly externalSchemaRegistryUserConfigs: outputs.GetServiceIntegrationEndpointExternalSchemaRegistryUserConfig[];
    readonly id: string;
    readonly jolokiaUserConfigs: outputs.GetServiceIntegrationEndpointJolokiaUserConfig[];
    readonly project: string;
    readonly prometheusUserConfigs: outputs.GetServiceIntegrationEndpointPrometheusUserConfig[];
    readonly rsyslogUserConfigs: outputs.GetServiceIntegrationEndpointRsyslogUserConfig[];
}
export function getServiceIntegrationEndpointOutput(args: GetServiceIntegrationEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceIntegrationEndpointResult> {
    return pulumi.output(args).apply((a: any) => getServiceIntegrationEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getServiceIntegrationEndpoint.
 */
export interface GetServiceIntegrationEndpointOutputArgs {
    endpointName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
}
