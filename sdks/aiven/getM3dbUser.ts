// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getM3dbUser(args: GetM3dbUserArgs, opts?: pulumi.InvokeOptions): Promise<GetM3dbUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aiven:index/getM3dbUser:getM3dbUser", {
        "id": args.id,
        "project": args.project,
        "serviceName": args.serviceName,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getM3dbUser.
 */
export interface GetM3dbUserArgs {
    id?: string;
    project: string;
    serviceName: string;
    username: string;
}

/**
 * A collection of values returned by getM3dbUser.
 */
export interface GetM3dbUserResult {
    readonly id: string;
    readonly password: string;
    readonly project: string;
    readonly serviceName: string;
    readonly type: string;
    readonly username: string;
}
export function getM3dbUserOutput(args: GetM3dbUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetM3dbUserResult> {
    return pulumi.output(args).apply((a: any) => getM3dbUser(a, opts))
}

/**
 * A collection of arguments for invoking getM3dbUser.
 */
export interface GetM3dbUserOutputArgs {
    id?: pulumi.Input<string>;
    project: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
