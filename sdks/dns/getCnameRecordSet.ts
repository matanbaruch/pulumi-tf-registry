// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCnameRecordSet(args: GetCnameRecordSetArgs, opts?: pulumi.InvokeOptions): Promise<GetCnameRecordSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dns:index/getCnameRecordSet:getCnameRecordSet", {
        "host": args.host,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCnameRecordSet.
 */
export interface GetCnameRecordSetArgs {
    host: string;
}

/**
 * A collection of values returned by getCnameRecordSet.
 */
export interface GetCnameRecordSetResult {
    readonly cname: string;
    readonly host: string;
    readonly id: string;
}
export function getCnameRecordSetOutput(args: GetCnameRecordSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCnameRecordSetResult> {
    return pulumi.output(args).apply((a: any) => getCnameRecordSet(a, opts))
}

/**
 * A collection of arguments for invoking getCnameRecordSet.
 */
export interface GetCnameRecordSetOutputArgs {
    host: pulumi.Input<string>;
}
