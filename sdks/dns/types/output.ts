// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetMxRecordSetMx {
    exchange: string;
    preference: number;
}

export interface GetSrvRecordSetSrv {
    port: number;
    priority: number;
    target: string;
    weight: number;
}

export interface MxRecordSetMx {
    /**
     * The FQDN of the mail exchange, include the trailing dot.
     */
    exchange: string;
    /**
     * The preference for the record.
     */
    preference: number;
}

export interface SrvRecordSetSrv {
    /**
     * The port for the service on the target.
     */
    port: number;
    /**
     * The priority for the record.
     */
    priority: number;
    /**
     * The FQDN of the target, include the trailing dot.
     */
    target: string;
    /**
     * The weight for the record.
     */
    weight: number;
}

export namespace config {
    export interface Updates {
        /**
         * A `gssapi` block. Only one `gssapi` block may be in the configuration. Conflicts with use of `key_name`, `key_algorithm` and `key_secret`.
         */
        gssapis?: outputs.config.UpdatesGssapi[];
        /**
         * Required if `key_name` is set. When using TSIG authentication, the algorithm to use for HMAC. Valid values are `hmac-md5`, `hmac-sha1`, `hmac-sha256` or `hmac-sha512`. Value can also be sourced from the DNS_UPDATE_KEYALGORITHM environment variable.
         */
        keyAlgorithm?: string;
        /**
         * The name of the TSIG key used to sign the DNS update messages. Value can also be sourced from the DNS_UPDATE_KEYNAME environment variable.
         */
        keyName?: string;
        /**
         * Required if `key_name` is set
         * A Base64-encoded string containing the shared secret to be used for TSIG. Value can also be sourced from the DNS_UPDATE_KEYSECRET environment variable.
         */
        keySecret?: string;
        /**
         * The target UDP port on the server where updates are sent to. Defaults to `53`. Value can also be sourced from the DNS_UPDATE_PORT environment variable.
         */
        port?: number;
        /**
         * How many times to retry on connection timeout. Defaults to `3`. Value can also be sourced from the DNS_UPDATE_RETRIES environment variable.
         */
        retries?: number;
        /**
         * The hostname or IP address of the DNS server to send updates to. Value can also be sourced from the DNS_UPDATE_SERVER environment variable.
         */
        server?: string;
        /**
         * Timeout for DNS queries. Valid values are durations expressed as `500ms`, etc. or a plain number which is treated as whole seconds. Value can also be sourced from the DNS_UPDATE_TIMEOUT environment variable.
         */
        timeout?: string;
        /**
         * Transport to use for DNS queries. Valid values are `udp`, `udp4`, `udp6`, `tcp`, `tcp4`, or `tcp6`. Any UDP transport will retry automatically with the equivalent TCP transport in the event of a truncated response. Defaults to `udp`. Value can also be sourced from the DNS_UPDATE_TRANSPORT environment variable.
         */
        transport?: string;
    }

    export interface UpdatesGssapi {
        /**
         * This or `password` is required if `username` is set, not supported on Windows. The path to a keytab file containing a key for `username`. Value can also be sourced from the DNS_UPDATE_KEYTAB environment variable.
         */
        keytab?: string;
        /**
         * This or `keytab` is required if `username` is set. The matching password for `username`. Value can also be sourced from the DNS_UPDATE_PASSWORD environment variable.
         */
        password?: string;
        /**
         * The Kerberos realm or Active Directory domain. Value can also be sourced from the DNS_UPDATE_REALM environment variable.
         */
        realm?: string;
        /**
         * The name of the user to authenticate as. If not set the current user session will be used. Value can also be sourced from the DNS_UPDATE_USERNAME environment variable.
         */
        username?: string;
    }

}
