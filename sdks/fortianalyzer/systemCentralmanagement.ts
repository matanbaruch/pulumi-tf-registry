// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemCentralmanagement extends pulumi.CustomResource {
    /**
     * Get an existing SystemCentralmanagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemCentralmanagementState, opts?: pulumi.CustomResourceOptions): SystemCentralmanagement {
        return new SystemCentralmanagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortianalyzer:index/systemCentralmanagement:SystemCentralmanagement';

    /**
     * Returns true if the given object is an instance of SystemCentralmanagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemCentralmanagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemCentralmanagement.__pulumiType;
    }

    public readonly acctid!: pulumi.Output<string | undefined>;
    public readonly allowMonitor!: pulumi.Output<string>;
    public readonly authorizedManagerOnly!: pulumi.Output<string>;
    public readonly eliteService!: pulumi.Output<string>;
    public readonly encAlgorithm!: pulumi.Output<string>;
    public readonly fmg!: pulumi.Output<string | undefined>;
    public readonly mgmtid!: pulumi.Output<number | undefined>;
    public readonly serialNumbers!: pulumi.Output<string[]>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a SystemCentralmanagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemCentralmanagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemCentralmanagementArgs | SystemCentralmanagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemCentralmanagementState | undefined;
            resourceInputs["acctid"] = state ? state.acctid : undefined;
            resourceInputs["allowMonitor"] = state ? state.allowMonitor : undefined;
            resourceInputs["authorizedManagerOnly"] = state ? state.authorizedManagerOnly : undefined;
            resourceInputs["eliteService"] = state ? state.eliteService : undefined;
            resourceInputs["encAlgorithm"] = state ? state.encAlgorithm : undefined;
            resourceInputs["fmg"] = state ? state.fmg : undefined;
            resourceInputs["mgmtid"] = state ? state.mgmtid : undefined;
            resourceInputs["serialNumbers"] = state ? state.serialNumbers : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SystemCentralmanagementArgs | undefined;
            resourceInputs["acctid"] = args ? args.acctid : undefined;
            resourceInputs["allowMonitor"] = args ? args.allowMonitor : undefined;
            resourceInputs["authorizedManagerOnly"] = args ? args.authorizedManagerOnly : undefined;
            resourceInputs["eliteService"] = args ? args.eliteService : undefined;
            resourceInputs["encAlgorithm"] = args ? args.encAlgorithm : undefined;
            resourceInputs["fmg"] = args ? args.fmg : undefined;
            resourceInputs["mgmtid"] = args ? args.mgmtid : undefined;
            resourceInputs["serialNumbers"] = args ? args.serialNumbers : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemCentralmanagement.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemCentralmanagement resources.
 */
export interface SystemCentralmanagementState {
    acctid?: pulumi.Input<string>;
    allowMonitor?: pulumi.Input<string>;
    authorizedManagerOnly?: pulumi.Input<string>;
    eliteService?: pulumi.Input<string>;
    encAlgorithm?: pulumi.Input<string>;
    fmg?: pulumi.Input<string>;
    mgmtid?: pulumi.Input<number>;
    serialNumbers?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemCentralmanagement resource.
 */
export interface SystemCentralmanagementArgs {
    acctid?: pulumi.Input<string>;
    allowMonitor?: pulumi.Input<string>;
    authorizedManagerOnly?: pulumi.Input<string>;
    eliteService?: pulumi.Input<string>;
    encAlgorithm?: pulumi.Input<string>;
    fmg?: pulumi.Input<string>;
    mgmtid?: pulumi.Input<number>;
    serialNumbers?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}
