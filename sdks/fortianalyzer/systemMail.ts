// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemMail extends pulumi.CustomResource {
    /**
     * Get an existing SystemMail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemMailState, opts?: pulumi.CustomResourceOptions): SystemMail {
        return new SystemMail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortianalyzer:index/systemMail:SystemMail';

    /**
     * Returns true if the given object is an instance of SystemMail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemMail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemMail.__pulumiType;
    }

    public readonly auth!: pulumi.Output<string>;
    public readonly authType!: pulumi.Output<string>;
    public readonly fosid!: pulumi.Output<string | undefined>;
    public readonly from!: pulumi.Output<string | undefined>;
    public readonly localCert!: pulumi.Output<string | undefined>;
    public readonly passwds!: pulumi.Output<string[] | undefined>;
    public readonly port!: pulumi.Output<number>;
    public readonly secureOption!: pulumi.Output<string>;
    public readonly server!: pulumi.Output<string | undefined>;
    public readonly user!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemMail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemMailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemMailArgs | SystemMailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemMailState | undefined;
            resourceInputs["auth"] = state ? state.auth : undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["from"] = state ? state.from : undefined;
            resourceInputs["localCert"] = state ? state.localCert : undefined;
            resourceInputs["passwds"] = state ? state.passwds : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["secureOption"] = state ? state.secureOption : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
        } else {
            const args = argsOrState as SystemMailArgs | undefined;
            resourceInputs["auth"] = args ? args.auth : undefined;
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["from"] = args ? args.from : undefined;
            resourceInputs["localCert"] = args ? args.localCert : undefined;
            resourceInputs["passwds"] = args?.passwds ? pulumi.secret(args.passwds) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["secureOption"] = args ? args.secureOption : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwds"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemMail.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemMail resources.
 */
export interface SystemMailState {
    auth?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    fosid?: pulumi.Input<string>;
    from?: pulumi.Input<string>;
    localCert?: pulumi.Input<string>;
    passwds?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    secureOption?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemMail resource.
 */
export interface SystemMailArgs {
    auth?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    fosid?: pulumi.Input<string>;
    from?: pulumi.Input<string>;
    localCert?: pulumi.Input<string>;
    passwds?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    secureOption?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    user?: pulumi.Input<string>;
}
