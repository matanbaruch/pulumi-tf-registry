// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemLogIoc extends pulumi.CustomResource {
    /**
     * Get an existing SystemLogIoc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemLogIocState, opts?: pulumi.CustomResourceOptions): SystemLogIoc {
        return new SystemLogIoc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortianalyzer:index/systemLogIoc:SystemLogIoc';

    /**
     * Returns true if the given object is an instance of SystemLogIoc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemLogIoc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemLogIoc.__pulumiType;
    }

    public readonly notification!: pulumi.Output<string>;
    public readonly notificationThrottle!: pulumi.Output<number>;
    public readonly rescanMaxRunner!: pulumi.Output<number>;
    public readonly rescanRunAt!: pulumi.Output<number>;
    public readonly rescanStatus!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a SystemLogIoc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemLogIocArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemLogIocArgs | SystemLogIocState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemLogIocState | undefined;
            resourceInputs["notification"] = state ? state.notification : undefined;
            resourceInputs["notificationThrottle"] = state ? state.notificationThrottle : undefined;
            resourceInputs["rescanMaxRunner"] = state ? state.rescanMaxRunner : undefined;
            resourceInputs["rescanRunAt"] = state ? state.rescanRunAt : undefined;
            resourceInputs["rescanStatus"] = state ? state.rescanStatus : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as SystemLogIocArgs | undefined;
            resourceInputs["notification"] = args ? args.notification : undefined;
            resourceInputs["notificationThrottle"] = args ? args.notificationThrottle : undefined;
            resourceInputs["rescanMaxRunner"] = args ? args.rescanMaxRunner : undefined;
            resourceInputs["rescanRunAt"] = args ? args.rescanRunAt : undefined;
            resourceInputs["rescanStatus"] = args ? args.rescanStatus : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemLogIoc.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemLogIoc resources.
 */
export interface SystemLogIocState {
    notification?: pulumi.Input<string>;
    notificationThrottle?: pulumi.Input<number>;
    rescanMaxRunner?: pulumi.Input<number>;
    rescanRunAt?: pulumi.Input<number>;
    rescanStatus?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemLogIoc resource.
 */
export interface SystemLogIocArgs {
    notification?: pulumi.Input<string>;
    notificationThrottle?: pulumi.Input<number>;
    rescanMaxRunner?: pulumi.Input<number>;
    rescanRunAt?: pulumi.Input<number>;
    rescanStatus?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
