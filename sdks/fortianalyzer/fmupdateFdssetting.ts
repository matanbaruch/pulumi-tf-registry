// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FmupdateFdssetting extends pulumi.CustomResource {
    /**
     * Get an existing FmupdateFdssetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FmupdateFdssettingState, opts?: pulumi.CustomResourceOptions): FmupdateFdssetting {
        return new FmupdateFdssetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortianalyzer:index/fmupdateFdssetting:FmupdateFdssetting';

    /**
     * Returns true if the given object is an instance of FmupdateFdssetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FmupdateFdssetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FmupdateFdssetting.__pulumiType;
    }

    public readonly fdsCltSslProtocol!: pulumi.Output<string>;
    public readonly fdsSslProtocol!: pulumi.Output<string>;
    public readonly fmtrLog!: pulumi.Output<string>;
    public readonly fortiguardAnycast!: pulumi.Output<string>;
    public readonly fortiguardAnycastSource!: pulumi.Output<string>;
    public readonly linkdLog!: pulumi.Output<string>;
    public readonly maxAvIpsVersion!: pulumi.Output<number>;
    public readonly maxWork!: pulumi.Output<number>;
    public readonly pushOverride!: pulumi.Output<outputs.FmupdateFdssettingPushOverride | undefined>;
    public readonly pushOverrideToClient!: pulumi.Output<outputs.FmupdateFdssettingPushOverrideToClient | undefined>;
    public readonly sendReport!: pulumi.Output<string>;
    public readonly sendSetup!: pulumi.Output<string>;
    public readonly serverOverride!: pulumi.Output<outputs.FmupdateFdssettingServerOverride | undefined>;
    public readonly systemSupportFais!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFazs!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFcts!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFdcs!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFgts!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFis!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFmls!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFsas!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFsws!: pulumi.Output<string[] | undefined>;
    public readonly systemSupportFts!: pulumi.Output<string[] | undefined>;
    public readonly umsvcLog!: pulumi.Output<string>;
    public readonly unregDevOption!: pulumi.Output<string>;
    public readonly updateSchedule!: pulumi.Output<outputs.FmupdateFdssettingUpdateSchedule | undefined>;
    public readonly userAgent!: pulumi.Output<string>;
    public readonly wanipQueryMode!: pulumi.Output<string>;

    /**
     * Create a FmupdateFdssetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FmupdateFdssettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FmupdateFdssettingArgs | FmupdateFdssettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FmupdateFdssettingState | undefined;
            resourceInputs["fdsCltSslProtocol"] = state ? state.fdsCltSslProtocol : undefined;
            resourceInputs["fdsSslProtocol"] = state ? state.fdsSslProtocol : undefined;
            resourceInputs["fmtrLog"] = state ? state.fmtrLog : undefined;
            resourceInputs["fortiguardAnycast"] = state ? state.fortiguardAnycast : undefined;
            resourceInputs["fortiguardAnycastSource"] = state ? state.fortiguardAnycastSource : undefined;
            resourceInputs["linkdLog"] = state ? state.linkdLog : undefined;
            resourceInputs["maxAvIpsVersion"] = state ? state.maxAvIpsVersion : undefined;
            resourceInputs["maxWork"] = state ? state.maxWork : undefined;
            resourceInputs["pushOverride"] = state ? state.pushOverride : undefined;
            resourceInputs["pushOverrideToClient"] = state ? state.pushOverrideToClient : undefined;
            resourceInputs["sendReport"] = state ? state.sendReport : undefined;
            resourceInputs["sendSetup"] = state ? state.sendSetup : undefined;
            resourceInputs["serverOverride"] = state ? state.serverOverride : undefined;
            resourceInputs["systemSupportFais"] = state ? state.systemSupportFais : undefined;
            resourceInputs["systemSupportFazs"] = state ? state.systemSupportFazs : undefined;
            resourceInputs["systemSupportFcts"] = state ? state.systemSupportFcts : undefined;
            resourceInputs["systemSupportFdcs"] = state ? state.systemSupportFdcs : undefined;
            resourceInputs["systemSupportFgts"] = state ? state.systemSupportFgts : undefined;
            resourceInputs["systemSupportFis"] = state ? state.systemSupportFis : undefined;
            resourceInputs["systemSupportFmls"] = state ? state.systemSupportFmls : undefined;
            resourceInputs["systemSupportFsas"] = state ? state.systemSupportFsas : undefined;
            resourceInputs["systemSupportFsws"] = state ? state.systemSupportFsws : undefined;
            resourceInputs["systemSupportFts"] = state ? state.systemSupportFts : undefined;
            resourceInputs["umsvcLog"] = state ? state.umsvcLog : undefined;
            resourceInputs["unregDevOption"] = state ? state.unregDevOption : undefined;
            resourceInputs["updateSchedule"] = state ? state.updateSchedule : undefined;
            resourceInputs["userAgent"] = state ? state.userAgent : undefined;
            resourceInputs["wanipQueryMode"] = state ? state.wanipQueryMode : undefined;
        } else {
            const args = argsOrState as FmupdateFdssettingArgs | undefined;
            resourceInputs["fdsCltSslProtocol"] = args ? args.fdsCltSslProtocol : undefined;
            resourceInputs["fdsSslProtocol"] = args ? args.fdsSslProtocol : undefined;
            resourceInputs["fmtrLog"] = args ? args.fmtrLog : undefined;
            resourceInputs["fortiguardAnycast"] = args ? args.fortiguardAnycast : undefined;
            resourceInputs["fortiguardAnycastSource"] = args ? args.fortiguardAnycastSource : undefined;
            resourceInputs["linkdLog"] = args ? args.linkdLog : undefined;
            resourceInputs["maxAvIpsVersion"] = args ? args.maxAvIpsVersion : undefined;
            resourceInputs["maxWork"] = args ? args.maxWork : undefined;
            resourceInputs["pushOverride"] = args ? args.pushOverride : undefined;
            resourceInputs["pushOverrideToClient"] = args ? args.pushOverrideToClient : undefined;
            resourceInputs["sendReport"] = args ? args.sendReport : undefined;
            resourceInputs["sendSetup"] = args ? args.sendSetup : undefined;
            resourceInputs["serverOverride"] = args ? args.serverOverride : undefined;
            resourceInputs["systemSupportFais"] = args ? args.systemSupportFais : undefined;
            resourceInputs["systemSupportFazs"] = args ? args.systemSupportFazs : undefined;
            resourceInputs["systemSupportFcts"] = args ? args.systemSupportFcts : undefined;
            resourceInputs["systemSupportFdcs"] = args ? args.systemSupportFdcs : undefined;
            resourceInputs["systemSupportFgts"] = args ? args.systemSupportFgts : undefined;
            resourceInputs["systemSupportFis"] = args ? args.systemSupportFis : undefined;
            resourceInputs["systemSupportFmls"] = args ? args.systemSupportFmls : undefined;
            resourceInputs["systemSupportFsas"] = args ? args.systemSupportFsas : undefined;
            resourceInputs["systemSupportFsws"] = args ? args.systemSupportFsws : undefined;
            resourceInputs["systemSupportFts"] = args ? args.systemSupportFts : undefined;
            resourceInputs["umsvcLog"] = args ? args.umsvcLog : undefined;
            resourceInputs["unregDevOption"] = args ? args.unregDevOption : undefined;
            resourceInputs["updateSchedule"] = args ? args.updateSchedule : undefined;
            resourceInputs["userAgent"] = args ? args.userAgent : undefined;
            resourceInputs["wanipQueryMode"] = args ? args.wanipQueryMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FmupdateFdssetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FmupdateFdssetting resources.
 */
export interface FmupdateFdssettingState {
    fdsCltSslProtocol?: pulumi.Input<string>;
    fdsSslProtocol?: pulumi.Input<string>;
    fmtrLog?: pulumi.Input<string>;
    fortiguardAnycast?: pulumi.Input<string>;
    fortiguardAnycastSource?: pulumi.Input<string>;
    linkdLog?: pulumi.Input<string>;
    maxAvIpsVersion?: pulumi.Input<number>;
    maxWork?: pulumi.Input<number>;
    pushOverride?: pulumi.Input<inputs.FmupdateFdssettingPushOverride>;
    pushOverrideToClient?: pulumi.Input<inputs.FmupdateFdssettingPushOverrideToClient>;
    sendReport?: pulumi.Input<string>;
    sendSetup?: pulumi.Input<string>;
    serverOverride?: pulumi.Input<inputs.FmupdateFdssettingServerOverride>;
    systemSupportFais?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFazs?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFcts?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFdcs?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFgts?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFis?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFmls?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFsas?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFsws?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFts?: pulumi.Input<pulumi.Input<string>[]>;
    umsvcLog?: pulumi.Input<string>;
    unregDevOption?: pulumi.Input<string>;
    updateSchedule?: pulumi.Input<inputs.FmupdateFdssettingUpdateSchedule>;
    userAgent?: pulumi.Input<string>;
    wanipQueryMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FmupdateFdssetting resource.
 */
export interface FmupdateFdssettingArgs {
    fdsCltSslProtocol?: pulumi.Input<string>;
    fdsSslProtocol?: pulumi.Input<string>;
    fmtrLog?: pulumi.Input<string>;
    fortiguardAnycast?: pulumi.Input<string>;
    fortiguardAnycastSource?: pulumi.Input<string>;
    linkdLog?: pulumi.Input<string>;
    maxAvIpsVersion?: pulumi.Input<number>;
    maxWork?: pulumi.Input<number>;
    pushOverride?: pulumi.Input<inputs.FmupdateFdssettingPushOverride>;
    pushOverrideToClient?: pulumi.Input<inputs.FmupdateFdssettingPushOverrideToClient>;
    sendReport?: pulumi.Input<string>;
    sendSetup?: pulumi.Input<string>;
    serverOverride?: pulumi.Input<inputs.FmupdateFdssettingServerOverride>;
    systemSupportFais?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFazs?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFcts?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFdcs?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFgts?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFis?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFmls?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFsas?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFsws?: pulumi.Input<pulumi.Input<string>[]>;
    systemSupportFts?: pulumi.Input<pulumi.Input<string>[]>;
    umsvcLog?: pulumi.Input<string>;
    unregDevOption?: pulumi.Input<string>;
    updateSchedule?: pulumi.Input<inputs.FmupdateFdssettingUpdateSchedule>;
    userAgent?: pulumi.Input<string>;
    wanipQueryMode?: pulumi.Input<string>;
}
