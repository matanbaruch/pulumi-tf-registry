// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemLocallogSyslogdSetting extends pulumi.CustomResource {
    /**
     * Get an existing SystemLocallogSyslogdSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemLocallogSyslogdSettingState, opts?: pulumi.CustomResourceOptions): SystemLocallogSyslogdSetting {
        return new SystemLocallogSyslogdSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortianalyzer:index/systemLocallogSyslogdSetting:SystemLocallogSyslogdSetting';

    /**
     * Returns true if the given object is an instance of SystemLocallogSyslogdSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemLocallogSyslogdSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemLocallogSyslogdSetting.__pulumiType;
    }

    public readonly cert!: pulumi.Output<string | undefined>;
    public readonly csv!: pulumi.Output<string>;
    public readonly facility!: pulumi.Output<string>;
    public readonly reliable!: pulumi.Output<string>;
    public readonly secureConnection!: pulumi.Output<string>;
    public readonly severity!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<string>;
    public readonly syslogName!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemLocallogSyslogdSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemLocallogSyslogdSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemLocallogSyslogdSettingArgs | SystemLocallogSyslogdSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemLocallogSyslogdSettingState | undefined;
            resourceInputs["cert"] = state ? state.cert : undefined;
            resourceInputs["csv"] = state ? state.csv : undefined;
            resourceInputs["facility"] = state ? state.facility : undefined;
            resourceInputs["reliable"] = state ? state.reliable : undefined;
            resourceInputs["secureConnection"] = state ? state.secureConnection : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["syslogName"] = state ? state.syslogName : undefined;
        } else {
            const args = argsOrState as SystemLocallogSyslogdSettingArgs | undefined;
            resourceInputs["cert"] = args ? args.cert : undefined;
            resourceInputs["csv"] = args ? args.csv : undefined;
            resourceInputs["facility"] = args ? args.facility : undefined;
            resourceInputs["reliable"] = args ? args.reliable : undefined;
            resourceInputs["secureConnection"] = args ? args.secureConnection : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["syslogName"] = args ? args.syslogName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemLocallogSyslogdSetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemLocallogSyslogdSetting resources.
 */
export interface SystemLocallogSyslogdSettingState {
    cert?: pulumi.Input<string>;
    csv?: pulumi.Input<string>;
    facility?: pulumi.Input<string>;
    reliable?: pulumi.Input<string>;
    secureConnection?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    syslogName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemLocallogSyslogdSetting resource.
 */
export interface SystemLocallogSyslogdSettingArgs {
    cert?: pulumi.Input<string>;
    csv?: pulumi.Input<string>;
    facility?: pulumi.Input<string>;
    reliable?: pulumi.Input<string>;
    secureConnection?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    syslogName?: pulumi.Input<string>;
}
