// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DvmCmdAddDeviceDevice {
    admPass?: pulumi.Input<string>;
    admUsr?: pulumi.Input<string>;
    desc?: pulumi.Input<string>;
    deviceaction?: pulumi.Input<string>;
    fazquota?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    metafields?: pulumi.Input<string>;
    mgmtMode?: pulumi.Input<string>;
    mr?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    osVer?: pulumi.Input<string>;
    patch?: pulumi.Input<number>;
    platformStr?: pulumi.Input<string>;
    sn?: pulumi.Input<string>;
}

export interface DvmCmdAddDeviceGroup {
    name?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
}

export interface FmupdateFdssettingPushOverride {
    ip?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
}

export interface FmupdateFdssettingPushOverrideToClient {
    announceIps?: pulumi.Input<pulumi.Input<inputs.FmupdateFdssettingPushOverrideToClientAnnounceIp>[]>;
    status?: pulumi.Input<string>;
}

export interface FmupdateFdssettingPushOverrideToClientAnnounceIp {
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface FmupdateFdssettingPushoverridetoclientAnnounceIp {
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface FmupdateFdssettingServerOverride {
    servlists?: pulumi.Input<pulumi.Input<inputs.FmupdateFdssettingServerOverrideServlist>[]>;
    status?: pulumi.Input<string>;
}

export interface FmupdateFdssettingServerOverrideServlist {
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    serviceType?: pulumi.Input<string>;
}

export interface FmupdateFdssettingServeroverrideServlist {
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    serviceType?: pulumi.Input<string>;
}

export interface FmupdateFdssettingUpdateSchedule {
    day?: pulumi.Input<string>;
    frequency?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    times?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FmupdateFwmsettingUpgradeTimeout {
    checkStatusTimeout?: pulumi.Input<number>;
    ctrlCheckStatusTimeout?: pulumi.Input<number>;
    ctrlPutImageByFdsTimeout?: pulumi.Input<number>;
    haSyncTimeout?: pulumi.Input<number>;
    healthCheckTimeout?: pulumi.Input<number>;
    licenseCheckTimeout?: pulumi.Input<number>;
    prepareImageTimeout?: pulumi.Input<number>;
    putImageByFdsTimeout?: pulumi.Input<number>;
    putImageTimeout?: pulumi.Input<number>;
    rebootOfFsckTimeout?: pulumi.Input<number>;
    rebootOfUpgradeTimeout?: pulumi.Input<number>;
    retrieveTimeout?: pulumi.Input<number>;
    rpcTimeout?: pulumi.Input<number>;
    totalTimeout?: pulumi.Input<number>;
}

export interface FmupdateServeraccessprioritiesPrivateServer {
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    timeZone?: pulumi.Input<number>;
}

export interface FmupdateWebspamFgdsettingServerOverride {
    servlists?: pulumi.Input<pulumi.Input<inputs.FmupdateWebspamFgdsettingServerOverrideServlist>[]>;
    status?: pulumi.Input<string>;
}

export interface FmupdateWebspamFgdsettingServerOverrideServlist {
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    serviceType?: pulumi.Input<string>;
}

export interface SystemAdminGroupMember {
    name?: pulumi.Input<string>;
}

export interface SystemAdminLdapFazadom {
    adomName?: pulumi.Input<string>;
}

export interface SystemAdminProfileDatamaskCustomField {
    fieldCategories?: pulumi.Input<pulumi.Input<string>[]>;
    fieldName?: pulumi.Input<string>;
    fieldStatus?: pulumi.Input<string>;
    fieldType?: pulumi.Input<string>;
}

export interface SystemAdminProfileWritePasswdProfile {
    profileid?: pulumi.Input<string>;
}

export interface SystemAdminProfileWritePasswdUserList {
    userid?: pulumi.Input<string>;
}

export interface SystemAdminUserAdomExclude {
    adomName?: pulumi.Input<string>;
}

export interface SystemAdminUserDashboard {
    column?: pulumi.Input<number>;
    diskioContentType?: pulumi.Input<string>;
    diskioPeriod?: pulumi.Input<string>;
    logRatePeriod?: pulumi.Input<string>;
    logRateTopn?: pulumi.Input<string>;
    logRateType?: pulumi.Input<string>;
    moduleid?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    numEntries?: pulumi.Input<number>;
    refreshInterval?: pulumi.Input<number>;
    resCpuDisplay?: pulumi.Input<string>;
    resPeriod?: pulumi.Input<string>;
    resViewType?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tabid?: pulumi.Input<number>;
    timePeriod?: pulumi.Input<string>;
    widgetType?: pulumi.Input<string>;
}

export interface SystemAdminUserDashboardTab {
    name?: pulumi.Input<string>;
    tabid?: pulumi.Input<number>;
}

export interface SystemAdminUserFazadom {
    adomName?: pulumi.Input<string>;
}

export interface SystemAdminUserMetaData {
    fieldlength?: pulumi.Input<number>;
    fieldname?: pulumi.Input<string>;
    fieldvalue?: pulumi.Input<string>;
    importance?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface SystemAdminUserPolicyBlock {
    policyBlockName?: pulumi.Input<string>;
}

export interface SystemAdminUserPolicyPackage {
    policyPackageName?: pulumi.Input<string>;
}

export interface SystemAlerteventAlertDestination {
    from?: pulumi.Input<string>;
    smtpName?: pulumi.Input<string>;
    snmpName?: pulumi.Input<string>;
    syslogName?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface SystemAutodeleteDlpFilesAutoDeletion {
    retention?: pulumi.Input<string>;
    runat?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface SystemAutodeleteLogAutoDeletion {
    retention?: pulumi.Input<string>;
    runat?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface SystemAutodeleteQuarantineFilesAutoDeletion {
    retention?: pulumi.Input<string>;
    runat?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface SystemAutodeleteReportAutoDeletion {
    retention?: pulumi.Input<string>;
    runat?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface SystemCsfFabricConnector {
    accprofile?: pulumi.Input<string>;
    configurationWriteAccess?: pulumi.Input<string>;
    serial?: pulumi.Input<string>;
}

export interface SystemCsfTrustedList {
    action?: pulumi.Input<string>;
    authorizationType?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    downstreamAuthorization?: pulumi.Input<string>;
    haMembers?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    serial?: pulumi.Input<string>;
}

export interface SystemGlobalSslCipherSuite {
    cipher?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    version?: pulumi.Input<string>;
}

export interface SystemHaPeer {
    addr?: pulumi.Input<string>;
    addrHb?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ipHb?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface SystemHaPrivatePeer {
    id?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface SystemHaVipBlock {
    id?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    vip?: pulumi.Input<string>;
    vipInterface?: pulumi.Input<string>;
}

export interface SystemInterfaceIpv6 {
    ip6Address?: pulumi.Input<string>;
    ip6Allowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    ip6Autoconf?: pulumi.Input<string>;
}

export interface SystemInterfaceMember {
    interfaceName?: pulumi.Input<string>;
}

export interface SystemLogRatelimitDevice {
    device?: pulumi.Input<string>;
    filterType?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    ratelimit?: pulumi.Input<number>;
}

export interface SystemLogRatelimitRatelimit {
    filter?: pulumi.Input<string>;
    filterType?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    ratelimit?: pulumi.Input<number>;
}

export interface SystemLogSettingsRollingAnalyzer {
    days?: pulumi.Input<pulumi.Input<string>[]>;
    delFiles?: pulumi.Input<string>;
    directory?: pulumi.Input<string>;
    fileSize?: pulumi.Input<number>;
    gzipFormat?: pulumi.Input<string>;
    hour?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip2?: pulumi.Input<string>;
    ip3?: pulumi.Input<string>;
    logFormat?: pulumi.Input<string>;
    min?: pulumi.Input<number>;
    password2s?: pulumi.Input<pulumi.Input<string>[]>;
    password3s?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    port2?: pulumi.Input<number>;
    port3?: pulumi.Input<number>;
    rollingUpgradeStatus?: pulumi.Input<number>;
    server?: pulumi.Input<string>;
    server2?: pulumi.Input<string>;
    server3?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    upload?: pulumi.Input<string>;
    uploadHour?: pulumi.Input<number>;
    uploadMode?: pulumi.Input<string>;
    uploadTrigger?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    username2?: pulumi.Input<string>;
    username3?: pulumi.Input<string>;
    when?: pulumi.Input<string>;
}

export interface SystemLogSettingsRollingLocal {
    days?: pulumi.Input<pulumi.Input<string>[]>;
    delFiles?: pulumi.Input<string>;
    directory?: pulumi.Input<string>;
    fileSize?: pulumi.Input<number>;
    gzipFormat?: pulumi.Input<string>;
    hour?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip2?: pulumi.Input<string>;
    ip3?: pulumi.Input<string>;
    logFormat?: pulumi.Input<string>;
    min?: pulumi.Input<number>;
    password2s?: pulumi.Input<pulumi.Input<string>[]>;
    password3s?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    port2?: pulumi.Input<number>;
    port3?: pulumi.Input<number>;
    rollingUpgradeStatus?: pulumi.Input<number>;
    server?: pulumi.Input<string>;
    server2?: pulumi.Input<string>;
    server3?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    upload?: pulumi.Input<string>;
    uploadHour?: pulumi.Input<number>;
    uploadMode?: pulumi.Input<string>;
    uploadTrigger?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    username2?: pulumi.Input<string>;
    username3?: pulumi.Input<string>;
    when?: pulumi.Input<string>;
}

export interface SystemLogSettingsRollingRegular {
    days?: pulumi.Input<pulumi.Input<string>[]>;
    delFiles?: pulumi.Input<string>;
    directory?: pulumi.Input<string>;
    fileSize?: pulumi.Input<number>;
    gzipFormat?: pulumi.Input<string>;
    hour?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    ip2?: pulumi.Input<string>;
    ip3?: pulumi.Input<string>;
    logFormat?: pulumi.Input<string>;
    min?: pulumi.Input<number>;
    password2s?: pulumi.Input<pulumi.Input<string>[]>;
    password3s?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    port?: pulumi.Input<number>;
    port2?: pulumi.Input<number>;
    port3?: pulumi.Input<number>;
    rollingUpgradeStatus?: pulumi.Input<number>;
    server?: pulumi.Input<string>;
    server2?: pulumi.Input<string>;
    server3?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    upload?: pulumi.Input<string>;
    uploadHour?: pulumi.Input<number>;
    uploadMode?: pulumi.Input<string>;
    uploadTrigger?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    username2?: pulumi.Input<string>;
    username3?: pulumi.Input<string>;
    when?: pulumi.Input<string>;
}

export interface SystemLogfetchClientprofileDeviceFilter {
    adom?: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    vdom?: pulumi.Input<string>;
}

export interface SystemLogfetchClientprofileLogFilter {
    field?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    oper?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SystemLogforwardDeviceFilter {
    action?: pulumi.Input<string>;
    adom?: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
}

export interface SystemLogforwardLogFieldExclusion {
    devType?: pulumi.Input<string>;
    fieldList?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    logType?: pulumi.Input<string>;
}

export interface SystemLogforwardLogFilter {
    field?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    oper?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SystemLogforwardLogMaskingCustom {
    fieldName?: pulumi.Input<string>;
    fieldType?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
}

export interface SystemNtpNtpserver {
    authentication?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    keyId?: pulumi.Input<number>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    maxpoll?: pulumi.Input<number>;
    minpoll?: pulumi.Input<number>;
    ntpv3?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
}

export interface SystemSamlFabricIdp {
    devId?: pulumi.Input<string>;
    idpCert?: pulumi.Input<string>;
    idpEntityId?: pulumi.Input<string>;
    idpSingleLogoutUrl?: pulumi.Input<string>;
    idpSingleSignOnUrl?: pulumi.Input<string>;
    idpStatus?: pulumi.Input<string>;
}

export interface SystemSamlServiceProvider {
    idpEntityId?: pulumi.Input<string>;
    idpSingleLogoutUrl?: pulumi.Input<string>;
    idpSingleSignOnUrl?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    spAdom?: pulumi.Input<string>;
    spCert?: pulumi.Input<string>;
    spEntityId?: pulumi.Input<string>;
    spProfile?: pulumi.Input<string>;
    spSingleLogoutUrl?: pulumi.Input<string>;
    spSingleSignOnUrl?: pulumi.Input<string>;
}

export interface SystemSnmpCommunityHost {
    id?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    ips?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SystemSnmpCommunityHosts6 {
    id?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
}

export interface SystemSocfabricTrustedList {
    id?: pulumi.Input<number>;
    serial?: pulumi.Input<string>;
}

export interface SystemSqlCustomIndex {
    caseSensitive?: pulumi.Input<string>;
    deviceType?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    indexField?: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
}

export interface SystemSqlCustomSkipidx {
    deviceType?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    indexField?: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
}

export interface SystemSqlTsIndexField {
    category?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface SystemWorkflowApprovalmatrixApprover {
    member?: pulumi.Input<string>;
    seqNum?: pulumi.Input<number>;
}
