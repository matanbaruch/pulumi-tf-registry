// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemAdminUser extends pulumi.CustomResource {
    /**
     * Get an existing SystemAdminUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAdminUserState, opts?: pulumi.CustomResourceOptions): SystemAdminUser {
        return new SystemAdminUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortianalyzer:index/systemAdminUser:SystemAdminUser';

    /**
     * Returns true if the given object is an instance of SystemAdminUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAdminUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAdminUser.__pulumiType;
    }

    public readonly adomAccess!: pulumi.Output<string>;
    public readonly adomExcludes!: pulumi.Output<outputs.SystemAdminUserAdomExclude[] | undefined>;
    public readonly avatar!: pulumi.Output<string | undefined>;
    public readonly ca!: pulumi.Output<string | undefined>;
    public readonly changePassword!: pulumi.Output<string>;
    public readonly corsAllowOrigin!: pulumi.Output<string | undefined>;
    public readonly dashboardTabs!: pulumi.Output<outputs.SystemAdminUserDashboardTab[] | undefined>;
    public readonly dashboards!: pulumi.Output<outputs.SystemAdminUserDashboard[] | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly devGroup!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly emailAddress!: pulumi.Output<string | undefined>;
    public readonly extAuthAccprofileOverride!: pulumi.Output<string>;
    public readonly extAuthAdomOverride!: pulumi.Output<string>;
    public readonly extAuthGroupMatch!: pulumi.Output<string | undefined>;
    public readonly fazadoms!: pulumi.Output<outputs.SystemAdminUserFazadom[] | undefined>;
    public readonly fingerprint!: pulumi.Output<string | undefined>;
    public readonly firstName!: pulumi.Output<string | undefined>;
    public readonly forcePasswordChange!: pulumi.Output<string>;
    public readonly fortiai!: pulumi.Output<string>;
    public readonly group!: pulumi.Output<string | undefined>;
    public readonly hidden!: pulumi.Output<number | undefined>;
    public readonly ipv6Trusthost1!: pulumi.Output<string>;
    public readonly ipv6Trusthost10!: pulumi.Output<string>;
    public readonly ipv6Trusthost2!: pulumi.Output<string>;
    public readonly ipv6Trusthost3!: pulumi.Output<string>;
    public readonly ipv6Trusthost4!: pulumi.Output<string>;
    public readonly ipv6Trusthost5!: pulumi.Output<string>;
    public readonly ipv6Trusthost6!: pulumi.Output<string>;
    public readonly ipv6Trusthost7!: pulumi.Output<string>;
    public readonly ipv6Trusthost8!: pulumi.Output<string>;
    public readonly ipv6Trusthost9!: pulumi.Output<string>;
    public readonly lastName!: pulumi.Output<string | undefined>;
    public readonly ldapServer!: pulumi.Output<string | undefined>;
    public readonly loginMax!: pulumi.Output<number>;
    public readonly metaDatas!: pulumi.Output<outputs.SystemAdminUserMetaData[] | undefined>;
    public readonly mobileNumber!: pulumi.Output<string | undefined>;
    public readonly pagerNumber!: pulumi.Output<string | undefined>;
    public readonly passwordExpire!: pulumi.Output<string>;
    public readonly passwordUnitary!: pulumi.Output<string>;
    public readonly passwords!: pulumi.Output<string[] | undefined>;
    public readonly phoneNumber!: pulumi.Output<string | undefined>;
    public readonly policyBlocks!: pulumi.Output<outputs.SystemAdminUserPolicyBlock[] | undefined>;
    public readonly policyPackages!: pulumi.Output<outputs.SystemAdminUserPolicyPackage[] | undefined>;
    public readonly profileid!: pulumi.Output<string>;
    public readonly radiusServer!: pulumi.Output<string | undefined>;
    public readonly rpcPermit!: pulumi.Output<string>;
    public readonly sshPublicKey1s!: pulumi.Output<string[]>;
    public readonly sshPublicKey2s!: pulumi.Output<string[]>;
    public readonly sshPublicKey3s!: pulumi.Output<string[]>;
    public readonly subject!: pulumi.Output<string | undefined>;
    public readonly tacacsPlusServer!: pulumi.Output<string | undefined>;
    public readonly th6FromProfile!: pulumi.Output<number | undefined>;
    public readonly thFromProfile!: pulumi.Output<number | undefined>;
    public readonly trusthost10s!: pulumi.Output<string[]>;
    public readonly trusthost1s!: pulumi.Output<string[]>;
    public readonly trusthost2s!: pulumi.Output<string[]>;
    public readonly trusthost3s!: pulumi.Output<string[]>;
    public readonly trusthost4s!: pulumi.Output<string[]>;
    public readonly trusthost5s!: pulumi.Output<string[]>;
    public readonly trusthost6s!: pulumi.Output<string[]>;
    public readonly trusthost7s!: pulumi.Output<string[]>;
    public readonly trusthost8s!: pulumi.Output<string[]>;
    public readonly trusthost9s!: pulumi.Output<string[]>;
    public readonly twoFactorAuth!: pulumi.Output<string>;
    public readonly useGlobalTheme!: pulumi.Output<string>;
    public readonly userTheme!: pulumi.Output<string>;
    public readonly userType!: pulumi.Output<string>;
    public readonly userid!: pulumi.Output<string | undefined>;
    public readonly wildcard!: pulumi.Output<string>;

    /**
     * Create a SystemAdminUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAdminUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAdminUserArgs | SystemAdminUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAdminUserState | undefined;
            resourceInputs["adomAccess"] = state ? state.adomAccess : undefined;
            resourceInputs["adomExcludes"] = state ? state.adomExcludes : undefined;
            resourceInputs["avatar"] = state ? state.avatar : undefined;
            resourceInputs["ca"] = state ? state.ca : undefined;
            resourceInputs["changePassword"] = state ? state.changePassword : undefined;
            resourceInputs["corsAllowOrigin"] = state ? state.corsAllowOrigin : undefined;
            resourceInputs["dashboardTabs"] = state ? state.dashboardTabs : undefined;
            resourceInputs["dashboards"] = state ? state.dashboards : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["devGroup"] = state ? state.devGroup : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["emailAddress"] = state ? state.emailAddress : undefined;
            resourceInputs["extAuthAccprofileOverride"] = state ? state.extAuthAccprofileOverride : undefined;
            resourceInputs["extAuthAdomOverride"] = state ? state.extAuthAdomOverride : undefined;
            resourceInputs["extAuthGroupMatch"] = state ? state.extAuthGroupMatch : undefined;
            resourceInputs["fazadoms"] = state ? state.fazadoms : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["firstName"] = state ? state.firstName : undefined;
            resourceInputs["forcePasswordChange"] = state ? state.forcePasswordChange : undefined;
            resourceInputs["fortiai"] = state ? state.fortiai : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["hidden"] = state ? state.hidden : undefined;
            resourceInputs["ipv6Trusthost1"] = state ? state.ipv6Trusthost1 : undefined;
            resourceInputs["ipv6Trusthost10"] = state ? state.ipv6Trusthost10 : undefined;
            resourceInputs["ipv6Trusthost2"] = state ? state.ipv6Trusthost2 : undefined;
            resourceInputs["ipv6Trusthost3"] = state ? state.ipv6Trusthost3 : undefined;
            resourceInputs["ipv6Trusthost4"] = state ? state.ipv6Trusthost4 : undefined;
            resourceInputs["ipv6Trusthost5"] = state ? state.ipv6Trusthost5 : undefined;
            resourceInputs["ipv6Trusthost6"] = state ? state.ipv6Trusthost6 : undefined;
            resourceInputs["ipv6Trusthost7"] = state ? state.ipv6Trusthost7 : undefined;
            resourceInputs["ipv6Trusthost8"] = state ? state.ipv6Trusthost8 : undefined;
            resourceInputs["ipv6Trusthost9"] = state ? state.ipv6Trusthost9 : undefined;
            resourceInputs["lastName"] = state ? state.lastName : undefined;
            resourceInputs["ldapServer"] = state ? state.ldapServer : undefined;
            resourceInputs["loginMax"] = state ? state.loginMax : undefined;
            resourceInputs["metaDatas"] = state ? state.metaDatas : undefined;
            resourceInputs["mobileNumber"] = state ? state.mobileNumber : undefined;
            resourceInputs["pagerNumber"] = state ? state.pagerNumber : undefined;
            resourceInputs["passwordExpire"] = state ? state.passwordExpire : undefined;
            resourceInputs["passwordUnitary"] = state ? state.passwordUnitary : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["phoneNumber"] = state ? state.phoneNumber : undefined;
            resourceInputs["policyBlocks"] = state ? state.policyBlocks : undefined;
            resourceInputs["policyPackages"] = state ? state.policyPackages : undefined;
            resourceInputs["profileid"] = state ? state.profileid : undefined;
            resourceInputs["radiusServer"] = state ? state.radiusServer : undefined;
            resourceInputs["rpcPermit"] = state ? state.rpcPermit : undefined;
            resourceInputs["sshPublicKey1s"] = state ? state.sshPublicKey1s : undefined;
            resourceInputs["sshPublicKey2s"] = state ? state.sshPublicKey2s : undefined;
            resourceInputs["sshPublicKey3s"] = state ? state.sshPublicKey3s : undefined;
            resourceInputs["subject"] = state ? state.subject : undefined;
            resourceInputs["tacacsPlusServer"] = state ? state.tacacsPlusServer : undefined;
            resourceInputs["th6FromProfile"] = state ? state.th6FromProfile : undefined;
            resourceInputs["thFromProfile"] = state ? state.thFromProfile : undefined;
            resourceInputs["trusthost10s"] = state ? state.trusthost10s : undefined;
            resourceInputs["trusthost1s"] = state ? state.trusthost1s : undefined;
            resourceInputs["trusthost2s"] = state ? state.trusthost2s : undefined;
            resourceInputs["trusthost3s"] = state ? state.trusthost3s : undefined;
            resourceInputs["trusthost4s"] = state ? state.trusthost4s : undefined;
            resourceInputs["trusthost5s"] = state ? state.trusthost5s : undefined;
            resourceInputs["trusthost6s"] = state ? state.trusthost6s : undefined;
            resourceInputs["trusthost7s"] = state ? state.trusthost7s : undefined;
            resourceInputs["trusthost8s"] = state ? state.trusthost8s : undefined;
            resourceInputs["trusthost9s"] = state ? state.trusthost9s : undefined;
            resourceInputs["twoFactorAuth"] = state ? state.twoFactorAuth : undefined;
            resourceInputs["useGlobalTheme"] = state ? state.useGlobalTheme : undefined;
            resourceInputs["userTheme"] = state ? state.userTheme : undefined;
            resourceInputs["userType"] = state ? state.userType : undefined;
            resourceInputs["userid"] = state ? state.userid : undefined;
            resourceInputs["wildcard"] = state ? state.wildcard : undefined;
        } else {
            const args = argsOrState as SystemAdminUserArgs | undefined;
            resourceInputs["adomAccess"] = args ? args.adomAccess : undefined;
            resourceInputs["adomExcludes"] = args ? args.adomExcludes : undefined;
            resourceInputs["avatar"] = args ? args.avatar : undefined;
            resourceInputs["ca"] = args ? args.ca : undefined;
            resourceInputs["changePassword"] = args ? args.changePassword : undefined;
            resourceInputs["corsAllowOrigin"] = args ? args.corsAllowOrigin : undefined;
            resourceInputs["dashboardTabs"] = args ? args.dashboardTabs : undefined;
            resourceInputs["dashboards"] = args ? args.dashboards : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["devGroup"] = args ? args.devGroup : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["emailAddress"] = args ? args.emailAddress : undefined;
            resourceInputs["extAuthAccprofileOverride"] = args ? args.extAuthAccprofileOverride : undefined;
            resourceInputs["extAuthAdomOverride"] = args ? args.extAuthAdomOverride : undefined;
            resourceInputs["extAuthGroupMatch"] = args ? args.extAuthGroupMatch : undefined;
            resourceInputs["fazadoms"] = args ? args.fazadoms : undefined;
            resourceInputs["fingerprint"] = args ? args.fingerprint : undefined;
            resourceInputs["firstName"] = args ? args.firstName : undefined;
            resourceInputs["forcePasswordChange"] = args ? args.forcePasswordChange : undefined;
            resourceInputs["fortiai"] = args ? args.fortiai : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["hidden"] = args ? args.hidden : undefined;
            resourceInputs["ipv6Trusthost1"] = args ? args.ipv6Trusthost1 : undefined;
            resourceInputs["ipv6Trusthost10"] = args ? args.ipv6Trusthost10 : undefined;
            resourceInputs["ipv6Trusthost2"] = args ? args.ipv6Trusthost2 : undefined;
            resourceInputs["ipv6Trusthost3"] = args ? args.ipv6Trusthost3 : undefined;
            resourceInputs["ipv6Trusthost4"] = args ? args.ipv6Trusthost4 : undefined;
            resourceInputs["ipv6Trusthost5"] = args ? args.ipv6Trusthost5 : undefined;
            resourceInputs["ipv6Trusthost6"] = args ? args.ipv6Trusthost6 : undefined;
            resourceInputs["ipv6Trusthost7"] = args ? args.ipv6Trusthost7 : undefined;
            resourceInputs["ipv6Trusthost8"] = args ? args.ipv6Trusthost8 : undefined;
            resourceInputs["ipv6Trusthost9"] = args ? args.ipv6Trusthost9 : undefined;
            resourceInputs["lastName"] = args ? args.lastName : undefined;
            resourceInputs["ldapServer"] = args ? args.ldapServer : undefined;
            resourceInputs["loginMax"] = args ? args.loginMax : undefined;
            resourceInputs["metaDatas"] = args ? args.metaDatas : undefined;
            resourceInputs["mobileNumber"] = args ? args.mobileNumber : undefined;
            resourceInputs["pagerNumber"] = args ? args.pagerNumber : undefined;
            resourceInputs["passwordExpire"] = args ? args.passwordExpire : undefined;
            resourceInputs["passwordUnitary"] = args ? args.passwordUnitary : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["phoneNumber"] = args ? args.phoneNumber : undefined;
            resourceInputs["policyBlocks"] = args ? args.policyBlocks : undefined;
            resourceInputs["policyPackages"] = args ? args.policyPackages : undefined;
            resourceInputs["profileid"] = args ? args.profileid : undefined;
            resourceInputs["radiusServer"] = args ? args.radiusServer : undefined;
            resourceInputs["rpcPermit"] = args ? args.rpcPermit : undefined;
            resourceInputs["sshPublicKey1s"] = args ? args.sshPublicKey1s : undefined;
            resourceInputs["sshPublicKey2s"] = args ? args.sshPublicKey2s : undefined;
            resourceInputs["sshPublicKey3s"] = args ? args.sshPublicKey3s : undefined;
            resourceInputs["subject"] = args ? args.subject : undefined;
            resourceInputs["tacacsPlusServer"] = args ? args.tacacsPlusServer : undefined;
            resourceInputs["th6FromProfile"] = args ? args.th6FromProfile : undefined;
            resourceInputs["thFromProfile"] = args ? args.thFromProfile : undefined;
            resourceInputs["trusthost10s"] = args ? args.trusthost10s : undefined;
            resourceInputs["trusthost1s"] = args ? args.trusthost1s : undefined;
            resourceInputs["trusthost2s"] = args ? args.trusthost2s : undefined;
            resourceInputs["trusthost3s"] = args ? args.trusthost3s : undefined;
            resourceInputs["trusthost4s"] = args ? args.trusthost4s : undefined;
            resourceInputs["trusthost5s"] = args ? args.trusthost5s : undefined;
            resourceInputs["trusthost6s"] = args ? args.trusthost6s : undefined;
            resourceInputs["trusthost7s"] = args ? args.trusthost7s : undefined;
            resourceInputs["trusthost8s"] = args ? args.trusthost8s : undefined;
            resourceInputs["trusthost9s"] = args ? args.trusthost9s : undefined;
            resourceInputs["twoFactorAuth"] = args ? args.twoFactorAuth : undefined;
            resourceInputs["useGlobalTheme"] = args ? args.useGlobalTheme : undefined;
            resourceInputs["userTheme"] = args ? args.userTheme : undefined;
            resourceInputs["userType"] = args ? args.userType : undefined;
            resourceInputs["userid"] = args ? args.userid : undefined;
            resourceInputs["wildcard"] = args ? args.wildcard : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemAdminUser.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemAdminUser resources.
 */
export interface SystemAdminUserState {
    adomAccess?: pulumi.Input<string>;
    adomExcludes?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserAdomExclude>[]>;
    avatar?: pulumi.Input<string>;
    ca?: pulumi.Input<string>;
    changePassword?: pulumi.Input<string>;
    corsAllowOrigin?: pulumi.Input<string>;
    dashboardTabs?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserDashboardTab>[]>;
    dashboards?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserDashboard>[]>;
    description?: pulumi.Input<string>;
    devGroup?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    emailAddress?: pulumi.Input<string>;
    extAuthAccprofileOverride?: pulumi.Input<string>;
    extAuthAdomOverride?: pulumi.Input<string>;
    extAuthGroupMatch?: pulumi.Input<string>;
    fazadoms?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserFazadom>[]>;
    fingerprint?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    forcePasswordChange?: pulumi.Input<string>;
    fortiai?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    hidden?: pulumi.Input<number>;
    ipv6Trusthost1?: pulumi.Input<string>;
    ipv6Trusthost10?: pulumi.Input<string>;
    ipv6Trusthost2?: pulumi.Input<string>;
    ipv6Trusthost3?: pulumi.Input<string>;
    ipv6Trusthost4?: pulumi.Input<string>;
    ipv6Trusthost5?: pulumi.Input<string>;
    ipv6Trusthost6?: pulumi.Input<string>;
    ipv6Trusthost7?: pulumi.Input<string>;
    ipv6Trusthost8?: pulumi.Input<string>;
    ipv6Trusthost9?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    ldapServer?: pulumi.Input<string>;
    loginMax?: pulumi.Input<number>;
    metaDatas?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserMetaData>[]>;
    mobileNumber?: pulumi.Input<string>;
    pagerNumber?: pulumi.Input<string>;
    passwordExpire?: pulumi.Input<string>;
    passwordUnitary?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    phoneNumber?: pulumi.Input<string>;
    policyBlocks?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserPolicyBlock>[]>;
    policyPackages?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserPolicyPackage>[]>;
    profileid?: pulumi.Input<string>;
    radiusServer?: pulumi.Input<string>;
    rpcPermit?: pulumi.Input<string>;
    sshPublicKey1s?: pulumi.Input<pulumi.Input<string>[]>;
    sshPublicKey2s?: pulumi.Input<pulumi.Input<string>[]>;
    sshPublicKey3s?: pulumi.Input<pulumi.Input<string>[]>;
    subject?: pulumi.Input<string>;
    tacacsPlusServer?: pulumi.Input<string>;
    th6FromProfile?: pulumi.Input<number>;
    thFromProfile?: pulumi.Input<number>;
    trusthost10s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost1s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost2s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost3s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost4s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost5s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost6s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost7s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost8s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost9s?: pulumi.Input<pulumi.Input<string>[]>;
    twoFactorAuth?: pulumi.Input<string>;
    useGlobalTheme?: pulumi.Input<string>;
    userTheme?: pulumi.Input<string>;
    userType?: pulumi.Input<string>;
    userid?: pulumi.Input<string>;
    wildcard?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemAdminUser resource.
 */
export interface SystemAdminUserArgs {
    adomAccess?: pulumi.Input<string>;
    adomExcludes?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserAdomExclude>[]>;
    avatar?: pulumi.Input<string>;
    ca?: pulumi.Input<string>;
    changePassword?: pulumi.Input<string>;
    corsAllowOrigin?: pulumi.Input<string>;
    dashboardTabs?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserDashboardTab>[]>;
    dashboards?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserDashboard>[]>;
    description?: pulumi.Input<string>;
    devGroup?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    emailAddress?: pulumi.Input<string>;
    extAuthAccprofileOverride?: pulumi.Input<string>;
    extAuthAdomOverride?: pulumi.Input<string>;
    extAuthGroupMatch?: pulumi.Input<string>;
    fazadoms?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserFazadom>[]>;
    fingerprint?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    forcePasswordChange?: pulumi.Input<string>;
    fortiai?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    hidden?: pulumi.Input<number>;
    ipv6Trusthost1?: pulumi.Input<string>;
    ipv6Trusthost10?: pulumi.Input<string>;
    ipv6Trusthost2?: pulumi.Input<string>;
    ipv6Trusthost3?: pulumi.Input<string>;
    ipv6Trusthost4?: pulumi.Input<string>;
    ipv6Trusthost5?: pulumi.Input<string>;
    ipv6Trusthost6?: pulumi.Input<string>;
    ipv6Trusthost7?: pulumi.Input<string>;
    ipv6Trusthost8?: pulumi.Input<string>;
    ipv6Trusthost9?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    ldapServer?: pulumi.Input<string>;
    loginMax?: pulumi.Input<number>;
    metaDatas?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserMetaData>[]>;
    mobileNumber?: pulumi.Input<string>;
    pagerNumber?: pulumi.Input<string>;
    passwordExpire?: pulumi.Input<string>;
    passwordUnitary?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    phoneNumber?: pulumi.Input<string>;
    policyBlocks?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserPolicyBlock>[]>;
    policyPackages?: pulumi.Input<pulumi.Input<inputs.SystemAdminUserPolicyPackage>[]>;
    profileid?: pulumi.Input<string>;
    radiusServer?: pulumi.Input<string>;
    rpcPermit?: pulumi.Input<string>;
    sshPublicKey1s?: pulumi.Input<pulumi.Input<string>[]>;
    sshPublicKey2s?: pulumi.Input<pulumi.Input<string>[]>;
    sshPublicKey3s?: pulumi.Input<pulumi.Input<string>[]>;
    subject?: pulumi.Input<string>;
    tacacsPlusServer?: pulumi.Input<string>;
    th6FromProfile?: pulumi.Input<number>;
    thFromProfile?: pulumi.Input<number>;
    trusthost10s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost1s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost2s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost3s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost4s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost5s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost6s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost7s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost8s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost9s?: pulumi.Input<pulumi.Input<string>[]>;
    twoFactorAuth?: pulumi.Input<string>;
    useGlobalTheme?: pulumi.Input<string>;
    userTheme?: pulumi.Input<string>;
    userType?: pulumi.Input<string>;
    userid?: pulumi.Input<string>;
    wildcard?: pulumi.Input<string>;
}
