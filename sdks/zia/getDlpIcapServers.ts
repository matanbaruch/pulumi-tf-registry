// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDlpIcapServers(args?: GetDlpIcapServersArgs, opts?: pulumi.InvokeOptions): Promise<GetDlpIcapServersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getDlpIcapServers:getDlpIcapServers", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDlpIcapServers.
 */
export interface GetDlpIcapServersArgs {
    name?: string;
}

/**
 * A collection of values returned by getDlpIcapServers.
 */
export interface GetDlpIcapServersResult {
    readonly id: number;
    readonly name?: string;
    readonly status: string;
    readonly url: string;
}
export function getDlpIcapServersOutput(args?: GetDlpIcapServersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDlpIcapServersResult> {
    return pulumi.output(args).apply((a: any) => getDlpIcapServers(a, opts))
}

/**
 * A collection of arguments for invoking getDlpIcapServers.
 */
export interface GetDlpIcapServersOutputArgs {
    name?: pulumi.Input<string>;
}
