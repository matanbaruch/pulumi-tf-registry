// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDlpIdmProfileLite(args?: GetDlpIdmProfileLiteArgs, opts?: pulumi.InvokeOptions): Promise<GetDlpIdmProfileLiteResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getDlpIdmProfileLite:getDlpIdmProfileLite", {
        "activeOnly": args.activeOnly,
        "id": args.id,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDlpIdmProfileLite.
 */
export interface GetDlpIdmProfileLiteArgs {
    activeOnly?: boolean;
    id?: string;
    templateName?: string;
}

/**
 * A collection of values returned by getDlpIdmProfileLite.
 */
export interface GetDlpIdmProfileLiteResult {
    readonly activeOnly?: boolean;
    readonly clientVms: outputs.GetDlpIdmProfileLiteClientVm[];
    readonly id: string;
    readonly lastModifiedBies: outputs.GetDlpIdmProfileLiteLastModifiedBy[];
    readonly lastModifiedTime: number;
    readonly numDocuments: number;
    readonly profileId: number;
    readonly templateName?: string;
}
export function getDlpIdmProfileLiteOutput(args?: GetDlpIdmProfileLiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDlpIdmProfileLiteResult> {
    return pulumi.output(args).apply((a: any) => getDlpIdmProfileLite(a, opts))
}

/**
 * A collection of arguments for invoking getDlpIdmProfileLite.
 */
export interface GetDlpIdmProfileLiteOutputArgs {
    activeOnly?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    templateName?: pulumi.Input<string>;
}
