// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkloadGroups(args?: GetWorkloadGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkloadGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getWorkloadGroups:getWorkloadGroups", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkloadGroups.
 */
export interface GetWorkloadGroupsArgs {
    name?: string;
}

/**
 * A collection of values returned by getWorkloadGroups.
 */
export interface GetWorkloadGroupsResult {
    readonly description: string;
    readonly expression: string;
    readonly expressionJsons: outputs.GetWorkloadGroupsExpressionJson[];
    readonly id: number;
    readonly lastModifiedBies: outputs.GetWorkloadGroupsLastModifiedBy[];
    readonly lastModifiedTime: number;
    readonly name?: string;
}
export function getWorkloadGroupsOutput(args?: GetWorkloadGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkloadGroupsResult> {
    return pulumi.output(args).apply((a: any) => getWorkloadGroups(a, opts))
}

/**
 * A collection of arguments for invoking getWorkloadGroups.
 */
export interface GetWorkloadGroupsOutputArgs {
    name?: pulumi.Input<string>;
}
