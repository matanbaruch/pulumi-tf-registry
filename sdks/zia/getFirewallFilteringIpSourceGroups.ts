// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirewallFilteringIpSourceGroups(args?: GetFirewallFilteringIpSourceGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallFilteringIpSourceGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getFirewallFilteringIpSourceGroups:getFirewallFilteringIpSourceGroups", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirewallFilteringIpSourceGroups.
 */
export interface GetFirewallFilteringIpSourceGroupsArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getFirewallFilteringIpSourceGroups.
 */
export interface GetFirewallFilteringIpSourceGroupsResult {
    readonly description: string;
    readonly id: number;
    readonly ipAddresses: string[];
    readonly name: string;
}
export function getFirewallFilteringIpSourceGroupsOutput(args?: GetFirewallFilteringIpSourceGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirewallFilteringIpSourceGroupsResult> {
    return pulumi.output(args).apply((a: any) => getFirewallFilteringIpSourceGroups(a, opts))
}

/**
 * A collection of arguments for invoking getFirewallFilteringIpSourceGroups.
 */
export interface GetFirewallFilteringIpSourceGroupsOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
