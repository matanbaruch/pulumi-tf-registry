// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudAppControlRule(args?: GetCloudAppControlRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudAppControlRuleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getCloudAppControlRule:getCloudAppControlRule", {
        "id": args.id,
        "name": args.name,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudAppControlRule.
 */
export interface GetCloudAppControlRuleArgs {
    id?: number;
    name?: string;
    type?: string;
}

/**
 * A collection of values returned by getCloudAppControlRule.
 */
export interface GetCloudAppControlRuleResult {
    readonly accessControl: string;
    readonly actions: string[];
    readonly applications: string[];
    readonly browserEunTemplateId: number;
    readonly cascadingEnabled: boolean;
    readonly cbiProfiles: outputs.GetCloudAppControlRuleCbiProfile[];
    readonly departments: outputs.GetCloudAppControlRuleDepartment[];
    readonly description: string;
    readonly deviceGroups: outputs.GetCloudAppControlRuleDeviceGroup[];
    readonly deviceTrustLevels: string[];
    readonly devices: outputs.GetCloudAppControlRuleDevice[];
    readonly enforceTimeValidity: boolean;
    readonly eunEnabled: boolean;
    readonly eunTemplateId: number;
    readonly groups: outputs.GetCloudAppControlRuleGroup[];
    readonly id?: number;
    readonly labels: outputs.GetCloudAppControlRuleLabel[];
    readonly lastModifiedTime: number;
    readonly locationGroups: outputs.GetCloudAppControlRuleLocationGroup[];
    readonly locations: outputs.GetCloudAppControlRuleLocation[];
    readonly name?: string;
    readonly numberOfApplications: number;
    readonly order: number;
    readonly predefined: boolean;
    readonly rank: number;
    readonly sizeQuota: number;
    readonly state: string;
    readonly timeQuota: number;
    readonly type?: string;
    readonly userAgentTypes: string[];
    readonly users: outputs.GetCloudAppControlRuleUser[];
    readonly validityEndTime: number;
    readonly validityStartTime: number;
    readonly validityTimeZoneId: string;
}
export function getCloudAppControlRuleOutput(args?: GetCloudAppControlRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudAppControlRuleResult> {
    return pulumi.output(args).apply((a: any) => getCloudAppControlRule(a, opts))
}

/**
 * A collection of arguments for invoking getCloudAppControlRule.
 */
export interface GetCloudAppControlRuleOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
