// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGreInternalIpRangeList(args?: GetGreInternalIpRangeListArgs, opts?: pulumi.InvokeOptions): Promise<GetGreInternalIpRangeListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getGreInternalIpRangeList:getGreInternalIpRangeList", {
        "id": args.id,
        "requiredCount": args.requiredCount,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGreInternalIpRangeList.
 */
export interface GetGreInternalIpRangeListArgs {
    id?: string;
    requiredCount?: number;
}

/**
 * A collection of values returned by getGreInternalIpRangeList.
 */
export interface GetGreInternalIpRangeListResult {
    readonly id: string;
    readonly lists: outputs.GetGreInternalIpRangeListList[];
    readonly requiredCount?: number;
}
export function getGreInternalIpRangeListOutput(args?: GetGreInternalIpRangeListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGreInternalIpRangeListResult> {
    return pulumi.output(args).apply((a: any) => getGreInternalIpRangeList(a, opts))
}

/**
 * A collection of arguments for invoking getGreInternalIpRangeList.
 */
export interface GetGreInternalIpRangeListOutputArgs {
    id?: pulumi.Input<string>;
    requiredCount?: pulumi.Input<number>;
}
