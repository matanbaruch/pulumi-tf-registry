// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDlpEdmSchema(args?: GetDlpEdmSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetDlpEdmSchemaResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getDlpEdmSchema:getDlpEdmSchema", {
        "id": args.id,
        "projectName": args.projectName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDlpEdmSchema.
 */
export interface GetDlpEdmSchemaArgs {
    id?: string;
    projectName?: string;
}

/**
 * A collection of values returned by getDlpEdmSchema.
 */
export interface GetDlpEdmSchemaResult {
    readonly cellsUsed: number;
    readonly createdBies: outputs.GetDlpEdmSchemaCreatedBy[];
    readonly edmClients: outputs.GetDlpEdmSchemaEdmClient[];
    readonly fileName: string;
    readonly fileUploadStatus: string;
    readonly id: string;
    readonly lastModifiedBies: outputs.GetDlpEdmSchemaLastModifiedBy[];
    readonly lastModifiedTime: number;
    readonly origColCount: number;
    readonly originalFileName: string;
    readonly projectName?: string;
    readonly revision: number;
    readonly schedulePresent: boolean;
    readonly schedules: outputs.GetDlpEdmSchemaSchedule[];
    readonly schemaActive: boolean;
    readonly schemaId: number;
    readonly tokenLists: outputs.GetDlpEdmSchemaTokenList[];
}
export function getDlpEdmSchemaOutput(args?: GetDlpEdmSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDlpEdmSchemaResult> {
    return pulumi.output(args).apply((a: any) => getDlpEdmSchema(a, opts))
}

/**
 * A collection of arguments for invoking getDlpEdmSchema.
 */
export interface GetDlpEdmSchemaOutputArgs {
    id?: pulumi.Input<string>;
    projectName?: pulumi.Input<string>;
}
