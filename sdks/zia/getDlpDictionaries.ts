// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDlpDictionaries(args?: GetDlpDictionariesArgs, opts?: pulumi.InvokeOptions): Promise<GetDlpDictionariesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getDlpDictionaries:getDlpDictionaries", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDlpDictionaries.
 */
export interface GetDlpDictionariesArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getDlpDictionaries.
 */
export interface GetDlpDictionariesResult {
    readonly binNumbers: number[];
    readonly confidenceLevelForPredefinedDict: string;
    readonly confidenceThreshold: string;
    readonly custom: boolean;
    readonly customPhraseMatchType: string;
    readonly description: string;
    readonly dictTemplateId: number;
    readonly dictionaryType: string;
    readonly exactDataMatchDetails: outputs.GetDlpDictionariesExactDataMatchDetail[];
    readonly id: number;
    readonly idmProfileMatchAccuracies: outputs.GetDlpDictionariesIdmProfileMatchAccuracy[];
    readonly ignoreExactMatchIdmDict: boolean;
    readonly includeBinNumbers: boolean;
    readonly name: string;
    readonly nameL10nTag: boolean;
    readonly patterns: outputs.GetDlpDictionariesPattern[];
    readonly phrases: outputs.GetDlpDictionariesPhrase[];
    readonly predefinedClone: boolean;
    readonly proximity: number;
    readonly proximityLengthEnabled: boolean;
    readonly thresholdType: string;
}
export function getDlpDictionariesOutput(args?: GetDlpDictionariesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDlpDictionariesResult> {
    return pulumi.output(args).apply((a: any) => getDlpDictionaries(a, opts))
}

/**
 * A collection of arguments for invoking getDlpDictionaries.
 */
export interface GetDlpDictionariesOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
