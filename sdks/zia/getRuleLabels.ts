// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRuleLabels(args?: GetRuleLabelsArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleLabelsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getRuleLabels:getRuleLabels", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRuleLabels.
 */
export interface GetRuleLabelsArgs {
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getRuleLabels.
 */
export interface GetRuleLabelsResult {
    readonly createdBies: outputs.GetRuleLabelsCreatedBy[];
    readonly description: string;
    readonly id: number;
    readonly lastModifiedBies: outputs.GetRuleLabelsLastModifiedBy[];
    readonly lastModifiedTime: number;
    readonly name: string;
    readonly referencedRuleCount: number;
}
export function getRuleLabelsOutput(args?: GetRuleLabelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuleLabelsResult> {
    return pulumi.output(args).apply((a: any) => getRuleLabels(a, opts))
}

/**
 * A collection of arguments for invoking getRuleLabels.
 */
export interface GetRuleLabelsOutputArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
