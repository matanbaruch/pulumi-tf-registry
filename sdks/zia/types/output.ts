// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ActivationStatusTimeouts {
    create?: string;
}

export interface AdminUsersAdminScopeEntities {
    ids?: number[];
}

export interface AdminUsersRole {
    id?: number;
}

export interface CloudAppControlRuleCbiProfile {
    id?: string;
    name?: string;
    url?: string;
}

export interface CloudAppControlRuleCloudAppRiskProfile {
    id: number;
}

export interface CloudAppControlRuleDepartments {
    ids?: number[];
}

export interface CloudAppControlRuleDeviceGroups {
    ids?: number[];
}

export interface CloudAppControlRuleDevices {
    ids?: number[];
}

export interface CloudAppControlRuleGroups {
    ids?: number[];
}

export interface CloudAppControlRuleLabels {
    ids?: number[];
}

export interface CloudAppControlRuleLocationGroups {
    ids?: number[];
}

export interface CloudAppControlRuleLocations {
    ids?: number[];
}

export interface CloudAppControlRuleTenancyProfileIds {
    ids?: number[];
}

export interface CloudAppControlRuleTimeWindows {
    ids?: number[];
}

export interface CloudAppControlRuleTimeouts {
    create?: string;
    update?: string;
}

export interface CloudAppControlRuleUsers {
    ids?: number[];
}

export interface DlpDictionariesExactDataMatchDetail {
    /**
     * The unique identifier for the EDM mapping
     */
    dictionaryEdmMappingId: number;
    /**
     * The EDM template's primary field.
     */
    primaryField?: number;
    /**
     * The unique identifier for the EDM template (or schema).
     */
    schemaId: number;
    /**
     * The EDM secondary field to match on.
     */
    secondaryFieldMatchOn?: string;
    secondaryFields: number[];
}

export interface DlpDictionariesIdmProfileMatchAccuracy {
    /**
     * The action applied to a DLP dictionary using patterns
     */
    adpIdmProfiles?: outputs.DlpDictionariesIdmProfileMatchAccuracyAdpIdmProfile[];
    /**
     * The IDM template match accuracy.
     */
    matchAccuracy: string;
}

export interface DlpDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
    extensions: {[key: string]: string};
    id: number;
}

export interface DlpDictionariesPattern {
    /**
     * The action applied to a DLP dictionary using patterns
     */
    action: string;
    /**
     * DLP dictionary pattern
     */
    pattern: string;
}

export interface DlpDictionariesPhrase {
    action: string;
    phrase: string;
}

export interface DlpWebRulesAuditor {
    id: number;
}

export interface DlpWebRulesDepartments {
    ids?: number[];
}

export interface DlpWebRulesDlpEngines {
    ids?: number[];
}

export interface DlpWebRulesExcludedDepartments {
    ids?: number[];
}

export interface DlpWebRulesExcludedDomainProfiles {
    ids?: number[];
}

export interface DlpWebRulesExcludedGroups {
    ids?: number[];
}

export interface DlpWebRulesExcludedUsers {
    ids?: number[];
}

export interface DlpWebRulesGroups {
    ids?: number[];
}

export interface DlpWebRulesIcapServer {
    id: number;
}

export interface DlpWebRulesIncludedDomainProfiles {
    ids?: number[];
}

export interface DlpWebRulesLabels {
    ids?: number[];
}

export interface DlpWebRulesLocationGroups {
    ids?: number[];
}

export interface DlpWebRulesLocations {
    ids?: number[];
}

export interface DlpWebRulesNotificationTemplate {
    id: number;
}

export interface DlpWebRulesSourceIpGroups {
    ids?: number[];
}

export interface DlpWebRulesTimeWindows {
    ids?: number[];
}

export interface DlpWebRulesTimeouts {
    create?: string;
    update?: string;
}

export interface DlpWebRulesUrlCategories {
    ids?: number[];
}

export interface DlpWebRulesUsers {
    ids?: number[];
}

export interface DlpWebRulesWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: number;
    /**
     * The name of the resource.
     */
    name: string;
}

export interface FirewallFilteringNetworkServiceDestTcpPort {
    end?: number;
    start?: number;
}

export interface FirewallFilteringNetworkServiceDestUdpPort {
    end?: number;
    start?: number;
}

export interface FirewallFilteringNetworkServiceGroupsService {
    ids: number[];
}

export interface FirewallFilteringNetworkServiceSrcTcpPort {
    end?: number;
    start?: number;
}

export interface FirewallFilteringNetworkServiceSrcUdpPort {
    end?: number;
    start?: number;
}

export interface FirewallFilteringRuleAppServiceGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleAppServices {
    ids?: number[];
}

export interface FirewallFilteringRuleDepartments {
    ids?: number[];
}

export interface FirewallFilteringRuleDestIpGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleDeviceGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleDevices {
    ids?: number[];
}

export interface FirewallFilteringRuleGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleLabels {
    ids?: number[];
}

export interface FirewallFilteringRuleLocationGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleLocations {
    ids?: number[];
}

export interface FirewallFilteringRuleNwApplicationGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleNwServiceGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleNwServices {
    ids?: number[];
}

export interface FirewallFilteringRuleSrcIpGroups {
    ids?: number[];
}

export interface FirewallFilteringRuleTimeWindows {
    ids?: number[];
}

export interface FirewallFilteringRuleTimeouts {
    create?: string;
    update?: string;
}

export interface FirewallFilteringRuleUsers {
    ids?: number[];
}

export interface FirewallFilteringRuleWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: number;
    /**
     * The name of the resource.
     */
    name: string;
}

export interface FirewallFilteringRuleZpaAppSegment {
    /**
     * External ID of the application segment.
     */
    externalId: string;
    /**
     * Name of the application segment.
     */
    name: string;
}

export interface ForwardingControlRuleAppServiceGroups {
    ids?: number[];
}

export interface ForwardingControlRuleDepartments {
    ids?: number[];
}

export interface ForwardingControlRuleDestIpGroups {
    ids?: number[];
}

export interface ForwardingControlRuleDestIpv6Groups {
    ids?: number[];
}

export interface ForwardingControlRuleEcGroups {
    ids?: number[];
}

export interface ForwardingControlRuleGroups {
    ids?: number[];
}

export interface ForwardingControlRuleLabels {
    ids?: number[];
}

export interface ForwardingControlRuleLocationGroups {
    ids?: number[];
}

export interface ForwardingControlRuleLocations {
    ids?: number[];
}

export interface ForwardingControlRuleNwApplicationGroups {
    ids?: number[];
}

export interface ForwardingControlRuleNwServiceGroups {
    ids?: number[];
}

export interface ForwardingControlRuleNwServices {
    ids?: number[];
}

export interface ForwardingControlRuleProxyGateway {
    /**
     * The unique identifier for the resource.
     */
    id: number;
    /**
     * The name of the resource.
     */
    name: string;
}

export interface ForwardingControlRuleSrcIpGroups {
    ids?: number[];
}

export interface ForwardingControlRuleSrcIpv6Groups {
    ids?: number[];
}

export interface ForwardingControlRuleTimeouts {
    create?: string;
    update?: string;
}

export interface ForwardingControlRuleUsers {
    ids?: number[];
}

export interface ForwardingControlRuleZpaAppSegment {
    /**
     * External ID of the application segment.
     */
    externalId: string;
    /**
     * Name of the application segment.
     */
    name: string;
}

export interface ForwardingControlRuleZpaApplicationSegmentGroups {
    ids?: number[];
}

export interface ForwardingControlRuleZpaApplicationSegments {
    ids?: number[];
}

export interface ForwardingControlRuleZpaGateway {
    /**
     * The unique identifier for the resource.
     */
    id: number;
    /**
     * The name of the resource.
     */
    name: string;
}

export interface ForwardingControlZpaGatewayZpaAppSegment {
    /**
     * External ID of the application segment.
     */
    externalId: string;
    /**
     * Name of the application segment.
     */
    name: string;
}

export interface ForwardingControlZpaGatewayZpaServerGroup {
    /**
     * ID of the ZPA Gateway.
     */
    externalId: string;
    /**
     * Name of the ZPA Gateway.
     */
    name: string;
}

export interface GetAdminUsersAdminScope {
    scopeEntities: outputs.GetAdminUsersAdminScopeScopeEntity[];
    scopeGroupMemberEntities: outputs.GetAdminUsersAdminScopeScopeGroupMemberEntity[];
    type: string;
}

export interface GetAdminUsersAdminScopeScopeEntity {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetAdminUsersAdminScopeScopeGroupMemberEntity {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetAdminUsersExecMobileAppToken {
    cloud: string;
    createTime: number;
    deviceId: string;
    deviceName: string;
    name: string;
    orgId: number;
    token: string;
    tokenExpiry: number;
    tokenId: string;
}

export interface GetAdminUsersRole {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleCbiProfile {
    defaultProfile: boolean;
    id: string;
    name: string;
    sandboxMode: boolean;
    url: string;
}

export interface GetCloudAppControlRuleDepartment {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleDevice {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleDeviceGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleLabel {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleLocation {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleLocationGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetCloudAppControlRuleUser {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpDictionariesExactDataMatchDetail {
    dictionaryEdmMappingId: number;
    primaryField: number;
    schemaId: number;
    secondaryFieldMatchOn: string;
    secondaryFields: number[];
}

export interface GetDlpDictionariesIdmProfileMatchAccuracy {
    adpIdmProfiles: outputs.GetDlpDictionariesIdmProfileMatchAccuracyAdpIdmProfile[];
    matchAccuracy: string;
}

export interface GetDlpDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpDictionariesPattern {
    action: string;
    pattern: string;
}

export interface GetDlpDictionariesPhrase {
    action: string;
    phrase: string;
}

export interface GetDlpEdmSchemaCreatedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpEdmSchemaEdmClient {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpEdmSchemaLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpEdmSchemaSchedule {
    scheduleDayOfMonths: string[];
    scheduleDayOfWeeks: string[];
    scheduleDisabled: boolean;
    scheduleTime: number;
    scheduleType: string;
}

export interface GetDlpEdmSchemaTokenList {
    colLengthBitmap: number;
    hashFileColumnOrder: number;
    name: string;
    originalColumn: number;
    primaryKey: boolean;
    type: string;
}

export interface GetDlpIdmProfileLiteClientVm {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpIdmProfileLiteLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpIdmProfilesIdmClient {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpIdmProfilesLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesDepartment {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesDlpEngine {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesExcludedDepartment {
    extensions: {[key: string]: string};
    id: number;
}

export interface GetDlpWebRulesExcludedGroup {
    extensions: {[key: string]: string};
    id: number;
}

export interface GetDlpWebRulesExcludedUser {
    extensions: {[key: string]: string};
    id: number;
}

export interface GetDlpWebRulesGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesLabel {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesLocation {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesLocationGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesSourceIpGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesTimeWindow {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesUrlCategory {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesUser {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetDlpWebRulesWorkloadGroup {
    description: string;
    id: number;
    lastModifiedBies: outputs.GetDlpWebRulesWorkloadGroupLastModifiedBy[];
    lastModifiedTime: number;
    name: string;
}

export interface GetDlpWebRulesWorkloadGroupLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringNetworkServiceDestTcpPort {
    end: number;
    start: number;
}

export interface GetFirewallFilteringNetworkServiceDestUdpPort {
    end: number;
    start: number;
}

export interface GetFirewallFilteringNetworkServiceGroupsService {
    description: string;
    id: number;
    isNameL10nTag: boolean;
    name: string;
}

export interface GetFirewallFilteringNetworkServiceSrcTcpPort {
    end: number;
    start: number;
}

export interface GetFirewallFilteringNetworkServiceSrcUdpPort {
    end: number;
    start: number;
}

export interface GetFirewallFilteringRuleAppService {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleAppServiceGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleDepartment {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleDestIpGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleDevice {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleDeviceGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleLabel {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleLocation {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleLocationGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleNwApplicationGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleNwService {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleNwServiceGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleSrcIpGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleTimeWindow {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleUser {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleWorkloadGroup {
    description: string;
    expression: string;
    expressionJsons: outputs.GetFirewallFilteringRuleWorkloadGroupExpressionJson[];
    id: number;
    lastModifiedBies: outputs.GetFirewallFilteringRuleWorkloadGroupLastModifiedBy[];
    lastModifiedTime: number;
    name: string;
}

export interface GetFirewallFilteringRuleWorkloadGroupExpressionJson {
    expressionContainers: outputs.GetFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainer[];
}

export interface GetFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainer {
    operator: string;
    tagContainers: outputs.GetFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainer[];
    tagType: string;
}

export interface GetFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainer {
    operator: string;
    tags: outputs.GetFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainerTag[];
}

export interface GetFirewallFilteringRuleWorkloadGroupExpressionJsonExpressionContainerTagContainerTag {
    key: string;
    value: string;
}

export interface GetFirewallFilteringRuleWorkloadGroupLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetFirewallFilteringRuleZpaAppSegment {
    externalId: string;
    id: number;
    name: string;
}

export interface GetForwardingControlRuleDepartment {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleDestIpGroup {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleDestIpv6Group {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleDevice {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetForwardingControlRuleDeviceGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetForwardingControlRuleEcGroup {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleGroup {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleLabel {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleLocation {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleLocationGroup {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleNwApplicationGroup {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleNwService {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleNwServiceGroup {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleProxyGateway {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleSrcIpGroup {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleSrcIpv6Group {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleUser {
    id: number;
    name: string;
}

export interface GetForwardingControlRuleZpaAppSegment {
    externalId: string;
    id: number;
    name: string;
}

export interface GetForwardingControlRuleZpaApplicationSegment {
    ddescription: string;
    deleted: boolean;
    id: number;
    name: string;
    zpaId: number;
}

export interface GetForwardingControlRuleZpaApplicationSegmentGroup {
    deleted: boolean;
    id: number;
    name: string;
    zpaAppSegmentsCount: number;
    zpaId: number;
}

export interface GetForwardingControlRuleZpaGateway {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetForwardingControlZpaGatewayLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetForwardingControlZpaGatewayZpaAppSegment {
    externalId: string;
    name: string;
}

export interface GetForwardingControlZpaGatewayZpaServerGroup {
    externalId: string;
    name: string;
}

export interface GetGreInternalIpRangeListList {
    endIpAddress: string;
    startIpAddress: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteria {
    cities?: outputs.GetLocationGroupsDynamicLocationGroupCriteriaCity[];
    countries?: string[];
    enableBandwidthControl: boolean;
    enableCaution: boolean;
    enableXffForwarding: boolean;
    enforceAup: boolean;
    enforceAuthentication: boolean;
    enforceFirewallControl: boolean;
    managedBies: outputs.GetLocationGroupsDynamicLocationGroupCriteriaManagedBy[];
    names?: outputs.GetLocationGroupsDynamicLocationGroupCriteriaName[];
    profiles?: string[];
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaCity {
    matchString?: string;
    matchType?: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaManagedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaName {
    matchString?: string;
    matchType?: string;
}

export interface GetLocationGroupsLastModUser {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetLocationGroupsLocation {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetLocationManagementVpnCredential {
    comments: string;
    fqdn: string;
    id: number;
    locations: outputs.GetLocationManagementVpnCredentialLocation[];
    managedBies: outputs.GetLocationManagementVpnCredentialManagedBy[];
    preSharedKey: string;
    type: string;
}

export interface GetLocationManagementVpnCredentialLocation {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetLocationManagementVpnCredentialManagedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetRuleLabelsCreatedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetRuleLabelsLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetSandboxReportClassification {
    category: string;
    detectedMalware: string;
    score: number;
    type: string;
}

export interface GetSandboxReportExploit {
    risk: string;
    signature: string;
    signatureSources: string[];
}

export interface GetSandboxReportFileProperty {
    digitalCerificate: string;
    fileSize: number;
    fileType: string;
    issuer: string;
    md5: string;
    rootCa: string;
    sha1: string;
    sha256: string;
    ssdeep: string;
}

export interface GetSandboxReportNetworking {
    risk: string;
    signature: string;
    signatureSources: string[];
}

export interface GetSandboxReportOrigin {
    country: string;
    language: string;
    risk: string;
}

export interface GetSandboxReportPersistence {
    risk: string;
    signature: string;
    signatureSources: string[];
}

export interface GetSandboxReportSecurityBypass {
    risk: string;
    signature: string;
    signatureSources: string[];
}

export interface GetSandboxReportSpyware {
    risk: string;
    signature: string;
    signatureSources: string[];
}

export interface GetSandboxReportStealth {
    risk: string;
    signature: string;
    signatureSources: string[];
}

export interface GetSandboxReportSummary {
    category: string;
    duration: number;
    fileType: string;
    startTime: number;
    status: string;
}

export interface GetSandboxReportSystemSummary {
    risk: string;
    signature: string;
    signatureSources: string[];
}

export interface GetTrafficForwardingGreTunnelLastModifiedBy {
    id: number;
    name: string;
}

export interface GetTrafficForwardingGreTunnelManagedBy {
    id: number;
    name: string;
}

export interface GetTrafficForwardingGreTunnelPrimaryDestVip {
    city: string;
    countryCode: string;
    datacenter: string;
    id: number;
    latitude: number;
    longitude: number;
    privateServiceEdge: boolean;
    region: string;
    virtualIp: string;
}

export interface GetTrafficForwardingGreTunnelSecondaryDestVip {
    city: string;
    countryCode: string;
    datacenter: string;
    id: number;
    latitude: number;
    longitude: number;
    privateServiceEdge: boolean;
    region: string;
    virtualIp: string;
}

export interface GetTrafficForwardingGreVipRecommendedListList {
    city: string;
    datacenter: string;
    id: number;
    latitude: number;
    longitude: number;
    privateServiceEdge: boolean;
    region: string;
    virtualIp: string;
}

export interface GetTrafficForwardingStaticIpCity {
    id: number;
    name: string;
}

export interface GetTrafficForwardingStaticIpLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetTrafficForwardingStaticIpManagedBy {
    id: number;
    name: string;
}

export interface GetTrafficForwardingVpnCredentialsLocation {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetTrafficForwardingVpnCredentialsManagedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlCategoriesScope {
    scopeEntities: outputs.GetUrlCategoriesScopeScopeEntity[];
    scopeGroupMemberEntities: outputs.GetUrlCategoriesScopeScopeGroupMemberEntity[];
    type: string;
}

export interface GetUrlCategoriesScopeScopeEntity {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlCategoriesScopeScopeGroupMemberEntity {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlCategoriesUrlKeywordCount {
    retainParentKeywordCount: number;
    retainParentUrlCount: number;
    totalKeywordCount: number;
    totalUrlCount: number;
}

export interface GetUrlFilteringRulesCbiProfile {
    id: string;
    name: string;
    url: string;
}

export interface GetUrlFilteringRulesDepartment {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesDevice {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesDeviceGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesLabel {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesLocation {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesLocationGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesOverrideGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesOverrideUser {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesSourceIpGroup {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesTimeWindow {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesUser {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUrlFilteringRulesWorkloadGroup {
    description: string;
    expression: string;
    expressionJsons: outputs.GetUrlFilteringRulesWorkloadGroupExpressionJson[];
    id: number;
    lastModifiedBies: outputs.GetUrlFilteringRulesWorkloadGroupLastModifiedBy[];
    lastModifiedTime: number;
    name: string;
}

export interface GetUrlFilteringRulesWorkloadGroupExpressionJson {
    expressionContainers: outputs.GetUrlFilteringRulesWorkloadGroupExpressionJsonExpressionContainer[];
}

export interface GetUrlFilteringRulesWorkloadGroupExpressionJsonExpressionContainer {
    operator: string;
    tagContainers: outputs.GetUrlFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer[];
    tagType: string;
}

export interface GetUrlFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainer {
    operator: string;
    tags: outputs.GetUrlFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag[];
}

export interface GetUrlFilteringRulesWorkloadGroupExpressionJsonExpressionContainerTagContainerTag {
    key: string;
    value: string;
}

export interface GetUrlFilteringRulesWorkloadGroupLastModifiedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetUserManagementDepartment {
    comments: string;
    deleted: boolean;
    id: number;
    idpId: number;
    name: string;
}

export interface GetUserManagementGroup {
    comments: string;
    id: number;
    idpId: number;
    name: string;
}

export interface GetWorkloadGroupsExpressionJson {
    expressionContainers: outputs.GetWorkloadGroupsExpressionJsonExpressionContainer[];
}

export interface GetWorkloadGroupsExpressionJsonExpressionContainer {
    operator: string;
    tagContainers: outputs.GetWorkloadGroupsExpressionJsonExpressionContainerTagContainer[];
    tagType: string;
}

export interface GetWorkloadGroupsExpressionJsonExpressionContainerTagContainer {
    operator: string;
    tags: outputs.GetWorkloadGroupsExpressionJsonExpressionContainerTagContainerTag[];
}

export interface GetWorkloadGroupsExpressionJsonExpressionContainerTagContainerTag {
    key: string;
    value: string;
}

export interface GetWorkloadGroupsLastModifiedBy {
    extensions: {[key: string]: string};
    externalId: string;
    id: number;
    name: string;
}

export interface LocationManagementDynamicLocationGroups {
    ids?: number[];
}

export interface LocationManagementStaticLocationGroups {
    ids?: number[];
}

export interface LocationManagementVpnCredential {
    comments: string;
    fqdn: string;
    id: number;
    ipAddress: string;
    preSharedKey?: string;
    type: string;
}

export interface TrafficForwardingGreTunnelPrimaryDestVip {
    /**
     * Data center information
     */
    datacenter: string;
    /**
     * GRE cluster virtual IP ID
     */
    id: number;
    /**
     * GRE cluster virtual IP address (VIP)
     */
    virtualIp: string;
}

export interface TrafficForwardingGreTunnelSecondaryDestVip {
    /**
     * Data center information
     */
    datacenter: string;
    /**
     * GRE cluster virtual IP ID
     */
    id: number;
    /**
     * GRE cluster virtual IP address (VIP)
     */
    virtualIp: string;
}

export interface UrlCategoriesScope {
    /**
     * list of scope IDs
     */
    scopeEntities?: outputs.UrlCategoriesScopeScopeEntities;
    /**
     * list of scope group member IDs
     */
    scopeGroupMemberEntities?: outputs.UrlCategoriesScopeScopeGroupMemberEntities;
    type?: string;
}

export interface UrlCategoriesScopeScopeEntities {
    ids: number[];
}

export interface UrlCategoriesScopeScopeGroupMemberEntities {
    ids: number[];
}

export interface UrlCategoriesUrlKeywordCounts {
    retainParentKeywordCount: number;
    retainParentUrlCount: number;
    totalKeywordCount: number;
    totalUrlCount: number;
}

export interface UrlFilteringRulesCbiProfile {
    id?: string;
    name?: string;
    url?: string;
}

export interface UrlFilteringRulesDepartments {
    ids?: number[];
}

export interface UrlFilteringRulesDeviceGroups {
    ids?: number[];
}

export interface UrlFilteringRulesDevices {
    ids?: number[];
}

export interface UrlFilteringRulesGroups {
    ids?: number[];
}

export interface UrlFilteringRulesLabels {
    ids?: number[];
}

export interface UrlFilteringRulesLocationGroups {
    ids?: number[];
}

export interface UrlFilteringRulesLocations {
    ids?: number[];
}

export interface UrlFilteringRulesOverrideGroups {
    ids?: number[];
}

export interface UrlFilteringRulesOverrideUsers {
    ids?: number[];
}

export interface UrlFilteringRulesSourceIpGroups {
    ids?: number[];
}

export interface UrlFilteringRulesTimeWindows {
    ids?: number[];
}

export interface UrlFilteringRulesTimeouts {
    create?: string;
    update?: string;
}

export interface UrlFilteringRulesUsers {
    ids?: number[];
}

export interface UrlFilteringRulesWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: number;
    /**
     * The name of the resource.
     */
    name: string;
}

export interface UserManagementDepartment {
    /**
     * Additional information about this department
     */
    comments: string;
    deleted: boolean;
    id?: number;
    /**
     * Identity provider (IdP) ID
     */
    idpId: number;
    /**
     * Department name
     */
    name: string;
}

export interface UserManagementGroups {
    ids?: number[];
}

