// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ActivationStatusTimeouts {
    create?: pulumi.Input<string>;
}

export interface AdminUsersAdminScopeEntities {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface AdminUsersRole {
    id?: pulumi.Input<number>;
}

export interface CloudAppControlRuleCbiProfile {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface CloudAppControlRuleCloudAppRiskProfile {
    id: pulumi.Input<number>;
}

export interface CloudAppControlRuleDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleDeviceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleDevices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleLabels {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleTenancyProfileIds {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleTimeWindows {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CloudAppControlRuleTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CloudAppControlRuleUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpDictionariesExactDataMatchDetail {
    /**
     * The unique identifier for the EDM mapping
     */
    dictionaryEdmMappingId?: pulumi.Input<number>;
    /**
     * The EDM template's primary field.
     */
    primaryField?: pulumi.Input<number>;
    /**
     * The unique identifier for the EDM template (or schema).
     */
    schemaId?: pulumi.Input<number>;
    /**
     * The EDM secondary field to match on.
     */
    secondaryFieldMatchOn?: pulumi.Input<string>;
    secondaryFields?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpDictionariesIdmProfileMatchAccuracy {
    /**
     * The action applied to a DLP dictionary using patterns
     */
    adpIdmProfiles?: pulumi.Input<pulumi.Input<inputs.DlpDictionariesIdmProfileMatchAccuracyAdpIdmProfile>[]>;
    /**
     * The IDM template match accuracy.
     */
    matchAccuracy?: pulumi.Input<string>;
}

export interface DlpDictionariesIdmProfileMatchAccuracyAdpIdmProfile {
    extensions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<number>;
}

export interface DlpDictionariesPattern {
    /**
     * The action applied to a DLP dictionary using patterns
     */
    action?: pulumi.Input<string>;
    /**
     * DLP dictionary pattern
     */
    pattern?: pulumi.Input<string>;
}

export interface DlpDictionariesPhrase {
    action?: pulumi.Input<string>;
    phrase?: pulumi.Input<string>;
}

export interface DlpWebRulesAuditor {
    id: pulumi.Input<number>;
}

export interface DlpWebRulesDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesDlpEngines {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesExcludedDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesExcludedDomainProfiles {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesExcludedGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesExcludedUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesIcapServer {
    id: pulumi.Input<number>;
}

export interface DlpWebRulesIncludedDomainProfiles {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesLabels {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesNotificationTemplate {
    id: pulumi.Input<number>;
}

export interface DlpWebRulesSourceIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesTimeWindows {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DlpWebRulesUrlCategories {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface DlpWebRulesWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    name: pulumi.Input<string>;
}

export interface FirewallFilteringNetworkServiceDestTcpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringNetworkServiceDestUdpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringNetworkServiceGroupsService {
    ids: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringNetworkServiceSrcTcpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringNetworkServiceSrcUdpPort {
    end?: pulumi.Input<number>;
    start?: pulumi.Input<number>;
}

export interface FirewallFilteringRuleAppServiceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleAppServices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDestIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDeviceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleDevices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleLabels {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleNwApplicationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleNwServiceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleNwServices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleSrcIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleTimeWindows {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallFilteringRuleUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface FirewallFilteringRuleWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    name: pulumi.Input<string>;
}

export interface FirewallFilteringRuleZpaAppSegment {
    /**
     * External ID of the application segment.
     */
    externalId: pulumi.Input<string>;
    /**
     * Name of the application segment.
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlRuleAppServiceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleDestIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleDestIpv6Groups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleEcGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleLabels {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleNwApplicationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleNwServiceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleNwServices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleProxyGateway {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlRuleSrcIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleSrcIpv6Groups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ForwardingControlRuleUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleZpaAppSegment {
    /**
     * External ID of the application segment.
     */
    externalId: pulumi.Input<string>;
    /**
     * Name of the application segment.
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlRuleZpaApplicationSegmentGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleZpaApplicationSegments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ForwardingControlRuleZpaGateway {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlZpaGatewayZpaAppSegment {
    /**
     * External ID of the application segment.
     */
    externalId: pulumi.Input<string>;
    /**
     * Name of the application segment.
     */
    name: pulumi.Input<string>;
}

export interface ForwardingControlZpaGatewayZpaServerGroup {
    /**
     * ID of the ZPA Gateway.
     */
    externalId: pulumi.Input<string>;
    /**
     * Name of the ZPA Gateway.
     */
    name: pulumi.Input<string>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteria {
    cities?: inputs.GetLocationGroupsDynamicLocationGroupCriteriaCity[];
    countries?: string[];
    enableBandwidthControl?: boolean;
    enableCaution?: boolean;
    enableXffForwarding?: boolean;
    enforceAup?: boolean;
    enforceAuthentication?: boolean;
    enforceFirewallControl?: boolean;
    managedBies?: inputs.GetLocationGroupsDynamicLocationGroupCriteriaManagedBy[];
    names?: inputs.GetLocationGroupsDynamicLocationGroupCriteriaName[];
    profiles?: string[];
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaArgs {
    cities?: pulumi.Input<pulumi.Input<inputs.GetLocationGroupsDynamicLocationGroupCriteriaCityArgs>[]>;
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    enableBandwidthControl?: pulumi.Input<boolean>;
    enableCaution?: pulumi.Input<boolean>;
    enableXffForwarding?: pulumi.Input<boolean>;
    enforceAup?: pulumi.Input<boolean>;
    enforceAuthentication?: pulumi.Input<boolean>;
    enforceFirewallControl?: pulumi.Input<boolean>;
    managedBies?: pulumi.Input<pulumi.Input<inputs.GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs>[]>;
    names?: pulumi.Input<pulumi.Input<inputs.GetLocationGroupsDynamicLocationGroupCriteriaNameArgs>[]>;
    profiles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaCity {
    matchString?: string;
    matchType?: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaCityArgs {
    matchString?: pulumi.Input<string>;
    matchType?: pulumi.Input<string>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaManagedBy {
    extensions: {[key: string]: string};
    id: number;
    name: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaManagedByArgs {
    extensions: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaName {
    matchString?: string;
    matchType?: string;
}

export interface GetLocationGroupsDynamicLocationGroupCriteriaNameArgs {
    matchString?: pulumi.Input<string>;
    matchType?: pulumi.Input<string>;
}

export interface GetSandboxReportExploit {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportExploitArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportNetworking {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportNetworkingArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportPersistence {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportPersistenceArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportSecurityBypass {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportSecurityBypassArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportSpyware {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportSpywareArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSandboxReportStealth {
    risk?: string;
    signature?: string;
    signatureSources?: string[];
}

export interface GetSandboxReportStealthArgs {
    risk?: pulumi.Input<string>;
    signature?: pulumi.Input<string>;
    signatureSources?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LocationManagementDynamicLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface LocationManagementStaticLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface LocationManagementVpnCredential {
    comments?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    ipAddress?: pulumi.Input<string>;
    preSharedKey?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface TrafficForwardingGreTunnelPrimaryDestVip {
    /**
     * Data center information
     */
    datacenter?: pulumi.Input<string>;
    /**
     * GRE cluster virtual IP ID
     */
    id?: pulumi.Input<number>;
    /**
     * GRE cluster virtual IP address (VIP)
     */
    virtualIp?: pulumi.Input<string>;
}

export interface TrafficForwardingGreTunnelSecondaryDestVip {
    /**
     * Data center information
     */
    datacenter?: pulumi.Input<string>;
    /**
     * GRE cluster virtual IP ID
     */
    id?: pulumi.Input<number>;
    /**
     * GRE cluster virtual IP address (VIP)
     */
    virtualIp?: pulumi.Input<string>;
}

export interface UrlCategoriesScope {
    /**
     * list of scope IDs
     */
    scopeEntities?: pulumi.Input<inputs.UrlCategoriesScopeScopeEntities>;
    /**
     * list of scope group member IDs
     */
    scopeGroupMemberEntities?: pulumi.Input<inputs.UrlCategoriesScopeScopeGroupMemberEntities>;
    type?: pulumi.Input<string>;
}

export interface UrlCategoriesScopeScopeEntities {
    ids: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlCategoriesScopeScopeGroupMemberEntities {
    ids: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlCategoriesUrlKeywordCounts {
    retainParentKeywordCount?: pulumi.Input<number>;
    retainParentUrlCount?: pulumi.Input<number>;
    totalKeywordCount?: pulumi.Input<number>;
    totalUrlCount?: pulumi.Input<number>;
}

export interface UrlFilteringRulesCbiProfile {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface UrlFilteringRulesDepartments {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesDeviceGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesDevices {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesLabels {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesLocationGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesLocations {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesOverrideGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesOverrideUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesSourceIpGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesTimeWindows {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface UrlFilteringRulesUsers {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface UrlFilteringRulesWorkloadGroup {
    /**
     * The unique identifier for the resource.
     */
    id: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    name: pulumi.Input<string>;
}

export interface UserManagementDepartment {
    /**
     * Additional information about this department
     */
    comments?: pulumi.Input<string>;
    deleted?: pulumi.Input<boolean>;
    id?: pulumi.Input<number>;
    /**
     * Identity provider (IdP) ID
     */
    idpId?: pulumi.Input<number>;
    /**
     * Department name
     */
    name?: pulumi.Input<string>;
}

export interface UserManagementGroups {
    ids?: pulumi.Input<pulumi.Input<number>[]>;
}
