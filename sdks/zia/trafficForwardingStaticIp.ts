// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TrafficForwardingStaticIp extends pulumi.CustomResource {
    /**
     * Get an existing TrafficForwardingStaticIp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrafficForwardingStaticIpState, opts?: pulumi.CustomResourceOptions): TrafficForwardingStaticIp {
        return new TrafficForwardingStaticIp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/trafficForwardingStaticIp:TrafficForwardingStaticIp';

    /**
     * Returns true if the given object is an instance of TrafficForwardingStaticIp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TrafficForwardingStaticIp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TrafficForwardingStaticIp.__pulumiType;
    }

    /**
     * Additional information about this static IP address
     */
    public readonly comment!: pulumi.Output<string>;
    /**
     * If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude
     * and longitude coordinates must be provided.
     */
    public readonly geoOverride!: pulumi.Output<boolean>;
    /**
     * The static IP address
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between
     * -90 and 90 degrees.
     */
    public readonly latitude!: pulumi.Output<number>;
    /**
     * Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between
     * -180 and 180 degrees.
     */
    public readonly longitude!: pulumi.Output<number>;
    /**
     * Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private
     * Service Edge associated to the organization.
     */
    public readonly routableIp!: pulumi.Output<boolean>;
    /**
     * The ID of the Static IP.
     */
    public /*out*/ readonly staticIpId!: pulumi.Output<number>;

    /**
     * Create a TrafficForwardingStaticIp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrafficForwardingStaticIpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrafficForwardingStaticIpArgs | TrafficForwardingStaticIpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TrafficForwardingStaticIpState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["geoOverride"] = state ? state.geoOverride : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["latitude"] = state ? state.latitude : undefined;
            resourceInputs["longitude"] = state ? state.longitude : undefined;
            resourceInputs["routableIp"] = state ? state.routableIp : undefined;
            resourceInputs["staticIpId"] = state ? state.staticIpId : undefined;
        } else {
            const args = argsOrState as TrafficForwardingStaticIpArgs | undefined;
            if ((!args || args.ipAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAddress'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["geoOverride"] = args ? args.geoOverride : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["latitude"] = args ? args.latitude : undefined;
            resourceInputs["longitude"] = args ? args.longitude : undefined;
            resourceInputs["routableIp"] = args ? args.routableIp : undefined;
            resourceInputs["staticIpId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TrafficForwardingStaticIp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TrafficForwardingStaticIp resources.
 */
export interface TrafficForwardingStaticIpState {
    /**
     * Additional information about this static IP address
     */
    comment?: pulumi.Input<string>;
    /**
     * If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude
     * and longitude coordinates must be provided.
     */
    geoOverride?: pulumi.Input<boolean>;
    /**
     * The static IP address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between
     * -90 and 90 degrees.
     */
    latitude?: pulumi.Input<number>;
    /**
     * Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between
     * -180 and 180 degrees.
     */
    longitude?: pulumi.Input<number>;
    /**
     * Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private
     * Service Edge associated to the organization.
     */
    routableIp?: pulumi.Input<boolean>;
    /**
     * The ID of the Static IP.
     */
    staticIpId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TrafficForwardingStaticIp resource.
 */
export interface TrafficForwardingStaticIpArgs {
    /**
     * Additional information about this static IP address
     */
    comment?: pulumi.Input<string>;
    /**
     * If not set, geographic coordinates and city are automatically determined from the IP address. Otherwise, the latitude
     * and longitude coordinates must be provided.
     */
    geoOverride?: pulumi.Input<boolean>;
    /**
     * The static IP address
     */
    ipAddress: pulumi.Input<string>;
    /**
     * Required only if the geoOverride attribute is set. Latitude with 7 digit precision after decimal point, ranges between
     * -90 and 90 degrees.
     */
    latitude?: pulumi.Input<number>;
    /**
     * Required only if the geoOverride attribute is set. Longitude with 7 digit precision after decimal point, ranges between
     * -180 and 180 degrees.
     */
    longitude?: pulumi.Input<number>;
    /**
     * Indicates whether a non-RFC 1918 IP address is publicly routable. This attribute is ignored if there is no ZIA Private
     * Service Edge associated to the organization.
     */
    routableIp?: pulumi.Input<boolean>;
}
