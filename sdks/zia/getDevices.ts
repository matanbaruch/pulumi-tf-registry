// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDevices(args?: GetDevicesArgs, opts?: pulumi.InvokeOptions): Promise<GetDevicesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getDevices:getDevices", {
        "deviceGroupType": args.deviceGroupType,
        "deviceModel": args.deviceModel,
        "hostname": args.hostname,
        "name": args.name,
        "osType": args.osType,
        "osVersion": args.osVersion,
        "ownerName": args.ownerName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesArgs {
    deviceGroupType?: string;
    deviceModel?: string;
    hostname?: string;
    name?: string;
    osType?: string;
    osVersion?: string;
    ownerName?: string;
}

/**
 * A collection of values returned by getDevices.
 */
export interface GetDevicesResult {
    readonly description: string;
    readonly deviceGroupType: string;
    readonly deviceModel: string;
    readonly hostname: string;
    readonly id: number;
    readonly name: string;
    readonly osType: string;
    readonly osVersion: string;
    readonly ownerName: string;
    readonly ownerUserId: number;
}
export function getDevicesOutput(args?: GetDevicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDevicesResult> {
    return pulumi.output(args).apply((a: any) => getDevices(a, opts))
}

/**
 * A collection of arguments for invoking getDevices.
 */
export interface GetDevicesOutputArgs {
    deviceGroupType?: pulumi.Input<string>;
    deviceModel?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    osVersion?: pulumi.Input<string>;
    ownerName?: pulumi.Input<string>;
}
