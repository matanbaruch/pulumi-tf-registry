// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ForwardingControlRule extends pulumi.CustomResource {
    /**
     * Get an existing ForwardingControlRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ForwardingControlRuleState, opts?: pulumi.CustomResourceOptions): ForwardingControlRule {
        return new ForwardingControlRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'zia:index/forwardingControlRule:ForwardingControlRule';

    /**
     * Returns true if the given object is an instance of ForwardingControlRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ForwardingControlRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ForwardingControlRule.__pulumiType;
    }

    /**
     * list of application service groups
     */
    public readonly appServiceGroups!: pulumi.Output<outputs.ForwardingControlRuleAppServiceGroups | undefined>;
    /**
     * list of departments for which rule must be applied
     */
    public readonly departments!: pulumi.Output<outputs.ForwardingControlRuleDepartments | undefined>;
    /**
     * Additional information about the forwarding rule
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of destination IP addresses or FQDNs for which the rule is applicable. CIDR notation can be used for destination IP
     * addresses. If not set, the rule is not restricted to a specific destination addresses unless specified by destCountries,
     * destIpGroups, or destIpCategories.
     */
    public readonly destAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
     * countries.
     */
    public readonly destCountries!: pulumi.Output<string[]>;
    /**
     * List of destination IP categories to which the rule applies. If not set, the rule is not restricted to specific
     * destination IP categories.
     */
    public readonly destIpCategories!: pulumi.Output<string[] | undefined>;
    /**
     * User-defined destination IP address groups to which the rule is applied. If not set, the rule is not restricted to a
     * specific destination IP address group
     */
    public readonly destIpGroups!: pulumi.Output<outputs.ForwardingControlRuleDestIpGroups | undefined>;
    /**
     * Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific
     * source IPv6 address group
     */
    public readonly destIpv6Groups!: pulumi.Output<outputs.ForwardingControlRuleDestIpv6Groups | undefined>;
    /**
     * Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
     */
    public readonly ecGroups!: pulumi.Output<outputs.ForwardingControlRuleEcGroups | undefined>;
    /**
     * The type of traffic forwarding method selected from the available options
     */
    public readonly forwardMethod!: pulumi.Output<string>;
    /**
     * list of groups for which rule must be applied
     */
    public readonly groups!: pulumi.Output<outputs.ForwardingControlRuleGroups | undefined>;
    /**
     * Labels that are applicable to the rule
     */
    public readonly labels!: pulumi.Output<outputs.ForwardingControlRuleLabels | undefined>;
    /**
     * Name-ID pairs of the location groups to which the forwarding rule applies
     */
    public readonly locationGroups!: pulumi.Output<outputs.ForwardingControlRuleLocationGroups | undefined>;
    /**
     * Name-ID pairs of the locations to which the forwarding rule applies. If not set, the rule is applied to all locations.
     */
    public readonly locations!: pulumi.Output<outputs.ForwardingControlRuleLocations | undefined>;
    /**
     * The name of the forwarding rule
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * User-defined network service application groups to which the rule applied. If not set, the rule is not restricted to a
     * specific network service application group.
     */
    public readonly nwApplicationGroups!: pulumi.Output<outputs.ForwardingControlRuleNwApplicationGroups | undefined>;
    /**
     * User-defined network service group to which the rule applies. If not set, the rule is not restricted to a specific
     * network service group.
     */
    public readonly nwServiceGroups!: pulumi.Output<outputs.ForwardingControlRuleNwServiceGroups | undefined>;
    /**
     * User-defined network services to which the rule applies. If not set, the rule is not restricted to a specific network
     * service.
     */
    public readonly nwServices!: pulumi.Output<outputs.ForwardingControlRuleNwServices | undefined>;
    /**
     * The order of execution for the forwarding rule order
     */
    public readonly order!: pulumi.Output<number>;
    /**
     * The proxy gateway for which the rule is applicable. This field is applicable only for the Proxy Chaining forwarding
     * method.
     */
    public readonly proxyGateway!: pulumi.Output<outputs.ForwardingControlRuleProxyGateway | undefined>;
    /**
     * Admin rank assigned to the forwarding rule
     */
    public readonly rank!: pulumi.Output<number | undefined>;
    /**
     * List of destination domain categories to which the rule applies
     */
    public readonly resCategories!: pulumi.Output<string[] | undefined>;
    /**
     * A unique identifier assigned to the forwarding rule
     */
    public /*out*/ readonly ruleId!: pulumi.Output<number>;
    /**
     * Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source
     * IP address group
     */
    public readonly srcIpGroups!: pulumi.Output<outputs.ForwardingControlRuleSrcIpGroups | undefined>;
    /**
     * User-defined source IP addresses for which the rule is applicable. If not set, the rule is not restricted to a specific
     * source IP address.
     */
    public readonly srcIps!: pulumi.Output<string[] | undefined>;
    /**
     * Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source
     * IPv6 address group
     */
    public readonly srcIpv6Groups!: pulumi.Output<outputs.ForwardingControlRuleSrcIpv6Groups | undefined>;
    /**
     * Determines whether the Firewall Filtering policy rule is enabled or disabled
     */
    public readonly state!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ForwardingControlRuleTimeouts | undefined>;
    /**
     * The rule type selected from the available options
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * list of users for which rule must be applied
     */
    public readonly users!: pulumi.Output<outputs.ForwardingControlRuleUsers | undefined>;
    /**
     * The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ZPA
     * Gateway forwarding method.
     */
    public readonly zpaAppSegments!: pulumi.Output<outputs.ForwardingControlRuleZpaAppSegment[] | undefined>;
    /**
     * List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the ECZPA
     * forwarding method (used for Zscaler Cloud Connector).
     */
    public readonly zpaApplicationSegmentGroups!: pulumi.Output<outputs.ForwardingControlRuleZpaApplicationSegmentGroups | undefined>;
    /**
     * List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ECZPA
     * forwarding method (used for Zscaler Cloud Connector).
     */
    public readonly zpaApplicationSegments!: pulumi.Output<outputs.ForwardingControlRuleZpaApplicationSegments | undefined>;
    /**
     * The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
     * Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
     */
    public readonly zpaGateway!: pulumi.Output<outputs.ForwardingControlRuleZpaGateway | undefined>;

    /**
     * Create a ForwardingControlRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ForwardingControlRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ForwardingControlRuleArgs | ForwardingControlRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ForwardingControlRuleState | undefined;
            resourceInputs["appServiceGroups"] = state ? state.appServiceGroups : undefined;
            resourceInputs["departments"] = state ? state.departments : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destAddresses"] = state ? state.destAddresses : undefined;
            resourceInputs["destCountries"] = state ? state.destCountries : undefined;
            resourceInputs["destIpCategories"] = state ? state.destIpCategories : undefined;
            resourceInputs["destIpGroups"] = state ? state.destIpGroups : undefined;
            resourceInputs["destIpv6Groups"] = state ? state.destIpv6Groups : undefined;
            resourceInputs["ecGroups"] = state ? state.ecGroups : undefined;
            resourceInputs["forwardMethod"] = state ? state.forwardMethod : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["locationGroups"] = state ? state.locationGroups : undefined;
            resourceInputs["locations"] = state ? state.locations : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nwApplicationGroups"] = state ? state.nwApplicationGroups : undefined;
            resourceInputs["nwServiceGroups"] = state ? state.nwServiceGroups : undefined;
            resourceInputs["nwServices"] = state ? state.nwServices : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["proxyGateway"] = state ? state.proxyGateway : undefined;
            resourceInputs["rank"] = state ? state.rank : undefined;
            resourceInputs["resCategories"] = state ? state.resCategories : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["srcIpGroups"] = state ? state.srcIpGroups : undefined;
            resourceInputs["srcIps"] = state ? state.srcIps : undefined;
            resourceInputs["srcIpv6Groups"] = state ? state.srcIpv6Groups : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["zpaAppSegments"] = state ? state.zpaAppSegments : undefined;
            resourceInputs["zpaApplicationSegmentGroups"] = state ? state.zpaApplicationSegmentGroups : undefined;
            resourceInputs["zpaApplicationSegments"] = state ? state.zpaApplicationSegments : undefined;
            resourceInputs["zpaGateway"] = state ? state.zpaGateway : undefined;
        } else {
            const args = argsOrState as ForwardingControlRuleArgs | undefined;
            if ((!args || args.forwardMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardMethod'");
            }
            if ((!args || args.order === undefined) && !opts.urn) {
                throw new Error("Missing required property 'order'");
            }
            resourceInputs["appServiceGroups"] = args ? args.appServiceGroups : undefined;
            resourceInputs["departments"] = args ? args.departments : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destAddresses"] = args ? args.destAddresses : undefined;
            resourceInputs["destCountries"] = args ? args.destCountries : undefined;
            resourceInputs["destIpCategories"] = args ? args.destIpCategories : undefined;
            resourceInputs["destIpGroups"] = args ? args.destIpGroups : undefined;
            resourceInputs["destIpv6Groups"] = args ? args.destIpv6Groups : undefined;
            resourceInputs["ecGroups"] = args ? args.ecGroups : undefined;
            resourceInputs["forwardMethod"] = args ? args.forwardMethod : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["locationGroups"] = args ? args.locationGroups : undefined;
            resourceInputs["locations"] = args ? args.locations : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nwApplicationGroups"] = args ? args.nwApplicationGroups : undefined;
            resourceInputs["nwServiceGroups"] = args ? args.nwServiceGroups : undefined;
            resourceInputs["nwServices"] = args ? args.nwServices : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["proxyGateway"] = args ? args.proxyGateway : undefined;
            resourceInputs["rank"] = args ? args.rank : undefined;
            resourceInputs["resCategories"] = args ? args.resCategories : undefined;
            resourceInputs["srcIpGroups"] = args ? args.srcIpGroups : undefined;
            resourceInputs["srcIps"] = args ? args.srcIps : undefined;
            resourceInputs["srcIpv6Groups"] = args ? args.srcIpv6Groups : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["zpaAppSegments"] = args ? args.zpaAppSegments : undefined;
            resourceInputs["zpaApplicationSegmentGroups"] = args ? args.zpaApplicationSegmentGroups : undefined;
            resourceInputs["zpaApplicationSegments"] = args ? args.zpaApplicationSegments : undefined;
            resourceInputs["zpaGateway"] = args ? args.zpaGateway : undefined;
            resourceInputs["ruleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ForwardingControlRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ForwardingControlRule resources.
 */
export interface ForwardingControlRuleState {
    /**
     * list of application service groups
     */
    appServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleAppServiceGroups>;
    /**
     * list of departments for which rule must be applied
     */
    departments?: pulumi.Input<inputs.ForwardingControlRuleDepartments>;
    /**
     * Additional information about the forwarding rule
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or FQDNs for which the rule is applicable. CIDR notation can be used for destination IP
     * addresses. If not set, the rule is not restricted to a specific destination addresses unless specified by destCountries,
     * destIpGroups, or destIpCategories.
     */
    destAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
     * countries.
     */
    destCountries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination IP categories to which the rule applies. If not set, the rule is not restricted to specific
     * destination IP categories.
     */
    destIpCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-defined destination IP address groups to which the rule is applied. If not set, the rule is not restricted to a
     * specific destination IP address group
     */
    destIpGroups?: pulumi.Input<inputs.ForwardingControlRuleDestIpGroups>;
    /**
     * Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific
     * source IPv6 address group
     */
    destIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleDestIpv6Groups>;
    /**
     * Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
     */
    ecGroups?: pulumi.Input<inputs.ForwardingControlRuleEcGroups>;
    /**
     * The type of traffic forwarding method selected from the available options
     */
    forwardMethod?: pulumi.Input<string>;
    /**
     * list of groups for which rule must be applied
     */
    groups?: pulumi.Input<inputs.ForwardingControlRuleGroups>;
    /**
     * Labels that are applicable to the rule
     */
    labels?: pulumi.Input<inputs.ForwardingControlRuleLabels>;
    /**
     * Name-ID pairs of the location groups to which the forwarding rule applies
     */
    locationGroups?: pulumi.Input<inputs.ForwardingControlRuleLocationGroups>;
    /**
     * Name-ID pairs of the locations to which the forwarding rule applies. If not set, the rule is applied to all locations.
     */
    locations?: pulumi.Input<inputs.ForwardingControlRuleLocations>;
    /**
     * The name of the forwarding rule
     */
    name?: pulumi.Input<string>;
    /**
     * User-defined network service application groups to which the rule applied. If not set, the rule is not restricted to a
     * specific network service application group.
     */
    nwApplicationGroups?: pulumi.Input<inputs.ForwardingControlRuleNwApplicationGroups>;
    /**
     * User-defined network service group to which the rule applies. If not set, the rule is not restricted to a specific
     * network service group.
     */
    nwServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleNwServiceGroups>;
    /**
     * User-defined network services to which the rule applies. If not set, the rule is not restricted to a specific network
     * service.
     */
    nwServices?: pulumi.Input<inputs.ForwardingControlRuleNwServices>;
    /**
     * The order of execution for the forwarding rule order
     */
    order?: pulumi.Input<number>;
    /**
     * The proxy gateway for which the rule is applicable. This field is applicable only for the Proxy Chaining forwarding
     * method.
     */
    proxyGateway?: pulumi.Input<inputs.ForwardingControlRuleProxyGateway>;
    /**
     * Admin rank assigned to the forwarding rule
     */
    rank?: pulumi.Input<number>;
    /**
     * List of destination domain categories to which the rule applies
     */
    resCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A unique identifier assigned to the forwarding rule
     */
    ruleId?: pulumi.Input<number>;
    /**
     * Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source
     * IP address group
     */
    srcIpGroups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpGroups>;
    /**
     * User-defined source IP addresses for which the rule is applicable. If not set, the rule is not restricted to a specific
     * source IP address.
     */
    srcIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source
     * IPv6 address group
     */
    srcIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpv6Groups>;
    /**
     * Determines whether the Firewall Filtering policy rule is enabled or disabled
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ForwardingControlRuleTimeouts>;
    /**
     * The rule type selected from the available options
     */
    type?: pulumi.Input<string>;
    /**
     * list of users for which rule must be applied
     */
    users?: pulumi.Input<inputs.ForwardingControlRuleUsers>;
    /**
     * The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ZPA
     * Gateway forwarding method.
     */
    zpaAppSegments?: pulumi.Input<pulumi.Input<inputs.ForwardingControlRuleZpaAppSegment>[]>;
    /**
     * List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the ECZPA
     * forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegmentGroups?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegmentGroups>;
    /**
     * List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ECZPA
     * forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegments?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegments>;
    /**
     * The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
     * Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
     */
    zpaGateway?: pulumi.Input<inputs.ForwardingControlRuleZpaGateway>;
}

/**
 * The set of arguments for constructing a ForwardingControlRule resource.
 */
export interface ForwardingControlRuleArgs {
    /**
     * list of application service groups
     */
    appServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleAppServiceGroups>;
    /**
     * list of departments for which rule must be applied
     */
    departments?: pulumi.Input<inputs.ForwardingControlRuleDepartments>;
    /**
     * Additional information about the forwarding rule
     */
    description?: pulumi.Input<string>;
    /**
     * List of destination IP addresses or FQDNs for which the rule is applicable. CIDR notation can be used for destination IP
     * addresses. If not set, the rule is not restricted to a specific destination addresses unless specified by destCountries,
     * destIpGroups, or destIpCategories.
     */
    destAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Destination countries for which the rule is applicable. If not set, the rule is not restricted to specific destination
     * countries.
     */
    destCountries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of destination IP categories to which the rule applies. If not set, the rule is not restricted to specific
     * destination IP categories.
     */
    destIpCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-defined destination IP address groups to which the rule is applied. If not set, the rule is not restricted to a
     * specific destination IP address group
     */
    destIpGroups?: pulumi.Input<inputs.ForwardingControlRuleDestIpGroups>;
    /**
     * Destination IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific
     * source IPv6 address group
     */
    destIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleDestIpv6Groups>;
    /**
     * Name-ID pairs of the Zscaler Cloud Connector groups to which the forwarding rule applies
     */
    ecGroups?: pulumi.Input<inputs.ForwardingControlRuleEcGroups>;
    /**
     * The type of traffic forwarding method selected from the available options
     */
    forwardMethod: pulumi.Input<string>;
    /**
     * list of groups for which rule must be applied
     */
    groups?: pulumi.Input<inputs.ForwardingControlRuleGroups>;
    /**
     * Labels that are applicable to the rule
     */
    labels?: pulumi.Input<inputs.ForwardingControlRuleLabels>;
    /**
     * Name-ID pairs of the location groups to which the forwarding rule applies
     */
    locationGroups?: pulumi.Input<inputs.ForwardingControlRuleLocationGroups>;
    /**
     * Name-ID pairs of the locations to which the forwarding rule applies. If not set, the rule is applied to all locations.
     */
    locations?: pulumi.Input<inputs.ForwardingControlRuleLocations>;
    /**
     * The name of the forwarding rule
     */
    name?: pulumi.Input<string>;
    /**
     * User-defined network service application groups to which the rule applied. If not set, the rule is not restricted to a
     * specific network service application group.
     */
    nwApplicationGroups?: pulumi.Input<inputs.ForwardingControlRuleNwApplicationGroups>;
    /**
     * User-defined network service group to which the rule applies. If not set, the rule is not restricted to a specific
     * network service group.
     */
    nwServiceGroups?: pulumi.Input<inputs.ForwardingControlRuleNwServiceGroups>;
    /**
     * User-defined network services to which the rule applies. If not set, the rule is not restricted to a specific network
     * service.
     */
    nwServices?: pulumi.Input<inputs.ForwardingControlRuleNwServices>;
    /**
     * The order of execution for the forwarding rule order
     */
    order: pulumi.Input<number>;
    /**
     * The proxy gateway for which the rule is applicable. This field is applicable only for the Proxy Chaining forwarding
     * method.
     */
    proxyGateway?: pulumi.Input<inputs.ForwardingControlRuleProxyGateway>;
    /**
     * Admin rank assigned to the forwarding rule
     */
    rank?: pulumi.Input<number>;
    /**
     * List of destination domain categories to which the rule applies
     */
    resCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Source IP address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source
     * IP address group
     */
    srcIpGroups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpGroups>;
    /**
     * User-defined source IP addresses for which the rule is applicable. If not set, the rule is not restricted to a specific
     * source IP address.
     */
    srcIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Source IPv6 address groups for which the rule is applicable. If not set, the rule is not restricted to a specific source
     * IPv6 address group
     */
    srcIpv6Groups?: pulumi.Input<inputs.ForwardingControlRuleSrcIpv6Groups>;
    /**
     * Determines whether the Firewall Filtering policy rule is enabled or disabled
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ForwardingControlRuleTimeouts>;
    /**
     * The rule type selected from the available options
     */
    type?: pulumi.Input<string>;
    /**
     * list of users for which rule must be applied
     */
    users?: pulumi.Input<inputs.ForwardingControlRuleUsers>;
    /**
     * The list of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ZPA
     * Gateway forwarding method.
     */
    zpaAppSegments?: pulumi.Input<pulumi.Input<inputs.ForwardingControlRuleZpaAppSegment>[]>;
    /**
     * List of ZPA Application Segment Groups for which this rule is applicable. This field is applicable only for the ECZPA
     * forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegmentGroups?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegmentGroups>;
    /**
     * List of ZPA Application Segments for which this rule is applicable. This field is applicable only for the ECZPA
     * forwarding method (used for Zscaler Cloud Connector).
     */
    zpaApplicationSegments?: pulumi.Input<inputs.ForwardingControlRuleZpaApplicationSegments>;
    /**
     * The ZPA Server Group for which this rule is applicable. Only the Server Groups that are associated with the selected
     * Application Segments are allowed. This field is applicable only for the ZPA forwarding method.
     */
    zpaGateway?: pulumi.Input<inputs.ForwardingControlRuleZpaGateway>;
}
