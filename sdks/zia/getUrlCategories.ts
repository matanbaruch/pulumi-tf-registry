// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUrlCategories(args?: GetUrlCategoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetUrlCategoriesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("zia:index/getUrlCategories:getUrlCategories", {
        "configuredName": args.configuredName,
        "customCategory": args.customCategory,
        "customIpRangesCount": args.customIpRangesCount,
        "id": args.id,
        "superCategory": args.superCategory,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUrlCategories.
 */
export interface GetUrlCategoriesArgs {
    configuredName?: string;
    customCategory?: boolean;
    customIpRangesCount?: number;
    id?: string;
    superCategory?: string;
}

/**
 * A collection of values returned by getUrlCategories.
 */
export interface GetUrlCategoriesResult {
    readonly configuredName: string;
    readonly customCategory: boolean;
    readonly customIpRangesCount?: number;
    readonly customUrlsCount: number;
    readonly dbCategorizedUrls: string[];
    readonly description: string;
    readonly editable: boolean;
    readonly id: string;
    readonly ipRanges: string[];
    readonly ipRangesRetainingParentCategories: string[];
    readonly ipRangesRetainingParentCategoryCount: number;
    readonly keywords: string[];
    readonly keywordsRetainingParentCategories: string[];
    readonly scopes: outputs.GetUrlCategoriesScope[];
    readonly superCategory?: string;
    readonly type: string;
    readonly urlKeywordCounts: outputs.GetUrlCategoriesUrlKeywordCount[];
    readonly urls: string[];
    readonly urlsRetainingParentCategoryCount: number;
    readonly val: number;
}
export function getUrlCategoriesOutput(args?: GetUrlCategoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUrlCategoriesResult> {
    return pulumi.output(args).apply((a: any) => getUrlCategories(a, opts))
}

/**
 * A collection of arguments for invoking getUrlCategories.
 */
export interface GetUrlCategoriesOutputArgs {
    configuredName?: pulumi.Input<string>;
    customCategory?: pulumi.Input<boolean>;
    customIpRangesCount?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    superCategory?: pulumi.Input<string>;
}
