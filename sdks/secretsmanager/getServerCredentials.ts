// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServerCredentials(args: GetServerCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetServerCredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("secretsmanager:index/getServerCredentials:getServerCredentials", {
        "id": args.id,
        "path": args.path,
        "title": args.title,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerCredentials.
 */
export interface GetServerCredentialsArgs {
    id?: string;
    path: string;
    title?: string;
}

/**
 * A collection of values returned by getServerCredentials.
 */
export interface GetServerCredentialsResult {
    readonly fileReves: outputs.GetServerCredentialsFileRef[];
    readonly hosts: outputs.GetServerCredentialsHost[];
    readonly id: string;
    readonly login: string;
    readonly notes: string;
    readonly password: string;
    readonly path: string;
    readonly title?: string;
    readonly type: string;
}
export function getServerCredentialsOutput(args: GetServerCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getServerCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getServerCredentials.
 */
export interface GetServerCredentialsOutputArgs {
    id?: pulumi.Input<string>;
    path: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}
