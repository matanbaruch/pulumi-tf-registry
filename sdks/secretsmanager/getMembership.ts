// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMembership(args: GetMembershipArgs, opts?: pulumi.InvokeOptions): Promise<GetMembershipResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("secretsmanager:index/getMembership:getMembership", {
        "id": args.id,
        "path": args.path,
        "title": args.title,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMembership.
 */
export interface GetMembershipArgs {
    id?: string;
    path: string;
    title?: string;
}

/**
 * A collection of values returned by getMembership.
 */
export interface GetMembershipResult {
    readonly accountNumber: string;
    readonly fileReves: outputs.GetMembershipFileRef[];
    readonly id: string;
    readonly names: outputs.GetMembershipName[];
    readonly notes: string;
    readonly password: string;
    readonly path: string;
    readonly title?: string;
    readonly type: string;
}
export function getMembershipOutput(args: GetMembershipOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMembershipResult> {
    return pulumi.output(args).apply((a: any) => getMembership(a, opts))
}

/**
 * A collection of arguments for invoking getMembership.
 */
export interface GetMembershipOutputArgs {
    id?: pulumi.Input<string>;
    path: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}
