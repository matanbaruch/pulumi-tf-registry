// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSdkkeys(args: GetSdkkeysArgs, opts?: pulumi.InvokeOptions): Promise<GetSdkkeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("configcat:index/getSdkkeys:getSdkkeys", {
        "configId": args.configId,
        "environmentId": args.environmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSdkkeys.
 */
export interface GetSdkkeysArgs {
    configId: string;
    environmentId: string;
}

/**
 * A collection of values returned by getSdkkeys.
 */
export interface GetSdkkeysResult {
    readonly configId: string;
    readonly environmentId: string;
    readonly id: string;
    readonly primary: string;
    readonly secondary: string;
}
export function getSdkkeysOutput(args: GetSdkkeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSdkkeysResult> {
    return pulumi.output(args).apply((a: any) => getSdkkeys(a, opts))
}

/**
 * A collection of arguments for invoking getSdkkeys.
 */
export interface GetSdkkeysOutputArgs {
    configId: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
}
