// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWebhookSigningKeys(args: GetWebhookSigningKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetWebhookSigningKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("configcat:index/getWebhookSigningKeys:getWebhookSigningKeys", {
        "webhookId": args.webhookId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWebhookSigningKeys.
 */
export interface GetWebhookSigningKeysArgs {
    webhookId: number;
}

/**
 * A collection of values returned by getWebhookSigningKeys.
 */
export interface GetWebhookSigningKeysResult {
    readonly id: string;
    readonly key1: string;
    readonly key2: string;
    readonly webhookId: number;
}
export function getWebhookSigningKeysOutput(args: GetWebhookSigningKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebhookSigningKeysResult> {
    return pulumi.output(args).apply((a: any) => getWebhookSigningKeys(a, opts))
}

/**
 * A collection of arguments for invoking getWebhookSigningKeys.
 */
export interface GetWebhookSigningKeysOutputArgs {
    webhookId: pulumi.Input<number>;
}
