// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Bgp extends pulumi.CustomResource {
    /**
     * Get an existing Bgp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpState, opts?: pulumi.CustomResourceOptions): Bgp {
        return new Bgp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netris:index/bgp:Bgp';

    /**
     * Returns true if the given object is an instance of Bgp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bgp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bgp.__pulumiType;
    }

    /**
     * Optionally allow number of occurrences of the own AS number in received prefix AS-path. Default value is `0`.
     */
    public readonly allowasin!: pulumi.Output<number | undefined>;
    /**
     * BGP session password
     */
    public readonly bgppassword!: pulumi.Output<string | undefined>;
    /**
     * Originate default route to current neighbor. Default value is `false`.
     */
    public readonly defaultoriginate!: pulumi.Output<boolean>;
    /**
     * BGP session description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Defines hardware for Layer-3 and BGP session termination. Valid value is hardware name or `auto` when BGP is terminated
     * on VNet. Default value is `auto`.
     */
    public readonly hardware!: pulumi.Output<string | undefined>;
    /**
     * Reference to route-map resource. Valid value is route-map name.
     */
    public readonly inboundroutemap!: pulumi.Output<number | undefined>;
    /**
     * Local Autonomous System Number for the BGP speaker
     */
    public readonly localasn!: pulumi.Output<string | undefined>;
    /**
     * BGP session local IP. Example `10.0.1.1/24`.
     */
    public readonly localip!: pulumi.Output<string>;
    /**
     * BGP session local preference. Default value is `100`.
     */
    public readonly localpreference!: pulumi.Output<number>;
    /**
     * Multihop BGP session configurations.
     */
    public readonly multihop!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * User assigned name of BGP session.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * BGP neighbor AS number.
     */
    public readonly neighboras!: pulumi.Output<number | undefined>;
    /**
     * Reference to route-map resource. Valid value is route-map name.
     */
    public readonly outboundroutemap!: pulumi.Output<number | undefined>;
    /**
     * Port ID where BGP neighbor cable is connected. Can't be used together `vnetid`.
     */
    public readonly portid!: pulumi.Output<number | undefined>;
    /**
     * BGP session will be interrupted if neighbor advertises more prefixes than defined. Equal to `1000` if BGP session is
     * terminated on hardware type of switch.
     */
    public readonly prefixinboundmax!: pulumi.Output<string>;
    /**
     * List of inbound prefix list. Example `["deny 127.0.0.0/8 le 32", "permit 0.0.0.0/0 le 24"]`.
     */
    public readonly prefixlistinbounds!: pulumi.Output<string[]>;
    /**
     * List of outbound prefix list, if not defined autogenerated prefix list will apply which will permit defined allocations
     * and assignments, and will deny all private addresses. Example `["permit 192.0.2.0/24 le 26"]`.
     */
    public readonly prefixlistoutbounds!: pulumi.Output<string[]>;
    /**
     * Number of times to prepend self AS to as-path of received prefix advertisements. Default value is `0`.
     */
    public readonly prependinbound!: pulumi.Output<number>;
    /**
     * Number of times to prepend self AS to as-path being advertised to neighbors. Default value is `0`.
     */
    public readonly prependoutbound!: pulumi.Output<number>;
    /**
     * BGP session remote IP. Example `10.0.1.2/24`.
     */
    public readonly remoteip!: pulumi.Output<string>;
    /**
     * Send BGP Community Unconditionally advertise defined list of BGP communities towards BGP neighbor. Format: AA:NN
     * Community number in AA:NN format (where AA and NN are (0-65535)) or local-AS. Example `["65501:777"]`.
     */
    public readonly sendbgpcommunities!: pulumi.Output<string[]>;
    /**
     * Site (data center) ID where this BGP session should be terminated on.
     */
    public readonly siteid!: pulumi.Output<number>;
    /**
     * Valid value is `enabled` or `disabled`; enabled - initiating and waiting for BGP connections, disabled - disable Layer-2
     * tunnel and Layer-3 address. Default value is `enabled`.
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * VLAN ID for tagging BGP neighbor facing ethernet frames. Valid values should be in range 2-4094.
     */
    public readonly vlanid!: pulumi.Output<number | undefined>;
    /**
     * Existing VNet service ID to terminate E-BGP on. Can't be used together `portid`.
     */
    public readonly vnetid!: pulumi.Output<number | undefined>;
    /**
     * ID of VPC. If not specified, the BGP will be created in the VPC marked as a default.
     */
    public readonly vpcid!: pulumi.Output<number | undefined>;
    /**
     * BGP session weight. Default value is `0`.
     */
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a Bgp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BgpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpArgs | BgpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpState | undefined;
            resourceInputs["allowasin"] = state ? state.allowasin : undefined;
            resourceInputs["bgppassword"] = state ? state.bgppassword : undefined;
            resourceInputs["defaultoriginate"] = state ? state.defaultoriginate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hardware"] = state ? state.hardware : undefined;
            resourceInputs["inboundroutemap"] = state ? state.inboundroutemap : undefined;
            resourceInputs["localasn"] = state ? state.localasn : undefined;
            resourceInputs["localip"] = state ? state.localip : undefined;
            resourceInputs["localpreference"] = state ? state.localpreference : undefined;
            resourceInputs["multihop"] = state ? state.multihop : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["neighboras"] = state ? state.neighboras : undefined;
            resourceInputs["outboundroutemap"] = state ? state.outboundroutemap : undefined;
            resourceInputs["portid"] = state ? state.portid : undefined;
            resourceInputs["prefixinboundmax"] = state ? state.prefixinboundmax : undefined;
            resourceInputs["prefixlistinbounds"] = state ? state.prefixlistinbounds : undefined;
            resourceInputs["prefixlistoutbounds"] = state ? state.prefixlistoutbounds : undefined;
            resourceInputs["prependinbound"] = state ? state.prependinbound : undefined;
            resourceInputs["prependoutbound"] = state ? state.prependoutbound : undefined;
            resourceInputs["remoteip"] = state ? state.remoteip : undefined;
            resourceInputs["sendbgpcommunities"] = state ? state.sendbgpcommunities : undefined;
            resourceInputs["siteid"] = state ? state.siteid : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["vlanid"] = state ? state.vlanid : undefined;
            resourceInputs["vnetid"] = state ? state.vnetid : undefined;
            resourceInputs["vpcid"] = state ? state.vpcid : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as BgpArgs | undefined;
            if ((!args || args.localip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localip'");
            }
            if ((!args || args.remoteip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remoteip'");
            }
            if ((!args || args.siteid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteid'");
            }
            resourceInputs["allowasin"] = args ? args.allowasin : undefined;
            resourceInputs["bgppassword"] = args ? args.bgppassword : undefined;
            resourceInputs["defaultoriginate"] = args ? args.defaultoriginate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hardware"] = args ? args.hardware : undefined;
            resourceInputs["inboundroutemap"] = args ? args.inboundroutemap : undefined;
            resourceInputs["localasn"] = args ? args.localasn : undefined;
            resourceInputs["localip"] = args ? args.localip : undefined;
            resourceInputs["localpreference"] = args ? args.localpreference : undefined;
            resourceInputs["multihop"] = args ? args.multihop : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["neighboras"] = args ? args.neighboras : undefined;
            resourceInputs["outboundroutemap"] = args ? args.outboundroutemap : undefined;
            resourceInputs["portid"] = args ? args.portid : undefined;
            resourceInputs["prefixinboundmax"] = args ? args.prefixinboundmax : undefined;
            resourceInputs["prefixlistinbounds"] = args ? args.prefixlistinbounds : undefined;
            resourceInputs["prefixlistoutbounds"] = args ? args.prefixlistoutbounds : undefined;
            resourceInputs["prependinbound"] = args ? args.prependinbound : undefined;
            resourceInputs["prependoutbound"] = args ? args.prependoutbound : undefined;
            resourceInputs["remoteip"] = args ? args.remoteip : undefined;
            resourceInputs["sendbgpcommunities"] = args ? args.sendbgpcommunities : undefined;
            resourceInputs["siteid"] = args ? args.siteid : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["vlanid"] = args ? args.vlanid : undefined;
            resourceInputs["vnetid"] = args ? args.vnetid : undefined;
            resourceInputs["vpcid"] = args ? args.vpcid : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bgp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Bgp resources.
 */
export interface BgpState {
    /**
     * Optionally allow number of occurrences of the own AS number in received prefix AS-path. Default value is `0`.
     */
    allowasin?: pulumi.Input<number>;
    /**
     * BGP session password
     */
    bgppassword?: pulumi.Input<string>;
    /**
     * Originate default route to current neighbor. Default value is `false`.
     */
    defaultoriginate?: pulumi.Input<boolean>;
    /**
     * BGP session description
     */
    description?: pulumi.Input<string>;
    /**
     * Defines hardware for Layer-3 and BGP session termination. Valid value is hardware name or `auto` when BGP is terminated
     * on VNet. Default value is `auto`.
     */
    hardware?: pulumi.Input<string>;
    /**
     * Reference to route-map resource. Valid value is route-map name.
     */
    inboundroutemap?: pulumi.Input<number>;
    /**
     * Local Autonomous System Number for the BGP speaker
     */
    localasn?: pulumi.Input<string>;
    /**
     * BGP session local IP. Example `10.0.1.1/24`.
     */
    localip?: pulumi.Input<string>;
    /**
     * BGP session local preference. Default value is `100`.
     */
    localpreference?: pulumi.Input<number>;
    /**
     * Multihop BGP session configurations.
     */
    multihop?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User assigned name of BGP session.
     */
    name?: pulumi.Input<string>;
    /**
     * BGP neighbor AS number.
     */
    neighboras?: pulumi.Input<number>;
    /**
     * Reference to route-map resource. Valid value is route-map name.
     */
    outboundroutemap?: pulumi.Input<number>;
    /**
     * Port ID where BGP neighbor cable is connected. Can't be used together `vnetid`.
     */
    portid?: pulumi.Input<number>;
    /**
     * BGP session will be interrupted if neighbor advertises more prefixes than defined. Equal to `1000` if BGP session is
     * terminated on hardware type of switch.
     */
    prefixinboundmax?: pulumi.Input<string>;
    /**
     * List of inbound prefix list. Example `["deny 127.0.0.0/8 le 32", "permit 0.0.0.0/0 le 24"]`.
     */
    prefixlistinbounds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of outbound prefix list, if not defined autogenerated prefix list will apply which will permit defined allocations
     * and assignments, and will deny all private addresses. Example `["permit 192.0.2.0/24 le 26"]`.
     */
    prefixlistoutbounds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Number of times to prepend self AS to as-path of received prefix advertisements. Default value is `0`.
     */
    prependinbound?: pulumi.Input<number>;
    /**
     * Number of times to prepend self AS to as-path being advertised to neighbors. Default value is `0`.
     */
    prependoutbound?: pulumi.Input<number>;
    /**
     * BGP session remote IP. Example `10.0.1.2/24`.
     */
    remoteip?: pulumi.Input<string>;
    /**
     * Send BGP Community Unconditionally advertise defined list of BGP communities towards BGP neighbor. Format: AA:NN
     * Community number in AA:NN format (where AA and NN are (0-65535)) or local-AS. Example `["65501:777"]`.
     */
    sendbgpcommunities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Site (data center) ID where this BGP session should be terminated on.
     */
    siteid?: pulumi.Input<number>;
    /**
     * Valid value is `enabled` or `disabled`; enabled - initiating and waiting for BGP connections, disabled - disable Layer-2
     * tunnel and Layer-3 address. Default value is `enabled`.
     */
    state?: pulumi.Input<string>;
    /**
     * VLAN ID for tagging BGP neighbor facing ethernet frames. Valid values should be in range 2-4094.
     */
    vlanid?: pulumi.Input<number>;
    /**
     * Existing VNet service ID to terminate E-BGP on. Can't be used together `portid`.
     */
    vnetid?: pulumi.Input<number>;
    /**
     * ID of VPC. If not specified, the BGP will be created in the VPC marked as a default.
     */
    vpcid?: pulumi.Input<number>;
    /**
     * BGP session weight. Default value is `0`.
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Bgp resource.
 */
export interface BgpArgs {
    /**
     * Optionally allow number of occurrences of the own AS number in received prefix AS-path. Default value is `0`.
     */
    allowasin?: pulumi.Input<number>;
    /**
     * BGP session password
     */
    bgppassword?: pulumi.Input<string>;
    /**
     * Originate default route to current neighbor. Default value is `false`.
     */
    defaultoriginate?: pulumi.Input<boolean>;
    /**
     * BGP session description
     */
    description?: pulumi.Input<string>;
    /**
     * Defines hardware for Layer-3 and BGP session termination. Valid value is hardware name or `auto` when BGP is terminated
     * on VNet. Default value is `auto`.
     */
    hardware?: pulumi.Input<string>;
    /**
     * Reference to route-map resource. Valid value is route-map name.
     */
    inboundroutemap?: pulumi.Input<number>;
    /**
     * Local Autonomous System Number for the BGP speaker
     */
    localasn?: pulumi.Input<string>;
    /**
     * BGP session local IP. Example `10.0.1.1/24`.
     */
    localip: pulumi.Input<string>;
    /**
     * BGP session local preference. Default value is `100`.
     */
    localpreference?: pulumi.Input<number>;
    /**
     * Multihop BGP session configurations.
     */
    multihop?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * User assigned name of BGP session.
     */
    name?: pulumi.Input<string>;
    /**
     * BGP neighbor AS number.
     */
    neighboras?: pulumi.Input<number>;
    /**
     * Reference to route-map resource. Valid value is route-map name.
     */
    outboundroutemap?: pulumi.Input<number>;
    /**
     * Port ID where BGP neighbor cable is connected. Can't be used together `vnetid`.
     */
    portid?: pulumi.Input<number>;
    /**
     * BGP session will be interrupted if neighbor advertises more prefixes than defined. Equal to `1000` if BGP session is
     * terminated on hardware type of switch.
     */
    prefixinboundmax?: pulumi.Input<string>;
    /**
     * List of inbound prefix list. Example `["deny 127.0.0.0/8 le 32", "permit 0.0.0.0/0 le 24"]`.
     */
    prefixlistinbounds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of outbound prefix list, if not defined autogenerated prefix list will apply which will permit defined allocations
     * and assignments, and will deny all private addresses. Example `["permit 192.0.2.0/24 le 26"]`.
     */
    prefixlistoutbounds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Number of times to prepend self AS to as-path of received prefix advertisements. Default value is `0`.
     */
    prependinbound?: pulumi.Input<number>;
    /**
     * Number of times to prepend self AS to as-path being advertised to neighbors. Default value is `0`.
     */
    prependoutbound?: pulumi.Input<number>;
    /**
     * BGP session remote IP. Example `10.0.1.2/24`.
     */
    remoteip: pulumi.Input<string>;
    /**
     * Send BGP Community Unconditionally advertise defined list of BGP communities towards BGP neighbor. Format: AA:NN
     * Community number in AA:NN format (where AA and NN are (0-65535)) or local-AS. Example `["65501:777"]`.
     */
    sendbgpcommunities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Site (data center) ID where this BGP session should be terminated on.
     */
    siteid: pulumi.Input<number>;
    /**
     * Valid value is `enabled` or `disabled`; enabled - initiating and waiting for BGP connections, disabled - disable Layer-2
     * tunnel and Layer-3 address. Default value is `enabled`.
     */
    state?: pulumi.Input<string>;
    /**
     * VLAN ID for tagging BGP neighbor facing ethernet frames. Valid values should be in range 2-4094.
     */
    vlanid?: pulumi.Input<number>;
    /**
     * Existing VNet service ID to terminate E-BGP on. Can't be used together `portid`.
     */
    vnetid?: pulumi.Input<number>;
    /**
     * ID of VPC. If not specified, the BGP will be created in the VPC marked as a default.
     */
    vpcid?: pulumi.Input<number>;
    /**
     * BGP session weight. Default value is `0`.
     */
    weight?: pulumi.Input<number>;
}
