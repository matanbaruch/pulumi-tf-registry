// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Server extends pulumi.CustomResource {
    /**
     * Get an existing Server resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerState, opts?: pulumi.CustomResourceOptions): Server {
        return new Server(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netris:index/server:Server';

    /**
     * Returns true if the given object is an instance of Server.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Server {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Server.__pulumiType;
    }

    /**
     * Server AS numbers. Valid value is ASN (example `420000002`) or `auto`.
     */
    public readonly asnumber!: pulumi.Output<string | undefined>;
    /**
     * You may paste any custom data that can be assosiated with the object.
     */
    public readonly customdata!: pulumi.Output<string | undefined>;
    /**
     * server description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A unique IP address which will be used as a loopback address of this unit. Valid value is ip address (example
     * `198.51.100.11`) or `auto`. If set `auto` the controller will assign an ip address automatically from subnets with
     * relevant purpose.
     */
    public readonly mainip!: pulumi.Output<string | undefined>;
    /**
     * A unique IP address to be used on out of band management interface. Valid value is ip address (example `192.0.2.11`) or
     * `auto`. If set `auto` the controller will assign an ip address automatically from subnets with relevant purpose.
     */
    public readonly mgmtip!: pulumi.Output<string | undefined>;
    /**
     * User assigned name of server.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Preliminary port count is used for definition of topology. Possible values: minimum - `0`, maximum - `60`.
     */
    public readonly portcount!: pulumi.Output<number>;
    /**
     * The site ID where this server belongs.
     */
    public readonly siteid!: pulumi.Output<number>;
    /**
     * ID of tenant. Users of this tenant will be permitted to edit this unit.
     */
    public readonly tenantid!: pulumi.Output<number>;

    /**
     * Create a Server resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerArgs | ServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerState | undefined;
            resourceInputs["asnumber"] = state ? state.asnumber : undefined;
            resourceInputs["customdata"] = state ? state.customdata : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["mainip"] = state ? state.mainip : undefined;
            resourceInputs["mgmtip"] = state ? state.mgmtip : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portcount"] = state ? state.portcount : undefined;
            resourceInputs["siteid"] = state ? state.siteid : undefined;
            resourceInputs["tenantid"] = state ? state.tenantid : undefined;
        } else {
            const args = argsOrState as ServerArgs | undefined;
            if ((!args || args.portcount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portcount'");
            }
            if ((!args || args.siteid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteid'");
            }
            if ((!args || args.tenantid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantid'");
            }
            resourceInputs["asnumber"] = args ? args.asnumber : undefined;
            resourceInputs["customdata"] = args ? args.customdata : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["mainip"] = args ? args.mainip : undefined;
            resourceInputs["mgmtip"] = args ? args.mgmtip : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portcount"] = args ? args.portcount : undefined;
            resourceInputs["siteid"] = args ? args.siteid : undefined;
            resourceInputs["tenantid"] = args ? args.tenantid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Server.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Server resources.
 */
export interface ServerState {
    /**
     * Server AS numbers. Valid value is ASN (example `420000002`) or `auto`.
     */
    asnumber?: pulumi.Input<string>;
    /**
     * You may paste any custom data that can be assosiated with the object.
     */
    customdata?: pulumi.Input<string>;
    /**
     * server description.
     */
    description?: pulumi.Input<string>;
    /**
     * A unique IP address which will be used as a loopback address of this unit. Valid value is ip address (example
     * `198.51.100.11`) or `auto`. If set `auto` the controller will assign an ip address automatically from subnets with
     * relevant purpose.
     */
    mainip?: pulumi.Input<string>;
    /**
     * A unique IP address to be used on out of band management interface. Valid value is ip address (example `192.0.2.11`) or
     * `auto`. If set `auto` the controller will assign an ip address automatically from subnets with relevant purpose.
     */
    mgmtip?: pulumi.Input<string>;
    /**
     * User assigned name of server.
     */
    name?: pulumi.Input<string>;
    /**
     * Preliminary port count is used for definition of topology. Possible values: minimum - `0`, maximum - `60`.
     */
    portcount?: pulumi.Input<number>;
    /**
     * The site ID where this server belongs.
     */
    siteid?: pulumi.Input<number>;
    /**
     * ID of tenant. Users of this tenant will be permitted to edit this unit.
     */
    tenantid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Server resource.
 */
export interface ServerArgs {
    /**
     * Server AS numbers. Valid value is ASN (example `420000002`) or `auto`.
     */
    asnumber?: pulumi.Input<string>;
    /**
     * You may paste any custom data that can be assosiated with the object.
     */
    customdata?: pulumi.Input<string>;
    /**
     * server description.
     */
    description?: pulumi.Input<string>;
    /**
     * A unique IP address which will be used as a loopback address of this unit. Valid value is ip address (example
     * `198.51.100.11`) or `auto`. If set `auto` the controller will assign an ip address automatically from subnets with
     * relevant purpose.
     */
    mainip?: pulumi.Input<string>;
    /**
     * A unique IP address to be used on out of band management interface. Valid value is ip address (example `192.0.2.11`) or
     * `auto`. If set `auto` the controller will assign an ip address automatically from subnets with relevant purpose.
     */
    mgmtip?: pulumi.Input<string>;
    /**
     * User assigned name of server.
     */
    name?: pulumi.Input<string>;
    /**
     * Preliminary port count is used for definition of topology. Possible values: minimum - `0`, maximum - `60`.
     */
    portcount: pulumi.Input<number>;
    /**
     * The site ID where this server belongs.
     */
    siteid: pulumi.Input<number>;
    /**
     * ID of tenant. Users of this tenant will be permitted to edit this unit.
     */
    tenantid: pulumi.Input<number>;
}
