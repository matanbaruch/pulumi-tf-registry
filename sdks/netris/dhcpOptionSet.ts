// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DhcpOptionSet extends pulumi.CustomResource {
    /**
     * Get an existing DhcpOptionSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DhcpOptionSetState, opts?: pulumi.CustomResourceOptions): DhcpOptionSet {
        return new DhcpOptionSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netris:index/dhcpOptionSet:DhcpOptionSet';

    /**
     * Returns true if the given object is an instance of DhcpOptionSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DhcpOptionSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DhcpOptionSet.__pulumiType;
    }

    /**
     * User-defined custom DHCP Options
     */
    public readonly customoptions!: pulumi.Output<outputs.DhcpOptionSetCustomoption[] | undefined>;
    /**
     * Description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of IP addresses of dns servers.
     */
    public readonly dnsservers!: pulumi.Output<string[] | undefined>;
    /**
     * The domain name that should be used as a suffix when resolving hostnames via the dns servers.
     */
    public readonly domainsearch!: pulumi.Output<string | undefined>;
    /**
     * The amount of time in seconds a network device can use an IP address.
     */
    public readonly leasetime!: pulumi.Output<number | undefined>;
    /**
     * User assigned name of DHCP Option Set.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of IP addresses of ntp servers.
     */
    public readonly ntpservers!: pulumi.Output<string[] | undefined>;
    /**
     * User-defined additional DHCP Options
     */
    public readonly standardtoptions!: pulumi.Output<outputs.DhcpOptionSetStandardtoption[] | undefined>;

    /**
     * Create a DhcpOptionSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DhcpOptionSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DhcpOptionSetArgs | DhcpOptionSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DhcpOptionSetState | undefined;
            resourceInputs["customoptions"] = state ? state.customoptions : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsservers"] = state ? state.dnsservers : undefined;
            resourceInputs["domainsearch"] = state ? state.domainsearch : undefined;
            resourceInputs["leasetime"] = state ? state.leasetime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ntpservers"] = state ? state.ntpservers : undefined;
            resourceInputs["standardtoptions"] = state ? state.standardtoptions : undefined;
        } else {
            const args = argsOrState as DhcpOptionSetArgs | undefined;
            resourceInputs["customoptions"] = args ? args.customoptions : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsservers"] = args ? args.dnsservers : undefined;
            resourceInputs["domainsearch"] = args ? args.domainsearch : undefined;
            resourceInputs["leasetime"] = args ? args.leasetime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ntpservers"] = args ? args.ntpservers : undefined;
            resourceInputs["standardtoptions"] = args ? args.standardtoptions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DhcpOptionSet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DhcpOptionSet resources.
 */
export interface DhcpOptionSetState {
    /**
     * User-defined custom DHCP Options
     */
    customoptions?: pulumi.Input<pulumi.Input<inputs.DhcpOptionSetCustomoption>[]>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * List of IP addresses of dns servers.
     */
    dnsservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The domain name that should be used as a suffix when resolving hostnames via the dns servers.
     */
    domainsearch?: pulumi.Input<string>;
    /**
     * The amount of time in seconds a network device can use an IP address.
     */
    leasetime?: pulumi.Input<number>;
    /**
     * User assigned name of DHCP Option Set.
     */
    name?: pulumi.Input<string>;
    /**
     * List of IP addresses of ntp servers.
     */
    ntpservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-defined additional DHCP Options
     */
    standardtoptions?: pulumi.Input<pulumi.Input<inputs.DhcpOptionSetStandardtoption>[]>;
}

/**
 * The set of arguments for constructing a DhcpOptionSet resource.
 */
export interface DhcpOptionSetArgs {
    /**
     * User-defined custom DHCP Options
     */
    customoptions?: pulumi.Input<pulumi.Input<inputs.DhcpOptionSetCustomoption>[]>;
    /**
     * Description.
     */
    description?: pulumi.Input<string>;
    /**
     * List of IP addresses of dns servers.
     */
    dnsservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The domain name that should be used as a suffix when resolving hostnames via the dns servers.
     */
    domainsearch?: pulumi.Input<string>;
    /**
     * The amount of time in seconds a network device can use an IP address.
     */
    leasetime?: pulumi.Input<number>;
    /**
     * User assigned name of DHCP Option Set.
     */
    name?: pulumi.Input<string>;
    /**
     * List of IP addresses of ntp servers.
     */
    ntpservers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User-defined additional DHCP Options
     */
    standardtoptions?: pulumi.Input<pulumi.Input<inputs.DhcpOptionSetStandardtoption>[]>;
}
