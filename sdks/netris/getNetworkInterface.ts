// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkInterface(args: GetNetworkInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netris:index/getNetworkInterface:getNetworkInterface", {
        "autoneg": args.autoneg,
        "breakout": args.breakout,
        "description": args.description,
        "extension": args.extension,
        "id": args.id,
        "mtu": args.mtu,
        "name": args.name,
        "nodeid": args.nodeid,
        "speed": args.speed,
        "tenantid": args.tenantid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkInterface.
 */
export interface GetNetworkInterfaceArgs {
    autoneg?: string;
    breakout?: string;
    description?: string;
    extension?: {[key: string]: string};
    id?: string;
    mtu?: number;
    name: string;
    nodeid?: number;
    speed?: string;
    tenantid?: number;
}

/**
 * A collection of values returned by getNetworkInterface.
 */
export interface GetNetworkInterfaceResult {
    readonly autoneg: string;
    readonly breakout: string;
    readonly description: string;
    readonly extension: {[key: string]: string};
    readonly id: string;
    readonly mtu: number;
    readonly name: string;
    readonly nodeid: number;
    readonly speed: string;
    readonly tenantid: number;
}
export function getNetworkInterfaceOutput(args: GetNetworkInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getNetworkInterface(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkInterface.
 */
export interface GetNetworkInterfaceOutputArgs {
    autoneg?: pulumi.Input<string>;
    breakout?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    extension?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    mtu?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nodeid?: pulumi.Input<number>;
    speed?: pulumi.Input<string>;
    tenantid?: pulumi.Input<number>;
}
