// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Softgate extends pulumi.CustomResource {
    /**
     * Get an existing Softgate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SoftgateState, opts?: pulumi.CustomResourceOptions): Softgate {
        return new Softgate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netris:index/softgate:Softgate';

    /**
     * Returns true if the given object is an instance of Softgate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Softgate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Softgate.__pulumiType;
    }

    /**
     * Softgate description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Softgate's flavor.
     */
    public readonly flavor!: pulumi.Output<string | undefined>;
    /**
     * A unique IP address which will be used as a loopback address of this unit. Valid value is ip address (example
     * `198.51.100.11`) or `auto`. If set `auto` the controller will assign an ip address automatically from subnets with
     * relevant purpose.
     */
    public readonly mainip!: pulumi.Output<string>;
    /**
     * A unique IP address to be used on out of band management interface. Valid value is ip address (example `192.0.2.11`) or
     * `auto`. If set `auto` the controller will assign an ip address automatically from subnets with relevant purpose.
     */
    public readonly mgmtip!: pulumi.Output<string>;
    /**
     * User assigned name of softgate.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An inventory profile ID to define global configuration (NTP, DNS, timezone, etc...)
     */
    public readonly profileid!: pulumi.Output<number | undefined>;
    /**
     * Softgate HA's role.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * The site ID where this softgate belongs.
     */
    public readonly siteid!: pulumi.Output<number>;
    /**
     * ID of tenant. Users of this tenant will be permitted to edit this unit.
     */
    public readonly tenantid!: pulumi.Output<number>;

    /**
     * Create a Softgate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SoftgateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SoftgateArgs | SoftgateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SoftgateState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["flavor"] = state ? state.flavor : undefined;
            resourceInputs["mainip"] = state ? state.mainip : undefined;
            resourceInputs["mgmtip"] = state ? state.mgmtip : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profileid"] = state ? state.profileid : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["siteid"] = state ? state.siteid : undefined;
            resourceInputs["tenantid"] = state ? state.tenantid : undefined;
        } else {
            const args = argsOrState as SoftgateArgs | undefined;
            if ((!args || args.mainip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mainip'");
            }
            if ((!args || args.mgmtip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mgmtip'");
            }
            if ((!args || args.siteid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteid'");
            }
            if ((!args || args.tenantid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantid'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["flavor"] = args ? args.flavor : undefined;
            resourceInputs["mainip"] = args ? args.mainip : undefined;
            resourceInputs["mgmtip"] = args ? args.mgmtip : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profileid"] = args ? args.profileid : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["siteid"] = args ? args.siteid : undefined;
            resourceInputs["tenantid"] = args ? args.tenantid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Softgate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Softgate resources.
 */
export interface SoftgateState {
    /**
     * Softgate description.
     */
    description?: pulumi.Input<string>;
    /**
     * Softgate's flavor.
     */
    flavor?: pulumi.Input<string>;
    /**
     * A unique IP address which will be used as a loopback address of this unit. Valid value is ip address (example
     * `198.51.100.11`) or `auto`. If set `auto` the controller will assign an ip address automatically from subnets with
     * relevant purpose.
     */
    mainip?: pulumi.Input<string>;
    /**
     * A unique IP address to be used on out of band management interface. Valid value is ip address (example `192.0.2.11`) or
     * `auto`. If set `auto` the controller will assign an ip address automatically from subnets with relevant purpose.
     */
    mgmtip?: pulumi.Input<string>;
    /**
     * User assigned name of softgate.
     */
    name?: pulumi.Input<string>;
    /**
     * An inventory profile ID to define global configuration (NTP, DNS, timezone, etc...)
     */
    profileid?: pulumi.Input<number>;
    /**
     * Softgate HA's role.
     */
    role?: pulumi.Input<string>;
    /**
     * The site ID where this softgate belongs.
     */
    siteid?: pulumi.Input<number>;
    /**
     * ID of tenant. Users of this tenant will be permitted to edit this unit.
     */
    tenantid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Softgate resource.
 */
export interface SoftgateArgs {
    /**
     * Softgate description.
     */
    description?: pulumi.Input<string>;
    /**
     * Softgate's flavor.
     */
    flavor?: pulumi.Input<string>;
    /**
     * A unique IP address which will be used as a loopback address of this unit. Valid value is ip address (example
     * `198.51.100.11`) or `auto`. If set `auto` the controller will assign an ip address automatically from subnets with
     * relevant purpose.
     */
    mainip: pulumi.Input<string>;
    /**
     * A unique IP address to be used on out of band management interface. Valid value is ip address (example `192.0.2.11`) or
     * `auto`. If set `auto` the controller will assign an ip address automatically from subnets with relevant purpose.
     */
    mgmtip: pulumi.Input<string>;
    /**
     * User assigned name of softgate.
     */
    name?: pulumi.Input<string>;
    /**
     * An inventory profile ID to define global configuration (NTP, DNS, timezone, etc...)
     */
    profileid?: pulumi.Input<number>;
    /**
     * Softgate HA's role.
     */
    role?: pulumi.Input<string>;
    /**
     * The site ID where this softgate belongs.
     */
    siteid: pulumi.Input<number>;
    /**
     * ID of tenant. Users of this tenant will be permitted to edit this unit.
     */
    tenantid: pulumi.Input<number>;
}
