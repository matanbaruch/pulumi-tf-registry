// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Acltwozero extends pulumi.CustomResource {
    /**
     * Get an existing Acltwozero resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AcltwozeroState, opts?: pulumi.CustomResourceOptions): Acltwozero {
        return new Acltwozero(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netris:index/acltwozero:Acltwozero';

    /**
     * Returns true if the given object is an instance of Acltwozero.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Acltwozero {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Acltwozero.__pulumiType;
    }

    /**
     * ACL 2.0 unique name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Valid values are `public`, `private`, `hidden`. Public - Service is visible to all users and every user can subscribe
     * instances and get access without approval. Private - Service is visible to all users, instances can be subscribed either
     * by service owning tenant members or will require approval. Hidden - Service is not visible to any user except those who
     * are part of tenant owning the service, instances can be subscribed only by service owning tenant members.
     */
    public readonly privacy!: pulumi.Output<string>;
    /**
     * The block of publisher configurations
     */
    public readonly publishers!: pulumi.Output<outputs.AcltwozeroPublisher[] | undefined>;
    /**
     * State of the resource. Valid values are `enabled` or `disabled`
     */
    public readonly state!: pulumi.Output<string | undefined>;
    /**
     * The block of subscriber configurations
     */
    public readonly subscribers!: pulumi.Output<outputs.AcltwozeroSubscriber[] | undefined>;
    /**
     * ID of tenant. Users of this tenant will be permitted to manage this acl
     */
    public readonly tenantid!: pulumi.Output<number>;

    /**
     * Create a Acltwozero resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AcltwozeroArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AcltwozeroArgs | AcltwozeroState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AcltwozeroState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privacy"] = state ? state.privacy : undefined;
            resourceInputs["publishers"] = state ? state.publishers : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subscribers"] = state ? state.subscribers : undefined;
            resourceInputs["tenantid"] = state ? state.tenantid : undefined;
        } else {
            const args = argsOrState as AcltwozeroArgs | undefined;
            if ((!args || args.privacy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privacy'");
            }
            if ((!args || args.tenantid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantid'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privacy"] = args ? args.privacy : undefined;
            resourceInputs["publishers"] = args ? args.publishers : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["subscribers"] = args ? args.subscribers : undefined;
            resourceInputs["tenantid"] = args ? args.tenantid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Acltwozero.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Acltwozero resources.
 */
export interface AcltwozeroState {
    /**
     * ACL 2.0 unique name
     */
    name?: pulumi.Input<string>;
    /**
     * Valid values are `public`, `private`, `hidden`. Public - Service is visible to all users and every user can subscribe
     * instances and get access without approval. Private - Service is visible to all users, instances can be subscribed either
     * by service owning tenant members or will require approval. Hidden - Service is not visible to any user except those who
     * are part of tenant owning the service, instances can be subscribed only by service owning tenant members.
     */
    privacy?: pulumi.Input<string>;
    /**
     * The block of publisher configurations
     */
    publishers?: pulumi.Input<pulumi.Input<inputs.AcltwozeroPublisher>[]>;
    /**
     * State of the resource. Valid values are `enabled` or `disabled`
     */
    state?: pulumi.Input<string>;
    /**
     * The block of subscriber configurations
     */
    subscribers?: pulumi.Input<pulumi.Input<inputs.AcltwozeroSubscriber>[]>;
    /**
     * ID of tenant. Users of this tenant will be permitted to manage this acl
     */
    tenantid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Acltwozero resource.
 */
export interface AcltwozeroArgs {
    /**
     * ACL 2.0 unique name
     */
    name?: pulumi.Input<string>;
    /**
     * Valid values are `public`, `private`, `hidden`. Public - Service is visible to all users and every user can subscribe
     * instances and get access without approval. Private - Service is visible to all users, instances can be subscribed either
     * by service owning tenant members or will require approval. Hidden - Service is not visible to any user except those who
     * are part of tenant owning the service, instances can be subscribed only by service owning tenant members.
     */
    privacy: pulumi.Input<string>;
    /**
     * The block of publisher configurations
     */
    publishers?: pulumi.Input<pulumi.Input<inputs.AcltwozeroPublisher>[]>;
    /**
     * State of the resource. Valid values are `enabled` or `disabled`
     */
    state?: pulumi.Input<string>;
    /**
     * The block of subscriber configurations
     */
    subscribers?: pulumi.Input<pulumi.Input<inputs.AcltwozeroSubscriber>[]>;
    /**
     * ID of tenant. Users of this tenant will be permitted to manage this acl
     */
    tenantid: pulumi.Input<number>;
}
