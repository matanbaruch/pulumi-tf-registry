// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Servercluster extends pulumi.CustomResource {
    /**
     * Get an existing Servercluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerclusterState, opts?: pulumi.CustomResourceOptions): Servercluster {
        return new Servercluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netris:index/servercluster:Servercluster';

    /**
     * Returns true if the given object is an instance of Servercluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Servercluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Servercluster.__pulumiType;
    }

    /**
     * ID of Admin tenant. Users of this tenant will be permitted to edit this unit.
     */
    public readonly adminid!: pulumi.Output<number>;
    /**
     * User assigned name of ServerCluster.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly servers!: pulumi.Output<number[]>;
    /**
     * The site ID where this ServerCluster belongs.
     */
    public readonly siteid!: pulumi.Output<number>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * ID of Server Cluster Template.
     */
    public readonly templateid!: pulumi.Output<number>;
    /**
     * ID of VPC. If not specified, a new VPC will be created.
     */
    public readonly vpcid!: pulumi.Output<number>;

    /**
     * Create a Servercluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerclusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerclusterArgs | ServerclusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerclusterState | undefined;
            resourceInputs["adminid"] = state ? state.adminid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["siteid"] = state ? state.siteid : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateid"] = state ? state.templateid : undefined;
            resourceInputs["vpcid"] = state ? state.vpcid : undefined;
        } else {
            const args = argsOrState as ServerclusterArgs | undefined;
            if ((!args || args.adminid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminid'");
            }
            if ((!args || args.servers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servers'");
            }
            if ((!args || args.siteid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteid'");
            }
            if ((!args || args.templateid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateid'");
            }
            resourceInputs["adminid"] = args ? args.adminid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["siteid"] = args ? args.siteid : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateid"] = args ? args.templateid : undefined;
            resourceInputs["vpcid"] = args ? args.vpcid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Servercluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Servercluster resources.
 */
export interface ServerclusterState {
    /**
     * ID of Admin tenant. Users of this tenant will be permitted to edit this unit.
     */
    adminid?: pulumi.Input<number>;
    /**
     * User assigned name of ServerCluster.
     */
    name?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The site ID where this ServerCluster belongs.
     */
    siteid?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of Server Cluster Template.
     */
    templateid?: pulumi.Input<number>;
    /**
     * ID of VPC. If not specified, a new VPC will be created.
     */
    vpcid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Servercluster resource.
 */
export interface ServerclusterArgs {
    /**
     * ID of Admin tenant. Users of this tenant will be permitted to edit this unit.
     */
    adminid: pulumi.Input<number>;
    /**
     * User assigned name of ServerCluster.
     */
    name?: pulumi.Input<string>;
    servers: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The site ID where this ServerCluster belongs.
     */
    siteid: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of Server Cluster Template.
     */
    templateid: pulumi.Input<number>;
    /**
     * ID of VPC. If not specified, a new VPC will be created.
     */
    vpcid?: pulumi.Input<number>;
}
