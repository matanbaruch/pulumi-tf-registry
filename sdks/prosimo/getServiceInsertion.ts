// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceInsertion(args?: GetServiceInsertionArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceInsertionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prosimo:index/getServiceInsertion:getServiceInsertion", {
        "filter": args.filter,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceInsertion.
 */
export interface GetServiceInsertionArgs {
    filter?: string;
    id?: string;
}

/**
 * A collection of values returned by getServiceInsertion.
 */
export interface GetServiceInsertionResult {
    readonly filter?: string;
    readonly id: string;
    readonly serviceInsertionCount: number;
    readonly serviceInsertions: outputs.GetServiceInsertionServiceInsertion[];
}
export function getServiceInsertionOutput(args?: GetServiceInsertionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceInsertionResult> {
    return pulumi.output(args).apply((a: any) => getServiceInsertion(a, opts))
}

/**
 * A collection of arguments for invoking getServiceInsertion.
 */
export interface GetServiceInsertionOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
