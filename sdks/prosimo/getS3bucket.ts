// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getS3bucket(args: GetS3bucketArgs, opts?: pulumi.InvokeOptions): Promise<GetS3bucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prosimo:index/getS3bucket:getS3bucket", {
        "id": args.id,
        "inputCloudCredName": args.inputCloudCredName,
        "inputRegion": args.inputRegion,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3bucket.
 */
export interface GetS3bucketArgs {
    id?: string;
    inputCloudCredName: string;
    inputRegion: string;
}

/**
 * A collection of values returned by getS3bucket.
 */
export interface GetS3bucketResult {
    readonly datas: string[];
    readonly id: string;
    readonly inputCloudCredName: string;
    readonly inputRegion: string;
}
export function getS3bucketOutput(args: GetS3bucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3bucketResult> {
    return pulumi.output(args).apply((a: any) => getS3bucket(a, opts))
}

/**
 * A collection of arguments for invoking getS3bucket.
 */
export interface GetS3bucketOutputArgs {
    id?: pulumi.Input<string>;
    inputCloudCredName: pulumi.Input<string>;
    inputRegion: pulumi.Input<string>;
}
