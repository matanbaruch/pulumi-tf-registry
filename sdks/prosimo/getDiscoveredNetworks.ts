// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDiscoveredNetworks(args?: GetDiscoveredNetworksArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoveredNetworksResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prosimo:index/getDiscoveredNetworks:getDiscoveredNetworks", {
        "filter": args.filter,
        "id": args.id,
        "inputAccountName": args.inputAccountName,
        "inputCloudType": args.inputCloudType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDiscoveredNetworks.
 */
export interface GetDiscoveredNetworksArgs {
    filter?: string;
    id?: string;
    inputAccountName?: string;
    inputCloudType?: string;
}

/**
 * A collection of values returned by getDiscoveredNetworks.
 */
export interface GetDiscoveredNetworksResult {
    readonly discoveredNetworks: outputs.GetDiscoveredNetworksDiscoveredNetwork[];
    readonly filter?: string;
    readonly id: string;
    readonly inputAccountName?: string;
    readonly inputCloudType?: string;
}
export function getDiscoveredNetworksOutput(args?: GetDiscoveredNetworksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDiscoveredNetworksResult> {
    return pulumi.output(args).apply((a: any) => getDiscoveredNetworks(a, opts))
}

/**
 * A collection of arguments for invoking getDiscoveredNetworks.
 */
export interface GetDiscoveredNetworksOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inputAccountName?: pulumi.Input<string>;
    inputCloudType?: pulumi.Input<string>;
}
