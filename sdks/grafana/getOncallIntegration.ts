// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOncallIntegration(args: GetOncallIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetOncallIntegrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:index/getOncallIntegration:getOncallIntegration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOncallIntegration.
 */
export interface GetOncallIntegrationArgs {
    id: string;
}

/**
 * A collection of values returned by getOncallIntegration.
 */
export interface GetOncallIntegrationResult {
    readonly id: string;
    readonly name: string;
}
export function getOncallIntegrationOutput(args: GetOncallIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOncallIntegrationResult> {
    return pulumi.output(args).apply((a: any) => getOncallIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getOncallIntegration.
 */
export interface GetOncallIntegrationOutputArgs {
    id: pulumi.Input<string>;
}
