// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSyntheticMonitoringProbe(args: GetSyntheticMonitoringProbeArgs, opts?: pulumi.InvokeOptions): Promise<GetSyntheticMonitoringProbeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:index/getSyntheticMonitoringProbe:getSyntheticMonitoringProbe", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSyntheticMonitoringProbe.
 */
export interface GetSyntheticMonitoringProbeArgs {
    name: string;
}

/**
 * A collection of values returned by getSyntheticMonitoringProbe.
 */
export interface GetSyntheticMonitoringProbeResult {
    readonly disableScriptedChecks: boolean;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly latitude: number;
    readonly longitude: number;
    readonly name: string;
    readonly public: boolean;
    readonly region: string;
    readonly tenantId: number;
}
export function getSyntheticMonitoringProbeOutput(args: GetSyntheticMonitoringProbeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSyntheticMonitoringProbeResult> {
    return pulumi.output(args).apply((a: any) => getSyntheticMonitoringProbe(a, opts))
}

/**
 * A collection of arguments for invoking getSyntheticMonitoringProbe.
 */
export interface GetSyntheticMonitoringProbeOutputArgs {
    name: pulumi.Input<string>;
}
