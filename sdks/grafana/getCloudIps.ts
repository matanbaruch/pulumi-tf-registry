// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudIps(args?: GetCloudIpsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudIpsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:index/getCloudIps:getCloudIps", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudIps.
 */
export interface GetCloudIpsArgs {
    id?: string;
}

/**
 * A collection of values returned by getCloudIps.
 */
export interface GetCloudIpsResult {
    readonly hostedAlerts: string[];
    readonly hostedGrafanas: string[];
    readonly hostedLogs: string[];
    readonly hostedMetrics: string[];
    readonly hostedTraces: string[];
    readonly id: string;
}
export function getCloudIpsOutput(args?: GetCloudIpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudIpsResult> {
    return pulumi.output(args).apply((a: any) => getCloudIps(a, opts))
}

/**
 * A collection of arguments for invoking getCloudIps.
 */
export interface GetCloudIpsOutputArgs {
    id?: pulumi.Input<string>;
}
