// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOncallUserGroup(args: GetOncallUserGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetOncallUserGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:index/getOncallUserGroup:getOncallUserGroup", {
        "id": args.id,
        "slackHandle": args.slackHandle,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOncallUserGroup.
 */
export interface GetOncallUserGroupArgs {
    id?: string;
    slackHandle: string;
}

/**
 * A collection of values returned by getOncallUserGroup.
 */
export interface GetOncallUserGroupResult {
    readonly id: string;
    readonly slackHandle: string;
    readonly slackId: string;
}
export function getOncallUserGroupOutput(args: GetOncallUserGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOncallUserGroupResult> {
    return pulumi.output(args).apply((a: any) => getOncallUserGroup(a, opts))
}

/**
 * A collection of arguments for invoking getOncallUserGroup.
 */
export interface GetOncallUserGroupOutputArgs {
    id?: pulumi.Input<string>;
    slackHandle: pulumi.Input<string>;
}
