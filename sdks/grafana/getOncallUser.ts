// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOncallUser(args: GetOncallUserArgs, opts?: pulumi.InvokeOptions): Promise<GetOncallUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("grafana:index/getOncallUser:getOncallUser", {
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOncallUser.
 */
export interface GetOncallUserArgs {
    username: string;
}

/**
 * A collection of values returned by getOncallUser.
 */
export interface GetOncallUserResult {
    readonly email: string;
    readonly id: string;
    readonly role: string;
    readonly username: string;
}
export function getOncallUserOutput(args: GetOncallUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOncallUserResult> {
    return pulumi.output(args).apply((a: any) => getOncallUser(a, opts))
}

/**
 * A collection of arguments for invoking getOncallUser.
 */
export interface GetOncallUserOutputArgs {
    username: pulumi.Input<string>;
}
