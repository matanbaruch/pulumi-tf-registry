// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CmDeployF5os extends pulumi.CustomResource {
    /**
     * Get an existing CmDeployF5os resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CmDeployF5osState, opts?: pulumi.CustomResourceOptions): CmDeployF5os {
        return new CmDeployF5os(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bigipnext:index/cmDeployF5os:CmDeployF5os';

    /**
     * Returns true if the given object is an instance of CmDeployF5os.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CmDeployF5os {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CmDeployF5os.__pulumiType;
    }

    public readonly f5osProvider!: pulumi.Output<outputs.CmDeployF5osF5osProvider>;
    public readonly instance!: pulumi.Output<outputs.CmDeployF5osInstance>;
    /**
     * Unique Identifier for the F5OS provider
     */
    public /*out*/ readonly providerId!: pulumi.Output<string>;
    /**
     * The number of seconds to wait for instance deployment to finish.
     */
    public readonly timeout!: pulumi.Output<number>;

    /**
     * Create a CmDeployF5os resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CmDeployF5osArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CmDeployF5osArgs | CmDeployF5osState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CmDeployF5osState | undefined;
            resourceInputs["f5osProvider"] = state ? state.f5osProvider : undefined;
            resourceInputs["instance"] = state ? state.instance : undefined;
            resourceInputs["providerId"] = state ? state.providerId : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
        } else {
            const args = argsOrState as CmDeployF5osArgs | undefined;
            if ((!args || args.f5osProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'f5osProvider'");
            }
            if ((!args || args.instance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instance'");
            }
            resourceInputs["f5osProvider"] = args ? args.f5osProvider : undefined;
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["providerId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CmDeployF5os.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CmDeployF5os resources.
 */
export interface CmDeployF5osState {
    f5osProvider?: pulumi.Input<inputs.CmDeployF5osF5osProvider>;
    instance?: pulumi.Input<inputs.CmDeployF5osInstance>;
    /**
     * Unique Identifier for the F5OS provider
     */
    providerId?: pulumi.Input<string>;
    /**
     * The number of seconds to wait for instance deployment to finish.
     */
    timeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CmDeployF5os resource.
 */
export interface CmDeployF5osArgs {
    f5osProvider: pulumi.Input<inputs.CmDeployF5osF5osProvider>;
    instance: pulumi.Input<inputs.CmDeployF5osInstance>;
    /**
     * The number of seconds to wait for instance deployment to finish.
     */
    timeout?: pulumi.Input<number>;
}
