// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CmCertificate extends pulumi.CustomResource {
    /**
     * Get an existing CmCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CmCertificateState, opts?: pulumi.CustomResourceOptions): CmCertificate {
        return new CmCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bigipnext:index/cmCertificate:CmCertificate';

    /**
     * Returns true if the given object is an instance of CmCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CmCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CmCertificate.__pulumiType;
    }

    /**
     * An administrator email to contact your organization
     */
    public readonly administratorEmail!: pulumi.Output<string | undefined>;
    /**
     * challenge password
     */
    public readonly challengePassword!: pulumi.Output<string | undefined>;
    /**
     * The fully qualified domain name of your server. The common_name of the certificate cannot be empty
     */
    public readonly commonName!: pulumi.Output<string>;
    /**
     * The country where your organization is located. An SSL certificate country code is a two-letter code that's used when
     * you generate a CSR. It is Array of strings
     */
    public readonly countries!: pulumi.Output<string[] | undefined>;
    /**
     * The division of your organization handling the certificate. It is Array of strings
     */
    public readonly divisions!: pulumi.Output<string[] | undefined>;
    /**
     * duration in days
     */
    public readonly durationInDays!: pulumi.Output<number>;
    /**
     * An email address to contact your organization. It is Array of strings
     */
    public readonly emails!: pulumi.Output<string[] | undefined>;
    /**
     * issuer details
     */
    public readonly issuer!: pulumi.Output<string>;
    /**
     * Supported curve names for ECDSA- secp384r1, prime256v1
     */
    public readonly keyCurveName!: pulumi.Output<string | undefined>;
    /**
     * key passphrase, A passphrase is a word or phrase that protects private key files, It prevents unauthorized users from
     * encrypting them. Usually it's just the secret encryption/decryption key used for Ciphers.
     */
    public readonly keyPassphrase!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether key is password protected
     */
    public readonly keySecurityType!: pulumi.Output<string>;
    /**
     * Size of key - the number of bits in a key used by a cryptographic algorithm. Supported key size for RSA - 2048, 3072,
     * 4096
     */
    public readonly keySize!: pulumi.Output<number>;
    /**
     * Specifies Key type to be either `RSA` or `ECDSA`
     */
    public readonly keyType!: pulumi.Output<string>;
    /**
     * The locality where your organization is located. It is Array of strings
     */
    public readonly localities!: pulumi.Output<string[] | undefined>;
    /**
     * The unique user-given name of the certificate. Certificate names cannot contain spaces or special characters. The
     * allowed characters are a-z, A-Z, 0-9, dot(.), dash (-) and underscore (_). Names starting with only a-z, A-Z.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The legal name of your organization. It is Array of strings
     */
    public readonly organizations!: pulumi.Output<string[] | undefined>;
    /**
     * The state where your organization is located. It is Array of strings
     */
    public readonly states!: pulumi.Output<string[] | undefined>;
    /**
     * A SAN or subject alternative name is a structured way to indicate all of the domain names and IP addresses that are
     * secured by the certificate
     */
    public readonly subjectAlternativeName!: pulumi.Output<string | undefined>;

    /**
     * Create a CmCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CmCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CmCertificateArgs | CmCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CmCertificateState | undefined;
            resourceInputs["administratorEmail"] = state ? state.administratorEmail : undefined;
            resourceInputs["challengePassword"] = state ? state.challengePassword : undefined;
            resourceInputs["commonName"] = state ? state.commonName : undefined;
            resourceInputs["countries"] = state ? state.countries : undefined;
            resourceInputs["divisions"] = state ? state.divisions : undefined;
            resourceInputs["durationInDays"] = state ? state.durationInDays : undefined;
            resourceInputs["emails"] = state ? state.emails : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["keyCurveName"] = state ? state.keyCurveName : undefined;
            resourceInputs["keyPassphrase"] = state ? state.keyPassphrase : undefined;
            resourceInputs["keySecurityType"] = state ? state.keySecurityType : undefined;
            resourceInputs["keySize"] = state ? state.keySize : undefined;
            resourceInputs["keyType"] = state ? state.keyType : undefined;
            resourceInputs["localities"] = state ? state.localities : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["states"] = state ? state.states : undefined;
            resourceInputs["subjectAlternativeName"] = state ? state.subjectAlternativeName : undefined;
        } else {
            const args = argsOrState as CmCertificateArgs | undefined;
            if ((!args || args.commonName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'commonName'");
            }
            if ((!args || args.durationInDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'durationInDays'");
            }
            resourceInputs["administratorEmail"] = args ? args.administratorEmail : undefined;
            resourceInputs["challengePassword"] = args ? args.challengePassword : undefined;
            resourceInputs["commonName"] = args ? args.commonName : undefined;
            resourceInputs["countries"] = args ? args.countries : undefined;
            resourceInputs["divisions"] = args ? args.divisions : undefined;
            resourceInputs["durationInDays"] = args ? args.durationInDays : undefined;
            resourceInputs["emails"] = args ? args.emails : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["keyCurveName"] = args ? args.keyCurveName : undefined;
            resourceInputs["keyPassphrase"] = args ? args.keyPassphrase : undefined;
            resourceInputs["keySecurityType"] = args ? args.keySecurityType : undefined;
            resourceInputs["keySize"] = args ? args.keySize : undefined;
            resourceInputs["keyType"] = args ? args.keyType : undefined;
            resourceInputs["localities"] = args ? args.localities : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["states"] = args ? args.states : undefined;
            resourceInputs["subjectAlternativeName"] = args ? args.subjectAlternativeName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CmCertificate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CmCertificate resources.
 */
export interface CmCertificateState {
    /**
     * An administrator email to contact your organization
     */
    administratorEmail?: pulumi.Input<string>;
    /**
     * challenge password
     */
    challengePassword?: pulumi.Input<string>;
    /**
     * The fully qualified domain name of your server. The common_name of the certificate cannot be empty
     */
    commonName?: pulumi.Input<string>;
    /**
     * The country where your organization is located. An SSL certificate country code is a two-letter code that's used when
     * you generate a CSR. It is Array of strings
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The division of your organization handling the certificate. It is Array of strings
     */
    divisions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * duration in days
     */
    durationInDays?: pulumi.Input<number>;
    /**
     * An email address to contact your organization. It is Array of strings
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * issuer details
     */
    issuer?: pulumi.Input<string>;
    /**
     * Supported curve names for ECDSA- secp384r1, prime256v1
     */
    keyCurveName?: pulumi.Input<string>;
    /**
     * key passphrase, A passphrase is a word or phrase that protects private key files, It prevents unauthorized users from
     * encrypting them. Usually it's just the secret encryption/decryption key used for Ciphers.
     */
    keyPassphrase?: pulumi.Input<string>;
    /**
     * Specifies whether key is password protected
     */
    keySecurityType?: pulumi.Input<string>;
    /**
     * Size of key - the number of bits in a key used by a cryptographic algorithm. Supported key size for RSA - 2048, 3072,
     * 4096
     */
    keySize?: pulumi.Input<number>;
    /**
     * Specifies Key type to be either `RSA` or `ECDSA`
     */
    keyType?: pulumi.Input<string>;
    /**
     * The locality where your organization is located. It is Array of strings
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique user-given name of the certificate. Certificate names cannot contain spaces or special characters. The
     * allowed characters are a-z, A-Z, 0-9, dot(.), dash (-) and underscore (_). Names starting with only a-z, A-Z.
     */
    name?: pulumi.Input<string>;
    /**
     * The legal name of your organization. It is Array of strings
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The state where your organization is located. It is Array of strings
     */
    states?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A SAN or subject alternative name is a structured way to indicate all of the domain names and IP addresses that are
     * secured by the certificate
     */
    subjectAlternativeName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CmCertificate resource.
 */
export interface CmCertificateArgs {
    /**
     * An administrator email to contact your organization
     */
    administratorEmail?: pulumi.Input<string>;
    /**
     * challenge password
     */
    challengePassword?: pulumi.Input<string>;
    /**
     * The fully qualified domain name of your server. The common_name of the certificate cannot be empty
     */
    commonName: pulumi.Input<string>;
    /**
     * The country where your organization is located. An SSL certificate country code is a two-letter code that's used when
     * you generate a CSR. It is Array of strings
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The division of your organization handling the certificate. It is Array of strings
     */
    divisions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * duration in days
     */
    durationInDays: pulumi.Input<number>;
    /**
     * An email address to contact your organization. It is Array of strings
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * issuer details
     */
    issuer?: pulumi.Input<string>;
    /**
     * Supported curve names for ECDSA- secp384r1, prime256v1
     */
    keyCurveName?: pulumi.Input<string>;
    /**
     * key passphrase, A passphrase is a word or phrase that protects private key files, It prevents unauthorized users from
     * encrypting them. Usually it's just the secret encryption/decryption key used for Ciphers.
     */
    keyPassphrase?: pulumi.Input<string>;
    /**
     * Specifies whether key is password protected
     */
    keySecurityType?: pulumi.Input<string>;
    /**
     * Size of key - the number of bits in a key used by a cryptographic algorithm. Supported key size for RSA - 2048, 3072,
     * 4096
     */
    keySize?: pulumi.Input<number>;
    /**
     * Specifies Key type to be either `RSA` or `ECDSA`
     */
    keyType?: pulumi.Input<string>;
    /**
     * The locality where your organization is located. It is Array of strings
     */
    localities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique user-given name of the certificate. Certificate names cannot contain spaces or special characters. The
     * allowed characters are a-z, A-Z, 0-9, dot(.), dash (-) and underscore (_). Names starting with only a-z, A-Z.
     */
    name?: pulumi.Input<string>;
    /**
     * The legal name of your organization. It is Array of strings
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The state where your organization is located. It is Array of strings
     */
    states?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A SAN or subject alternative name is a structured way to indicate all of the domain names and IP addresses that are
     * secured by the certificate
     */
    subjectAlternativeName?: pulumi.Input<string>;
}
