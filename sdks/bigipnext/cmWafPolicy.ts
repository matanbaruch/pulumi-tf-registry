// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CmWafPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CmWafPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CmWafPolicyState, opts?: pulumi.CustomResourceOptions): CmWafPolicy {
        return new CmWafPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bigipnext:index/cmWafPolicy:CmWafPolicy';

    /**
     * Returns true if the given object is an instance of CmWafPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CmWafPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CmWafPolicy.__pulumiType;
    }

    /**
     * The character encoding for the web application. Character encoding determines how the policy processes the character
     * sets.
     */
    public readonly applicationLanguage!: pulumi.Output<string>;
    /**
     * Specifies whether the blocking setting is to be enabled or not. The default value of blocking_settings is True.
     */
    public readonly blockingSettings!: pulumi.Output<outputs.CmWafPolicyBlockingSettings | undefined>;
    /**
     * Specifies whether the bot defense for Policy is to be enabled or not. The default value of bot_defense is True.
     */
    public readonly botDefense!: pulumi.Output<outputs.CmWafPolicyBotDefense | undefined>;
    /**
     * Specifies the description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the dos protection for Policy is to be enabled or not. The default value of dos_protection is False.
     */
    public readonly dosProtection!: pulumi.Output<outputs.CmWafPolicyDosProtection | undefined>;
    /**
     * Specifies How BIG-IP MA processes a request that triggers a security policy violation. *Blocking: When the enforcement
     * mode is set to blocking, any triggered violation is blocked (configured for blocking). *Transparent: When the
     * enforcement mode is set to transparent, traffic is not blocked even if a violation is triggered.
     */
    public readonly enforcementMode!: pulumi.Output<string>;
    /**
     * Specifies whether the bot ip_intelligence for Policy is to be enabled or not. The default value of ip_intelligence is
     * True.
     */
    public readonly ipIntelligence!: pulumi.Output<outputs.CmWafPolicyIpIntelligence | undefined>;
    /**
     * The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters
     * are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the Tags for marking policies.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The name of the template used to create the WAF policy. Template cannot be updated
     */
    public readonly templateName!: pulumi.Output<string>;

    /**
     * Create a CmWafPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CmWafPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CmWafPolicyArgs | CmWafPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CmWafPolicyState | undefined;
            resourceInputs["applicationLanguage"] = state ? state.applicationLanguage : undefined;
            resourceInputs["blockingSettings"] = state ? state.blockingSettings : undefined;
            resourceInputs["botDefense"] = state ? state.botDefense : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dosProtection"] = state ? state.dosProtection : undefined;
            resourceInputs["enforcementMode"] = state ? state.enforcementMode : undefined;
            resourceInputs["ipIntelligence"] = state ? state.ipIntelligence : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
        } else {
            const args = argsOrState as CmWafPolicyArgs | undefined;
            if ((!args || args.applicationLanguage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationLanguage'");
            }
            if ((!args || args.enforcementMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enforcementMode'");
            }
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            resourceInputs["applicationLanguage"] = args ? args.applicationLanguage : undefined;
            resourceInputs["blockingSettings"] = args ? args.blockingSettings : undefined;
            resourceInputs["botDefense"] = args ? args.botDefense : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dosProtection"] = args ? args.dosProtection : undefined;
            resourceInputs["enforcementMode"] = args ? args.enforcementMode : undefined;
            resourceInputs["ipIntelligence"] = args ? args.ipIntelligence : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CmWafPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CmWafPolicy resources.
 */
export interface CmWafPolicyState {
    /**
     * The character encoding for the web application. Character encoding determines how the policy processes the character
     * sets.
     */
    applicationLanguage?: pulumi.Input<string>;
    /**
     * Specifies whether the blocking setting is to be enabled or not. The default value of blocking_settings is True.
     */
    blockingSettings?: pulumi.Input<inputs.CmWafPolicyBlockingSettings>;
    /**
     * Specifies whether the bot defense for Policy is to be enabled or not. The default value of bot_defense is True.
     */
    botDefense?: pulumi.Input<inputs.CmWafPolicyBotDefense>;
    /**
     * Specifies the description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether the dos protection for Policy is to be enabled or not. The default value of dos_protection is False.
     */
    dosProtection?: pulumi.Input<inputs.CmWafPolicyDosProtection>;
    /**
     * Specifies How BIG-IP MA processes a request that triggers a security policy violation. *Blocking: When the enforcement
     * mode is set to blocking, any triggered violation is blocked (configured for blocking). *Transparent: When the
     * enforcement mode is set to transparent, traffic is not blocked even if a violation is triggered.
     */
    enforcementMode?: pulumi.Input<string>;
    /**
     * Specifies whether the bot ip_intelligence for Policy is to be enabled or not. The default value of ip_intelligence is
     * True.
     */
    ipIntelligence?: pulumi.Input<inputs.CmWafPolicyIpIntelligence>;
    /**
     * The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters
     * are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the Tags for marking policies.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the template used to create the WAF policy. Template cannot be updated
     */
    templateName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CmWafPolicy resource.
 */
export interface CmWafPolicyArgs {
    /**
     * The character encoding for the web application. Character encoding determines how the policy processes the character
     * sets.
     */
    applicationLanguage: pulumi.Input<string>;
    /**
     * Specifies whether the blocking setting is to be enabled or not. The default value of blocking_settings is True.
     */
    blockingSettings?: pulumi.Input<inputs.CmWafPolicyBlockingSettings>;
    /**
     * Specifies whether the bot defense for Policy is to be enabled or not. The default value of bot_defense is True.
     */
    botDefense?: pulumi.Input<inputs.CmWafPolicyBotDefense>;
    /**
     * Specifies the description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether the dos protection for Policy is to be enabled or not. The default value of dos_protection is False.
     */
    dosProtection?: pulumi.Input<inputs.CmWafPolicyDosProtection>;
    /**
     * Specifies How BIG-IP MA processes a request that triggers a security policy violation. *Blocking: When the enforcement
     * mode is set to blocking, any triggered violation is blocked (configured for blocking). *Transparent: When the
     * enforcement mode is set to transparent, traffic is not blocked even if a violation is triggered.
     */
    enforcementMode: pulumi.Input<string>;
    /**
     * Specifies whether the bot ip_intelligence for Policy is to be enabled or not. The default value of ip_intelligence is
     * True.
     */
    ipIntelligence?: pulumi.Input<inputs.CmWafPolicyIpIntelligence>;
    /**
     * The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters
     * are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the Tags for marking policies.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the template used to create the WAF policy. Template cannot be updated
     */
    templateName: pulumi.Input<string>;
}
