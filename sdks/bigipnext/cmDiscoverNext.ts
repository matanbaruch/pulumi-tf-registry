// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CmDiscoverNext extends pulumi.CustomResource {
    /**
     * Get an existing CmDiscoverNext resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CmDiscoverNextState, opts?: pulumi.CustomResourceOptions): CmDiscoverNext {
        return new CmDiscoverNext(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bigipnext:index/cmDiscoverNext:CmDiscoverNext';

    /**
     * Returns true if the given object is an instance of CmDiscoverNext.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CmDiscoverNext {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CmDiscoverNext.__pulumiType;
    }

    /**
     * IP Address of the BIG-IP Next instance to be discovered
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * The password that the BIG-IP Next Central Manager uses before Instance discovery for BIG-IP Next management
     */
    public readonly devicePassword!: pulumi.Output<string>;
    /**
     * The username that the BIG-IP Next Central Manager uses before Instance discovery for BIG-IP Next management
     */
    public readonly deviceUser!: pulumi.Output<string>;
    /**
     * The password that the BIG-IP Next Central Manager uses after Instance Discovery for BIG-IP Next management
     */
    public readonly managementPassword!: pulumi.Output<string>;
    /**
     * The username that the BIG-IP Next Central Manager uses after Instance Discovery for BIG-IP Next management
     */
    public readonly managementUser!: pulumi.Output<string>;
    /**
     * Port number of the BIG-IP Next instance to be discovered
     */
    public readonly port!: pulumi.Output<number>;

    /**
     * Create a CmDiscoverNext resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CmDiscoverNextArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CmDiscoverNextArgs | CmDiscoverNextState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CmDiscoverNextState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["devicePassword"] = state ? state.devicePassword : undefined;
            resourceInputs["deviceUser"] = state ? state.deviceUser : undefined;
            resourceInputs["managementPassword"] = state ? state.managementPassword : undefined;
            resourceInputs["managementUser"] = state ? state.managementUser : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
        } else {
            const args = argsOrState as CmDiscoverNextArgs | undefined;
            if ((!args || args.address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if ((!args || args.devicePassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'devicePassword'");
            }
            if ((!args || args.deviceUser === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceUser'");
            }
            if ((!args || args.managementPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementPassword'");
            }
            if ((!args || args.managementUser === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementUser'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["devicePassword"] = args?.devicePassword ? pulumi.secret(args.devicePassword) : undefined;
            resourceInputs["deviceUser"] = args ? args.deviceUser : undefined;
            resourceInputs["managementPassword"] = args?.managementPassword ? pulumi.secret(args.managementPassword) : undefined;
            resourceInputs["managementUser"] = args ? args.managementUser : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["devicePassword", "managementPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CmDiscoverNext.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CmDiscoverNext resources.
 */
export interface CmDiscoverNextState {
    /**
     * IP Address of the BIG-IP Next instance to be discovered
     */
    address?: pulumi.Input<string>;
    /**
     * The password that the BIG-IP Next Central Manager uses before Instance discovery for BIG-IP Next management
     */
    devicePassword?: pulumi.Input<string>;
    /**
     * The username that the BIG-IP Next Central Manager uses before Instance discovery for BIG-IP Next management
     */
    deviceUser?: pulumi.Input<string>;
    /**
     * The password that the BIG-IP Next Central Manager uses after Instance Discovery for BIG-IP Next management
     */
    managementPassword?: pulumi.Input<string>;
    /**
     * The username that the BIG-IP Next Central Manager uses after Instance Discovery for BIG-IP Next management
     */
    managementUser?: pulumi.Input<string>;
    /**
     * Port number of the BIG-IP Next instance to be discovered
     */
    port?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CmDiscoverNext resource.
 */
export interface CmDiscoverNextArgs {
    /**
     * IP Address of the BIG-IP Next instance to be discovered
     */
    address: pulumi.Input<string>;
    /**
     * The password that the BIG-IP Next Central Manager uses before Instance discovery for BIG-IP Next management
     */
    devicePassword: pulumi.Input<string>;
    /**
     * The username that the BIG-IP Next Central Manager uses before Instance discovery for BIG-IP Next management
     */
    deviceUser: pulumi.Input<string>;
    /**
     * The password that the BIG-IP Next Central Manager uses after Instance Discovery for BIG-IP Next management
     */
    managementPassword: pulumi.Input<string>;
    /**
     * The username that the BIG-IP Next Central Manager uses after Instance Discovery for BIG-IP Next management
     */
    managementUser: pulumi.Input<string>;
    /**
     * Port number of the BIG-IP Next instance to be discovered
     */
    port: pulumi.Input<number>;
}
