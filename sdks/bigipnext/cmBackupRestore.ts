// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CmBackupRestore extends pulumi.CustomResource {
    /**
     * Get an existing CmBackupRestore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CmBackupRestoreState, opts?: pulumi.CustomResourceOptions): CmBackupRestore {
        return new CmBackupRestore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'bigipnext:index/cmBackupRestore:CmBackupRestore';

    /**
     * Returns true if the given object is an instance of CmBackupRestore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CmBackupRestore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CmBackupRestore.__pulumiType;
    }

    /**
     * The timestamp when backup file was created. In ISO 8601 format
     */
    public /*out*/ readonly backupDate!: pulumi.Output<string>;
    /**
     * User password for the backup file.
     */
    public readonly backupPassword!: pulumi.Output<string>;
    /**
     * Hostname of the device managed by BIG-IP Next CM. Parameter required for create operations.
     */
    public readonly deviceHostname!: pulumi.Output<string | undefined>;
    /**
     * IP Address of the device managed by BIG-IP Next CM. Parameter required for create operations.
     */
    public readonly deviceIp!: pulumi.Output<string | undefined>;
    /**
     * Name of the backup file to create, or use.
     */
    public readonly fileName!: pulumi.Output<string>;
    /**
     * UUID of the NEXT instance which config was backed up or restored.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    /**
     * Type of operation to perform.
     */
    public readonly operation!: pulumi.Output<string>;
    /**
     * The timestamp when restore operation was performed. In ISO 8601 format
     */
    public /*out*/ readonly restoreDate!: pulumi.Output<string>;
    /**
     * The number of seconds to wait for backup or restore operation to complete.
     */
    public readonly timeout!: pulumi.Output<number>;

    /**
     * Create a CmBackupRestore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CmBackupRestoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CmBackupRestoreArgs | CmBackupRestoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CmBackupRestoreState | undefined;
            resourceInputs["backupDate"] = state ? state.backupDate : undefined;
            resourceInputs["backupPassword"] = state ? state.backupPassword : undefined;
            resourceInputs["deviceHostname"] = state ? state.deviceHostname : undefined;
            resourceInputs["deviceIp"] = state ? state.deviceIp : undefined;
            resourceInputs["fileName"] = state ? state.fileName : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["operation"] = state ? state.operation : undefined;
            resourceInputs["restoreDate"] = state ? state.restoreDate : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
        } else {
            const args = argsOrState as CmBackupRestoreArgs | undefined;
            if ((!args || args.backupPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupPassword'");
            }
            if ((!args || args.fileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileName'");
            }
            if ((!args || args.operation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operation'");
            }
            resourceInputs["backupPassword"] = args?.backupPassword ? pulumi.secret(args.backupPassword) : undefined;
            resourceInputs["deviceHostname"] = args ? args.deviceHostname : undefined;
            resourceInputs["deviceIp"] = args ? args.deviceIp : undefined;
            resourceInputs["fileName"] = args ? args.fileName : undefined;
            resourceInputs["operation"] = args ? args.operation : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["backupDate"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["restoreDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["backupPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CmBackupRestore.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CmBackupRestore resources.
 */
export interface CmBackupRestoreState {
    /**
     * The timestamp when backup file was created. In ISO 8601 format
     */
    backupDate?: pulumi.Input<string>;
    /**
     * User password for the backup file.
     */
    backupPassword?: pulumi.Input<string>;
    /**
     * Hostname of the device managed by BIG-IP Next CM. Parameter required for create operations.
     */
    deviceHostname?: pulumi.Input<string>;
    /**
     * IP Address of the device managed by BIG-IP Next CM. Parameter required for create operations.
     */
    deviceIp?: pulumi.Input<string>;
    /**
     * Name of the backup file to create, or use.
     */
    fileName?: pulumi.Input<string>;
    /**
     * UUID of the NEXT instance which config was backed up or restored.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Type of operation to perform.
     */
    operation?: pulumi.Input<string>;
    /**
     * The timestamp when restore operation was performed. In ISO 8601 format
     */
    restoreDate?: pulumi.Input<string>;
    /**
     * The number of seconds to wait for backup or restore operation to complete.
     */
    timeout?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CmBackupRestore resource.
 */
export interface CmBackupRestoreArgs {
    /**
     * User password for the backup file.
     */
    backupPassword: pulumi.Input<string>;
    /**
     * Hostname of the device managed by BIG-IP Next CM. Parameter required for create operations.
     */
    deviceHostname?: pulumi.Input<string>;
    /**
     * IP Address of the device managed by BIG-IP Next CM. Parameter required for create operations.
     */
    deviceIp?: pulumi.Input<string>;
    /**
     * Name of the backup file to create, or use.
     */
    fileName: pulumi.Input<string>;
    /**
     * Type of operation to perform.
     */
    operation: pulumi.Input<string>;
    /**
     * The number of seconds to wait for backup or restore operation to complete.
     */
    timeout?: pulumi.Input<number>;
}
