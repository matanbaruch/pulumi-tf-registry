// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRulestack(args: GetRulestackArgs, opts?: pulumi.InvokeOptions): Promise<GetRulestackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudngfwaws:index/getRulestack:getRulestack", {
        "configType": args.configType,
        "id": args.id,
        "name": args.name,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRulestack.
 */
export interface GetRulestackArgs {
    configType?: string;
    id?: string;
    name: string;
    scope?: string;
}

/**
 * A collection of values returned by getRulestack.
 */
export interface GetRulestackResult {
    readonly accountGroup: string;
    readonly accountId: string;
    readonly configType?: string;
    readonly description: string;
    readonly id: string;
    readonly lookupXForwardedFor: string;
    readonly minimumAppIdVersion: string;
    readonly name: string;
    readonly profileConfigs: outputs.GetRulestackProfileConfig[];
    readonly scope?: string;
    readonly state: string;
    readonly tags: {[key: string]: string};
}
export function getRulestackOutput(args: GetRulestackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRulestackResult> {
    return pulumi.output(args).apply((a: any) => getRulestack(a, opts))
}

/**
 * A collection of arguments for invoking getRulestack.
 */
export interface GetRulestackOutputArgs {
    configType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}
