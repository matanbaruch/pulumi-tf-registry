// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getValidateRulestack(args: GetValidateRulestackArgs, opts?: pulumi.InvokeOptions): Promise<GetValidateRulestackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudngfwaws:index/getValidateRulestack:getValidateRulestack", {
        "id": args.id,
        "rulestack": args.rulestack,
        "scope": args.scope,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getValidateRulestack.
 */
export interface GetValidateRulestackArgs {
    id?: string;
    rulestack: string;
    scope?: string;
    timeouts?: inputs.GetValidateRulestackTimeouts;
}

/**
 * A collection of values returned by getValidateRulestack.
 */
export interface GetValidateRulestackResult {
    readonly commitErrors: string[];
    readonly commitStatus: string;
    readonly id: string;
    readonly rulestack: string;
    readonly scope?: string;
    readonly state: string;
    readonly timeouts?: outputs.GetValidateRulestackTimeouts;
    readonly validationErrors: string[];
    readonly validationStatus: string;
}
export function getValidateRulestackOutput(args: GetValidateRulestackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetValidateRulestackResult> {
    return pulumi.output(args).apply((a: any) => getValidateRulestack(a, opts))
}

/**
 * A collection of arguments for invoking getValidateRulestack.
 */
export interface GetValidateRulestackOutputArgs {
    id?: pulumi.Input<string>;
    rulestack: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetValidateRulestackTimeoutsArgs>;
}
