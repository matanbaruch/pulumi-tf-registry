// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNgfwLogProfile(args: GetNgfwLogProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetNgfwLogProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudngfwaws:index/getNgfwLogProfile:getNgfwLogProfile", {
        "accountId": args.accountId,
        "id": args.id,
        "ngfw": args.ngfw,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNgfwLogProfile.
 */
export interface GetNgfwLogProfileArgs {
    accountId: string;
    id?: string;
    ngfw: string;
}

/**
 * A collection of values returned by getNgfwLogProfile.
 */
export interface GetNgfwLogProfileResult {
    readonly accountId: string;
    readonly advancedThreatLog: boolean;
    readonly cloudWatchMetricNamespace: string;
    readonly cloudwatchMetricFields: string[];
    readonly id: string;
    readonly logDestinations: outputs.GetNgfwLogProfileLogDestination[];
    readonly ngfw: string;
}
export function getNgfwLogProfileOutput(args: GetNgfwLogProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNgfwLogProfileResult> {
    return pulumi.output(args).apply((a: any) => getNgfwLogProfile(a, opts))
}

/**
 * A collection of arguments for invoking getNgfwLogProfile.
 */
export interface GetNgfwLogProfileOutputArgs {
    accountId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ngfw: pulumi.Input<string>;
}
