// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppIdVersion(args: GetAppIdVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetAppIdVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudngfwaws:index/getAppIdVersion:getAppIdVersion", {
        "id": args.id,
        "maxResults": args.maxResults,
        "token": args.token,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppIdVersion.
 */
export interface GetAppIdVersionArgs {
    id?: string;
    maxResults?: number;
    token?: string;
    version: string;
}

/**
 * A collection of values returned by getAppIdVersion.
 */
export interface GetAppIdVersionResult {
    readonly applications: string[];
    readonly id: string;
    readonly maxResults?: number;
    readonly nextToken: string;
    readonly token?: string;
    readonly version: string;
}
export function getAppIdVersionOutput(args: GetAppIdVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppIdVersionResult> {
    return pulumi.output(args).apply((a: any) => getAppIdVersion(a, opts))
}

/**
 * A collection of arguments for invoking getAppIdVersion.
 */
export interface GetAppIdVersionOutputArgs {
    id?: pulumi.Input<string>;
    maxResults?: pulumi.Input<number>;
    token?: pulumi.Input<string>;
    version: pulumi.Input<string>;
}
