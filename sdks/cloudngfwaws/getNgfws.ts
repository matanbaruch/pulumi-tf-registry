// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNgfws(args?: GetNgfwsArgs, opts?: pulumi.InvokeOptions): Promise<GetNgfwsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudngfwaws:index/getNgfws:getNgfws", {
        "id": args.id,
        "rulestack": args.rulestack,
        "vpcIds": args.vpcIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNgfws.
 */
export interface GetNgfwsArgs {
    id?: string;
    rulestack?: string;
    vpcIds?: string[];
}

/**
 * A collection of values returned by getNgfws.
 */
export interface GetNgfwsResult {
    readonly id: string;
    readonly instances: outputs.GetNgfwsInstance[];
    readonly rulestack?: string;
    readonly vpcIds?: string[];
}
export function getNgfwsOutput(args?: GetNgfwsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNgfwsResult> {
    return pulumi.output(args).apply((a: any) => getNgfws(a, opts))
}

/**
 * A collection of arguments for invoking getNgfws.
 */
export interface GetNgfwsOutputArgs {
    id?: pulumi.Input<string>;
    rulestack?: pulumi.Input<string>;
    vpcIds?: pulumi.Input<pulumi.Input<string>[]>;
}
