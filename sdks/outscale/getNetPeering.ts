// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetPeering(args?: GetNetPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetNetPeeringResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getNetPeering:getNetPeering", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetPeering.
 */
export interface GetNetPeeringArgs {
    filters?: inputs.GetNetPeeringFilter[];
    id?: string;
}

/**
 * A collection of values returned by getNetPeering.
 */
export interface GetNetPeeringResult {
    readonly accepterNet: {[key: string]: string};
    readonly filters?: outputs.GetNetPeeringFilter[];
    readonly id: string;
    readonly netPeeringId: string;
    readonly requestId: string;
    readonly sourceNet: {[key: string]: string};
    readonly state: {[key: string]: string};
    readonly tags: outputs.GetNetPeeringTag[];
}
export function getNetPeeringOutput(args?: GetNetPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetPeeringResult> {
    return pulumi.output(args).apply((a: any) => getNetPeering(a, opts))
}

/**
 * A collection of arguments for invoking getNetPeering.
 */
export interface GetNetPeeringOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNetPeeringFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
