// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImageExportTask(args?: GetImageExportTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetImageExportTaskResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getImageExportTask:getImageExportTask", {
        "dryRun": args.dryRun,
        "filters": args.filters,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImageExportTask.
 */
export interface GetImageExportTaskArgs {
    dryRun?: boolean;
    filters?: inputs.GetImageExportTaskFilter[];
    id?: string;
    timeouts?: inputs.GetImageExportTaskTimeouts;
}

/**
 * A collection of values returned by getImageExportTask.
 */
export interface GetImageExportTaskResult {
    readonly comment: string;
    readonly dryRun: boolean;
    readonly filters?: outputs.GetImageExportTaskFilter[];
    readonly id: string;
    readonly imageId: string;
    readonly osuExports: outputs.GetImageExportTaskOsuExport[];
    readonly progress: number;
    readonly requestId: string;
    readonly state: string;
    readonly tags: outputs.GetImageExportTaskTag[];
    readonly taskId: string;
    readonly timeouts?: outputs.GetImageExportTaskTimeouts;
}
export function getImageExportTaskOutput(args?: GetImageExportTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageExportTaskResult> {
    return pulumi.output(args).apply((a: any) => getImageExportTask(a, opts))
}

/**
 * A collection of arguments for invoking getImageExportTask.
 */
export interface GetImageExportTaskOutputArgs {
    dryRun?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetImageExportTaskFilterArgs>[]>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetImageExportTaskTimeoutsArgs>;
}
