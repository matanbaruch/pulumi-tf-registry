// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCas(args?: GetCasArgs, opts?: pulumi.InvokeOptions): Promise<GetCasResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getCas:getCas", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCas.
 */
export interface GetCasArgs {
    filters?: inputs.GetCasFilter[];
    id?: string;
}

/**
 * A collection of values returned by getCas.
 */
export interface GetCasResult {
    readonly cas: outputs.GetCasCa[];
    readonly filters?: outputs.GetCasFilter[];
    readonly id: string;
    readonly requestId: string;
}
export function getCasOutput(args?: GetCasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCasResult> {
    return pulumi.output(args).apply((a: any) => getCas(a, opts))
}

/**
 * A collection of arguments for invoking getCas.
 */
export interface GetCasOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetCasFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
