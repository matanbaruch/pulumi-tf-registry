// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNets(args?: GetNetsArgs, opts?: pulumi.InvokeOptions): Promise<GetNetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getNets:getNets", {
        "filters": args.filters,
        "id": args.id,
        "netIds": args.netIds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNets.
 */
export interface GetNetsArgs {
    filters?: inputs.GetNetsFilter[];
    id?: string;
    netIds?: string[];
}

/**
 * A collection of values returned by getNets.
 */
export interface GetNetsResult {
    readonly filters?: outputs.GetNetsFilter[];
    readonly id: string;
    readonly netIds?: string[];
    readonly nets: outputs.GetNetsNet[];
    readonly requestId: string;
}
export function getNetsOutput(args?: GetNetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetsResult> {
    return pulumi.output(args).apply((a: any) => getNets(a, opts))
}

/**
 * A collection of arguments for invoking getNets.
 */
export interface GetNetsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetNetsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    netIds?: pulumi.Input<pulumi.Input<string>[]>;
}
