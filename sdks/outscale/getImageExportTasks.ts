// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImageExportTasks(args?: GetImageExportTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetImageExportTasksResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getImageExportTasks:getImageExportTasks", {
        "dryRun": args.dryRun,
        "filters": args.filters,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImageExportTasks.
 */
export interface GetImageExportTasksArgs {
    dryRun?: boolean;
    filters?: inputs.GetImageExportTasksFilter[];
    id?: string;
    timeouts?: inputs.GetImageExportTasksTimeouts;
}

/**
 * A collection of values returned by getImageExportTasks.
 */
export interface GetImageExportTasksResult {
    readonly dryRun: boolean;
    readonly filters?: outputs.GetImageExportTasksFilter[];
    readonly id: string;
    readonly imageExportTasks: outputs.GetImageExportTasksImageExportTask[];
    readonly requestId: string;
    readonly timeouts?: outputs.GetImageExportTasksTimeouts;
}
export function getImageExportTasksOutput(args?: GetImageExportTasksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageExportTasksResult> {
    return pulumi.output(args).apply((a: any) => getImageExportTasks(a, opts))
}

/**
 * A collection of arguments for invoking getImageExportTasks.
 */
export interface GetImageExportTasksOutputArgs {
    dryRun?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetImageExportTasksFilterArgs>[]>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetImageExportTasksTimeoutsArgs>;
}
