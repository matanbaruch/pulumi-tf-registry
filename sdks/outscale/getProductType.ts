// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProductType(args?: GetProductTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetProductTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("outscale:index/getProductType:getProductType", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProductType.
 */
export interface GetProductTypeArgs {
    filters?: inputs.GetProductTypeFilter[];
    id?: string;
}

/**
 * A collection of values returned by getProductType.
 */
export interface GetProductTypeResult {
    readonly description: string;
    readonly filters?: outputs.GetProductTypeFilter[];
    readonly id: string;
    readonly productTypeId: string;
    readonly requestId: string;
    readonly vendor: string;
}
export function getProductTypeOutput(args?: GetProductTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductTypeResult> {
    return pulumi.output(args).apply((a: any) => getProductType(a, opts))
}

/**
 * A collection of arguments for invoking getProductType.
 */
export interface GetProductTypeOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetProductTypeFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
