// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ExternalFeedCreateReleaseTrigger extends pulumi.CustomResource {
    /**
     * Get an existing ExternalFeedCreateReleaseTrigger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalFeedCreateReleaseTriggerState, opts?: pulumi.CustomResourceOptions): ExternalFeedCreateReleaseTrigger {
        return new ExternalFeedCreateReleaseTrigger(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'octopusdeploy:index/externalFeedCreateReleaseTrigger:ExternalFeedCreateReleaseTrigger';

    /**
     * Returns true if the given object is an instance of ExternalFeedCreateReleaseTrigger.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExternalFeedCreateReleaseTrigger {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalFeedCreateReleaseTrigger.__pulumiType;
    }

    /**
     * The ID of the channel in which the release will be created if the action type is CreateRelease.
     */
    public readonly channelId!: pulumi.Output<string>;
    /**
     * Disables the trigger from being run when set.
     */
    public readonly isDisabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of this resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will
     * trigger release creation.
     */
    public readonly packages!: pulumi.Output<outputs.ExternalFeedCreateReleaseTriggerPackage[] | undefined>;
    /**
     * List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the
     * packages you select will trigger release creation.
     */
    public readonly primaryPackages!: pulumi.Output<outputs.ExternalFeedCreateReleaseTriggerPrimaryPackage[] | undefined>;
    /**
     * The ID of the project to attach the trigger.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The space ID associated with the project to attach the trigger.
     */
    public readonly spaceId!: pulumi.Output<string | undefined>;

    /**
     * Create a ExternalFeedCreateReleaseTrigger resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExternalFeedCreateReleaseTriggerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalFeedCreateReleaseTriggerArgs | ExternalFeedCreateReleaseTriggerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExternalFeedCreateReleaseTriggerState | undefined;
            resourceInputs["channelId"] = state ? state.channelId : undefined;
            resourceInputs["isDisabled"] = state ? state.isDisabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packages"] = state ? state.packages : undefined;
            resourceInputs["primaryPackages"] = state ? state.primaryPackages : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
        } else {
            const args = argsOrState as ExternalFeedCreateReleaseTriggerArgs | undefined;
            if ((!args || args.channelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["channelId"] = args ? args.channelId : undefined;
            resourceInputs["isDisabled"] = args ? args.isDisabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packages"] = args ? args.packages : undefined;
            resourceInputs["primaryPackages"] = args ? args.primaryPackages : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExternalFeedCreateReleaseTrigger.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ExternalFeedCreateReleaseTrigger resources.
 */
export interface ExternalFeedCreateReleaseTriggerState {
    /**
     * The ID of the channel in which the release will be created if the action type is CreateRelease.
     */
    channelId?: pulumi.Input<string>;
    /**
     * Disables the trigger from being run when set.
     */
    isDisabled?: pulumi.Input<boolean>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will
     * trigger release creation.
     */
    packages?: pulumi.Input<pulumi.Input<inputs.ExternalFeedCreateReleaseTriggerPackage>[]>;
    /**
     * List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the
     * packages you select will trigger release creation.
     */
    primaryPackages?: pulumi.Input<pulumi.Input<inputs.ExternalFeedCreateReleaseTriggerPrimaryPackage>[]>;
    /**
     * The ID of the project to attach the trigger.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The space ID associated with the project to attach the trigger.
     */
    spaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExternalFeedCreateReleaseTrigger resource.
 */
export interface ExternalFeedCreateReleaseTriggerArgs {
    /**
     * The ID of the channel in which the release will be created if the action type is CreateRelease.
     */
    channelId: pulumi.Input<string>;
    /**
     * Disables the trigger from being run when set.
     */
    isDisabled?: pulumi.Input<boolean>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * List of referenced packages that will cause the trigger to fire. New versions of any of the packages you select will
     * trigger release creation.
     */
    packages?: pulumi.Input<pulumi.Input<inputs.ExternalFeedCreateReleaseTriggerPackage>[]>;
    /**
     * List of deployment actions for which the primary packages will cause the trigger to fire. New versions of any of the
     * packages you select will trigger release creation.
     */
    primaryPackages?: pulumi.Input<pulumi.Input<inputs.ExternalFeedCreateReleaseTriggerPrimaryPackage>[]>;
    /**
     * The ID of the project to attach the trigger.
     */
    projectId: pulumi.Input<string>;
    /**
     * The space ID associated with the project to attach the trigger.
     */
    spaceId?: pulumi.Input<string>;
}
