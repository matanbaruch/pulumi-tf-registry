// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMachine(args: GetMachineArgs, opts?: pulumi.InvokeOptions): Promise<GetMachineResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("octopusdeploy:index/getMachine:getMachine", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMachine.
 */
export interface GetMachineArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getMachine.
 */
export interface GetMachineResult {
    readonly endpointCommunicationstyle: string;
    readonly endpointId: string;
    readonly endpointProxyid: string;
    readonly endpointTentacleversiondetailsUpgradelocked: string;
    readonly endpointTentacleversiondetailsUpgraderequired: string;
    readonly endpointTentacleversiondetailsUpgradesuggested: string;
    readonly endpointTentacleversiondetailsVersion: string;
    readonly endpointThumbprint: string;
    readonly endpointUri: string;
    readonly environments: string[];
    readonly haslatestcalamari: boolean;
    readonly id: string;
    readonly isdisabled: boolean;
    readonly isinprocess: boolean;
    readonly machinepolicy: string;
    readonly name: string;
    readonly roles: string[];
    readonly status: string;
    readonly statussummary: string;
    readonly tenanteddeploymentparticipation: string;
    readonly tenantids: string[];
    readonly tenanttags: string[];
}
export function getMachineOutput(args: GetMachineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMachineResult> {
    return pulumi.output(args).apply((a: any) => getMachine(a, opts))
}

/**
 * A collection of arguments for invoking getMachine.
 */
export interface GetMachineOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
