// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVariables(args: GetVariablesArgs, opts?: pulumi.InvokeOptions): Promise<GetVariablesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("octopusdeploy:index/getVariables:getVariables", {
        "name": args.name,
        "ownerId": args.ownerId,
        "scopes": args.scopes,
        "spaceId": args.spaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVariables.
 */
export interface GetVariablesArgs {
    name: string;
    ownerId: string;
    scopes: inputs.GetVariablesScope[];
    spaceId?: string;
}

/**
 * A collection of values returned by getVariables.
 */
export interface GetVariablesResult {
    readonly description: string;
    readonly id: string;
    readonly isEditable: boolean;
    readonly isSensitive: boolean;
    readonly name: string;
    readonly ownerId: string;
    readonly prompts: outputs.GetVariablesPrompt[];
    readonly scopes: outputs.GetVariablesScope[];
    readonly sensitiveValue: string;
    readonly spaceId: string;
    readonly type: string;
    readonly value: string;
}
export function getVariablesOutput(args: GetVariablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVariablesResult> {
    return pulumi.output(args).apply((a: any) => getVariables(a, opts))
}

/**
 * A collection of arguments for invoking getVariables.
 */
export interface GetVariablesOutputArgs {
    name: pulumi.Input<string>;
    ownerId: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<inputs.GetVariablesScopeArgs>[]>;
    spaceId?: pulumi.Input<string>;
}
