// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProjectScheduledTrigger extends pulumi.CustomResource {
    /**
     * Get an existing ProjectScheduledTrigger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectScheduledTriggerState, opts?: pulumi.CustomResourceOptions): ProjectScheduledTrigger {
        return new ProjectScheduledTrigger(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'octopusdeploy:index/projectScheduledTrigger:ProjectScheduledTrigger';

    /**
     * Returns true if the given object is an instance of ProjectScheduledTrigger.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProjectScheduledTrigger {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectScheduledTrigger.__pulumiType;
    }

    /**
     * The channel ID to use when creating the release. Will use the default channel if left blank.
     */
    public readonly channelId!: pulumi.Output<string | undefined>;
    /**
     * The daily schedule for the trigger.
     */
    public readonly continuousDailySchedule!: pulumi.Output<outputs.ProjectScheduledTriggerContinuousDailySchedule | undefined>;
    /**
     * The cron expression schedule for the trigger.
     */
    public readonly cronExpressionSchedule!: pulumi.Output<outputs.ProjectScheduledTriggerCronExpressionSchedule | undefined>;
    /**
     * The daily schedule for the trigger.
     */
    public readonly daysPerMonthSchedule!: pulumi.Output<outputs.ProjectScheduledTriggerDaysPerMonthSchedule | undefined>;
    /**
     * Configuration for deploying the latest release. Can not be used with 'deploy_new_release_action' or
     * 'run_runbook_action'.
     */
    public readonly deployLatestReleaseAction!: pulumi.Output<outputs.ProjectScheduledTriggerDeployLatestReleaseAction | undefined>;
    /**
     * Configuration for deploying a new release. Can not be used with 'deploy_latest_release_action' or 'run_runbook_action'.
     */
    public readonly deployNewReleaseAction!: pulumi.Output<outputs.ProjectScheduledTriggerDeployNewReleaseAction | undefined>;
    /**
     * A description of the trigger.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the trigger is disabled.
     */
    public readonly isDisabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of this resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The daily schedule for the trigger.
     */
    public readonly onceDailySchedule!: pulumi.Output<outputs.ProjectScheduledTriggerOnceDailySchedule | undefined>;
    /**
     * The ID of the project to attach the trigger.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Configuration for running a runbook. Can not be used with 'deploy_latest_release_action' or 'deploy_new_release_action'.
     */
    public readonly runRunbookAction!: pulumi.Output<outputs.ProjectScheduledTriggerRunRunbookAction | undefined>;
    /**
     * The space ID where this trigger's project exists.
     */
    public readonly spaceId!: pulumi.Output<string>;
    /**
     * The IDs of the tenants to deploy to.
     */
    public readonly tenantIds!: pulumi.Output<string[] | undefined>;
    /**
     * The timezone for the trigger.
     */
    public readonly timezone!: pulumi.Output<string | undefined>;

    /**
     * Create a ProjectScheduledTrigger resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectScheduledTriggerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectScheduledTriggerArgs | ProjectScheduledTriggerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectScheduledTriggerState | undefined;
            resourceInputs["channelId"] = state ? state.channelId : undefined;
            resourceInputs["continuousDailySchedule"] = state ? state.continuousDailySchedule : undefined;
            resourceInputs["cronExpressionSchedule"] = state ? state.cronExpressionSchedule : undefined;
            resourceInputs["daysPerMonthSchedule"] = state ? state.daysPerMonthSchedule : undefined;
            resourceInputs["deployLatestReleaseAction"] = state ? state.deployLatestReleaseAction : undefined;
            resourceInputs["deployNewReleaseAction"] = state ? state.deployNewReleaseAction : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isDisabled"] = state ? state.isDisabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onceDailySchedule"] = state ? state.onceDailySchedule : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["runRunbookAction"] = state ? state.runRunbookAction : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
            resourceInputs["tenantIds"] = state ? state.tenantIds : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as ProjectScheduledTriggerArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.spaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spaceId'");
            }
            resourceInputs["channelId"] = args ? args.channelId : undefined;
            resourceInputs["continuousDailySchedule"] = args ? args.continuousDailySchedule : undefined;
            resourceInputs["cronExpressionSchedule"] = args ? args.cronExpressionSchedule : undefined;
            resourceInputs["daysPerMonthSchedule"] = args ? args.daysPerMonthSchedule : undefined;
            resourceInputs["deployLatestReleaseAction"] = args ? args.deployLatestReleaseAction : undefined;
            resourceInputs["deployNewReleaseAction"] = args ? args.deployNewReleaseAction : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["isDisabled"] = args ? args.isDisabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onceDailySchedule"] = args ? args.onceDailySchedule : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["runRunbookAction"] = args ? args.runRunbookAction : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
            resourceInputs["tenantIds"] = args ? args.tenantIds : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectScheduledTrigger.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProjectScheduledTrigger resources.
 */
export interface ProjectScheduledTriggerState {
    /**
     * The channel ID to use when creating the release. Will use the default channel if left blank.
     */
    channelId?: pulumi.Input<string>;
    /**
     * The daily schedule for the trigger.
     */
    continuousDailySchedule?: pulumi.Input<inputs.ProjectScheduledTriggerContinuousDailySchedule>;
    /**
     * The cron expression schedule for the trigger.
     */
    cronExpressionSchedule?: pulumi.Input<inputs.ProjectScheduledTriggerCronExpressionSchedule>;
    /**
     * The daily schedule for the trigger.
     */
    daysPerMonthSchedule?: pulumi.Input<inputs.ProjectScheduledTriggerDaysPerMonthSchedule>;
    /**
     * Configuration for deploying the latest release. Can not be used with 'deploy_new_release_action' or
     * 'run_runbook_action'.
     */
    deployLatestReleaseAction?: pulumi.Input<inputs.ProjectScheduledTriggerDeployLatestReleaseAction>;
    /**
     * Configuration for deploying a new release. Can not be used with 'deploy_latest_release_action' or 'run_runbook_action'.
     */
    deployNewReleaseAction?: pulumi.Input<inputs.ProjectScheduledTriggerDeployNewReleaseAction>;
    /**
     * A description of the trigger.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the trigger is disabled.
     */
    isDisabled?: pulumi.Input<boolean>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The daily schedule for the trigger.
     */
    onceDailySchedule?: pulumi.Input<inputs.ProjectScheduledTriggerOnceDailySchedule>;
    /**
     * The ID of the project to attach the trigger.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Configuration for running a runbook. Can not be used with 'deploy_latest_release_action' or 'deploy_new_release_action'.
     */
    runRunbookAction?: pulumi.Input<inputs.ProjectScheduledTriggerRunRunbookAction>;
    /**
     * The space ID where this trigger's project exists.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * The IDs of the tenants to deploy to.
     */
    tenantIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The timezone for the trigger.
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProjectScheduledTrigger resource.
 */
export interface ProjectScheduledTriggerArgs {
    /**
     * The channel ID to use when creating the release. Will use the default channel if left blank.
     */
    channelId?: pulumi.Input<string>;
    /**
     * The daily schedule for the trigger.
     */
    continuousDailySchedule?: pulumi.Input<inputs.ProjectScheduledTriggerContinuousDailySchedule>;
    /**
     * The cron expression schedule for the trigger.
     */
    cronExpressionSchedule?: pulumi.Input<inputs.ProjectScheduledTriggerCronExpressionSchedule>;
    /**
     * The daily schedule for the trigger.
     */
    daysPerMonthSchedule?: pulumi.Input<inputs.ProjectScheduledTriggerDaysPerMonthSchedule>;
    /**
     * Configuration for deploying the latest release. Can not be used with 'deploy_new_release_action' or
     * 'run_runbook_action'.
     */
    deployLatestReleaseAction?: pulumi.Input<inputs.ProjectScheduledTriggerDeployLatestReleaseAction>;
    /**
     * Configuration for deploying a new release. Can not be used with 'deploy_latest_release_action' or 'run_runbook_action'.
     */
    deployNewReleaseAction?: pulumi.Input<inputs.ProjectScheduledTriggerDeployNewReleaseAction>;
    /**
     * A description of the trigger.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the trigger is disabled.
     */
    isDisabled?: pulumi.Input<boolean>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The daily schedule for the trigger.
     */
    onceDailySchedule?: pulumi.Input<inputs.ProjectScheduledTriggerOnceDailySchedule>;
    /**
     * The ID of the project to attach the trigger.
     */
    projectId: pulumi.Input<string>;
    /**
     * Configuration for running a runbook. Can not be used with 'deploy_latest_release_action' or 'deploy_new_release_action'.
     */
    runRunbookAction?: pulumi.Input<inputs.ProjectScheduledTriggerRunRunbookAction>;
    /**
     * The space ID where this trigger's project exists.
     */
    spaceId: pulumi.Input<string>;
    /**
     * The IDs of the tenants to deploy to.
     */
    tenantIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The timezone for the trigger.
     */
    timezone?: pulumi.Input<string>;
}
