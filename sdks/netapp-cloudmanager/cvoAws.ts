// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CvoAws extends pulumi.CustomResource {
    /**
     * Get an existing CvoAws resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CvoAwsState, opts?: pulumi.CustomResourceOptions): CvoAws {
        return new CvoAws(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netapp-cloudmanager:index/cvoAws:CvoAws';

    /**
     * Returns true if the given object is an instance of CvoAws.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CvoAws {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CvoAws.__pulumiType;
    }

    public readonly assumeRoleArn!: pulumi.Output<string | undefined>;
    public readonly awsEncryptionKmsKeyArn!: pulumi.Output<string | undefined>;
    public readonly awsEncryptionKmsKeyId!: pulumi.Output<string | undefined>;
    public readonly awsTags!: pulumi.Output<outputs.CvoAwsAwsTag[] | undefined>;
    public readonly backupVolumesToCbs!: pulumi.Output<boolean | undefined>;
    public readonly capacityPackageName!: pulumi.Output<string | undefined>;
    public readonly capacityTier!: pulumi.Output<string | undefined>;
    public readonly clientId!: pulumi.Output<string>;
    public readonly cloudProviderAccount!: pulumi.Output<string | undefined>;
    public readonly clusterFloatingIp!: pulumi.Output<string | undefined>;
    public readonly clusterKeyPairName!: pulumi.Output<string | undefined>;
    public readonly dataEncryptionType!: pulumi.Output<string | undefined>;
    public readonly dataFloatingIp!: pulumi.Output<string | undefined>;
    public readonly dataFloatingIp2!: pulumi.Output<string | undefined>;
    public readonly ebsVolumeSize!: pulumi.Output<number | undefined>;
    public readonly ebsVolumeSizeUnit!: pulumi.Output<string | undefined>;
    public readonly ebsVolumeType!: pulumi.Output<string | undefined>;
    public readonly enableCompliance!: pulumi.Output<boolean | undefined>;
    public readonly enableMonitoring!: pulumi.Output<boolean | undefined>;
    public readonly failoverMode!: pulumi.Output<string | undefined>;
    public readonly instanceProfileName!: pulumi.Output<string | undefined>;
    public readonly instanceTenancy!: pulumi.Output<string | undefined>;
    public readonly instanceType!: pulumi.Output<string | undefined>;
    public readonly iops!: pulumi.Output<number | undefined>;
    public readonly isHa!: pulumi.Output<boolean | undefined>;
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    public readonly licenseType!: pulumi.Output<string | undefined>;
    public readonly mediatorAssignPublicIp!: pulumi.Output<boolean | undefined>;
    public readonly mediatorInstanceProfileName!: pulumi.Output<string | undefined>;
    public readonly mediatorKeyPairName!: pulumi.Output<string | undefined>;
    public readonly mediatorSecurityGroupId!: pulumi.Output<string | undefined>;
    public readonly mediatorSubnetId!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly node1SubnetId!: pulumi.Output<string | undefined>;
    public readonly node2SubnetId!: pulumi.Output<string | undefined>;
    public readonly nssAccount!: pulumi.Output<string | undefined>;
    public readonly ontapVersion!: pulumi.Output<string | undefined>;
    public readonly optimizedNetworkUtilization!: pulumi.Output<boolean | undefined>;
    public readonly platformSerialNumber!: pulumi.Output<string | undefined>;
    public readonly platformSerialNumberNode1!: pulumi.Output<string | undefined>;
    public readonly platformSerialNumberNode2!: pulumi.Output<string | undefined>;
    public readonly providedLicense!: pulumi.Output<string | undefined>;
    public readonly region!: pulumi.Output<string>;
    public readonly retries!: pulumi.Output<number | undefined>;
    public readonly routeTableIds!: pulumi.Output<string[] | undefined>;
    public readonly saasSubscriptionId!: pulumi.Output<string | undefined>;
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    public readonly subnetId!: pulumi.Output<string | undefined>;
    public readonly svmFloatingIp!: pulumi.Output<string | undefined>;
    public readonly svmName!: pulumi.Output<string | undefined>;
    public readonly svmPassword!: pulumi.Output<string>;
    public readonly throughput!: pulumi.Output<number | undefined>;
    public readonly tierLevel!: pulumi.Output<string | undefined>;
    public readonly upgradeOntapVersion!: pulumi.Output<boolean | undefined>;
    public readonly useLatestVersion!: pulumi.Output<boolean | undefined>;
    public readonly vpcId!: pulumi.Output<string | undefined>;
    public readonly workspaceId!: pulumi.Output<string | undefined>;
    public readonly wormRetentionPeriodLength!: pulumi.Output<number | undefined>;
    public readonly wormRetentionPeriodUnit!: pulumi.Output<string | undefined>;
    public readonly writingSpeedState!: pulumi.Output<string | undefined>;

    /**
     * Create a CvoAws resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CvoAwsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CvoAwsArgs | CvoAwsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CvoAwsState | undefined;
            resourceInputs["assumeRoleArn"] = state ? state.assumeRoleArn : undefined;
            resourceInputs["awsEncryptionKmsKeyArn"] = state ? state.awsEncryptionKmsKeyArn : undefined;
            resourceInputs["awsEncryptionKmsKeyId"] = state ? state.awsEncryptionKmsKeyId : undefined;
            resourceInputs["awsTags"] = state ? state.awsTags : undefined;
            resourceInputs["backupVolumesToCbs"] = state ? state.backupVolumesToCbs : undefined;
            resourceInputs["capacityPackageName"] = state ? state.capacityPackageName : undefined;
            resourceInputs["capacityTier"] = state ? state.capacityTier : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["cloudProviderAccount"] = state ? state.cloudProviderAccount : undefined;
            resourceInputs["clusterFloatingIp"] = state ? state.clusterFloatingIp : undefined;
            resourceInputs["clusterKeyPairName"] = state ? state.clusterKeyPairName : undefined;
            resourceInputs["dataEncryptionType"] = state ? state.dataEncryptionType : undefined;
            resourceInputs["dataFloatingIp"] = state ? state.dataFloatingIp : undefined;
            resourceInputs["dataFloatingIp2"] = state ? state.dataFloatingIp2 : undefined;
            resourceInputs["ebsVolumeSize"] = state ? state.ebsVolumeSize : undefined;
            resourceInputs["ebsVolumeSizeUnit"] = state ? state.ebsVolumeSizeUnit : undefined;
            resourceInputs["ebsVolumeType"] = state ? state.ebsVolumeType : undefined;
            resourceInputs["enableCompliance"] = state ? state.enableCompliance : undefined;
            resourceInputs["enableMonitoring"] = state ? state.enableMonitoring : undefined;
            resourceInputs["failoverMode"] = state ? state.failoverMode : undefined;
            resourceInputs["instanceProfileName"] = state ? state.instanceProfileName : undefined;
            resourceInputs["instanceTenancy"] = state ? state.instanceTenancy : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["iops"] = state ? state.iops : undefined;
            resourceInputs["isHa"] = state ? state.isHa : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["mediatorAssignPublicIp"] = state ? state.mediatorAssignPublicIp : undefined;
            resourceInputs["mediatorInstanceProfileName"] = state ? state.mediatorInstanceProfileName : undefined;
            resourceInputs["mediatorKeyPairName"] = state ? state.mediatorKeyPairName : undefined;
            resourceInputs["mediatorSecurityGroupId"] = state ? state.mediatorSecurityGroupId : undefined;
            resourceInputs["mediatorSubnetId"] = state ? state.mediatorSubnetId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["node1SubnetId"] = state ? state.node1SubnetId : undefined;
            resourceInputs["node2SubnetId"] = state ? state.node2SubnetId : undefined;
            resourceInputs["nssAccount"] = state ? state.nssAccount : undefined;
            resourceInputs["ontapVersion"] = state ? state.ontapVersion : undefined;
            resourceInputs["optimizedNetworkUtilization"] = state ? state.optimizedNetworkUtilization : undefined;
            resourceInputs["platformSerialNumber"] = state ? state.platformSerialNumber : undefined;
            resourceInputs["platformSerialNumberNode1"] = state ? state.platformSerialNumberNode1 : undefined;
            resourceInputs["platformSerialNumberNode2"] = state ? state.platformSerialNumberNode2 : undefined;
            resourceInputs["providedLicense"] = state ? state.providedLicense : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["retries"] = state ? state.retries : undefined;
            resourceInputs["routeTableIds"] = state ? state.routeTableIds : undefined;
            resourceInputs["saasSubscriptionId"] = state ? state.saasSubscriptionId : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["svmFloatingIp"] = state ? state.svmFloatingIp : undefined;
            resourceInputs["svmName"] = state ? state.svmName : undefined;
            resourceInputs["svmPassword"] = state ? state.svmPassword : undefined;
            resourceInputs["throughput"] = state ? state.throughput : undefined;
            resourceInputs["tierLevel"] = state ? state.tierLevel : undefined;
            resourceInputs["upgradeOntapVersion"] = state ? state.upgradeOntapVersion : undefined;
            resourceInputs["useLatestVersion"] = state ? state.useLatestVersion : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
            resourceInputs["wormRetentionPeriodLength"] = state ? state.wormRetentionPeriodLength : undefined;
            resourceInputs["wormRetentionPeriodUnit"] = state ? state.wormRetentionPeriodUnit : undefined;
            resourceInputs["writingSpeedState"] = state ? state.writingSpeedState : undefined;
        } else {
            const args = argsOrState as CvoAwsArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.svmPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'svmPassword'");
            }
            resourceInputs["assumeRoleArn"] = args ? args.assumeRoleArn : undefined;
            resourceInputs["awsEncryptionKmsKeyArn"] = args ? args.awsEncryptionKmsKeyArn : undefined;
            resourceInputs["awsEncryptionKmsKeyId"] = args ? args.awsEncryptionKmsKeyId : undefined;
            resourceInputs["awsTags"] = args ? args.awsTags : undefined;
            resourceInputs["backupVolumesToCbs"] = args ? args.backupVolumesToCbs : undefined;
            resourceInputs["capacityPackageName"] = args ? args.capacityPackageName : undefined;
            resourceInputs["capacityTier"] = args ? args.capacityTier : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["cloudProviderAccount"] = args ? args.cloudProviderAccount : undefined;
            resourceInputs["clusterFloatingIp"] = args ? args.clusterFloatingIp : undefined;
            resourceInputs["clusterKeyPairName"] = args ? args.clusterKeyPairName : undefined;
            resourceInputs["dataEncryptionType"] = args ? args.dataEncryptionType : undefined;
            resourceInputs["dataFloatingIp"] = args ? args.dataFloatingIp : undefined;
            resourceInputs["dataFloatingIp2"] = args ? args.dataFloatingIp2 : undefined;
            resourceInputs["ebsVolumeSize"] = args ? args.ebsVolumeSize : undefined;
            resourceInputs["ebsVolumeSizeUnit"] = args ? args.ebsVolumeSizeUnit : undefined;
            resourceInputs["ebsVolumeType"] = args ? args.ebsVolumeType : undefined;
            resourceInputs["enableCompliance"] = args ? args.enableCompliance : undefined;
            resourceInputs["enableMonitoring"] = args ? args.enableMonitoring : undefined;
            resourceInputs["failoverMode"] = args ? args.failoverMode : undefined;
            resourceInputs["instanceProfileName"] = args ? args.instanceProfileName : undefined;
            resourceInputs["instanceTenancy"] = args ? args.instanceTenancy : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["iops"] = args ? args.iops : undefined;
            resourceInputs["isHa"] = args ? args.isHa : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["mediatorAssignPublicIp"] = args ? args.mediatorAssignPublicIp : undefined;
            resourceInputs["mediatorInstanceProfileName"] = args ? args.mediatorInstanceProfileName : undefined;
            resourceInputs["mediatorKeyPairName"] = args ? args.mediatorKeyPairName : undefined;
            resourceInputs["mediatorSecurityGroupId"] = args ? args.mediatorSecurityGroupId : undefined;
            resourceInputs["mediatorSubnetId"] = args ? args.mediatorSubnetId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["node1SubnetId"] = args ? args.node1SubnetId : undefined;
            resourceInputs["node2SubnetId"] = args ? args.node2SubnetId : undefined;
            resourceInputs["nssAccount"] = args ? args.nssAccount : undefined;
            resourceInputs["ontapVersion"] = args ? args.ontapVersion : undefined;
            resourceInputs["optimizedNetworkUtilization"] = args ? args.optimizedNetworkUtilization : undefined;
            resourceInputs["platformSerialNumber"] = args ? args.platformSerialNumber : undefined;
            resourceInputs["platformSerialNumberNode1"] = args ? args.platformSerialNumberNode1 : undefined;
            resourceInputs["platformSerialNumberNode2"] = args ? args.platformSerialNumberNode2 : undefined;
            resourceInputs["providedLicense"] = args ? args.providedLicense : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["retries"] = args ? args.retries : undefined;
            resourceInputs["routeTableIds"] = args ? args.routeTableIds : undefined;
            resourceInputs["saasSubscriptionId"] = args ? args.saasSubscriptionId : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["svmFloatingIp"] = args ? args.svmFloatingIp : undefined;
            resourceInputs["svmName"] = args ? args.svmName : undefined;
            resourceInputs["svmPassword"] = args?.svmPassword ? pulumi.secret(args.svmPassword) : undefined;
            resourceInputs["throughput"] = args ? args.throughput : undefined;
            resourceInputs["tierLevel"] = args ? args.tierLevel : undefined;
            resourceInputs["upgradeOntapVersion"] = args ? args.upgradeOntapVersion : undefined;
            resourceInputs["useLatestVersion"] = args ? args.useLatestVersion : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["wormRetentionPeriodLength"] = args ? args.wormRetentionPeriodLength : undefined;
            resourceInputs["wormRetentionPeriodUnit"] = args ? args.wormRetentionPeriodUnit : undefined;
            resourceInputs["writingSpeedState"] = args ? args.writingSpeedState : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["svmPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CvoAws.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CvoAws resources.
 */
export interface CvoAwsState {
    assumeRoleArn?: pulumi.Input<string>;
    awsEncryptionKmsKeyArn?: pulumi.Input<string>;
    awsEncryptionKmsKeyId?: pulumi.Input<string>;
    awsTags?: pulumi.Input<pulumi.Input<inputs.CvoAwsAwsTag>[]>;
    backupVolumesToCbs?: pulumi.Input<boolean>;
    capacityPackageName?: pulumi.Input<string>;
    capacityTier?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    cloudProviderAccount?: pulumi.Input<string>;
    clusterFloatingIp?: pulumi.Input<string>;
    clusterKeyPairName?: pulumi.Input<string>;
    dataEncryptionType?: pulumi.Input<string>;
    dataFloatingIp?: pulumi.Input<string>;
    dataFloatingIp2?: pulumi.Input<string>;
    ebsVolumeSize?: pulumi.Input<number>;
    ebsVolumeSizeUnit?: pulumi.Input<string>;
    ebsVolumeType?: pulumi.Input<string>;
    enableCompliance?: pulumi.Input<boolean>;
    enableMonitoring?: pulumi.Input<boolean>;
    failoverMode?: pulumi.Input<string>;
    instanceProfileName?: pulumi.Input<string>;
    instanceTenancy?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    iops?: pulumi.Input<number>;
    isHa?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    licenseType?: pulumi.Input<string>;
    mediatorAssignPublicIp?: pulumi.Input<boolean>;
    mediatorInstanceProfileName?: pulumi.Input<string>;
    mediatorKeyPairName?: pulumi.Input<string>;
    mediatorSecurityGroupId?: pulumi.Input<string>;
    mediatorSubnetId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    node1SubnetId?: pulumi.Input<string>;
    node2SubnetId?: pulumi.Input<string>;
    nssAccount?: pulumi.Input<string>;
    ontapVersion?: pulumi.Input<string>;
    optimizedNetworkUtilization?: pulumi.Input<boolean>;
    platformSerialNumber?: pulumi.Input<string>;
    platformSerialNumberNode1?: pulumi.Input<string>;
    platformSerialNumberNode2?: pulumi.Input<string>;
    providedLicense?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    saasSubscriptionId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    svmFloatingIp?: pulumi.Input<string>;
    svmName?: pulumi.Input<string>;
    svmPassword?: pulumi.Input<string>;
    throughput?: pulumi.Input<number>;
    tierLevel?: pulumi.Input<string>;
    upgradeOntapVersion?: pulumi.Input<boolean>;
    useLatestVersion?: pulumi.Input<boolean>;
    vpcId?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
    wormRetentionPeriodLength?: pulumi.Input<number>;
    wormRetentionPeriodUnit?: pulumi.Input<string>;
    writingSpeedState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CvoAws resource.
 */
export interface CvoAwsArgs {
    assumeRoleArn?: pulumi.Input<string>;
    awsEncryptionKmsKeyArn?: pulumi.Input<string>;
    awsEncryptionKmsKeyId?: pulumi.Input<string>;
    awsTags?: pulumi.Input<pulumi.Input<inputs.CvoAwsAwsTag>[]>;
    backupVolumesToCbs?: pulumi.Input<boolean>;
    capacityPackageName?: pulumi.Input<string>;
    capacityTier?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    cloudProviderAccount?: pulumi.Input<string>;
    clusterFloatingIp?: pulumi.Input<string>;
    clusterKeyPairName?: pulumi.Input<string>;
    dataEncryptionType?: pulumi.Input<string>;
    dataFloatingIp?: pulumi.Input<string>;
    dataFloatingIp2?: pulumi.Input<string>;
    ebsVolumeSize?: pulumi.Input<number>;
    ebsVolumeSizeUnit?: pulumi.Input<string>;
    ebsVolumeType?: pulumi.Input<string>;
    enableCompliance?: pulumi.Input<boolean>;
    enableMonitoring?: pulumi.Input<boolean>;
    failoverMode?: pulumi.Input<string>;
    instanceProfileName?: pulumi.Input<string>;
    instanceTenancy?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    iops?: pulumi.Input<number>;
    isHa?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    licenseType?: pulumi.Input<string>;
    mediatorAssignPublicIp?: pulumi.Input<boolean>;
    mediatorInstanceProfileName?: pulumi.Input<string>;
    mediatorKeyPairName?: pulumi.Input<string>;
    mediatorSecurityGroupId?: pulumi.Input<string>;
    mediatorSubnetId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    node1SubnetId?: pulumi.Input<string>;
    node2SubnetId?: pulumi.Input<string>;
    nssAccount?: pulumi.Input<string>;
    ontapVersion?: pulumi.Input<string>;
    optimizedNetworkUtilization?: pulumi.Input<boolean>;
    platformSerialNumber?: pulumi.Input<string>;
    platformSerialNumberNode1?: pulumi.Input<string>;
    platformSerialNumberNode2?: pulumi.Input<string>;
    providedLicense?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    saasSubscriptionId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    svmFloatingIp?: pulumi.Input<string>;
    svmName?: pulumi.Input<string>;
    svmPassword: pulumi.Input<string>;
    throughput?: pulumi.Input<number>;
    tierLevel?: pulumi.Input<string>;
    upgradeOntapVersion?: pulumi.Input<boolean>;
    useLatestVersion?: pulumi.Input<boolean>;
    vpcId?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
    wormRetentionPeriodLength?: pulumi.Input<number>;
    wormRetentionPeriodUnit?: pulumi.Input<string>;
    writingSpeedState?: pulumi.Input<string>;
}
