// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AnfVolumeExportPolicy {
    rules?: outputs.AnfVolumeExportPolicyRule[];
}

export interface AnfVolumeExportPolicyRule {
    allowedClients?: string;
    cifs?: boolean;
    nfsv3?: boolean;
    nfsv41?: boolean;
    ruleIndex?: number;
    unixReadOnly?: boolean;
    unixReadWrite?: boolean;
}

export interface AwsFsxTag {
    tagKey: string;
    tagValue?: string;
}

export interface CbsAwsCbsParameters {
    accessKey?: string;
    archiveStorageClass?: string;
    awsAccountId?: string;
    kmsKeyId?: string;
    privateEndpointId?: string;
    secretPassword?: string;
}

export interface CbsAzureCbsParameters {
    keyName?: string;
    keyVaultId?: string;
    privateEndpointId?: string;
    resourceGroup?: string;
    storageAccount?: string;
    subscription?: string;
}

export interface CbsBackupPolicy {
    archiveAfterDays?: string;
    name: string;
    objectLock?: string;
    policyRules?: outputs.CbsBackupPolicyPolicyRule[];
}

export interface CbsBackupPolicyPolicyRule {
    rules?: outputs.CbsBackupPolicyPolicyRuleRule[];
}

export interface CbsBackupPolicyPolicyRuleRule {
    label?: string;
    retention?: string;
}

export interface CbsVolume {
    backupPolicy?: outputs.CbsVolumeBackupPolicy;
    mode?: string;
    volumeName: string;
}

export interface CbsVolumeBackupPolicy {
    archiveAfterDays?: string;
    name: string;
    objectLock?: string;
    policyRules?: outputs.CbsVolumeBackupPolicyPolicyRule[];
}

export interface CbsVolumeBackupPolicyPolicyRule {
    rules?: outputs.CbsVolumeBackupPolicyPolicyRuleRule[];
}

export interface CbsVolumeBackupPolicyPolicyRuleRule {
    label?: string;
    retention?: string;
}

export interface ConnectorAwsAwsTag {
    tagKey: string;
    tagValue?: string;
}

export interface ConnectorAwsInstanceMetadata {
    httpEndpoint: string;
    httpPutResponseHopLimit: number;
    httpTokens: string;
}

export interface CvoAwsAwsTag {
    tagKey: string;
    tagValue?: string;
}

export interface CvoAzureAzureEncryptionParameters {
    key: string;
    userAssignedIdentity?: string;
    vaultName: string;
}

export interface CvoAzureAzureTag {
    tagKey: string;
    tagValue?: string;
}

export interface CvoGcpGcpLabel {
    labelKey: string;
    labelValue?: string;
}

export interface CvoGcpSvm {
    svmName: string;
}

export interface CvsGcpVolumeExportPolicy {
    rules?: outputs.CvsGcpVolumeExportPolicyRule[];
}

export interface CvsGcpVolumeExportPolicyRule {
    allowedClients?: string;
    nfsv3?: boolean;
    nfsv4?: boolean;
    ruleIndex?: number;
    unixReadOnly?: boolean;
    unixReadWrite?: boolean;
}

export interface CvsGcpVolumeSnapshotPolicy {
    dailySchedules?: outputs.CvsGcpVolumeSnapshotPolicyDailySchedule[];
    enabled: boolean;
    hourlySchedules?: outputs.CvsGcpVolumeSnapshotPolicyHourlySchedule[];
    monthlySchedules?: outputs.CvsGcpVolumeSnapshotPolicyMonthlySchedule[];
    weeklySchedules?: outputs.CvsGcpVolumeSnapshotPolicyWeeklySchedule[];
}

export interface CvsGcpVolumeSnapshotPolicyDailySchedule {
    hour?: number;
    minute?: number;
    snapshotsToKeep?: number;
}

export interface CvsGcpVolumeSnapshotPolicyHourlySchedule {
    minute?: number;
    snapshotsToKeep?: number;
}

export interface CvsGcpVolumeSnapshotPolicyMonthlySchedule {
    daysOfMonth?: string;
    hour?: number;
    minute?: number;
    snapshotsToKeep?: number;
}

export interface CvsGcpVolumeSnapshotPolicyWeeklySchedule {
    day?: string;
    hour?: number;
    minute?: number;
    snapshotsToKeep?: number;
}

export interface GetVolumeInitiator {
    alias: string;
    iqn: string;
}

export interface VolumeInitiator {
    alias: string;
    iqn: string;
}

export interface VolumeSnapshotPolicy {
    schedules?: outputs.VolumeSnapshotPolicySchedule[];
}

export interface VolumeSnapshotPolicySchedule {
    retention: number;
    scheduleType: string;
}

