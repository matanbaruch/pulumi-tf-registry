// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AnfVolumeExportPolicy {
    rules?: pulumi.Input<pulumi.Input<inputs.AnfVolumeExportPolicyRule>[]>;
}

export interface AnfVolumeExportPolicyRule {
    allowedClients?: pulumi.Input<string>;
    cifs?: pulumi.Input<boolean>;
    nfsv3?: pulumi.Input<boolean>;
    nfsv41?: pulumi.Input<boolean>;
    ruleIndex?: pulumi.Input<number>;
    unixReadOnly?: pulumi.Input<boolean>;
    unixReadWrite?: pulumi.Input<boolean>;
}

export interface AwsFsxTag {
    tagKey: pulumi.Input<string>;
    tagValue?: pulumi.Input<string>;
}

export interface CbsAwsCbsParameters {
    accessKey?: pulumi.Input<string>;
    archiveStorageClass?: pulumi.Input<string>;
    awsAccountId?: pulumi.Input<string>;
    kmsKeyId?: pulumi.Input<string>;
    privateEndpointId?: pulumi.Input<string>;
    secretPassword?: pulumi.Input<string>;
}

export interface CbsAzureCbsParameters {
    keyName?: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    privateEndpointId?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    storageAccount?: pulumi.Input<string>;
    subscription?: pulumi.Input<string>;
}

export interface CbsBackupPolicy {
    archiveAfterDays?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    objectLock?: pulumi.Input<string>;
    policyRules?: pulumi.Input<pulumi.Input<inputs.CbsBackupPolicyPolicyRule>[]>;
}

export interface CbsBackupPolicyPolicyRule {
    rules?: pulumi.Input<pulumi.Input<inputs.CbsBackupPolicyPolicyRuleRule>[]>;
}

export interface CbsBackupPolicyPolicyRuleRule {
    label?: pulumi.Input<string>;
    retention?: pulumi.Input<string>;
}

export interface CbsVolume {
    backupPolicy?: pulumi.Input<inputs.CbsVolumeBackupPolicy>;
    mode?: pulumi.Input<string>;
    volumeName: pulumi.Input<string>;
}

export interface CbsVolumeBackupPolicy {
    archiveAfterDays?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    objectLock?: pulumi.Input<string>;
    policyRules?: pulumi.Input<pulumi.Input<inputs.CbsVolumeBackupPolicyPolicyRule>[]>;
}

export interface CbsVolumeBackupPolicyPolicyRule {
    rules?: pulumi.Input<pulumi.Input<inputs.CbsVolumeBackupPolicyPolicyRuleRule>[]>;
}

export interface CbsVolumeBackupPolicyPolicyRuleRule {
    label?: pulumi.Input<string>;
    retention?: pulumi.Input<string>;
}

export interface ConnectorAwsAwsTag {
    tagKey: pulumi.Input<string>;
    tagValue?: pulumi.Input<string>;
}

export interface ConnectorAwsInstanceMetadata {
    httpEndpoint?: pulumi.Input<string>;
    httpPutResponseHopLimit?: pulumi.Input<number>;
    httpTokens?: pulumi.Input<string>;
}

export interface CvoAwsAwsTag {
    tagKey: pulumi.Input<string>;
    tagValue?: pulumi.Input<string>;
}

export interface CvoAzureAzureEncryptionParameters {
    key: pulumi.Input<string>;
    userAssignedIdentity?: pulumi.Input<string>;
    vaultName: pulumi.Input<string>;
}

export interface CvoAzureAzureTag {
    tagKey: pulumi.Input<string>;
    tagValue?: pulumi.Input<string>;
}

export interface CvoGcpGcpLabel {
    labelKey: pulumi.Input<string>;
    labelValue?: pulumi.Input<string>;
}

export interface CvoGcpSvm {
    svmName: pulumi.Input<string>;
}

export interface CvsGcpVolumeExportPolicy {
    rules?: pulumi.Input<pulumi.Input<inputs.CvsGcpVolumeExportPolicyRule>[]>;
}

export interface CvsGcpVolumeExportPolicyRule {
    allowedClients?: pulumi.Input<string>;
    nfsv3?: pulumi.Input<boolean>;
    nfsv4?: pulumi.Input<boolean>;
    ruleIndex?: pulumi.Input<number>;
    unixReadOnly?: pulumi.Input<boolean>;
    unixReadWrite?: pulumi.Input<boolean>;
}

export interface CvsGcpVolumeSnapshotPolicy {
    dailySchedules?: pulumi.Input<pulumi.Input<inputs.CvsGcpVolumeSnapshotPolicyDailySchedule>[]>;
    enabled?: pulumi.Input<boolean>;
    hourlySchedules?: pulumi.Input<pulumi.Input<inputs.CvsGcpVolumeSnapshotPolicyHourlySchedule>[]>;
    monthlySchedules?: pulumi.Input<pulumi.Input<inputs.CvsGcpVolumeSnapshotPolicyMonthlySchedule>[]>;
    weeklySchedules?: pulumi.Input<pulumi.Input<inputs.CvsGcpVolumeSnapshotPolicyWeeklySchedule>[]>;
}

export interface CvsGcpVolumeSnapshotPolicyDailySchedule {
    hour?: pulumi.Input<number>;
    minute?: pulumi.Input<number>;
    snapshotsToKeep?: pulumi.Input<number>;
}

export interface CvsGcpVolumeSnapshotPolicyHourlySchedule {
    minute?: pulumi.Input<number>;
    snapshotsToKeep?: pulumi.Input<number>;
}

export interface CvsGcpVolumeSnapshotPolicyMonthlySchedule {
    daysOfMonth?: pulumi.Input<string>;
    hour?: pulumi.Input<number>;
    minute?: pulumi.Input<number>;
    snapshotsToKeep?: pulumi.Input<number>;
}

export interface CvsGcpVolumeSnapshotPolicyWeeklySchedule {
    day?: pulumi.Input<string>;
    hour?: pulumi.Input<number>;
    minute?: pulumi.Input<number>;
    snapshotsToKeep?: pulumi.Input<number>;
}

export interface GetVolumeInitiator {
    alias: string;
    iqn: string;
}

export interface GetVolumeInitiatorArgs {
    alias: pulumi.Input<string>;
    iqn: pulumi.Input<string>;
}

export interface VolumeInitiator {
    alias: pulumi.Input<string>;
    iqn: pulumi.Input<string>;
}

export interface VolumeSnapshotPolicy {
    schedules?: pulumi.Input<pulumi.Input<inputs.VolumeSnapshotPolicySchedule>[]>;
}

export interface VolumeSnapshotPolicySchedule {
    retention: pulumi.Input<number>;
    scheduleType: pulumi.Input<string>;
}
