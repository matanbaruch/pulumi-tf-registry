// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNssAccount(args: GetNssAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetNssAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-cloudmanager:index/getNssAccount:getNssAccount", {
        "clientId": args.clientId,
        "id": args.id,
        "password": args.password,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNssAccount.
 */
export interface GetNssAccountArgs {
    clientId: string;
    id?: string;
    password?: string;
    username: string;
}

/**
 * A collection of values returned by getNssAccount.
 */
export interface GetNssAccountResult {
    readonly clientId: string;
    readonly id: string;
    readonly password?: string;
    readonly username: string;
}
export function getNssAccountOutput(args: GetNssAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNssAccountResult> {
    return pulumi.output(args).apply((a: any) => getNssAccount(a, opts))
}

/**
 * A collection of arguments for invoking getNssAccount.
 */
export interface GetNssAccountOutputArgs {
    clientId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
