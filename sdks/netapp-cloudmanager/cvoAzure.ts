// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CvoAzure extends pulumi.CustomResource {
    /**
     * Get an existing CvoAzure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CvoAzureState, opts?: pulumi.CustomResourceOptions): CvoAzure {
        return new CvoAzure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netapp-cloudmanager:index/cvoAzure:CvoAzure';

    /**
     * Returns true if the given object is an instance of CvoAzure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CvoAzure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CvoAzure.__pulumiType;
    }

    public readonly allowDeployInExistingRg!: pulumi.Output<boolean | undefined>;
    public readonly availabilityZone!: pulumi.Output<number | undefined>;
    public readonly availabilityZoneNode1!: pulumi.Output<number | undefined>;
    public readonly availabilityZoneNode2!: pulumi.Output<number | undefined>;
    public readonly azureEncryptionParameters!: pulumi.Output<outputs.CvoAzureAzureEncryptionParameters | undefined>;
    public readonly azureTags!: pulumi.Output<outputs.CvoAzureAzureTag[] | undefined>;
    public readonly backupVolumesToCbs!: pulumi.Output<boolean | undefined>;
    public readonly capacityPackageName!: pulumi.Output<string | undefined>;
    public readonly capacityTier!: pulumi.Output<string | undefined>;
    public readonly cidr!: pulumi.Output<string | undefined>;
    public readonly clientId!: pulumi.Output<string>;
    public readonly cloudProviderAccount!: pulumi.Output<string | undefined>;
    public readonly dataEncryptionType!: pulumi.Output<string | undefined>;
    public readonly diskSize!: pulumi.Output<number | undefined>;
    public readonly diskSizeUnit!: pulumi.Output<string | undefined>;
    public readonly enableCompliance!: pulumi.Output<boolean | undefined>;
    public readonly enableMonitoring!: pulumi.Output<boolean | undefined>;
    public readonly haEnableHttps!: pulumi.Output<boolean | undefined>;
    public readonly instanceType!: pulumi.Output<string | undefined>;
    public readonly isHa!: pulumi.Output<boolean | undefined>;
    public readonly licenseType!: pulumi.Output<string | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nssAccount!: pulumi.Output<string | undefined>;
    public readonly ontapVersion!: pulumi.Output<string | undefined>;
    public readonly platformSerialNumberNode1!: pulumi.Output<string | undefined>;
    public readonly platformSerialNumberNode2!: pulumi.Output<string | undefined>;
    public readonly providedLicense!: pulumi.Output<string | undefined>;
    public readonly resourceGroup!: pulumi.Output<string | undefined>;
    public readonly retries!: pulumi.Output<number | undefined>;
    public readonly saasSubscriptionId!: pulumi.Output<string | undefined>;
    public readonly securityGroupId!: pulumi.Output<string | undefined>;
    public readonly serialNumber!: pulumi.Output<string | undefined>;
    public readonly storageType!: pulumi.Output<string | undefined>;
    public readonly subnetId!: pulumi.Output<string>;
    public readonly subscriptionId!: pulumi.Output<string>;
    public readonly svmName!: pulumi.Output<string | undefined>;
    public readonly svmPassword!: pulumi.Output<string>;
    public readonly tierLevel!: pulumi.Output<string | undefined>;
    public readonly upgradeOntapVersion!: pulumi.Output<boolean | undefined>;
    public readonly useLatestVersion!: pulumi.Output<boolean | undefined>;
    public readonly vnetId!: pulumi.Output<string>;
    public readonly vnetResourceGroup!: pulumi.Output<string | undefined>;
    public readonly workspaceId!: pulumi.Output<string | undefined>;
    public readonly wormRetentionPeriodLength!: pulumi.Output<number | undefined>;
    public readonly wormRetentionPeriodUnit!: pulumi.Output<string | undefined>;
    public readonly writingSpeedState!: pulumi.Output<string | undefined>;

    /**
     * Create a CvoAzure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CvoAzureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CvoAzureArgs | CvoAzureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CvoAzureState | undefined;
            resourceInputs["allowDeployInExistingRg"] = state ? state.allowDeployInExistingRg : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["availabilityZoneNode1"] = state ? state.availabilityZoneNode1 : undefined;
            resourceInputs["availabilityZoneNode2"] = state ? state.availabilityZoneNode2 : undefined;
            resourceInputs["azureEncryptionParameters"] = state ? state.azureEncryptionParameters : undefined;
            resourceInputs["azureTags"] = state ? state.azureTags : undefined;
            resourceInputs["backupVolumesToCbs"] = state ? state.backupVolumesToCbs : undefined;
            resourceInputs["capacityPackageName"] = state ? state.capacityPackageName : undefined;
            resourceInputs["capacityTier"] = state ? state.capacityTier : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["cloudProviderAccount"] = state ? state.cloudProviderAccount : undefined;
            resourceInputs["dataEncryptionType"] = state ? state.dataEncryptionType : undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["diskSizeUnit"] = state ? state.diskSizeUnit : undefined;
            resourceInputs["enableCompliance"] = state ? state.enableCompliance : undefined;
            resourceInputs["enableMonitoring"] = state ? state.enableMonitoring : undefined;
            resourceInputs["haEnableHttps"] = state ? state.haEnableHttps : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["isHa"] = state ? state.isHa : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nssAccount"] = state ? state.nssAccount : undefined;
            resourceInputs["ontapVersion"] = state ? state.ontapVersion : undefined;
            resourceInputs["platformSerialNumberNode1"] = state ? state.platformSerialNumberNode1 : undefined;
            resourceInputs["platformSerialNumberNode2"] = state ? state.platformSerialNumberNode2 : undefined;
            resourceInputs["providedLicense"] = state ? state.providedLicense : undefined;
            resourceInputs["resourceGroup"] = state ? state.resourceGroup : undefined;
            resourceInputs["retries"] = state ? state.retries : undefined;
            resourceInputs["saasSubscriptionId"] = state ? state.saasSubscriptionId : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["serialNumber"] = state ? state.serialNumber : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["svmName"] = state ? state.svmName : undefined;
            resourceInputs["svmPassword"] = state ? state.svmPassword : undefined;
            resourceInputs["tierLevel"] = state ? state.tierLevel : undefined;
            resourceInputs["upgradeOntapVersion"] = state ? state.upgradeOntapVersion : undefined;
            resourceInputs["useLatestVersion"] = state ? state.useLatestVersion : undefined;
            resourceInputs["vnetId"] = state ? state.vnetId : undefined;
            resourceInputs["vnetResourceGroup"] = state ? state.vnetResourceGroup : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
            resourceInputs["wormRetentionPeriodLength"] = state ? state.wormRetentionPeriodLength : undefined;
            resourceInputs["wormRetentionPeriodUnit"] = state ? state.wormRetentionPeriodUnit : undefined;
            resourceInputs["writingSpeedState"] = state ? state.writingSpeedState : undefined;
        } else {
            const args = argsOrState as CvoAzureArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.svmPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'svmPassword'");
            }
            if ((!args || args.vnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vnetId'");
            }
            resourceInputs["allowDeployInExistingRg"] = args ? args.allowDeployInExistingRg : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["availabilityZoneNode1"] = args ? args.availabilityZoneNode1 : undefined;
            resourceInputs["availabilityZoneNode2"] = args ? args.availabilityZoneNode2 : undefined;
            resourceInputs["azureEncryptionParameters"] = args ? args.azureEncryptionParameters : undefined;
            resourceInputs["azureTags"] = args ? args.azureTags : undefined;
            resourceInputs["backupVolumesToCbs"] = args ? args.backupVolumesToCbs : undefined;
            resourceInputs["capacityPackageName"] = args ? args.capacityPackageName : undefined;
            resourceInputs["capacityTier"] = args ? args.capacityTier : undefined;
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["cloudProviderAccount"] = args ? args.cloudProviderAccount : undefined;
            resourceInputs["dataEncryptionType"] = args ? args.dataEncryptionType : undefined;
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["diskSizeUnit"] = args ? args.diskSizeUnit : undefined;
            resourceInputs["enableCompliance"] = args ? args.enableCompliance : undefined;
            resourceInputs["enableMonitoring"] = args ? args.enableMonitoring : undefined;
            resourceInputs["haEnableHttps"] = args ? args.haEnableHttps : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["isHa"] = args ? args.isHa : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nssAccount"] = args ? args.nssAccount : undefined;
            resourceInputs["ontapVersion"] = args ? args.ontapVersion : undefined;
            resourceInputs["platformSerialNumberNode1"] = args ? args.platformSerialNumberNode1 : undefined;
            resourceInputs["platformSerialNumberNode2"] = args ? args.platformSerialNumberNode2 : undefined;
            resourceInputs["providedLicense"] = args ? args.providedLicense : undefined;
            resourceInputs["resourceGroup"] = args ? args.resourceGroup : undefined;
            resourceInputs["retries"] = args ? args.retries : undefined;
            resourceInputs["saasSubscriptionId"] = args ? args.saasSubscriptionId : undefined;
            resourceInputs["securityGroupId"] = args ? args.securityGroupId : undefined;
            resourceInputs["serialNumber"] = args ? args.serialNumber : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["svmName"] = args ? args.svmName : undefined;
            resourceInputs["svmPassword"] = args?.svmPassword ? pulumi.secret(args.svmPassword) : undefined;
            resourceInputs["tierLevel"] = args ? args.tierLevel : undefined;
            resourceInputs["upgradeOntapVersion"] = args ? args.upgradeOntapVersion : undefined;
            resourceInputs["useLatestVersion"] = args ? args.useLatestVersion : undefined;
            resourceInputs["vnetId"] = args ? args.vnetId : undefined;
            resourceInputs["vnetResourceGroup"] = args ? args.vnetResourceGroup : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["wormRetentionPeriodLength"] = args ? args.wormRetentionPeriodLength : undefined;
            resourceInputs["wormRetentionPeriodUnit"] = args ? args.wormRetentionPeriodUnit : undefined;
            resourceInputs["writingSpeedState"] = args ? args.writingSpeedState : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["svmPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CvoAzure.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CvoAzure resources.
 */
export interface CvoAzureState {
    allowDeployInExistingRg?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<number>;
    availabilityZoneNode1?: pulumi.Input<number>;
    availabilityZoneNode2?: pulumi.Input<number>;
    azureEncryptionParameters?: pulumi.Input<inputs.CvoAzureAzureEncryptionParameters>;
    azureTags?: pulumi.Input<pulumi.Input<inputs.CvoAzureAzureTag>[]>;
    backupVolumesToCbs?: pulumi.Input<boolean>;
    capacityPackageName?: pulumi.Input<string>;
    capacityTier?: pulumi.Input<string>;
    cidr?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    cloudProviderAccount?: pulumi.Input<string>;
    dataEncryptionType?: pulumi.Input<string>;
    diskSize?: pulumi.Input<number>;
    diskSizeUnit?: pulumi.Input<string>;
    enableCompliance?: pulumi.Input<boolean>;
    enableMonitoring?: pulumi.Input<boolean>;
    haEnableHttps?: pulumi.Input<boolean>;
    instanceType?: pulumi.Input<string>;
    isHa?: pulumi.Input<boolean>;
    licenseType?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nssAccount?: pulumi.Input<string>;
    ontapVersion?: pulumi.Input<string>;
    platformSerialNumberNode1?: pulumi.Input<string>;
    platformSerialNumberNode2?: pulumi.Input<string>;
    providedLicense?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    saasSubscriptionId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    storageType?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    svmName?: pulumi.Input<string>;
    svmPassword?: pulumi.Input<string>;
    tierLevel?: pulumi.Input<string>;
    upgradeOntapVersion?: pulumi.Input<boolean>;
    useLatestVersion?: pulumi.Input<boolean>;
    vnetId?: pulumi.Input<string>;
    vnetResourceGroup?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
    wormRetentionPeriodLength?: pulumi.Input<number>;
    wormRetentionPeriodUnit?: pulumi.Input<string>;
    writingSpeedState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CvoAzure resource.
 */
export interface CvoAzureArgs {
    allowDeployInExistingRg?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<number>;
    availabilityZoneNode1?: pulumi.Input<number>;
    availabilityZoneNode2?: pulumi.Input<number>;
    azureEncryptionParameters?: pulumi.Input<inputs.CvoAzureAzureEncryptionParameters>;
    azureTags?: pulumi.Input<pulumi.Input<inputs.CvoAzureAzureTag>[]>;
    backupVolumesToCbs?: pulumi.Input<boolean>;
    capacityPackageName?: pulumi.Input<string>;
    capacityTier?: pulumi.Input<string>;
    cidr?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    cloudProviderAccount?: pulumi.Input<string>;
    dataEncryptionType?: pulumi.Input<string>;
    diskSize?: pulumi.Input<number>;
    diskSizeUnit?: pulumi.Input<string>;
    enableCompliance?: pulumi.Input<boolean>;
    enableMonitoring?: pulumi.Input<boolean>;
    haEnableHttps?: pulumi.Input<boolean>;
    instanceType?: pulumi.Input<string>;
    isHa?: pulumi.Input<boolean>;
    licenseType?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nssAccount?: pulumi.Input<string>;
    ontapVersion?: pulumi.Input<string>;
    platformSerialNumberNode1?: pulumi.Input<string>;
    platformSerialNumberNode2?: pulumi.Input<string>;
    providedLicense?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    retries?: pulumi.Input<number>;
    saasSubscriptionId?: pulumi.Input<string>;
    securityGroupId?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    storageType?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
    svmName?: pulumi.Input<string>;
    svmPassword: pulumi.Input<string>;
    tierLevel?: pulumi.Input<string>;
    upgradeOntapVersion?: pulumi.Input<boolean>;
    useLatestVersion?: pulumi.Input<boolean>;
    vnetId: pulumi.Input<string>;
    vnetResourceGroup?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
    wormRetentionPeriodLength?: pulumi.Input<number>;
    wormRetentionPeriodUnit?: pulumi.Input<string>;
    writingSpeedState?: pulumi.Input<string>;
}
