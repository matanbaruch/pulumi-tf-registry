// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AwsFsx extends pulumi.CustomResource {
    /**
     * Get an existing AwsFsx resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsFsxState, opts?: pulumi.CustomResourceOptions): AwsFsx {
        return new AwsFsx(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netapp-cloudmanager:index/awsFsx:AwsFsx';

    /**
     * Returns true if the given object is an instance of AwsFsx.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsFsx {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsFsx.__pulumiType;
    }

    public readonly awsCredentialsName!: pulumi.Output<string>;
    public readonly endpointIpAddressRange!: pulumi.Output<string | undefined>;
    public readonly fileSystemId!: pulumi.Output<string | undefined>;
    public readonly fsxAdminPassword!: pulumi.Output<string>;
    public readonly importFileSystem!: pulumi.Output<boolean | undefined>;
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    public readonly minimumSsdIops!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly primarySubnetId!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly routeTableIds!: pulumi.Output<string[] | undefined>;
    public readonly secondarySubnetId!: pulumi.Output<string>;
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    public readonly storageCapacitySize!: pulumi.Output<number | undefined>;
    public readonly storageCapacitySizeUnit!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.AwsFsxTag[] | undefined>;
    public readonly tenantId!: pulumi.Output<string | undefined>;
    public readonly throughputCapacity!: pulumi.Output<number>;
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a AwsFsx resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsFsxArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsFsxArgs | AwsFsxState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsFsxState | undefined;
            resourceInputs["awsCredentialsName"] = state ? state.awsCredentialsName : undefined;
            resourceInputs["endpointIpAddressRange"] = state ? state.endpointIpAddressRange : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["fsxAdminPassword"] = state ? state.fsxAdminPassword : undefined;
            resourceInputs["importFileSystem"] = state ? state.importFileSystem : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["minimumSsdIops"] = state ? state.minimumSsdIops : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primarySubnetId"] = state ? state.primarySubnetId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["routeTableIds"] = state ? state.routeTableIds : undefined;
            resourceInputs["secondarySubnetId"] = state ? state.secondarySubnetId : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["storageCapacitySize"] = state ? state.storageCapacitySize : undefined;
            resourceInputs["storageCapacitySizeUnit"] = state ? state.storageCapacitySizeUnit : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["throughputCapacity"] = state ? state.throughputCapacity : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as AwsFsxArgs | undefined;
            if ((!args || args.awsCredentialsName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsCredentialsName'");
            }
            if ((!args || args.fsxAdminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fsxAdminPassword'");
            }
            if ((!args || args.primarySubnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primarySubnetId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.secondarySubnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secondarySubnetId'");
            }
            if ((!args || args.throughputCapacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'throughputCapacity'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["awsCredentialsName"] = args ? args.awsCredentialsName : undefined;
            resourceInputs["endpointIpAddressRange"] = args ? args.endpointIpAddressRange : undefined;
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["fsxAdminPassword"] = args?.fsxAdminPassword ? pulumi.secret(args.fsxAdminPassword) : undefined;
            resourceInputs["importFileSystem"] = args ? args.importFileSystem : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["minimumSsdIops"] = args ? args.minimumSsdIops : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primarySubnetId"] = args ? args.primarySubnetId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["routeTableIds"] = args ? args.routeTableIds : undefined;
            resourceInputs["secondarySubnetId"] = args ? args.secondarySubnetId : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["storageCapacitySize"] = args ? args.storageCapacitySize : undefined;
            resourceInputs["storageCapacitySizeUnit"] = args ? args.storageCapacitySizeUnit : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["throughputCapacity"] = args ? args.throughputCapacity : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["fsxAdminPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AwsFsx.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsFsx resources.
 */
export interface AwsFsxState {
    awsCredentialsName?: pulumi.Input<string>;
    endpointIpAddressRange?: pulumi.Input<string>;
    fileSystemId?: pulumi.Input<string>;
    fsxAdminPassword?: pulumi.Input<string>;
    importFileSystem?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    minimumSsdIops?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    primarySubnetId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    secondarySubnetId?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    storageCapacitySize?: pulumi.Input<number>;
    storageCapacitySizeUnit?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsFsxTag>[]>;
    tenantId?: pulumi.Input<string>;
    throughputCapacity?: pulumi.Input<number>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsFsx resource.
 */
export interface AwsFsxArgs {
    awsCredentialsName: pulumi.Input<string>;
    endpointIpAddressRange?: pulumi.Input<string>;
    fileSystemId?: pulumi.Input<string>;
    fsxAdminPassword: pulumi.Input<string>;
    importFileSystem?: pulumi.Input<boolean>;
    kmsKeyId?: pulumi.Input<string>;
    minimumSsdIops?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    primarySubnetId: pulumi.Input<string>;
    region: pulumi.Input<string>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    secondarySubnetId: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    storageCapacitySize?: pulumi.Input<number>;
    storageCapacitySizeUnit?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AwsFsxTag>[]>;
    tenantId?: pulumi.Input<string>;
    throughputCapacity: pulumi.Input<number>;
    workspaceId: pulumi.Input<string>;
}
