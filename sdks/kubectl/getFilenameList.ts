// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFilenameList(args: GetFilenameListArgs, opts?: pulumi.InvokeOptions): Promise<GetFilenameListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubectl:index/getFilenameList:getFilenameList", {
        "id": args.id,
        "pattern": args.pattern,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFilenameList.
 */
export interface GetFilenameListArgs {
    id?: string;
    pattern: string;
}

/**
 * A collection of values returned by getFilenameList.
 */
export interface GetFilenameListResult {
    readonly basenames: string[];
    readonly id: string;
    readonly matches: string[];
    readonly pattern: string;
}
export function getFilenameListOutput(args: GetFilenameListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFilenameListResult> {
    return pulumi.output(args).apply((a: any) => getFilenameList(a, opts))
}

/**
 * A collection of arguments for invoking getFilenameList.
 */
export interface GetFilenameListOutputArgs {
    id?: pulumi.Input<string>;
    pattern: pulumi.Input<string>;
}
