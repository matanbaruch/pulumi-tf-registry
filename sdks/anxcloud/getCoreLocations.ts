// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCoreLocations(args?: GetCoreLocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreLocationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("anxcloud:index/getCoreLocations:getCoreLocations", {
        "id": args.id,
        "search": args.search,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreLocations.
 */
export interface GetCoreLocationsArgs {
    id?: string;
    search?: string;
}

/**
 * A collection of values returned by getCoreLocations.
 */
export interface GetCoreLocationsResult {
    readonly id: string;
    readonly locations: outputs.GetCoreLocationsLocation[];
    readonly search?: string;
}
export function getCoreLocationsOutput(args?: GetCoreLocationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreLocationsResult> {
    return pulumi.output(args).apply((a: any) => getCoreLocations(a, opts))
}

/**
 * A collection of arguments for invoking getCoreLocations.
 */
export interface GetCoreLocationsOutputArgs {
    id?: pulumi.Input<string>;
    search?: pulumi.Input<string>;
}
