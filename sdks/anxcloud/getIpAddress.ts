// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpAddress(args?: GetIpAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetIpAddressResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("anxcloud:index/getIpAddress:getIpAddress", {
        "address": args.address,
        "id": args.id,
        "networkPrefixId": args.networkPrefixId,
        "vlanId": args.vlanId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpAddress.
 */
export interface GetIpAddressArgs {
    address?: string;
    id?: string;
    networkPrefixId?: string;
    vlanId?: string;
}

/**
 * A collection of values returned by getIpAddress.
 */
export interface GetIpAddressResult {
    readonly address?: string;
    readonly descriptionCustomer: string;
    readonly descriptionInternal: string;
    readonly id: string;
    readonly networkPrefixId?: string;
    readonly organization: string;
    readonly role: string;
    readonly status: string;
    readonly version: number;
    readonly vlanId: string;
}
export function getIpAddressOutput(args?: GetIpAddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpAddressResult> {
    return pulumi.output(args).apply((a: any) => getIpAddress(a, opts))
}

/**
 * A collection of arguments for invoking getIpAddress.
 */
export interface GetIpAddressOutputArgs {
    address?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    networkPrefixId?: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
}
