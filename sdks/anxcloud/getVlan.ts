// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVlan(args?: GetVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetVlanResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("anxcloud:index/getVlan:getVlan", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getVlan.
 */
export interface GetVlanResult {
    readonly descriptionCustomer: string;
    readonly descriptionInternal: string;
    readonly id?: string;
    readonly locationId: string;
    readonly locations: outputs.GetVlanLocation[];
    readonly name?: string;
    readonly roleText: string;
    readonly status: string;
    readonly vmProvisioning: boolean;
}
export function getVlanOutput(args?: GetVlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVlanResult> {
    return pulumi.output(args).apply((a: any) => getVlan(a, opts))
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
