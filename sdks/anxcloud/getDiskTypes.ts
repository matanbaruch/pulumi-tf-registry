// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDiskTypes(args: GetDiskTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskTypesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("anxcloud:index/getDiskTypes:getDiskTypes", {
        "id": args.id,
        "locationId": args.locationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDiskTypes.
 */
export interface GetDiskTypesArgs {
    id?: string;
    locationId: string;
}

/**
 * A collection of values returned by getDiskTypes.
 */
export interface GetDiskTypesResult {
    readonly id: string;
    readonly locationId: string;
    readonly types: outputs.GetDiskTypesType[];
}
export function getDiskTypesOutput(args: GetDiskTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDiskTypesResult> {
    return pulumi.output(args).apply((a: any) => getDiskTypes(a, opts))
}

/**
 * A collection of arguments for invoking getDiskTypes.
 */
export interface GetDiskTypesOutputArgs {
    id?: pulumi.Input<string>;
    locationId: pulumi.Input<string>;
}
