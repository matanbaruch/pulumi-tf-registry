// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpAddresses(args?: GetIpAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetIpAddressesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("anxcloud:index/getIpAddresses:getIpAddresses", {
        "id": args.id,
        "search": args.search,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpAddresses.
 */
export interface GetIpAddressesArgs {
    id?: string;
    search?: string;
}

/**
 * A collection of values returned by getIpAddresses.
 */
export interface GetIpAddressesResult {
    readonly addresses: outputs.GetIpAddressesAddress[];
    readonly id: string;
    readonly search?: string;
}
export function getIpAddressesOutput(args?: GetIpAddressesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpAddressesResult> {
    return pulumi.output(args).apply((a: any) => getIpAddresses(a, opts))
}

/**
 * A collection of arguments for invoking getIpAddresses.
 */
export interface GetIpAddressesOutputArgs {
    id?: pulumi.Input<string>;
    search?: pulumi.Input<string>;
}
