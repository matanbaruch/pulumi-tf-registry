// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCoreLocation(args?: GetCoreLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetCoreLocationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("anxcloud:index/getCoreLocation:getCoreLocation", {
        "code": args.code,
        "id": args.id,
        "identifier": args.identifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCoreLocation.
 */
export interface GetCoreLocationArgs {
    code?: string;
    id?: string;
    identifier?: string;
}

/**
 * A collection of values returned by getCoreLocation.
 */
export interface GetCoreLocationResult {
    readonly cityCode: string;
    readonly code?: string;
    readonly country: string;
    readonly id: string;
    readonly identifier?: string;
    readonly lat: string;
    readonly lon: string;
    readonly name: string;
}
export function getCoreLocationOutput(args?: GetCoreLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCoreLocationResult> {
    return pulumi.output(args).apply((a: any) => getCoreLocation(a, opts))
}

/**
 * A collection of arguments for invoking getCoreLocation.
 */
export interface GetCoreLocationOutputArgs {
    code?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
}
