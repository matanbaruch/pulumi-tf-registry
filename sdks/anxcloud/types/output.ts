// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DnsRecordTimeouts {
    create?: string;
    delete?: string;
    read?: string;
}

export interface DnsZoneDnsServer {
    /**
     * DNS server alias.
     */
    alias: string;
    /**
     * DNS server name.
     */
    server: string;
}

export interface DnsZoneTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface E5eFunctionEnv {
    name: string;
    secret?: boolean;
    value: string;
}

export interface E5eFunctionHostname {
    hostname: string;
    ip: string;
}

export interface E5eFunctionStorageBackendArchive {
    content: string;
    name: string;
}

export interface E5eFunctionStorageBackendGit {
    branch?: string;
    password?: string;
    privateKey?: string;
    url: string;
    username?: string;
}

export interface E5eFunctionStorageBackendS3 {
    accessKey?: string;
    bucketName: string;
    endpoint: string;
    objectPath?: string;
    secretKey?: string;
}

export interface FrontierActionE5eAsyncFunction {
    function: string;
}

export interface FrontierActionE5eAsyncResult {
    function: string;
}

export interface FrontierActionE5eFunction {
    function: string;
}

export interface FrontierActionMockResponse {
    body: string;
    language: string;
}

export interface FrontierActionUrlRewrite {
    url: string;
}

export interface GetCoreLocationsLocation {
    cityCode: string;
    code: string;
    country: string;
    identifier: string;
    lat: string;
    lon: string;
    name: string;
}

export interface GetCpuPerformanceTypesType {
    id: string;
    limit: number;
    prioritization: string;
    unit: string;
}

export interface GetDiskTypesType {
    bandwidth: number;
    id: string;
    iops: number;
    latency: number;
    storageType: string;
}

export interface GetDnsRecordsRecord {
    identifier: string;
    immutable: boolean;
    name: string;
    rdata: string;
    region: string;
    ttl: number;
    type: string;
    zoneName: string;
}

export interface GetDnsZonesZone {
    adminEmail: string;
    deploymentLevel: number;
    dnsSecMode: string;
    dnsServers: outputs.GetDnsZonesZoneDnsServer[];
    expire: number;
    isEditable: boolean;
    isMaster: boolean;
    masterNameserver: string;
    name: string;
    notifyAllowedIps: string[];
    refresh: number;
    retry: number;
    ttl: number;
    validationLevel: number;
}

export interface GetDnsZonesZoneDnsServer {
    alias: string;
    server: string;
}

export interface GetIpAddressesAddress {
    address: string;
    descriptionCustomer: string;
    identifier: string;
    role: string;
}

export interface GetTagsTag {
    identifier: string;
    name: string;
}

export interface GetTemplateTemplate {
    bit: string;
    build: string;
    id: string;
    name: string;
    params: outputs.GetTemplateTemplateParam[];
}

export interface GetTemplateTemplateParam {
    bootDelaySeconds: outputs.GetTemplateTemplateParamBootDelaySecond[];
    cpuses: outputs.GetTemplateTemplateParamCpus[];
    diskGbs: outputs.GetTemplateTemplateParamDiskGb[];
    diskTypes: outputs.GetTemplateTemplateParamDiskType[];
    dns0s: outputs.GetTemplateTemplateParamDns0[];
    dns1s: outputs.GetTemplateTemplateParamDns1[];
    dns2s: outputs.GetTemplateTemplateParamDns2[];
    dns3s: outputs.GetTemplateTemplateParamDns3[];
    enterBiosSetups: outputs.GetTemplateTemplateParamEnterBiosSetup[];
    hostnames: outputs.GetTemplateTemplateParamHostname[];
    ips: outputs.GetTemplateTemplateParamIp[];
    memoryMbs: outputs.GetTemplateTemplateParamMemoryMb[];
    nics: outputs.GetTemplateTemplateParamNic[];
    passwords: outputs.GetTemplateTemplateParamPassword[];
    users: outputs.GetTemplateTemplateParamUser[];
    vlans: outputs.GetTemplateTemplateParamVlan[];
}

export interface GetTemplateTemplateParamBootDelaySecond {
    defaultValue: number;
    label: string;
    maxValue: number;
    minValue: number;
    required: boolean;
}

export interface GetTemplateTemplateParamCpus {
    defaultValue: number;
    label: string;
    maxValue: number;
    minValue: number;
    required: boolean;
}

export interface GetTemplateTemplateParamDiskGb {
    defaultValue: number;
    label: string;
    maxValue: number;
    minValue: number;
    required: boolean;
}

export interface GetTemplateTemplateParamDiskType {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamDns0 {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamDns1 {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamDns2 {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamDns3 {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamEnterBiosSetup {
    defaultValue: boolean;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamHostname {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamIp {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamMemoryMb {
    defaultValue: number;
    label: string;
    maxValue: number;
    minValue: number;
    required: boolean;
}

export interface GetTemplateTemplateParamNic {
    datas: outputs.GetTemplateTemplateParamNicData[];
    defaultValue: number;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamNicData {
    default: boolean;
    id: number;
    name: string;
}

export interface GetTemplateTemplateParamPassword {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamUser {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetTemplateTemplateParamVlan {
    defaultValue: string;
    label: string;
    required: boolean;
}

export interface GetVlanLocation {
    cityCode: string;
    code: string;
    country: string;
    identifier: string;
    lat: string;
    lon: string;
    name: string;
}

export interface GetVlansVlan {
    descriptionCustomer: string;
    identifier: string;
    name: string;
}

export interface IpAddressTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface KubernetesClusterTimeouts {
    create?: string;
    delete?: string;
    read?: string;
}

export interface KubernetesKubeconfigTimeouts {
    create?: string;
    delete?: string;
    read?: string;
}

export interface KubernetesNodePoolDisk {
    /**
     * Disk size in GiB.
     */
    sizeGib: number;
}

export interface KubernetesNodePoolTimeouts {
    create?: string;
    delete?: string;
    read?: string;
}

export interface LbaasLoadbalancerTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface NetworkPrefixLocation {
    cityCode: string;
    code: string;
    country: string;
    identifier: string;
    lat: string;
    lon: string;
    name: string;
}

export interface NetworkPrefixTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface TagOrganisationAssignment {
    customers: outputs.TagOrganisationAssignmentCustomer[];
    services: outputs.TagOrganisationAssignmentService[];
}

export interface TagOrganisationAssignmentCustomer {
    customerId: string;
    demo: boolean;
    id: string;
    name: string;
    nameSlug: string;
    reseller: string;
}

export interface TagOrganisationAssignmentService {
    id: string;
    name: string;
}

export interface TagTimeouts {
    create?: string;
    delete?: string;
    read?: string;
}

export interface VirtualServerDisk {
    /**
     * Exact floating point disk size. Not configurable; just for comparison.
     */
    diskExact: number;
    /**
     * Disk capacity in GB.
     */
    diskGb: number;
    /**
     * Device identifier of the disk.
     */
    diskId: number;
    /**
     * Disk category (limits disk performance, e.g. IOPS). Default value depends on location.
     */
    diskType?: string;
}

export interface VirtualServerInfo {
    cores: number;
    cpu: number;
    customName: string;
    disksInfos: outputs.VirtualServerInfoDisksInfo[];
    disksNumber: number;
    guestOs: string;
    guestToolsStatus: string;
    identifier: string;
    locationCode: string;
    locationCountry: string;
    locationName: string;
    name: string;
    networks: outputs.VirtualServerInfoNetwork[];
    ram: number;
    status: string;
    versionTools: string;
}

export interface VirtualServerInfoDisksInfo {
    busType: string;
    busTypeLabel: string;
    diskGb: number;
    diskId: number;
    diskType: string;
    iops: number;
    latency: number;
    storageType: string;
}

export interface VirtualServerInfoNetwork {
    id: number;
    ipV4s: string[];
    ipV6s: string[];
    macAddress: string;
    nic: number;
    vlan: string;
}

export interface VirtualServerNetwork {
    /**
     * Requested set of IPs and IPs identifiers. IPs are ignored when using template_type 'from_scratch'. Defaults to free IPs from IP pool attached to VLAN.
     */
    ips?: string[];
    /**
     * Network interface card type.
     */
    nicType: string;
    /**
     * VLAN identifier.
     */
    vlanId: string;
}

export interface VirtualServerTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

export interface VlanLocation {
    cityCode: string;
    code: string;
    country: string;
    identifier: string;
    lat: string;
    lon: string;
    name: string;
}

export interface VlanTimeouts {
    create?: string;
    delete?: string;
    read?: string;
    update?: string;
}

