// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface IntegrationEmail {
    /**
     * Enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Scrub params
     */
    scrubParams?: pulumi.Input<boolean>;
}

export interface IntegrationPagerduty {
    /**
     * Enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Service key
     */
    serviceKey: pulumi.Input<string>;
}

export interface IntegrationSlack {
    /**
     * Channel
     */
    channel: pulumi.Input<string>;
    /**
     * Enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Service account ID
     */
    serviceAccountId: pulumi.Input<string>;
    /**
     * Show message buttons
     */
    showMessageButtons?: pulumi.Input<boolean>;
}

export interface IntegrationWebhook {
    /**
     * Enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * URL
     */
    url: pulumi.Input<string>;
}

export interface NotificationConfig {
    /**
     * Channel (slack)
     */
    channel?: pulumi.Input<string>;
    /**
     * Environments (email daily summary only)
     */
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Format (webhook)
     */
    format?: pulumi.Input<string>;
    /**
     * Message template (slack)
     */
    messageTemplate?: pulumi.Input<string>;
    /**
     * Min item level (email daily summary only)
     */
    minItemLevel?: pulumi.Input<string>;
    /**
     * Send only if data (email daily summary only)
     */
    sendOnlyIfData?: pulumi.Input<boolean>;
    /**
     * Service key (pagerduty)
     */
    serviceKey?: pulumi.Input<string>;
    /**
     * Show message buttons (slack)
     */
    showMessageButtons?: pulumi.Input<boolean>;
    /**
     * Summary Time (email daily summary only)
     */
    summaryTime?: pulumi.Input<number>;
    /**
     * Teams (email)
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * URL (webhook)
     */
    url?: pulumi.Input<string>;
    /**
     * Users (email)
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NotificationRule {
    /**
     * Enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Filters
     */
    filters?: pulumi.Input<pulumi.Input<inputs.NotificationRuleFilter>[]>;
    /**
     * Trigger
     */
    trigger: pulumi.Input<string>;
}

export interface NotificationRuleFilter {
    /**
     * Count
     */
    count?: pulumi.Input<number>;
    /**
     * Operation
     */
    operation?: pulumi.Input<string>;
    /**
     * Path
     */
    path?: pulumi.Input<string>;
    /**
     * Period
     */
    period?: pulumi.Input<number>;
    /**
     * Type
     */
    type: pulumi.Input<string>;
    /**
     * Value
     */
    value?: pulumi.Input<string>;
}
