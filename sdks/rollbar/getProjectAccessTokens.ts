// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProjectAccessTokens(args: GetProjectAccessTokensArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectAccessTokensResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rollbar:index/getProjectAccessTokens:getProjectAccessTokens", {
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectAccessTokens.
 */
export interface GetProjectAccessTokensArgs {
    id?: string;
    projectId: number;
}

/**
 * A collection of values returned by getProjectAccessTokens.
 */
export interface GetProjectAccessTokensResult {
    readonly accessTokens: {[key: string]: string};
    readonly id: string;
    readonly projectId: number;
}
export function getProjectAccessTokensOutput(args: GetProjectAccessTokensOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectAccessTokensResult> {
    return pulumi.output(args).apply((a: any) => getProjectAccessTokens(a, opts))
}

/**
 * A collection of arguments for invoking getProjectAccessTokens.
 */
export interface GetProjectAccessTokensOutputArgs {
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<number>;
}
