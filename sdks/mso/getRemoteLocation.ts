// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRemoteLocation(args: GetRemoteLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetRemoteLocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getRemoteLocation:getRemoteLocation", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRemoteLocation.
 */
export interface GetRemoteLocationArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getRemoteLocation.
 */
export interface GetRemoteLocationResult {
    readonly description: string;
    readonly hostname: string;
    readonly id: string;
    readonly name: string;
    readonly path: string;
    readonly port: number;
    readonly protocol: string;
    readonly username: string;
}
export function getRemoteLocationOutput(args: GetRemoteLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRemoteLocationResult> {
    return pulumi.output(args).apply((a: any) => getRemoteLocation(a, opts))
}

/**
 * A collection of arguments for invoking getRemoteLocation.
 */
export interface GetRemoteLocationOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
