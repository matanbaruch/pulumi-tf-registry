// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSite(args: GetSiteArgs, opts?: pulumi.InvokeOptions): Promise<GetSiteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSite:getSite", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSite.
 */
export interface GetSiteArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getSite.
 */
export interface GetSiteResult {
    readonly apicSiteId: string;
    readonly cloudProviders: string[];
    readonly groupId: string;
    readonly id: string;
    readonly labels: string[];
    readonly location: {[key: string]: string};
    readonly name: string;
    readonly password: string;
    readonly proxy: boolean;
    readonly reprovision: boolean;
    readonly srL3out: boolean;
    readonly status: string;
    readonly templateCount: number;
    readonly type: string;
    readonly urls: string[];
    readonly username: string;
    readonly version: string;
}
export function getSiteOutput(args: GetSiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSiteResult> {
    return pulumi.output(args).apply((a: any) => getSite(a, opts))
}

/**
 * A collection of arguments for invoking getSite.
 */
export interface GetSiteOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
