// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaSiteBdL3out(args: GetSchemaSiteBdL3outArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaSiteBdL3outResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaSiteBdL3out:getSchemaSiteBdL3out", {
        "bdName": args.bdName,
        "id": args.id,
        "l3outName": args.l3outName,
        "l3outSchemaId": args.l3outSchemaId,
        "l3outTemplateName": args.l3outTemplateName,
        "schemaId": args.schemaId,
        "siteId": args.siteId,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaSiteBdL3out.
 */
export interface GetSchemaSiteBdL3outArgs {
    bdName: string;
    id?: string;
    l3outName: string;
    l3outSchemaId?: string;
    l3outTemplateName?: string;
    schemaId: string;
    siteId: string;
    templateName: string;
}

/**
 * A collection of values returned by getSchemaSiteBdL3out.
 */
export interface GetSchemaSiteBdL3outResult {
    readonly bdName: string;
    readonly id: string;
    readonly l3outName: string;
    readonly l3outSchemaId: string;
    readonly l3outTemplateName: string;
    readonly schemaId: string;
    readonly siteId: string;
    readonly templateName: string;
}
export function getSchemaSiteBdL3outOutput(args: GetSchemaSiteBdL3outOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaSiteBdL3outResult> {
    return pulumi.output(args).apply((a: any) => getSchemaSiteBdL3out(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaSiteBdL3out.
 */
export interface GetSchemaSiteBdL3outOutputArgs {
    bdName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    l3outName: pulumi.Input<string>;
    l3outSchemaId?: pulumi.Input<string>;
    l3outTemplateName?: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
