// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaTemplateFilterEntry(args: GetSchemaTemplateFilterEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaTemplateFilterEntryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaTemplateFilterEntry:getSchemaTemplateFilterEntry", {
        "entryName": args.entryName,
        "id": args.id,
        "name": args.name,
        "schemaId": args.schemaId,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaTemplateFilterEntry.
 */
export interface GetSchemaTemplateFilterEntryArgs {
    entryName: string;
    id?: string;
    name: string;
    schemaId: string;
    templateName: string;
}

/**
 * A collection of values returned by getSchemaTemplateFilterEntry.
 */
export interface GetSchemaTemplateFilterEntryResult {
    readonly arpFlag: string;
    readonly destinationFrom: string;
    readonly destinationTo: string;
    readonly displayName: string;
    readonly entryDescription: string;
    readonly entryDisplayName: string;
    readonly entryName: string;
    readonly etherType: string;
    readonly id: string;
    readonly ipProtocol: string;
    readonly matchOnlyFragments: boolean;
    readonly name: string;
    readonly schemaId: string;
    readonly sourceFrom: string;
    readonly sourceTo: string;
    readonly stateful: boolean;
    readonly tcpSessionRules: string[];
    readonly templateName: string;
}
export function getSchemaTemplateFilterEntryOutput(args: GetSchemaTemplateFilterEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaTemplateFilterEntryResult> {
    return pulumi.output(args).apply((a: any) => getSchemaTemplateFilterEntry(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaTemplateFilterEntry.
 */
export interface GetSchemaTemplateFilterEntryOutputArgs {
    entryName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
