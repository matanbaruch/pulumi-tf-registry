// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaSiteVrf(args: GetSchemaSiteVrfArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaSiteVrfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaSiteVrf:getSchemaSiteVrf", {
        "id": args.id,
        "schemaId": args.schemaId,
        "siteId": args.siteId,
        "templateName": args.templateName,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaSiteVrf.
 */
export interface GetSchemaSiteVrfArgs {
    id?: string;
    schemaId: string;
    siteId: string;
    templateName: string;
    vrfName: string;
}

/**
 * A collection of values returned by getSchemaSiteVrf.
 */
export interface GetSchemaSiteVrfResult {
    readonly id: string;
    readonly schemaId: string;
    readonly siteId: string;
    readonly templateName: string;
    readonly vrfName: string;
}
export function getSchemaSiteVrfOutput(args: GetSchemaSiteVrfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaSiteVrfResult> {
    return pulumi.output(args).apply((a: any) => getSchemaSiteVrf(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaSiteVrf.
 */
export interface GetSchemaSiteVrfOutputArgs {
    id?: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
