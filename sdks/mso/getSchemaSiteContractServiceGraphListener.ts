// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSchemaSiteContractServiceGraphListener(args: GetSchemaSiteContractServiceGraphListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaSiteContractServiceGraphListenerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaSiteContractServiceGraphListener:getSchemaSiteContractServiceGraphListener", {
        "contractName": args.contractName,
        "id": args.id,
        "listenerName": args.listenerName,
        "schemaId": args.schemaId,
        "serviceNodeIndex": args.serviceNodeIndex,
        "siteId": args.siteId,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaSiteContractServiceGraphListener.
 */
export interface GetSchemaSiteContractServiceGraphListenerArgs {
    contractName: string;
    id?: string;
    listenerName: string;
    schemaId: string;
    serviceNodeIndex: number;
    siteId: string;
    templateName: string;
}

/**
 * A collection of values returned by getSchemaSiteContractServiceGraphListener.
 */
export interface GetSchemaSiteContractServiceGraphListenerResult {
    readonly contractName: string;
    readonly frontendIpDn: string;
    readonly id: string;
    readonly listenerName: string;
    readonly port: number;
    readonly protocol: string;
    readonly rules: outputs.GetSchemaSiteContractServiceGraphListenerRule[];
    readonly schemaId: string;
    readonly securityPolicy: string;
    readonly serviceNodeIndex: number;
    readonly siteId: string;
    readonly sslCertificates: outputs.GetSchemaSiteContractServiceGraphListenerSslCertificate[];
    readonly templateName: string;
}
export function getSchemaSiteContractServiceGraphListenerOutput(args: GetSchemaSiteContractServiceGraphListenerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaSiteContractServiceGraphListenerResult> {
    return pulumi.output(args).apply((a: any) => getSchemaSiteContractServiceGraphListener(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaSiteContractServiceGraphListener.
 */
export interface GetSchemaSiteContractServiceGraphListenerOutputArgs {
    contractName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    listenerName: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    serviceNodeIndex: pulumi.Input<number>;
    siteId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
