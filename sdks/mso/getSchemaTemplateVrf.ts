// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaTemplateVrf(args: GetSchemaTemplateVrfArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaTemplateVrfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaTemplateVrf:getSchemaTemplateVrf", {
        "id": args.id,
        "name": args.name,
        "schemaId": args.schemaId,
        "template": args.template,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaTemplateVrf.
 */
export interface GetSchemaTemplateVrfArgs {
    id?: string;
    name: string;
    schemaId: string;
    template: string;
}

/**
 * A collection of values returned by getSchemaTemplateVrf.
 */
export interface GetSchemaTemplateVrfResult {
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly ipDataPlaneLearning: string;
    readonly layer3Multicast: boolean;
    readonly name: string;
    readonly preferredGroup: boolean;
    readonly schemaId: string;
    readonly siteAwarePolicyEnforcement: boolean;
    readonly template: string;
    readonly vzany: boolean;
}
export function getSchemaTemplateVrfOutput(args: GetSchemaTemplateVrfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaTemplateVrfResult> {
    return pulumi.output(args).apply((a: any) => getSchemaTemplateVrf(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaTemplateVrf.
 */
export interface GetSchemaTemplateVrfOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    template: pulumi.Input<string>;
}
