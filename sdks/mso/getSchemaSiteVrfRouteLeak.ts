// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaSiteVrfRouteLeak(args: GetSchemaSiteVrfRouteLeakArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaSiteVrfRouteLeakResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaSiteVrfRouteLeak:getSchemaSiteVrfRouteLeak", {
        "id": args.id,
        "schemaId": args.schemaId,
        "siteId": args.siteId,
        "targetVrfName": args.targetVrfName,
        "targetVrfSchemaId": args.targetVrfSchemaId,
        "targetVrfTemplateName": args.targetVrfTemplateName,
        "templateName": args.templateName,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaSiteVrfRouteLeak.
 */
export interface GetSchemaSiteVrfRouteLeakArgs {
    id?: string;
    schemaId: string;
    siteId: string;
    targetVrfName: string;
    targetVrfSchemaId?: string;
    targetVrfTemplateName?: string;
    templateName: string;
    vrfName: string;
}

/**
 * A collection of values returned by getSchemaSiteVrfRouteLeak.
 */
export interface GetSchemaSiteVrfRouteLeakResult {
    readonly id: string;
    readonly schemaId: string;
    readonly siteId: string;
    readonly subnetIps: string[];
    readonly targetVrfName: string;
    readonly targetVrfSchemaId: string;
    readonly targetVrfTemplateName: string;
    readonly templateName: string;
    readonly tenantName: string;
    readonly type: string;
    readonly vrfName: string;
}
export function getSchemaSiteVrfRouteLeakOutput(args: GetSchemaSiteVrfRouteLeakOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaSiteVrfRouteLeakResult> {
    return pulumi.output(args).apply((a: any) => getSchemaSiteVrfRouteLeak(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaSiteVrfRouteLeak.
 */
export interface GetSchemaSiteVrfRouteLeakOutputArgs {
    id?: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
    targetVrfName: pulumi.Input<string>;
    targetVrfSchemaId?: pulumi.Input<string>;
    targetVrfTemplateName?: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
