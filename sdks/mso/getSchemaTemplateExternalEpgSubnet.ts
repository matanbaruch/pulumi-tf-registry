// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaTemplateExternalEpgSubnet(args: GetSchemaTemplateExternalEpgSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaTemplateExternalEpgSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaTemplateExternalEpgSubnet:getSchemaTemplateExternalEpgSubnet", {
        "externalEpgName": args.externalEpgName,
        "id": args.id,
        "ip": args.ip,
        "schemaId": args.schemaId,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaTemplateExternalEpgSubnet.
 */
export interface GetSchemaTemplateExternalEpgSubnetArgs {
    externalEpgName: string;
    id?: string;
    ip: string;
    schemaId: string;
    templateName: string;
}

/**
 * A collection of values returned by getSchemaTemplateExternalEpgSubnet.
 */
export interface GetSchemaTemplateExternalEpgSubnetResult {
    readonly aggregates: string[];
    readonly externalEpgName: string;
    readonly id: string;
    readonly ip: string;
    readonly name: string;
    readonly schemaId: string;
    readonly scopes: string[];
    readonly templateName: string;
}
export function getSchemaTemplateExternalEpgSubnetOutput(args: GetSchemaTemplateExternalEpgSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaTemplateExternalEpgSubnetResult> {
    return pulumi.output(args).apply((a: any) => getSchemaTemplateExternalEpgSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaTemplateExternalEpgSubnet.
 */
export interface GetSchemaTemplateExternalEpgSubnetOutputArgs {
    externalEpgName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
