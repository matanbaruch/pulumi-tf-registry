// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaTemplateContractFilter(args: GetSchemaTemplateContractFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaTemplateContractFilterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaTemplateContractFilter:getSchemaTemplateContractFilter", {
        "contractName": args.contractName,
        "filterName": args.filterName,
        "filterSchemaId": args.filterSchemaId,
        "filterTemplateName": args.filterTemplateName,
        "filterType": args.filterType,
        "id": args.id,
        "schemaId": args.schemaId,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaTemplateContractFilter.
 */
export interface GetSchemaTemplateContractFilterArgs {
    contractName: string;
    filterName: string;
    filterSchemaId?: string;
    filterTemplateName?: string;
    filterType: string;
    id?: string;
    schemaId: string;
    templateName: string;
}

/**
 * A collection of values returned by getSchemaTemplateContractFilter.
 */
export interface GetSchemaTemplateContractFilterResult {
    readonly action: string;
    readonly contractName: string;
    readonly directives: string[];
    readonly filterName: string;
    readonly filterSchemaId: string;
    readonly filterTemplateName: string;
    readonly filterType: string;
    readonly id: string;
    readonly priority: string;
    readonly schemaId: string;
    readonly templateName: string;
}
export function getSchemaTemplateContractFilterOutput(args: GetSchemaTemplateContractFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaTemplateContractFilterResult> {
    return pulumi.output(args).apply((a: any) => getSchemaTemplateContractFilter(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaTemplateContractFilter.
 */
export interface GetSchemaTemplateContractFilterOutputArgs {
    contractName: pulumi.Input<string>;
    filterName: pulumi.Input<string>;
    filterSchemaId?: pulumi.Input<string>;
    filterTemplateName?: pulumi.Input<string>;
    filterType: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
