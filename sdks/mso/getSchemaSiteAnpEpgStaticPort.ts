// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSchemaSiteAnpEpgStaticPort(args: GetSchemaSiteAnpEpgStaticPortArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaSiteAnpEpgStaticPortResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mso:index/getSchemaSiteAnpEpgStaticPort:getSchemaSiteAnpEpgStaticPort", {
        "anpName": args.anpName,
        "epgName": args.epgName,
        "fex": args.fex,
        "id": args.id,
        "leaf": args.leaf,
        "path": args.path,
        "pathType": args.pathType,
        "pod": args.pod,
        "schemaId": args.schemaId,
        "siteId": args.siteId,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaSiteAnpEpgStaticPort.
 */
export interface GetSchemaSiteAnpEpgStaticPortArgs {
    anpName: string;
    epgName: string;
    fex?: string;
    id?: string;
    leaf: string;
    path: string;
    pathType: string;
    pod: string;
    schemaId: string;
    siteId: string;
    templateName: string;
}

/**
 * A collection of values returned by getSchemaSiteAnpEpgStaticPort.
 */
export interface GetSchemaSiteAnpEpgStaticPortResult {
    readonly anpName: string;
    readonly deploymentImmediacy: string;
    readonly epgName: string;
    readonly fex: string;
    readonly id: string;
    readonly leaf: string;
    readonly microSegVlan: number;
    readonly mode: string;
    readonly path: string;
    readonly pathType: string;
    readonly pod: string;
    readonly schemaId: string;
    readonly siteId: string;
    readonly templateName: string;
    readonly vlan: number;
}
export function getSchemaSiteAnpEpgStaticPortOutput(args: GetSchemaSiteAnpEpgStaticPortOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaSiteAnpEpgStaticPortResult> {
    return pulumi.output(args).apply((a: any) => getSchemaSiteAnpEpgStaticPort(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaSiteAnpEpgStaticPort.
 */
export interface GetSchemaSiteAnpEpgStaticPortOutputArgs {
    anpName: pulumi.Input<string>;
    epgName: pulumi.Input<string>;
    fex?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    leaf: pulumi.Input<string>;
    path: pulumi.Input<string>;
    pathType: pulumi.Input<string>;
    pod: pulumi.Input<string>;
    schemaId: pulumi.Input<string>;
    siteId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
