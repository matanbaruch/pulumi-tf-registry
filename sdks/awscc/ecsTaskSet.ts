// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EcsTaskSet extends pulumi.CustomResource {
    /**
     * Get an existing EcsTaskSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EcsTaskSetState, opts?: pulumi.CustomResourceOptions): EcsTaskSet {
        return new EcsTaskSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ecsTaskSet:EcsTaskSet';

    /**
     * Returns true if the given object is an instance of EcsTaskSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EcsTaskSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EcsTaskSet.__pulumiType;
    }

    /**
     * The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
     */
    public readonly cluster!: pulumi.Output<string>;
    /**
     * An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a
     * service discovery registry, the tasks in this task set will have the ECS_TASK_SET_EXTERNAL_ID AWS Cloud Map attribute
     * set to the provided value.
     */
    public readonly externalId!: pulumi.Output<string>;
    /**
     * The launch type that new tasks in the task set will use. For more information, see
     * https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html in the Amazon Elastic Container Service
     * Developer Guide.
     */
    public readonly launchType!: pulumi.Output<string>;
    public readonly loadBalancers!: pulumi.Output<outputs.EcsTaskSetLoadBalancer[]>;
    /**
     * An object representing the network configuration for a task or service.
     */
    public readonly networkConfiguration!: pulumi.Output<outputs.EcsTaskSetNetworkConfiguration>;
    /**
     * The platform version that the tasks in the task set should use. A platform version is specified only for tasks using the
     * Fargate launch type. If one isn't specified, the LATEST platform version is used by default.
     */
    public readonly platformVersion!: pulumi.Output<string>;
    /**
     * A floating-point percentage of the desired number of tasks to place and keep running in the task set.
     */
    public readonly scale!: pulumi.Output<outputs.EcsTaskSetScale>;
    /**
     * The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * The details of the service discovery registries to assign to this task set. For more information, see
     * https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html.
     */
    public readonly serviceRegistries!: pulumi.Output<outputs.EcsTaskSetServiceRegistry[]>;
    public readonly tags!: pulumi.Output<outputs.EcsTaskSetTag[]>;
    /**
     * The short name or full Amazon Resource Name (ARN) of the task definition for the tasks in the task set to use.
     */
    public readonly taskDefinition!: pulumi.Output<string>;
    /**
     * The ID of the task set.
     */
    public /*out*/ readonly taskSetId!: pulumi.Output<string>;

    /**
     * Create a EcsTaskSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EcsTaskSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EcsTaskSetArgs | EcsTaskSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EcsTaskSetState | undefined;
            resourceInputs["cluster"] = state ? state.cluster : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["launchType"] = state ? state.launchType : undefined;
            resourceInputs["loadBalancers"] = state ? state.loadBalancers : undefined;
            resourceInputs["networkConfiguration"] = state ? state.networkConfiguration : undefined;
            resourceInputs["platformVersion"] = state ? state.platformVersion : undefined;
            resourceInputs["scale"] = state ? state.scale : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["serviceRegistries"] = state ? state.serviceRegistries : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taskDefinition"] = state ? state.taskDefinition : undefined;
            resourceInputs["taskSetId"] = state ? state.taskSetId : undefined;
        } else {
            const args = argsOrState as EcsTaskSetArgs | undefined;
            if ((!args || args.cluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cluster'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            if ((!args || args.taskDefinition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'taskDefinition'");
            }
            resourceInputs["cluster"] = args ? args.cluster : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["launchType"] = args ? args.launchType : undefined;
            resourceInputs["loadBalancers"] = args ? args.loadBalancers : undefined;
            resourceInputs["networkConfiguration"] = args ? args.networkConfiguration : undefined;
            resourceInputs["platformVersion"] = args ? args.platformVersion : undefined;
            resourceInputs["scale"] = args ? args.scale : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["serviceRegistries"] = args ? args.serviceRegistries : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taskDefinition"] = args ? args.taskDefinition : undefined;
            resourceInputs["taskSetId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EcsTaskSet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EcsTaskSet resources.
 */
export interface EcsTaskSetState {
    /**
     * The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
     */
    cluster?: pulumi.Input<string>;
    /**
     * An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a
     * service discovery registry, the tasks in this task set will have the ECS_TASK_SET_EXTERNAL_ID AWS Cloud Map attribute
     * set to the provided value.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The launch type that new tasks in the task set will use. For more information, see
     * https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html in the Amazon Elastic Container Service
     * Developer Guide.
     */
    launchType?: pulumi.Input<string>;
    loadBalancers?: pulumi.Input<pulumi.Input<inputs.EcsTaskSetLoadBalancer>[]>;
    /**
     * An object representing the network configuration for a task or service.
     */
    networkConfiguration?: pulumi.Input<inputs.EcsTaskSetNetworkConfiguration>;
    /**
     * The platform version that the tasks in the task set should use. A platform version is specified only for tasks using the
     * Fargate launch type. If one isn't specified, the LATEST platform version is used by default.
     */
    platformVersion?: pulumi.Input<string>;
    /**
     * A floating-point percentage of the desired number of tasks to place and keep running in the task set.
     */
    scale?: pulumi.Input<inputs.EcsTaskSetScale>;
    /**
     * The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
     */
    service?: pulumi.Input<string>;
    /**
     * The details of the service discovery registries to assign to this task set. For more information, see
     * https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html.
     */
    serviceRegistries?: pulumi.Input<pulumi.Input<inputs.EcsTaskSetServiceRegistry>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.EcsTaskSetTag>[]>;
    /**
     * The short name or full Amazon Resource Name (ARN) of the task definition for the tasks in the task set to use.
     */
    taskDefinition?: pulumi.Input<string>;
    /**
     * The ID of the task set.
     */
    taskSetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EcsTaskSet resource.
 */
export interface EcsTaskSetArgs {
    /**
     * The short name or full Amazon Resource Name (ARN) of the cluster that hosts the service to create the task set in.
     */
    cluster: pulumi.Input<string>;
    /**
     * An optional non-unique tag that identifies this task set in external systems. If the task set is associated with a
     * service discovery registry, the tasks in this task set will have the ECS_TASK_SET_EXTERNAL_ID AWS Cloud Map attribute
     * set to the provided value.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The launch type that new tasks in the task set will use. For more information, see
     * https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html in the Amazon Elastic Container Service
     * Developer Guide.
     */
    launchType?: pulumi.Input<string>;
    loadBalancers?: pulumi.Input<pulumi.Input<inputs.EcsTaskSetLoadBalancer>[]>;
    /**
     * An object representing the network configuration for a task or service.
     */
    networkConfiguration?: pulumi.Input<inputs.EcsTaskSetNetworkConfiguration>;
    /**
     * The platform version that the tasks in the task set should use. A platform version is specified only for tasks using the
     * Fargate launch type. If one isn't specified, the LATEST platform version is used by default.
     */
    platformVersion?: pulumi.Input<string>;
    /**
     * A floating-point percentage of the desired number of tasks to place and keep running in the task set.
     */
    scale?: pulumi.Input<inputs.EcsTaskSetScale>;
    /**
     * The short name or full Amazon Resource Name (ARN) of the service to create the task set in.
     */
    service: pulumi.Input<string>;
    /**
     * The details of the service discovery registries to assign to this task set. For more information, see
     * https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html.
     */
    serviceRegistries?: pulumi.Input<pulumi.Input<inputs.EcsTaskSetServiceRegistry>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.EcsTaskSetTag>[]>;
    /**
     * The short name or full Amazon Resource Name (ARN) of the task definition for the tasks in the task set to use.
     */
    taskDefinition: pulumi.Input<string>;
}
