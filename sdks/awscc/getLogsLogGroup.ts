// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogsLogGroup(args: GetLogsLogGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsLogGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLogsLogGroup:getLogsLogGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogsLogGroup.
 */
export interface GetLogsLogGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getLogsLogGroup.
 */
export interface GetLogsLogGroupResult {
    readonly arn: string;
    readonly dataProtectionPolicy: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly logGroupClass: string;
    readonly logGroupName: string;
    readonly retentionInDays: number;
    readonly tags: outputs.GetLogsLogGroupTag[];
}
export function getLogsLogGroupOutput(args: GetLogsLogGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogsLogGroupResult> {
    return pulumi.output(args).apply((a: any) => getLogsLogGroup(a, opts))
}

/**
 * A collection of arguments for invoking getLogsLogGroup.
 */
export interface GetLogsLogGroupOutputArgs {
    id: pulumi.Input<string>;
}
