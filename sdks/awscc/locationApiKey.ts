// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LocationApiKey extends pulumi.CustomResource {
    /**
     * Get an existing LocationApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocationApiKeyState, opts?: pulumi.CustomResourceOptions): LocationApiKey {
        return new LocationApiKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/locationApiKey:LocationApiKey';

    /**
     * Returns true if the given object is an instance of LocationApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationApiKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationApiKey.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    public readonly expireTime!: pulumi.Output<string>;
    public readonly forceDelete!: pulumi.Output<boolean>;
    public readonly forceUpdate!: pulumi.Output<boolean>;
    public /*out*/ readonly keyArn!: pulumi.Output<string>;
    public readonly keyName!: pulumi.Output<string>;
    public readonly noExpiry!: pulumi.Output<boolean>;
    public readonly restrictions!: pulumi.Output<outputs.LocationApiKeyRestrictions>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.LocationApiKeyTag[]>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a LocationApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationApiKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocationApiKeyArgs | LocationApiKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocationApiKeyState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["forceUpdate"] = state ? state.forceUpdate : undefined;
            resourceInputs["keyArn"] = state ? state.keyArn : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["noExpiry"] = state ? state.noExpiry : undefined;
            resourceInputs["restrictions"] = state ? state.restrictions : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as LocationApiKeyArgs | undefined;
            if ((!args || args.keyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyName'");
            }
            if ((!args || args.restrictions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restrictions'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expireTime"] = args ? args.expireTime : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["forceUpdate"] = args ? args.forceUpdate : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["noExpiry"] = args ? args.noExpiry : undefined;
            resourceInputs["restrictions"] = args ? args.restrictions : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["keyArn"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocationApiKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LocationApiKey resources.
 */
export interface LocationApiKeyState {
    arn?: pulumi.Input<string>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    expireTime?: pulumi.Input<string>;
    forceDelete?: pulumi.Input<boolean>;
    forceUpdate?: pulumi.Input<boolean>;
    keyArn?: pulumi.Input<string>;
    keyName?: pulumi.Input<string>;
    noExpiry?: pulumi.Input<boolean>;
    restrictions?: pulumi.Input<inputs.LocationApiKeyRestrictions>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LocationApiKeyTag>[]>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LocationApiKey resource.
 */
export interface LocationApiKeyArgs {
    description?: pulumi.Input<string>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    expireTime?: pulumi.Input<string>;
    forceDelete?: pulumi.Input<boolean>;
    forceUpdate?: pulumi.Input<boolean>;
    keyName: pulumi.Input<string>;
    noExpiry?: pulumi.Input<boolean>;
    restrictions: pulumi.Input<inputs.LocationApiKeyRestrictions>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LocationApiKeyTag>[]>;
}
