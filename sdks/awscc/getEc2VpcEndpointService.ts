// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2VpcEndpointService(args: GetEc2VpcEndpointServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2VpcEndpointServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2VpcEndpointService:getEc2VpcEndpointService", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2VpcEndpointService.
 */
export interface GetEc2VpcEndpointServiceArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2VpcEndpointService.
 */
export interface GetEc2VpcEndpointServiceResult {
    readonly acceptanceRequired: boolean;
    readonly contributorInsightsEnabled: boolean;
    readonly gatewayLoadBalancerArns: string[];
    readonly id: string;
    readonly networkLoadBalancerArns: string[];
    readonly payerResponsibility: string;
    readonly serviceId: string;
}
export function getEc2VpcEndpointServiceOutput(args: GetEc2VpcEndpointServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2VpcEndpointServiceResult> {
    return pulumi.output(args).apply((a: any) => getEc2VpcEndpointService(a, opts))
}

/**
 * A collection of arguments for invoking getEc2VpcEndpointService.
 */
export interface GetEc2VpcEndpointServiceOutputArgs {
    id: pulumi.Input<string>;
}
