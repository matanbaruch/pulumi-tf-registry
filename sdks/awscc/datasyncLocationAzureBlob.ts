// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatasyncLocationAzureBlob extends pulumi.CustomResource {
    /**
     * Get an existing DatasyncLocationAzureBlob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatasyncLocationAzureBlobState, opts?: pulumi.CustomResourceOptions): DatasyncLocationAzureBlob {
        return new DatasyncLocationAzureBlob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/datasyncLocationAzureBlob:DatasyncLocationAzureBlob';

    /**
     * Returns true if the given object is an instance of DatasyncLocationAzureBlob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatasyncLocationAzureBlob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasyncLocationAzureBlob.__pulumiType;
    }

    /**
     * The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
     */
    public readonly agentArns!: pulumi.Output<string[]>;
    /**
     * Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
     */
    public readonly azureAccessTier!: pulumi.Output<string>;
    /**
     * The specific authentication type that you want DataSync to use to access your Azure Blob Container.
     */
    public readonly azureBlobAuthenticationType!: pulumi.Output<string>;
    /**
     * The URL of the Azure Blob container that was described.
     */
    public readonly azureBlobContainerUrl!: pulumi.Output<string>;
    /**
     * Specifies the shared access signature (SAS) that DataSync uses to access your Azure Blob Storage container.
     */
    public readonly azureBlobSasConfiguration!: pulumi.Output<outputs.DatasyncLocationAzureBlobAzureBlobSasConfiguration>;
    /**
     * Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
     */
    public readonly azureBlobType!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
     */
    public /*out*/ readonly locationArn!: pulumi.Output<string>;
    /**
     * The URL of the Azure Blob Location that was described.
     */
    public /*out*/ readonly locationUri!: pulumi.Output<string>;
    /**
     * The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
     */
    public readonly subdirectory!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.DatasyncLocationAzureBlobTag[]>;

    /**
     * Create a DatasyncLocationAzureBlob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasyncLocationAzureBlobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatasyncLocationAzureBlobArgs | DatasyncLocationAzureBlobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatasyncLocationAzureBlobState | undefined;
            resourceInputs["agentArns"] = state ? state.agentArns : undefined;
            resourceInputs["azureAccessTier"] = state ? state.azureAccessTier : undefined;
            resourceInputs["azureBlobAuthenticationType"] = state ? state.azureBlobAuthenticationType : undefined;
            resourceInputs["azureBlobContainerUrl"] = state ? state.azureBlobContainerUrl : undefined;
            resourceInputs["azureBlobSasConfiguration"] = state ? state.azureBlobSasConfiguration : undefined;
            resourceInputs["azureBlobType"] = state ? state.azureBlobType : undefined;
            resourceInputs["locationArn"] = state ? state.locationArn : undefined;
            resourceInputs["locationUri"] = state ? state.locationUri : undefined;
            resourceInputs["subdirectory"] = state ? state.subdirectory : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DatasyncLocationAzureBlobArgs | undefined;
            if ((!args || args.agentArns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentArns'");
            }
            resourceInputs["agentArns"] = args ? args.agentArns : undefined;
            resourceInputs["azureAccessTier"] = args ? args.azureAccessTier : undefined;
            resourceInputs["azureBlobAuthenticationType"] = args ? args.azureBlobAuthenticationType : undefined;
            resourceInputs["azureBlobContainerUrl"] = args ? args.azureBlobContainerUrl : undefined;
            resourceInputs["azureBlobSasConfiguration"] = args ? args.azureBlobSasConfiguration : undefined;
            resourceInputs["azureBlobType"] = args ? args.azureBlobType : undefined;
            resourceInputs["subdirectory"] = args ? args.subdirectory : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["locationArn"] = undefined /*out*/;
            resourceInputs["locationUri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatasyncLocationAzureBlob.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatasyncLocationAzureBlob resources.
 */
export interface DatasyncLocationAzureBlobState {
    /**
     * The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
     */
    agentArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
     */
    azureAccessTier?: pulumi.Input<string>;
    /**
     * The specific authentication type that you want DataSync to use to access your Azure Blob Container.
     */
    azureBlobAuthenticationType?: pulumi.Input<string>;
    /**
     * The URL of the Azure Blob container that was described.
     */
    azureBlobContainerUrl?: pulumi.Input<string>;
    /**
     * Specifies the shared access signature (SAS) that DataSync uses to access your Azure Blob Storage container.
     */
    azureBlobSasConfiguration?: pulumi.Input<inputs.DatasyncLocationAzureBlobAzureBlobSasConfiguration>;
    /**
     * Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
     */
    azureBlobType?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the Azure Blob Location that is created.
     */
    locationArn?: pulumi.Input<string>;
    /**
     * The URL of the Azure Blob Location that was described.
     */
    locationUri?: pulumi.Input<string>;
    /**
     * The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DatasyncLocationAzureBlobTag>[]>;
}

/**
 * The set of arguments for constructing a DatasyncLocationAzureBlob resource.
 */
export interface DatasyncLocationAzureBlobArgs {
    /**
     * The Amazon Resource Names (ARNs) of agents to use for an Azure Blob Location.
     */
    agentArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies an access tier for the objects you're transferring into your Azure Blob Storage container.
     */
    azureAccessTier?: pulumi.Input<string>;
    /**
     * The specific authentication type that you want DataSync to use to access your Azure Blob Container.
     */
    azureBlobAuthenticationType?: pulumi.Input<string>;
    /**
     * The URL of the Azure Blob container that was described.
     */
    azureBlobContainerUrl?: pulumi.Input<string>;
    /**
     * Specifies the shared access signature (SAS) that DataSync uses to access your Azure Blob Storage container.
     */
    azureBlobSasConfiguration?: pulumi.Input<inputs.DatasyncLocationAzureBlobAzureBlobSasConfiguration>;
    /**
     * Specifies a blob type for the objects you're transferring into your Azure Blob Storage container.
     */
    azureBlobType?: pulumi.Input<string>;
    /**
     * The subdirectory in the Azure Blob Container that is used to read data from the Azure Blob Source Location.
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DatasyncLocationAzureBlobTag>[]>;
}
