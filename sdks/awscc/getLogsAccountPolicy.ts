// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogsAccountPolicy(args: GetLogsAccountPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsAccountPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLogsAccountPolicy:getLogsAccountPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogsAccountPolicy.
 */
export interface GetLogsAccountPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getLogsAccountPolicy.
 */
export interface GetLogsAccountPolicyResult {
    readonly accountId: string;
    readonly id: string;
    readonly policyDocument: string;
    readonly policyName: string;
    readonly policyType: string;
    readonly scope: string;
    readonly selectionCriteria: string;
}
export function getLogsAccountPolicyOutput(args: GetLogsAccountPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogsAccountPolicyResult> {
    return pulumi.output(args).apply((a: any) => getLogsAccountPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getLogsAccountPolicy.
 */
export interface GetLogsAccountPolicyOutputArgs {
    id: pulumi.Input<string>;
}
