// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkmanagerDevice(args: GetNetworkmanagerDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkmanagerDeviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getNetworkmanagerDevice:getNetworkmanagerDevice", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkmanagerDevice.
 */
export interface GetNetworkmanagerDeviceArgs {
    id: string;
}

/**
 * A collection of values returned by getNetworkmanagerDevice.
 */
export interface GetNetworkmanagerDeviceResult {
    readonly awsLocation: outputs.GetNetworkmanagerDeviceAwsLocation;
    readonly createdAt: string;
    readonly description: string;
    readonly deviceArn: string;
    readonly deviceId: string;
    readonly globalNetworkId: string;
    readonly id: string;
    readonly location: outputs.GetNetworkmanagerDeviceLocation;
    readonly model: string;
    readonly serialNumber: string;
    readonly siteId: string;
    readonly state: string;
    readonly tags: outputs.GetNetworkmanagerDeviceTag[];
    readonly type: string;
    readonly vendor: string;
}
export function getNetworkmanagerDeviceOutput(args: GetNetworkmanagerDeviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkmanagerDeviceResult> {
    return pulumi.output(args).apply((a: any) => getNetworkmanagerDevice(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkmanagerDevice.
 */
export interface GetNetworkmanagerDeviceOutputArgs {
    id: pulumi.Input<string>;
}
