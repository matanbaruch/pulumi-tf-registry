// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudformationStack(args: GetCloudformationStackArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationStackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudformationStack:getCloudformationStack", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationStack.
 */
export interface GetCloudformationStackArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudformationStack.
 */
export interface GetCloudformationStackResult {
    readonly capabilities: string[];
    readonly changeSetId: string;
    readonly creationTime: string;
    readonly description: string;
    readonly disableRollback: boolean;
    readonly enableTerminationProtection: boolean;
    readonly id: string;
    readonly lastUpdateTime: string;
    readonly notificationArNs: string[];
    readonly outputs: outputs.GetCloudformationStackOutput[];
    readonly parameters: {[key: string]: string};
    readonly parentId: string;
    readonly roleArn: string;
    readonly rootId: string;
    readonly stackId: string;
    readonly stackName: string;
    readonly stackPolicyBody: string;
    readonly stackPolicyUrl: string;
    readonly stackStatus: string;
    readonly stackStatusReason: string;
    readonly tags: outputs.GetCloudformationStackTag[];
    readonly templateBody: string;
    readonly templateUrl: string;
    readonly timeoutInMinutes: number;
}
export function getCloudformationStackOutput(args: GetCloudformationStackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationStackResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationStack(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationStack.
 */
export interface GetCloudformationStackOutputArgs {
    id: pulumi.Input<string>;
}
