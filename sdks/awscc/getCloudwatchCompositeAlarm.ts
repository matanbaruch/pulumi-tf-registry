// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudwatchCompositeAlarm(args: GetCloudwatchCompositeAlarmArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwatchCompositeAlarmResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudwatchCompositeAlarm:getCloudwatchCompositeAlarm", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudwatchCompositeAlarm.
 */
export interface GetCloudwatchCompositeAlarmArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudwatchCompositeAlarm.
 */
export interface GetCloudwatchCompositeAlarmResult {
    readonly actionsEnabled: boolean;
    readonly actionsSuppressor: string;
    readonly actionsSuppressorExtensionPeriod: number;
    readonly actionsSuppressorWaitPeriod: number;
    readonly alarmActions: string[];
    readonly alarmDescription: string;
    readonly alarmName: string;
    readonly alarmRule: string;
    readonly arn: string;
    readonly id: string;
    readonly insufficientDataActions: string[];
    readonly okActions: string[];
    readonly tags: outputs.GetCloudwatchCompositeAlarmTag[];
}
export function getCloudwatchCompositeAlarmOutput(args: GetCloudwatchCompositeAlarmOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwatchCompositeAlarmResult> {
    return pulumi.output(args).apply((a: any) => getCloudwatchCompositeAlarm(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwatchCompositeAlarm.
 */
export interface GetCloudwatchCompositeAlarmOutputArgs {
    id: pulumi.Input<string>;
}
