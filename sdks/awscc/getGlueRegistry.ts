// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlueRegistry(args: GetGlueRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetGlueRegistryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlueRegistry:getGlueRegistry", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlueRegistry.
 */
export interface GetGlueRegistryArgs {
    id: string;
}

/**
 * A collection of values returned by getGlueRegistry.
 */
export interface GetGlueRegistryResult {
    readonly arn: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly tags: outputs.GetGlueRegistryTag[];
}
export function getGlueRegistryOutput(args: GetGlueRegistryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlueRegistryResult> {
    return pulumi.output(args).apply((a: any) => getGlueRegistry(a, opts))
}

/**
 * A collection of arguments for invoking getGlueRegistry.
 */
export interface GetGlueRegistryOutputArgs {
    id: pulumi.Input<string>;
}
