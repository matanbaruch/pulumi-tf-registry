// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Wafv2LoggingConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing Wafv2LoggingConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Wafv2LoggingConfigurationState, opts?: pulumi.CustomResourceOptions): Wafv2LoggingConfiguration {
        return new Wafv2LoggingConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/wafv2LoggingConfiguration:Wafv2LoggingConfiguration';

    /**
     * Returns true if the given object is an instance of Wafv2LoggingConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Wafv2LoggingConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Wafv2LoggingConfiguration.__pulumiType;
    }

    /**
     * The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     */
    public readonly logDestinationConfigs!: pulumi.Output<string[]>;
    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule
     * action and on the web request labels that were applied by matching rules during web ACL evaluation.
     */
    public readonly loggingFilter!: pulumi.Output<outputs.Wafv2LoggingConfigurationLoggingFilter>;
    /**
     * Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy
     * configuration. If true, only Firewall Manager can modify or delete the configuration.
     */
    public /*out*/ readonly managedByFirewallManager!: pulumi.Output<boolean>;
    /**
     * The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER
     * field in the firehose will be xxx.
     */
    public readonly redactedFields!: pulumi.Output<outputs.Wafv2LoggingConfigurationRedactedField[]>;
    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     */
    public readonly resourceArn!: pulumi.Output<string>;

    /**
     * Create a Wafv2LoggingConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Wafv2LoggingConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Wafv2LoggingConfigurationArgs | Wafv2LoggingConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Wafv2LoggingConfigurationState | undefined;
            resourceInputs["logDestinationConfigs"] = state ? state.logDestinationConfigs : undefined;
            resourceInputs["loggingFilter"] = state ? state.loggingFilter : undefined;
            resourceInputs["managedByFirewallManager"] = state ? state.managedByFirewallManager : undefined;
            resourceInputs["redactedFields"] = state ? state.redactedFields : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
        } else {
            const args = argsOrState as Wafv2LoggingConfigurationArgs | undefined;
            if ((!args || args.logDestinationConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logDestinationConfigs'");
            }
            if ((!args || args.resourceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            resourceInputs["logDestinationConfigs"] = args ? args.logDestinationConfigs : undefined;
            resourceInputs["loggingFilter"] = args ? args.loggingFilter : undefined;
            resourceInputs["redactedFields"] = args ? args.redactedFields : undefined;
            resourceInputs["resourceArn"] = args ? args.resourceArn : undefined;
            resourceInputs["managedByFirewallManager"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Wafv2LoggingConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Wafv2LoggingConfiguration resources.
 */
export interface Wafv2LoggingConfigurationState {
    /**
     * The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     */
    logDestinationConfigs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule
     * action and on the web request labels that were applied by matching rules during web ACL evaluation.
     */
    loggingFilter?: pulumi.Input<inputs.Wafv2LoggingConfigurationLoggingFilter>;
    /**
     * Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy
     * configuration. If true, only Firewall Manager can modify or delete the configuration.
     */
    managedByFirewallManager?: pulumi.Input<boolean>;
    /**
     * The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER
     * field in the firehose will be xxx.
     */
    redactedFields?: pulumi.Input<pulumi.Input<inputs.Wafv2LoggingConfigurationRedactedField>[]>;
    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     */
    resourceArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Wafv2LoggingConfiguration resource.
 */
export interface Wafv2LoggingConfigurationArgs {
    /**
     * The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
     */
    logDestinationConfigs: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule
     * action and on the web request labels that were applied by matching rules during web ACL evaluation.
     */
    loggingFilter?: pulumi.Input<inputs.Wafv2LoggingConfigurationLoggingFilter>;
    /**
     * The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER
     * field in the firehose will be xxx.
     */
    redactedFields?: pulumi.Input<pulumi.Input<inputs.Wafv2LoggingConfigurationRedactedField>[]>;
    /**
     * The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
     */
    resourceArn: pulumi.Input<string>;
}
