// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlueDatabase(args: GetGlueDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetGlueDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlueDatabase:getGlueDatabase", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlueDatabase.
 */
export interface GetGlueDatabaseArgs {
    id: string;
}

/**
 * A collection of values returned by getGlueDatabase.
 */
export interface GetGlueDatabaseResult {
    readonly catalogId: string;
    readonly databaseInput: outputs.GetGlueDatabaseDatabaseInput;
    readonly databaseName: string;
    readonly id: string;
}
export function getGlueDatabaseOutput(args: GetGlueDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlueDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getGlueDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getGlueDatabase.
 */
export interface GetGlueDatabaseOutputArgs {
    id: pulumi.Input<string>;
}
