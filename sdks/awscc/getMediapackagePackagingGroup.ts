// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediapackagePackagingGroup(args: GetMediapackagePackagingGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetMediapackagePackagingGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediapackagePackagingGroup:getMediapackagePackagingGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediapackagePackagingGroup.
 */
export interface GetMediapackagePackagingGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getMediapackagePackagingGroup.
 */
export interface GetMediapackagePackagingGroupResult {
    readonly arn: string;
    readonly authorization: outputs.GetMediapackagePackagingGroupAuthorization;
    readonly domainName: string;
    readonly egressAccessLogs: outputs.GetMediapackagePackagingGroupEgressAccessLogs;
    readonly id: string;
    readonly packagingGroupId: string;
    readonly tags: outputs.GetMediapackagePackagingGroupTag[];
}
export function getMediapackagePackagingGroupOutput(args: GetMediapackagePackagingGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediapackagePackagingGroupResult> {
    return pulumi.output(args).apply((a: any) => getMediapackagePackagingGroup(a, opts))
}

/**
 * A collection of arguments for invoking getMediapackagePackagingGroup.
 */
export interface GetMediapackagePackagingGroupOutputArgs {
    id: pulumi.Input<string>;
}
