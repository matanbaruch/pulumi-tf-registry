// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProtonEnvironmentAccountConnection(args: GetProtonEnvironmentAccountConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetProtonEnvironmentAccountConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getProtonEnvironmentAccountConnection:getProtonEnvironmentAccountConnection", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProtonEnvironmentAccountConnection.
 */
export interface GetProtonEnvironmentAccountConnectionArgs {
    id: string;
}

/**
 * A collection of values returned by getProtonEnvironmentAccountConnection.
 */
export interface GetProtonEnvironmentAccountConnectionResult {
    readonly arn: string;
    readonly codebuildRoleArn: string;
    readonly componentRoleArn: string;
    readonly environmentAccountConnectionId: string;
    readonly environmentAccountId: string;
    readonly environmentName: string;
    readonly id: string;
    readonly managementAccountId: string;
    readonly roleArn: string;
    readonly status: string;
    readonly tags: outputs.GetProtonEnvironmentAccountConnectionTag[];
}
export function getProtonEnvironmentAccountConnectionOutput(args: GetProtonEnvironmentAccountConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProtonEnvironmentAccountConnectionResult> {
    return pulumi.output(args).apply((a: any) => getProtonEnvironmentAccountConnection(a, opts))
}

/**
 * A collection of arguments for invoking getProtonEnvironmentAccountConnection.
 */
export interface GetProtonEnvironmentAccountConnectionOutputArgs {
    id: pulumi.Input<string>;
}
