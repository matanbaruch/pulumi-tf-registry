// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEntityresolutionPolicyStatement(args: GetEntityresolutionPolicyStatementArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityresolutionPolicyStatementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEntityresolutionPolicyStatement:getEntityresolutionPolicyStatement", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEntityresolutionPolicyStatement.
 */
export interface GetEntityresolutionPolicyStatementArgs {
    id: string;
}

/**
 * A collection of values returned by getEntityresolutionPolicyStatement.
 */
export interface GetEntityresolutionPolicyStatementResult {
    readonly actions: string[];
    readonly arn: string;
    readonly condition: string;
    readonly effect: string;
    readonly id: string;
    readonly principals: string[];
    readonly statementId: string;
}
export function getEntityresolutionPolicyStatementOutput(args: GetEntityresolutionPolicyStatementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityresolutionPolicyStatementResult> {
    return pulumi.output(args).apply((a: any) => getEntityresolutionPolicyStatement(a, opts))
}

/**
 * A collection of arguments for invoking getEntityresolutionPolicyStatement.
 */
export interface GetEntityresolutionPolicyStatementOutputArgs {
    id: pulumi.Input<string>;
}
