// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IvsStreamKey extends pulumi.CustomResource {
    /**
     * Get an existing IvsStreamKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IvsStreamKeyState, opts?: pulumi.CustomResourceOptions): IvsStreamKey {
        return new IvsStreamKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ivsStreamKey:IvsStreamKey';

    /**
     * Returns true if the given object is an instance of IvsStreamKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IvsStreamKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IvsStreamKey.__pulumiType;
    }

    /**
     * Stream Key ARN is automatically generated on creation and assigned as the unique identifier.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Channel ARN for the stream.
     */
    public readonly channelArn!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    public readonly tags!: pulumi.Output<outputs.IvsStreamKeyTag[]>;
    /**
     * Stream-key value.
     */
    public /*out*/ readonly value!: pulumi.Output<string>;

    /**
     * Create a IvsStreamKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IvsStreamKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IvsStreamKeyArgs | IvsStreamKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IvsStreamKeyState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["channelArn"] = state ? state.channelArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as IvsStreamKeyArgs | undefined;
            if ((!args || args.channelArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelArn'");
            }
            resourceInputs["channelArn"] = args ? args.channelArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["value"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IvsStreamKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IvsStreamKey resources.
 */
export interface IvsStreamKeyState {
    /**
     * Stream Key ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn?: pulumi.Input<string>;
    /**
     * Channel ARN for the stream.
     */
    channelArn?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IvsStreamKeyTag>[]>;
    /**
     * Stream-key value.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IvsStreamKey resource.
 */
export interface IvsStreamKeyArgs {
    /**
     * Channel ARN for the stream.
     */
    channelArn: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IvsStreamKeyTag>[]>;
}
