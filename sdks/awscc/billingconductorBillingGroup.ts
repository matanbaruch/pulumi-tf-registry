// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BillingconductorBillingGroup extends pulumi.CustomResource {
    /**
     * Get an existing BillingconductorBillingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BillingconductorBillingGroupState, opts?: pulumi.CustomResourceOptions): BillingconductorBillingGroup {
        return new BillingconductorBillingGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/billingconductorBillingGroup:BillingconductorBillingGroup';

    /**
     * Returns true if the given object is an instance of BillingconductorBillingGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BillingconductorBillingGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BillingconductorBillingGroup.__pulumiType;
    }

    public readonly accountGrouping!: pulumi.Output<outputs.BillingconductorBillingGroupAccountGrouping>;
    /**
     * Billing Group ARN
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly computationPreference!: pulumi.Output<outputs.BillingconductorBillingGroupComputationPreference>;
    /**
     * Creation timestamp in UNIX epoch time format
     */
    public /*out*/ readonly creationTime!: pulumi.Output<number>;
    public readonly description!: pulumi.Output<string>;
    /**
     * Latest modified timestamp in UNIX epoch time format
     */
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    /**
     * This account will act as a virtual payer account of the billing group
     */
    public readonly primaryAccountId!: pulumi.Output<string>;
    /**
     * Number of accounts in the billing group
     */
    public /*out*/ readonly size!: pulumi.Output<number>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly statusReason!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.BillingconductorBillingGroupTag[]>;

    /**
     * Create a BillingconductorBillingGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BillingconductorBillingGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BillingconductorBillingGroupArgs | BillingconductorBillingGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BillingconductorBillingGroupState | undefined;
            resourceInputs["accountGrouping"] = state ? state.accountGrouping : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["computationPreference"] = state ? state.computationPreference : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastModifiedTime"] = state ? state.lastModifiedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primaryAccountId"] = state ? state.primaryAccountId : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusReason"] = state ? state.statusReason : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as BillingconductorBillingGroupArgs | undefined;
            if ((!args || args.accountGrouping === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountGrouping'");
            }
            if ((!args || args.computationPreference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computationPreference'");
            }
            if ((!args || args.primaryAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryAccountId'");
            }
            resourceInputs["accountGrouping"] = args ? args.accountGrouping : undefined;
            resourceInputs["computationPreference"] = args ? args.computationPreference : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primaryAccountId"] = args ? args.primaryAccountId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BillingconductorBillingGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BillingconductorBillingGroup resources.
 */
export interface BillingconductorBillingGroupState {
    accountGrouping?: pulumi.Input<inputs.BillingconductorBillingGroupAccountGrouping>;
    /**
     * Billing Group ARN
     */
    arn?: pulumi.Input<string>;
    computationPreference?: pulumi.Input<inputs.BillingconductorBillingGroupComputationPreference>;
    /**
     * Creation timestamp in UNIX epoch time format
     */
    creationTime?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    /**
     * Latest modified timestamp in UNIX epoch time format
     */
    lastModifiedTime?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * This account will act as a virtual payer account of the billing group
     */
    primaryAccountId?: pulumi.Input<string>;
    /**
     * Number of accounts in the billing group
     */
    size?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    statusReason?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.BillingconductorBillingGroupTag>[]>;
}

/**
 * The set of arguments for constructing a BillingconductorBillingGroup resource.
 */
export interface BillingconductorBillingGroupArgs {
    accountGrouping: pulumi.Input<inputs.BillingconductorBillingGroupAccountGrouping>;
    computationPreference: pulumi.Input<inputs.BillingconductorBillingGroupComputationPreference>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * This account will act as a virtual payer account of the billing group
     */
    primaryAccountId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.BillingconductorBillingGroupTag>[]>;
}
