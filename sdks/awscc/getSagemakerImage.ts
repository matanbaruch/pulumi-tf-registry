// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSagemakerImage(args: GetSagemakerImageArgs, opts?: pulumi.InvokeOptions): Promise<GetSagemakerImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSagemakerImage:getSagemakerImage", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSagemakerImage.
 */
export interface GetSagemakerImageArgs {
    id: string;
}

/**
 * A collection of values returned by getSagemakerImage.
 */
export interface GetSagemakerImageResult {
    readonly id: string;
    readonly imageArn: string;
    readonly imageDescription: string;
    readonly imageDisplayName: string;
    readonly imageName: string;
    readonly imageRoleArn: string;
    readonly tags: outputs.GetSagemakerImageTag[];
}
export function getSagemakerImageOutput(args: GetSagemakerImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSagemakerImageResult> {
    return pulumi.output(args).apply((a: any) => getSagemakerImage(a, opts))
}

/**
 * A collection of arguments for invoking getSagemakerImage.
 */
export interface GetSagemakerImageOutputArgs {
    id: pulumi.Input<string>;
}
