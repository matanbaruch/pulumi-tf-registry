// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticbeanstalkEnvironment(args: GetElasticbeanstalkEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticbeanstalkEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getElasticbeanstalkEnvironment:getElasticbeanstalkEnvironment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticbeanstalkEnvironment.
 */
export interface GetElasticbeanstalkEnvironmentArgs {
    id: string;
}

/**
 * A collection of values returned by getElasticbeanstalkEnvironment.
 */
export interface GetElasticbeanstalkEnvironmentResult {
    readonly applicationName: string;
    readonly cnamePrefix: string;
    readonly description: string;
    readonly endpointUrl: string;
    readonly environmentName: string;
    readonly id: string;
    readonly operationsRole: string;
    readonly optionSettings: outputs.GetElasticbeanstalkEnvironmentOptionSetting[];
    readonly platformArn: string;
    readonly solutionStackName: string;
    readonly tags: outputs.GetElasticbeanstalkEnvironmentTag[];
    readonly templateName: string;
    readonly tier: outputs.GetElasticbeanstalkEnvironmentTier;
    readonly versionLabel: string;
}
export function getElasticbeanstalkEnvironmentOutput(args: GetElasticbeanstalkEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticbeanstalkEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getElasticbeanstalkEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking getElasticbeanstalkEnvironment.
 */
export interface GetElasticbeanstalkEnvironmentOutputArgs {
    id: pulumi.Input<string>;
}
