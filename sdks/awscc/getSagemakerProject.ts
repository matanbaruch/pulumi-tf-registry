// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSagemakerProject(args: GetSagemakerProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetSagemakerProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSagemakerProject:getSagemakerProject", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSagemakerProject.
 */
export interface GetSagemakerProjectArgs {
    id: string;
}

/**
 * A collection of values returned by getSagemakerProject.
 */
export interface GetSagemakerProjectResult {
    readonly creationTime: string;
    readonly id: string;
    readonly projectArn: string;
    readonly projectDescription: string;
    readonly projectId: string;
    readonly projectName: string;
    readonly projectStatus: string;
    readonly serviceCatalogProvisionedProductDetails: outputs.GetSagemakerProjectServiceCatalogProvisionedProductDetails;
    readonly serviceCatalogProvisioningDetails: outputs.GetSagemakerProjectServiceCatalogProvisioningDetails;
    readonly tags: outputs.GetSagemakerProjectTag[];
}
export function getSagemakerProjectOutput(args: GetSagemakerProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSagemakerProjectResult> {
    return pulumi.output(args).apply((a: any) => getSagemakerProject(a, opts))
}

/**
 * A collection of arguments for invoking getSagemakerProject.
 */
export interface GetSagemakerProjectOutputArgs {
    id: pulumi.Input<string>;
}
