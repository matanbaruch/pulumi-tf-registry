// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSagemakerUserProfile(args: GetSagemakerUserProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSagemakerUserProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSagemakerUserProfile:getSagemakerUserProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSagemakerUserProfile.
 */
export interface GetSagemakerUserProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getSagemakerUserProfile.
 */
export interface GetSagemakerUserProfileResult {
    readonly domainId: string;
    readonly id: string;
    readonly singleSignOnUserIdentifier: string;
    readonly singleSignOnUserValue: string;
    readonly tags: outputs.GetSagemakerUserProfileTag[];
    readonly userProfileArn: string;
    readonly userProfileName: string;
    readonly userSettings: outputs.GetSagemakerUserProfileUserSettings;
}
export function getSagemakerUserProfileOutput(args: GetSagemakerUserProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSagemakerUserProfileResult> {
    return pulumi.output(args).apply((a: any) => getSagemakerUserProfile(a, opts))
}

/**
 * A collection of arguments for invoking getSagemakerUserProfile.
 */
export interface GetSagemakerUserProfileOutputArgs {
    id: pulumi.Input<string>;
}
