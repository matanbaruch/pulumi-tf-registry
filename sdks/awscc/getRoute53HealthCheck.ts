// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoute53HealthCheck(args: GetRoute53HealthCheckArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53HealthCheckResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRoute53HealthCheck:getRoute53HealthCheck", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53HealthCheck.
 */
export interface GetRoute53HealthCheckArgs {
    id: string;
}

/**
 * A collection of values returned by getRoute53HealthCheck.
 */
export interface GetRoute53HealthCheckResult {
    readonly healthCheckConfig: outputs.GetRoute53HealthCheckHealthCheckConfig;
    readonly healthCheckId: string;
    readonly healthCheckTags: outputs.GetRoute53HealthCheckHealthCheckTag[];
    readonly id: string;
}
export function getRoute53HealthCheckOutput(args: GetRoute53HealthCheckOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53HealthCheckResult> {
    return pulumi.output(args).apply((a: any) => getRoute53HealthCheck(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53HealthCheck.
 */
export interface GetRoute53HealthCheckOutputArgs {
    id: pulumi.Input<string>;
}
