// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediaconnectFlow(args: GetMediaconnectFlowArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaconnectFlowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediaconnectFlow:getMediaconnectFlow", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediaconnectFlow.
 */
export interface GetMediaconnectFlowArgs {
    id: string;
}

/**
 * A collection of values returned by getMediaconnectFlow.
 */
export interface GetMediaconnectFlowResult {
    readonly availabilityZone: string;
    readonly egressIp: string;
    readonly flowArn: string;
    readonly flowAvailabilityZone: string;
    readonly id: string;
    readonly maintenance: outputs.GetMediaconnectFlowMaintenance;
    readonly mediaStreams: outputs.GetMediaconnectFlowMediaStream[];
    readonly name: string;
    readonly source: outputs.GetMediaconnectFlowSource;
    readonly sourceFailoverConfig: outputs.GetMediaconnectFlowSourceFailoverConfig;
    readonly vpcInterfaces: outputs.GetMediaconnectFlowVpcInterface[];
}
export function getMediaconnectFlowOutput(args: GetMediaconnectFlowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaconnectFlowResult> {
    return pulumi.output(args).apply((a: any) => getMediaconnectFlow(a, opts))
}

/**
 * A collection of arguments for invoking getMediaconnectFlow.
 */
export interface GetMediaconnectFlowOutputArgs {
    id: pulumi.Input<string>;
}
