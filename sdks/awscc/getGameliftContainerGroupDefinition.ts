// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGameliftContainerGroupDefinition(args: GetGameliftContainerGroupDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetGameliftContainerGroupDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGameliftContainerGroupDefinition:getGameliftContainerGroupDefinition", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGameliftContainerGroupDefinition.
 */
export interface GetGameliftContainerGroupDefinitionArgs {
    id: string;
}

/**
 * A collection of values returned by getGameliftContainerGroupDefinition.
 */
export interface GetGameliftContainerGroupDefinitionResult {
    readonly containerDefinitions: outputs.GetGameliftContainerGroupDefinitionContainerDefinition[];
    readonly containerGroupDefinitionArn: string;
    readonly creationTime: string;
    readonly id: string;
    readonly name: string;
    readonly operatingSystem: string;
    readonly schedulingStrategy: string;
    readonly tags: outputs.GetGameliftContainerGroupDefinitionTag[];
    readonly totalCpuLimit: number;
    readonly totalMemoryLimit: number;
}
export function getGameliftContainerGroupDefinitionOutput(args: GetGameliftContainerGroupDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGameliftContainerGroupDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getGameliftContainerGroupDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getGameliftContainerGroupDefinition.
 */
export interface GetGameliftContainerGroupDefinitionOutputArgs {
    id: pulumi.Input<string>;
}
