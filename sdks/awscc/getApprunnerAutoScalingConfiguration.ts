// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApprunnerAutoScalingConfiguration(args: GetApprunnerAutoScalingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetApprunnerAutoScalingConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApprunnerAutoScalingConfiguration:getApprunnerAutoScalingConfiguration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApprunnerAutoScalingConfiguration.
 */
export interface GetApprunnerAutoScalingConfigurationArgs {
    id: string;
}

/**
 * A collection of values returned by getApprunnerAutoScalingConfiguration.
 */
export interface GetApprunnerAutoScalingConfigurationResult {
    readonly autoScalingConfigurationArn: string;
    readonly autoScalingConfigurationName: string;
    readonly autoScalingConfigurationRevision: number;
    readonly id: string;
    readonly latest: boolean;
    readonly maxConcurrency: number;
    readonly maxSize: number;
    readonly minSize: number;
    readonly tags: outputs.GetApprunnerAutoScalingConfigurationTag[];
}
export function getApprunnerAutoScalingConfigurationOutput(args: GetApprunnerAutoScalingConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApprunnerAutoScalingConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getApprunnerAutoScalingConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getApprunnerAutoScalingConfiguration.
 */
export interface GetApprunnerAutoScalingConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
