// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventschemasSchema(args: GetEventschemasSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetEventschemasSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEventschemasSchema:getEventschemasSchema", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventschemasSchema.
 */
export interface GetEventschemasSchemaArgs {
    id: string;
}

/**
 * A collection of values returned by getEventschemasSchema.
 */
export interface GetEventschemasSchemaResult {
    readonly content: string;
    readonly description: string;
    readonly id: string;
    readonly lastModified: string;
    readonly registryName: string;
    readonly schemaArn: string;
    readonly schemaName: string;
    readonly schemaVersion: string;
    readonly tags: outputs.GetEventschemasSchemaTag[];
    readonly type: string;
    readonly versionCreatedDate: string;
}
export function getEventschemasSchemaOutput(args: GetEventschemasSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventschemasSchemaResult> {
    return pulumi.output(args).apply((a: any) => getEventschemasSchema(a, opts))
}

/**
 * A collection of arguments for invoking getEventschemasSchema.
 */
export interface GetEventschemasSchemaOutputArgs {
    id: pulumi.Input<string>;
}
