// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNimblestudioStudio(args: GetNimblestudioStudioArgs, opts?: pulumi.InvokeOptions): Promise<GetNimblestudioStudioResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getNimblestudioStudio:getNimblestudioStudio", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNimblestudioStudio.
 */
export interface GetNimblestudioStudioArgs {
    id: string;
}

/**
 * A collection of values returned by getNimblestudioStudio.
 */
export interface GetNimblestudioStudioResult {
    readonly adminRoleArn: string;
    readonly displayName: string;
    readonly homeRegion: string;
    readonly id: string;
    readonly ssoClientId: string;
    readonly studioEncryptionConfiguration: outputs.GetNimblestudioStudioStudioEncryptionConfiguration;
    readonly studioId: string;
    readonly studioName: string;
    readonly studioUrl: string;
    readonly tags: {[key: string]: string};
    readonly userRoleArn: string;
}
export function getNimblestudioStudioOutput(args: GetNimblestudioStudioOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNimblestudioStudioResult> {
    return pulumi.output(args).apply((a: any) => getNimblestudioStudio(a, opts))
}

/**
 * A collection of arguments for invoking getNimblestudioStudio.
 */
export interface GetNimblestudioStudioOutputArgs {
    id: pulumi.Input<string>;
}
