// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFsxDataRepositoryAssociation(args: GetFsxDataRepositoryAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetFsxDataRepositoryAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getFsxDataRepositoryAssociation:getFsxDataRepositoryAssociation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFsxDataRepositoryAssociation.
 */
export interface GetFsxDataRepositoryAssociationArgs {
    id: string;
}

/**
 * A collection of values returned by getFsxDataRepositoryAssociation.
 */
export interface GetFsxDataRepositoryAssociationResult {
    readonly associationId: string;
    readonly batchImportMetaDataOnCreate: boolean;
    readonly dataRepositoryPath: string;
    readonly fileSystemId: string;
    readonly fileSystemPath: string;
    readonly id: string;
    readonly importedFileChunkSize: number;
    readonly resourceArn: string;
    readonly s3: outputs.GetFsxDataRepositoryAssociationS3;
    readonly tags: outputs.GetFsxDataRepositoryAssociationTag[];
}
export function getFsxDataRepositoryAssociationOutput(args: GetFsxDataRepositoryAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFsxDataRepositoryAssociationResult> {
    return pulumi.output(args).apply((a: any) => getFsxDataRepositoryAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getFsxDataRepositoryAssociation.
 */
export interface GetFsxDataRepositoryAssociationOutputArgs {
    id: pulumi.Input<string>;
}
