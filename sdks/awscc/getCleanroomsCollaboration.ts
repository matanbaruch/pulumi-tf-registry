// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCleanroomsCollaboration(args: GetCleanroomsCollaborationArgs, opts?: pulumi.InvokeOptions): Promise<GetCleanroomsCollaborationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCleanroomsCollaboration:getCleanroomsCollaboration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCleanroomsCollaboration.
 */
export interface GetCleanroomsCollaborationArgs {
    id: string;
}

/**
 * A collection of values returned by getCleanroomsCollaboration.
 */
export interface GetCleanroomsCollaborationResult {
    readonly arn: string;
    readonly collaborationIdentifier: string;
    readonly creatorDisplayName: string;
    readonly creatorMemberAbilities: string[];
    readonly creatorPaymentConfiguration: outputs.GetCleanroomsCollaborationCreatorPaymentConfiguration;
    readonly dataEncryptionMetadata: outputs.GetCleanroomsCollaborationDataEncryptionMetadata;
    readonly description: string;
    readonly id: string;
    readonly members: outputs.GetCleanroomsCollaborationMember[];
    readonly name: string;
    readonly queryLogStatus: string;
    readonly tags: outputs.GetCleanroomsCollaborationTag[];
}
export function getCleanroomsCollaborationOutput(args: GetCleanroomsCollaborationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCleanroomsCollaborationResult> {
    return pulumi.output(args).apply((a: any) => getCleanroomsCollaboration(a, opts))
}

/**
 * A collection of arguments for invoking getCleanroomsCollaboration.
 */
export interface GetCleanroomsCollaborationOutputArgs {
    id: pulumi.Input<string>;
}
