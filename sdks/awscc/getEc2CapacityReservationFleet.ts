// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2CapacityReservationFleet(args: GetEc2CapacityReservationFleetArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2CapacityReservationFleetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2CapacityReservationFleet:getEc2CapacityReservationFleet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2CapacityReservationFleet.
 */
export interface GetEc2CapacityReservationFleetArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2CapacityReservationFleet.
 */
export interface GetEc2CapacityReservationFleetResult {
    readonly allocationStrategy: string;
    readonly capacityReservationFleetId: string;
    readonly endDate: string;
    readonly id: string;
    readonly instanceMatchCriteria: string;
    readonly instanceTypeSpecifications: outputs.GetEc2CapacityReservationFleetInstanceTypeSpecification[];
    readonly noRemoveEndDate: boolean;
    readonly removeEndDate: boolean;
    readonly tagSpecifications: outputs.GetEc2CapacityReservationFleetTagSpecification[];
    readonly tenancy: string;
    readonly totalTargetCapacity: number;
}
export function getEc2CapacityReservationFleetOutput(args: GetEc2CapacityReservationFleetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2CapacityReservationFleetResult> {
    return pulumi.output(args).apply((a: any) => getEc2CapacityReservationFleet(a, opts))
}

/**
 * A collection of arguments for invoking getEc2CapacityReservationFleet.
 */
export interface GetEc2CapacityReservationFleetOutputArgs {
    id: pulumi.Input<string>;
}
