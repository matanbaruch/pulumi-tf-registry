// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWisdomKnowledgeBase(args: GetWisdomKnowledgeBaseArgs, opts?: pulumi.InvokeOptions): Promise<GetWisdomKnowledgeBaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWisdomKnowledgeBase:getWisdomKnowledgeBase", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWisdomKnowledgeBase.
 */
export interface GetWisdomKnowledgeBaseArgs {
    id: string;
}

/**
 * A collection of values returned by getWisdomKnowledgeBase.
 */
export interface GetWisdomKnowledgeBaseResult {
    readonly description: string;
    readonly id: string;
    readonly knowledgeBaseArn: string;
    readonly knowledgeBaseId: string;
    readonly knowledgeBaseType: string;
    readonly name: string;
    readonly renderingConfiguration: outputs.GetWisdomKnowledgeBaseRenderingConfiguration;
    readonly serverSideEncryptionConfiguration: outputs.GetWisdomKnowledgeBaseServerSideEncryptionConfiguration;
    readonly sourceConfiguration: outputs.GetWisdomKnowledgeBaseSourceConfiguration;
    readonly tags: outputs.GetWisdomKnowledgeBaseTag[];
}
export function getWisdomKnowledgeBaseOutput(args: GetWisdomKnowledgeBaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWisdomKnowledgeBaseResult> {
    return pulumi.output(args).apply((a: any) => getWisdomKnowledgeBase(a, opts))
}

/**
 * A collection of arguments for invoking getWisdomKnowledgeBase.
 */
export interface GetWisdomKnowledgeBaseOutputArgs {
    id: pulumi.Input<string>;
}
