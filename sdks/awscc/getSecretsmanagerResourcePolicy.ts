// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecretsmanagerResourcePolicy(args: GetSecretsmanagerResourcePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsmanagerResourcePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSecretsmanagerResourcePolicy:getSecretsmanagerResourcePolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecretsmanagerResourcePolicy.
 */
export interface GetSecretsmanagerResourcePolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getSecretsmanagerResourcePolicy.
 */
export interface GetSecretsmanagerResourcePolicyResult {
    readonly blockPublicPolicy: boolean;
    readonly id: string;
    readonly resourcePolicy: string;
    readonly resourcePolicyId: string;
    readonly secretId: string;
}
export function getSecretsmanagerResourcePolicyOutput(args: GetSecretsmanagerResourcePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsmanagerResourcePolicyResult> {
    return pulumi.output(args).apply((a: any) => getSecretsmanagerResourcePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSecretsmanagerResourcePolicy.
 */
export interface GetSecretsmanagerResourcePolicyOutputArgs {
    id: pulumi.Input<string>;
}
