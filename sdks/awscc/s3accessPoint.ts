// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class S3AccessPoint extends pulumi.CustomResource {
    /**
     * Get an existing S3AccessPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3AccessPointState, opts?: pulumi.CustomResourceOptions): S3AccessPoint {
        return new S3AccessPoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/s3AccessPoint:S3AccessPoint';

    /**
     * Returns true if the given object is an instance of S3AccessPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3AccessPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3AccessPoint.__pulumiType;
    }

    /**
     * The alias of this Access Point. This alias can be used for compatibility purposes with other AWS services and
     * third-party applications.
     */
    public /*out*/ readonly alias!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the specified accesspoint.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the bucket that you want to associate this Access Point with.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * The AWS account ID associated with the S3 bucket associated with this access point.
     */
    public readonly bucketAccountId!: pulumi.Output<string>;
    /**
     * The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID
     * and uses that ID for the access point name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this
     * Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise,
     * NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and
     * bucket access policies.
     */
    public /*out*/ readonly networkOrigin!: pulumi.Output<string>;
    /**
     * The Access Point Policy you want to apply to this access point.
     */
    public readonly policy!: pulumi.Output<string>;
    /**
     * The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration
     * options in any combination. For more information about when Amazon S3 considers a bucket or object public, see
     * https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status
     * 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
     */
    public readonly publicAccessBlockConfiguration!: pulumi.Output<outputs.S3AccessPointPublicAccessBlockConfiguration>;
    /**
     * If you include this field, Amazon S3 restricts access to this Access Point to requests from the specified Virtual
     * Private Cloud (VPC).
     */
    public readonly vpcConfiguration!: pulumi.Output<outputs.S3AccessPointVpcConfiguration>;

    /**
     * Create a S3AccessPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3AccessPointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3AccessPointArgs | S3AccessPointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3AccessPointState | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["bucketAccountId"] = state ? state.bucketAccountId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkOrigin"] = state ? state.networkOrigin : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["publicAccessBlockConfiguration"] = state ? state.publicAccessBlockConfiguration : undefined;
            resourceInputs["vpcConfiguration"] = state ? state.vpcConfiguration : undefined;
        } else {
            const args = argsOrState as S3AccessPointArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["bucketAccountId"] = args ? args.bucketAccountId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["publicAccessBlockConfiguration"] = args ? args.publicAccessBlockConfiguration : undefined;
            resourceInputs["vpcConfiguration"] = args ? args.vpcConfiguration : undefined;
            resourceInputs["alias"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["networkOrigin"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3AccessPoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering S3AccessPoint resources.
 */
export interface S3AccessPointState {
    /**
     * The alias of this Access Point. This alias can be used for compatibility purposes with other AWS services and
     * third-party applications.
     */
    alias?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the specified accesspoint.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name of the bucket that you want to associate this Access Point with.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The AWS account ID associated with the S3 bucket associated with this access point.
     */
    bucketAccountId?: pulumi.Input<string>;
    /**
     * The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID
     * and uses that ID for the access point name.
     */
    name?: pulumi.Input<string>;
    /**
     * Indicates whether this Access Point allows access from the public Internet. If VpcConfiguration is specified for this
     * Access Point, then NetworkOrigin is VPC, and the Access Point doesn't allow access from the public Internet. Otherwise,
     * NetworkOrigin is Internet, and the Access Point allows access from the public Internet, subject to the Access Point and
     * bucket access policies.
     */
    networkOrigin?: pulumi.Input<string>;
    /**
     * The Access Point Policy you want to apply to this access point.
     */
    policy?: pulumi.Input<string>;
    /**
     * The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration
     * options in any combination. For more information about when Amazon S3 considers a bucket or object public, see
     * https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status
     * 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
     */
    publicAccessBlockConfiguration?: pulumi.Input<inputs.S3AccessPointPublicAccessBlockConfiguration>;
    /**
     * If you include this field, Amazon S3 restricts access to this Access Point to requests from the specified Virtual
     * Private Cloud (VPC).
     */
    vpcConfiguration?: pulumi.Input<inputs.S3AccessPointVpcConfiguration>;
}

/**
 * The set of arguments for constructing a S3AccessPoint resource.
 */
export interface S3AccessPointArgs {
    /**
     * The name of the bucket that you want to associate this Access Point with.
     */
    bucket: pulumi.Input<string>;
    /**
     * The AWS account ID associated with the S3 bucket associated with this access point.
     */
    bucketAccountId?: pulumi.Input<string>;
    /**
     * The name you want to assign to this Access Point. If you don't specify a name, AWS CloudFormation generates a unique ID
     * and uses that ID for the access point name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Access Point Policy you want to apply to this access point.
     */
    policy?: pulumi.Input<string>;
    /**
     * The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration
     * options in any combination. For more information about when Amazon S3 considers a bucket or object public, see
     * https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status
     * 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
     */
    publicAccessBlockConfiguration?: pulumi.Input<inputs.S3AccessPointPublicAccessBlockConfiguration>;
    /**
     * If you include this field, Amazon S3 restricts access to this Access Point to requests from the specified Virtual
     * Private Cloud (VPC).
     */
    vpcConfiguration?: pulumi.Input<inputs.S3AccessPointVpcConfiguration>;
}
