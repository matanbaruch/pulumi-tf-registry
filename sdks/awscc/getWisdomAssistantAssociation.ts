// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWisdomAssistantAssociation(args: GetWisdomAssistantAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetWisdomAssistantAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWisdomAssistantAssociation:getWisdomAssistantAssociation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWisdomAssistantAssociation.
 */
export interface GetWisdomAssistantAssociationArgs {
    id: string;
}

/**
 * A collection of values returned by getWisdomAssistantAssociation.
 */
export interface GetWisdomAssistantAssociationResult {
    readonly assistantArn: string;
    readonly assistantAssociationArn: string;
    readonly assistantAssociationId: string;
    readonly assistantId: string;
    readonly association: outputs.GetWisdomAssistantAssociationAssociation;
    readonly associationType: string;
    readonly id: string;
    readonly tags: outputs.GetWisdomAssistantAssociationTag[];
}
export function getWisdomAssistantAssociationOutput(args: GetWisdomAssistantAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWisdomAssistantAssociationResult> {
    return pulumi.output(args).apply((a: any) => getWisdomAssistantAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getWisdomAssistantAssociation.
 */
export interface GetWisdomAssistantAssociationOutputArgs {
    id: pulumi.Input<string>;
}
