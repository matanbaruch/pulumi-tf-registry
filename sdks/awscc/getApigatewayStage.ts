// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayStage(args: GetApigatewayStageArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayStageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayStage:getApigatewayStage", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayStage.
 */
export interface GetApigatewayStageArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayStage.
 */
export interface GetApigatewayStageResult {
    readonly accessLogSetting: outputs.GetApigatewayStageAccessLogSetting;
    readonly cacheClusterEnabled: boolean;
    readonly cacheClusterSize: string;
    readonly canarySetting: outputs.GetApigatewayStageCanarySetting;
    readonly clientCertificateId: string;
    readonly deploymentId: string;
    readonly description: string;
    readonly documentationVersion: string;
    readonly id: string;
    readonly methodSettings: outputs.GetApigatewayStageMethodSetting[];
    readonly restApiId: string;
    readonly stageName: string;
    readonly tags: outputs.GetApigatewayStageTag[];
    readonly tracingEnabled: boolean;
    readonly variables: {[key: string]: string};
}
export function getApigatewayStageOutput(args: GetApigatewayStageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayStageResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayStage(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayStage.
 */
export interface GetApigatewayStageOutputArgs {
    id: pulumi.Input<string>;
}
