// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEventsArchive(args: GetEventsArchiveArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsArchiveResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEventsArchive:getEventsArchive", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventsArchive.
 */
export interface GetEventsArchiveArgs {
    id: string;
}

/**
 * A collection of values returned by getEventsArchive.
 */
export interface GetEventsArchiveResult {
    readonly archiveName: string;
    readonly arn: string;
    readonly description: string;
    readonly eventPattern: string;
    readonly id: string;
    readonly retentionDays: number;
    readonly sourceArn: string;
}
export function getEventsArchiveOutput(args: GetEventsArchiveOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventsArchiveResult> {
    return pulumi.output(args).apply((a: any) => getEventsArchive(a, opts))
}

/**
 * A collection of arguments for invoking getEventsArchive.
 */
export interface GetEventsArchiveOutputArgs {
    id: pulumi.Input<string>;
}
