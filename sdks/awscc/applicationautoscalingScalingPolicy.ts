// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationautoscalingScalingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationautoscalingScalingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationautoscalingScalingPolicyState, opts?: pulumi.CustomResourceOptions): ApplicationautoscalingScalingPolicy {
        return new ApplicationautoscalingScalingPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/applicationautoscalingScalingPolicy:ApplicationautoscalingScalingPolicy';

    /**
     * Returns true if the given object is an instance of ApplicationautoscalingScalingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationautoscalingScalingPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationautoscalingScalingPolicy.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name of the scaling policy. Updates to the name of a target tracking scaling policy are not supported, unless you
     * also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy
     * by removing the existing ``AWS::ApplicationAutoScaling::ScalingPolicy`` resource from the template and updating the
     * stack. Then, recreate the resource with the same settings and a different name.
     */
    public readonly policyName!: pulumi.Output<string>;
    /**
     * The scaling policy type. The following policy types are supported: ``TargetTrackingScaling``—Not supported for Amazon
     * EMR ``StepScaling``—Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon
     * ElastiCache, or Neptune.
     */
    public readonly policyType!: pulumi.Output<string>;
    /**
     * The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique
     * identifier. + ECS service - The resource type is ``service`` and the unique identifier is the cluster name and service
     * name. Example: ``service/my-cluster/my-service``. + Spot Fleet - The resource type is ``spot-fleet-request`` and the
     * unique identifier is the Spot Fleet request ID. Example:
     * ``spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE``. + EMR cluster - The resource type is ``instancegroup``
     * and the unique identifier is the cluster ID and instance group ID. Example:
     * ``instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0``. + AppStream 2.0 fleet - The resource type is ``fleet`` and the
     * unique identifier is the fleet name. Example: ``fleet/sample-fleet``. + DynamoDB table - The resource type is ``table``
     * and the unique identifier is the table name. Example: ``table/my-table``. + DynamoDB global secondary index - The
     * resource type is ``index`` and the unique identifier is the index name. Example:
     * ``table/my-table/index/my-table-index``. + Aurora DB cluster - The resource type is ``cluster`` and the unique
     * identifier is the cluster name. Example: ``cluster:my-db-cluster``. + SageMaker endpoint variant - The resource type is
     * ``variant`` and the unique identifier is the resource ID. Example: ``endpoint/my-end-point/variant/KMeansClustering``. +
     * Custom resources are not supported with a resource type. This parameter must specify the ``OutputValue`` from the
     * CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider.
     * More information is available in our [GitHub
     * repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource). + Amazon Comprehend
     * document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN.
     * Example: ``arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE``. + Amazon Comprehend entity
     * recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example:
     * ``arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE``. + Lambda provisioned concurrency - The
     * resource type is ``function`` and the unique identifier is the function name with a function version or alias name
     * suffix that is not ``$LATEST``. Example: ``function:my-function:prod`` or ``function:my-function:1``. + Amazon Keyspaces
     * table - The resource type is ``table`` and the unique identifier is the table name. Example:
     * ``keyspace/mykeyspace/table/mytable``. + Amazon MSK cluster - The resource type and unique identifier are specified
     * using the cluster ARN. Example:
     * ``arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5``. + Amazon
     * ElastiCache replication group - The resource type is ``replication-group`` and the unique identifier is the replication
     * group name. Example: ``replication-group/mycluster``. + Neptune cluster - The resource type is ``cluster`` and the
     * unique identifier is the cluster name. Example: ``cluster:mycluster``. + SageMaker serverless endpoint - The resource
     * type is ``variant`` and the unique identifier is the resource ID. Example:
     * ``endpoint/my-end-point/variant/KMeansClustering``. + SageMaker inference component - The resource type is
     * ``inference-component`` and the unique identifier is the resource ID. Example:
     * ``inference-component/my-inference-component``. + Pool of WorkSpaces - The resource type is ``workspacespool`` and the
     * unique identifier is the pool ID. Example: ``workspacespool/wspool-123456``.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * The scalable dimension. This string consists of the service namespace, resource type, and scaling property. +
     * ``ecs:service:DesiredCount`` - The task count of an ECS service. + ``elasticmapreduce:instancegroup:InstanceCount`` -
     * The instance count of an EMR Instance Group. + ``ec2:spot-fleet-request:TargetCapacity`` - The target capacity of a Spot
     * Fleet. + ``appstream:fleet:DesiredCapacity`` - The capacity of an AppStream 2.0 fleet. +
     * ``dynamodb:table:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB table. +
     * ``dynamodb:table:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB table. +
     * ``dynamodb:index:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB global secondary index. +
     * ``dynamodb:index:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB global secondary index. +
     * ``rds:cluster:ReadReplicaCount`` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora
     * MySQL-compatible edition and Aurora PostgreSQL-compatible edition. + ``sagemaker:variant:DesiredInstanceCount`` - The
     * number of EC2 instances for a SageMaker model endpoint variant. + ``custom-resource:ResourceType:Property`` - The
     * scalable dimension for a custom resource provided by your own application or service. +
     * ``comprehend:document-classifier-endpoint:DesiredInferenceUnits`` - The number of inference units for an Amazon
     * Comprehend document classification endpoint. + ``comprehend:entity-recognizer-endpoint:DesiredInferenceUnits`` - The
     * number of inference units for an Amazon Comprehend entity recognizer endpoint. +
     * ``lambda:function:ProvisionedConcurrency`` - The provisioned concurrency for a Lambda function. +
     * ``cassandra:table:ReadCapacityUnits`` - The provisioned read capacity for an Amazon Keyspaces table. +
     * ``cassandra:table:WriteCapacityUnits`` - The provisioned write capacity for an Amazon Keyspaces table. +
     * ``kafka:broker-storage:VolumeSize`` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster. +
     * ``elasticache:replication-group:NodeGroups`` - The number of node groups for an Amazon ElastiCache replication group. +
     * ``elasticache:replication-group:Replicas`` - The number of replicas per node group for an Amazon ElastiCache replication
     * group. + ``neptune:cluster:ReadReplicaCount`` - The count of read replicas in an Amazon Neptune DB cluster. +
     * ``sagemaker:variant:DesiredProvisionedConcurrency`` - The provisioned concurrency for a SageMaker serverless endpoint. +
     * ``sagemaker:inference-component:DesiredCopyCount`` - The number of copies across an endpoint for a SageMaker inference
     * component. + ``workspaces:workspacespool:DesiredUserSessions`` - The number of user sessions for the WorkSpaces in the
     * pool.
     */
    public readonly scalableDimension!: pulumi.Output<string>;
    /**
     * The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see
     * the Return Value section of the ``AWS::ApplicationAutoScaling::ScalableTarget`` resource. You must specify either the
     * ``ScalingTargetId`` property, or the ``ResourceId``, ``ScalableDimension``, and ``ServiceNamespace`` properties, but not
     * both.
     */
    public readonly scalingTargetId!: pulumi.Output<string>;
    /**
     * The namespace of the AWS service that provides the resource, or a ``custom-resource``.
     */
    public readonly serviceNamespace!: pulumi.Output<string>;
    /**
     * A step scaling policy.
     */
    public readonly stepScalingPolicyConfiguration!: pulumi.Output<outputs.ApplicationautoscalingScalingPolicyStepScalingPolicyConfiguration>;
    /**
     * A target tracking scaling policy.
     */
    public readonly targetTrackingScalingPolicyConfiguration!: pulumi.Output<outputs.ApplicationautoscalingScalingPolicyTargetTrackingScalingPolicyConfiguration>;

    /**
     * Create a ApplicationautoscalingScalingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationautoscalingScalingPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationautoscalingScalingPolicyArgs | ApplicationautoscalingScalingPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationautoscalingScalingPolicyState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["policyName"] = state ? state.policyName : undefined;
            resourceInputs["policyType"] = state ? state.policyType : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["scalableDimension"] = state ? state.scalableDimension : undefined;
            resourceInputs["scalingTargetId"] = state ? state.scalingTargetId : undefined;
            resourceInputs["serviceNamespace"] = state ? state.serviceNamespace : undefined;
            resourceInputs["stepScalingPolicyConfiguration"] = state ? state.stepScalingPolicyConfiguration : undefined;
            resourceInputs["targetTrackingScalingPolicyConfiguration"] = state ? state.targetTrackingScalingPolicyConfiguration : undefined;
        } else {
            const args = argsOrState as ApplicationautoscalingScalingPolicyArgs | undefined;
            if ((!args || args.policyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyName'");
            }
            if ((!args || args.policyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyType'");
            }
            resourceInputs["policyName"] = args ? args.policyName : undefined;
            resourceInputs["policyType"] = args ? args.policyType : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["scalableDimension"] = args ? args.scalableDimension : undefined;
            resourceInputs["scalingTargetId"] = args ? args.scalingTargetId : undefined;
            resourceInputs["serviceNamespace"] = args ? args.serviceNamespace : undefined;
            resourceInputs["stepScalingPolicyConfiguration"] = args ? args.stepScalingPolicyConfiguration : undefined;
            resourceInputs["targetTrackingScalingPolicyConfiguration"] = args ? args.targetTrackingScalingPolicyConfiguration : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationautoscalingScalingPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationautoscalingScalingPolicy resources.
 */
export interface ApplicationautoscalingScalingPolicyState {
    arn?: pulumi.Input<string>;
    /**
     * The name of the scaling policy. Updates to the name of a target tracking scaling policy are not supported, unless you
     * also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy
     * by removing the existing ``AWS::ApplicationAutoScaling::ScalingPolicy`` resource from the template and updating the
     * stack. Then, recreate the resource with the same settings and a different name.
     */
    policyName?: pulumi.Input<string>;
    /**
     * The scaling policy type. The following policy types are supported: ``TargetTrackingScaling``—Not supported for Amazon
     * EMR ``StepScaling``—Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon
     * ElastiCache, or Neptune.
     */
    policyType?: pulumi.Input<string>;
    /**
     * The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique
     * identifier. + ECS service - The resource type is ``service`` and the unique identifier is the cluster name and service
     * name. Example: ``service/my-cluster/my-service``. + Spot Fleet - The resource type is ``spot-fleet-request`` and the
     * unique identifier is the Spot Fleet request ID. Example:
     * ``spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE``. + EMR cluster - The resource type is ``instancegroup``
     * and the unique identifier is the cluster ID and instance group ID. Example:
     * ``instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0``. + AppStream 2.0 fleet - The resource type is ``fleet`` and the
     * unique identifier is the fleet name. Example: ``fleet/sample-fleet``. + DynamoDB table - The resource type is ``table``
     * and the unique identifier is the table name. Example: ``table/my-table``. + DynamoDB global secondary index - The
     * resource type is ``index`` and the unique identifier is the index name. Example:
     * ``table/my-table/index/my-table-index``. + Aurora DB cluster - The resource type is ``cluster`` and the unique
     * identifier is the cluster name. Example: ``cluster:my-db-cluster``. + SageMaker endpoint variant - The resource type is
     * ``variant`` and the unique identifier is the resource ID. Example: ``endpoint/my-end-point/variant/KMeansClustering``. +
     * Custom resources are not supported with a resource type. This parameter must specify the ``OutputValue`` from the
     * CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider.
     * More information is available in our [GitHub
     * repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource). + Amazon Comprehend
     * document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN.
     * Example: ``arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE``. + Amazon Comprehend entity
     * recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example:
     * ``arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE``. + Lambda provisioned concurrency - The
     * resource type is ``function`` and the unique identifier is the function name with a function version or alias name
     * suffix that is not ``$LATEST``. Example: ``function:my-function:prod`` or ``function:my-function:1``. + Amazon Keyspaces
     * table - The resource type is ``table`` and the unique identifier is the table name. Example:
     * ``keyspace/mykeyspace/table/mytable``. + Amazon MSK cluster - The resource type and unique identifier are specified
     * using the cluster ARN. Example:
     * ``arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5``. + Amazon
     * ElastiCache replication group - The resource type is ``replication-group`` and the unique identifier is the replication
     * group name. Example: ``replication-group/mycluster``. + Neptune cluster - The resource type is ``cluster`` and the
     * unique identifier is the cluster name. Example: ``cluster:mycluster``. + SageMaker serverless endpoint - The resource
     * type is ``variant`` and the unique identifier is the resource ID. Example:
     * ``endpoint/my-end-point/variant/KMeansClustering``. + SageMaker inference component - The resource type is
     * ``inference-component`` and the unique identifier is the resource ID. Example:
     * ``inference-component/my-inference-component``. + Pool of WorkSpaces - The resource type is ``workspacespool`` and the
     * unique identifier is the pool ID. Example: ``workspacespool/wspool-123456``.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The scalable dimension. This string consists of the service namespace, resource type, and scaling property. +
     * ``ecs:service:DesiredCount`` - The task count of an ECS service. + ``elasticmapreduce:instancegroup:InstanceCount`` -
     * The instance count of an EMR Instance Group. + ``ec2:spot-fleet-request:TargetCapacity`` - The target capacity of a Spot
     * Fleet. + ``appstream:fleet:DesiredCapacity`` - The capacity of an AppStream 2.0 fleet. +
     * ``dynamodb:table:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB table. +
     * ``dynamodb:table:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB table. +
     * ``dynamodb:index:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB global secondary index. +
     * ``dynamodb:index:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB global secondary index. +
     * ``rds:cluster:ReadReplicaCount`` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora
     * MySQL-compatible edition and Aurora PostgreSQL-compatible edition. + ``sagemaker:variant:DesiredInstanceCount`` - The
     * number of EC2 instances for a SageMaker model endpoint variant. + ``custom-resource:ResourceType:Property`` - The
     * scalable dimension for a custom resource provided by your own application or service. +
     * ``comprehend:document-classifier-endpoint:DesiredInferenceUnits`` - The number of inference units for an Amazon
     * Comprehend document classification endpoint. + ``comprehend:entity-recognizer-endpoint:DesiredInferenceUnits`` - The
     * number of inference units for an Amazon Comprehend entity recognizer endpoint. +
     * ``lambda:function:ProvisionedConcurrency`` - The provisioned concurrency for a Lambda function. +
     * ``cassandra:table:ReadCapacityUnits`` - The provisioned read capacity for an Amazon Keyspaces table. +
     * ``cassandra:table:WriteCapacityUnits`` - The provisioned write capacity for an Amazon Keyspaces table. +
     * ``kafka:broker-storage:VolumeSize`` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster. +
     * ``elasticache:replication-group:NodeGroups`` - The number of node groups for an Amazon ElastiCache replication group. +
     * ``elasticache:replication-group:Replicas`` - The number of replicas per node group for an Amazon ElastiCache replication
     * group. + ``neptune:cluster:ReadReplicaCount`` - The count of read replicas in an Amazon Neptune DB cluster. +
     * ``sagemaker:variant:DesiredProvisionedConcurrency`` - The provisioned concurrency for a SageMaker serverless endpoint. +
     * ``sagemaker:inference-component:DesiredCopyCount`` - The number of copies across an endpoint for a SageMaker inference
     * component. + ``workspaces:workspacespool:DesiredUserSessions`` - The number of user sessions for the WorkSpaces in the
     * pool.
     */
    scalableDimension?: pulumi.Input<string>;
    /**
     * The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see
     * the Return Value section of the ``AWS::ApplicationAutoScaling::ScalableTarget`` resource. You must specify either the
     * ``ScalingTargetId`` property, or the ``ResourceId``, ``ScalableDimension``, and ``ServiceNamespace`` properties, but not
     * both.
     */
    scalingTargetId?: pulumi.Input<string>;
    /**
     * The namespace of the AWS service that provides the resource, or a ``custom-resource``.
     */
    serviceNamespace?: pulumi.Input<string>;
    /**
     * A step scaling policy.
     */
    stepScalingPolicyConfiguration?: pulumi.Input<inputs.ApplicationautoscalingScalingPolicyStepScalingPolicyConfiguration>;
    /**
     * A target tracking scaling policy.
     */
    targetTrackingScalingPolicyConfiguration?: pulumi.Input<inputs.ApplicationautoscalingScalingPolicyTargetTrackingScalingPolicyConfiguration>;
}

/**
 * The set of arguments for constructing a ApplicationautoscalingScalingPolicy resource.
 */
export interface ApplicationautoscalingScalingPolicyArgs {
    /**
     * The name of the scaling policy. Updates to the name of a target tracking scaling policy are not supported, unless you
     * also update the metric used for scaling. To change only a target tracking scaling policy's name, first delete the policy
     * by removing the existing ``AWS::ApplicationAutoScaling::ScalingPolicy`` resource from the template and updating the
     * stack. Then, recreate the resource with the same settings and a different name.
     */
    policyName: pulumi.Input<string>;
    /**
     * The scaling policy type. The following policy types are supported: ``TargetTrackingScaling``—Not supported for Amazon
     * EMR ``StepScaling``—Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon
     * ElastiCache, or Neptune.
     */
    policyType: pulumi.Input<string>;
    /**
     * The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique
     * identifier. + ECS service - The resource type is ``service`` and the unique identifier is the cluster name and service
     * name. Example: ``service/my-cluster/my-service``. + Spot Fleet - The resource type is ``spot-fleet-request`` and the
     * unique identifier is the Spot Fleet request ID. Example:
     * ``spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE``. + EMR cluster - The resource type is ``instancegroup``
     * and the unique identifier is the cluster ID and instance group ID. Example:
     * ``instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0``. + AppStream 2.0 fleet - The resource type is ``fleet`` and the
     * unique identifier is the fleet name. Example: ``fleet/sample-fleet``. + DynamoDB table - The resource type is ``table``
     * and the unique identifier is the table name. Example: ``table/my-table``. + DynamoDB global secondary index - The
     * resource type is ``index`` and the unique identifier is the index name. Example:
     * ``table/my-table/index/my-table-index``. + Aurora DB cluster - The resource type is ``cluster`` and the unique
     * identifier is the cluster name. Example: ``cluster:my-db-cluster``. + SageMaker endpoint variant - The resource type is
     * ``variant`` and the unique identifier is the resource ID. Example: ``endpoint/my-end-point/variant/KMeansClustering``. +
     * Custom resources are not supported with a resource type. This parameter must specify the ``OutputValue`` from the
     * CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider.
     * More information is available in our [GitHub
     * repository](https://docs.aws.amazon.com/https://github.com/aws/aws-auto-scaling-custom-resource). + Amazon Comprehend
     * document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN.
     * Example: ``arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE``. + Amazon Comprehend entity
     * recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example:
     * ``arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE``. + Lambda provisioned concurrency - The
     * resource type is ``function`` and the unique identifier is the function name with a function version or alias name
     * suffix that is not ``$LATEST``. Example: ``function:my-function:prod`` or ``function:my-function:1``. + Amazon Keyspaces
     * table - The resource type is ``table`` and the unique identifier is the table name. Example:
     * ``keyspace/mykeyspace/table/mytable``. + Amazon MSK cluster - The resource type and unique identifier are specified
     * using the cluster ARN. Example:
     * ``arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5``. + Amazon
     * ElastiCache replication group - The resource type is ``replication-group`` and the unique identifier is the replication
     * group name. Example: ``replication-group/mycluster``. + Neptune cluster - The resource type is ``cluster`` and the
     * unique identifier is the cluster name. Example: ``cluster:mycluster``. + SageMaker serverless endpoint - The resource
     * type is ``variant`` and the unique identifier is the resource ID. Example:
     * ``endpoint/my-end-point/variant/KMeansClustering``. + SageMaker inference component - The resource type is
     * ``inference-component`` and the unique identifier is the resource ID. Example:
     * ``inference-component/my-inference-component``. + Pool of WorkSpaces - The resource type is ``workspacespool`` and the
     * unique identifier is the pool ID. Example: ``workspacespool/wspool-123456``.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The scalable dimension. This string consists of the service namespace, resource type, and scaling property. +
     * ``ecs:service:DesiredCount`` - The task count of an ECS service. + ``elasticmapreduce:instancegroup:InstanceCount`` -
     * The instance count of an EMR Instance Group. + ``ec2:spot-fleet-request:TargetCapacity`` - The target capacity of a Spot
     * Fleet. + ``appstream:fleet:DesiredCapacity`` - The capacity of an AppStream 2.0 fleet. +
     * ``dynamodb:table:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB table. +
     * ``dynamodb:table:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB table. +
     * ``dynamodb:index:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB global secondary index. +
     * ``dynamodb:index:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB global secondary index. +
     * ``rds:cluster:ReadReplicaCount`` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora
     * MySQL-compatible edition and Aurora PostgreSQL-compatible edition. + ``sagemaker:variant:DesiredInstanceCount`` - The
     * number of EC2 instances for a SageMaker model endpoint variant. + ``custom-resource:ResourceType:Property`` - The
     * scalable dimension for a custom resource provided by your own application or service. +
     * ``comprehend:document-classifier-endpoint:DesiredInferenceUnits`` - The number of inference units for an Amazon
     * Comprehend document classification endpoint. + ``comprehend:entity-recognizer-endpoint:DesiredInferenceUnits`` - The
     * number of inference units for an Amazon Comprehend entity recognizer endpoint. +
     * ``lambda:function:ProvisionedConcurrency`` - The provisioned concurrency for a Lambda function. +
     * ``cassandra:table:ReadCapacityUnits`` - The provisioned read capacity for an Amazon Keyspaces table. +
     * ``cassandra:table:WriteCapacityUnits`` - The provisioned write capacity for an Amazon Keyspaces table. +
     * ``kafka:broker-storage:VolumeSize`` - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster. +
     * ``elasticache:replication-group:NodeGroups`` - The number of node groups for an Amazon ElastiCache replication group. +
     * ``elasticache:replication-group:Replicas`` - The number of replicas per node group for an Amazon ElastiCache replication
     * group. + ``neptune:cluster:ReadReplicaCount`` - The count of read replicas in an Amazon Neptune DB cluster. +
     * ``sagemaker:variant:DesiredProvisionedConcurrency`` - The provisioned concurrency for a SageMaker serverless endpoint. +
     * ``sagemaker:inference-component:DesiredCopyCount`` - The number of copies across an endpoint for a SageMaker inference
     * component. + ``workspaces:workspacespool:DesiredUserSessions`` - The number of user sessions for the WorkSpaces in the
     * pool.
     */
    scalableDimension?: pulumi.Input<string>;
    /**
     * The CloudFormation-generated ID of an Application Auto Scaling scalable target. For more information about the ID, see
     * the Return Value section of the ``AWS::ApplicationAutoScaling::ScalableTarget`` resource. You must specify either the
     * ``ScalingTargetId`` property, or the ``ResourceId``, ``ScalableDimension``, and ``ServiceNamespace`` properties, but not
     * both.
     */
    scalingTargetId?: pulumi.Input<string>;
    /**
     * The namespace of the AWS service that provides the resource, or a ``custom-resource``.
     */
    serviceNamespace?: pulumi.Input<string>;
    /**
     * A step scaling policy.
     */
    stepScalingPolicyConfiguration?: pulumi.Input<inputs.ApplicationautoscalingScalingPolicyStepScalingPolicyConfiguration>;
    /**
     * A target tracking scaling policy.
     */
    targetTrackingScalingPolicyConfiguration?: pulumi.Input<inputs.ApplicationautoscalingScalingPolicyTargetTrackingScalingPolicyConfiguration>;
}
