// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIotCertificateProvider(args: GetIotCertificateProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetIotCertificateProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIotCertificateProvider:getIotCertificateProvider", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIotCertificateProvider.
 */
export interface GetIotCertificateProviderArgs {
    id: string;
}

/**
 * A collection of values returned by getIotCertificateProvider.
 */
export interface GetIotCertificateProviderResult {
    readonly accountDefaultForOperations: string[];
    readonly arn: string;
    readonly certificateProviderName: string;
    readonly id: string;
    readonly lambdaFunctionArn: string;
    readonly tags: outputs.GetIotCertificateProviderTag[];
}
export function getIotCertificateProviderOutput(args: GetIotCertificateProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIotCertificateProviderResult> {
    return pulumi.output(args).apply((a: any) => getIotCertificateProvider(a, opts))
}

/**
 * A collection of arguments for invoking getIotCertificateProvider.
 */
export interface GetIotCertificateProviderOutputArgs {
    id: pulumi.Input<string>;
}
