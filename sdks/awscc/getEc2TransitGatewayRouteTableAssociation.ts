// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2TransitGatewayRouteTableAssociation(args: GetEc2TransitGatewayRouteTableAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2TransitGatewayRouteTableAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2TransitGatewayRouteTableAssociation:getEc2TransitGatewayRouteTableAssociation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2TransitGatewayRouteTableAssociation.
 */
export interface GetEc2TransitGatewayRouteTableAssociationArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2TransitGatewayRouteTableAssociation.
 */
export interface GetEc2TransitGatewayRouteTableAssociationResult {
    readonly id: string;
    readonly transitGatewayAttachmentId: string;
    readonly transitGatewayRouteTableId: string;
}
export function getEc2TransitGatewayRouteTableAssociationOutput(args: GetEc2TransitGatewayRouteTableAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2TransitGatewayRouteTableAssociationResult> {
    return pulumi.output(args).apply((a: any) => getEc2TransitGatewayRouteTableAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getEc2TransitGatewayRouteTableAssociation.
 */
export interface GetEc2TransitGatewayRouteTableAssociationOutputArgs {
    id: pulumi.Input<string>;
}
