// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGreengrassv2ComponentVersion(args: GetGreengrassv2ComponentVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetGreengrassv2ComponentVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGreengrassv2ComponentVersion:getGreengrassv2ComponentVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGreengrassv2ComponentVersion.
 */
export interface GetGreengrassv2ComponentVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getGreengrassv2ComponentVersion.
 */
export interface GetGreengrassv2ComponentVersionResult {
    readonly arn: string;
    readonly componentName: string;
    readonly componentVersion: string;
    readonly id: string;
    readonly inlineRecipe: string;
    readonly lambdaFunction: outputs.GetGreengrassv2ComponentVersionLambdaFunction;
    readonly tags: {[key: string]: string};
}
export function getGreengrassv2ComponentVersionOutput(args: GetGreengrassv2ComponentVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGreengrassv2ComponentVersionResult> {
    return pulumi.output(args).apply((a: any) => getGreengrassv2ComponentVersion(a, opts))
}

/**
 * A collection of arguments for invoking getGreengrassv2ComponentVersion.
 */
export interface GetGreengrassv2ComponentVersionOutputArgs {
    id: pulumi.Input<string>;
}
