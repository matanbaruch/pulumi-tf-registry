// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CodestarconnectionsRepositoryLink extends pulumi.CustomResource {
    /**
     * Get an existing CodestarconnectionsRepositoryLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CodestarconnectionsRepositoryLinkState, opts?: pulumi.CustomResourceOptions): CodestarconnectionsRepositoryLink {
        return new CodestarconnectionsRepositoryLink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/codestarconnectionsRepositoryLink:CodestarconnectionsRepositoryLink';

    /**
     * Returns true if the given object is an instance of CodestarconnectionsRepositoryLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CodestarconnectionsRepositoryLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CodestarconnectionsRepositoryLink.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the
     * connection is shared between AWS services.
     */
    public readonly connectionArn!: pulumi.Output<string>;
    /**
     * The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not
     * specified, a default key will be used.
     */
    public readonly encryptionKeyArn!: pulumi.Output<string>;
    /**
     * the ID of the entity that owns the repository.
     */
    public readonly ownerId!: pulumi.Output<string>;
    /**
     * The name of the external provider where your third-party code repository is configured.
     */
    public /*out*/ readonly providerType!: pulumi.Output<string>;
    /**
     * A unique Amazon Resource Name (ARN) to designate the repository link.
     */
    public /*out*/ readonly repositoryLinkArn!: pulumi.Output<string>;
    /**
     * A UUID that uniquely identifies the RepositoryLink.
     */
    public /*out*/ readonly repositoryLinkId!: pulumi.Output<string>;
    /**
     * The repository for which the link is being created.
     */
    public readonly repositoryName!: pulumi.Output<string>;
    /**
     * Specifies the tags applied to a RepositoryLink.
     */
    public readonly tags!: pulumi.Output<outputs.CodestarconnectionsRepositoryLinkTag[]>;

    /**
     * Create a CodestarconnectionsRepositoryLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CodestarconnectionsRepositoryLinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CodestarconnectionsRepositoryLinkArgs | CodestarconnectionsRepositoryLinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CodestarconnectionsRepositoryLinkState | undefined;
            resourceInputs["connectionArn"] = state ? state.connectionArn : undefined;
            resourceInputs["encryptionKeyArn"] = state ? state.encryptionKeyArn : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["providerType"] = state ? state.providerType : undefined;
            resourceInputs["repositoryLinkArn"] = state ? state.repositoryLinkArn : undefined;
            resourceInputs["repositoryLinkId"] = state ? state.repositoryLinkId : undefined;
            resourceInputs["repositoryName"] = state ? state.repositoryName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as CodestarconnectionsRepositoryLinkArgs | undefined;
            if ((!args || args.connectionArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionArn'");
            }
            if ((!args || args.ownerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ownerId'");
            }
            if ((!args || args.repositoryName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryName'");
            }
            resourceInputs["connectionArn"] = args ? args.connectionArn : undefined;
            resourceInputs["encryptionKeyArn"] = args ? args.encryptionKeyArn : undefined;
            resourceInputs["ownerId"] = args ? args.ownerId : undefined;
            resourceInputs["repositoryName"] = args ? args.repositoryName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["providerType"] = undefined /*out*/;
            resourceInputs["repositoryLinkArn"] = undefined /*out*/;
            resourceInputs["repositoryLinkId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CodestarconnectionsRepositoryLink.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CodestarconnectionsRepositoryLink resources.
 */
export interface CodestarconnectionsRepositoryLinkState {
    /**
     * The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the
     * connection is shared between AWS services.
     */
    connectionArn?: pulumi.Input<string>;
    /**
     * The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not
     * specified, a default key will be used.
     */
    encryptionKeyArn?: pulumi.Input<string>;
    /**
     * the ID of the entity that owns the repository.
     */
    ownerId?: pulumi.Input<string>;
    /**
     * The name of the external provider where your third-party code repository is configured.
     */
    providerType?: pulumi.Input<string>;
    /**
     * A unique Amazon Resource Name (ARN) to designate the repository link.
     */
    repositoryLinkArn?: pulumi.Input<string>;
    /**
     * A UUID that uniquely identifies the RepositoryLink.
     */
    repositoryLinkId?: pulumi.Input<string>;
    /**
     * The repository for which the link is being created.
     */
    repositoryName?: pulumi.Input<string>;
    /**
     * Specifies the tags applied to a RepositoryLink.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CodestarconnectionsRepositoryLinkTag>[]>;
}

/**
 * The set of arguments for constructing a CodestarconnectionsRepositoryLink resource.
 */
export interface CodestarconnectionsRepositoryLinkArgs {
    /**
     * The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the
     * connection is shared between AWS services.
     */
    connectionArn: pulumi.Input<string>;
    /**
     * The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not
     * specified, a default key will be used.
     */
    encryptionKeyArn?: pulumi.Input<string>;
    /**
     * the ID of the entity that owns the repository.
     */
    ownerId: pulumi.Input<string>;
    /**
     * The repository for which the link is being created.
     */
    repositoryName: pulumi.Input<string>;
    /**
     * Specifies the tags applied to a RepositoryLink.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CodestarconnectionsRepositoryLinkTag>[]>;
}
