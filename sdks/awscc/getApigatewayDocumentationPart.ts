// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayDocumentationPart(args: GetApigatewayDocumentationPartArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayDocumentationPartResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayDocumentationPart:getApigatewayDocumentationPart", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayDocumentationPart.
 */
export interface GetApigatewayDocumentationPartArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayDocumentationPart.
 */
export interface GetApigatewayDocumentationPartResult {
    readonly documentationPartId: string;
    readonly id: string;
    readonly location: outputs.GetApigatewayDocumentationPartLocation;
    readonly properties: string;
    readonly restApiId: string;
}
export function getApigatewayDocumentationPartOutput(args: GetApigatewayDocumentationPartOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayDocumentationPartResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayDocumentationPart(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayDocumentationPart.
 */
export interface GetApigatewayDocumentationPartOutputArgs {
    id: pulumi.Input<string>;
}
