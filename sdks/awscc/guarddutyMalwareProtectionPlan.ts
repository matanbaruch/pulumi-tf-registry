// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GuarddutyMalwareProtectionPlan extends pulumi.CustomResource {
    /**
     * Get an existing GuarddutyMalwareProtectionPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GuarddutyMalwareProtectionPlanState, opts?: pulumi.CustomResourceOptions): GuarddutyMalwareProtectionPlan {
        return new GuarddutyMalwareProtectionPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/guarddutyMalwareProtectionPlan:GuarddutyMalwareProtectionPlan';

    /**
     * Returns true if the given object is an instance of GuarddutyMalwareProtectionPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GuarddutyMalwareProtectionPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GuarddutyMalwareProtectionPlan.__pulumiType;
    }

    /**
     * Specifies the action that is to be applied to the Malware Protection plan resource.
     */
    public readonly actions!: pulumi.Output<outputs.GuarddutyMalwareProtectionPlanActions>;
    /**
     * Amazon Resource Name (ARN) of the protected resource.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The timestamp when the Malware Protection plan resource was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A unique identifier associated with Malware Protection plan resource.
     */
    public /*out*/ readonly malwareProtectionPlanId!: pulumi.Output<string>;
    /**
     * Information about the protected resource. Presently, S3Bucket is the only supported protected resource.
     */
    public readonly protectedResource!: pulumi.Output<outputs.GuarddutyMalwareProtectionPlanProtectedResource>;
    /**
     * IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * Status of the Malware Protection plan resource.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Status details associated with the Malware Protection plan resource status.
     */
    public /*out*/ readonly statusReasons!: pulumi.Output<outputs.GuarddutyMalwareProtectionPlanStatusReason[]>;
    /**
     * The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value,
     * both of which you need to specify.
     */
    public readonly tags!: pulumi.Output<outputs.GuarddutyMalwareProtectionPlanTag[]>;

    /**
     * Create a GuarddutyMalwareProtectionPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GuarddutyMalwareProtectionPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GuarddutyMalwareProtectionPlanArgs | GuarddutyMalwareProtectionPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GuarddutyMalwareProtectionPlanState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["malwareProtectionPlanId"] = state ? state.malwareProtectionPlanId : undefined;
            resourceInputs["protectedResource"] = state ? state.protectedResource : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusReasons"] = state ? state.statusReasons : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as GuarddutyMalwareProtectionPlanArgs | undefined;
            if ((!args || args.protectedResource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectedResource'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["protectedResource"] = args ? args.protectedResource : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["malwareProtectionPlanId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReasons"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GuarddutyMalwareProtectionPlan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GuarddutyMalwareProtectionPlan resources.
 */
export interface GuarddutyMalwareProtectionPlanState {
    /**
     * Specifies the action that is to be applied to the Malware Protection plan resource.
     */
    actions?: pulumi.Input<inputs.GuarddutyMalwareProtectionPlanActions>;
    /**
     * Amazon Resource Name (ARN) of the protected resource.
     */
    arn?: pulumi.Input<string>;
    /**
     * The timestamp when the Malware Protection plan resource was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A unique identifier associated with Malware Protection plan resource.
     */
    malwareProtectionPlanId?: pulumi.Input<string>;
    /**
     * Information about the protected resource. Presently, S3Bucket is the only supported protected resource.
     */
    protectedResource?: pulumi.Input<inputs.GuarddutyMalwareProtectionPlanProtectedResource>;
    /**
     * IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource.
     */
    role?: pulumi.Input<string>;
    /**
     * Status of the Malware Protection plan resource.
     */
    status?: pulumi.Input<string>;
    /**
     * Status details associated with the Malware Protection plan resource status.
     */
    statusReasons?: pulumi.Input<pulumi.Input<inputs.GuarddutyMalwareProtectionPlanStatusReason>[]>;
    /**
     * The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value,
     * both of which you need to specify.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.GuarddutyMalwareProtectionPlanTag>[]>;
}

/**
 * The set of arguments for constructing a GuarddutyMalwareProtectionPlan resource.
 */
export interface GuarddutyMalwareProtectionPlanArgs {
    /**
     * Specifies the action that is to be applied to the Malware Protection plan resource.
     */
    actions?: pulumi.Input<inputs.GuarddutyMalwareProtectionPlanActions>;
    /**
     * Information about the protected resource. Presently, S3Bucket is the only supported protected resource.
     */
    protectedResource: pulumi.Input<inputs.GuarddutyMalwareProtectionPlanProtectedResource>;
    /**
     * IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource.
     */
    role: pulumi.Input<string>;
    /**
     * The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value,
     * both of which you need to specify.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.GuarddutyMalwareProtectionPlanTag>[]>;
}
