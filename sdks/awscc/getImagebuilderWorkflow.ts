// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getImagebuilderWorkflow(args: GetImagebuilderWorkflowArgs, opts?: pulumi.InvokeOptions): Promise<GetImagebuilderWorkflowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getImagebuilderWorkflow:getImagebuilderWorkflow", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImagebuilderWorkflow.
 */
export interface GetImagebuilderWorkflowArgs {
    id: string;
}

/**
 * A collection of values returned by getImagebuilderWorkflow.
 */
export interface GetImagebuilderWorkflowResult {
    readonly arn: string;
    readonly changeDescription: string;
    readonly data: string;
    readonly description: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly name: string;
    readonly tags: {[key: string]: string};
    readonly type: string;
    readonly uri: string;
    readonly version: string;
}
export function getImagebuilderWorkflowOutput(args: GetImagebuilderWorkflowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagebuilderWorkflowResult> {
    return pulumi.output(args).apply((a: any) => getImagebuilderWorkflow(a, opts))
}

/**
 * A collection of arguments for invoking getImagebuilderWorkflow.
 */
export interface GetImagebuilderWorkflowOutputArgs {
    id: pulumi.Input<string>;
}
