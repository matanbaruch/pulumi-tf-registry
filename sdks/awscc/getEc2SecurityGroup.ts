// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2SecurityGroup(args: GetEc2SecurityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2SecurityGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2SecurityGroup:getEc2SecurityGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2SecurityGroup.
 */
export interface GetEc2SecurityGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2SecurityGroup.
 */
export interface GetEc2SecurityGroupResult {
    readonly groupDescription: string;
    readonly groupId: string;
    readonly groupName: string;
    readonly id: string;
    readonly securityGroupEgresses: outputs.GetEc2SecurityGroupSecurityGroupEgress[];
    readonly securityGroupId: string;
    readonly securityGroupIngresses: outputs.GetEc2SecurityGroupSecurityGroupIngress[];
    readonly tags: outputs.GetEc2SecurityGroupTag[];
    readonly vpcId: string;
}
export function getEc2SecurityGroupOutput(args: GetEc2SecurityGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2SecurityGroupResult> {
    return pulumi.output(args).apply((a: any) => getEc2SecurityGroup(a, opts))
}

/**
 * A collection of arguments for invoking getEc2SecurityGroup.
 */
export interface GetEc2SecurityGroupOutputArgs {
    id: pulumi.Input<string>;
}
