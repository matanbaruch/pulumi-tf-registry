// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCleanroomsConfiguredTable(args: GetCleanroomsConfiguredTableArgs, opts?: pulumi.InvokeOptions): Promise<GetCleanroomsConfiguredTableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCleanroomsConfiguredTable:getCleanroomsConfiguredTable", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCleanroomsConfiguredTable.
 */
export interface GetCleanroomsConfiguredTableArgs {
    id: string;
}

/**
 * A collection of values returned by getCleanroomsConfiguredTable.
 */
export interface GetCleanroomsConfiguredTableResult {
    readonly allowedColumns: string[];
    readonly analysisMethod: string;
    readonly analysisRules: outputs.GetCleanroomsConfiguredTableAnalysisRule[];
    readonly arn: string;
    readonly configuredTableIdentifier: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly tableReference: outputs.GetCleanroomsConfiguredTableTableReference;
    readonly tags: outputs.GetCleanroomsConfiguredTableTag[];
}
export function getCleanroomsConfiguredTableOutput(args: GetCleanroomsConfiguredTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCleanroomsConfiguredTableResult> {
    return pulumi.output(args).apply((a: any) => getCleanroomsConfiguredTable(a, opts))
}

/**
 * A collection of arguments for invoking getCleanroomsConfiguredTable.
 */
export interface GetCleanroomsConfiguredTableOutputArgs {
    id: pulumi.Input<string>;
}
