// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecurityhubInsight extends pulumi.CustomResource {
    /**
     * Get an existing SecurityhubInsight resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityhubInsightState, opts?: pulumi.CustomResourceOptions): SecurityhubInsight {
        return new SecurityhubInsight(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/securityhubInsight:SecurityhubInsight';

    /**
     * Returns true if the given object is an instance of SecurityhubInsight.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityhubInsight {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityhubInsight.__pulumiType;
    }

    /**
     * One or more attributes used to filter the findings included in the insight
     */
    public readonly filters!: pulumi.Output<outputs.SecurityhubInsightFilters>;
    /**
     * The grouping attribute for the insight's findings
     */
    public readonly groupByAttribute!: pulumi.Output<string>;
    /**
     * The ARN of a Security Hub insight
     */
    public /*out*/ readonly insightArn!: pulumi.Output<string>;
    /**
     * The name of a Security Hub insight
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a SecurityhubInsight resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityhubInsightArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityhubInsightArgs | SecurityhubInsightState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityhubInsightState | undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["groupByAttribute"] = state ? state.groupByAttribute : undefined;
            resourceInputs["insightArn"] = state ? state.insightArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as SecurityhubInsightArgs | undefined;
            if ((!args || args.filters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filters'");
            }
            if ((!args || args.groupByAttribute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupByAttribute'");
            }
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["groupByAttribute"] = args ? args.groupByAttribute : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["insightArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityhubInsight.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecurityhubInsight resources.
 */
export interface SecurityhubInsightState {
    /**
     * One or more attributes used to filter the findings included in the insight
     */
    filters?: pulumi.Input<inputs.SecurityhubInsightFilters>;
    /**
     * The grouping attribute for the insight's findings
     */
    groupByAttribute?: pulumi.Input<string>;
    /**
     * The ARN of a Security Hub insight
     */
    insightArn?: pulumi.Input<string>;
    /**
     * The name of a Security Hub insight
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityhubInsight resource.
 */
export interface SecurityhubInsightArgs {
    /**
     * One or more attributes used to filter the findings included in the insight
     */
    filters: pulumi.Input<inputs.SecurityhubInsightFilters>;
    /**
     * The grouping attribute for the insight's findings
     */
    groupByAttribute: pulumi.Input<string>;
    /**
     * The name of a Security Hub insight
     */
    name?: pulumi.Input<string>;
}
