// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IamVirtualMfaDevice extends pulumi.CustomResource {
    /**
     * Get an existing IamVirtualMfaDevice resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamVirtualMfaDeviceState, opts?: pulumi.CustomResourceOptions): IamVirtualMfaDevice {
        return new IamVirtualMfaDevice(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iamVirtualMfaDevice:IamVirtualMfaDevice';

    /**
     * Returns true if the given object is an instance of IamVirtualMfaDevice.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamVirtualMfaDevice {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamVirtualMfaDevice.__pulumiType;
    }

    public readonly path!: pulumi.Output<string>;
    public /*out*/ readonly serialNumber!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.IamVirtualMfaDeviceTag[]>;
    public readonly users!: pulumi.Output<string[]>;
    public readonly virtualMfaDeviceName!: pulumi.Output<string>;

    /**
     * Create a IamVirtualMfaDevice resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamVirtualMfaDeviceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamVirtualMfaDeviceArgs | IamVirtualMfaDeviceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamVirtualMfaDeviceState | undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["serialNumber"] = state ? state.serialNumber : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["virtualMfaDeviceName"] = state ? state.virtualMfaDeviceName : undefined;
        } else {
            const args = argsOrState as IamVirtualMfaDeviceArgs | undefined;
            if ((!args || args.users === undefined) && !opts.urn) {
                throw new Error("Missing required property 'users'");
            }
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["virtualMfaDeviceName"] = args ? args.virtualMfaDeviceName : undefined;
            resourceInputs["serialNumber"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamVirtualMfaDevice.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IamVirtualMfaDevice resources.
 */
export interface IamVirtualMfaDeviceState {
    path?: pulumi.Input<string>;
    serialNumber?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.IamVirtualMfaDeviceTag>[]>;
    users?: pulumi.Input<pulumi.Input<string>[]>;
    virtualMfaDeviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamVirtualMfaDevice resource.
 */
export interface IamVirtualMfaDeviceArgs {
    path?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.IamVirtualMfaDeviceTag>[]>;
    users: pulumi.Input<pulumi.Input<string>[]>;
    virtualMfaDeviceName?: pulumi.Input<string>;
}
