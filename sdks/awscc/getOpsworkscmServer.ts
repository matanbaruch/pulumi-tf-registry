// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpsworkscmServer(args: GetOpsworkscmServerArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsworkscmServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getOpsworkscmServer:getOpsworkscmServer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpsworkscmServer.
 */
export interface GetOpsworkscmServerArgs {
    id: string;
}

/**
 * A collection of values returned by getOpsworkscmServer.
 */
export interface GetOpsworkscmServerResult {
    readonly arn: string;
    readonly associatePublicIpAddress: boolean;
    readonly backupId: string;
    readonly backupRetentionCount: number;
    readonly customCertificate: string;
    readonly customDomain: string;
    readonly customPrivateKey: string;
    readonly disableAutomatedBackup: boolean;
    readonly endpoint: string;
    readonly engine: string;
    readonly engineAttributes: outputs.GetOpsworkscmServerEngineAttribute[];
    readonly engineModel: string;
    readonly engineVersion: string;
    readonly id: string;
    readonly instanceProfileArn: string;
    readonly instanceType: string;
    readonly keyPair: string;
    readonly preferredBackupWindow: string;
    readonly preferredMaintenanceWindow: string;
    readonly securityGroupIds: string[];
    readonly serverName: string;
    readonly serviceRoleArn: string;
    readonly subnetIds: string[];
    readonly tags: outputs.GetOpsworkscmServerTag[];
}
export function getOpsworkscmServerOutput(args: GetOpsworkscmServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsworkscmServerResult> {
    return pulumi.output(args).apply((a: any) => getOpsworkscmServer(a, opts))
}

/**
 * A collection of arguments for invoking getOpsworkscmServer.
 */
export interface GetOpsworkscmServerOutputArgs {
    id: pulumi.Input<string>;
}
