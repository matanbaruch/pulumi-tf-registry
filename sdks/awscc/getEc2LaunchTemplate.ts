// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2LaunchTemplate(args: GetEc2LaunchTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2LaunchTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2LaunchTemplate:getEc2LaunchTemplate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2LaunchTemplate.
 */
export interface GetEc2LaunchTemplateArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2LaunchTemplate.
 */
export interface GetEc2LaunchTemplateResult {
    readonly defaultVersionNumber: string;
    readonly id: string;
    readonly latestVersionNumber: string;
    readonly launchTemplateData: outputs.GetEc2LaunchTemplateLaunchTemplateData;
    readonly launchTemplateId: string;
    readonly launchTemplateName: string;
    readonly tagSpecifications: outputs.GetEc2LaunchTemplateTagSpecification[];
    readonly versionDescription: string;
}
export function getEc2LaunchTemplateOutput(args: GetEc2LaunchTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2LaunchTemplateResult> {
    return pulumi.output(args).apply((a: any) => getEc2LaunchTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getEc2LaunchTemplate.
 */
export interface GetEc2LaunchTemplateOutputArgs {
    id: pulumi.Input<string>;
}
