// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAcmpcaCertificateAuthorityActivation(args: GetAcmpcaCertificateAuthorityActivationArgs, opts?: pulumi.InvokeOptions): Promise<GetAcmpcaCertificateAuthorityActivationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getAcmpcaCertificateAuthorityActivation:getAcmpcaCertificateAuthorityActivation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAcmpcaCertificateAuthorityActivation.
 */
export interface GetAcmpcaCertificateAuthorityActivationArgs {
    id: string;
}

/**
 * A collection of values returned by getAcmpcaCertificateAuthorityActivation.
 */
export interface GetAcmpcaCertificateAuthorityActivationResult {
    readonly certificate: string;
    readonly certificateAuthorityArn: string;
    readonly certificateChain: string;
    readonly completeCertificateChain: string;
    readonly id: string;
    readonly status: string;
}
export function getAcmpcaCertificateAuthorityActivationOutput(args: GetAcmpcaCertificateAuthorityActivationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAcmpcaCertificateAuthorityActivationResult> {
    return pulumi.output(args).apply((a: any) => getAcmpcaCertificateAuthorityActivation(a, opts))
}

/**
 * A collection of arguments for invoking getAcmpcaCertificateAuthorityActivation.
 */
export interface GetAcmpcaCertificateAuthorityActivationOutputArgs {
    id: pulumi.Input<string>;
}
