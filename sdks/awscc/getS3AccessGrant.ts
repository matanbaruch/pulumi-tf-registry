// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getS3AccessGrant(args: GetS3AccessGrantArgs, opts?: pulumi.InvokeOptions): Promise<GetS3AccessGrantResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getS3AccessGrant:getS3AccessGrant", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3AccessGrant.
 */
export interface GetS3AccessGrantArgs {
    id: string;
}

/**
 * A collection of values returned by getS3AccessGrant.
 */
export interface GetS3AccessGrantResult {
    readonly accessGrantArn: string;
    readonly accessGrantId: string;
    readonly accessGrantsLocationConfiguration: outputs.GetS3AccessGrantAccessGrantsLocationConfiguration;
    readonly accessGrantsLocationId: string;
    readonly applicationArn: string;
    readonly grantScope: string;
    readonly grantee: outputs.GetS3AccessGrantGrantee;
    readonly id: string;
    readonly permission: string;
    readonly s3PrefixType: string;
    readonly tags: outputs.GetS3AccessGrantTag[];
}
export function getS3AccessGrantOutput(args: GetS3AccessGrantOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3AccessGrantResult> {
    return pulumi.output(args).apply((a: any) => getS3AccessGrant(a, opts))
}

/**
 * A collection of arguments for invoking getS3AccessGrant.
 */
export interface GetS3AccessGrantOutputArgs {
    id: pulumi.Input<string>;
}
