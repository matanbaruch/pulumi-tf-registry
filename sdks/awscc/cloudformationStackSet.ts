// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudformationStackSet extends pulumi.CustomResource {
    /**
     * Get an existing CloudformationStackSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudformationStackSetState, opts?: pulumi.CustomResourceOptions): CloudformationStackSet {
        return new CloudformationStackSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/cloudformationStackSet:CloudformationStackSet';

    /**
     * Returns true if the given object is an instance of CloudformationStackSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudformationStackSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudformationStackSet.__pulumiType;
    }

    /**
     * The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are
     * using customized administrator roles to control which users or groups can manage specific stack sets within the same
     * administrator account.
     */
    public readonly administrationRoleArn!: pulumi.Output<string>;
    /**
     * Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target
     * organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
     */
    public readonly autoDeployment!: pulumi.Output<outputs.CloudformationStackSetAutoDeployment>;
    /**
     * Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify
     * SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If
     * you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
     */
    public readonly callAs!: pulumi.Output<string>;
    /**
     * In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for
     * AWS CloudFormation to create the stack set and related stack instances.
     */
    public readonly capabilities!: pulumi.Output<string[]>;
    /**
     * A description of the stack set. You can use the description to identify the stack set's purpose or other important
     * information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS
     * CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
     */
    public readonly executionRoleName!: pulumi.Output<string>;
    /**
     * Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
     */
    public readonly managedExecution!: pulumi.Output<outputs.CloudformationStackSetManagedExecution>;
    /**
     * The user-specified preferences for how AWS CloudFormation performs a stack set operation.
     */
    public readonly operationPreferences!: pulumi.Output<outputs.CloudformationStackSetOperationPreferences>;
    /**
     * The input parameters for the stack set template.
     */
    public readonly parameters!: pulumi.Output<outputs.CloudformationStackSetParameter[]>;
    /**
     * Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
     */
    public readonly permissionModel!: pulumi.Output<string>;
    /**
     * A group of stack instances with parameters in some specific accounts and regions.
     */
    public readonly stackInstancesGroups!: pulumi.Output<outputs.CloudformationStackSetStackInstancesGroup[]>;
    /**
     * The ID of the stack set that you're creating.
     */
    public /*out*/ readonly stackSetId!: pulumi.Output<string>;
    /**
     * The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
     */
    public readonly stackSetName!: pulumi.Output<string>;
    /**
     * The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates
     * these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
     */
    public readonly tags!: pulumi.Output<outputs.CloudformationStackSetTag[]>;
    /**
     * The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
     */
    public readonly templateBody!: pulumi.Output<string>;
    /**
     * Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is
     * located in an Amazon S3 bucket.
     */
    public readonly templateUrl!: pulumi.Output<string>;

    /**
     * Create a CloudformationStackSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudformationStackSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudformationStackSetArgs | CloudformationStackSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudformationStackSetState | undefined;
            resourceInputs["administrationRoleArn"] = state ? state.administrationRoleArn : undefined;
            resourceInputs["autoDeployment"] = state ? state.autoDeployment : undefined;
            resourceInputs["callAs"] = state ? state.callAs : undefined;
            resourceInputs["capabilities"] = state ? state.capabilities : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["executionRoleName"] = state ? state.executionRoleName : undefined;
            resourceInputs["managedExecution"] = state ? state.managedExecution : undefined;
            resourceInputs["operationPreferences"] = state ? state.operationPreferences : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["permissionModel"] = state ? state.permissionModel : undefined;
            resourceInputs["stackInstancesGroups"] = state ? state.stackInstancesGroups : undefined;
            resourceInputs["stackSetId"] = state ? state.stackSetId : undefined;
            resourceInputs["stackSetName"] = state ? state.stackSetName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateBody"] = state ? state.templateBody : undefined;
            resourceInputs["templateUrl"] = state ? state.templateUrl : undefined;
        } else {
            const args = argsOrState as CloudformationStackSetArgs | undefined;
            if ((!args || args.permissionModel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissionModel'");
            }
            if ((!args || args.stackSetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackSetName'");
            }
            resourceInputs["administrationRoleArn"] = args ? args.administrationRoleArn : undefined;
            resourceInputs["autoDeployment"] = args ? args.autoDeployment : undefined;
            resourceInputs["callAs"] = args ? args.callAs : undefined;
            resourceInputs["capabilities"] = args ? args.capabilities : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["executionRoleName"] = args ? args.executionRoleName : undefined;
            resourceInputs["managedExecution"] = args ? args.managedExecution : undefined;
            resourceInputs["operationPreferences"] = args ? args.operationPreferences : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["permissionModel"] = args ? args.permissionModel : undefined;
            resourceInputs["stackInstancesGroups"] = args ? args.stackInstancesGroups : undefined;
            resourceInputs["stackSetName"] = args ? args.stackSetName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateBody"] = args ? args.templateBody : undefined;
            resourceInputs["templateUrl"] = args ? args.templateUrl : undefined;
            resourceInputs["stackSetId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudformationStackSet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudformationStackSet resources.
 */
export interface CloudformationStackSetState {
    /**
     * The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are
     * using customized administrator roles to control which users or groups can manage specific stack sets within the same
     * administrator account.
     */
    administrationRoleArn?: pulumi.Input<string>;
    /**
     * Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target
     * organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
     */
    autoDeployment?: pulumi.Input<inputs.CloudformationStackSetAutoDeployment>;
    /**
     * Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify
     * SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If
     * you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
     */
    callAs?: pulumi.Input<string>;
    /**
     * In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for
     * AWS CloudFormation to create the stack set and related stack instances.
     */
    capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description of the stack set. You can use the description to identify the stack set's purpose or other important
     * information.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS
     * CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
     */
    executionRoleName?: pulumi.Input<string>;
    /**
     * Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
     */
    managedExecution?: pulumi.Input<inputs.CloudformationStackSetManagedExecution>;
    /**
     * The user-specified preferences for how AWS CloudFormation performs a stack set operation.
     */
    operationPreferences?: pulumi.Input<inputs.CloudformationStackSetOperationPreferences>;
    /**
     * The input parameters for the stack set template.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.CloudformationStackSetParameter>[]>;
    /**
     * Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
     */
    permissionModel?: pulumi.Input<string>;
    /**
     * A group of stack instances with parameters in some specific accounts and regions.
     */
    stackInstancesGroups?: pulumi.Input<pulumi.Input<inputs.CloudformationStackSetStackInstancesGroup>[]>;
    /**
     * The ID of the stack set that you're creating.
     */
    stackSetId?: pulumi.Input<string>;
    /**
     * The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
     */
    stackSetName?: pulumi.Input<string>;
    /**
     * The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates
     * these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CloudformationStackSetTag>[]>;
    /**
     * The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
     */
    templateBody?: pulumi.Input<string>;
    /**
     * Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is
     * located in an Amazon S3 bucket.
     */
    templateUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudformationStackSet resource.
 */
export interface CloudformationStackSetArgs {
    /**
     * The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are
     * using customized administrator roles to control which users or groups can manage specific stack sets within the same
     * administrator account.
     */
    administrationRoleArn?: pulumi.Input<string>;
    /**
     * Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target
     * organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
     */
    autoDeployment?: pulumi.Input<inputs.CloudformationStackSetAutoDeployment>;
    /**
     * Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify
     * SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If
     * you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
     */
    callAs?: pulumi.Input<string>;
    /**
     * In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for
     * AWS CloudFormation to create the stack set and related stack instances.
     */
    capabilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description of the stack set. You can use the description to identify the stack set's purpose or other important
     * information.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS
     * CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
     */
    executionRoleName?: pulumi.Input<string>;
    /**
     * Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
     */
    managedExecution?: pulumi.Input<inputs.CloudformationStackSetManagedExecution>;
    /**
     * The user-specified preferences for how AWS CloudFormation performs a stack set operation.
     */
    operationPreferences?: pulumi.Input<inputs.CloudformationStackSetOperationPreferences>;
    /**
     * The input parameters for the stack set template.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.CloudformationStackSetParameter>[]>;
    /**
     * Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
     */
    permissionModel: pulumi.Input<string>;
    /**
     * A group of stack instances with parameters in some specific accounts and regions.
     */
    stackInstancesGroups?: pulumi.Input<pulumi.Input<inputs.CloudformationStackSetStackInstancesGroup>[]>;
    /**
     * The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
     */
    stackSetName: pulumi.Input<string>;
    /**
     * The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates
     * these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CloudformationStackSetTag>[]>;
    /**
     * The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
     */
    templateBody?: pulumi.Input<string>;
    /**
     * Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is
     * located in an Amazon S3 bucket.
     */
    templateUrl?: pulumi.Input<string>;
}
