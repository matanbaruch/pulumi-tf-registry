// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BedrockFlowVersion extends pulumi.CustomResource {
    /**
     * Get an existing BedrockFlowVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BedrockFlowVersionState, opts?: pulumi.CustomResourceOptions): BedrockFlowVersion {
        return new BedrockFlowVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/bedrockFlowVersion:BedrockFlowVersion';

    /**
     * Returns true if the given object is an instance of BedrockFlowVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BedrockFlowVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BedrockFlowVersion.__pulumiType;
    }

    /**
     * Time Stamp.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Flow definition
     */
    public /*out*/ readonly definition!: pulumi.Output<outputs.BedrockFlowVersionDefinition>;
    /**
     * Description of the flow version
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * ARN of a IAM role
     */
    public /*out*/ readonly executionRoleArn!: pulumi.Output<string>;
    /**
     * Arn representation of the Flow
     */
    public readonly flowArn!: pulumi.Output<string>;
    /**
     * Identifier for a Flow
     */
    public /*out*/ readonly flowId!: pulumi.Output<string>;
    /**
     * Name for the flow
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Schema Type for Flow APIs
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Numerical Version.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a BedrockFlowVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BedrockFlowVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BedrockFlowVersionArgs | BedrockFlowVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BedrockFlowVersionState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["definition"] = state ? state.definition : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["executionRoleArn"] = state ? state.executionRoleArn : undefined;
            resourceInputs["flowArn"] = state ? state.flowArn : undefined;
            resourceInputs["flowId"] = state ? state.flowId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as BedrockFlowVersionArgs | undefined;
            if ((!args || args.flowArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flowArn'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["flowArn"] = args ? args.flowArn : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["definition"] = undefined /*out*/;
            resourceInputs["executionRoleArn"] = undefined /*out*/;
            resourceInputs["flowId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BedrockFlowVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BedrockFlowVersion resources.
 */
export interface BedrockFlowVersionState {
    /**
     * Time Stamp.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Flow definition
     */
    definition?: pulumi.Input<inputs.BedrockFlowVersionDefinition>;
    /**
     * Description of the flow version
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of a IAM role
     */
    executionRoleArn?: pulumi.Input<string>;
    /**
     * Arn representation of the Flow
     */
    flowArn?: pulumi.Input<string>;
    /**
     * Identifier for a Flow
     */
    flowId?: pulumi.Input<string>;
    /**
     * Name for the flow
     */
    name?: pulumi.Input<string>;
    /**
     * Schema Type for Flow APIs
     */
    status?: pulumi.Input<string>;
    /**
     * Numerical Version.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BedrockFlowVersion resource.
 */
export interface BedrockFlowVersionArgs {
    /**
     * Description of the flow version
     */
    description?: pulumi.Input<string>;
    /**
     * Arn representation of the Flow
     */
    flowArn: pulumi.Input<string>;
}
