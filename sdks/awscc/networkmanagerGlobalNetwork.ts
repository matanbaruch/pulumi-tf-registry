// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkmanagerGlobalNetwork extends pulumi.CustomResource {
    /**
     * Get an existing NetworkmanagerGlobalNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkmanagerGlobalNetworkState, opts?: pulumi.CustomResourceOptions): NetworkmanagerGlobalNetwork {
        return new NetworkmanagerGlobalNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/networkmanagerGlobalNetwork:NetworkmanagerGlobalNetwork';

    /**
     * Returns true if the given object is an instance of NetworkmanagerGlobalNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkmanagerGlobalNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkmanagerGlobalNetwork.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the global network.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The date and time that the global network was created.
     */
    public readonly createdAt!: pulumi.Output<string>;
    /**
     * The description of the global network.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The ID of the global network.
     */
    public /*out*/ readonly globalNetworkId!: pulumi.Output<string>;
    /**
     * The state of the global network.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * The tags for the global network.
     */
    public readonly tags!: pulumi.Output<outputs.NetworkmanagerGlobalNetworkTag[]>;

    /**
     * Create a NetworkmanagerGlobalNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkmanagerGlobalNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkmanagerGlobalNetworkArgs | NetworkmanagerGlobalNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkmanagerGlobalNetworkState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["globalNetworkId"] = state ? state.globalNetworkId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as NetworkmanagerGlobalNetworkArgs | undefined;
            resourceInputs["createdAt"] = args ? args.createdAt : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["globalNetworkId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkmanagerGlobalNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkmanagerGlobalNetwork resources.
 */
export interface NetworkmanagerGlobalNetworkState {
    /**
     * The Amazon Resource Name (ARN) of the global network.
     */
    arn?: pulumi.Input<string>;
    /**
     * The date and time that the global network was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the global network.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the global network.
     */
    globalNetworkId?: pulumi.Input<string>;
    /**
     * The state of the global network.
     */
    state?: pulumi.Input<string>;
    /**
     * The tags for the global network.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NetworkmanagerGlobalNetworkTag>[]>;
}

/**
 * The set of arguments for constructing a NetworkmanagerGlobalNetwork resource.
 */
export interface NetworkmanagerGlobalNetworkArgs {
    /**
     * The date and time that the global network was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the global network.
     */
    description?: pulumi.Input<string>;
    /**
     * The state of the global network.
     */
    state?: pulumi.Input<string>;
    /**
     * The tags for the global network.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NetworkmanagerGlobalNetworkTag>[]>;
}
