// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEntityresolutionIdNamespace(args: GetEntityresolutionIdNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetEntityresolutionIdNamespaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEntityresolutionIdNamespace:getEntityresolutionIdNamespace", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEntityresolutionIdNamespace.
 */
export interface GetEntityresolutionIdNamespaceArgs {
    id: string;
}

/**
 * A collection of values returned by getEntityresolutionIdNamespace.
 */
export interface GetEntityresolutionIdNamespaceResult {
    readonly createdAt: string;
    readonly description: string;
    readonly id: string;
    readonly idMappingWorkflowProperties: outputs.GetEntityresolutionIdNamespaceIdMappingWorkflowProperty[];
    readonly idNamespaceArn: string;
    readonly idNamespaceName: string;
    readonly inputSourceConfigs: outputs.GetEntityresolutionIdNamespaceInputSourceConfig[];
    readonly roleArn: string;
    readonly tags: outputs.GetEntityresolutionIdNamespaceTag[];
    readonly type: string;
    readonly updatedAt: string;
}
export function getEntityresolutionIdNamespaceOutput(args: GetEntityresolutionIdNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEntityresolutionIdNamespaceResult> {
    return pulumi.output(args).apply((a: any) => getEntityresolutionIdNamespace(a, opts))
}

/**
 * A collection of arguments for invoking getEntityresolutionIdNamespace.
 */
export interface GetEntityresolutionIdNamespaceOutputArgs {
    id: pulumi.Input<string>;
}
