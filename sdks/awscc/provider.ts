// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The provider type for the awscc package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'awscc';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * This is the AWS access key. It must be provided, but it can also be sourced from the `AWS_ACCESS_KEY_ID` environment
     * variable, or via a shared credentials file if `profile` is specified.
     */
    public readonly accessKey!: pulumi.Output<string | undefined>;
    /**
     * URL of a proxy to use for HTTP requests when accessing the AWS API. Can also be set using the `HTTP_PROXY` or
     * `http_proxy` environment variables.
     */
    public readonly httpProxy!: pulumi.Output<string | undefined>;
    /**
     * URL of a proxy to use for HTTPS requests when accessing the AWS API. Can also be set using the `HTTPS_PROXY` or
     * `https_proxy` environment variables.
     */
    public readonly httpsProxy!: pulumi.Output<string | undefined>;
    /**
     * Comma-separated list of hosts that should not use HTTP or HTTPS proxies. Can also be set using the `NO_PROXY` or
     * `no_proxy` environment variables.
     */
    public readonly noProxy!: pulumi.Output<string | undefined>;
    /**
     * This is the AWS profile name as set in the shared credentials file.
     */
    public readonly profile!: pulumi.Output<string | undefined>;
    /**
     * This is the AWS region. It must be provided, but it can also be sourced from the `AWS_DEFAULT_REGION` environment
     * variables, via a shared config file, or from the EC2 Instance Metadata Service if used.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Amazon Resource Name of the AWS CloudFormation service role that is used on your behalf to perform operations.
     */
    public readonly roleArn!: pulumi.Output<string | undefined>;
    /**
     * This is the AWS secret key. It must be provided, but it can also be sourced from the `AWS_SECRET_ACCESS_KEY` environment
     * variable, or via a shared credentials file if `profile` is specified.
     */
    public readonly secretKey!: pulumi.Output<string | undefined>;
    /**
     * Session token for validating temporary credentials. Typically provided after successful identity federation or
     * Multi-Factor Authentication (MFA) login. With MFA login, this is the session token provided afterward, not the 6 digit
     * MFA code used to get temporary credentials. It can also be sourced from the `AWS_SESSION_TOKEN` environment variable.
     */
    public readonly token!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accessKey"] = args ? args.accessKey : undefined;
            resourceInputs["assumeRole"] = pulumi.output(args ? args.assumeRole : undefined).apply(JSON.stringify);
            resourceInputs["assumeRoleWithWebIdentity"] = pulumi.output(args ? args.assumeRoleWithWebIdentity : undefined).apply(JSON.stringify);
            resourceInputs["endpoints"] = pulumi.output(args ? args.endpoints : undefined).apply(JSON.stringify);
            resourceInputs["httpProxy"] = args ? args.httpProxy : undefined;
            resourceInputs["httpsProxy"] = args ? args.httpsProxy : undefined;
            resourceInputs["insecure"] = pulumi.output(args ? args.insecure : undefined).apply(JSON.stringify);
            resourceInputs["maxRetries"] = pulumi.output(args ? args.maxRetries : undefined).apply(JSON.stringify);
            resourceInputs["noProxy"] = args ? args.noProxy : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["secretKey"] = args ? args.secretKey : undefined;
            resourceInputs["sharedConfigFiles"] = pulumi.output(args ? args.sharedConfigFiles : undefined).apply(JSON.stringify);
            resourceInputs["sharedCredentialsFiles"] = pulumi.output(args ? args.sharedCredentialsFiles : undefined).apply(JSON.stringify);
            resourceInputs["skipMedatadataApiCheck"] = pulumi.output(args ? args.skipMedatadataApiCheck : undefined).apply(JSON.stringify);
            resourceInputs["skipMetadataApiCheck"] = pulumi.output(args ? args.skipMetadataApiCheck : undefined).apply(JSON.stringify);
            resourceInputs["token"] = args ? args.token : undefined;
            resourceInputs["userAgents"] = pulumi.output(args ? args.userAgents : undefined).apply(JSON.stringify);
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * This is the AWS access key. It must be provided, but it can also be sourced from the `AWS_ACCESS_KEY_ID` environment
     * variable, or via a shared credentials file if `profile` is specified.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * An `assume_role` block (documented below). Only one `assume_role` block may be in the configuration.
     */
    assumeRole?: pulumi.Input<inputs.ProviderAssumeRole>;
    /**
     * An `assume_role_with_web_identity` block (documented below). Only one `assume_role_with_web_identity` block may be in
     * the configuration.
     */
    assumeRoleWithWebIdentity?: pulumi.Input<inputs.ProviderAssumeRoleWithWebIdentity>;
    /**
     * An `endpoints` block (documented below). Only one `endpoints` block may be in the configuration.
     */
    endpoints?: pulumi.Input<inputs.ProviderEndpoints>;
    /**
     * URL of a proxy to use for HTTP requests when accessing the AWS API. Can also be set using the `HTTP_PROXY` or
     * `http_proxy` environment variables.
     */
    httpProxy?: pulumi.Input<string>;
    /**
     * URL of a proxy to use for HTTPS requests when accessing the AWS API. Can also be set using the `HTTPS_PROXY` or
     * `https_proxy` environment variables.
     */
    httpsProxy?: pulumi.Input<string>;
    /**
     * Explicitly allow the provider to perform "insecure" SSL requests. If not set, defaults to `false`.
     */
    insecure?: pulumi.Input<boolean>;
    /**
     * The maximum number of times an AWS API request is retried on failure. If not set, defaults to 25.
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * Comma-separated list of hosts that should not use HTTP or HTTPS proxies. Can also be set using the `NO_PROXY` or
     * `no_proxy` environment variables.
     */
    noProxy?: pulumi.Input<string>;
    /**
     * This is the AWS profile name as set in the shared credentials file.
     */
    profile?: pulumi.Input<string>;
    /**
     * This is the AWS region. It must be provided, but it can also be sourced from the `AWS_DEFAULT_REGION` environment
     * variables, via a shared config file, or from the EC2 Instance Metadata Service if used.
     */
    region?: pulumi.Input<string>;
    /**
     * Amazon Resource Name of the AWS CloudFormation service role that is used on your behalf to perform operations.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * This is the AWS secret key. It must be provided, but it can also be sourced from the `AWS_SECRET_ACCESS_KEY` environment
     * variable, or via a shared credentials file if `profile` is specified.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * List of paths to shared config files. If not set, defaults to `~/.aws/config`.
     */
    sharedConfigFiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of paths to shared credentials files. If not set, defaults to `~/.aws/credentials`.
     */
    sharedCredentialsFiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * @deprecated Deprecated
     */
    skipMedatadataApiCheck?: pulumi.Input<boolean>;
    skipMetadataApiCheck?: pulumi.Input<boolean>;
    /**
     * Session token for validating temporary credentials. Typically provided after successful identity federation or
     * Multi-Factor Authentication (MFA) login. With MFA login, this is the session token provided afterward, not the 6 digit
     * MFA code used to get temporary credentials. It can also be sourced from the `AWS_SESSION_TOKEN` environment variable.
     */
    token?: pulumi.Input<string>;
    /**
     * Product details to append to User-Agent string in all AWS API calls.
     */
    userAgents?: pulumi.Input<pulumi.Input<inputs.ProviderUserAgent>[]>;
}
