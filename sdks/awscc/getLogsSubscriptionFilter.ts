// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogsSubscriptionFilter(args: GetLogsSubscriptionFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsSubscriptionFilterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLogsSubscriptionFilter:getLogsSubscriptionFilter", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogsSubscriptionFilter.
 */
export interface GetLogsSubscriptionFilterArgs {
    id: string;
}

/**
 * A collection of values returned by getLogsSubscriptionFilter.
 */
export interface GetLogsSubscriptionFilterResult {
    readonly destinationArn: string;
    readonly distribution: string;
    readonly filterName: string;
    readonly filterPattern: string;
    readonly id: string;
    readonly logGroupName: string;
    readonly roleArn: string;
}
export function getLogsSubscriptionFilterOutput(args: GetLogsSubscriptionFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogsSubscriptionFilterResult> {
    return pulumi.output(args).apply((a: any) => getLogsSubscriptionFilter(a, opts))
}

/**
 * A collection of arguments for invoking getLogsSubscriptionFilter.
 */
export interface GetLogsSubscriptionFilterOutputArgs {
    id: pulumi.Input<string>;
}
