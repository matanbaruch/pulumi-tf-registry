// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkspaceswebPortal(args: GetWorkspaceswebPortalArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceswebPortalResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWorkspaceswebPortal:getWorkspaceswebPortal", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspaceswebPortal.
 */
export interface GetWorkspaceswebPortalArgs {
    id: string;
}

/**
 * A collection of values returned by getWorkspaceswebPortal.
 */
export interface GetWorkspaceswebPortalResult {
    readonly additionalEncryptionContext: {[key: string]: string};
    readonly authenticationType: string;
    readonly browserSettingsArn: string;
    readonly browserType: string;
    readonly creationDate: string;
    readonly customerManagedKey: string;
    readonly displayName: string;
    readonly id: string;
    readonly instanceType: string;
    readonly ipAccessSettingsArn: string;
    readonly maxConcurrentSessions: number;
    readonly networkSettingsArn: string;
    readonly portalArn: string;
    readonly portalEndpoint: string;
    readonly portalStatus: string;
    readonly rendererType: string;
    readonly serviceProviderSamlMetadata: string;
    readonly statusReason: string;
    readonly tags: outputs.GetWorkspaceswebPortalTag[];
    readonly trustStoreArn: string;
    readonly userAccessLoggingSettingsArn: string;
    readonly userSettingsArn: string;
}
export function getWorkspaceswebPortalOutput(args: GetWorkspaceswebPortalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceswebPortalResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceswebPortal(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceswebPortal.
 */
export interface GetWorkspaceswebPortalOutputArgs {
    id: pulumi.Input<string>;
}
