// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSsoPermissionSet(args: GetSsoPermissionSetArgs, opts?: pulumi.InvokeOptions): Promise<GetSsoPermissionSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSsoPermissionSet:getSsoPermissionSet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSsoPermissionSet.
 */
export interface GetSsoPermissionSetArgs {
    id: string;
}

/**
 * A collection of values returned by getSsoPermissionSet.
 */
export interface GetSsoPermissionSetResult {
    readonly customerManagedPolicyReferences: outputs.GetSsoPermissionSetCustomerManagedPolicyReference[];
    readonly description: string;
    readonly id: string;
    readonly inlinePolicy: string;
    readonly instanceArn: string;
    readonly managedPolicies: string[];
    readonly name: string;
    readonly permissionSetArn: string;
    readonly permissionsBoundary: outputs.GetSsoPermissionSetPermissionsBoundary;
    readonly relayStateType: string;
    readonly sessionDuration: string;
    readonly tags: outputs.GetSsoPermissionSetTag[];
}
export function getSsoPermissionSetOutput(args: GetSsoPermissionSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSsoPermissionSetResult> {
    return pulumi.output(args).apply((a: any) => getSsoPermissionSet(a, opts))
}

/**
 * A collection of arguments for invoking getSsoPermissionSet.
 */
export interface GetSsoPermissionSetOutputArgs {
    id: pulumi.Input<string>;
}
