// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CustomerprofilesEventStream extends pulumi.CustomResource {
    /**
     * Get an existing CustomerprofilesEventStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomerprofilesEventStreamState, opts?: pulumi.CustomResourceOptions): CustomerprofilesEventStream {
        return new CustomerprofilesEventStream(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/customerprofilesEventStream:CustomerprofilesEventStream';

    /**
     * Returns true if the given object is an instance of CustomerprofilesEventStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomerprofilesEventStream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerprofilesEventStream.__pulumiType;
    }

    /**
     * The timestamp of when the export was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Details regarding the Kinesis stream.
     */
    public /*out*/ readonly destinationDetails!: pulumi.Output<outputs.CustomerprofilesEventStreamDestinationDetails>;
    /**
     * The unique name of the domain.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * A unique identifier for the event stream.
     */
    public /*out*/ readonly eventStreamArn!: pulumi.Output<string>;
    /**
     * The name of the event stream.
     */
    public readonly eventStreamName!: pulumi.Output<string>;
    /**
     * The operational state of destination stream for export.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    public readonly tags!: pulumi.Output<outputs.CustomerprofilesEventStreamTag[]>;
    /**
     * The StreamARN of the destination to deliver profile events to. For example,
     * arn:aws:kinesis:region:account-id:stream/stream-name
     */
    public readonly uri!: pulumi.Output<string>;

    /**
     * Create a CustomerprofilesEventStream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomerprofilesEventStreamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomerprofilesEventStreamArgs | CustomerprofilesEventStreamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomerprofilesEventStreamState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["destinationDetails"] = state ? state.destinationDetails : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["eventStreamArn"] = state ? state.eventStreamArn : undefined;
            resourceInputs["eventStreamName"] = state ? state.eventStreamName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as CustomerprofilesEventStreamArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.eventStreamName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventStreamName'");
            }
            if ((!args || args.uri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'uri'");
            }
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["eventStreamName"] = args ? args.eventStreamName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["uri"] = args ? args.uri : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["destinationDetails"] = undefined /*out*/;
            resourceInputs["eventStreamArn"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomerprofilesEventStream.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CustomerprofilesEventStream resources.
 */
export interface CustomerprofilesEventStreamState {
    /**
     * The timestamp of when the export was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Details regarding the Kinesis stream.
     */
    destinationDetails?: pulumi.Input<inputs.CustomerprofilesEventStreamDestinationDetails>;
    /**
     * The unique name of the domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * A unique identifier for the event stream.
     */
    eventStreamArn?: pulumi.Input<string>;
    /**
     * The name of the event stream.
     */
    eventStreamName?: pulumi.Input<string>;
    /**
     * The operational state of destination stream for export.
     */
    state?: pulumi.Input<string>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesEventStreamTag>[]>;
    /**
     * The StreamARN of the destination to deliver profile events to. For example,
     * arn:aws:kinesis:region:account-id:stream/stream-name
     */
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomerprofilesEventStream resource.
 */
export interface CustomerprofilesEventStreamArgs {
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * The name of the event stream.
     */
    eventStreamName: pulumi.Input<string>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesEventStreamTag>[]>;
    /**
     * The StreamARN of the destination to deliver profile events to. For example,
     * arn:aws:kinesis:region:account-id:stream/stream-name
     */
    uri: pulumi.Input<string>;
}
