// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getM2Application(args: GetM2ApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetM2ApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getM2Application:getM2Application", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getM2Application.
 */
export interface GetM2ApplicationArgs {
    id: string;
}

/**
 * A collection of values returned by getM2Application.
 */
export interface GetM2ApplicationResult {
    readonly applicationArn: string;
    readonly applicationId: string;
    readonly definition: outputs.GetM2ApplicationDefinition;
    readonly description: string;
    readonly engineType: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly name: string;
    readonly roleArn: string;
    readonly tags: {[key: string]: string};
}
export function getM2ApplicationOutput(args: GetM2ApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetM2ApplicationResult> {
    return pulumi.output(args).apply((a: any) => getM2Application(a, opts))
}

/**
 * A collection of arguments for invoking getM2Application.
 */
export interface GetM2ApplicationOutputArgs {
    id: pulumi.Input<string>;
}
