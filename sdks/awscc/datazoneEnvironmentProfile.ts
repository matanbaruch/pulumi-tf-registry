// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatazoneEnvironmentProfile extends pulumi.CustomResource {
    /**
     * Get an existing DatazoneEnvironmentProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatazoneEnvironmentProfileState, opts?: pulumi.CustomResourceOptions): DatazoneEnvironmentProfile {
        return new DatazoneEnvironmentProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/datazoneEnvironmentProfile:DatazoneEnvironmentProfile';

    /**
     * Returns true if the given object is an instance of DatazoneEnvironmentProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatazoneEnvironmentProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatazoneEnvironmentProfile.__pulumiType;
    }

    /**
     * The AWS account in which the Amazon DataZone environment is created.
     */
    public readonly awsAccountId!: pulumi.Output<string>;
    /**
     * The AWS region in which this environment profile is created.
     */
    public readonly awsAccountRegion!: pulumi.Output<string>;
    /**
     * The timestamp of when this environment profile was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The Amazon DataZone user who created this environment profile.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The description of this Amazon DataZone environment profile.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain in which this environment profile is created.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain in which this environment profile is created.
     */
    public readonly domainIdentifier!: pulumi.Output<string>;
    /**
     * The ID of the blueprint with which this environment profile is created.
     */
    public /*out*/ readonly environmentBlueprintId!: pulumi.Output<string>;
    /**
     * The ID of the blueprint with which this environment profile is created.
     */
    public readonly environmentBlueprintIdentifier!: pulumi.Output<string>;
    /**
     * The ID of this Amazon DataZone environment profile.
     */
    public /*out*/ readonly environmentProfileId!: pulumi.Output<string>;
    /**
     * The name of this Amazon DataZone environment profile.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The identifier of the project in which to create the environment profile.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * The identifier of the project in which to create the environment profile.
     */
    public readonly projectIdentifier!: pulumi.Output<string>;
    /**
     * The timestamp of when this environment profile was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The user parameters of this Amazon DataZone environment profile.
     */
    public readonly userParameters!: pulumi.Output<outputs.DatazoneEnvironmentProfileUserParameter[]>;

    /**
     * Create a DatazoneEnvironmentProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatazoneEnvironmentProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatazoneEnvironmentProfileArgs | DatazoneEnvironmentProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatazoneEnvironmentProfileState | undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["awsAccountRegion"] = state ? state.awsAccountRegion : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["domainIdentifier"] = state ? state.domainIdentifier : undefined;
            resourceInputs["environmentBlueprintId"] = state ? state.environmentBlueprintId : undefined;
            resourceInputs["environmentBlueprintIdentifier"] = state ? state.environmentBlueprintIdentifier : undefined;
            resourceInputs["environmentProfileId"] = state ? state.environmentProfileId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["projectIdentifier"] = state ? state.projectIdentifier : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["userParameters"] = state ? state.userParameters : undefined;
        } else {
            const args = argsOrState as DatazoneEnvironmentProfileArgs | undefined;
            if ((!args || args.awsAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsAccountId'");
            }
            if ((!args || args.awsAccountRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsAccountRegion'");
            }
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.environmentBlueprintIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentBlueprintIdentifier'");
            }
            if ((!args || args.projectIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectIdentifier'");
            }
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["awsAccountRegion"] = args ? args.awsAccountRegion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["environmentBlueprintIdentifier"] = args ? args.environmentBlueprintIdentifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectIdentifier"] = args ? args.projectIdentifier : undefined;
            resourceInputs["userParameters"] = args ? args.userParameters : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["environmentBlueprintId"] = undefined /*out*/;
            resourceInputs["environmentProfileId"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatazoneEnvironmentProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatazoneEnvironmentProfile resources.
 */
export interface DatazoneEnvironmentProfileState {
    /**
     * The AWS account in which the Amazon DataZone environment is created.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * The AWS region in which this environment profile is created.
     */
    awsAccountRegion?: pulumi.Input<string>;
    /**
     * The timestamp of when this environment profile was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The Amazon DataZone user who created this environment profile.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The description of this Amazon DataZone environment profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain in which this environment profile is created.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain in which this environment profile is created.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * The ID of the blueprint with which this environment profile is created.
     */
    environmentBlueprintId?: pulumi.Input<string>;
    /**
     * The ID of the blueprint with which this environment profile is created.
     */
    environmentBlueprintIdentifier?: pulumi.Input<string>;
    /**
     * The ID of this Amazon DataZone environment profile.
     */
    environmentProfileId?: pulumi.Input<string>;
    /**
     * The name of this Amazon DataZone environment profile.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the project in which to create the environment profile.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The identifier of the project in which to create the environment profile.
     */
    projectIdentifier?: pulumi.Input<string>;
    /**
     * The timestamp of when this environment profile was updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The user parameters of this Amazon DataZone environment profile.
     */
    userParameters?: pulumi.Input<pulumi.Input<inputs.DatazoneEnvironmentProfileUserParameter>[]>;
}

/**
 * The set of arguments for constructing a DatazoneEnvironmentProfile resource.
 */
export interface DatazoneEnvironmentProfileArgs {
    /**
     * The AWS account in which the Amazon DataZone environment is created.
     */
    awsAccountId: pulumi.Input<string>;
    /**
     * The AWS region in which this environment profile is created.
     */
    awsAccountRegion: pulumi.Input<string>;
    /**
     * The description of this Amazon DataZone environment profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain in which this environment profile is created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The ID of the blueprint with which this environment profile is created.
     */
    environmentBlueprintIdentifier: pulumi.Input<string>;
    /**
     * The name of this Amazon DataZone environment profile.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the project in which to create the environment profile.
     */
    projectIdentifier: pulumi.Input<string>;
    /**
     * The user parameters of this Amazon DataZone environment profile.
     */
    userParameters?: pulumi.Input<pulumi.Input<inputs.DatazoneEnvironmentProfileUserParameter>[]>;
}
