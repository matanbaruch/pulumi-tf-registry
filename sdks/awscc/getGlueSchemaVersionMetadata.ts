// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGlueSchemaVersionMetadata(args: GetGlueSchemaVersionMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetGlueSchemaVersionMetadataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlueSchemaVersionMetadata:getGlueSchemaVersionMetadata", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlueSchemaVersionMetadata.
 */
export interface GetGlueSchemaVersionMetadataArgs {
    id: string;
}

/**
 * A collection of values returned by getGlueSchemaVersionMetadata.
 */
export interface GetGlueSchemaVersionMetadataResult {
    readonly id: string;
    readonly key: string;
    readonly schemaVersionId: string;
    readonly value: string;
}
export function getGlueSchemaVersionMetadataOutput(args: GetGlueSchemaVersionMetadataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlueSchemaVersionMetadataResult> {
    return pulumi.output(args).apply((a: any) => getGlueSchemaVersionMetadata(a, opts))
}

/**
 * A collection of arguments for invoking getGlueSchemaVersionMetadata.
 */
export interface GetGlueSchemaVersionMetadataOutputArgs {
    id: pulumi.Input<string>;
}
