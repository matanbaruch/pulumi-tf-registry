// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2Host(args: GetEc2HostArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2HostResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2Host:getEc2Host", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2Host.
 */
export interface GetEc2HostArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2Host.
 */
export interface GetEc2HostResult {
    readonly assetId: string;
    readonly autoPlacement: string;
    readonly availabilityZone: string;
    readonly hostId: string;
    readonly hostMaintenance: string;
    readonly hostRecovery: string;
    readonly id: string;
    readonly instanceFamily: string;
    readonly instanceType: string;
    readonly outpostArn: string;
}
export function getEc2HostOutput(args: GetEc2HostOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2HostResult> {
    return pulumi.output(args).apply((a: any) => getEc2Host(a, opts))
}

/**
 * A collection of arguments for invoking getEc2Host.
 */
export interface GetEc2HostOutputArgs {
    id: pulumi.Input<string>;
}
