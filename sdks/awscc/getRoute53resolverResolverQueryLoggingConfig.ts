// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRoute53resolverResolverQueryLoggingConfig(args: GetRoute53resolverResolverQueryLoggingConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53resolverResolverQueryLoggingConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRoute53resolverResolverQueryLoggingConfig:getRoute53resolverResolverQueryLoggingConfig", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53resolverResolverQueryLoggingConfig.
 */
export interface GetRoute53resolverResolverQueryLoggingConfigArgs {
    id: string;
}

/**
 * A collection of values returned by getRoute53resolverResolverQueryLoggingConfig.
 */
export interface GetRoute53resolverResolverQueryLoggingConfigResult {
    readonly arn: string;
    readonly associationCount: number;
    readonly creationTime: string;
    readonly creatorRequestId: string;
    readonly destinationArn: string;
    readonly id: string;
    readonly name: string;
    readonly ownerId: string;
    readonly resolverQueryLoggingConfigId: string;
    readonly shareStatus: string;
    readonly status: string;
}
export function getRoute53resolverResolverQueryLoggingConfigOutput(args: GetRoute53resolverResolverQueryLoggingConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53resolverResolverQueryLoggingConfigResult> {
    return pulumi.output(args).apply((a: any) => getRoute53resolverResolverQueryLoggingConfig(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53resolverResolverQueryLoggingConfig.
 */
export interface GetRoute53resolverResolverQueryLoggingConfigOutputArgs {
    id: pulumi.Input<string>;
}
