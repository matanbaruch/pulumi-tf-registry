// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class S3expressDirectoryBucket extends pulumi.CustomResource {
    /**
     * Get an existing S3expressDirectoryBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3expressDirectoryBucketState, opts?: pulumi.CustomResourceOptions): S3expressDirectoryBucket {
        return new S3expressDirectoryBucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/s3expressDirectoryBucket:S3expressDirectoryBucket';

    /**
     * Returns true if the given object is an instance of S3expressDirectoryBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3expressDirectoryBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3expressDirectoryBucket.__pulumiType;
    }

    /**
     * Returns the Amazon Resource Name (ARN) of the specified bucket.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A
     * directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format
     * 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS
     * CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    public readonly bucketName!: pulumi.Output<string>;
    /**
     * Specifies the number of Availability Zone that's used for redundancy for the bucket.
     */
    public readonly dataRedundancy!: pulumi.Output<string>;
    /**
     * Specifies the AZ ID of the Availability Zone where the directory bucket will be created. An example AZ ID value is
     * 'use1-az5'.
     */
    public readonly locationName!: pulumi.Output<string>;

    /**
     * Create a S3expressDirectoryBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3expressDirectoryBucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3expressDirectoryBucketArgs | S3expressDirectoryBucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3expressDirectoryBucketState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["bucketName"] = state ? state.bucketName : undefined;
            resourceInputs["dataRedundancy"] = state ? state.dataRedundancy : undefined;
            resourceInputs["locationName"] = state ? state.locationName : undefined;
        } else {
            const args = argsOrState as S3expressDirectoryBucketArgs | undefined;
            if ((!args || args.dataRedundancy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataRedundancy'");
            }
            if ((!args || args.locationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'locationName'");
            }
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["dataRedundancy"] = args ? args.dataRedundancy : undefined;
            resourceInputs["locationName"] = args ? args.locationName : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3expressDirectoryBucket.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering S3expressDirectoryBucket resources.
 */
export interface S3expressDirectoryBucketState {
    /**
     * Returns the Amazon Resource Name (ARN) of the specified bucket.
     */
    arn?: pulumi.Input<string>;
    /**
     * Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A
     * directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format
     * 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS
     * CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Specifies the number of Availability Zone that's used for redundancy for the bucket.
     */
    dataRedundancy?: pulumi.Input<string>;
    /**
     * Specifies the AZ ID of the Availability Zone where the directory bucket will be created. An example AZ ID value is
     * 'use1-az5'.
     */
    locationName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a S3expressDirectoryBucket resource.
 */
export interface S3expressDirectoryBucketArgs {
    /**
     * Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A
     * directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format
     * 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS
     * CloudFormation generates a unique physical ID and uses that ID for the bucket name.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Specifies the number of Availability Zone that's used for redundancy for the bucket.
     */
    dataRedundancy: pulumi.Input<string>;
    /**
     * Specifies the AZ ID of the Availability Zone where the directory bucket will be created. An example AZ ID value is
     * 'use1-az5'.
     */
    locationName: pulumi.Input<string>;
}
