// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApigatewayv2Route(args: GetApigatewayv2RouteArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayv2RouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayv2Route:getApigatewayv2Route", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayv2Route.
 */
export interface GetApigatewayv2RouteArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayv2Route.
 */
export interface GetApigatewayv2RouteResult {
    readonly apiId: string;
    readonly apiKeyRequired: boolean;
    readonly authorizationScopes: string[];
    readonly authorizationType: string;
    readonly authorizerId: string;
    readonly id: string;
    readonly modelSelectionExpression: string;
    readonly operationName: string;
    readonly requestModels: string;
    readonly requestParameters: string;
    readonly routeId: string;
    readonly routeKey: string;
    readonly routeResponseSelectionExpression: string;
    readonly target: string;
}
export function getApigatewayv2RouteOutput(args: GetApigatewayv2RouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayv2RouteResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayv2Route(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayv2Route.
 */
export interface GetApigatewayv2RouteOutputArgs {
    id: pulumi.Input<string>;
}
