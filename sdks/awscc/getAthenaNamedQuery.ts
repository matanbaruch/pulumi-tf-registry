// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAthenaNamedQuery(args: GetAthenaNamedQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetAthenaNamedQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getAthenaNamedQuery:getAthenaNamedQuery", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAthenaNamedQuery.
 */
export interface GetAthenaNamedQueryArgs {
    id: string;
}

/**
 * A collection of values returned by getAthenaNamedQuery.
 */
export interface GetAthenaNamedQueryResult {
    readonly database: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly namedQueryId: string;
    readonly queryString: string;
    readonly workGroup: string;
}
export function getAthenaNamedQueryOutput(args: GetAthenaNamedQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAthenaNamedQueryResult> {
    return pulumi.output(args).apply((a: any) => getAthenaNamedQuery(a, opts))
}

/**
 * A collection of arguments for invoking getAthenaNamedQuery.
 */
export interface GetAthenaNamedQueryOutputArgs {
    id: pulumi.Input<string>;
}
