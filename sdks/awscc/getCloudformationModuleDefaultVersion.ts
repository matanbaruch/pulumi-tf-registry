// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudformationModuleDefaultVersion(args: GetCloudformationModuleDefaultVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationModuleDefaultVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudformationModuleDefaultVersion:getCloudformationModuleDefaultVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationModuleDefaultVersion.
 */
export interface GetCloudformationModuleDefaultVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudformationModuleDefaultVersion.
 */
export interface GetCloudformationModuleDefaultVersionResult {
    readonly arn: string;
    readonly id: string;
    readonly moduleName: string;
    readonly versionId: string;
}
export function getCloudformationModuleDefaultVersionOutput(args: GetCloudformationModuleDefaultVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationModuleDefaultVersionResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationModuleDefaultVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationModuleDefaultVersion.
 */
export interface GetCloudformationModuleDefaultVersionOutputArgs {
    id: pulumi.Input<string>;
}
