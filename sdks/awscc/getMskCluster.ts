// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMskCluster(args: GetMskClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMskClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMskCluster:getMskCluster", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMskCluster.
 */
export interface GetMskClusterArgs {
    id: string;
}

/**
 * A collection of values returned by getMskCluster.
 */
export interface GetMskClusterResult {
    readonly arn: string;
    readonly brokerNodeGroupInfo: outputs.GetMskClusterBrokerNodeGroupInfo;
    readonly clientAuthentication: outputs.GetMskClusterClientAuthentication;
    readonly clusterName: string;
    readonly configurationInfo: outputs.GetMskClusterConfigurationInfo;
    readonly currentVersion: string;
    readonly encryptionInfo: outputs.GetMskClusterEncryptionInfo;
    readonly enhancedMonitoring: string;
    readonly id: string;
    readonly kafkaVersion: string;
    readonly loggingInfo: outputs.GetMskClusterLoggingInfo;
    readonly numberOfBrokerNodes: number;
    readonly openMonitoring: outputs.GetMskClusterOpenMonitoring;
    readonly storageMode: string;
    readonly tags: {[key: string]: string};
}
export function getMskClusterOutput(args: GetMskClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMskClusterResult> {
    return pulumi.output(args).apply((a: any) => getMskCluster(a, opts))
}

/**
 * A collection of arguments for invoking getMskCluster.
 */
export interface GetMskClusterOutputArgs {
    id: pulumi.Input<string>;
}
