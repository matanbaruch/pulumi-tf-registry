// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPcaconnectoradTemplate(args: GetPcaconnectoradTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetPcaconnectoradTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getPcaconnectoradTemplate:getPcaconnectoradTemplate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPcaconnectoradTemplate.
 */
export interface GetPcaconnectoradTemplateArgs {
    id: string;
}

/**
 * A collection of values returned by getPcaconnectoradTemplate.
 */
export interface GetPcaconnectoradTemplateResult {
    readonly connectorArn: string;
    readonly definition: outputs.GetPcaconnectoradTemplateDefinition;
    readonly id: string;
    readonly name: string;
    readonly reenrollAllCertificateHolders: boolean;
    readonly tags: {[key: string]: string};
    readonly templateArn: string;
}
export function getPcaconnectoradTemplateOutput(args: GetPcaconnectoradTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPcaconnectoradTemplateResult> {
    return pulumi.output(args).apply((a: any) => getPcaconnectoradTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getPcaconnectoradTemplate.
 */
export interface GetPcaconnectoradTemplateOutputArgs {
    id: pulumi.Input<string>;
}
