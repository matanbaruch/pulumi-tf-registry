// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRoute53KeySigningKey(args: GetRoute53KeySigningKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53KeySigningKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRoute53KeySigningKey:getRoute53KeySigningKey", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53KeySigningKey.
 */
export interface GetRoute53KeySigningKeyArgs {
    id: string;
}

/**
 * A collection of values returned by getRoute53KeySigningKey.
 */
export interface GetRoute53KeySigningKeyResult {
    readonly hostedZoneId: string;
    readonly id: string;
    readonly keyManagementServiceArn: string;
    readonly name: string;
    readonly status: string;
}
export function getRoute53KeySigningKeyOutput(args: GetRoute53KeySigningKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53KeySigningKeyResult> {
    return pulumi.output(args).apply((a: any) => getRoute53KeySigningKey(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53KeySigningKey.
 */
export interface GetRoute53KeySigningKeyOutputArgs {
    id: pulumi.Input<string>;
}
