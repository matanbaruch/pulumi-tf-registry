// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectInstance(args: GetConnectInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConnectInstance:getConnectInstance", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectInstance.
 */
export interface GetConnectInstanceArgs {
    id: string;
}

/**
 * A collection of values returned by getConnectInstance.
 */
export interface GetConnectInstanceResult {
    readonly arn: string;
    readonly attributes: outputs.GetConnectInstanceAttributes;
    readonly createdTime: string;
    readonly directoryId: string;
    readonly id: string;
    readonly identityManagementType: string;
    readonly instanceAlias: string;
    readonly instanceId: string;
    readonly instanceStatus: string;
    readonly serviceRole: string;
    readonly tags: outputs.GetConnectInstanceTag[];
}
export function getConnectInstanceOutput(args: GetConnectInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectInstanceResult> {
    return pulumi.output(args).apply((a: any) => getConnectInstance(a, opts))
}

/**
 * A collection of arguments for invoking getConnectInstance.
 */
export interface GetConnectInstanceOutputArgs {
    id: pulumi.Input<string>;
}
