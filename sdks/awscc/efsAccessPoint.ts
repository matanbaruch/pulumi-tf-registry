// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EfsAccessPoint extends pulumi.CustomResource {
    /**
     * Get an existing EfsAccessPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EfsAccessPointState, opts?: pulumi.CustomResourceOptions): EfsAccessPoint {
        return new EfsAccessPoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/efsAccessPoint:EfsAccessPoint';

    /**
     * Returns true if the given object is an instance of EfsAccessPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EfsAccessPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EfsAccessPoint.__pulumiType;
    }

    public /*out*/ readonly accessPointId!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    public readonly accessPointTags!: pulumi.Output<outputs.EfsAccessPointAccessPointTag[]>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The opaque string specified in the request to ensure idempotent creation.
     */
    public readonly clientToken!: pulumi.Output<string>;
    /**
     * The ID of the EFS file system that the access point applies to. Accepts only the ID format for input when specifying a
     * file system, for example ``fs-0123456789abcedf2``.
     */
    public readonly fileSystemId!: pulumi.Output<string>;
    /**
     * The full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point that is used for
     * all file operations by NFS clients using the access point.
     */
    public readonly posixUser!: pulumi.Output<outputs.EfsAccessPointPosixUser>;
    /**
     * The directory on the EFS file system that the access point exposes as the root directory to NFS clients using the access
     * point.
     */
    public readonly rootDirectory!: pulumi.Output<outputs.EfsAccessPointRootDirectory>;

    /**
     * Create a EfsAccessPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EfsAccessPointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EfsAccessPointArgs | EfsAccessPointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EfsAccessPointState | undefined;
            resourceInputs["accessPointId"] = state ? state.accessPointId : undefined;
            resourceInputs["accessPointTags"] = state ? state.accessPointTags : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["posixUser"] = state ? state.posixUser : undefined;
            resourceInputs["rootDirectory"] = state ? state.rootDirectory : undefined;
        } else {
            const args = argsOrState as EfsAccessPointArgs | undefined;
            if ((!args || args.fileSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemId'");
            }
            resourceInputs["accessPointTags"] = args ? args.accessPointTags : undefined;
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["posixUser"] = args ? args.posixUser : undefined;
            resourceInputs["rootDirectory"] = args ? args.rootDirectory : undefined;
            resourceInputs["accessPointId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EfsAccessPoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EfsAccessPoint resources.
 */
export interface EfsAccessPointState {
    accessPointId?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    accessPointTags?: pulumi.Input<pulumi.Input<inputs.EfsAccessPointAccessPointTag>[]>;
    arn?: pulumi.Input<string>;
    /**
     * The opaque string specified in the request to ensure idempotent creation.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The ID of the EFS file system that the access point applies to. Accepts only the ID format for input when specifying a
     * file system, for example ``fs-0123456789abcedf2``.
     */
    fileSystemId?: pulumi.Input<string>;
    /**
     * The full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point that is used for
     * all file operations by NFS clients using the access point.
     */
    posixUser?: pulumi.Input<inputs.EfsAccessPointPosixUser>;
    /**
     * The directory on the EFS file system that the access point exposes as the root directory to NFS clients using the access
     * point.
     */
    rootDirectory?: pulumi.Input<inputs.EfsAccessPointRootDirectory>;
}

/**
 * The set of arguments for constructing a EfsAccessPoint resource.
 */
export interface EfsAccessPointArgs {
    /**
     * An array of key-value pairs to apply to this resource. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    accessPointTags?: pulumi.Input<pulumi.Input<inputs.EfsAccessPointAccessPointTag>[]>;
    /**
     * The opaque string specified in the request to ensure idempotent creation.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The ID of the EFS file system that the access point applies to. Accepts only the ID format for input when specifying a
     * file system, for example ``fs-0123456789abcedf2``.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * The full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point that is used for
     * all file operations by NFS clients using the access point.
     */
    posixUser?: pulumi.Input<inputs.EfsAccessPointPosixUser>;
    /**
     * The directory on the EFS file system that the access point exposes as the root directory to NFS clients using the access
     * point.
     */
    rootDirectory?: pulumi.Input<inputs.EfsAccessPointRootDirectory>;
}
