// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Route53profilesProfileResourceAssociation extends pulumi.CustomResource {
    /**
     * Get an existing Route53profilesProfileResourceAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53profilesProfileResourceAssociationState, opts?: pulumi.CustomResourceOptions): Route53profilesProfileResourceAssociation {
        return new Route53profilesProfileResourceAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/route53profilesProfileResourceAssociation:Route53profilesProfileResourceAssociation';

    /**
     * Returns true if the given object is an instance of Route53profilesProfileResourceAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53profilesProfileResourceAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53profilesProfileResourceAssociation.__pulumiType;
    }

    /**
     * The name of an association between the Profile and resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the profile that you associated the resource to that is specified by ResourceArn.
     */
    public readonly profileId!: pulumi.Output<string>;
    /**
     * Primary Identifier for Profile Resource Association
     */
    public /*out*/ readonly profileResourceAssociationId!: pulumi.Output<string>;
    /**
     * The arn of the resource that you associated to the Profile.
     */
    public readonly resourceArn!: pulumi.Output<string>;
    /**
     * A JSON-formatted string with key-value pairs specifying the properties of the associated resource.
     */
    public readonly resourceProperties!: pulumi.Output<string>;
    /**
     * The type of the resource associated to the Profile.
     */
    public /*out*/ readonly resourceType!: pulumi.Output<string>;

    /**
     * Create a Route53profilesProfileResourceAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Route53profilesProfileResourceAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53profilesProfileResourceAssociationArgs | Route53profilesProfileResourceAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53profilesProfileResourceAssociationState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
            resourceInputs["profileResourceAssociationId"] = state ? state.profileResourceAssociationId : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["resourceProperties"] = state ? state.resourceProperties : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
        } else {
            const args = argsOrState as Route53profilesProfileResourceAssociationArgs | undefined;
            if ((!args || args.profileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profileId'");
            }
            if ((!args || args.resourceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profileId"] = args ? args.profileId : undefined;
            resourceInputs["resourceArn"] = args ? args.resourceArn : undefined;
            resourceInputs["resourceProperties"] = args ? args.resourceProperties : undefined;
            resourceInputs["profileResourceAssociationId"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53profilesProfileResourceAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53profilesProfileResourceAssociation resources.
 */
export interface Route53profilesProfileResourceAssociationState {
    /**
     * The name of an association between the Profile and resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the profile that you associated the resource to that is specified by ResourceArn.
     */
    profileId?: pulumi.Input<string>;
    /**
     * Primary Identifier for Profile Resource Association
     */
    profileResourceAssociationId?: pulumi.Input<string>;
    /**
     * The arn of the resource that you associated to the Profile.
     */
    resourceArn?: pulumi.Input<string>;
    /**
     * A JSON-formatted string with key-value pairs specifying the properties of the associated resource.
     */
    resourceProperties?: pulumi.Input<string>;
    /**
     * The type of the resource associated to the Profile.
     */
    resourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Route53profilesProfileResourceAssociation resource.
 */
export interface Route53profilesProfileResourceAssociationArgs {
    /**
     * The name of an association between the Profile and resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the profile that you associated the resource to that is specified by ResourceArn.
     */
    profileId: pulumi.Input<string>;
    /**
     * The arn of the resource that you associated to the Profile.
     */
    resourceArn: pulumi.Input<string>;
    /**
     * A JSON-formatted string with key-value pairs specifying the properties of the associated resource.
     */
    resourceProperties?: pulumi.Input<string>;
}
