// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIvsStage(args: GetIvsStageArgs, opts?: pulumi.InvokeOptions): Promise<GetIvsStageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIvsStage:getIvsStage", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIvsStage.
 */
export interface GetIvsStageArgs {
    id: string;
}

/**
 * A collection of values returned by getIvsStage.
 */
export interface GetIvsStageResult {
    readonly activeSessionId: string;
    readonly arn: string;
    readonly autoParticipantRecordingConfiguration: outputs.GetIvsStageAutoParticipantRecordingConfiguration;
    readonly id: string;
    readonly name: string;
    readonly tags: outputs.GetIvsStageTag[];
}
export function getIvsStageOutput(args: GetIvsStageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIvsStageResult> {
    return pulumi.output(args).apply((a: any) => getIvsStage(a, opts))
}

/**
 * A collection of arguments for invoking getIvsStage.
 */
export interface GetIvsStageOutputArgs {
    id: pulumi.Input<string>;
}
