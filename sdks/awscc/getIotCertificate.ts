// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIotCertificate(args: GetIotCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetIotCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIotCertificate:getIotCertificate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIotCertificate.
 */
export interface GetIotCertificateArgs {
    id: string;
}

/**
 * A collection of values returned by getIotCertificate.
 */
export interface GetIotCertificateResult {
    readonly arn: string;
    readonly caCertificatePem: string;
    readonly certificateId: string;
    readonly certificateMode: string;
    readonly certificatePem: string;
    readonly certificateSigningRequest: string;
    readonly id: string;
    readonly status: string;
}
export function getIotCertificateOutput(args: GetIotCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIotCertificateResult> {
    return pulumi.output(args).apply((a: any) => getIotCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getIotCertificate.
 */
export interface GetIotCertificateOutputArgs {
    id: pulumi.Input<string>;
}
