// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getForecastDataset(args: GetForecastDatasetArgs, opts?: pulumi.InvokeOptions): Promise<GetForecastDatasetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getForecastDataset:getForecastDataset", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getForecastDataset.
 */
export interface GetForecastDatasetArgs {
    id: string;
}

/**
 * A collection of values returned by getForecastDataset.
 */
export interface GetForecastDatasetResult {
    readonly arn: string;
    readonly dataFrequency: string;
    readonly datasetName: string;
    readonly datasetType: string;
    readonly domain: string;
    readonly encryptionConfig: outputs.GetForecastDatasetEncryptionConfig;
    readonly id: string;
    readonly schema: outputs.GetForecastDatasetSchema;
    readonly tags: outputs.GetForecastDatasetTag[];
}
export function getForecastDatasetOutput(args: GetForecastDatasetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetForecastDatasetResult> {
    return pulumi.output(args).apply((a: any) => getForecastDataset(a, opts))
}

/**
 * A collection of arguments for invoking getForecastDataset.
 */
export interface GetForecastDatasetOutputArgs {
    id: pulumi.Input<string>;
}
