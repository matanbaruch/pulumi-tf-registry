// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSagemakerModelPackage(args: GetSagemakerModelPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetSagemakerModelPackageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSagemakerModelPackage:getSagemakerModelPackage", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSagemakerModelPackage.
 */
export interface GetSagemakerModelPackageArgs {
    id: string;
}

/**
 * A collection of values returned by getSagemakerModelPackage.
 */
export interface GetSagemakerModelPackageResult {
    readonly additionalInferenceSpecifications: outputs.GetSagemakerModelPackageAdditionalInferenceSpecification[];
    readonly additionalInferenceSpecificationsToAdds: outputs.GetSagemakerModelPackageAdditionalInferenceSpecificationsToAdd[];
    readonly approvalDescription: string;
    readonly certifyForMarketplace: boolean;
    readonly clientToken: string;
    readonly creationTime: string;
    readonly customerMetadataProperties: {[key: string]: string};
    readonly domain: string;
    readonly driftCheckBaselines: outputs.GetSagemakerModelPackageDriftCheckBaselines;
    readonly id: string;
    readonly inferenceSpecification: outputs.GetSagemakerModelPackageInferenceSpecification;
    readonly lastModifiedTime: string;
    readonly metadataProperties: outputs.GetSagemakerModelPackageMetadataProperties;
    readonly modelApprovalStatus: string;
    readonly modelCard: outputs.GetSagemakerModelPackageModelCard;
    readonly modelMetrics: outputs.GetSagemakerModelPackageModelMetrics;
    readonly modelPackageArn: string;
    readonly modelPackageDescription: string;
    readonly modelPackageGroupName: string;
    readonly modelPackageName: string;
    readonly modelPackageStatus: string;
    readonly modelPackageStatusDetails: outputs.GetSagemakerModelPackageModelPackageStatusDetails;
    readonly modelPackageVersion: number;
    readonly samplePayloadUrl: string;
    readonly securityConfig: outputs.GetSagemakerModelPackageSecurityConfig;
    readonly skipModelValidation: string;
    readonly sourceAlgorithmSpecification: outputs.GetSagemakerModelPackageSourceAlgorithmSpecification;
    readonly sourceUri: string;
    readonly tags: outputs.GetSagemakerModelPackageTag[];
    readonly task: string;
    readonly validationSpecification: outputs.GetSagemakerModelPackageValidationSpecification;
}
export function getSagemakerModelPackageOutput(args: GetSagemakerModelPackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSagemakerModelPackageResult> {
    return pulumi.output(args).apply((a: any) => getSagemakerModelPackage(a, opts))
}

/**
 * A collection of arguments for invoking getSagemakerModelPackage.
 */
export interface GetSagemakerModelPackageOutputArgs {
    id: pulumi.Input<string>;
}
