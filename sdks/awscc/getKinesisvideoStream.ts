// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKinesisvideoStream(args: GetKinesisvideoStreamArgs, opts?: pulumi.InvokeOptions): Promise<GetKinesisvideoStreamResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getKinesisvideoStream:getKinesisvideoStream", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKinesisvideoStream.
 */
export interface GetKinesisvideoStreamArgs {
    id: string;
}

/**
 * A collection of values returned by getKinesisvideoStream.
 */
export interface GetKinesisvideoStreamResult {
    readonly arn: string;
    readonly dataRetentionInHours: number;
    readonly deviceName: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly mediaType: string;
    readonly name: string;
    readonly tags: outputs.GetKinesisvideoStreamTag[];
}
export function getKinesisvideoStreamOutput(args: GetKinesisvideoStreamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKinesisvideoStreamResult> {
    return pulumi.output(args).apply((a: any) => getKinesisvideoStream(a, opts))
}

/**
 * A collection of arguments for invoking getKinesisvideoStream.
 */
export interface GetKinesisvideoStreamOutputArgs {
    id: pulumi.Input<string>;
}
