// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApprunnerObservabilityConfiguration(args: GetApprunnerObservabilityConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetApprunnerObservabilityConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApprunnerObservabilityConfiguration:getApprunnerObservabilityConfiguration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApprunnerObservabilityConfiguration.
 */
export interface GetApprunnerObservabilityConfigurationArgs {
    id: string;
}

/**
 * A collection of values returned by getApprunnerObservabilityConfiguration.
 */
export interface GetApprunnerObservabilityConfigurationResult {
    readonly id: string;
    readonly latest: boolean;
    readonly observabilityConfigurationArn: string;
    readonly observabilityConfigurationName: string;
    readonly observabilityConfigurationRevision: number;
    readonly tags: outputs.GetApprunnerObservabilityConfigurationTag[];
    readonly traceConfiguration: outputs.GetApprunnerObservabilityConfigurationTraceConfiguration;
}
export function getApprunnerObservabilityConfigurationOutput(args: GetApprunnerObservabilityConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApprunnerObservabilityConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getApprunnerObservabilityConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getApprunnerObservabilityConfiguration.
 */
export interface GetApprunnerObservabilityConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
