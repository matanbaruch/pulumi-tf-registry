// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2CapacityReservation(args: GetEc2CapacityReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2CapacityReservationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2CapacityReservation:getEc2CapacityReservation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2CapacityReservation.
 */
export interface GetEc2CapacityReservationArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2CapacityReservation.
 */
export interface GetEc2CapacityReservationResult {
    readonly availabilityZone: string;
    readonly availableInstanceCount: number;
    readonly capacityReservationId: string;
    readonly ebsOptimized: boolean;
    readonly endDate: string;
    readonly endDateType: string;
    readonly ephemeralStorage: boolean;
    readonly id: string;
    readonly instanceCount: number;
    readonly instanceMatchCriteria: string;
    readonly instancePlatform: string;
    readonly instanceType: string;
    readonly outPostArn: string;
    readonly placementGroupArn: string;
    readonly tagSpecifications: outputs.GetEc2CapacityReservationTagSpecification[];
    readonly tenancy: string;
    readonly totalInstanceCount: number;
}
export function getEc2CapacityReservationOutput(args: GetEc2CapacityReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2CapacityReservationResult> {
    return pulumi.output(args).apply((a: any) => getEc2CapacityReservation(a, opts))
}

/**
 * A collection of arguments for invoking getEc2CapacityReservation.
 */
export interface GetEc2CapacityReservationOutputArgs {
    id: pulumi.Input<string>;
}
