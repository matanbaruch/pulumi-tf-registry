// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMediatailorChannelPolicy(args: GetMediatailorChannelPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetMediatailorChannelPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediatailorChannelPolicy:getMediatailorChannelPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediatailorChannelPolicy.
 */
export interface GetMediatailorChannelPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getMediatailorChannelPolicy.
 */
export interface GetMediatailorChannelPolicyResult {
    readonly channelName: string;
    readonly id: string;
    readonly policy: string;
}
export function getMediatailorChannelPolicyOutput(args: GetMediatailorChannelPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediatailorChannelPolicyResult> {
    return pulumi.output(args).apply((a: any) => getMediatailorChannelPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getMediatailorChannelPolicy.
 */
export interface GetMediatailorChannelPolicyOutputArgs {
    id: pulumi.Input<string>;
}
