// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpsworkscmServer extends pulumi.CustomResource {
    /**
     * Get an existing OpsworkscmServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpsworkscmServerState, opts?: pulumi.CustomResourceOptions): OpsworkscmServer {
        return new OpsworkscmServer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/opsworkscmServer:OpsworkscmServer';

    /**
     * Returns true if the given object is an instance of OpsworkscmServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpsworkscmServer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpsworkscmServer.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly associatePublicIpAddress!: pulumi.Output<boolean>;
    public readonly backupId!: pulumi.Output<string>;
    public readonly backupRetentionCount!: pulumi.Output<number>;
    public readonly customCertificate!: pulumi.Output<string>;
    public readonly customDomain!: pulumi.Output<string>;
    public readonly customPrivateKey!: pulumi.Output<string>;
    public readonly disableAutomatedBackup!: pulumi.Output<boolean>;
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    public readonly engine!: pulumi.Output<string>;
    public readonly engineAttributes!: pulumi.Output<outputs.OpsworkscmServerEngineAttribute[]>;
    public readonly engineModel!: pulumi.Output<string>;
    public readonly engineVersion!: pulumi.Output<string>;
    public readonly instanceProfileArn!: pulumi.Output<string>;
    public readonly instanceType!: pulumi.Output<string>;
    public readonly keyPair!: pulumi.Output<string>;
    public readonly preferredBackupWindow!: pulumi.Output<string>;
    public readonly preferredMaintenanceWindow!: pulumi.Output<string>;
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    public /*out*/ readonly serverName!: pulumi.Output<string>;
    public readonly serviceRoleArn!: pulumi.Output<string>;
    public readonly subnetIds!: pulumi.Output<string[]>;
    public readonly tags!: pulumi.Output<outputs.OpsworkscmServerTag[]>;

    /**
     * Create a OpsworkscmServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpsworkscmServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpsworkscmServerArgs | OpsworkscmServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpsworkscmServerState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["associatePublicIpAddress"] = state ? state.associatePublicIpAddress : undefined;
            resourceInputs["backupId"] = state ? state.backupId : undefined;
            resourceInputs["backupRetentionCount"] = state ? state.backupRetentionCount : undefined;
            resourceInputs["customCertificate"] = state ? state.customCertificate : undefined;
            resourceInputs["customDomain"] = state ? state.customDomain : undefined;
            resourceInputs["customPrivateKey"] = state ? state.customPrivateKey : undefined;
            resourceInputs["disableAutomatedBackup"] = state ? state.disableAutomatedBackup : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineAttributes"] = state ? state.engineAttributes : undefined;
            resourceInputs["engineModel"] = state ? state.engineModel : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["instanceProfileArn"] = state ? state.instanceProfileArn : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["keyPair"] = state ? state.keyPair : undefined;
            resourceInputs["preferredBackupWindow"] = state ? state.preferredBackupWindow : undefined;
            resourceInputs["preferredMaintenanceWindow"] = state ? state.preferredMaintenanceWindow : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["serverName"] = state ? state.serverName : undefined;
            resourceInputs["serviceRoleArn"] = state ? state.serviceRoleArn : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as OpsworkscmServerArgs | undefined;
            if ((!args || args.instanceProfileArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceProfileArn'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if ((!args || args.serviceRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceRoleArn'");
            }
            resourceInputs["associatePublicIpAddress"] = args ? args.associatePublicIpAddress : undefined;
            resourceInputs["backupId"] = args ? args.backupId : undefined;
            resourceInputs["backupRetentionCount"] = args ? args.backupRetentionCount : undefined;
            resourceInputs["customCertificate"] = args ? args.customCertificate : undefined;
            resourceInputs["customDomain"] = args ? args.customDomain : undefined;
            resourceInputs["customPrivateKey"] = args ? args.customPrivateKey : undefined;
            resourceInputs["disableAutomatedBackup"] = args ? args.disableAutomatedBackup : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineAttributes"] = args ? args.engineAttributes : undefined;
            resourceInputs["engineModel"] = args ? args.engineModel : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["instanceProfileArn"] = args ? args.instanceProfileArn : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["keyPair"] = args ? args.keyPair : undefined;
            resourceInputs["preferredBackupWindow"] = args ? args.preferredBackupWindow : undefined;
            resourceInputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["serviceRoleArn"] = args ? args.serviceRoleArn : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["serverName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpsworkscmServer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OpsworkscmServer resources.
 */
export interface OpsworkscmServerState {
    arn?: pulumi.Input<string>;
    associatePublicIpAddress?: pulumi.Input<boolean>;
    backupId?: pulumi.Input<string>;
    backupRetentionCount?: pulumi.Input<number>;
    customCertificate?: pulumi.Input<string>;
    customDomain?: pulumi.Input<string>;
    customPrivateKey?: pulumi.Input<string>;
    disableAutomatedBackup?: pulumi.Input<boolean>;
    endpoint?: pulumi.Input<string>;
    engine?: pulumi.Input<string>;
    engineAttributes?: pulumi.Input<pulumi.Input<inputs.OpsworkscmServerEngineAttribute>[]>;
    engineModel?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    instanceProfileArn?: pulumi.Input<string>;
    instanceType?: pulumi.Input<string>;
    keyPair?: pulumi.Input<string>;
    preferredBackupWindow?: pulumi.Input<string>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    serverName?: pulumi.Input<string>;
    serviceRoleArn?: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.OpsworkscmServerTag>[]>;
}

/**
 * The set of arguments for constructing a OpsworkscmServer resource.
 */
export interface OpsworkscmServerArgs {
    associatePublicIpAddress?: pulumi.Input<boolean>;
    backupId?: pulumi.Input<string>;
    backupRetentionCount?: pulumi.Input<number>;
    customCertificate?: pulumi.Input<string>;
    customDomain?: pulumi.Input<string>;
    customPrivateKey?: pulumi.Input<string>;
    disableAutomatedBackup?: pulumi.Input<boolean>;
    engine?: pulumi.Input<string>;
    engineAttributes?: pulumi.Input<pulumi.Input<inputs.OpsworkscmServerEngineAttribute>[]>;
    engineModel?: pulumi.Input<string>;
    engineVersion?: pulumi.Input<string>;
    instanceProfileArn: pulumi.Input<string>;
    instanceType: pulumi.Input<string>;
    keyPair?: pulumi.Input<string>;
    preferredBackupWindow?: pulumi.Input<string>;
    preferredMaintenanceWindow?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    serviceRoleArn: pulumi.Input<string>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.OpsworkscmServerTag>[]>;
}
