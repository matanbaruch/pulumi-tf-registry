// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBudgetsBudgetsAction(args: GetBudgetsBudgetsActionArgs, opts?: pulumi.InvokeOptions): Promise<GetBudgetsBudgetsActionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getBudgetsBudgetsAction:getBudgetsBudgetsAction", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBudgetsBudgetsAction.
 */
export interface GetBudgetsBudgetsActionArgs {
    id: string;
}

/**
 * A collection of values returned by getBudgetsBudgetsAction.
 */
export interface GetBudgetsBudgetsActionResult {
    readonly actionId: string;
    readonly actionThreshold: outputs.GetBudgetsBudgetsActionActionThreshold;
    readonly actionType: string;
    readonly approvalModel: string;
    readonly budgetName: string;
    readonly definition: outputs.GetBudgetsBudgetsActionDefinition;
    readonly executionRoleArn: string;
    readonly id: string;
    readonly notificationType: string;
    readonly resourceTags: outputs.GetBudgetsBudgetsActionResourceTag[];
    readonly subscribers: outputs.GetBudgetsBudgetsActionSubscriber[];
}
export function getBudgetsBudgetsActionOutput(args: GetBudgetsBudgetsActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBudgetsBudgetsActionResult> {
    return pulumi.output(args).apply((a: any) => getBudgetsBudgetsAction(a, opts))
}

/**
 * A collection of arguments for invoking getBudgetsBudgetsAction.
 */
export interface GetBudgetsBudgetsActionOutputArgs {
    id: pulumi.Input<string>;
}
