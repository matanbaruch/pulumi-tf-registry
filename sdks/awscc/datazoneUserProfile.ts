// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatazoneUserProfile extends pulumi.CustomResource {
    /**
     * Get an existing DatazoneUserProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatazoneUserProfileState, opts?: pulumi.CustomResourceOptions): DatazoneUserProfile {
        return new DatazoneUserProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/datazoneUserProfile:DatazoneUserProfile';

    /**
     * Returns true if the given object is an instance of DatazoneUserProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatazoneUserProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatazoneUserProfile.__pulumiType;
    }

    public /*out*/ readonly details!: pulumi.Output<outputs.DatazoneUserProfileDetails>;
    /**
     * The identifier of the Amazon DataZone domain in which the user profile is created.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon DataZone domain in which the user profile would be created.
     */
    public readonly domainIdentifier!: pulumi.Output<string>;
    /**
     * The status of the user profile.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * The type of the user profile.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The ID of the user.
     */
    public readonly userIdentifier!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone user profile.
     */
    public /*out*/ readonly userProfileId!: pulumi.Output<string>;
    /**
     * The type of the user.
     */
    public readonly userType!: pulumi.Output<string>;

    /**
     * Create a DatazoneUserProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatazoneUserProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatazoneUserProfileArgs | DatazoneUserProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatazoneUserProfileState | undefined;
            resourceInputs["details"] = state ? state.details : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["domainIdentifier"] = state ? state.domainIdentifier : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userIdentifier"] = state ? state.userIdentifier : undefined;
            resourceInputs["userProfileId"] = state ? state.userProfileId : undefined;
            resourceInputs["userType"] = state ? state.userType : undefined;
        } else {
            const args = argsOrState as DatazoneUserProfileArgs | undefined;
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.userIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userIdentifier'");
            }
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["userIdentifier"] = args ? args.userIdentifier : undefined;
            resourceInputs["userType"] = args ? args.userType : undefined;
            resourceInputs["details"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["userProfileId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatazoneUserProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatazoneUserProfile resources.
 */
export interface DatazoneUserProfileState {
    details?: pulumi.Input<inputs.DatazoneUserProfileDetails>;
    /**
     * The identifier of the Amazon DataZone domain in which the user profile is created.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon DataZone domain in which the user profile would be created.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * The status of the user profile.
     */
    status?: pulumi.Input<string>;
    /**
     * The type of the user profile.
     */
    type?: pulumi.Input<string>;
    /**
     * The ID of the user.
     */
    userIdentifier?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone user profile.
     */
    userProfileId?: pulumi.Input<string>;
    /**
     * The type of the user.
     */
    userType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatazoneUserProfile resource.
 */
export interface DatazoneUserProfileArgs {
    /**
     * The identifier of the Amazon DataZone domain in which the user profile would be created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The status of the user profile.
     */
    status?: pulumi.Input<string>;
    /**
     * The ID of the user.
     */
    userIdentifier: pulumi.Input<string>;
    /**
     * The type of the user.
     */
    userType?: pulumi.Input<string>;
}
