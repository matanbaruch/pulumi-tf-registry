// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatazoneDomain(args: GetDatazoneDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDatazoneDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatazoneDomain:getDatazoneDomain", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatazoneDomain.
 */
export interface GetDatazoneDomainArgs {
    id: string;
}

/**
 * A collection of values returned by getDatazoneDomain.
 */
export interface GetDatazoneDomainResult {
    readonly arn: string;
    readonly createdAt: string;
    readonly description: string;
    readonly domainExecutionRole: string;
    readonly domainId: string;
    readonly id: string;
    readonly kmsKeyIdentifier: string;
    readonly lastUpdatedAt: string;
    readonly managedAccountId: string;
    readonly name: string;
    readonly portalUrl: string;
    readonly singleSignOn: outputs.GetDatazoneDomainSingleSignOn;
    readonly status: string;
    readonly tags: outputs.GetDatazoneDomainTag[];
}
export function getDatazoneDomainOutput(args: GetDatazoneDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatazoneDomainResult> {
    return pulumi.output(args).apply((a: any) => getDatazoneDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDatazoneDomain.
 */
export interface GetDatazoneDomainOutputArgs {
    id: pulumi.Input<string>;
}
