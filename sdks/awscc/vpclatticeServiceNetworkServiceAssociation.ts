// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpclatticeServiceNetworkServiceAssociation extends pulumi.CustomResource {
    /**
     * Get an existing VpclatticeServiceNetworkServiceAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpclatticeServiceNetworkServiceAssociationState, opts?: pulumi.CustomResourceOptions): VpclatticeServiceNetworkServiceAssociation {
        return new VpclatticeServiceNetworkServiceAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/vpclatticeServiceNetworkServiceAssociation:VpclatticeServiceNetworkServiceAssociation';

    /**
     * Returns true if the given object is an instance of VpclatticeServiceNetworkServiceAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpclatticeServiceNetworkServiceAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpclatticeServiceNetworkServiceAssociation.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly dnsEntry!: pulumi.Output<outputs.VpclatticeServiceNetworkServiceAssociationDnsEntry>;
    public /*out*/ readonly serviceArn!: pulumi.Output<string>;
    public /*out*/ readonly serviceId!: pulumi.Output<string>;
    public readonly serviceIdentifier!: pulumi.Output<string>;
    public /*out*/ readonly serviceName!: pulumi.Output<string>;
    public /*out*/ readonly serviceNetworkArn!: pulumi.Output<string>;
    public /*out*/ readonly serviceNetworkId!: pulumi.Output<string>;
    public readonly serviceNetworkIdentifier!: pulumi.Output<string>;
    public /*out*/ readonly serviceNetworkName!: pulumi.Output<string>;
    public /*out*/ readonly serviceNetworkServiceAssociationId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.VpclatticeServiceNetworkServiceAssociationTag[]>;

    /**
     * Create a VpclatticeServiceNetworkServiceAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpclatticeServiceNetworkServiceAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpclatticeServiceNetworkServiceAssociationArgs | VpclatticeServiceNetworkServiceAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpclatticeServiceNetworkServiceAssociationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dnsEntry"] = state ? state.dnsEntry : undefined;
            resourceInputs["serviceArn"] = state ? state.serviceArn : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["serviceIdentifier"] = state ? state.serviceIdentifier : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["serviceNetworkArn"] = state ? state.serviceNetworkArn : undefined;
            resourceInputs["serviceNetworkId"] = state ? state.serviceNetworkId : undefined;
            resourceInputs["serviceNetworkIdentifier"] = state ? state.serviceNetworkIdentifier : undefined;
            resourceInputs["serviceNetworkName"] = state ? state.serviceNetworkName : undefined;
            resourceInputs["serviceNetworkServiceAssociationId"] = state ? state.serviceNetworkServiceAssociationId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as VpclatticeServiceNetworkServiceAssociationArgs | undefined;
            resourceInputs["dnsEntry"] = args ? args.dnsEntry : undefined;
            resourceInputs["serviceIdentifier"] = args ? args.serviceIdentifier : undefined;
            resourceInputs["serviceNetworkIdentifier"] = args ? args.serviceNetworkIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["serviceArn"] = undefined /*out*/;
            resourceInputs["serviceId"] = undefined /*out*/;
            resourceInputs["serviceName"] = undefined /*out*/;
            resourceInputs["serviceNetworkArn"] = undefined /*out*/;
            resourceInputs["serviceNetworkId"] = undefined /*out*/;
            resourceInputs["serviceNetworkName"] = undefined /*out*/;
            resourceInputs["serviceNetworkServiceAssociationId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpclatticeServiceNetworkServiceAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpclatticeServiceNetworkServiceAssociation resources.
 */
export interface VpclatticeServiceNetworkServiceAssociationState {
    arn?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    dnsEntry?: pulumi.Input<inputs.VpclatticeServiceNetworkServiceAssociationDnsEntry>;
    serviceArn?: pulumi.Input<string>;
    serviceId?: pulumi.Input<string>;
    serviceIdentifier?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    serviceNetworkArn?: pulumi.Input<string>;
    serviceNetworkId?: pulumi.Input<string>;
    serviceNetworkIdentifier?: pulumi.Input<string>;
    serviceNetworkName?: pulumi.Input<string>;
    serviceNetworkServiceAssociationId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpclatticeServiceNetworkServiceAssociationTag>[]>;
}

/**
 * The set of arguments for constructing a VpclatticeServiceNetworkServiceAssociation resource.
 */
export interface VpclatticeServiceNetworkServiceAssociationArgs {
    dnsEntry?: pulumi.Input<inputs.VpclatticeServiceNetworkServiceAssociationDnsEntry>;
    serviceIdentifier?: pulumi.Input<string>;
    serviceNetworkIdentifier?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpclatticeServiceNetworkServiceAssociationTag>[]>;
}
