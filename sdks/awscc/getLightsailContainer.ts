// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLightsailContainer(args: GetLightsailContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetLightsailContainerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLightsailContainer:getLightsailContainer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLightsailContainer.
 */
export interface GetLightsailContainerArgs {
    id: string;
}

/**
 * A collection of values returned by getLightsailContainer.
 */
export interface GetLightsailContainerResult {
    readonly containerArn: string;
    readonly containerServiceDeployment: outputs.GetLightsailContainerContainerServiceDeployment;
    readonly id: string;
    readonly isDisabled: boolean;
    readonly power: string;
    readonly principalArn: string;
    readonly privateRegistryAccess: outputs.GetLightsailContainerPrivateRegistryAccess;
    readonly publicDomainNames: outputs.GetLightsailContainerPublicDomainName[];
    readonly scale: number;
    readonly serviceName: string;
    readonly tags: outputs.GetLightsailContainerTag[];
    readonly url: string;
}
export function getLightsailContainerOutput(args: GetLightsailContainerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLightsailContainerResult> {
    return pulumi.output(args).apply((a: any) => getLightsailContainer(a, opts))
}

/**
 * A collection of arguments for invoking getLightsailContainer.
 */
export interface GetLightsailContainerOutputArgs {
    id: pulumi.Input<string>;
}
