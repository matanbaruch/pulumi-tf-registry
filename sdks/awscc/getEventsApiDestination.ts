// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEventsApiDestination(args: GetEventsApiDestinationArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsApiDestinationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEventsApiDestination:getEventsApiDestination", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventsApiDestination.
 */
export interface GetEventsApiDestinationArgs {
    id: string;
}

/**
 * A collection of values returned by getEventsApiDestination.
 */
export interface GetEventsApiDestinationResult {
    readonly arn: string;
    readonly connectionArn: string;
    readonly description: string;
    readonly httpMethod: string;
    readonly id: string;
    readonly invocationEndpoint: string;
    readonly invocationRateLimitPerSecond: number;
    readonly name: string;
}
export function getEventsApiDestinationOutput(args: GetEventsApiDestinationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventsApiDestinationResult> {
    return pulumi.output(args).apply((a: any) => getEventsApiDestination(a, opts))
}

/**
 * A collection of arguments for invoking getEventsApiDestination.
 */
export interface GetEventsApiDestinationOutputArgs {
    id: pulumi.Input<string>;
}
