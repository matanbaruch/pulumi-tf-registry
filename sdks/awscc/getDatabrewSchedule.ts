// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabrewSchedule(args: GetDatabrewScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabrewScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatabrewSchedule:getDatabrewSchedule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabrewSchedule.
 */
export interface GetDatabrewScheduleArgs {
    id: string;
}

/**
 * A collection of values returned by getDatabrewSchedule.
 */
export interface GetDatabrewScheduleResult {
    readonly cronExpression: string;
    readonly id: string;
    readonly jobNames: string[];
    readonly name: string;
    readonly tags: outputs.GetDatabrewScheduleTag[];
}
export function getDatabrewScheduleOutput(args: GetDatabrewScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabrewScheduleResult> {
    return pulumi.output(args).apply((a: any) => getDatabrewSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getDatabrewSchedule.
 */
export interface GetDatabrewScheduleOutputArgs {
    id: pulumi.Input<string>;
}
