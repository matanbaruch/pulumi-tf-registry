// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlueSchemaVersion(args: GetGlueSchemaVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetGlueSchemaVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlueSchemaVersion:getGlueSchemaVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlueSchemaVersion.
 */
export interface GetGlueSchemaVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getGlueSchemaVersion.
 */
export interface GetGlueSchemaVersionResult {
    readonly id: string;
    readonly schema: outputs.GetGlueSchemaVersionSchema;
    readonly schemaDefinition: string;
    readonly versionId: string;
}
export function getGlueSchemaVersionOutput(args: GetGlueSchemaVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlueSchemaVersionResult> {
    return pulumi.output(args).apply((a: any) => getGlueSchemaVersion(a, opts))
}

/**
 * A collection of arguments for invoking getGlueSchemaVersion.
 */
export interface GetGlueSchemaVersionOutputArgs {
    id: pulumi.Input<string>;
}
