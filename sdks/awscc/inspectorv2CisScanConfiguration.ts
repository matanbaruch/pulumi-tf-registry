// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Inspectorv2CisScanConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing Inspectorv2CisScanConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Inspectorv2CisScanConfigurationState, opts?: pulumi.CustomResourceOptions): Inspectorv2CisScanConfiguration {
        return new Inspectorv2CisScanConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/inspectorv2CisScanConfiguration:Inspectorv2CisScanConfiguration';

    /**
     * Returns true if the given object is an instance of Inspectorv2CisScanConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Inspectorv2CisScanConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Inspectorv2CisScanConfiguration.__pulumiType;
    }

    /**
     * CIS Scan configuration unique identifier
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Name of the scan
     */
    public readonly scanName!: pulumi.Output<string>;
    /**
     * Choose a Schedule cadence
     */
    public readonly schedule!: pulumi.Output<outputs.Inspectorv2CisScanConfigurationSchedule>;
    public readonly securityLevel!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    public readonly targets!: pulumi.Output<outputs.Inspectorv2CisScanConfigurationTargets>;

    /**
     * Create a Inspectorv2CisScanConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Inspectorv2CisScanConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Inspectorv2CisScanConfigurationArgs | Inspectorv2CisScanConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Inspectorv2CisScanConfigurationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["scanName"] = state ? state.scanName : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["securityLevel"] = state ? state.securityLevel : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targets"] = state ? state.targets : undefined;
        } else {
            const args = argsOrState as Inspectorv2CisScanConfigurationArgs | undefined;
            if ((!args || args.scanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scanName'");
            }
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            if ((!args || args.securityLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityLevel'");
            }
            if ((!args || args.targets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targets'");
            }
            resourceInputs["scanName"] = args ? args.scanName : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["securityLevel"] = args ? args.securityLevel : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targets"] = args ? args.targets : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Inspectorv2CisScanConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Inspectorv2CisScanConfiguration resources.
 */
export interface Inspectorv2CisScanConfigurationState {
    /**
     * CIS Scan configuration unique identifier
     */
    arn?: pulumi.Input<string>;
    /**
     * Name of the scan
     */
    scanName?: pulumi.Input<string>;
    /**
     * Choose a Schedule cadence
     */
    schedule?: pulumi.Input<inputs.Inspectorv2CisScanConfigurationSchedule>;
    securityLevel?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targets?: pulumi.Input<inputs.Inspectorv2CisScanConfigurationTargets>;
}

/**
 * The set of arguments for constructing a Inspectorv2CisScanConfiguration resource.
 */
export interface Inspectorv2CisScanConfigurationArgs {
    /**
     * Name of the scan
     */
    scanName: pulumi.Input<string>;
    /**
     * Choose a Schedule cadence
     */
    schedule: pulumi.Input<inputs.Inspectorv2CisScanConfigurationSchedule>;
    securityLevel: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targets: pulumi.Input<inputs.Inspectorv2CisScanConfigurationTargets>;
}
