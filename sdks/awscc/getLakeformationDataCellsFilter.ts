// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLakeformationDataCellsFilter(args: GetLakeformationDataCellsFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetLakeformationDataCellsFilterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLakeformationDataCellsFilter:getLakeformationDataCellsFilter", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLakeformationDataCellsFilter.
 */
export interface GetLakeformationDataCellsFilterArgs {
    id: string;
}

/**
 * A collection of values returned by getLakeformationDataCellsFilter.
 */
export interface GetLakeformationDataCellsFilterResult {
    readonly columnNames: string[];
    readonly columnWildcard: outputs.GetLakeformationDataCellsFilterColumnWildcard;
    readonly databaseName: string;
    readonly id: string;
    readonly name: string;
    readonly rowFilter: outputs.GetLakeformationDataCellsFilterRowFilter;
    readonly tableCatalogId: string;
    readonly tableName: string;
}
export function getLakeformationDataCellsFilterOutput(args: GetLakeformationDataCellsFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLakeformationDataCellsFilterResult> {
    return pulumi.output(args).apply((a: any) => getLakeformationDataCellsFilter(a, opts))
}

/**
 * A collection of arguments for invoking getLakeformationDataCellsFilter.
 */
export interface GetLakeformationDataCellsFilterOutputArgs {
    id: pulumi.Input<string>;
}
