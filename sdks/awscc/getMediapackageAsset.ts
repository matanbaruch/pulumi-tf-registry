// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediapackageAsset(args: GetMediapackageAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetMediapackageAssetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediapackageAsset:getMediapackageAsset", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediapackageAsset.
 */
export interface GetMediapackageAssetArgs {
    id: string;
}

/**
 * A collection of values returned by getMediapackageAsset.
 */
export interface GetMediapackageAssetResult {
    readonly arn: string;
    readonly assetId: string;
    readonly createdAt: string;
    readonly egressEndpoints: outputs.GetMediapackageAssetEgressEndpoint[];
    readonly id: string;
    readonly packagingGroupId: string;
    readonly resourceId: string;
    readonly sourceArn: string;
    readonly sourceRoleArn: string;
    readonly tags: outputs.GetMediapackageAssetTag[];
}
export function getMediapackageAssetOutput(args: GetMediapackageAssetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediapackageAssetResult> {
    return pulumi.output(args).apply((a: any) => getMediapackageAsset(a, opts))
}

/**
 * A collection of arguments for invoking getMediapackageAsset.
 */
export interface GetMediapackageAssetOutputArgs {
    id: pulumi.Input<string>;
}
