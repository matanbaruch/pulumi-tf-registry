// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConnectIntegrationAssociation(args: GetConnectIntegrationAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectIntegrationAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConnectIntegrationAssociation:getConnectIntegrationAssociation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectIntegrationAssociation.
 */
export interface GetConnectIntegrationAssociationArgs {
    id: string;
}

/**
 * A collection of values returned by getConnectIntegrationAssociation.
 */
export interface GetConnectIntegrationAssociationResult {
    readonly id: string;
    readonly instanceId: string;
    readonly integrationArn: string;
    readonly integrationAssociationId: string;
    readonly integrationType: string;
}
export function getConnectIntegrationAssociationOutput(args: GetConnectIntegrationAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectIntegrationAssociationResult> {
    return pulumi.output(args).apply((a: any) => getConnectIntegrationAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getConnectIntegrationAssociation.
 */
export interface GetConnectIntegrationAssociationOutputArgs {
    id: pulumi.Input<string>;
}
