// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCodedeployDeploymentConfig(args: GetCodedeployDeploymentConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetCodedeployDeploymentConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCodedeployDeploymentConfig:getCodedeployDeploymentConfig", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCodedeployDeploymentConfig.
 */
export interface GetCodedeployDeploymentConfigArgs {
    id: string;
}

/**
 * A collection of values returned by getCodedeployDeploymentConfig.
 */
export interface GetCodedeployDeploymentConfigResult {
    readonly computePlatform: string;
    readonly deploymentConfigName: string;
    readonly id: string;
    readonly minimumHealthyHosts: outputs.GetCodedeployDeploymentConfigMinimumHealthyHosts;
    readonly trafficRoutingConfig: outputs.GetCodedeployDeploymentConfigTrafficRoutingConfig;
    readonly zonalConfig: outputs.GetCodedeployDeploymentConfigZonalConfig;
}
export function getCodedeployDeploymentConfigOutput(args: GetCodedeployDeploymentConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCodedeployDeploymentConfigResult> {
    return pulumi.output(args).apply((a: any) => getCodedeployDeploymentConfig(a, opts))
}

/**
 * A collection of arguments for invoking getCodedeployDeploymentConfig.
 */
export interface GetCodedeployDeploymentConfigOutputArgs {
    id: pulumi.Input<string>;
}
