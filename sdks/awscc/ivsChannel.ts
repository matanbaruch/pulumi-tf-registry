// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IvsChannel extends pulumi.CustomResource {
    /**
     * Get an existing IvsChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IvsChannelState, opts?: pulumi.CustomResourceOptions): IvsChannel {
        return new IvsChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ivsChannel:IvsChannel';

    /**
     * Returns true if the given object is an instance of IvsChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IvsChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IvsChannel.__pulumiType;
    }

    /**
     * Channel ARN is automatically generated on creation and assigned as the unique identifier.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Whether the channel is authorized.
     */
    public readonly authorized!: pulumi.Output<boolean>;
    /**
     * Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.
     */
    public /*out*/ readonly ingestEndpoint!: pulumi.Output<string>;
    /**
     * Whether the channel allows insecure ingest.
     */
    public readonly insecureIngest!: pulumi.Output<boolean>;
    /**
     * Channel latency mode.
     */
    public readonly latencyMode!: pulumi.Output<string>;
    /**
     * Channel
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Channel Playback URL.
     */
    public /*out*/ readonly playbackUrl!: pulumi.Output<string>;
    /**
     * Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For
     * those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD),
     * preset is the empty string ("").
     */
    public readonly preset!: pulumi.Output<string>;
    /**
     * Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: ""
     * (recording is disabled).
     */
    public readonly recordingConfigurationArn!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    public readonly tags!: pulumi.Output<outputs.IvsChannelTag[]>;
    /**
     * Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate,
     * the stream probably will disconnect immediately.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a IvsChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IvsChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IvsChannelArgs | IvsChannelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IvsChannelState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["authorized"] = state ? state.authorized : undefined;
            resourceInputs["ingestEndpoint"] = state ? state.ingestEndpoint : undefined;
            resourceInputs["insecureIngest"] = state ? state.insecureIngest : undefined;
            resourceInputs["latencyMode"] = state ? state.latencyMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["playbackUrl"] = state ? state.playbackUrl : undefined;
            resourceInputs["preset"] = state ? state.preset : undefined;
            resourceInputs["recordingConfigurationArn"] = state ? state.recordingConfigurationArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as IvsChannelArgs | undefined;
            resourceInputs["authorized"] = args ? args.authorized : undefined;
            resourceInputs["insecureIngest"] = args ? args.insecureIngest : undefined;
            resourceInputs["latencyMode"] = args ? args.latencyMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["preset"] = args ? args.preset : undefined;
            resourceInputs["recordingConfigurationArn"] = args ? args.recordingConfigurationArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["ingestEndpoint"] = undefined /*out*/;
            resourceInputs["playbackUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IvsChannel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IvsChannel resources.
 */
export interface IvsChannelState {
    /**
     * Channel ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn?: pulumi.Input<string>;
    /**
     * Whether the channel is authorized.
     */
    authorized?: pulumi.Input<boolean>;
    /**
     * Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.
     */
    ingestEndpoint?: pulumi.Input<string>;
    /**
     * Whether the channel allows insecure ingest.
     */
    insecureIngest?: pulumi.Input<boolean>;
    /**
     * Channel latency mode.
     */
    latencyMode?: pulumi.Input<string>;
    /**
     * Channel
     */
    name?: pulumi.Input<string>;
    /**
     * Channel Playback URL.
     */
    playbackUrl?: pulumi.Input<string>;
    /**
     * Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For
     * those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD),
     * preset is the empty string ("").
     */
    preset?: pulumi.Input<string>;
    /**
     * Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: ""
     * (recording is disabled).
     */
    recordingConfigurationArn?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IvsChannelTag>[]>;
    /**
     * Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate,
     * the stream probably will disconnect immediately.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IvsChannel resource.
 */
export interface IvsChannelArgs {
    /**
     * Whether the channel is authorized.
     */
    authorized?: pulumi.Input<boolean>;
    /**
     * Whether the channel allows insecure ingest.
     */
    insecureIngest?: pulumi.Input<boolean>;
    /**
     * Channel latency mode.
     */
    latencyMode?: pulumi.Input<string>;
    /**
     * Channel
     */
    name?: pulumi.Input<string>;
    /**
     * Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For
     * those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD),
     * preset is the empty string ("").
     */
    preset?: pulumi.Input<string>;
    /**
     * Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: ""
     * (recording is disabled).
     */
    recordingConfigurationArn?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IvsChannelTag>[]>;
    /**
     * Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate,
     * the stream probably will disconnect immediately.
     */
    type?: pulumi.Input<string>;
}
