// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2Ec2Fleet(args: GetEc2Ec2FleetArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2Ec2FleetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2Ec2Fleet:getEc2Ec2Fleet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2Ec2Fleet.
 */
export interface GetEc2Ec2FleetArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2Ec2Fleet.
 */
export interface GetEc2Ec2FleetResult {
    readonly context: string;
    readonly excessCapacityTerminationPolicy: string;
    readonly fleetId: string;
    readonly id: string;
    readonly launchTemplateConfigs: outputs.GetEc2Ec2FleetLaunchTemplateConfig[];
    readonly onDemandOptions: outputs.GetEc2Ec2FleetOnDemandOptions;
    readonly replaceUnhealthyInstances: boolean;
    readonly spotOptions: outputs.GetEc2Ec2FleetSpotOptions;
    readonly tagSpecifications: outputs.GetEc2Ec2FleetTagSpecification[];
    readonly targetCapacitySpecification: outputs.GetEc2Ec2FleetTargetCapacitySpecification;
    readonly terminateInstancesWithExpiration: boolean;
    readonly type: string;
    readonly validFrom: string;
    readonly validUntil: string;
}
export function getEc2Ec2FleetOutput(args: GetEc2Ec2FleetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2Ec2FleetResult> {
    return pulumi.output(args).apply((a: any) => getEc2Ec2Fleet(a, opts))
}

/**
 * A collection of arguments for invoking getEc2Ec2Fleet.
 */
export interface GetEc2Ec2FleetOutputArgs {
    id: pulumi.Input<string>;
}
