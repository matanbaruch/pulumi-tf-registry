// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoute53recoverycontrolSafetyRule(args: GetRoute53recoverycontrolSafetyRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53recoverycontrolSafetyRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRoute53recoverycontrolSafetyRule:getRoute53recoverycontrolSafetyRule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53recoverycontrolSafetyRule.
 */
export interface GetRoute53recoverycontrolSafetyRuleArgs {
    id: string;
}

/**
 * A collection of values returned by getRoute53recoverycontrolSafetyRule.
 */
export interface GetRoute53recoverycontrolSafetyRuleResult {
    readonly assertionRule: outputs.GetRoute53recoverycontrolSafetyRuleAssertionRule;
    readonly controlPanelArn: string;
    readonly gatingRule: outputs.GetRoute53recoverycontrolSafetyRuleGatingRule;
    readonly id: string;
    readonly name: string;
    readonly ruleConfig: outputs.GetRoute53recoverycontrolSafetyRuleRuleConfig;
    readonly safetyRuleArn: string;
    readonly status: string;
    readonly tags: outputs.GetRoute53recoverycontrolSafetyRuleTag[];
}
export function getRoute53recoverycontrolSafetyRuleOutput(args: GetRoute53recoverycontrolSafetyRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53recoverycontrolSafetyRuleResult> {
    return pulumi.output(args).apply((a: any) => getRoute53recoverycontrolSafetyRule(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53recoverycontrolSafetyRule.
 */
export interface GetRoute53recoverycontrolSafetyRuleOutputArgs {
    id: pulumi.Input<string>;
}
