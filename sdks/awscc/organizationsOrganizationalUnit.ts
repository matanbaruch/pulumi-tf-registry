// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OrganizationsOrganizationalUnit extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationsOrganizationalUnit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationsOrganizationalUnitState, opts?: pulumi.CustomResourceOptions): OrganizationsOrganizationalUnit {
        return new OrganizationsOrganizationalUnit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/organizationsOrganizationalUnit:OrganizationsOrganizationalUnit';

    /**
     * Returns true if the given object is an instance of OrganizationsOrganizationalUnit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationsOrganizationalUnit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationsOrganizationalUnit.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of this OU.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The friendly name of this OU.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The unique identifier (ID) associated with this OU.
     */
    public /*out*/ readonly organizationalUnitId!: pulumi.Output<string>;
    /**
     * The unique identifier (ID) of the parent root or OU that you want to create the new OU in.
     */
    public readonly parentId!: pulumi.Output<string>;
    /**
     * A list of tags that you want to attach to the newly created OU.
     */
    public readonly tags!: pulumi.Output<outputs.OrganizationsOrganizationalUnitTag[]>;

    /**
     * Create a OrganizationsOrganizationalUnit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationsOrganizationalUnitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationsOrganizationalUnitArgs | OrganizationsOrganizationalUnitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationsOrganizationalUnitState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationalUnitId"] = state ? state.organizationalUnitId : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as OrganizationsOrganizationalUnitArgs | undefined;
            if ((!args || args.parentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["organizationalUnitId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationsOrganizationalUnit.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationsOrganizationalUnit resources.
 */
export interface OrganizationsOrganizationalUnitState {
    /**
     * The Amazon Resource Name (ARN) of this OU.
     */
    arn?: pulumi.Input<string>;
    /**
     * The friendly name of this OU.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier (ID) associated with this OU.
     */
    organizationalUnitId?: pulumi.Input<string>;
    /**
     * The unique identifier (ID) of the parent root or OU that you want to create the new OU in.
     */
    parentId?: pulumi.Input<string>;
    /**
     * A list of tags that you want to attach to the newly created OU.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.OrganizationsOrganizationalUnitTag>[]>;
}

/**
 * The set of arguments for constructing a OrganizationsOrganizationalUnit resource.
 */
export interface OrganizationsOrganizationalUnitArgs {
    /**
     * The friendly name of this OU.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier (ID) of the parent root or OU that you want to create the new OU in.
     */
    parentId: pulumi.Input<string>;
    /**
     * A list of tags that you want to attach to the newly created OU.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.OrganizationsOrganizationalUnitTag>[]>;
}
