// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConfigConfigRule(args: GetConfigConfigRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigConfigRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConfigConfigRule:getConfigConfigRule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfigConfigRule.
 */
export interface GetConfigConfigRuleArgs {
    id: string;
}

/**
 * A collection of values returned by getConfigConfigRule.
 */
export interface GetConfigConfigRuleResult {
    readonly arn: string;
    readonly compliance: outputs.GetConfigConfigRuleCompliance;
    readonly configRuleId: string;
    readonly configRuleName: string;
    readonly description: string;
    readonly evaluationModes: outputs.GetConfigConfigRuleEvaluationMode[];
    readonly id: string;
    readonly inputParameters: string;
    readonly maximumExecutionFrequency: string;
    readonly scope: outputs.GetConfigConfigRuleScope;
    readonly source: outputs.GetConfigConfigRuleSource;
}
export function getConfigConfigRuleOutput(args: GetConfigConfigRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigConfigRuleResult> {
    return pulumi.output(args).apply((a: any) => getConfigConfigRule(a, opts))
}

/**
 * A collection of arguments for invoking getConfigConfigRule.
 */
export interface GetConfigConfigRuleOutputArgs {
    id: pulumi.Input<string>;
}
