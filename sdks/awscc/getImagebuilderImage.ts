// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImagebuilderImage(args: GetImagebuilderImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImagebuilderImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getImagebuilderImage:getImagebuilderImage", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImagebuilderImage.
 */
export interface GetImagebuilderImageArgs {
    id: string;
}

/**
 * A collection of values returned by getImagebuilderImage.
 */
export interface GetImagebuilderImageResult {
    readonly arn: string;
    readonly containerRecipeArn: string;
    readonly distributionConfigurationArn: string;
    readonly enhancedImageMetadataEnabled: boolean;
    readonly executionRole: string;
    readonly id: string;
    readonly imageId: string;
    readonly imageRecipeArn: string;
    readonly imageScanningConfiguration: outputs.GetImagebuilderImageImageScanningConfiguration;
    readonly imageTestsConfiguration: outputs.GetImagebuilderImageImageTestsConfiguration;
    readonly imageUri: string;
    readonly infrastructureConfigurationArn: string;
    readonly name: string;
    readonly tags: {[key: string]: string};
    readonly workflows: outputs.GetImagebuilderImageWorkflow[];
}
export function getImagebuilderImageOutput(args: GetImagebuilderImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagebuilderImageResult> {
    return pulumi.output(args).apply((a: any) => getImagebuilderImage(a, opts))
}

/**
 * A collection of arguments for invoking getImagebuilderImage.
 */
export interface GetImagebuilderImageOutputArgs {
    id: pulumi.Input<string>;
}
