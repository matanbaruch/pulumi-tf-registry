// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EksCluster extends pulumi.CustomResource {
    /**
     * Get an existing EksCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EksClusterState, opts?: pulumi.CustomResourceOptions): EksCluster {
        return new EksCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/eksCluster:EksCluster';

    /**
     * Returns true if the given object is an instance of EksCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EksCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EksCluster.__pulumiType;
    }

    /**
     * An object representing the Access Config to use for the cluster.
     */
    public readonly accessConfig!: pulumi.Output<outputs.EksClusterAccessConfig>;
    /**
     * The ARN of the cluster, such as arn:aws:eks:us-west-2:666666666666:cluster/prod.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Set this value to false to avoid creating the default networking addons when the cluster is created.
     */
    public readonly bootstrapSelfManagedAddons!: pulumi.Output<boolean>;
    /**
     * The certificate-authority-data for your cluster.
     */
    public /*out*/ readonly certificateAuthorityData!: pulumi.Output<string>;
    /**
     * The unique ID given to your cluster.
     */
    public /*out*/ readonly clusterId!: pulumi.Output<string>;
    /**
     * The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group
     * for control plane to data plane communication.
     */
    public /*out*/ readonly clusterSecurityGroupId!: pulumi.Output<string>;
    /**
     * Amazon Resource Name (ARN) or alias of the customer master key (CMK).
     */
    public /*out*/ readonly encryptionConfigKeyArn!: pulumi.Output<string>;
    public readonly encryptionConfigs!: pulumi.Output<outputs.EksClusterEncryptionConfig[]>;
    /**
     * The endpoint for your Kubernetes API server, such as
     * https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com.
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * The Kubernetes network configuration for the cluster.
     */
    public readonly kubernetesNetworkConfig!: pulumi.Output<outputs.EksClusterKubernetesNetworkConfig>;
    /**
     * Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default,
     * cluster control plane logs aren't exported to CloudWatch Logs.
     */
    public readonly logging!: pulumi.Output<outputs.EksClusterLogging>;
    /**
     * The unique name to give to your cluster.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The issuer URL for the cluster's OIDC identity provider, such as
     * https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E. If you need to remove https:// from this
     * output value, you can include the following code in your template.
     */
    public /*out*/ readonly openIdConnectIssuerUrl!: pulumi.Output<string>;
    /**
     * An object representing the Outpost configuration to use for AWS EKS outpost cluster.
     */
    public readonly outpostConfig!: pulumi.Output<outputs.EksClusterOutpostConfig>;
    /**
     * An object representing the VPC configuration to use for an Amazon EKS cluster.
     */
    public readonly resourcesVpcConfig!: pulumi.Output<outputs.EksClusterResourcesVpcConfig>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls
     * to AWS API operations on your behalf.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.EksClusterTag[]>;
    /**
     * An object representing the Upgrade Policy to use for the cluster.
     */
    public readonly upgradePolicy!: pulumi.Output<outputs.EksClusterUpgradePolicy>;
    /**
     * The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in
     * Amazon EKS is used.
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a EksCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EksClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EksClusterArgs | EksClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EksClusterState | undefined;
            resourceInputs["accessConfig"] = state ? state.accessConfig : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["bootstrapSelfManagedAddons"] = state ? state.bootstrapSelfManagedAddons : undefined;
            resourceInputs["certificateAuthorityData"] = state ? state.certificateAuthorityData : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["clusterSecurityGroupId"] = state ? state.clusterSecurityGroupId : undefined;
            resourceInputs["encryptionConfigKeyArn"] = state ? state.encryptionConfigKeyArn : undefined;
            resourceInputs["encryptionConfigs"] = state ? state.encryptionConfigs : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["kubernetesNetworkConfig"] = state ? state.kubernetesNetworkConfig : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["openIdConnectIssuerUrl"] = state ? state.openIdConnectIssuerUrl : undefined;
            resourceInputs["outpostConfig"] = state ? state.outpostConfig : undefined;
            resourceInputs["resourcesVpcConfig"] = state ? state.resourcesVpcConfig : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["upgradePolicy"] = state ? state.upgradePolicy : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as EksClusterArgs | undefined;
            if ((!args || args.resourcesVpcConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourcesVpcConfig'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["accessConfig"] = args ? args.accessConfig : undefined;
            resourceInputs["bootstrapSelfManagedAddons"] = args ? args.bootstrapSelfManagedAddons : undefined;
            resourceInputs["encryptionConfigs"] = args ? args.encryptionConfigs : undefined;
            resourceInputs["kubernetesNetworkConfig"] = args ? args.kubernetesNetworkConfig : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outpostConfig"] = args ? args.outpostConfig : undefined;
            resourceInputs["resourcesVpcConfig"] = args ? args.resourcesVpcConfig : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["upgradePolicy"] = args ? args.upgradePolicy : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["certificateAuthorityData"] = undefined /*out*/;
            resourceInputs["clusterId"] = undefined /*out*/;
            resourceInputs["clusterSecurityGroupId"] = undefined /*out*/;
            resourceInputs["encryptionConfigKeyArn"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["openIdConnectIssuerUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EksCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EksCluster resources.
 */
export interface EksClusterState {
    /**
     * An object representing the Access Config to use for the cluster.
     */
    accessConfig?: pulumi.Input<inputs.EksClusterAccessConfig>;
    /**
     * The ARN of the cluster, such as arn:aws:eks:us-west-2:666666666666:cluster/prod.
     */
    arn?: pulumi.Input<string>;
    /**
     * Set this value to false to avoid creating the default networking addons when the cluster is created.
     */
    bootstrapSelfManagedAddons?: pulumi.Input<boolean>;
    /**
     * The certificate-authority-data for your cluster.
     */
    certificateAuthorityData?: pulumi.Input<string>;
    /**
     * The unique ID given to your cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group
     * for control plane to data plane communication.
     */
    clusterSecurityGroupId?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (ARN) or alias of the customer master key (CMK).
     */
    encryptionConfigKeyArn?: pulumi.Input<string>;
    encryptionConfigs?: pulumi.Input<pulumi.Input<inputs.EksClusterEncryptionConfig>[]>;
    /**
     * The endpoint for your Kubernetes API server, such as
     * https://5E1D0CEXAMPLEA591B746AFC5AB30262.yl4.us-west-2.eks.amazonaws.com.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The Kubernetes network configuration for the cluster.
     */
    kubernetesNetworkConfig?: pulumi.Input<inputs.EksClusterKubernetesNetworkConfig>;
    /**
     * Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default,
     * cluster control plane logs aren't exported to CloudWatch Logs.
     */
    logging?: pulumi.Input<inputs.EksClusterLogging>;
    /**
     * The unique name to give to your cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * The issuer URL for the cluster's OIDC identity provider, such as
     * https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E. If you need to remove https:// from this
     * output value, you can include the following code in your template.
     */
    openIdConnectIssuerUrl?: pulumi.Input<string>;
    /**
     * An object representing the Outpost configuration to use for AWS EKS outpost cluster.
     */
    outpostConfig?: pulumi.Input<inputs.EksClusterOutpostConfig>;
    /**
     * An object representing the VPC configuration to use for an Amazon EKS cluster.
     */
    resourcesVpcConfig?: pulumi.Input<inputs.EksClusterResourcesVpcConfig>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls
     * to AWS API operations on your behalf.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.EksClusterTag>[]>;
    /**
     * An object representing the Upgrade Policy to use for the cluster.
     */
    upgradePolicy?: pulumi.Input<inputs.EksClusterUpgradePolicy>;
    /**
     * The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in
     * Amazon EKS is used.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EksCluster resource.
 */
export interface EksClusterArgs {
    /**
     * An object representing the Access Config to use for the cluster.
     */
    accessConfig?: pulumi.Input<inputs.EksClusterAccessConfig>;
    /**
     * Set this value to false to avoid creating the default networking addons when the cluster is created.
     */
    bootstrapSelfManagedAddons?: pulumi.Input<boolean>;
    encryptionConfigs?: pulumi.Input<pulumi.Input<inputs.EksClusterEncryptionConfig>[]>;
    /**
     * The Kubernetes network configuration for the cluster.
     */
    kubernetesNetworkConfig?: pulumi.Input<inputs.EksClusterKubernetesNetworkConfig>;
    /**
     * Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default,
     * cluster control plane logs aren't exported to CloudWatch Logs.
     */
    logging?: pulumi.Input<inputs.EksClusterLogging>;
    /**
     * The unique name to give to your cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * An object representing the Outpost configuration to use for AWS EKS outpost cluster.
     */
    outpostConfig?: pulumi.Input<inputs.EksClusterOutpostConfig>;
    /**
     * An object representing the VPC configuration to use for an Amazon EKS cluster.
     */
    resourcesVpcConfig: pulumi.Input<inputs.EksClusterResourcesVpcConfig>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls
     * to AWS API operations on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.EksClusterTag>[]>;
    /**
     * An object representing the Upgrade Policy to use for the cluster.
     */
    upgradePolicy?: pulumi.Input<inputs.EksClusterUpgradePolicy>;
    /**
     * The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in
     * Amazon EKS is used.
     */
    version?: pulumi.Input<string>;
}
