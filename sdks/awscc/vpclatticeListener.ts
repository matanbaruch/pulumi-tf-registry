// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpclatticeListener extends pulumi.CustomResource {
    /**
     * Get an existing VpclatticeListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpclatticeListenerState, opts?: pulumi.CustomResourceOptions): VpclatticeListener {
        return new VpclatticeListener(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/vpclatticeListener:VpclatticeListener';

    /**
     * Returns true if the given object is an instance of VpclatticeListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpclatticeListener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpclatticeListener.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly defaultAction!: pulumi.Output<outputs.VpclatticeListenerDefaultAction>;
    public /*out*/ readonly listenerId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<number>;
    public readonly protocol!: pulumi.Output<string>;
    public /*out*/ readonly serviceArn!: pulumi.Output<string>;
    public /*out*/ readonly serviceId!: pulumi.Output<string>;
    public readonly serviceIdentifier!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.VpclatticeListenerTag[]>;

    /**
     * Create a VpclatticeListener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpclatticeListenerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpclatticeListenerArgs | VpclatticeListenerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpclatticeListenerState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["serviceArn"] = state ? state.serviceArn : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["serviceIdentifier"] = state ? state.serviceIdentifier : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as VpclatticeListenerArgs | undefined;
            if ((!args || args.defaultAction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultAction'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["serviceIdentifier"] = args ? args.serviceIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["listenerId"] = undefined /*out*/;
            resourceInputs["serviceArn"] = undefined /*out*/;
            resourceInputs["serviceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpclatticeListener.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpclatticeListener resources.
 */
export interface VpclatticeListenerState {
    arn?: pulumi.Input<string>;
    defaultAction?: pulumi.Input<inputs.VpclatticeListenerDefaultAction>;
    listenerId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    serviceArn?: pulumi.Input<string>;
    serviceId?: pulumi.Input<string>;
    serviceIdentifier?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpclatticeListenerTag>[]>;
}

/**
 * The set of arguments for constructing a VpclatticeListener resource.
 */
export interface VpclatticeListenerArgs {
    defaultAction: pulumi.Input<inputs.VpclatticeListenerDefaultAction>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    serviceIdentifier?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VpclatticeListenerTag>[]>;
}
