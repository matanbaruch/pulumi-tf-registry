// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BedrockAgent extends pulumi.CustomResource {
    /**
     * Get an existing BedrockAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BedrockAgentState, opts?: pulumi.CustomResourceOptions): BedrockAgent {
        return new BedrockAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/bedrockAgent:BedrockAgent';

    /**
     * Returns true if the given object is an instance of BedrockAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BedrockAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BedrockAgent.__pulumiType;
    }

    /**
     * List of ActionGroups
     */
    public readonly actionGroups!: pulumi.Output<outputs.BedrockAgentActionGroup[]>;
    /**
     * Arn representation of the Agent.
     */
    public /*out*/ readonly agentArn!: pulumi.Output<string>;
    /**
     * Identifier for a resource.
     */
    public /*out*/ readonly agentId!: pulumi.Output<string>;
    /**
     * Name for a resource.
     */
    public readonly agentName!: pulumi.Output<string>;
    /**
     * ARN of a IAM role.
     */
    public readonly agentResourceRoleArn!: pulumi.Output<string>;
    /**
     * Schema Type for Action APIs.
     */
    public /*out*/ readonly agentStatus!: pulumi.Output<string>;
    /**
     * Draft Agent Version.
     */
    public /*out*/ readonly agentVersion!: pulumi.Output<string>;
    /**
     * Specifies whether to automatically prepare after creating or updating the agent.
     */
    public readonly autoPrepare!: pulumi.Output<boolean>;
    /**
     * Time Stamp.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A KMS key ARN
     */
    public readonly customerEncryptionKeyArn!: pulumi.Output<string>;
    /**
     * Description of the Resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Failure Reasons for Error.
     */
    public /*out*/ readonly failureReasons!: pulumi.Output<string[]>;
    /**
     * ARN or name of a Bedrock model.
     */
    public readonly foundationModel!: pulumi.Output<string>;
    /**
     * Configuration for a guardrail.
     */
    public readonly guardrailConfiguration!: pulumi.Output<outputs.BedrockAgentGuardrailConfiguration>;
    /**
     * Max Session Time.
     */
    public readonly idleSessionTtlInSeconds!: pulumi.Output<number>;
    /**
     * Instruction for the agent.
     */
    public readonly instruction!: pulumi.Output<string>;
    /**
     * List of Agent Knowledge Bases
     */
    public readonly knowledgeBases!: pulumi.Output<outputs.BedrockAgentKnowledgeBase[]>;
    /**
     * Time Stamp.
     */
    public /*out*/ readonly preparedAt!: pulumi.Output<string>;
    /**
     * Configuration for prompt override.
     */
    public readonly promptOverrideConfiguration!: pulumi.Output<outputs.BedrockAgentPromptOverrideConfiguration>;
    /**
     * The recommended actions users can take to resolve an error in failureReasons.
     */
    public /*out*/ readonly recommendedActions!: pulumi.Output<string[]>;
    /**
     * Specifies whether to allow deleting agent while it is in use.
     */
    public readonly skipResourceInUseCheckOnDelete!: pulumi.Output<boolean>;
    /**
     * A map of tag keys and values
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * A map of tag keys and values
     */
    public readonly testAliasTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Time Stamp.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a BedrockAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BedrockAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BedrockAgentArgs | BedrockAgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BedrockAgentState | undefined;
            resourceInputs["actionGroups"] = state ? state.actionGroups : undefined;
            resourceInputs["agentArn"] = state ? state.agentArn : undefined;
            resourceInputs["agentId"] = state ? state.agentId : undefined;
            resourceInputs["agentName"] = state ? state.agentName : undefined;
            resourceInputs["agentResourceRoleArn"] = state ? state.agentResourceRoleArn : undefined;
            resourceInputs["agentStatus"] = state ? state.agentStatus : undefined;
            resourceInputs["agentVersion"] = state ? state.agentVersion : undefined;
            resourceInputs["autoPrepare"] = state ? state.autoPrepare : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["customerEncryptionKeyArn"] = state ? state.customerEncryptionKeyArn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["failureReasons"] = state ? state.failureReasons : undefined;
            resourceInputs["foundationModel"] = state ? state.foundationModel : undefined;
            resourceInputs["guardrailConfiguration"] = state ? state.guardrailConfiguration : undefined;
            resourceInputs["idleSessionTtlInSeconds"] = state ? state.idleSessionTtlInSeconds : undefined;
            resourceInputs["instruction"] = state ? state.instruction : undefined;
            resourceInputs["knowledgeBases"] = state ? state.knowledgeBases : undefined;
            resourceInputs["preparedAt"] = state ? state.preparedAt : undefined;
            resourceInputs["promptOverrideConfiguration"] = state ? state.promptOverrideConfiguration : undefined;
            resourceInputs["recommendedActions"] = state ? state.recommendedActions : undefined;
            resourceInputs["skipResourceInUseCheckOnDelete"] = state ? state.skipResourceInUseCheckOnDelete : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["testAliasTags"] = state ? state.testAliasTags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as BedrockAgentArgs | undefined;
            if ((!args || args.agentName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentName'");
            }
            resourceInputs["actionGroups"] = args ? args.actionGroups : undefined;
            resourceInputs["agentName"] = args ? args.agentName : undefined;
            resourceInputs["agentResourceRoleArn"] = args ? args.agentResourceRoleArn : undefined;
            resourceInputs["autoPrepare"] = args ? args.autoPrepare : undefined;
            resourceInputs["customerEncryptionKeyArn"] = args ? args.customerEncryptionKeyArn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["foundationModel"] = args ? args.foundationModel : undefined;
            resourceInputs["guardrailConfiguration"] = args ? args.guardrailConfiguration : undefined;
            resourceInputs["idleSessionTtlInSeconds"] = args ? args.idleSessionTtlInSeconds : undefined;
            resourceInputs["instruction"] = args ? args.instruction : undefined;
            resourceInputs["knowledgeBases"] = args ? args.knowledgeBases : undefined;
            resourceInputs["promptOverrideConfiguration"] = args ? args.promptOverrideConfiguration : undefined;
            resourceInputs["skipResourceInUseCheckOnDelete"] = args ? args.skipResourceInUseCheckOnDelete : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["testAliasTags"] = args ? args.testAliasTags : undefined;
            resourceInputs["agentArn"] = undefined /*out*/;
            resourceInputs["agentId"] = undefined /*out*/;
            resourceInputs["agentStatus"] = undefined /*out*/;
            resourceInputs["agentVersion"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["failureReasons"] = undefined /*out*/;
            resourceInputs["preparedAt"] = undefined /*out*/;
            resourceInputs["recommendedActions"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BedrockAgent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BedrockAgent resources.
 */
export interface BedrockAgentState {
    /**
     * List of ActionGroups
     */
    actionGroups?: pulumi.Input<pulumi.Input<inputs.BedrockAgentActionGroup>[]>;
    /**
     * Arn representation of the Agent.
     */
    agentArn?: pulumi.Input<string>;
    /**
     * Identifier for a resource.
     */
    agentId?: pulumi.Input<string>;
    /**
     * Name for a resource.
     */
    agentName?: pulumi.Input<string>;
    /**
     * ARN of a IAM role.
     */
    agentResourceRoleArn?: pulumi.Input<string>;
    /**
     * Schema Type for Action APIs.
     */
    agentStatus?: pulumi.Input<string>;
    /**
     * Draft Agent Version.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * Specifies whether to automatically prepare after creating or updating the agent.
     */
    autoPrepare?: pulumi.Input<boolean>;
    /**
     * Time Stamp.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A KMS key ARN
     */
    customerEncryptionKeyArn?: pulumi.Input<string>;
    /**
     * Description of the Resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Failure Reasons for Error.
     */
    failureReasons?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN or name of a Bedrock model.
     */
    foundationModel?: pulumi.Input<string>;
    /**
     * Configuration for a guardrail.
     */
    guardrailConfiguration?: pulumi.Input<inputs.BedrockAgentGuardrailConfiguration>;
    /**
     * Max Session Time.
     */
    idleSessionTtlInSeconds?: pulumi.Input<number>;
    /**
     * Instruction for the agent.
     */
    instruction?: pulumi.Input<string>;
    /**
     * List of Agent Knowledge Bases
     */
    knowledgeBases?: pulumi.Input<pulumi.Input<inputs.BedrockAgentKnowledgeBase>[]>;
    /**
     * Time Stamp.
     */
    preparedAt?: pulumi.Input<string>;
    /**
     * Configuration for prompt override.
     */
    promptOverrideConfiguration?: pulumi.Input<inputs.BedrockAgentPromptOverrideConfiguration>;
    /**
     * The recommended actions users can take to resolve an error in failureReasons.
     */
    recommendedActions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies whether to allow deleting agent while it is in use.
     */
    skipResourceInUseCheckOnDelete?: pulumi.Input<boolean>;
    /**
     * A map of tag keys and values
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tag keys and values
     */
    testAliasTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Time Stamp.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BedrockAgent resource.
 */
export interface BedrockAgentArgs {
    /**
     * List of ActionGroups
     */
    actionGroups?: pulumi.Input<pulumi.Input<inputs.BedrockAgentActionGroup>[]>;
    /**
     * Name for a resource.
     */
    agentName: pulumi.Input<string>;
    /**
     * ARN of a IAM role.
     */
    agentResourceRoleArn?: pulumi.Input<string>;
    /**
     * Specifies whether to automatically prepare after creating or updating the agent.
     */
    autoPrepare?: pulumi.Input<boolean>;
    /**
     * A KMS key ARN
     */
    customerEncryptionKeyArn?: pulumi.Input<string>;
    /**
     * Description of the Resource.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN or name of a Bedrock model.
     */
    foundationModel?: pulumi.Input<string>;
    /**
     * Configuration for a guardrail.
     */
    guardrailConfiguration?: pulumi.Input<inputs.BedrockAgentGuardrailConfiguration>;
    /**
     * Max Session Time.
     */
    idleSessionTtlInSeconds?: pulumi.Input<number>;
    /**
     * Instruction for the agent.
     */
    instruction?: pulumi.Input<string>;
    /**
     * List of Agent Knowledge Bases
     */
    knowledgeBases?: pulumi.Input<pulumi.Input<inputs.BedrockAgentKnowledgeBase>[]>;
    /**
     * Configuration for prompt override.
     */
    promptOverrideConfiguration?: pulumi.Input<inputs.BedrockAgentPromptOverrideConfiguration>;
    /**
     * Specifies whether to allow deleting agent while it is in use.
     */
    skipResourceInUseCheckOnDelete?: pulumi.Input<boolean>;
    /**
     * A map of tag keys and values
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A map of tag keys and values
     */
    testAliasTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
