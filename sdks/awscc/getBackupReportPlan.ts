// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBackupReportPlan(args: GetBackupReportPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupReportPlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getBackupReportPlan:getBackupReportPlan", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBackupReportPlan.
 */
export interface GetBackupReportPlanArgs {
    id: string;
}

/**
 * A collection of values returned by getBackupReportPlan.
 */
export interface GetBackupReportPlanResult {
    readonly id: string;
    readonly reportDeliveryChannel: outputs.GetBackupReportPlanReportDeliveryChannel;
    readonly reportPlanArn: string;
    readonly reportPlanDescription: string;
    readonly reportPlanName: string;
    readonly reportPlanTags: outputs.GetBackupReportPlanReportPlanTag[];
    readonly reportSetting: outputs.GetBackupReportPlanReportSetting;
}
export function getBackupReportPlanOutput(args: GetBackupReportPlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupReportPlanResult> {
    return pulumi.output(args).apply((a: any) => getBackupReportPlan(a, opts))
}

/**
 * A collection of arguments for invoking getBackupReportPlan.
 */
export interface GetBackupReportPlanOutputArgs {
    id: pulumi.Input<string>;
}
