// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2IpamPool(args: GetEc2IpamPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2IpamPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2IpamPool:getEc2IpamPool", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2IpamPool.
 */
export interface GetEc2IpamPoolArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2IpamPool.
 */
export interface GetEc2IpamPoolResult {
    readonly addressFamily: string;
    readonly allocationDefaultNetmaskLength: number;
    readonly allocationMaxNetmaskLength: number;
    readonly allocationMinNetmaskLength: number;
    readonly allocationResourceTags: outputs.GetEc2IpamPoolAllocationResourceTag[];
    readonly arn: string;
    readonly autoImport: boolean;
    readonly awsService: string;
    readonly description: string;
    readonly id: string;
    readonly ipamArn: string;
    readonly ipamPoolId: string;
    readonly ipamScopeArn: string;
    readonly ipamScopeId: string;
    readonly ipamScopeType: string;
    readonly locale: string;
    readonly poolDepth: number;
    readonly provisionedCidrs: outputs.GetEc2IpamPoolProvisionedCidr[];
    readonly publicIpSource: string;
    readonly publiclyAdvertisable: boolean;
    readonly sourceIpamPoolId: string;
    readonly sourceResource: outputs.GetEc2IpamPoolSourceResource;
    readonly state: string;
    readonly stateMessage: string;
    readonly tags: outputs.GetEc2IpamPoolTag[];
}
export function getEc2IpamPoolOutput(args: GetEc2IpamPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2IpamPoolResult> {
    return pulumi.output(args).apply((a: any) => getEc2IpamPool(a, opts))
}

/**
 * A collection of arguments for invoking getEc2IpamPool.
 */
export interface GetEc2IpamPoolOutputArgs {
    id: pulumi.Input<string>;
}
