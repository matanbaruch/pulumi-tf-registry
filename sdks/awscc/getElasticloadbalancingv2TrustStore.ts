// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticloadbalancingv2TrustStore(args: GetElasticloadbalancingv2TrustStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticloadbalancingv2TrustStoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getElasticloadbalancingv2TrustStore:getElasticloadbalancingv2TrustStore", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticloadbalancingv2TrustStore.
 */
export interface GetElasticloadbalancingv2TrustStoreArgs {
    id: string;
}

/**
 * A collection of values returned by getElasticloadbalancingv2TrustStore.
 */
export interface GetElasticloadbalancingv2TrustStoreResult {
    readonly caCertificatesBundleS3Bucket: string;
    readonly caCertificatesBundleS3Key: string;
    readonly caCertificatesBundleS3ObjectVersion: string;
    readonly id: string;
    readonly name: string;
    readonly numberOfCaCertificates: number;
    readonly status: string;
    readonly tags: outputs.GetElasticloadbalancingv2TrustStoreTag[];
    readonly trustStoreArn: string;
}
export function getElasticloadbalancingv2TrustStoreOutput(args: GetElasticloadbalancingv2TrustStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticloadbalancingv2TrustStoreResult> {
    return pulumi.output(args).apply((a: any) => getElasticloadbalancingv2TrustStore(a, opts))
}

/**
 * A collection of arguments for invoking getElasticloadbalancingv2TrustStore.
 */
export interface GetElasticloadbalancingv2TrustStoreOutputArgs {
    id: pulumi.Input<string>;
}
