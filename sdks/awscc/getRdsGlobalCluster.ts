// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRdsGlobalCluster(args: GetRdsGlobalClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetRdsGlobalClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRdsGlobalCluster:getRdsGlobalCluster", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdsGlobalCluster.
 */
export interface GetRdsGlobalClusterArgs {
    id: string;
}

/**
 * A collection of values returned by getRdsGlobalCluster.
 */
export interface GetRdsGlobalClusterResult {
    readonly deletionProtection: boolean;
    readonly engine: string;
    readonly engineLifecycleSupport: string;
    readonly engineVersion: string;
    readonly globalClusterIdentifier: string;
    readonly id: string;
    readonly sourceDbClusterIdentifier: string;
    readonly storageEncrypted: boolean;
}
export function getRdsGlobalClusterOutput(args: GetRdsGlobalClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdsGlobalClusterResult> {
    return pulumi.output(args).apply((a: any) => getRdsGlobalCluster(a, opts))
}

/**
 * A collection of arguments for invoking getRdsGlobalCluster.
 */
export interface GetRdsGlobalClusterOutputArgs {
    id: pulumi.Input<string>;
}
