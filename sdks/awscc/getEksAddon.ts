// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEksAddon(args: GetEksAddonArgs, opts?: pulumi.InvokeOptions): Promise<GetEksAddonResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEksAddon:getEksAddon", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEksAddon.
 */
export interface GetEksAddonArgs {
    id: string;
}

/**
 * A collection of values returned by getEksAddon.
 */
export interface GetEksAddonResult {
    readonly addonName: string;
    readonly addonVersion: string;
    readonly arn: string;
    readonly clusterName: string;
    readonly configurationValues: string;
    readonly id: string;
    readonly podIdentityAssociations: outputs.GetEksAddonPodIdentityAssociation[];
    readonly preserveOnDelete: boolean;
    readonly resolveConflicts: string;
    readonly serviceAccountRoleArn: string;
    readonly tags: outputs.GetEksAddonTag[];
}
export function getEksAddonOutput(args: GetEksAddonOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEksAddonResult> {
    return pulumi.output(args).apply((a: any) => getEksAddon(a, opts))
}

/**
 * A collection of arguments for invoking getEksAddon.
 */
export interface GetEksAddonOutputArgs {
    id: pulumi.Input<string>;
}
