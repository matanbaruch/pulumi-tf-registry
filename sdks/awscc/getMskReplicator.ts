// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMskReplicator(args: GetMskReplicatorArgs, opts?: pulumi.InvokeOptions): Promise<GetMskReplicatorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMskReplicator:getMskReplicator", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMskReplicator.
 */
export interface GetMskReplicatorArgs {
    id: string;
}

/**
 * A collection of values returned by getMskReplicator.
 */
export interface GetMskReplicatorResult {
    readonly currentVersion: string;
    readonly description: string;
    readonly id: string;
    readonly kafkaClusters: outputs.GetMskReplicatorKafkaCluster[];
    readonly replicationInfoLists: outputs.GetMskReplicatorReplicationInfoList[];
    readonly replicatorArn: string;
    readonly replicatorName: string;
    readonly serviceExecutionRoleArn: string;
    readonly tags: outputs.GetMskReplicatorTag[];
}
export function getMskReplicatorOutput(args: GetMskReplicatorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMskReplicatorResult> {
    return pulumi.output(args).apply((a: any) => getMskReplicator(a, opts))
}

/**
 * A collection of arguments for invoking getMskReplicator.
 */
export interface GetMskReplicatorOutputArgs {
    id: pulumi.Input<string>;
}
