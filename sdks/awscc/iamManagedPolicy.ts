// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IamManagedPolicy extends pulumi.CustomResource {
    /**
     * Get an existing IamManagedPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamManagedPolicyState, opts?: pulumi.CustomResourceOptions): IamManagedPolicy {
        return new IamManagedPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iamManagedPolicy:IamManagedPolicy';

    /**
     * Returns true if the given object is an instance of IamManagedPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamManagedPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamManagedPolicy.__pulumiType;
    }

    public /*out*/ readonly attachmentCount!: pulumi.Output<number>;
    public /*out*/ readonly createDate!: pulumi.Output<string>;
    public /*out*/ readonly defaultVersionId!: pulumi.Output<string>;
    /**
     * A friendly description of the policy. Typically used to store information about the permissions defined in the policy.
     * For example, "Grants access to production DynamoDB tables." The policy description is immutable. After a value is
     * assigned, it cannot be changed.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name (friendly name, not ARN) of the group to attach the policy to. This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
     */
    public readonly groups!: pulumi.Output<string[]>;
    public /*out*/ readonly isAttachable!: pulumi.Output<boolean>;
    /**
     * The friendly name of the policy. If you specify a name, you cannot perform updates that require replacement of this
     * resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new
     * name. If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's
     * capabilities. For more information, see [Acknowledging Resources in
     * Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
     * Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent
     * this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example:
     * ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
     */
    public readonly managedPolicyName!: pulumi.Output<string>;
    /**
     * The path for the policy. For more information about paths, see [IAM
     * identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*. This
     * parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a
     * forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any
     * ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters,
     * digits, and upper and lowercased letters. You cannot use an asterisk (*) in the path name.
     */
    public readonly path!: pulumi.Output<string>;
    public /*out*/ readonly permissionsBoundaryUsageCount!: pulumi.Output<number>;
    public /*out*/ readonly policyArn!: pulumi.Output<string>;
    /**
     * The JSON policy document that you want to use as the content for the new policy. You must provide policies in JSON
     * format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN
     * always converts a YAML policy to JSON format before submitting it to IAM. The maximum length of the policy document that
     * you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed
     * policy with no whitespaces, see [IAM and character
     * quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
     * To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy
     * language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*. The
     * [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string
     * of characters consisting of the following: + Any printable ASCII character ranging from the space character (``\u0020``)
     * through the end of the ASCII character range + The printable characters in the Basic Latin and Latin-1 Supplement
     * character set (through ``\u00FF``) + The special characters tab (``\u0009``), line feed (``\u000A``), and carriage
     * return (``\u000D``)
     */
    public readonly policyDocument!: pulumi.Output<string>;
    public /*out*/ readonly policyId!: pulumi.Output<string>;
    /**
     * The name (friendly name, not ARN) of the role to attach the policy to. This parameter allows (per its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- If an
     * external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource
     * (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to
     * make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout
     * the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn``
     * attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
     */
    public readonly roles!: pulumi.Output<string[]>;
    public /*out*/ readonly updateDate!: pulumi.Output<string>;
    /**
     * The name (friendly name, not ARN) of the IAM user to attach the policy to. This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
     */
    public readonly users!: pulumi.Output<string[]>;

    /**
     * Create a IamManagedPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamManagedPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamManagedPolicyArgs | IamManagedPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamManagedPolicyState | undefined;
            resourceInputs["attachmentCount"] = state ? state.attachmentCount : undefined;
            resourceInputs["createDate"] = state ? state.createDate : undefined;
            resourceInputs["defaultVersionId"] = state ? state.defaultVersionId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["isAttachable"] = state ? state.isAttachable : undefined;
            resourceInputs["managedPolicyName"] = state ? state.managedPolicyName : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["permissionsBoundaryUsageCount"] = state ? state.permissionsBoundaryUsageCount : undefined;
            resourceInputs["policyArn"] = state ? state.policyArn : undefined;
            resourceInputs["policyDocument"] = state ? state.policyDocument : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
            resourceInputs["updateDate"] = state ? state.updateDate : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as IamManagedPolicyArgs | undefined;
            if ((!args || args.policyDocument === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyDocument'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["managedPolicyName"] = args ? args.managedPolicyName : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["policyDocument"] = args ? args.policyDocument : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["attachmentCount"] = undefined /*out*/;
            resourceInputs["createDate"] = undefined /*out*/;
            resourceInputs["defaultVersionId"] = undefined /*out*/;
            resourceInputs["isAttachable"] = undefined /*out*/;
            resourceInputs["permissionsBoundaryUsageCount"] = undefined /*out*/;
            resourceInputs["policyArn"] = undefined /*out*/;
            resourceInputs["policyId"] = undefined /*out*/;
            resourceInputs["updateDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamManagedPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IamManagedPolicy resources.
 */
export interface IamManagedPolicyState {
    attachmentCount?: pulumi.Input<number>;
    createDate?: pulumi.Input<string>;
    defaultVersionId?: pulumi.Input<string>;
    /**
     * A friendly description of the policy. Typically used to store information about the permissions defined in the policy.
     * For example, "Grants access to production DynamoDB tables." The policy description is immutable. After a value is
     * assigned, it cannot be changed.
     */
    description?: pulumi.Input<string>;
    /**
     * The name (friendly name, not ARN) of the group to attach the policy to. This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    isAttachable?: pulumi.Input<boolean>;
    /**
     * The friendly name of the policy. If you specify a name, you cannot perform updates that require replacement of this
     * resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new
     * name. If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's
     * capabilities. For more information, see [Acknowledging Resources in
     * Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
     * Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent
     * this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example:
     * ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
     */
    managedPolicyName?: pulumi.Input<string>;
    /**
     * The path for the policy. For more information about paths, see [IAM
     * identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*. This
     * parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a
     * forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any
     * ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters,
     * digits, and upper and lowercased letters. You cannot use an asterisk (*) in the path name.
     */
    path?: pulumi.Input<string>;
    permissionsBoundaryUsageCount?: pulumi.Input<number>;
    policyArn?: pulumi.Input<string>;
    /**
     * The JSON policy document that you want to use as the content for the new policy. You must provide policies in JSON
     * format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN
     * always converts a YAML policy to JSON format before submitting it to IAM. The maximum length of the policy document that
     * you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed
     * policy with no whitespaces, see [IAM and character
     * quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
     * To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy
     * language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*. The
     * [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string
     * of characters consisting of the following: + Any printable ASCII character ranging from the space character (``\u0020``)
     * through the end of the ASCII character range + The printable characters in the Basic Latin and Latin-1 Supplement
     * character set (through ``\u00FF``) + The special characters tab (``\u0009``), line feed (``\u000A``), and carriage
     * return (``\u000D``)
     */
    policyDocument?: pulumi.Input<string>;
    policyId?: pulumi.Input<string>;
    /**
     * The name (friendly name, not ARN) of the role to attach the policy to. This parameter allows (per its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- If an
     * external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource
     * (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to
     * make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout
     * the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn``
     * attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    updateDate?: pulumi.Input<string>;
    /**
     * The name (friendly name, not ARN) of the IAM user to attach the policy to. This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a IamManagedPolicy resource.
 */
export interface IamManagedPolicyArgs {
    /**
     * A friendly description of the policy. Typically used to store information about the permissions defined in the policy.
     * For example, "Grants access to production DynamoDB tables." The policy description is immutable. After a value is
     * assigned, it cannot be changed.
     */
    description?: pulumi.Input<string>;
    /**
     * The name (friendly name, not ARN) of the group to attach the policy to. This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The friendly name of the policy. If you specify a name, you cannot perform updates that require replacement of this
     * resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new
     * name. If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's
     * capabilities. For more information, see [Acknowledging Resources in
     * Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
     * Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent
     * this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example:
     * ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
     */
    managedPolicyName?: pulumi.Input<string>;
    /**
     * The path for the policy. For more information about paths, see [IAM
     * identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*. This
     * parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a
     * forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any
     * ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters,
     * digits, and upper and lowercased letters. You cannot use an asterisk (*) in the path name.
     */
    path?: pulumi.Input<string>;
    /**
     * The JSON policy document that you want to use as the content for the new policy. You must provide policies in JSON
     * format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN
     * always converts a YAML policy to JSON format before submitting it to IAM. The maximum length of the policy document that
     * you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed
     * policy with no whitespaces, see [IAM and character
     * quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
     * To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy
     * language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*. The
     * [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string
     * of characters consisting of the following: + Any printable ASCII character ranging from the space character (``\u0020``)
     * through the end of the ASCII character range + The printable characters in the Basic Latin and Latin-1 Supplement
     * character set (through ``\u00FF``) + The special characters tab (``\u0009``), line feed (``\u000A``), and carriage
     * return (``\u000D``)
     */
    policyDocument: pulumi.Input<string>;
    /**
     * The name (friendly name, not ARN) of the role to attach the policy to. This parameter allows (per its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@- If an
     * external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource
     * (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to
     * make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout
     * the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn``
     * attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name (friendly name, not ARN) of the IAM user to attach the policy to. This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and
     * lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
     */
    users?: pulumi.Input<pulumi.Input<string>[]>;
}
