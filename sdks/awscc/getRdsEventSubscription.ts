// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdsEventSubscription(args: GetRdsEventSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetRdsEventSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRdsEventSubscription:getRdsEventSubscription", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdsEventSubscription.
 */
export interface GetRdsEventSubscriptionArgs {
    id: string;
}

/**
 * A collection of values returned by getRdsEventSubscription.
 */
export interface GetRdsEventSubscriptionResult {
    readonly enabled: boolean;
    readonly eventCategories: string[];
    readonly id: string;
    readonly snsTopicArn: string;
    readonly sourceIds: string[];
    readonly sourceType: string;
    readonly subscriptionName: string;
    readonly tags: outputs.GetRdsEventSubscriptionTag[];
}
export function getRdsEventSubscriptionOutput(args: GetRdsEventSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdsEventSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getRdsEventSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getRdsEventSubscription.
 */
export interface GetRdsEventSubscriptionOutputArgs {
    id: pulumi.Input<string>;
}
