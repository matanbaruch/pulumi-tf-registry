// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class QbusinessDataSource extends pulumi.CustomResource {
    /**
     * Get an existing QbusinessDataSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QbusinessDataSourceState, opts?: pulumi.CustomResourceOptions): QbusinessDataSource {
        return new QbusinessDataSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/qbusinessDataSource:QbusinessDataSource';

    /**
     * Returns true if the given object is an instance of QbusinessDataSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QbusinessDataSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QbusinessDataSource.__pulumiType;
    }

    public readonly applicationId!: pulumi.Output<string>;
    public readonly configuration!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public /*out*/ readonly dataSourceArn!: pulumi.Output<string>;
    public /*out*/ readonly dataSourceId!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly documentEnrichmentConfiguration!: pulumi.Output<outputs.QbusinessDataSourceDocumentEnrichmentConfiguration>;
    public readonly indexId!: pulumi.Output<string>;
    public readonly roleArn!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly syncSchedule!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.QbusinessDataSourceTag[]>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    public readonly vpcConfiguration!: pulumi.Output<outputs.QbusinessDataSourceVpcConfiguration>;

    /**
     * Create a QbusinessDataSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QbusinessDataSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QbusinessDataSourceArgs | QbusinessDataSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QbusinessDataSourceState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dataSourceArn"] = state ? state.dataSourceArn : undefined;
            resourceInputs["dataSourceId"] = state ? state.dataSourceId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["documentEnrichmentConfiguration"] = state ? state.documentEnrichmentConfiguration : undefined;
            resourceInputs["indexId"] = state ? state.indexId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["syncSchedule"] = state ? state.syncSchedule : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["vpcConfiguration"] = state ? state.vpcConfiguration : undefined;
        } else {
            const args = argsOrState as QbusinessDataSourceArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.configuration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configuration'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.indexId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'indexId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["documentEnrichmentConfiguration"] = args ? args.documentEnrichmentConfiguration : undefined;
            resourceInputs["indexId"] = args ? args.indexId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["syncSchedule"] = args ? args.syncSchedule : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcConfiguration"] = args ? args.vpcConfiguration : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dataSourceArn"] = undefined /*out*/;
            resourceInputs["dataSourceId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QbusinessDataSource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering QbusinessDataSource resources.
 */
export interface QbusinessDataSourceState {
    applicationId?: pulumi.Input<string>;
    configuration?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    dataSourceArn?: pulumi.Input<string>;
    dataSourceId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    documentEnrichmentConfiguration?: pulumi.Input<inputs.QbusinessDataSourceDocumentEnrichmentConfiguration>;
    indexId?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    syncSchedule?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.QbusinessDataSourceTag>[]>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    vpcConfiguration?: pulumi.Input<inputs.QbusinessDataSourceVpcConfiguration>;
}

/**
 * The set of arguments for constructing a QbusinessDataSource resource.
 */
export interface QbusinessDataSourceArgs {
    applicationId: pulumi.Input<string>;
    configuration: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    documentEnrichmentConfiguration?: pulumi.Input<inputs.QbusinessDataSourceDocumentEnrichmentConfiguration>;
    indexId: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    syncSchedule?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.QbusinessDataSourceTag>[]>;
    vpcConfiguration?: pulumi.Input<inputs.QbusinessDataSourceVpcConfiguration>;
}
