// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Route53resolverOutpostResolver extends pulumi.CustomResource {
    /**
     * Get an existing Route53resolverOutpostResolver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53resolverOutpostResolverState, opts?: pulumi.CustomResourceOptions): Route53resolverOutpostResolver {
        return new Route53resolverOutpostResolver(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/route53resolverOutpostResolver:Route53resolverOutpostResolver';

    /**
     * Returns true if the given object is an instance of Route53resolverOutpostResolver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53resolverOutpostResolver {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53resolverOutpostResolver.__pulumiType;
    }

    /**
     * The OutpostResolver ARN.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The OutpostResolver creation time
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The id of the creator request.
     */
    public /*out*/ readonly creatorRequestId!: pulumi.Output<string>;
    /**
     * The number of OutpostResolvers.
     */
    public readonly instanceCount!: pulumi.Output<number>;
    /**
     * The OutpostResolver last modified time
     */
    public /*out*/ readonly modificationTime!: pulumi.Output<string>;
    /**
     * The OutpostResolver name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Outpost ARN.
     */
    public readonly outpostArn!: pulumi.Output<string>;
    /**
     * Id
     */
    public /*out*/ readonly outpostResolverId!: pulumi.Output<string>;
    /**
     * The OutpostResolver instance type.
     */
    public readonly preferredInstanceType!: pulumi.Output<string>;
    /**
     * The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED,
     * FAILED_CREATION and FAILED_DELETION.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The OutpostResolver status message.
     */
    public /*out*/ readonly statusMessage!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Route53resolverOutpostResolverTag[]>;

    /**
     * Create a Route53resolverOutpostResolver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Route53resolverOutpostResolverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53resolverOutpostResolverArgs | Route53resolverOutpostResolverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53resolverOutpostResolverState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["creatorRequestId"] = state ? state.creatorRequestId : undefined;
            resourceInputs["instanceCount"] = state ? state.instanceCount : undefined;
            resourceInputs["modificationTime"] = state ? state.modificationTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outpostArn"] = state ? state.outpostArn : undefined;
            resourceInputs["outpostResolverId"] = state ? state.outpostResolverId : undefined;
            resourceInputs["preferredInstanceType"] = state ? state.preferredInstanceType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusMessage"] = state ? state.statusMessage : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Route53resolverOutpostResolverArgs | undefined;
            if ((!args || args.outpostArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'outpostArn'");
            }
            if ((!args || args.preferredInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preferredInstanceType'");
            }
            resourceInputs["instanceCount"] = args ? args.instanceCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outpostArn"] = args ? args.outpostArn : undefined;
            resourceInputs["preferredInstanceType"] = args ? args.preferredInstanceType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["creatorRequestId"] = undefined /*out*/;
            resourceInputs["modificationTime"] = undefined /*out*/;
            resourceInputs["outpostResolverId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53resolverOutpostResolver.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53resolverOutpostResolver resources.
 */
export interface Route53resolverOutpostResolverState {
    /**
     * The OutpostResolver ARN.
     */
    arn?: pulumi.Input<string>;
    /**
     * The OutpostResolver creation time
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The id of the creator request.
     */
    creatorRequestId?: pulumi.Input<string>;
    /**
     * The number of OutpostResolvers.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The OutpostResolver last modified time
     */
    modificationTime?: pulumi.Input<string>;
    /**
     * The OutpostResolver name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Outpost ARN.
     */
    outpostArn?: pulumi.Input<string>;
    /**
     * Id
     */
    outpostResolverId?: pulumi.Input<string>;
    /**
     * The OutpostResolver instance type.
     */
    preferredInstanceType?: pulumi.Input<string>;
    /**
     * The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED,
     * FAILED_CREATION and FAILED_DELETION.
     */
    status?: pulumi.Input<string>;
    /**
     * The OutpostResolver status message.
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53resolverOutpostResolverTag>[]>;
}

/**
 * The set of arguments for constructing a Route53resolverOutpostResolver resource.
 */
export interface Route53resolverOutpostResolverArgs {
    /**
     * The number of OutpostResolvers.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The OutpostResolver name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Outpost ARN.
     */
    outpostArn: pulumi.Input<string>;
    /**
     * The OutpostResolver instance type.
     */
    preferredInstanceType: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53resolverOutpostResolverTag>[]>;
}
