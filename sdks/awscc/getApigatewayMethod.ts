// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayMethod(args: GetApigatewayMethodArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayMethodResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayMethod:getApigatewayMethod", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayMethod.
 */
export interface GetApigatewayMethodArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayMethod.
 */
export interface GetApigatewayMethodResult {
    readonly apiKeyRequired: boolean;
    readonly authorizationScopes: string[];
    readonly authorizationType: string;
    readonly authorizerId: string;
    readonly httpMethod: string;
    readonly id: string;
    readonly integration: outputs.GetApigatewayMethodIntegration;
    readonly methodResponses: outputs.GetApigatewayMethodMethodResponse[];
    readonly operationName: string;
    readonly requestModels: {[key: string]: string};
    readonly requestParameters: {[key: string]: boolean};
    readonly requestValidatorId: string;
    readonly resourceId: string;
    readonly restApiId: string;
}
export function getApigatewayMethodOutput(args: GetApigatewayMethodOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayMethodResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayMethod(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayMethod.
 */
export interface GetApigatewayMethodOutputArgs {
    id: pulumi.Input<string>;
}
