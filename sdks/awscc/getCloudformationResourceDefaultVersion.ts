// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudformationResourceDefaultVersion(args: GetCloudformationResourceDefaultVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationResourceDefaultVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudformationResourceDefaultVersion:getCloudformationResourceDefaultVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationResourceDefaultVersion.
 */
export interface GetCloudformationResourceDefaultVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudformationResourceDefaultVersion.
 */
export interface GetCloudformationResourceDefaultVersionResult {
    readonly arn: string;
    readonly id: string;
    readonly typeName: string;
    readonly typeVersionArn: string;
    readonly versionId: string;
}
export function getCloudformationResourceDefaultVersionOutput(args: GetCloudformationResourceDefaultVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationResourceDefaultVersionResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationResourceDefaultVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationResourceDefaultVersion.
 */
export interface GetCloudformationResourceDefaultVersionOutputArgs {
    id: pulumi.Input<string>;
}
