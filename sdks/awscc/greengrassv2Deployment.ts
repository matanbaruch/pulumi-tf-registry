// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Greengrassv2Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Greengrassv2Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Greengrassv2DeploymentState, opts?: pulumi.CustomResourceOptions): Greengrassv2Deployment {
        return new Greengrassv2Deployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/greengrassv2Deployment:Greengrassv2Deployment';

    /**
     * Returns true if the given object is an instance of Greengrassv2Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Greengrassv2Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Greengrassv2Deployment.__pulumiType;
    }

    public readonly components!: pulumi.Output<{[key: string]: outputs.Greengrassv2DeploymentComponents}>;
    public /*out*/ readonly deploymentId!: pulumi.Output<string>;
    public readonly deploymentName!: pulumi.Output<string>;
    public readonly deploymentPolicies!: pulumi.Output<outputs.Greengrassv2DeploymentDeploymentPolicies>;
    public readonly iotJobConfiguration!: pulumi.Output<outputs.Greengrassv2DeploymentIotJobConfiguration>;
    public readonly parentTargetArn!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    public readonly targetArn!: pulumi.Output<string>;

    /**
     * Create a Greengrassv2Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Greengrassv2DeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Greengrassv2DeploymentArgs | Greengrassv2DeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Greengrassv2DeploymentState | undefined;
            resourceInputs["components"] = state ? state.components : undefined;
            resourceInputs["deploymentId"] = state ? state.deploymentId : undefined;
            resourceInputs["deploymentName"] = state ? state.deploymentName : undefined;
            resourceInputs["deploymentPolicies"] = state ? state.deploymentPolicies : undefined;
            resourceInputs["iotJobConfiguration"] = state ? state.iotJobConfiguration : undefined;
            resourceInputs["parentTargetArn"] = state ? state.parentTargetArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetArn"] = state ? state.targetArn : undefined;
        } else {
            const args = argsOrState as Greengrassv2DeploymentArgs | undefined;
            if ((!args || args.targetArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetArn'");
            }
            resourceInputs["components"] = args ? args.components : undefined;
            resourceInputs["deploymentName"] = args ? args.deploymentName : undefined;
            resourceInputs["deploymentPolicies"] = args ? args.deploymentPolicies : undefined;
            resourceInputs["iotJobConfiguration"] = args ? args.iotJobConfiguration : undefined;
            resourceInputs["parentTargetArn"] = args ? args.parentTargetArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetArn"] = args ? args.targetArn : undefined;
            resourceInputs["deploymentId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Greengrassv2Deployment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Greengrassv2Deployment resources.
 */
export interface Greengrassv2DeploymentState {
    components?: pulumi.Input<{[key: string]: pulumi.Input<inputs.Greengrassv2DeploymentComponents>}>;
    deploymentId?: pulumi.Input<string>;
    deploymentName?: pulumi.Input<string>;
    deploymentPolicies?: pulumi.Input<inputs.Greengrassv2DeploymentDeploymentPolicies>;
    iotJobConfiguration?: pulumi.Input<inputs.Greengrassv2DeploymentIotJobConfiguration>;
    parentTargetArn?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Greengrassv2Deployment resource.
 */
export interface Greengrassv2DeploymentArgs {
    components?: pulumi.Input<{[key: string]: pulumi.Input<inputs.Greengrassv2DeploymentComponents>}>;
    deploymentName?: pulumi.Input<string>;
    deploymentPolicies?: pulumi.Input<inputs.Greengrassv2DeploymentDeploymentPolicies>;
    iotJobConfiguration?: pulumi.Input<inputs.Greengrassv2DeploymentIotJobConfiguration>;
    parentTargetArn?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    targetArn: pulumi.Input<string>;
}
