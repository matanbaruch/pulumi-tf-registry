// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLightsailCertificate(args: GetLightsailCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetLightsailCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLightsailCertificate:getLightsailCertificate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLightsailCertificate.
 */
export interface GetLightsailCertificateArgs {
    id: string;
}

/**
 * A collection of values returned by getLightsailCertificate.
 */
export interface GetLightsailCertificateResult {
    readonly certificateArn: string;
    readonly certificateName: string;
    readonly domainName: string;
    readonly id: string;
    readonly status: string;
    readonly subjectAlternativeNames: string[];
    readonly tags: outputs.GetLightsailCertificateTag[];
}
export function getLightsailCertificateOutput(args: GetLightsailCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLightsailCertificateResult> {
    return pulumi.output(args).apply((a: any) => getLightsailCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getLightsailCertificate.
 */
export interface GetLightsailCertificateOutputArgs {
    id: pulumi.Input<string>;
}
