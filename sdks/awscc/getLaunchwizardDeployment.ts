// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLaunchwizardDeployment(args: GetLaunchwizardDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetLaunchwizardDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLaunchwizardDeployment:getLaunchwizardDeployment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLaunchwizardDeployment.
 */
export interface GetLaunchwizardDeploymentArgs {
    id: string;
}

/**
 * A collection of values returned by getLaunchwizardDeployment.
 */
export interface GetLaunchwizardDeploymentResult {
    readonly arn: string;
    readonly createdAt: string;
    readonly deletedAt: string;
    readonly deploymentId: string;
    readonly deploymentPatternName: string;
    readonly id: string;
    readonly name: string;
    readonly resourceGroup: string;
    readonly specifications: {[key: string]: string};
    readonly status: string;
    readonly tags: outputs.GetLaunchwizardDeploymentTag[];
    readonly workloadName: string;
}
export function getLaunchwizardDeploymentOutput(args: GetLaunchwizardDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLaunchwizardDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getLaunchwizardDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getLaunchwizardDeployment.
 */
export interface GetLaunchwizardDeploymentOutputArgs {
    id: pulumi.Input<string>;
}
