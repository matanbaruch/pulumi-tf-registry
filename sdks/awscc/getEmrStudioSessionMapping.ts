// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEmrStudioSessionMapping(args: GetEmrStudioSessionMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrStudioSessionMappingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEmrStudioSessionMapping:getEmrStudioSessionMapping", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrStudioSessionMapping.
 */
export interface GetEmrStudioSessionMappingArgs {
    id: string;
}

/**
 * A collection of values returned by getEmrStudioSessionMapping.
 */
export interface GetEmrStudioSessionMappingResult {
    readonly id: string;
    readonly identityName: string;
    readonly identityType: string;
    readonly sessionPolicyArn: string;
    readonly studioId: string;
}
export function getEmrStudioSessionMappingOutput(args: GetEmrStudioSessionMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrStudioSessionMappingResult> {
    return pulumi.output(args).apply((a: any) => getEmrStudioSessionMapping(a, opts))
}

/**
 * A collection of arguments for invoking getEmrStudioSessionMapping.
 */
export interface GetEmrStudioSessionMappingOutputArgs {
    id: pulumi.Input<string>;
}
