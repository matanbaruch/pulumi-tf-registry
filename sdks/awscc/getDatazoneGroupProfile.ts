// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatazoneGroupProfile(args: GetDatazoneGroupProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetDatazoneGroupProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatazoneGroupProfile:getDatazoneGroupProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatazoneGroupProfile.
 */
export interface GetDatazoneGroupProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getDatazoneGroupProfile.
 */
export interface GetDatazoneGroupProfileResult {
    readonly domainId: string;
    readonly domainIdentifier: string;
    readonly groupIdentifier: string;
    readonly groupName: string;
    readonly groupProfileId: string;
    readonly id: string;
    readonly status: string;
}
export function getDatazoneGroupProfileOutput(args: GetDatazoneGroupProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatazoneGroupProfileResult> {
    return pulumi.output(args).apply((a: any) => getDatazoneGroupProfile(a, opts))
}

/**
 * A collection of arguments for invoking getDatazoneGroupProfile.
 */
export interface GetDatazoneGroupProfileOutputArgs {
    id: pulumi.Input<string>;
}
