// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWisdomAssistant(args: GetWisdomAssistantArgs, opts?: pulumi.InvokeOptions): Promise<GetWisdomAssistantResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWisdomAssistant:getWisdomAssistant", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWisdomAssistant.
 */
export interface GetWisdomAssistantArgs {
    id: string;
}

/**
 * A collection of values returned by getWisdomAssistant.
 */
export interface GetWisdomAssistantResult {
    readonly assistantArn: string;
    readonly assistantId: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly serverSideEncryptionConfiguration: outputs.GetWisdomAssistantServerSideEncryptionConfiguration;
    readonly tags: outputs.GetWisdomAssistantTag[];
    readonly type: string;
}
export function getWisdomAssistantOutput(args: GetWisdomAssistantOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWisdomAssistantResult> {
    return pulumi.output(args).apply((a: any) => getWisdomAssistant(a, opts))
}

/**
 * A collection of arguments for invoking getWisdomAssistant.
 */
export interface GetWisdomAssistantOutputArgs {
    id: pulumi.Input<string>;
}
