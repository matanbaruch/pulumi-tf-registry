// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2VpnConnection(args: GetEc2VpnConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2VpnConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2VpnConnection:getEc2VpnConnection", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2VpnConnection.
 */
export interface GetEc2VpnConnectionArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2VpnConnection.
 */
export interface GetEc2VpnConnectionResult {
    readonly customerGatewayId: string;
    readonly enableAcceleration: boolean;
    readonly id: string;
    readonly localIpv4NetworkCidr: string;
    readonly localIpv6NetworkCidr: string;
    readonly outsideIpAddressType: string;
    readonly remoteIpv4NetworkCidr: string;
    readonly remoteIpv6NetworkCidr: string;
    readonly staticRoutesOnly: boolean;
    readonly tags: outputs.GetEc2VpnConnectionTag[];
    readonly transitGatewayId: string;
    readonly transportTransitGatewayAttachmentId: string;
    readonly tunnelInsideIpVersion: string;
    readonly type: string;
    readonly vpnConnectionId: string;
    readonly vpnGatewayId: string;
    readonly vpnTunnelOptionsSpecifications: outputs.GetEc2VpnConnectionVpnTunnelOptionsSpecification[];
}
export function getEc2VpnConnectionOutput(args: GetEc2VpnConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2VpnConnectionResult> {
    return pulumi.output(args).apply((a: any) => getEc2VpnConnection(a, opts))
}

/**
 * A collection of arguments for invoking getEc2VpnConnection.
 */
export interface GetEc2VpnConnectionOutputArgs {
    id: pulumi.Input<string>;
}
