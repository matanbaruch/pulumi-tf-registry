// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LocationRouteCalculator extends pulumi.CustomResource {
    /**
     * Get an existing LocationRouteCalculator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocationRouteCalculatorState, opts?: pulumi.CustomResourceOptions): LocationRouteCalculator {
        return new LocationRouteCalculator(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/locationRouteCalculator:LocationRouteCalculator';

    /**
     * Returns true if the given object is an instance of LocationRouteCalculator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationRouteCalculator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationRouteCalculator.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly calculatorArn!: pulumi.Output<string>;
    public readonly calculatorName!: pulumi.Output<string>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    public readonly dataSource!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly pricingPlan!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.LocationRouteCalculatorTag[]>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a LocationRouteCalculator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationRouteCalculatorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocationRouteCalculatorArgs | LocationRouteCalculatorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocationRouteCalculatorState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["calculatorArn"] = state ? state.calculatorArn : undefined;
            resourceInputs["calculatorName"] = state ? state.calculatorName : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataSource"] = state ? state.dataSource : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["pricingPlan"] = state ? state.pricingPlan : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as LocationRouteCalculatorArgs | undefined;
            if ((!args || args.calculatorName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'calculatorName'");
            }
            if ((!args || args.dataSource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataSource'");
            }
            resourceInputs["calculatorName"] = args ? args.calculatorName : undefined;
            resourceInputs["dataSource"] = args ? args.dataSource : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["pricingPlan"] = args ? args.pricingPlan : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["calculatorArn"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocationRouteCalculator.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LocationRouteCalculator resources.
 */
export interface LocationRouteCalculatorState {
    arn?: pulumi.Input<string>;
    calculatorArn?: pulumi.Input<string>;
    calculatorName?: pulumi.Input<string>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    createTime?: pulumi.Input<string>;
    dataSource?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    pricingPlan?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LocationRouteCalculatorTag>[]>;
    /**
     * The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LocationRouteCalculator resource.
 */
export interface LocationRouteCalculatorArgs {
    calculatorName: pulumi.Input<string>;
    dataSource: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    pricingPlan?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LocationRouteCalculatorTag>[]>;
}
