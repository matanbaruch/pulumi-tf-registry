// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAcmpcaPermission(args: GetAcmpcaPermissionArgs, opts?: pulumi.InvokeOptions): Promise<GetAcmpcaPermissionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getAcmpcaPermission:getAcmpcaPermission", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAcmpcaPermission.
 */
export interface GetAcmpcaPermissionArgs {
    id: string;
}

/**
 * A collection of values returned by getAcmpcaPermission.
 */
export interface GetAcmpcaPermissionResult {
    readonly actions: string[];
    readonly certificateAuthorityArn: string;
    readonly id: string;
    readonly principal: string;
    readonly sourceAccount: string;
}
export function getAcmpcaPermissionOutput(args: GetAcmpcaPermissionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAcmpcaPermissionResult> {
    return pulumi.output(args).apply((a: any) => getAcmpcaPermission(a, opts))
}

/**
 * A collection of arguments for invoking getAcmpcaPermission.
 */
export interface GetAcmpcaPermissionOutputArgs {
    id: pulumi.Input<string>;
}
