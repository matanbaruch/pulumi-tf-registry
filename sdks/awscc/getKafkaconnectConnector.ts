// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaconnectConnector(args: GetKafkaconnectConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaconnectConnectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getKafkaconnectConnector:getKafkaconnectConnector", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaconnectConnector.
 */
export interface GetKafkaconnectConnectorArgs {
    id: string;
}

/**
 * A collection of values returned by getKafkaconnectConnector.
 */
export interface GetKafkaconnectConnectorResult {
    readonly capacity: outputs.GetKafkaconnectConnectorCapacity;
    readonly connectorArn: string;
    readonly connectorConfiguration: {[key: string]: string};
    readonly connectorDescription: string;
    readonly connectorName: string;
    readonly id: string;
    readonly kafkaCluster: outputs.GetKafkaconnectConnectorKafkaCluster;
    readonly kafkaClusterClientAuthentication: outputs.GetKafkaconnectConnectorKafkaClusterClientAuthentication;
    readonly kafkaClusterEncryptionInTransit: outputs.GetKafkaconnectConnectorKafkaClusterEncryptionInTransit;
    readonly kafkaConnectVersion: string;
    readonly logDelivery: outputs.GetKafkaconnectConnectorLogDelivery;
    readonly plugins: outputs.GetKafkaconnectConnectorPlugin[];
    readonly serviceExecutionRoleArn: string;
    readonly tags: outputs.GetKafkaconnectConnectorTag[];
    readonly workerConfiguration: outputs.GetKafkaconnectConnectorWorkerConfiguration;
}
export function getKafkaconnectConnectorOutput(args: GetKafkaconnectConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaconnectConnectorResult> {
    return pulumi.output(args).apply((a: any) => getKafkaconnectConnector(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaconnectConnector.
 */
export interface GetKafkaconnectConnectorOutputArgs {
    id: pulumi.Input<string>;
}
