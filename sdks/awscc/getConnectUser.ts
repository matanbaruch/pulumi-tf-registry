// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectUser(args: GetConnectUserArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConnectUser:getConnectUser", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectUser.
 */
export interface GetConnectUserArgs {
    id: string;
}

/**
 * A collection of values returned by getConnectUser.
 */
export interface GetConnectUserResult {
    readonly directoryUserId: string;
    readonly hierarchyGroupArn: string;
    readonly id: string;
    readonly identityInfo: outputs.GetConnectUserIdentityInfo;
    readonly instanceArn: string;
    readonly password: string;
    readonly phoneConfig: outputs.GetConnectUserPhoneConfig;
    readonly routingProfileArn: string;
    readonly securityProfileArns: string[];
    readonly tags: outputs.GetConnectUserTag[];
    readonly userArn: string;
    readonly userProficiencies: outputs.GetConnectUserUserProficiency[];
    readonly username: string;
}
export function getConnectUserOutput(args: GetConnectUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectUserResult> {
    return pulumi.output(args).apply((a: any) => getConnectUser(a, opts))
}

/**
 * A collection of arguments for invoking getConnectUser.
 */
export interface GetConnectUserOutputArgs {
    id: pulumi.Input<string>;
}
