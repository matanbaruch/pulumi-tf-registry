// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPersonalizeDataset(args: GetPersonalizeDatasetArgs, opts?: pulumi.InvokeOptions): Promise<GetPersonalizeDatasetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getPersonalizeDataset:getPersonalizeDataset", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPersonalizeDataset.
 */
export interface GetPersonalizeDatasetArgs {
    id: string;
}

/**
 * A collection of values returned by getPersonalizeDataset.
 */
export interface GetPersonalizeDatasetResult {
    readonly datasetArn: string;
    readonly datasetGroupArn: string;
    readonly datasetImportJob: outputs.GetPersonalizeDatasetDatasetImportJob;
    readonly datasetType: string;
    readonly id: string;
    readonly name: string;
    readonly schemaArn: string;
}
export function getPersonalizeDatasetOutput(args: GetPersonalizeDatasetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPersonalizeDatasetResult> {
    return pulumi.output(args).apply((a: any) => getPersonalizeDataset(a, opts))
}

/**
 * A collection of arguments for invoking getPersonalizeDataset.
 */
export interface GetPersonalizeDatasetOutputArgs {
    id: pulumi.Input<string>;
}
