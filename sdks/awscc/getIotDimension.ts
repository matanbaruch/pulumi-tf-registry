// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIotDimension(args: GetIotDimensionArgs, opts?: pulumi.InvokeOptions): Promise<GetIotDimensionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIotDimension:getIotDimension", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIotDimension.
 */
export interface GetIotDimensionArgs {
    id: string;
}

/**
 * A collection of values returned by getIotDimension.
 */
export interface GetIotDimensionResult {
    readonly arn: string;
    readonly id: string;
    readonly name: string;
    readonly stringValues: string[];
    readonly tags: outputs.GetIotDimensionTag[];
    readonly type: string;
}
export function getIotDimensionOutput(args: GetIotDimensionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIotDimensionResult> {
    return pulumi.output(args).apply((a: any) => getIotDimension(a, opts))
}

/**
 * A collection of arguments for invoking getIotDimension.
 */
export interface GetIotDimensionOutputArgs {
    id: pulumi.Input<string>;
}
