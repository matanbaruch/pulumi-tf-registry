// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KmsReplicaKey extends pulumi.CustomResource {
    /**
     * Get an existing KmsReplicaKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KmsReplicaKeyState, opts?: pulumi.CustomResourceOptions): KmsReplicaKey {
        return new KmsReplicaKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/kmsReplicaKey:KmsReplicaKey';

    /**
     * Returns true if the given object is an instance of KmsReplicaKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KmsReplicaKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KmsReplicaKey.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * A description of the AWS KMS key. Use a description that helps you to distinguish this AWS KMS key from others in the
     * account, such as its intended use.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies whether the AWS KMS key is enabled. Disabled AWS KMS keys cannot be used in cryptographic operations.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    public /*out*/ readonly keyId!: pulumi.Output<string>;
    /**
     * The key policy that authorizes use of the AWS KMS key. The key policy must observe the following rules.
     */
    public readonly keyPolicy!: pulumi.Output<string>;
    /**
     * Specifies the number of days in the waiting period before AWS KMS deletes an AWS KMS key that has been removed from a
     * CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.
     */
    public readonly pendingWindowInDays!: pulumi.Output<number>;
    /**
     * Identifies the primary AWS KMS key to create a replica of. Specify the Amazon Resource Name (ARN) of the AWS KMS key.
     * You cannot specify an alias or key ID. For help finding the ARN, see Finding the Key ID and ARN in the AWS Key
     * Management Service Developer Guide.
     */
    public readonly primaryKeyArn!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.KmsReplicaKeyTag[]>;

    /**
     * Create a KmsReplicaKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KmsReplicaKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KmsReplicaKeyArgs | KmsReplicaKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KmsReplicaKeyState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["keyPolicy"] = state ? state.keyPolicy : undefined;
            resourceInputs["pendingWindowInDays"] = state ? state.pendingWindowInDays : undefined;
            resourceInputs["primaryKeyArn"] = state ? state.primaryKeyArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as KmsReplicaKeyArgs | undefined;
            if ((!args || args.keyPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyPolicy'");
            }
            if ((!args || args.primaryKeyArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryKeyArn'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["keyPolicy"] = args ? args.keyPolicy : undefined;
            resourceInputs["pendingWindowInDays"] = args ? args.pendingWindowInDays : undefined;
            resourceInputs["primaryKeyArn"] = args ? args.primaryKeyArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["keyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KmsReplicaKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KmsReplicaKey resources.
 */
export interface KmsReplicaKeyState {
    arn?: pulumi.Input<string>;
    /**
     * A description of the AWS KMS key. Use a description that helps you to distinguish this AWS KMS key from others in the
     * account, such as its intended use.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether the AWS KMS key is enabled. Disabled AWS KMS keys cannot be used in cryptographic operations.
     */
    enabled?: pulumi.Input<boolean>;
    keyId?: pulumi.Input<string>;
    /**
     * The key policy that authorizes use of the AWS KMS key. The key policy must observe the following rules.
     */
    keyPolicy?: pulumi.Input<string>;
    /**
     * Specifies the number of days in the waiting period before AWS KMS deletes an AWS KMS key that has been removed from a
     * CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.
     */
    pendingWindowInDays?: pulumi.Input<number>;
    /**
     * Identifies the primary AWS KMS key to create a replica of. Specify the Amazon Resource Name (ARN) of the AWS KMS key.
     * You cannot specify an alias or key ID. For help finding the ARN, see Finding the Key ID and ARN in the AWS Key
     * Management Service Developer Guide.
     */
    primaryKeyArn?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KmsReplicaKeyTag>[]>;
}

/**
 * The set of arguments for constructing a KmsReplicaKey resource.
 */
export interface KmsReplicaKeyArgs {
    /**
     * A description of the AWS KMS key. Use a description that helps you to distinguish this AWS KMS key from others in the
     * account, such as its intended use.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether the AWS KMS key is enabled. Disabled AWS KMS keys cannot be used in cryptographic operations.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The key policy that authorizes use of the AWS KMS key. The key policy must observe the following rules.
     */
    keyPolicy: pulumi.Input<string>;
    /**
     * Specifies the number of days in the waiting period before AWS KMS deletes an AWS KMS key that has been removed from a
     * CloudFormation stack. Enter a value between 7 and 30 days. The default value is 30 days.
     */
    pendingWindowInDays?: pulumi.Input<number>;
    /**
     * Identifies the primary AWS KMS key to create a replica of. Specify the Amazon Resource Name (ARN) of the AWS KMS key.
     * You cannot specify an alias or key ID. For help finding the ARN, see Finding the Key ID and ARN in the AWS Key
     * Management Service Developer Guide.
     */
    primaryKeyArn: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.KmsReplicaKeyTag>[]>;
}
