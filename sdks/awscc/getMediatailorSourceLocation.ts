// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediatailorSourceLocation(args: GetMediatailorSourceLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetMediatailorSourceLocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediatailorSourceLocation:getMediatailorSourceLocation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediatailorSourceLocation.
 */
export interface GetMediatailorSourceLocationArgs {
    id: string;
}

/**
 * A collection of values returned by getMediatailorSourceLocation.
 */
export interface GetMediatailorSourceLocationResult {
    readonly accessConfiguration: outputs.GetMediatailorSourceLocationAccessConfiguration;
    readonly arn: string;
    readonly defaultSegmentDeliveryConfiguration: outputs.GetMediatailorSourceLocationDefaultSegmentDeliveryConfiguration;
    readonly httpConfiguration: outputs.GetMediatailorSourceLocationHttpConfiguration;
    readonly id: string;
    readonly segmentDeliveryConfigurations: outputs.GetMediatailorSourceLocationSegmentDeliveryConfiguration[];
    readonly sourceLocationName: string;
    readonly tags: outputs.GetMediatailorSourceLocationTag[];
}
export function getMediatailorSourceLocationOutput(args: GetMediatailorSourceLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediatailorSourceLocationResult> {
    return pulumi.output(args).apply((a: any) => getMediatailorSourceLocation(a, opts))
}

/**
 * A collection of arguments for invoking getMediatailorSourceLocation.
 */
export interface GetMediatailorSourceLocationOutputArgs {
    id: pulumi.Input<string>;
}
