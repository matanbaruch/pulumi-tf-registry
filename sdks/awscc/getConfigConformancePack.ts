// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConfigConformancePack(args: GetConfigConformancePackArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigConformancePackResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConfigConformancePack:getConfigConformancePack", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfigConformancePack.
 */
export interface GetConfigConformancePackArgs {
    id: string;
}

/**
 * A collection of values returned by getConfigConformancePack.
 */
export interface GetConfigConformancePackResult {
    readonly conformancePackInputParameters: outputs.GetConfigConformancePackConformancePackInputParameter[];
    readonly conformancePackName: string;
    readonly deliveryS3Bucket: string;
    readonly deliveryS3KeyPrefix: string;
    readonly id: string;
    readonly templateBody: string;
    readonly templateS3Uri: string;
    readonly templateSsmDocumentDetails: outputs.GetConfigConformancePackTemplateSsmDocumentDetails;
}
export function getConfigConformancePackOutput(args: GetConfigConformancePackOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigConformancePackResult> {
    return pulumi.output(args).apply((a: any) => getConfigConformancePack(a, opts))
}

/**
 * A collection of arguments for invoking getConfigConformancePack.
 */
export interface GetConfigConformancePackOutputArgs {
    id: pulumi.Input<string>;
}
