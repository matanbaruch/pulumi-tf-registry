// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConnectTrafficDistributionGroup extends pulumi.CustomResource {
    /**
     * Get an existing ConnectTrafficDistributionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectTrafficDistributionGroupState, opts?: pulumi.CustomResourceOptions): ConnectTrafficDistributionGroup {
        return new ConnectTrafficDistributionGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/connectTrafficDistributionGroup:ConnectTrafficDistributionGroup';

    /**
     * Returns true if the given object is an instance of ConnectTrafficDistributionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectTrafficDistributionGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectTrafficDistributionGroup.__pulumiType;
    }

    /**
     * A description for the traffic distribution group.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance that has been replicated.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * If this is the default traffic distribution group.
     */
    public /*out*/ readonly isDefault!: pulumi.Output<boolean>;
    /**
     * The name for the traffic distribution group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of the traffic distribution group.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * One or more tags.
     */
    public readonly tags!: pulumi.Output<outputs.ConnectTrafficDistributionGroupTag[]>;
    /**
     * The identifier of the traffic distribution group.
     */
    public /*out*/ readonly trafficDistributionGroupArn!: pulumi.Output<string>;

    /**
     * Create a ConnectTrafficDistributionGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectTrafficDistributionGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectTrafficDistributionGroupArgs | ConnectTrafficDistributionGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectTrafficDistributionGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trafficDistributionGroupArn"] = state ? state.trafficDistributionGroupArn : undefined;
        } else {
            const args = argsOrState as ConnectTrafficDistributionGroupArgs | undefined;
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["isDefault"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["trafficDistributionGroupArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectTrafficDistributionGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConnectTrafficDistributionGroup resources.
 */
export interface ConnectTrafficDistributionGroupState {
    /**
     * A description for the traffic distribution group.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance that has been replicated.
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * If this is the default traffic distribution group.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The name for the traffic distribution group.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the traffic distribution group.
     */
    status?: pulumi.Input<string>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectTrafficDistributionGroupTag>[]>;
    /**
     * The identifier of the traffic distribution group.
     */
    trafficDistributionGroupArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectTrafficDistributionGroup resource.
 */
export interface ConnectTrafficDistributionGroupArgs {
    /**
     * A description for the traffic distribution group.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance that has been replicated.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The name for the traffic distribution group.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectTrafficDistributionGroupTag>[]>;
}
