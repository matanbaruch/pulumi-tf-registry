// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LogsLogAnomalyDetector extends pulumi.CustomResource {
    /**
     * Get an existing LogsLogAnomalyDetector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogsLogAnomalyDetectorState, opts?: pulumi.CustomResourceOptions): LogsLogAnomalyDetector {
        return new LogsLogAnomalyDetector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/logsLogAnomalyDetector:LogsLogAnomalyDetector';

    /**
     * Returns true if the given object is an instance of LogsLogAnomalyDetector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogsLogAnomalyDetector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogsLogAnomalyDetector.__pulumiType;
    }

    /**
     * Account ID for owner of detector
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * ARN of LogAnomalyDetector
     */
    public /*out*/ readonly anomalyDetectorArn!: pulumi.Output<string>;
    /**
     * Current status of detector.
     */
    public /*out*/ readonly anomalyDetectorStatus!: pulumi.Output<string>;
    public readonly anomalyVisibilityTime!: pulumi.Output<number>;
    /**
     * When detector was created.
     */
    public /*out*/ readonly creationTimeStamp!: pulumi.Output<number>;
    /**
     * Name of detector
     */
    public readonly detectorName!: pulumi.Output<string>;
    /**
     * How often log group is evaluated
     */
    public readonly evaluationFrequency!: pulumi.Output<string>;
    public readonly filterPattern!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * When detector was lsat modified.
     */
    public /*out*/ readonly lastModifiedTimeStamp!: pulumi.Output<number>;
    /**
     * List of Arns for the given log group
     */
    public readonly logGroupArnLists!: pulumi.Output<string[]>;

    /**
     * Create a LogsLogAnomalyDetector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogsLogAnomalyDetectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogsLogAnomalyDetectorArgs | LogsLogAnomalyDetectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogsLogAnomalyDetectorState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["anomalyDetectorArn"] = state ? state.anomalyDetectorArn : undefined;
            resourceInputs["anomalyDetectorStatus"] = state ? state.anomalyDetectorStatus : undefined;
            resourceInputs["anomalyVisibilityTime"] = state ? state.anomalyVisibilityTime : undefined;
            resourceInputs["creationTimeStamp"] = state ? state.creationTimeStamp : undefined;
            resourceInputs["detectorName"] = state ? state.detectorName : undefined;
            resourceInputs["evaluationFrequency"] = state ? state.evaluationFrequency : undefined;
            resourceInputs["filterPattern"] = state ? state.filterPattern : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["lastModifiedTimeStamp"] = state ? state.lastModifiedTimeStamp : undefined;
            resourceInputs["logGroupArnLists"] = state ? state.logGroupArnLists : undefined;
        } else {
            const args = argsOrState as LogsLogAnomalyDetectorArgs | undefined;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["anomalyVisibilityTime"] = args ? args.anomalyVisibilityTime : undefined;
            resourceInputs["detectorName"] = args ? args.detectorName : undefined;
            resourceInputs["evaluationFrequency"] = args ? args.evaluationFrequency : undefined;
            resourceInputs["filterPattern"] = args ? args.filterPattern : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["logGroupArnLists"] = args ? args.logGroupArnLists : undefined;
            resourceInputs["anomalyDetectorArn"] = undefined /*out*/;
            resourceInputs["anomalyDetectorStatus"] = undefined /*out*/;
            resourceInputs["creationTimeStamp"] = undefined /*out*/;
            resourceInputs["lastModifiedTimeStamp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogsLogAnomalyDetector.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogsLogAnomalyDetector resources.
 */
export interface LogsLogAnomalyDetectorState {
    /**
     * Account ID for owner of detector
     */
    accountId?: pulumi.Input<string>;
    /**
     * ARN of LogAnomalyDetector
     */
    anomalyDetectorArn?: pulumi.Input<string>;
    /**
     * Current status of detector.
     */
    anomalyDetectorStatus?: pulumi.Input<string>;
    anomalyVisibilityTime?: pulumi.Input<number>;
    /**
     * When detector was created.
     */
    creationTimeStamp?: pulumi.Input<number>;
    /**
     * Name of detector
     */
    detectorName?: pulumi.Input<string>;
    /**
     * How often log group is evaluated
     */
    evaluationFrequency?: pulumi.Input<string>;
    filterPattern?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * When detector was lsat modified.
     */
    lastModifiedTimeStamp?: pulumi.Input<number>;
    /**
     * List of Arns for the given log group
     */
    logGroupArnLists?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a LogsLogAnomalyDetector resource.
 */
export interface LogsLogAnomalyDetectorArgs {
    /**
     * Account ID for owner of detector
     */
    accountId?: pulumi.Input<string>;
    anomalyVisibilityTime?: pulumi.Input<number>;
    /**
     * Name of detector
     */
    detectorName?: pulumi.Input<string>;
    /**
     * How often log group is evaluated
     */
    evaluationFrequency?: pulumi.Input<string>;
    filterPattern?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * List of Arns for the given log group
     */
    logGroupArnLists?: pulumi.Input<pulumi.Input<string>[]>;
}
