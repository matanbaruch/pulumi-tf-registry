// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class QbusinessPlugin extends pulumi.CustomResource {
    /**
     * Get an existing QbusinessPlugin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QbusinessPluginState, opts?: pulumi.CustomResourceOptions): QbusinessPlugin {
        return new QbusinessPlugin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/qbusinessPlugin:QbusinessPlugin';

    /**
     * Returns true if the given object is an instance of QbusinessPlugin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QbusinessPlugin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QbusinessPlugin.__pulumiType;
    }

    public readonly applicationId!: pulumi.Output<string>;
    public readonly authConfiguration!: pulumi.Output<outputs.QbusinessPluginAuthConfiguration>;
    public /*out*/ readonly buildStatus!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly customPluginConfiguration!: pulumi.Output<outputs.QbusinessPluginCustomPluginConfiguration>;
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly pluginArn!: pulumi.Output<string>;
    public /*out*/ readonly pluginId!: pulumi.Output<string>;
    public readonly serverUrl!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.QbusinessPluginTag[]>;
    public readonly type!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a QbusinessPlugin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QbusinessPluginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QbusinessPluginArgs | QbusinessPluginState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QbusinessPluginState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["authConfiguration"] = state ? state.authConfiguration : undefined;
            resourceInputs["buildStatus"] = state ? state.buildStatus : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["customPluginConfiguration"] = state ? state.customPluginConfiguration : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["pluginArn"] = state ? state.pluginArn : undefined;
            resourceInputs["pluginId"] = state ? state.pluginId : undefined;
            resourceInputs["serverUrl"] = state ? state.serverUrl : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as QbusinessPluginArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.authConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authConfiguration'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["authConfiguration"] = args ? args.authConfiguration : undefined;
            resourceInputs["customPluginConfiguration"] = args ? args.customPluginConfiguration : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["serverUrl"] = args ? args.serverUrl : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["buildStatus"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["pluginArn"] = undefined /*out*/;
            resourceInputs["pluginId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QbusinessPlugin.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering QbusinessPlugin resources.
 */
export interface QbusinessPluginState {
    applicationId?: pulumi.Input<string>;
    authConfiguration?: pulumi.Input<inputs.QbusinessPluginAuthConfiguration>;
    buildStatus?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    customPluginConfiguration?: pulumi.Input<inputs.QbusinessPluginCustomPluginConfiguration>;
    displayName?: pulumi.Input<string>;
    pluginArn?: pulumi.Input<string>;
    pluginId?: pulumi.Input<string>;
    serverUrl?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.QbusinessPluginTag>[]>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QbusinessPlugin resource.
 */
export interface QbusinessPluginArgs {
    applicationId: pulumi.Input<string>;
    authConfiguration: pulumi.Input<inputs.QbusinessPluginAuthConfiguration>;
    customPluginConfiguration?: pulumi.Input<inputs.QbusinessPluginCustomPluginConfiguration>;
    displayName: pulumi.Input<string>;
    serverUrl?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.QbusinessPluginTag>[]>;
    type: pulumi.Input<string>;
}
