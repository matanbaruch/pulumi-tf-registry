// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAthenaPreparedStatement(args: GetAthenaPreparedStatementArgs, opts?: pulumi.InvokeOptions): Promise<GetAthenaPreparedStatementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getAthenaPreparedStatement:getAthenaPreparedStatement", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAthenaPreparedStatement.
 */
export interface GetAthenaPreparedStatementArgs {
    id: string;
}

/**
 * A collection of values returned by getAthenaPreparedStatement.
 */
export interface GetAthenaPreparedStatementResult {
    readonly description: string;
    readonly id: string;
    readonly queryStatement: string;
    readonly statementName: string;
    readonly workGroup: string;
}
export function getAthenaPreparedStatementOutput(args: GetAthenaPreparedStatementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAthenaPreparedStatementResult> {
    return pulumi.output(args).apply((a: any) => getAthenaPreparedStatement(a, opts))
}

/**
 * A collection of arguments for invoking getAthenaPreparedStatement.
 */
export interface GetAthenaPreparedStatementOutputArgs {
    id: pulumi.Input<string>;
}
