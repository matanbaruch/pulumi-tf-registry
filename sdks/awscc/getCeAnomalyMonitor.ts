// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCeAnomalyMonitor(args: GetCeAnomalyMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetCeAnomalyMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCeAnomalyMonitor:getCeAnomalyMonitor", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCeAnomalyMonitor.
 */
export interface GetCeAnomalyMonitorArgs {
    id: string;
}

/**
 * A collection of values returned by getCeAnomalyMonitor.
 */
export interface GetCeAnomalyMonitorResult {
    readonly creationDate: string;
    readonly dimensionalValueCount: number;
    readonly id: string;
    readonly lastEvaluatedDate: string;
    readonly lastUpdatedDate: string;
    readonly monitorArn: string;
    readonly monitorDimension: string;
    readonly monitorName: string;
    readonly monitorSpecification: string;
    readonly monitorType: string;
    readonly resourceTags: outputs.GetCeAnomalyMonitorResourceTag[];
}
export function getCeAnomalyMonitorOutput(args: GetCeAnomalyMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCeAnomalyMonitorResult> {
    return pulumi.output(args).apply((a: any) => getCeAnomalyMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getCeAnomalyMonitor.
 */
export interface GetCeAnomalyMonitorOutputArgs {
    id: pulumi.Input<string>;
}
