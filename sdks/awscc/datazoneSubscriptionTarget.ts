// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatazoneSubscriptionTarget extends pulumi.CustomResource {
    /**
     * Get an existing DatazoneSubscriptionTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatazoneSubscriptionTargetState, opts?: pulumi.CustomResourceOptions): DatazoneSubscriptionTarget {
        return new DatazoneSubscriptionTarget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/datazoneSubscriptionTarget:DatazoneSubscriptionTarget';

    /**
     * Returns true if the given object is an instance of DatazoneSubscriptionTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatazoneSubscriptionTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatazoneSubscriptionTarget.__pulumiType;
    }

    /**
     * The asset types that can be included in the subscription target.
     */
    public readonly applicableAssetTypes!: pulumi.Output<string[]>;
    /**
     * The authorized principals of the subscription target.
     */
    public readonly authorizedPrincipals!: pulumi.Output<string[]>;
    /**
     * The timestamp of when the subscription target was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The Amazon DataZone user who created the subscription target.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain in which subscription target is created.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain in which subscription target would be created.
     */
    public readonly domainIdentifier!: pulumi.Output<string>;
    /**
     * The ID of the environment in which subscription target is created.
     */
    public /*out*/ readonly environmentId!: pulumi.Output<string>;
    /**
     * The ID of the environment in which subscription target would be created.
     */
    public readonly environmentIdentifier!: pulumi.Output<string>;
    /**
     * The manage access role that is used to create the subscription target.
     */
    public readonly manageAccessRole!: pulumi.Output<string>;
    /**
     * The name of the subscription target.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The identifier of the project specified in the subscription target.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * The provider of the subscription target.
     */
    public readonly providerName!: pulumi.Output<string>;
    /**
     * The configuration of the subscription target.
     */
    public readonly subscriptionTargetConfigs!: pulumi.Output<outputs.DatazoneSubscriptionTargetSubscriptionTargetConfig[]>;
    /**
     * The ID of the subscription target.
     */
    public /*out*/ readonly subscriptionTargetId!: pulumi.Output<string>;
    /**
     * The type of the subscription target.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The timestamp of when the subscription target was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The Amazon DataZone user who updated the subscription target.
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;

    /**
     * Create a DatazoneSubscriptionTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatazoneSubscriptionTargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatazoneSubscriptionTargetArgs | DatazoneSubscriptionTargetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatazoneSubscriptionTargetState | undefined;
            resourceInputs["applicableAssetTypes"] = state ? state.applicableAssetTypes : undefined;
            resourceInputs["authorizedPrincipals"] = state ? state.authorizedPrincipals : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["domainIdentifier"] = state ? state.domainIdentifier : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["environmentIdentifier"] = state ? state.environmentIdentifier : undefined;
            resourceInputs["manageAccessRole"] = state ? state.manageAccessRole : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["subscriptionTargetConfigs"] = state ? state.subscriptionTargetConfigs : undefined;
            resourceInputs["subscriptionTargetId"] = state ? state.subscriptionTargetId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
        } else {
            const args = argsOrState as DatazoneSubscriptionTargetArgs | undefined;
            if ((!args || args.applicableAssetTypes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicableAssetTypes'");
            }
            if ((!args || args.authorizedPrincipals === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authorizedPrincipals'");
            }
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.environmentIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentIdentifier'");
            }
            if ((!args || args.manageAccessRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'manageAccessRole'");
            }
            if ((!args || args.subscriptionTargetConfigs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionTargetConfigs'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["applicableAssetTypes"] = args ? args.applicableAssetTypes : undefined;
            resourceInputs["authorizedPrincipals"] = args ? args.authorizedPrincipals : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["environmentIdentifier"] = args ? args.environmentIdentifier : undefined;
            resourceInputs["manageAccessRole"] = args ? args.manageAccessRole : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["subscriptionTargetConfigs"] = args ? args.subscriptionTargetConfigs : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["subscriptionTargetId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatazoneSubscriptionTarget.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatazoneSubscriptionTarget resources.
 */
export interface DatazoneSubscriptionTargetState {
    /**
     * The asset types that can be included in the subscription target.
     */
    applicableAssetTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The authorized principals of the subscription target.
     */
    authorizedPrincipals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The timestamp of when the subscription target was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The Amazon DataZone user who created the subscription target.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain in which subscription target is created.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain in which subscription target would be created.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * The ID of the environment in which subscription target is created.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The ID of the environment in which subscription target would be created.
     */
    environmentIdentifier?: pulumi.Input<string>;
    /**
     * The manage access role that is used to create the subscription target.
     */
    manageAccessRole?: pulumi.Input<string>;
    /**
     * The name of the subscription target.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the project specified in the subscription target.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The provider of the subscription target.
     */
    providerName?: pulumi.Input<string>;
    /**
     * The configuration of the subscription target.
     */
    subscriptionTargetConfigs?: pulumi.Input<pulumi.Input<inputs.DatazoneSubscriptionTargetSubscriptionTargetConfig>[]>;
    /**
     * The ID of the subscription target.
     */
    subscriptionTargetId?: pulumi.Input<string>;
    /**
     * The type of the subscription target.
     */
    type?: pulumi.Input<string>;
    /**
     * The timestamp of when the subscription target was updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The Amazon DataZone user who updated the subscription target.
     */
    updatedBy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatazoneSubscriptionTarget resource.
 */
export interface DatazoneSubscriptionTargetArgs {
    /**
     * The asset types that can be included in the subscription target.
     */
    applicableAssetTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The authorized principals of the subscription target.
     */
    authorizedPrincipals: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Amazon DataZone domain in which subscription target would be created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * The ID of the environment in which subscription target would be created.
     */
    environmentIdentifier: pulumi.Input<string>;
    /**
     * The manage access role that is used to create the subscription target.
     */
    manageAccessRole: pulumi.Input<string>;
    /**
     * The name of the subscription target.
     */
    name?: pulumi.Input<string>;
    /**
     * The provider of the subscription target.
     */
    providerName?: pulumi.Input<string>;
    /**
     * The configuration of the subscription target.
     */
    subscriptionTargetConfigs: pulumi.Input<pulumi.Input<inputs.DatazoneSubscriptionTargetSubscriptionTargetConfig>[]>;
    /**
     * The type of the subscription target.
     */
    type: pulumi.Input<string>;
}
