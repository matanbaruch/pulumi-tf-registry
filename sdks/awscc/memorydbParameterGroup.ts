// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MemorydbParameterGroup extends pulumi.CustomResource {
    /**
     * Get an existing MemorydbParameterGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MemorydbParameterGroupState, opts?: pulumi.CustomResourceOptions): MemorydbParameterGroup {
        return new MemorydbParameterGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/memorydbParameterGroup:MemorydbParameterGroup';

    /**
     * Returns true if the given object is an instance of MemorydbParameterGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MemorydbParameterGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MemorydbParameterGroup.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the parameter group.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * A description of the parameter group.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the parameter group family that this parameter group is compatible with.
     */
    public readonly family!: pulumi.Output<string>;
    /**
     * The name of the parameter group.
     */
    public readonly parameterGroupName!: pulumi.Output<string>;
    /**
     * An map of parameter names and values for the parameter update. You must supply at least one parameter name and value;
     * subsequent arguments are optional.
     */
    public readonly parameters!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this parameter group.
     */
    public readonly tags!: pulumi.Output<outputs.MemorydbParameterGroupTag[]>;

    /**
     * Create a MemorydbParameterGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemorydbParameterGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MemorydbParameterGroupArgs | MemorydbParameterGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MemorydbParameterGroupState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["family"] = state ? state.family : undefined;
            resourceInputs["parameterGroupName"] = state ? state.parameterGroupName : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as MemorydbParameterGroupArgs | undefined;
            if ((!args || args.family === undefined) && !opts.urn) {
                throw new Error("Missing required property 'family'");
            }
            if ((!args || args.parameterGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parameterGroupName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["family"] = args ? args.family : undefined;
            resourceInputs["parameterGroupName"] = args ? args.parameterGroupName : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MemorydbParameterGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MemorydbParameterGroup resources.
 */
export interface MemorydbParameterGroupState {
    /**
     * The Amazon Resource Name (ARN) of the parameter group.
     */
    arn?: pulumi.Input<string>;
    /**
     * A description of the parameter group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the parameter group family that this parameter group is compatible with.
     */
    family?: pulumi.Input<string>;
    /**
     * The name of the parameter group.
     */
    parameterGroupName?: pulumi.Input<string>;
    /**
     * An map of parameter names and values for the parameter update. You must supply at least one parameter name and value;
     * subsequent arguments are optional.
     */
    parameters?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this parameter group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.MemorydbParameterGroupTag>[]>;
}

/**
 * The set of arguments for constructing a MemorydbParameterGroup resource.
 */
export interface MemorydbParameterGroupArgs {
    /**
     * A description of the parameter group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the parameter group family that this parameter group is compatible with.
     */
    family: pulumi.Input<string>;
    /**
     * The name of the parameter group.
     */
    parameterGroupName: pulumi.Input<string>;
    /**
     * An map of parameter names and values for the parameter update. You must supply at least one parameter name and value;
     * subsequent arguments are optional.
     */
    parameters?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this parameter group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.MemorydbParameterGroupTag>[]>;
}
