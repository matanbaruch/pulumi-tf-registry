// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2CarrierGateway(args: GetEc2CarrierGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2CarrierGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2CarrierGateway:getEc2CarrierGateway", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2CarrierGateway.
 */
export interface GetEc2CarrierGatewayArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2CarrierGateway.
 */
export interface GetEc2CarrierGatewayResult {
    readonly carrierGatewayId: string;
    readonly id: string;
    readonly ownerId: string;
    readonly state: string;
    readonly tags: outputs.GetEc2CarrierGatewayTag[];
    readonly vpcId: string;
}
export function getEc2CarrierGatewayOutput(args: GetEc2CarrierGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2CarrierGatewayResult> {
    return pulumi.output(args).apply((a: any) => getEc2CarrierGateway(a, opts))
}

/**
 * A collection of arguments for invoking getEc2CarrierGateway.
 */
export interface GetEc2CarrierGatewayOutputArgs {
    id: pulumi.Input<string>;
}
