// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class QuicksightTheme extends pulumi.CustomResource {
    /**
     * Get an existing QuicksightTheme resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QuicksightThemeState, opts?: pulumi.CustomResourceOptions): QuicksightTheme {
        return new QuicksightTheme(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/quicksightTheme:QuicksightTheme';

    /**
     * Returns true if the given object is an instance of QuicksightTheme.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QuicksightTheme {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QuicksightTheme.__pulumiType;
    }

    /**
     * <p>The Amazon Resource Name (ARN) of the theme.</p>
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly awsAccountId!: pulumi.Output<string>;
    public readonly baseThemeId!: pulumi.Output<string>;
    /**
     * <p>The theme configuration. This configuration contains all of the display properties for a theme.</p>
     */
    public readonly configuration!: pulumi.Output<outputs.QuicksightThemeConfiguration>;
    /**
     * <p>The date and time that the theme was created.</p>
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * <p>The date and time that the theme was last updated.</p>
     */
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly permissions!: pulumi.Output<outputs.QuicksightThemePermission[]>;
    public readonly tags!: pulumi.Output<outputs.QuicksightThemeTag[]>;
    public readonly themeId!: pulumi.Output<string>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * <p>A version of a theme.</p>
     */
    public /*out*/ readonly version!: pulumi.Output<outputs.QuicksightThemeVersion>;
    public readonly versionDescription!: pulumi.Output<string>;

    /**
     * Create a QuicksightTheme resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QuicksightThemeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QuicksightThemeArgs | QuicksightThemeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QuicksightThemeState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["baseThemeId"] = state ? state.baseThemeId : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["lastUpdatedTime"] = state ? state.lastUpdatedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["themeId"] = state ? state.themeId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionDescription"] = state ? state.versionDescription : undefined;
        } else {
            const args = argsOrState as QuicksightThemeArgs | undefined;
            if ((!args || args.awsAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsAccountId'");
            }
            if ((!args || args.baseThemeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseThemeId'");
            }
            if ((!args || args.configuration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configuration'");
            }
            if ((!args || args.themeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'themeId'");
            }
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["baseThemeId"] = args ? args.baseThemeId : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["themeId"] = args ? args.themeId : undefined;
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QuicksightTheme.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering QuicksightTheme resources.
 */
export interface QuicksightThemeState {
    /**
     * <p>The Amazon Resource Name (ARN) of the theme.</p>
     */
    arn?: pulumi.Input<string>;
    awsAccountId?: pulumi.Input<string>;
    baseThemeId?: pulumi.Input<string>;
    /**
     * <p>The theme configuration. This configuration contains all of the display properties for a theme.</p>
     */
    configuration?: pulumi.Input<inputs.QuicksightThemeConfiguration>;
    /**
     * <p>The date and time that the theme was created.</p>
     */
    createdTime?: pulumi.Input<string>;
    /**
     * <p>The date and time that the theme was last updated.</p>
     */
    lastUpdatedTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<inputs.QuicksightThemePermission>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.QuicksightThemeTag>[]>;
    themeId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    /**
     * <p>A version of a theme.</p>
     */
    version?: pulumi.Input<inputs.QuicksightThemeVersion>;
    versionDescription?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QuicksightTheme resource.
 */
export interface QuicksightThemeArgs {
    awsAccountId: pulumi.Input<string>;
    baseThemeId: pulumi.Input<string>;
    /**
     * <p>The theme configuration. This configuration contains all of the display properties for a theme.</p>
     */
    configuration: pulumi.Input<inputs.QuicksightThemeConfiguration>;
    name?: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<inputs.QuicksightThemePermission>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.QuicksightThemeTag>[]>;
    themeId: pulumi.Input<string>;
    versionDescription?: pulumi.Input<string>;
}
