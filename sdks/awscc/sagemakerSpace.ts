// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SagemakerSpace extends pulumi.CustomResource {
    /**
     * Get an existing SagemakerSpace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagemakerSpaceState, opts?: pulumi.CustomResourceOptions): SagemakerSpace {
        return new SagemakerSpace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/sagemakerSpace:SagemakerSpace';

    /**
     * Returns true if the given object is an instance of SagemakerSpace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagemakerSpace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagemakerSpace.__pulumiType;
    }

    /**
     * The ID of the associated Domain.
     */
    public readonly domainId!: pulumi.Output<string>;
    public readonly ownershipSettings!: pulumi.Output<outputs.SagemakerSpaceOwnershipSettings>;
    /**
     * The space Amazon Resource Name (ARN).
     */
    public /*out*/ readonly spaceArn!: pulumi.Output<string>;
    public readonly spaceDisplayName!: pulumi.Output<string>;
    /**
     * A name for the Space.
     */
    public readonly spaceName!: pulumi.Output<string>;
    /**
     * A collection of settings.
     */
    public readonly spaceSettings!: pulumi.Output<outputs.SagemakerSpaceSpaceSettings>;
    public readonly spaceSharingSettings!: pulumi.Output<outputs.SagemakerSpaceSpaceSharingSettings>;
    /**
     * A list of tags to apply to the space.
     */
    public readonly tags!: pulumi.Output<outputs.SagemakerSpaceTag[]>;
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a SagemakerSpace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagemakerSpaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagemakerSpaceArgs | SagemakerSpaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagemakerSpaceState | undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["ownershipSettings"] = state ? state.ownershipSettings : undefined;
            resourceInputs["spaceArn"] = state ? state.spaceArn : undefined;
            resourceInputs["spaceDisplayName"] = state ? state.spaceDisplayName : undefined;
            resourceInputs["spaceName"] = state ? state.spaceName : undefined;
            resourceInputs["spaceSettings"] = state ? state.spaceSettings : undefined;
            resourceInputs["spaceSharingSettings"] = state ? state.spaceSharingSettings : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as SagemakerSpaceArgs | undefined;
            if ((!args || args.domainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainId'");
            }
            if ((!args || args.spaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spaceName'");
            }
            resourceInputs["domainId"] = args ? args.domainId : undefined;
            resourceInputs["ownershipSettings"] = args ? args.ownershipSettings : undefined;
            resourceInputs["spaceDisplayName"] = args ? args.spaceDisplayName : undefined;
            resourceInputs["spaceName"] = args ? args.spaceName : undefined;
            resourceInputs["spaceSettings"] = args ? args.spaceSettings : undefined;
            resourceInputs["spaceSharingSettings"] = args ? args.spaceSharingSettings : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["spaceArn"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagemakerSpace.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagemakerSpace resources.
 */
export interface SagemakerSpaceState {
    /**
     * The ID of the associated Domain.
     */
    domainId?: pulumi.Input<string>;
    ownershipSettings?: pulumi.Input<inputs.SagemakerSpaceOwnershipSettings>;
    /**
     * The space Amazon Resource Name (ARN).
     */
    spaceArn?: pulumi.Input<string>;
    spaceDisplayName?: pulumi.Input<string>;
    /**
     * A name for the Space.
     */
    spaceName?: pulumi.Input<string>;
    /**
     * A collection of settings.
     */
    spaceSettings?: pulumi.Input<inputs.SagemakerSpaceSpaceSettings>;
    spaceSharingSettings?: pulumi.Input<inputs.SagemakerSpaceSpaceSharingSettings>;
    /**
     * A list of tags to apply to the space.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerSpaceTag>[]>;
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SagemakerSpace resource.
 */
export interface SagemakerSpaceArgs {
    /**
     * The ID of the associated Domain.
     */
    domainId: pulumi.Input<string>;
    ownershipSettings?: pulumi.Input<inputs.SagemakerSpaceOwnershipSettings>;
    spaceDisplayName?: pulumi.Input<string>;
    /**
     * A name for the Space.
     */
    spaceName: pulumi.Input<string>;
    /**
     * A collection of settings.
     */
    spaceSettings?: pulumi.Input<inputs.SagemakerSpaceSpaceSettings>;
    spaceSharingSettings?: pulumi.Input<inputs.SagemakerSpaceSpaceSharingSettings>;
    /**
     * A list of tags to apply to the space.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerSpaceTag>[]>;
}
