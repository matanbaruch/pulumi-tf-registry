// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getS3StorageLensGroup(args: GetS3StorageLensGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetS3StorageLensGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getS3StorageLensGroup:getS3StorageLensGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3StorageLensGroup.
 */
export interface GetS3StorageLensGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getS3StorageLensGroup.
 */
export interface GetS3StorageLensGroupResult {
    readonly filter: outputs.GetS3StorageLensGroupFilter;
    readonly id: string;
    readonly name: string;
    readonly storageLensGroupArn: string;
    readonly tags: outputs.GetS3StorageLensGroupTag[];
}
export function getS3StorageLensGroupOutput(args: GetS3StorageLensGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3StorageLensGroupResult> {
    return pulumi.output(args).apply((a: any) => getS3StorageLensGroup(a, opts))
}

/**
 * A collection of arguments for invoking getS3StorageLensGroup.
 */
export interface GetS3StorageLensGroupOutputArgs {
    id: pulumi.Input<string>;
}
