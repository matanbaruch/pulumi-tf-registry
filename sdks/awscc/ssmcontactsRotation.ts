// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SsmcontactsRotation extends pulumi.CustomResource {
    /**
     * Get an existing SsmcontactsRotation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsmcontactsRotationState, opts?: pulumi.CustomResourceOptions): SsmcontactsRotation {
        return new SsmcontactsRotation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ssmcontactsRotation:SsmcontactsRotation';

    /**
     * Returns true if the given object is an instance of SsmcontactsRotation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SsmcontactsRotation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SsmcontactsRotation.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the rotation.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Members of the rotation
     */
    public readonly contactIds!: pulumi.Output<string[]>;
    /**
     * Name of the Rotation
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Information about when an on-call rotation is in effect and how long the rotation period lasts.
     */
    public readonly recurrence!: pulumi.Output<outputs.SsmcontactsRotationRecurrence>;
    /**
     * Start time of the first shift of Oncall Schedule
     */
    public readonly startTime!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.SsmcontactsRotationTag[]>;
    /**
     * TimeZone Identifier for the Oncall Schedule
     */
    public readonly timeZoneId!: pulumi.Output<string>;

    /**
     * Create a SsmcontactsRotation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SsmcontactsRotationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsmcontactsRotationArgs | SsmcontactsRotationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsmcontactsRotationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["contactIds"] = state ? state.contactIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recurrence"] = state ? state.recurrence : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeZoneId"] = state ? state.timeZoneId : undefined;
        } else {
            const args = argsOrState as SsmcontactsRotationArgs | undefined;
            if ((!args || args.contactIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactIds'");
            }
            if ((!args || args.recurrence === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurrence'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            if ((!args || args.timeZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZoneId'");
            }
            resourceInputs["contactIds"] = args ? args.contactIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recurrence"] = args ? args.recurrence : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeZoneId"] = args ? args.timeZoneId : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SsmcontactsRotation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SsmcontactsRotation resources.
 */
export interface SsmcontactsRotationState {
    /**
     * The Amazon Resource Name (ARN) of the rotation.
     */
    arn?: pulumi.Input<string>;
    /**
     * Members of the rotation
     */
    contactIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Rotation
     */
    name?: pulumi.Input<string>;
    /**
     * Information about when an on-call rotation is in effect and how long the rotation period lasts.
     */
    recurrence?: pulumi.Input<inputs.SsmcontactsRotationRecurrence>;
    /**
     * Start time of the first shift of Oncall Schedule
     */
    startTime?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SsmcontactsRotationTag>[]>;
    /**
     * TimeZone Identifier for the Oncall Schedule
     */
    timeZoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SsmcontactsRotation resource.
 */
export interface SsmcontactsRotationArgs {
    /**
     * Members of the rotation
     */
    contactIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Rotation
     */
    name?: pulumi.Input<string>;
    /**
     * Information about when an on-call rotation is in effect and how long the rotation period lasts.
     */
    recurrence: pulumi.Input<inputs.SsmcontactsRotationRecurrence>;
    /**
     * Start time of the first shift of Oncall Schedule
     */
    startTime: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SsmcontactsRotationTag>[]>;
    /**
     * TimeZone Identifier for the Oncall Schedule
     */
    timeZoneId: pulumi.Input<string>;
}
