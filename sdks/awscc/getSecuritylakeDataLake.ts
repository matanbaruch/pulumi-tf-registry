// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecuritylakeDataLake(args: GetSecuritylakeDataLakeArgs, opts?: pulumi.InvokeOptions): Promise<GetSecuritylakeDataLakeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSecuritylakeDataLake:getSecuritylakeDataLake", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecuritylakeDataLake.
 */
export interface GetSecuritylakeDataLakeArgs {
    id: string;
}

/**
 * A collection of values returned by getSecuritylakeDataLake.
 */
export interface GetSecuritylakeDataLakeResult {
    readonly arn: string;
    readonly encryptionConfiguration: outputs.GetSecuritylakeDataLakeEncryptionConfiguration;
    readonly id: string;
    readonly lifecycleConfiguration: outputs.GetSecuritylakeDataLakeLifecycleConfiguration;
    readonly metaStoreManagerRoleArn: string;
    readonly replicationConfiguration: outputs.GetSecuritylakeDataLakeReplicationConfiguration;
    readonly s3BucketArn: string;
    readonly tags: outputs.GetSecuritylakeDataLakeTag[];
}
export function getSecuritylakeDataLakeOutput(args: GetSecuritylakeDataLakeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecuritylakeDataLakeResult> {
    return pulumi.output(args).apply((a: any) => getSecuritylakeDataLake(a, opts))
}

/**
 * A collection of arguments for invoking getSecuritylakeDataLake.
 */
export interface GetSecuritylakeDataLakeOutputArgs {
    id: pulumi.Input<string>;
}
