// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWorkspaceswebIdentityProvider(args: GetWorkspaceswebIdentityProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceswebIdentityProviderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWorkspaceswebIdentityProvider:getWorkspaceswebIdentityProvider", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspaceswebIdentityProvider.
 */
export interface GetWorkspaceswebIdentityProviderArgs {
    id: string;
}

/**
 * A collection of values returned by getWorkspaceswebIdentityProvider.
 */
export interface GetWorkspaceswebIdentityProviderResult {
    readonly id: string;
    readonly identityProviderArn: string;
    readonly identityProviderDetails: {[key: string]: string};
    readonly identityProviderName: string;
    readonly identityProviderType: string;
    readonly portalArn: string;
}
export function getWorkspaceswebIdentityProviderOutput(args: GetWorkspaceswebIdentityProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceswebIdentityProviderResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceswebIdentityProvider(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceswebIdentityProvider.
 */
export interface GetWorkspaceswebIdentityProviderOutputArgs {
    id: pulumi.Input<string>;
}
