// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMskConfiguration(args: GetMskConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMskConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMskConfiguration:getMskConfiguration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMskConfiguration.
 */
export interface GetMskConfigurationArgs {
    id: string;
}

/**
 * A collection of values returned by getMskConfiguration.
 */
export interface GetMskConfigurationResult {
    readonly arn: string;
    readonly description: string;
    readonly id: string;
    readonly kafkaVersionsLists: string[];
    readonly latestRevision: outputs.GetMskConfigurationLatestRevision;
    readonly name: string;
    readonly serverProperties: string;
}
export function getMskConfigurationOutput(args: GetMskConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMskConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getMskConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getMskConfiguration.
 */
export interface GetMskConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
