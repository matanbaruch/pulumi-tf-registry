// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBedrockKnowledgeBase(args: GetBedrockKnowledgeBaseArgs, opts?: pulumi.InvokeOptions): Promise<GetBedrockKnowledgeBaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getBedrockKnowledgeBase:getBedrockKnowledgeBase", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBedrockKnowledgeBase.
 */
export interface GetBedrockKnowledgeBaseArgs {
    id: string;
}

/**
 * A collection of values returned by getBedrockKnowledgeBase.
 */
export interface GetBedrockKnowledgeBaseResult {
    readonly createdAt: string;
    readonly description: string;
    readonly failureReasons: string[];
    readonly id: string;
    readonly knowledgeBaseArn: string;
    readonly knowledgeBaseConfiguration: outputs.GetBedrockKnowledgeBaseKnowledgeBaseConfiguration;
    readonly knowledgeBaseId: string;
    readonly name: string;
    readonly roleArn: string;
    readonly status: string;
    readonly storageConfiguration: outputs.GetBedrockKnowledgeBaseStorageConfiguration;
    readonly tags: {[key: string]: string};
    readonly updatedAt: string;
}
export function getBedrockKnowledgeBaseOutput(args: GetBedrockKnowledgeBaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBedrockKnowledgeBaseResult> {
    return pulumi.output(args).apply((a: any) => getBedrockKnowledgeBase(a, opts))
}

/**
 * A collection of arguments for invoking getBedrockKnowledgeBase.
 */
export interface GetBedrockKnowledgeBaseOutputArgs {
    id: pulumi.Input<string>;
}
