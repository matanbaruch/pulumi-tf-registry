// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotwirelessDeviceProfile extends pulumi.CustomResource {
    /**
     * Get an existing IotwirelessDeviceProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotwirelessDeviceProfileState, opts?: pulumi.CustomResourceOptions): IotwirelessDeviceProfile {
        return new IotwirelessDeviceProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotwirelessDeviceProfile:IotwirelessDeviceProfile';

    /**
     * Returns true if the given object is an instance of IotwirelessDeviceProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotwirelessDeviceProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotwirelessDeviceProfile.__pulumiType;
    }

    /**
     * Service profile Arn. Returned after successful create.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Service profile Id. Returned after successful create.
     */
    public /*out*/ readonly deviceProfileId!: pulumi.Output<string>;
    /**
     * LoRaWANDeviceProfile supports all LoRa specific attributes for service profile for CreateDeviceProfile operation
     */
    public readonly loRaWan!: pulumi.Output<outputs.IotwirelessDeviceProfileLoRaWan>;
    /**
     * Name of service profile
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the device profile.
     */
    public readonly tags!: pulumi.Output<outputs.IotwirelessDeviceProfileTag[]>;

    /**
     * Create a IotwirelessDeviceProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IotwirelessDeviceProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotwirelessDeviceProfileArgs | IotwirelessDeviceProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotwirelessDeviceProfileState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["deviceProfileId"] = state ? state.deviceProfileId : undefined;
            resourceInputs["loRaWan"] = state ? state.loRaWan : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IotwirelessDeviceProfileArgs | undefined;
            resourceInputs["loRaWan"] = args ? args.loRaWan : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["deviceProfileId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotwirelessDeviceProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotwirelessDeviceProfile resources.
 */
export interface IotwirelessDeviceProfileState {
    /**
     * Service profile Arn. Returned after successful create.
     */
    arn?: pulumi.Input<string>;
    /**
     * Service profile Id. Returned after successful create.
     */
    deviceProfileId?: pulumi.Input<string>;
    /**
     * LoRaWANDeviceProfile supports all LoRa specific attributes for service profile for CreateDeviceProfile operation
     */
    loRaWan?: pulumi.Input<inputs.IotwirelessDeviceProfileLoRaWan>;
    /**
     * Name of service profile
     */
    name?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the device profile.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessDeviceProfileTag>[]>;
}

/**
 * The set of arguments for constructing a IotwirelessDeviceProfile resource.
 */
export interface IotwirelessDeviceProfileArgs {
    /**
     * LoRaWANDeviceProfile supports all LoRa specific attributes for service profile for CreateDeviceProfile operation
     */
    loRaWan?: pulumi.Input<inputs.IotwirelessDeviceProfileLoRaWan>;
    /**
     * Name of service profile
     */
    name?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the device profile.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessDeviceProfileTag>[]>;
}
