// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatasyncLocationS3 extends pulumi.CustomResource {
    /**
     * Get an existing DatasyncLocationS3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatasyncLocationS3State, opts?: pulumi.CustomResourceOptions): DatasyncLocationS3 {
        return new DatasyncLocationS3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/datasyncLocationS3:DatasyncLocationS3';

    /**
     * Returns true if the given object is an instance of DatasyncLocationS3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatasyncLocationS3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasyncLocationS3.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
     */
    public /*out*/ readonly locationArn!: pulumi.Output<string>;
    /**
     * The URL of the S3 location that was described.
     */
    public /*out*/ readonly locationUri!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket.
     */
    public readonly s3BucketArn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role that is used to access an Amazon S3 bucket.
     */
    public readonly s3Config!: pulumi.Output<outputs.DatasyncLocationS3S3Config>;
    /**
     * The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
     */
    public readonly s3StorageClass!: pulumi.Output<string>;
    /**
     * A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location
     * or write data to the S3 destination.
     */
    public readonly subdirectory!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.DatasyncLocationS3Tag[]>;

    /**
     * Create a DatasyncLocationS3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasyncLocationS3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatasyncLocationS3Args | DatasyncLocationS3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatasyncLocationS3State | undefined;
            resourceInputs["locationArn"] = state ? state.locationArn : undefined;
            resourceInputs["locationUri"] = state ? state.locationUri : undefined;
            resourceInputs["s3BucketArn"] = state ? state.s3BucketArn : undefined;
            resourceInputs["s3Config"] = state ? state.s3Config : undefined;
            resourceInputs["s3StorageClass"] = state ? state.s3StorageClass : undefined;
            resourceInputs["subdirectory"] = state ? state.subdirectory : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DatasyncLocationS3Args | undefined;
            if ((!args || args.s3Config === undefined) && !opts.urn) {
                throw new Error("Missing required property 's3Config'");
            }
            resourceInputs["s3BucketArn"] = args ? args.s3BucketArn : undefined;
            resourceInputs["s3Config"] = args ? args.s3Config : undefined;
            resourceInputs["s3StorageClass"] = args ? args.s3StorageClass : undefined;
            resourceInputs["subdirectory"] = args ? args.subdirectory : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["locationArn"] = undefined /*out*/;
            resourceInputs["locationUri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatasyncLocationS3.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatasyncLocationS3 resources.
 */
export interface DatasyncLocationS3State {
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket location.
     */
    locationArn?: pulumi.Input<string>;
    /**
     * The URL of the S3 location that was described.
     */
    locationUri?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket.
     */
    s3BucketArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role that is used to access an Amazon S3 bucket.
     */
    s3Config?: pulumi.Input<inputs.DatasyncLocationS3S3Config>;
    /**
     * The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
     */
    s3StorageClass?: pulumi.Input<string>;
    /**
     * A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location
     * or write data to the S3 destination.
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DatasyncLocationS3Tag>[]>;
}

/**
 * The set of arguments for constructing a DatasyncLocationS3 resource.
 */
export interface DatasyncLocationS3Args {
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket.
     */
    s3BucketArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the AWS IAM role that is used to access an Amazon S3 bucket.
     */
    s3Config: pulumi.Input<inputs.DatasyncLocationS3S3Config>;
    /**
     * The Amazon S3 storage class you want to store your files in when this location is used as a task destination.
     */
    s3StorageClass?: pulumi.Input<string>;
    /**
     * A subdirectory in the Amazon S3 bucket. This subdirectory in Amazon S3 is used to read data from the S3 source location
     * or write data to the S3 destination.
     */
    subdirectory?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DatasyncLocationS3Tag>[]>;
}
