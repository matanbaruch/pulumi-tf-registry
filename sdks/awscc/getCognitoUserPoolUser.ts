// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCognitoUserPoolUser(args: GetCognitoUserPoolUserArgs, opts?: pulumi.InvokeOptions): Promise<GetCognitoUserPoolUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCognitoUserPoolUser:getCognitoUserPoolUser", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCognitoUserPoolUser.
 */
export interface GetCognitoUserPoolUserArgs {
    id: string;
}

/**
 * A collection of values returned by getCognitoUserPoolUser.
 */
export interface GetCognitoUserPoolUserResult {
    readonly clientMetadata: {[key: string]: string};
    readonly desiredDeliveryMediums: string[];
    readonly forceAliasCreation: boolean;
    readonly id: string;
    readonly messageAction: string;
    readonly userAttributes: outputs.GetCognitoUserPoolUserUserAttribute[];
    readonly userPoolId: string;
    readonly username: string;
    readonly validationDatas: outputs.GetCognitoUserPoolUserValidationData[];
}
export function getCognitoUserPoolUserOutput(args: GetCognitoUserPoolUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCognitoUserPoolUserResult> {
    return pulumi.output(args).apply((a: any) => getCognitoUserPoolUser(a, opts))
}

/**
 * A collection of arguments for invoking getCognitoUserPoolUser.
 */
export interface GetCognitoUserPoolUserOutputArgs {
    id: pulumi.Input<string>;
}
