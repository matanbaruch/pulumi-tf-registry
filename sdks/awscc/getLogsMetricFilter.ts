// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogsMetricFilter(args: GetLogsMetricFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsMetricFilterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLogsMetricFilter:getLogsMetricFilter", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogsMetricFilter.
 */
export interface GetLogsMetricFilterArgs {
    id: string;
}

/**
 * A collection of values returned by getLogsMetricFilter.
 */
export interface GetLogsMetricFilterResult {
    readonly filterName: string;
    readonly filterPattern: string;
    readonly id: string;
    readonly logGroupName: string;
    readonly metricTransformations: outputs.GetLogsMetricFilterMetricTransformation[];
}
export function getLogsMetricFilterOutput(args: GetLogsMetricFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogsMetricFilterResult> {
    return pulumi.output(args).apply((a: any) => getLogsMetricFilter(a, opts))
}

/**
 * A collection of arguments for invoking getLogsMetricFilter.
 */
export interface GetLogsMetricFilterOutputArgs {
    id: pulumi.Input<string>;
}
