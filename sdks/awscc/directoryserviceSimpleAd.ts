// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DirectoryserviceSimpleAd extends pulumi.CustomResource {
    /**
     * Get an existing DirectoryserviceSimpleAd resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DirectoryserviceSimpleAdState, opts?: pulumi.CustomResourceOptions): DirectoryserviceSimpleAd {
        return new DirectoryserviceSimpleAd(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/directoryserviceSimpleAd:DirectoryserviceSimpleAd';

    /**
     * Returns true if the given object is an instance of DirectoryserviceSimpleAd.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DirectoryserviceSimpleAd {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DirectoryserviceSimpleAd.__pulumiType;
    }

    /**
     * The alias for a directory.
     */
    public /*out*/ readonly alias!: pulumi.Output<string>;
    /**
     * The name of the configuration set.
     */
    public readonly createAlias!: pulumi.Output<boolean>;
    /**
     * Description for the directory.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The unique identifier for a directory.
     */
    public /*out*/ readonly directoryId!: pulumi.Output<string>;
    /**
     * The IP addresses of the DNS servers for the directory, such as [ "172.31.3.154", "172.31.63.203" ].
     */
    public /*out*/ readonly dnsIpAddresses!: pulumi.Output<string[]>;
    /**
     * Whether to enable single sign-on for a Simple Active Directory in AWS.
     */
    public readonly enableSso!: pulumi.Output<boolean>;
    /**
     * The fully qualified domain name for the AWS Managed Simple AD directory.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The password for the default administrative user named Admin.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * The NetBIOS name for your domain.
     */
    public readonly shortName!: pulumi.Output<string>;
    /**
     * The size of the directory.
     */
    public readonly size!: pulumi.Output<string>;
    /**
     * VPC settings of the Simple AD directory server in AWS.
     */
    public readonly vpcSettings!: pulumi.Output<outputs.DirectoryserviceSimpleAdVpcSettings>;

    /**
     * Create a DirectoryserviceSimpleAd resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DirectoryserviceSimpleAdArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DirectoryserviceSimpleAdArgs | DirectoryserviceSimpleAdState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DirectoryserviceSimpleAdState | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["createAlias"] = state ? state.createAlias : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["directoryId"] = state ? state.directoryId : undefined;
            resourceInputs["dnsIpAddresses"] = state ? state.dnsIpAddresses : undefined;
            resourceInputs["enableSso"] = state ? state.enableSso : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["shortName"] = state ? state.shortName : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["vpcSettings"] = state ? state.vpcSettings : undefined;
        } else {
            const args = argsOrState as DirectoryserviceSimpleAdArgs | undefined;
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            if ((!args || args.vpcSettings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcSettings'");
            }
            resourceInputs["createAlias"] = args ? args.createAlias : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableSso"] = args ? args.enableSso : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["shortName"] = args ? args.shortName : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["vpcSettings"] = args ? args.vpcSettings : undefined;
            resourceInputs["alias"] = undefined /*out*/;
            resourceInputs["directoryId"] = undefined /*out*/;
            resourceInputs["dnsIpAddresses"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DirectoryserviceSimpleAd.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DirectoryserviceSimpleAd resources.
 */
export interface DirectoryserviceSimpleAdState {
    /**
     * The alias for a directory.
     */
    alias?: pulumi.Input<string>;
    /**
     * The name of the configuration set.
     */
    createAlias?: pulumi.Input<boolean>;
    /**
     * Description for the directory.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique identifier for a directory.
     */
    directoryId?: pulumi.Input<string>;
    /**
     * The IP addresses of the DNS servers for the directory, such as [ "172.31.3.154", "172.31.63.203" ].
     */
    dnsIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether to enable single sign-on for a Simple Active Directory in AWS.
     */
    enableSso?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name for the AWS Managed Simple AD directory.
     */
    name?: pulumi.Input<string>;
    /**
     * The password for the default administrative user named Admin.
     */
    password?: pulumi.Input<string>;
    /**
     * The NetBIOS name for your domain.
     */
    shortName?: pulumi.Input<string>;
    /**
     * The size of the directory.
     */
    size?: pulumi.Input<string>;
    /**
     * VPC settings of the Simple AD directory server in AWS.
     */
    vpcSettings?: pulumi.Input<inputs.DirectoryserviceSimpleAdVpcSettings>;
}

/**
 * The set of arguments for constructing a DirectoryserviceSimpleAd resource.
 */
export interface DirectoryserviceSimpleAdArgs {
    /**
     * The name of the configuration set.
     */
    createAlias?: pulumi.Input<boolean>;
    /**
     * Description for the directory.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable single sign-on for a Simple Active Directory in AWS.
     */
    enableSso?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name for the AWS Managed Simple AD directory.
     */
    name?: pulumi.Input<string>;
    /**
     * The password for the default administrative user named Admin.
     */
    password?: pulumi.Input<string>;
    /**
     * The NetBIOS name for your domain.
     */
    shortName?: pulumi.Input<string>;
    /**
     * The size of the directory.
     */
    size: pulumi.Input<string>;
    /**
     * VPC settings of the Simple AD directory server in AWS.
     */
    vpcSettings: pulumi.Input<inputs.DirectoryserviceSimpleAdVpcSettings>;
}
