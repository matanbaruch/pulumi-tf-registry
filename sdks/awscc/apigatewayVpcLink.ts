// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApigatewayVpcLink extends pulumi.CustomResource {
    /**
     * Get an existing ApigatewayVpcLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApigatewayVpcLinkState, opts?: pulumi.CustomResourceOptions): ApigatewayVpcLink {
        return new ApigatewayVpcLink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/apigatewayVpcLink:ApigatewayVpcLink';

    /**
     * Returns true if the given object is an instance of ApigatewayVpcLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApigatewayVpcLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApigatewayVpcLink.__pulumiType;
    }

    /**
     * The description of the VPC link.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name used to label and identify the VPC link.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the VPC link.
     */
    public readonly tags!: pulumi.Output<outputs.ApigatewayVpcLinkTag[]>;
    /**
     * The ARN of the network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the
     * same AWS-account of the API owner.
     */
    public readonly targetArns!: pulumi.Output<string[]>;
    public /*out*/ readonly vpcLinkId!: pulumi.Output<string>;

    /**
     * Create a ApigatewayVpcLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApigatewayVpcLinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApigatewayVpcLinkArgs | ApigatewayVpcLinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApigatewayVpcLinkState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetArns"] = state ? state.targetArns : undefined;
            resourceInputs["vpcLinkId"] = state ? state.vpcLinkId : undefined;
        } else {
            const args = argsOrState as ApigatewayVpcLinkArgs | undefined;
            if ((!args || args.targetArns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetArns'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetArns"] = args ? args.targetArns : undefined;
            resourceInputs["vpcLinkId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApigatewayVpcLink.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApigatewayVpcLink resources.
 */
export interface ApigatewayVpcLinkState {
    /**
     * The description of the VPC link.
     */
    description?: pulumi.Input<string>;
    /**
     * The name used to label and identify the VPC link.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the VPC link.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApigatewayVpcLinkTag>[]>;
    /**
     * The ARN of the network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the
     * same AWS-account of the API owner.
     */
    targetArns?: pulumi.Input<pulumi.Input<string>[]>;
    vpcLinkId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApigatewayVpcLink resource.
 */
export interface ApigatewayVpcLinkArgs {
    /**
     * The description of the VPC link.
     */
    description?: pulumi.Input<string>;
    /**
     * The name used to label and identify the VPC link.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the VPC link.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApigatewayVpcLinkTag>[]>;
    /**
     * The ARN of the network load balancer of the VPC targeted by the VPC link. The network load balancer must be owned by the
     * same AWS-account of the API owner.
     */
    targetArns: pulumi.Input<pulumi.Input<string>[]>;
}
