// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEksIdentityProviderConfig(args: GetEksIdentityProviderConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetEksIdentityProviderConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEksIdentityProviderConfig:getEksIdentityProviderConfig", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEksIdentityProviderConfig.
 */
export interface GetEksIdentityProviderConfigArgs {
    id: string;
}

/**
 * A collection of values returned by getEksIdentityProviderConfig.
 */
export interface GetEksIdentityProviderConfigResult {
    readonly clusterName: string;
    readonly id: string;
    readonly identityProviderConfigArn: string;
    readonly identityProviderConfigName: string;
    readonly oidc: outputs.GetEksIdentityProviderConfigOidc;
    readonly tags: outputs.GetEksIdentityProviderConfigTag[];
    readonly type: string;
}
export function getEksIdentityProviderConfigOutput(args: GetEksIdentityProviderConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEksIdentityProviderConfigResult> {
    return pulumi.output(args).apply((a: any) => getEksIdentityProviderConfig(a, opts))
}

/**
 * A collection of arguments for invoking getEksIdentityProviderConfig.
 */
export interface GetEksIdentityProviderConfigOutputArgs {
    id: pulumi.Input<string>;
}
