// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NeptunegraphGraph extends pulumi.CustomResource {
    /**
     * Get an existing NeptunegraphGraph resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NeptunegraphGraphState, opts?: pulumi.CustomResourceOptions): NeptunegraphGraph {
        return new NeptunegraphGraph(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/neptunegraphGraph:NeptunegraphGraph';

    /**
     * Returns true if the given object is an instance of NeptunegraphGraph.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NeptunegraphGraph {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NeptunegraphGraph.__pulumiType;
    }

    /**
     * Value that indicates whether the Graph has deletion protection enabled. The graph can't be deleted when deletion
     * protection is enabled. _Default_: If not specified, the default value is true.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * The connection endpoint for the graph. For example: `g-12a3bcdef4.us-east-1.neptune-graph.amazonaws.com`
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * Graph resource ARN
     */
    public /*out*/ readonly graphArn!: pulumi.Output<string>;
    /**
     * The auto-generated id assigned by the service.
     */
    public /*out*/ readonly graphId!: pulumi.Output<string>;
    /**
     * Contains a user-supplied name for the Graph. If you don't specify a name, we generate a unique Graph Name using a
     * combination of Stack Name and a UUID comprising of 4 characters. _Important_: If you specify a name, you cannot perform
     * updates that require replacement of this resource. You can perform updates that require no or some interruption. If you
     * must replace the resource, specify a new name.
     */
    public readonly graphName!: pulumi.Output<string>;
    /**
     * Memory for the Graph.
     */
    public readonly provisionedMemory!: pulumi.Output<number>;
    /**
     * Specifies whether the Graph can be reached over the internet. Access to all graphs requires IAM authentication. When the
     * Graph is publicly reachable, its Domain Name System (DNS) endpoint resolves to the public IP address from the internet.
     * When the Graph isn't publicly reachable, you need to create a PrivateGraphEndpoint in a given VPC to ensure the DNS name
     * resolves to a private IP address that is reachable from the VPC. _Default_: If not specified, the default value is
     * false.
     */
    public readonly publicConnectivity!: pulumi.Output<boolean>;
    /**
     * Specifies the number of replicas you want when finished. All replicas will be provisioned in different availability
     * zones. Replica Count should always be less than or equal to 2. _Default_: If not specified, the default value is 1.
     */
    public readonly replicaCount!: pulumi.Output<number>;
    /**
     * The tags associated with this graph.
     */
    public readonly tags!: pulumi.Output<outputs.NeptunegraphGraphTag[]>;
    /**
     * Vector Search Configuration
     */
    public readonly vectorSearchConfiguration!: pulumi.Output<outputs.NeptunegraphGraphVectorSearchConfiguration>;

    /**
     * Create a NeptunegraphGraph resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NeptunegraphGraphArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NeptunegraphGraphArgs | NeptunegraphGraphState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NeptunegraphGraphState | undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["graphArn"] = state ? state.graphArn : undefined;
            resourceInputs["graphId"] = state ? state.graphId : undefined;
            resourceInputs["graphName"] = state ? state.graphName : undefined;
            resourceInputs["provisionedMemory"] = state ? state.provisionedMemory : undefined;
            resourceInputs["publicConnectivity"] = state ? state.publicConnectivity : undefined;
            resourceInputs["replicaCount"] = state ? state.replicaCount : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vectorSearchConfiguration"] = state ? state.vectorSearchConfiguration : undefined;
        } else {
            const args = argsOrState as NeptunegraphGraphArgs | undefined;
            if ((!args || args.provisionedMemory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'provisionedMemory'");
            }
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["graphName"] = args ? args.graphName : undefined;
            resourceInputs["provisionedMemory"] = args ? args.provisionedMemory : undefined;
            resourceInputs["publicConnectivity"] = args ? args.publicConnectivity : undefined;
            resourceInputs["replicaCount"] = args ? args.replicaCount : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vectorSearchConfiguration"] = args ? args.vectorSearchConfiguration : undefined;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["graphArn"] = undefined /*out*/;
            resourceInputs["graphId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NeptunegraphGraph.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NeptunegraphGraph resources.
 */
export interface NeptunegraphGraphState {
    /**
     * Value that indicates whether the Graph has deletion protection enabled. The graph can't be deleted when deletion
     * protection is enabled. _Default_: If not specified, the default value is true.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The connection endpoint for the graph. For example: `g-12a3bcdef4.us-east-1.neptune-graph.amazonaws.com`
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Graph resource ARN
     */
    graphArn?: pulumi.Input<string>;
    /**
     * The auto-generated id assigned by the service.
     */
    graphId?: pulumi.Input<string>;
    /**
     * Contains a user-supplied name for the Graph. If you don't specify a name, we generate a unique Graph Name using a
     * combination of Stack Name and a UUID comprising of 4 characters. _Important_: If you specify a name, you cannot perform
     * updates that require replacement of this resource. You can perform updates that require no or some interruption. If you
     * must replace the resource, specify a new name.
     */
    graphName?: pulumi.Input<string>;
    /**
     * Memory for the Graph.
     */
    provisionedMemory?: pulumi.Input<number>;
    /**
     * Specifies whether the Graph can be reached over the internet. Access to all graphs requires IAM authentication. When the
     * Graph is publicly reachable, its Domain Name System (DNS) endpoint resolves to the public IP address from the internet.
     * When the Graph isn't publicly reachable, you need to create a PrivateGraphEndpoint in a given VPC to ensure the DNS name
     * resolves to a private IP address that is reachable from the VPC. _Default_: If not specified, the default value is
     * false.
     */
    publicConnectivity?: pulumi.Input<boolean>;
    /**
     * Specifies the number of replicas you want when finished. All replicas will be provisioned in different availability
     * zones. Replica Count should always be less than or equal to 2. _Default_: If not specified, the default value is 1.
     */
    replicaCount?: pulumi.Input<number>;
    /**
     * The tags associated with this graph.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NeptunegraphGraphTag>[]>;
    /**
     * Vector Search Configuration
     */
    vectorSearchConfiguration?: pulumi.Input<inputs.NeptunegraphGraphVectorSearchConfiguration>;
}

/**
 * The set of arguments for constructing a NeptunegraphGraph resource.
 */
export interface NeptunegraphGraphArgs {
    /**
     * Value that indicates whether the Graph has deletion protection enabled. The graph can't be deleted when deletion
     * protection is enabled. _Default_: If not specified, the default value is true.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Contains a user-supplied name for the Graph. If you don't specify a name, we generate a unique Graph Name using a
     * combination of Stack Name and a UUID comprising of 4 characters. _Important_: If you specify a name, you cannot perform
     * updates that require replacement of this resource. You can perform updates that require no or some interruption. If you
     * must replace the resource, specify a new name.
     */
    graphName?: pulumi.Input<string>;
    /**
     * Memory for the Graph.
     */
    provisionedMemory: pulumi.Input<number>;
    /**
     * Specifies whether the Graph can be reached over the internet. Access to all graphs requires IAM authentication. When the
     * Graph is publicly reachable, its Domain Name System (DNS) endpoint resolves to the public IP address from the internet.
     * When the Graph isn't publicly reachable, you need to create a PrivateGraphEndpoint in a given VPC to ensure the DNS name
     * resolves to a private IP address that is reachable from the VPC. _Default_: If not specified, the default value is
     * false.
     */
    publicConnectivity?: pulumi.Input<boolean>;
    /**
     * Specifies the number of replicas you want when finished. All replicas will be provisioned in different availability
     * zones. Replica Count should always be less than or equal to 2. _Default_: If not specified, the default value is 1.
     */
    replicaCount?: pulumi.Input<number>;
    /**
     * The tags associated with this graph.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NeptunegraphGraphTag>[]>;
    /**
     * Vector Search Configuration
     */
    vectorSearchConfiguration?: pulumi.Input<inputs.NeptunegraphGraphVectorSearchConfiguration>;
}
