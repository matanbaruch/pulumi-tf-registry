// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudwatchDashboard(args: GetCloudwatchDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwatchDashboardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudwatchDashboard:getCloudwatchDashboard", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudwatchDashboard.
 */
export interface GetCloudwatchDashboardArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudwatchDashboard.
 */
export interface GetCloudwatchDashboardResult {
    readonly dashboardBody: string;
    readonly dashboardName: string;
    readonly id: string;
}
export function getCloudwatchDashboardOutput(args: GetCloudwatchDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwatchDashboardResult> {
    return pulumi.output(args).apply((a: any) => getCloudwatchDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwatchDashboard.
 */
export interface GetCloudwatchDashboardOutputArgs {
    id: pulumi.Input<string>;
}
