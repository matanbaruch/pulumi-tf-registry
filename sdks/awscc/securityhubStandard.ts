// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecurityhubStandard extends pulumi.CustomResource {
    /**
     * Get an existing SecurityhubStandard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityhubStandardState, opts?: pulumi.CustomResourceOptions): SecurityhubStandard {
        return new SecurityhubStandard(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/securityhubStandard:SecurityhubStandard';

    /**
     * Returns true if the given object is an instance of SecurityhubStandard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityhubStandard {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityhubStandard.__pulumiType;
    }

    /**
     * Specifies which controls are to be disabled in a standard. *Maximum*: ``100``
     */
    public readonly disabledStandardsControls!: pulumi.Output<outputs.SecurityhubStandardDisabledStandardsControl[]>;
    /**
     * The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the
     * [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
     */
    public readonly standardsArn!: pulumi.Output<string>;
    public /*out*/ readonly standardsSubscriptionArn!: pulumi.Output<string>;

    /**
     * Create a SecurityhubStandard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityhubStandardArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityhubStandardArgs | SecurityhubStandardState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityhubStandardState | undefined;
            resourceInputs["disabledStandardsControls"] = state ? state.disabledStandardsControls : undefined;
            resourceInputs["standardsArn"] = state ? state.standardsArn : undefined;
            resourceInputs["standardsSubscriptionArn"] = state ? state.standardsSubscriptionArn : undefined;
        } else {
            const args = argsOrState as SecurityhubStandardArgs | undefined;
            if ((!args || args.standardsArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'standardsArn'");
            }
            resourceInputs["disabledStandardsControls"] = args ? args.disabledStandardsControls : undefined;
            resourceInputs["standardsArn"] = args ? args.standardsArn : undefined;
            resourceInputs["standardsSubscriptionArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityhubStandard.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecurityhubStandard resources.
 */
export interface SecurityhubStandardState {
    /**
     * Specifies which controls are to be disabled in a standard. *Maximum*: ``100``
     */
    disabledStandardsControls?: pulumi.Input<pulumi.Input<inputs.SecurityhubStandardDisabledStandardsControl>[]>;
    /**
     * The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the
     * [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
     */
    standardsArn?: pulumi.Input<string>;
    standardsSubscriptionArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityhubStandard resource.
 */
export interface SecurityhubStandardArgs {
    /**
     * Specifies which controls are to be disabled in a standard. *Maximum*: ``100``
     */
    disabledStandardsControls?: pulumi.Input<pulumi.Input<inputs.SecurityhubStandardDisabledStandardsControl>[]>;
    /**
     * The ARN of the standard that you want to enable. To view a list of available ASH standards and their ARNs, use the
     * [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html) API operation.
     */
    standardsArn: pulumi.Input<string>;
}
