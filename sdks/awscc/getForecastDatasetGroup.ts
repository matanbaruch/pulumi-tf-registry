// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getForecastDatasetGroup(args: GetForecastDatasetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetForecastDatasetGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getForecastDatasetGroup:getForecastDatasetGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getForecastDatasetGroup.
 */
export interface GetForecastDatasetGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getForecastDatasetGroup.
 */
export interface GetForecastDatasetGroupResult {
    readonly datasetArns: string[];
    readonly datasetGroupArn: string;
    readonly datasetGroupName: string;
    readonly domain: string;
    readonly id: string;
    readonly tags: outputs.GetForecastDatasetGroupTag[];
}
export function getForecastDatasetGroupOutput(args: GetForecastDatasetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetForecastDatasetGroupResult> {
    return pulumi.output(args).apply((a: any) => getForecastDatasetGroup(a, opts))
}

/**
 * A collection of arguments for invoking getForecastDatasetGroup.
 */
export interface GetForecastDatasetGroupOutputArgs {
    id: pulumi.Input<string>;
}
