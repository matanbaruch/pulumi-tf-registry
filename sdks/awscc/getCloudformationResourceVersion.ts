// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudformationResourceVersion(args: GetCloudformationResourceVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationResourceVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudformationResourceVersion:getCloudformationResourceVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationResourceVersion.
 */
export interface GetCloudformationResourceVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudformationResourceVersion.
 */
export interface GetCloudformationResourceVersionResult {
    readonly arn: string;
    readonly executionRoleArn: string;
    readonly id: string;
    readonly isDefaultVersion: boolean;
    readonly loggingConfig: outputs.GetCloudformationResourceVersionLoggingConfig;
    readonly provisioningType: string;
    readonly schemaHandlerPackage: string;
    readonly typeArn: string;
    readonly typeName: string;
    readonly versionId: string;
    readonly visibility: string;
}
export function getCloudformationResourceVersionOutput(args: GetCloudformationResourceVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationResourceVersionResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationResourceVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationResourceVersion.
 */
export interface GetCloudformationResourceVersionOutputArgs {
    id: pulumi.Input<string>;
}
