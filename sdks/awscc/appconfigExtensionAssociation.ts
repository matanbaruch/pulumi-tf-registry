// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AppconfigExtensionAssociation extends pulumi.CustomResource {
    /**
     * Get an existing AppconfigExtensionAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppconfigExtensionAssociationState, opts?: pulumi.CustomResourceOptions): AppconfigExtensionAssociation {
        return new AppconfigExtensionAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/appconfigExtensionAssociation:AppconfigExtensionAssociation';

    /**
     * Returns true if the given object is an instance of AppconfigExtensionAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppconfigExtensionAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppconfigExtensionAssociation.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly extensionArn!: pulumi.Output<string>;
    public /*out*/ readonly extensionAssociationId!: pulumi.Output<string>;
    public readonly extensionIdentifier!: pulumi.Output<string>;
    public readonly extensionVersionNumber!: pulumi.Output<number>;
    public readonly parameters!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly resourceArn!: pulumi.Output<string>;
    public readonly resourceIdentifier!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.AppconfigExtensionAssociationTag[]>;

    /**
     * Create a AppconfigExtensionAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppconfigExtensionAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppconfigExtensionAssociationArgs | AppconfigExtensionAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppconfigExtensionAssociationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["extensionArn"] = state ? state.extensionArn : undefined;
            resourceInputs["extensionAssociationId"] = state ? state.extensionAssociationId : undefined;
            resourceInputs["extensionIdentifier"] = state ? state.extensionIdentifier : undefined;
            resourceInputs["extensionVersionNumber"] = state ? state.extensionVersionNumber : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["resourceIdentifier"] = state ? state.resourceIdentifier : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as AppconfigExtensionAssociationArgs | undefined;
            resourceInputs["extensionIdentifier"] = args ? args.extensionIdentifier : undefined;
            resourceInputs["extensionVersionNumber"] = args ? args.extensionVersionNumber : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["resourceIdentifier"] = args ? args.resourceIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["extensionArn"] = undefined /*out*/;
            resourceInputs["extensionAssociationId"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppconfigExtensionAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppconfigExtensionAssociation resources.
 */
export interface AppconfigExtensionAssociationState {
    arn?: pulumi.Input<string>;
    extensionArn?: pulumi.Input<string>;
    extensionAssociationId?: pulumi.Input<string>;
    extensionIdentifier?: pulumi.Input<string>;
    extensionVersionNumber?: pulumi.Input<number>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    resourceArn?: pulumi.Input<string>;
    resourceIdentifier?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AppconfigExtensionAssociationTag>[]>;
}

/**
 * The set of arguments for constructing a AppconfigExtensionAssociation resource.
 */
export interface AppconfigExtensionAssociationArgs {
    extensionIdentifier?: pulumi.Input<string>;
    extensionVersionNumber?: pulumi.Input<number>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    resourceIdentifier?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AppconfigExtensionAssociationTag>[]>;
}
