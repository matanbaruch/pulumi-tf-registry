// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApptestTestCase extends pulumi.CustomResource {
    /**
     * Get an existing ApptestTestCase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApptestTestCaseState, opts?: pulumi.CustomResourceOptions): ApptestTestCase {
        return new ApptestTestCase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/apptestTestCase:ApptestTestCase';

    /**
     * Returns true if the given object is an instance of ApptestTestCase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApptestTestCase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApptestTestCase.__pulumiType;
    }

    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public /*out*/ readonly lastUpdateTime!: pulumi.Output<string>;
    public /*out*/ readonly latestVersion!: pulumi.Output<outputs.ApptestTestCaseLatestVersion>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly steps!: pulumi.Output<outputs.ApptestTestCaseStep[]>;
    public readonly tags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly testCaseArn!: pulumi.Output<string>;
    public /*out*/ readonly testCaseId!: pulumi.Output<string>;
    public /*out*/ readonly testCaseVersion!: pulumi.Output<number>;

    /**
     * Create a ApptestTestCase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApptestTestCaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApptestTestCaseArgs | ApptestTestCaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApptestTestCaseState | undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastUpdateTime"] = state ? state.lastUpdateTime : undefined;
            resourceInputs["latestVersion"] = state ? state.latestVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["steps"] = state ? state.steps : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["testCaseArn"] = state ? state.testCaseArn : undefined;
            resourceInputs["testCaseId"] = state ? state.testCaseId : undefined;
            resourceInputs["testCaseVersion"] = state ? state.testCaseVersion : undefined;
        } else {
            const args = argsOrState as ApptestTestCaseArgs | undefined;
            if ((!args || args.steps === undefined) && !opts.urn) {
                throw new Error("Missing required property 'steps'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["steps"] = args ? args.steps : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastUpdateTime"] = undefined /*out*/;
            resourceInputs["latestVersion"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["testCaseArn"] = undefined /*out*/;
            resourceInputs["testCaseId"] = undefined /*out*/;
            resourceInputs["testCaseVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApptestTestCase.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApptestTestCase resources.
 */
export interface ApptestTestCaseState {
    creationTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    lastUpdateTime?: pulumi.Input<string>;
    latestVersion?: pulumi.Input<inputs.ApptestTestCaseLatestVersion>;
    name?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    steps?: pulumi.Input<pulumi.Input<inputs.ApptestTestCaseStep>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    testCaseArn?: pulumi.Input<string>;
    testCaseId?: pulumi.Input<string>;
    testCaseVersion?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ApptestTestCase resource.
 */
export interface ApptestTestCaseArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    steps: pulumi.Input<pulumi.Input<inputs.ApptestTestCaseStep>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
