// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPipesPipe(args: GetPipesPipeArgs, opts?: pulumi.InvokeOptions): Promise<GetPipesPipeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getPipesPipe:getPipesPipe", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPipesPipe.
 */
export interface GetPipesPipeArgs {
    id: string;
}

/**
 * A collection of values returned by getPipesPipe.
 */
export interface GetPipesPipeResult {
    readonly arn: string;
    readonly creationTime: string;
    readonly currentState: string;
    readonly description: string;
    readonly desiredState: string;
    readonly enrichment: string;
    readonly enrichmentParameters: outputs.GetPipesPipeEnrichmentParameters;
    readonly id: string;
    readonly lastModifiedTime: string;
    readonly logConfiguration: outputs.GetPipesPipeLogConfiguration;
    readonly name: string;
    readonly roleArn: string;
    readonly source: string;
    readonly sourceParameters: outputs.GetPipesPipeSourceParameters;
    readonly stateReason: string;
    readonly tags: {[key: string]: string};
    readonly target: string;
    readonly targetParameters: outputs.GetPipesPipeTargetParameters;
}
export function getPipesPipeOutput(args: GetPipesPipeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPipesPipeResult> {
    return pulumi.output(args).apply((a: any) => getPipesPipe(a, opts))
}

/**
 * A collection of arguments for invoking getPipesPipe.
 */
export interface GetPipesPipeOutputArgs {
    id: pulumi.Input<string>;
}
