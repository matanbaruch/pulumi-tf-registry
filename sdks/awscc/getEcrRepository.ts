// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcrRepository(args: GetEcrRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetEcrRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEcrRepository:getEcrRepository", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcrRepository.
 */
export interface GetEcrRepositoryArgs {
    id: string;
}

/**
 * A collection of values returned by getEcrRepository.
 */
export interface GetEcrRepositoryResult {
    readonly arn: string;
    readonly emptyOnDelete: boolean;
    readonly encryptionConfiguration: outputs.GetEcrRepositoryEncryptionConfiguration;
    readonly id: string;
    readonly imageScanningConfiguration: outputs.GetEcrRepositoryImageScanningConfiguration;
    readonly imageTagMutability: string;
    readonly lifecyclePolicy: outputs.GetEcrRepositoryLifecyclePolicy;
    readonly repositoryName: string;
    readonly repositoryPolicyText: string;
    readonly repositoryUri: string;
    readonly tags: outputs.GetEcrRepositoryTag[];
}
export function getEcrRepositoryOutput(args: GetEcrRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcrRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getEcrRepository(a, opts))
}

/**
 * A collection of arguments for invoking getEcrRepository.
 */
export interface GetEcrRepositoryOutputArgs {
    id: pulumi.Input<string>;
}
