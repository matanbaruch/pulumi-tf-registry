// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getM2Environment(args: GetM2EnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetM2EnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getM2Environment:getM2Environment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getM2Environment.
 */
export interface GetM2EnvironmentArgs {
    id: string;
}

/**
 * A collection of values returned by getM2Environment.
 */
export interface GetM2EnvironmentResult {
    readonly description: string;
    readonly engineType: string;
    readonly engineVersion: string;
    readonly environmentArn: string;
    readonly environmentId: string;
    readonly highAvailabilityConfig: outputs.GetM2EnvironmentHighAvailabilityConfig;
    readonly id: string;
    readonly instanceType: string;
    readonly kmsKeyId: string;
    readonly name: string;
    readonly preferredMaintenanceWindow: string;
    readonly publiclyAccessible: boolean;
    readonly securityGroupIds: string[];
    readonly storageConfigurations: outputs.GetM2EnvironmentStorageConfiguration[];
    readonly subnetIds: string[];
    readonly tags: {[key: string]: string};
}
export function getM2EnvironmentOutput(args: GetM2EnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetM2EnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getM2Environment(a, opts))
}

/**
 * A collection of arguments for invoking getM2Environment.
 */
export interface GetM2EnvironmentOutputArgs {
    id: pulumi.Input<string>;
}
