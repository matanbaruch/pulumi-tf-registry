// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatazoneProjectMembership(args: GetDatazoneProjectMembershipArgs, opts?: pulumi.InvokeOptions): Promise<GetDatazoneProjectMembershipResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatazoneProjectMembership:getDatazoneProjectMembership", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatazoneProjectMembership.
 */
export interface GetDatazoneProjectMembershipArgs {
    id: string;
}

/**
 * A collection of values returned by getDatazoneProjectMembership.
 */
export interface GetDatazoneProjectMembershipResult {
    readonly designation: string;
    readonly domainIdentifier: string;
    readonly id: string;
    readonly member: outputs.GetDatazoneProjectMembershipMember;
    readonly projectIdentifier: string;
}
export function getDatazoneProjectMembershipOutput(args: GetDatazoneProjectMembershipOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatazoneProjectMembershipResult> {
    return pulumi.output(args).apply((a: any) => getDatazoneProjectMembership(a, opts))
}

/**
 * A collection of arguments for invoking getDatazoneProjectMembership.
 */
export interface GetDatazoneProjectMembershipOutputArgs {
    id: pulumi.Input<string>;
}
