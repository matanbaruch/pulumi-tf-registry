// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVerifiedpermissionsPolicyTemplate(args: GetVerifiedpermissionsPolicyTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetVerifiedpermissionsPolicyTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getVerifiedpermissionsPolicyTemplate:getVerifiedpermissionsPolicyTemplate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVerifiedpermissionsPolicyTemplate.
 */
export interface GetVerifiedpermissionsPolicyTemplateArgs {
    id: string;
}

/**
 * A collection of values returned by getVerifiedpermissionsPolicyTemplate.
 */
export interface GetVerifiedpermissionsPolicyTemplateResult {
    readonly description: string;
    readonly id: string;
    readonly policyStoreId: string;
    readonly policyTemplateId: string;
    readonly statement: string;
}
export function getVerifiedpermissionsPolicyTemplateOutput(args: GetVerifiedpermissionsPolicyTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVerifiedpermissionsPolicyTemplateResult> {
    return pulumi.output(args).apply((a: any) => getVerifiedpermissionsPolicyTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getVerifiedpermissionsPolicyTemplate.
 */
export interface GetVerifiedpermissionsPolicyTemplateOutputArgs {
    id: pulumi.Input<string>;
}
