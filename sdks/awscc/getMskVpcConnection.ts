// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMskVpcConnection(args: GetMskVpcConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetMskVpcConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMskVpcConnection:getMskVpcConnection", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMskVpcConnection.
 */
export interface GetMskVpcConnectionArgs {
    id: string;
}

/**
 * A collection of values returned by getMskVpcConnection.
 */
export interface GetMskVpcConnectionResult {
    readonly arn: string;
    readonly authentication: string;
    readonly clientSubnets: string[];
    readonly id: string;
    readonly securityGroups: string[];
    readonly tags: {[key: string]: string};
    readonly targetClusterArn: string;
    readonly vpcId: string;
}
export function getMskVpcConnectionOutput(args: GetMskVpcConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMskVpcConnectionResult> {
    return pulumi.output(args).apply((a: any) => getMskVpcConnection(a, opts))
}

/**
 * A collection of arguments for invoking getMskVpcConnection.
 */
export interface GetMskVpcConnectionOutputArgs {
    id: pulumi.Input<string>;
}
