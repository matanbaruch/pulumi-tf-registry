// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotScheduledAudit extends pulumi.CustomResource {
    /**
     * Get an existing IotScheduledAudit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotScheduledAuditState, opts?: pulumi.CustomResourceOptions): IotScheduledAudit {
        return new IotScheduledAudit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotScheduledAudit:IotScheduledAudit';

    /**
     * Returns true if the given object is an instance of IotScheduledAudit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotScheduledAudit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotScheduledAudit.__pulumiType;
    }

    /**
     * The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if
     * the frequency parameter is set to MONTHLY.
     */
    public readonly dayOfMonth!: pulumi.Output<string>;
    /**
     * The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This
     * field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
     */
    public readonly dayOfWeek!: pulumi.Output<string>;
    /**
     * How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
     */
    public readonly frequency!: pulumi.Output<string>;
    /**
     * The ARN (Amazon resource name) of the scheduled audit.
     */
    public /*out*/ readonly scheduledAuditArn!: pulumi.Output<string>;
    /**
     * The name you want to give to the scheduled audit.
     */
    public readonly scheduledAuditName!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.IotScheduledAuditTag[]>;
    /**
     * Which checks are performed during the scheduled audit. Checks must be enabled for your account.
     */
    public readonly targetCheckNames!: pulumi.Output<string[]>;

    /**
     * Create a IotScheduledAudit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotScheduledAuditArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotScheduledAuditArgs | IotScheduledAuditState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotScheduledAuditState | undefined;
            resourceInputs["dayOfMonth"] = state ? state.dayOfMonth : undefined;
            resourceInputs["dayOfWeek"] = state ? state.dayOfWeek : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["scheduledAuditArn"] = state ? state.scheduledAuditArn : undefined;
            resourceInputs["scheduledAuditName"] = state ? state.scheduledAuditName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetCheckNames"] = state ? state.targetCheckNames : undefined;
        } else {
            const args = argsOrState as IotScheduledAuditArgs | undefined;
            if ((!args || args.frequency === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frequency'");
            }
            if ((!args || args.targetCheckNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetCheckNames'");
            }
            resourceInputs["dayOfMonth"] = args ? args.dayOfMonth : undefined;
            resourceInputs["dayOfWeek"] = args ? args.dayOfWeek : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["scheduledAuditName"] = args ? args.scheduledAuditName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetCheckNames"] = args ? args.targetCheckNames : undefined;
            resourceInputs["scheduledAuditArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotScheduledAudit.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotScheduledAudit resources.
 */
export interface IotScheduledAuditState {
    /**
     * The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if
     * the frequency parameter is set to MONTHLY.
     */
    dayOfMonth?: pulumi.Input<string>;
    /**
     * The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This
     * field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
     */
    frequency?: pulumi.Input<string>;
    /**
     * The ARN (Amazon resource name) of the scheduled audit.
     */
    scheduledAuditArn?: pulumi.Input<string>;
    /**
     * The name you want to give to the scheduled audit.
     */
    scheduledAuditName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotScheduledAuditTag>[]>;
    /**
     * Which checks are performed during the scheduled audit. Checks must be enabled for your account.
     */
    targetCheckNames?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a IotScheduledAudit resource.
 */
export interface IotScheduledAuditArgs {
    /**
     * The day of the month on which the scheduled audit takes place. Can be 1 through 31 or LAST. This field is required if
     * the frequency parameter is set to MONTHLY.
     */
    dayOfMonth?: pulumi.Input<string>;
    /**
     * The day of the week on which the scheduled audit takes place. Can be one of SUN, MON, TUE,WED, THU, FRI, or SAT. This
     * field is required if the frequency parameter is set to WEEKLY or BIWEEKLY.
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * How often the scheduled audit takes place. Can be one of DAILY, WEEKLY, BIWEEKLY, or MONTHLY.
     */
    frequency: pulumi.Input<string>;
    /**
     * The name you want to give to the scheduled audit.
     */
    scheduledAuditName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotScheduledAuditTag>[]>;
    /**
     * Which checks are performed during the scheduled audit. Checks must be enabled for your account.
     */
    targetCheckNames: pulumi.Input<pulumi.Input<string>[]>;
}
