// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAmplifyApp(args: GetAmplifyAppArgs, opts?: pulumi.InvokeOptions): Promise<GetAmplifyAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getAmplifyApp:getAmplifyApp", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAmplifyApp.
 */
export interface GetAmplifyAppArgs {
    id: string;
}

/**
 * A collection of values returned by getAmplifyApp.
 */
export interface GetAmplifyAppResult {
    readonly accessToken: string;
    readonly appId: string;
    readonly appName: string;
    readonly arn: string;
    readonly autoBranchCreationConfig: outputs.GetAmplifyAppAutoBranchCreationConfig;
    readonly basicAuthConfig: outputs.GetAmplifyAppBasicAuthConfig;
    readonly buildSpec: string;
    readonly customHeaders: string;
    readonly customRules: outputs.GetAmplifyAppCustomRule[];
    readonly defaultDomain: string;
    readonly description: string;
    readonly enableBranchAutoDeletion: boolean;
    readonly environmentVariables: outputs.GetAmplifyAppEnvironmentVariable[];
    readonly iamServiceRole: string;
    readonly id: string;
    readonly name: string;
    readonly oauthToken: string;
    readonly platform: string;
    readonly repository: string;
    readonly tags: outputs.GetAmplifyAppTag[];
}
export function getAmplifyAppOutput(args: GetAmplifyAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAmplifyAppResult> {
    return pulumi.output(args).apply((a: any) => getAmplifyApp(a, opts))
}

/**
 * A collection of arguments for invoking getAmplifyApp.
 */
export interface GetAmplifyAppOutputArgs {
    id: pulumi.Input<string>;
}
