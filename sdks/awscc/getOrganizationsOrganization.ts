// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOrganizationsOrganization(args: GetOrganizationsOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationsOrganizationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getOrganizationsOrganization:getOrganizationsOrganization", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrganizationsOrganization.
 */
export interface GetOrganizationsOrganizationArgs {
    id: string;
}

/**
 * A collection of values returned by getOrganizationsOrganization.
 */
export interface GetOrganizationsOrganizationResult {
    readonly arn: string;
    readonly featureSet: string;
    readonly id: string;
    readonly managementAccountArn: string;
    readonly managementAccountEmail: string;
    readonly managementAccountId: string;
    readonly organizationId: string;
    readonly rootId: string;
}
export function getOrganizationsOrganizationOutput(args: GetOrganizationsOrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrganizationsOrganizationResult> {
    return pulumi.output(args).apply((a: any) => getOrganizationsOrganization(a, opts))
}

/**
 * A collection of arguments for invoking getOrganizationsOrganization.
 */
export interface GetOrganizationsOrganizationOutputArgs {
    id: pulumi.Input<string>;
}
