// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NeptuneDbCluster extends pulumi.CustomResource {
    /**
     * Get an existing NeptuneDbCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NeptuneDbClusterState, opts?: pulumi.CustomResourceOptions): NeptuneDbCluster {
        return new NeptuneDbCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/neptuneDbCluster:NeptuneDbCluster';

    /**
     * Returns true if the given object is an instance of NeptuneDbCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NeptuneDbCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NeptuneDbCluster.__pulumiType;
    }

    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles
     * that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
     */
    public readonly associatedRoles!: pulumi.Output<outputs.NeptuneDbClusterAssociatedRole[]>;
    /**
     * Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * Specifies the number of days for which automatic DB snapshots are retained.
     */
    public readonly backupRetentionPeriod!: pulumi.Output<number>;
    /**
     * The resource id for the DB cluster. For example: `cluster-ABCD1234EFGH5678IJKL90MNOP`. The cluster ID uniquely
     * identifies the cluster and is used in things like IAM authentication policies.
     */
    public /*out*/ readonly clusterResourceId!: pulumi.Output<string>;
    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default
     * behaviour is not to copy them.
     */
    public readonly copyTagsToSnapshot!: pulumi.Output<boolean>;
    /**
     * The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that
     * identifies a DB cluster stored as a lowercase string.
     */
    public readonly dbClusterIdentifier!: pulumi.Output<string>;
    /**
     * Provides the name of the DB cluster parameter group.
     */
    public readonly dbClusterParameterGroupName!: pulumi.Output<string>;
    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major
     * EngineVersion upgrade request.
     */
    public readonly dbInstanceParameterGroupName!: pulumi.Output<string>;
    /**
     * The port number on which the DB instances in the DB cluster accept connections. If not specified, the default port used
     * is `8182`. Note: `Port` property will soon be deprecated from this resource. Please update existing templates to rename
     * it with new property `DBPort` having same functionalities.
     */
    public readonly dbPort!: pulumi.Output<number>;
    /**
     * Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets
     * in the subnet group.
     */
    public readonly dbSubnetGroupName!: pulumi.Output<string>;
    /**
     * Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion
     * protection is enabled.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * Specifies a list of log types that are enabled for export to CloudWatch Logs.
     */
    public readonly enableCloudwatchLogsExports!: pulumi.Output<string[]>;
    /**
     * The connection endpoint for the DB cluster. For example:
     * `mystack-mydbcluster-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * Indicates the database engine version.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise
     * false.
     */
    public readonly iamAuthEnabled!: pulumi.Output<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such
     * as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted
     * property but don't specify this property, the default KMS key is used. If you specify this property, you must set the
     * StorageEncrypted property to true.
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * The port number on which the DB cluster accepts connections. For example: `8182`.
     */
    public /*out*/ readonly port!: pulumi.Output<string>;
    /**
     * Specifies the daily time range during which automated backups are created if automated backups are enabled, as
     * determined by the BackupRetentionPeriod.
     */
    public readonly preferredBackupWindow!: pulumi.Output<string>;
    /**
     * Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     */
    public readonly preferredMaintenanceWindow!: pulumi.Output<string>;
    /**
     * The reader endpoint for the DB cluster. For example:
     * `mystack-mydbcluster-ro-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`
     */
    public /*out*/ readonly readEndpoint!: pulumi.Output<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    public readonly restoreToTime!: pulumi.Output<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    public readonly restoreType!: pulumi.Output<string>;
    /**
     * Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster.
     */
    public readonly serverlessScalingConfiguration!: pulumi.Output<outputs.NeptuneDbClusterServerlessScalingConfiguration>;
    /**
     * Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot. After you restore
     * a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB
     * cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the
     * data in the database is not changed. However, if you don't specify the SnapshotIdentifier, an empty DB cluster is
     * created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot
     * restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB
     * cluster is deleted.
     */
    public readonly snapshotIdentifier!: pulumi.Output<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    public readonly sourceDbClusterIdentifier!: pulumi.Output<string>;
    /**
     * Indicates whether the DB cluster is encrypted. If you specify the KmsKeyId property, then you must enable encryption and
     * set this property to true. If you enable the StorageEncrypted property but don't specify KmsKeyId property, then the
     * default KMS key is used. If you specify KmsKeyId property, then that KMS Key is used to encrypt the database instances
     * in the DB cluster. If you specify the SourceDBClusterIdentifier property and don't specify this property or disable it.
     * The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the KmsKeyId property from the
     * source cluster is used. If you specify the DBSnapshotIdentifier and don't specify this property or disable it. The value
     * is inherited from the snapshot, and the specified KmsKeyId property from the snapshot is used.
     */
    public readonly storageEncrypted!: pulumi.Output<boolean>;
    /**
     * The tags assigned to this cluster.
     */
    public readonly tags!: pulumi.Output<outputs.NeptuneDbClusterTag[]>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    public readonly useLatestRestorableTime!: pulumi.Output<boolean>;
    /**
     * Provides a list of VPC security groups that the DB cluster belongs to.
     */
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[]>;

    /**
     * Create a NeptuneDbCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NeptuneDbClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NeptuneDbClusterArgs | NeptuneDbClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NeptuneDbClusterState | undefined;
            resourceInputs["associatedRoles"] = state ? state.associatedRoles : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["backupRetentionPeriod"] = state ? state.backupRetentionPeriod : undefined;
            resourceInputs["clusterResourceId"] = state ? state.clusterResourceId : undefined;
            resourceInputs["copyTagsToSnapshot"] = state ? state.copyTagsToSnapshot : undefined;
            resourceInputs["dbClusterIdentifier"] = state ? state.dbClusterIdentifier : undefined;
            resourceInputs["dbClusterParameterGroupName"] = state ? state.dbClusterParameterGroupName : undefined;
            resourceInputs["dbInstanceParameterGroupName"] = state ? state.dbInstanceParameterGroupName : undefined;
            resourceInputs["dbPort"] = state ? state.dbPort : undefined;
            resourceInputs["dbSubnetGroupName"] = state ? state.dbSubnetGroupName : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["enableCloudwatchLogsExports"] = state ? state.enableCloudwatchLogsExports : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["iamAuthEnabled"] = state ? state.iamAuthEnabled : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["preferredBackupWindow"] = state ? state.preferredBackupWindow : undefined;
            resourceInputs["preferredMaintenanceWindow"] = state ? state.preferredMaintenanceWindow : undefined;
            resourceInputs["readEndpoint"] = state ? state.readEndpoint : undefined;
            resourceInputs["restoreToTime"] = state ? state.restoreToTime : undefined;
            resourceInputs["restoreType"] = state ? state.restoreType : undefined;
            resourceInputs["serverlessScalingConfiguration"] = state ? state.serverlessScalingConfiguration : undefined;
            resourceInputs["snapshotIdentifier"] = state ? state.snapshotIdentifier : undefined;
            resourceInputs["sourceDbClusterIdentifier"] = state ? state.sourceDbClusterIdentifier : undefined;
            resourceInputs["storageEncrypted"] = state ? state.storageEncrypted : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["useLatestRestorableTime"] = state ? state.useLatestRestorableTime : undefined;
            resourceInputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
        } else {
            const args = argsOrState as NeptuneDbClusterArgs | undefined;
            resourceInputs["associatedRoles"] = args ? args.associatedRoles : undefined;
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["backupRetentionPeriod"] = args ? args.backupRetentionPeriod : undefined;
            resourceInputs["copyTagsToSnapshot"] = args ? args.copyTagsToSnapshot : undefined;
            resourceInputs["dbClusterIdentifier"] = args ? args.dbClusterIdentifier : undefined;
            resourceInputs["dbClusterParameterGroupName"] = args ? args.dbClusterParameterGroupName : undefined;
            resourceInputs["dbInstanceParameterGroupName"] = args ? args.dbInstanceParameterGroupName : undefined;
            resourceInputs["dbPort"] = args ? args.dbPort : undefined;
            resourceInputs["dbSubnetGroupName"] = args ? args.dbSubnetGroupName : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["enableCloudwatchLogsExports"] = args ? args.enableCloudwatchLogsExports : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["iamAuthEnabled"] = args ? args.iamAuthEnabled : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["preferredBackupWindow"] = args ? args.preferredBackupWindow : undefined;
            resourceInputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            resourceInputs["restoreToTime"] = args ? args.restoreToTime : undefined;
            resourceInputs["restoreType"] = args ? args.restoreType : undefined;
            resourceInputs["serverlessScalingConfiguration"] = args ? args.serverlessScalingConfiguration : undefined;
            resourceInputs["snapshotIdentifier"] = args ? args.snapshotIdentifier : undefined;
            resourceInputs["sourceDbClusterIdentifier"] = args ? args.sourceDbClusterIdentifier : undefined;
            resourceInputs["storageEncrypted"] = args ? args.storageEncrypted : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["useLatestRestorableTime"] = args ? args.useLatestRestorableTime : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["clusterResourceId"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["readEndpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NeptuneDbCluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NeptuneDbCluster resources.
 */
export interface NeptuneDbClusterState {
    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles
     * that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
     */
    associatedRoles?: pulumi.Input<pulumi.Input<inputs.NeptuneDbClusterAssociatedRole>[]>;
    /**
     * Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the number of days for which automatic DB snapshots are retained.
     */
    backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * The resource id for the DB cluster. For example: `cluster-ABCD1234EFGH5678IJKL90MNOP`. The cluster ID uniquely
     * identifies the cluster and is used in things like IAM authentication policies.
     */
    clusterResourceId?: pulumi.Input<string>;
    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default
     * behaviour is not to copy them.
     */
    copyTagsToSnapshot?: pulumi.Input<boolean>;
    /**
     * The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that
     * identifies a DB cluster stored as a lowercase string.
     */
    dbClusterIdentifier?: pulumi.Input<string>;
    /**
     * Provides the name of the DB cluster parameter group.
     */
    dbClusterParameterGroupName?: pulumi.Input<string>;
    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major
     * EngineVersion upgrade request.
     */
    dbInstanceParameterGroupName?: pulumi.Input<string>;
    /**
     * The port number on which the DB instances in the DB cluster accept connections. If not specified, the default port used
     * is `8182`. Note: `Port` property will soon be deprecated from this resource. Please update existing templates to rename
     * it with new property `DBPort` having same functionalities.
     */
    dbPort?: pulumi.Input<number>;
    /**
     * Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets
     * in the subnet group.
     */
    dbSubnetGroupName?: pulumi.Input<string>;
    /**
     * Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion
     * protection is enabled.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Specifies a list of log types that are enabled for export to CloudWatch Logs.
     */
    enableCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The connection endpoint for the DB cluster. For example:
     * `mystack-mydbcluster-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Indicates the database engine version.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise
     * false.
     */
    iamAuthEnabled?: pulumi.Input<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such
     * as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted
     * property but don't specify this property, the default KMS key is used. If you specify this property, you must set the
     * StorageEncrypted property to true.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The port number on which the DB cluster accepts connections. For example: `8182`.
     */
    port?: pulumi.Input<string>;
    /**
     * Specifies the daily time range during which automated backups are created if automated backups are enabled, as
     * determined by the BackupRetentionPeriod.
     */
    preferredBackupWindow?: pulumi.Input<string>;
    /**
     * Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     */
    preferredMaintenanceWindow?: pulumi.Input<string>;
    /**
     * The reader endpoint for the DB cluster. For example:
     * `mystack-mydbcluster-ro-1apw1j4phylrk.cg034hpkmmjt.us-east-2.rds.amazonaws.com`
     */
    readEndpoint?: pulumi.Input<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    restoreToTime?: pulumi.Input<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    restoreType?: pulumi.Input<string>;
    /**
     * Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster.
     */
    serverlessScalingConfiguration?: pulumi.Input<inputs.NeptuneDbClusterServerlessScalingConfiguration>;
    /**
     * Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot. After you restore
     * a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB
     * cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the
     * data in the database is not changed. However, if you don't specify the SnapshotIdentifier, an empty DB cluster is
     * created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot
     * restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB
     * cluster is deleted.
     */
    snapshotIdentifier?: pulumi.Input<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    sourceDbClusterIdentifier?: pulumi.Input<string>;
    /**
     * Indicates whether the DB cluster is encrypted. If you specify the KmsKeyId property, then you must enable encryption and
     * set this property to true. If you enable the StorageEncrypted property but don't specify KmsKeyId property, then the
     * default KMS key is used. If you specify KmsKeyId property, then that KMS Key is used to encrypt the database instances
     * in the DB cluster. If you specify the SourceDBClusterIdentifier property and don't specify this property or disable it.
     * The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the KmsKeyId property from the
     * source cluster is used. If you specify the DBSnapshotIdentifier and don't specify this property or disable it. The value
     * is inherited from the snapshot, and the specified KmsKeyId property from the snapshot is used.
     */
    storageEncrypted?: pulumi.Input<boolean>;
    /**
     * The tags assigned to this cluster.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NeptuneDbClusterTag>[]>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    useLatestRestorableTime?: pulumi.Input<boolean>;
    /**
     * Provides a list of VPC security groups that the DB cluster belongs to.
     */
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a NeptuneDbCluster resource.
 */
export interface NeptuneDbClusterArgs {
    /**
     * Provides a list of the AWS Identity and Access Management (IAM) roles that are associated with the DB cluster. IAM roles
     * that are associated with a DB cluster grant permission for the DB cluster to access other AWS services on your behalf.
     */
    associatedRoles?: pulumi.Input<pulumi.Input<inputs.NeptuneDbClusterAssociatedRole>[]>;
    /**
     * Provides the list of EC2 Availability Zones that instances in the DB cluster can be created in.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the number of days for which automatic DB snapshots are retained.
     */
    backupRetentionPeriod?: pulumi.Input<number>;
    /**
     * A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default
     * behaviour is not to copy them.
     */
    copyTagsToSnapshot?: pulumi.Input<boolean>;
    /**
     * The DB cluster identifier. Contains a user-supplied DB cluster identifier. This identifier is the unique key that
     * identifies a DB cluster stored as a lowercase string.
     */
    dbClusterIdentifier?: pulumi.Input<string>;
    /**
     * Provides the name of the DB cluster parameter group.
     */
    dbClusterParameterGroupName?: pulumi.Input<string>;
    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster. Used only in case of a major
     * EngineVersion upgrade request.
     */
    dbInstanceParameterGroupName?: pulumi.Input<string>;
    /**
     * The port number on which the DB instances in the DB cluster accept connections. If not specified, the default port used
     * is `8182`. Note: `Port` property will soon be deprecated from this resource. Please update existing templates to rename
     * it with new property `DBPort` having same functionalities.
     */
    dbPort?: pulumi.Input<number>;
    /**
     * Specifies information on the subnet group associated with the DB cluster, including the name, description, and subnets
     * in the subnet group.
     */
    dbSubnetGroupName?: pulumi.Input<string>;
    /**
     * Indicates whether or not the DB cluster has deletion protection enabled. The database can't be deleted when deletion
     * protection is enabled.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Specifies a list of log types that are enabled for export to CloudWatch Logs.
     */
    enableCloudwatchLogsExports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates the database engine version.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * True if mapping of Amazon Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise
     * false.
     */
    iamAuthEnabled?: pulumi.Input<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key that is used to encrypt the database instances in the DB cluster, such
     * as arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. If you enable the StorageEncrypted
     * property but don't specify this property, the default KMS key is used. If you specify this property, you must set the
     * StorageEncrypted property to true.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the daily time range during which automated backups are created if automated backups are enabled, as
     * determined by the BackupRetentionPeriod.
     */
    preferredBackupWindow?: pulumi.Input<string>;
    /**
     * Specifies the weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     */
    preferredMaintenanceWindow?: pulumi.Input<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    restoreToTime?: pulumi.Input<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    restoreType?: pulumi.Input<string>;
    /**
     * Contains the scaling configuration used by the Neptune Serverless Instances within this DB cluster.
     */
    serverlessScalingConfiguration?: pulumi.Input<inputs.NeptuneDbClusterServerlessScalingConfiguration>;
    /**
     * Specifies the identifier for a DB cluster snapshot. Must match the identifier of an existing snapshot. After you restore
     * a DB cluster using a SnapshotIdentifier, you must specify the same SnapshotIdentifier for any future updates to the DB
     * cluster. When you specify this property for an update, the DB cluster is not restored from the snapshot again, and the
     * data in the database is not changed. However, if you don't specify the SnapshotIdentifier, an empty DB cluster is
     * created, and the original DB cluster is deleted. If you specify a property that is different from the previous snapshot
     * restore property, the DB cluster is restored from the snapshot specified by the SnapshotIdentifier, and the original DB
     * cluster is deleted.
     */
    snapshotIdentifier?: pulumi.Input<string>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    sourceDbClusterIdentifier?: pulumi.Input<string>;
    /**
     * Indicates whether the DB cluster is encrypted. If you specify the KmsKeyId property, then you must enable encryption and
     * set this property to true. If you enable the StorageEncrypted property but don't specify KmsKeyId property, then the
     * default KMS key is used. If you specify KmsKeyId property, then that KMS Key is used to encrypt the database instances
     * in the DB cluster. If you specify the SourceDBClusterIdentifier property and don't specify this property or disable it.
     * The value is inherited from the source DB cluster, and if the DB cluster is encrypted, the KmsKeyId property from the
     * source cluster is used. If you specify the DBSnapshotIdentifier and don't specify this property or disable it. The value
     * is inherited from the snapshot, and the specified KmsKeyId property from the snapshot is used.
     */
    storageEncrypted?: pulumi.Input<boolean>;
    /**
     * The tags assigned to this cluster.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.NeptuneDbClusterTag>[]>;
    /**
     * Creates a new DB cluster from a DB snapshot or DB cluster snapshot. If a DB snapshot is specified, the target DB cluster
     * is created from the source DB snapshot with a default configuration and default security group. If a DB cluster snapshot
     * is specified, the target DB cluster is created from the source DB cluster restore point with the same configuration as
     * the original source DB cluster, except that the new DB cluster is created with the default security group.
     */
    useLatestRestorableTime?: pulumi.Input<boolean>;
    /**
     * Provides a list of VPC security groups that the DB cluster belongs to.
     */
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
