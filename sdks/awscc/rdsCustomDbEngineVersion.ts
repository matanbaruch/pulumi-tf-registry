// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RdsCustomDbEngineVersion extends pulumi.CustomResource {
    /**
     * Get an existing RdsCustomDbEngineVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdsCustomDbEngineVersionState, opts?: pulumi.CustomResourceOptions): RdsCustomDbEngineVersion {
        return new RdsCustomDbEngineVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/rdsCustomDbEngineVersion:RdsCustomDbEngineVersion';

    /**
     * Returns true if the given object is an instance of RdsCustomDbEngineVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RdsCustomDbEngineVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RdsCustomDbEngineVersion.__pulumiType;
    }

    /**
     * The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name
     * is `my-custom-installation-files`.
     */
    public readonly databaseInstallationFilesS3BucketName!: pulumi.Output<string>;
    /**
     * The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is
     * `123456789012/cev1`. If this setting isn't specified, no prefix is assumed.
     */
    public readonly databaseInstallationFilesS3Prefix!: pulumi.Output<string>;
    /**
     * The ARN of the custom engine version.
     */
    public /*out*/ readonly dbEngineVersionArn!: pulumi.Output<string>;
    /**
     * An optional description of your CEV.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The database engine to use for your custom engine version (CEV). The only supported value is `custom-oracle-ee`.
     */
    public readonly engine!: pulumi.Output<string>;
    /**
     * The name of your CEV. The name format is 19.customized_string . For example, a valid name is 19.my_cev1. This setting is
     * required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of Engine and EngineVersion is unique
     * per customer per Region.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * The identifier of Amazon Machine Image (AMI) used for CEV.
     */
    public readonly imageId!: pulumi.Output<string>;
    /**
     * The AWS KMS key identifier for an encrypted CEV. A symmetric KMS key is required for RDS Custom, but optional for Amazon
     * RDS.
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the
     * name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
     */
    public readonly manifest!: pulumi.Output<string>;
    /**
     * The identifier of the source custom engine version.
     */
    public readonly sourceCustomDbEngineVersionIdentifier!: pulumi.Output<string>;
    /**
     * The availability status to be assigned to the CEV.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.RdsCustomDbEngineVersionTag[]>;
    /**
     * A value that indicates whether AWS provided latest image is applied automatically to the Custom Engine Version. By
     * default, AWS provided latest image is applied automatically. This value is only applied on create.
     */
    public readonly useAwsProvidedLatestImage!: pulumi.Output<boolean>;

    /**
     * Create a RdsCustomDbEngineVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RdsCustomDbEngineVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdsCustomDbEngineVersionArgs | RdsCustomDbEngineVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdsCustomDbEngineVersionState | undefined;
            resourceInputs["databaseInstallationFilesS3BucketName"] = state ? state.databaseInstallationFilesS3BucketName : undefined;
            resourceInputs["databaseInstallationFilesS3Prefix"] = state ? state.databaseInstallationFilesS3Prefix : undefined;
            resourceInputs["dbEngineVersionArn"] = state ? state.dbEngineVersionArn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["manifest"] = state ? state.manifest : undefined;
            resourceInputs["sourceCustomDbEngineVersionIdentifier"] = state ? state.sourceCustomDbEngineVersionIdentifier : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["useAwsProvidedLatestImage"] = state ? state.useAwsProvidedLatestImage : undefined;
        } else {
            const args = argsOrState as RdsCustomDbEngineVersionArgs | undefined;
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.engineVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engineVersion'");
            }
            resourceInputs["databaseInstallationFilesS3BucketName"] = args ? args.databaseInstallationFilesS3BucketName : undefined;
            resourceInputs["databaseInstallationFilesS3Prefix"] = args ? args.databaseInstallationFilesS3Prefix : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["manifest"] = args ? args.manifest : undefined;
            resourceInputs["sourceCustomDbEngineVersionIdentifier"] = args ? args.sourceCustomDbEngineVersionIdentifier : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["useAwsProvidedLatestImage"] = args ? args.useAwsProvidedLatestImage : undefined;
            resourceInputs["dbEngineVersionArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RdsCustomDbEngineVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RdsCustomDbEngineVersion resources.
 */
export interface RdsCustomDbEngineVersionState {
    /**
     * The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name
     * is `my-custom-installation-files`.
     */
    databaseInstallationFilesS3BucketName?: pulumi.Input<string>;
    /**
     * The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is
     * `123456789012/cev1`. If this setting isn't specified, no prefix is assumed.
     */
    databaseInstallationFilesS3Prefix?: pulumi.Input<string>;
    /**
     * The ARN of the custom engine version.
     */
    dbEngineVersionArn?: pulumi.Input<string>;
    /**
     * An optional description of your CEV.
     */
    description?: pulumi.Input<string>;
    /**
     * The database engine to use for your custom engine version (CEV). The only supported value is `custom-oracle-ee`.
     */
    engine?: pulumi.Input<string>;
    /**
     * The name of your CEV. The name format is 19.customized_string . For example, a valid name is 19.my_cev1. This setting is
     * required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of Engine and EngineVersion is unique
     * per customer per Region.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The identifier of Amazon Machine Image (AMI) used for CEV.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The AWS KMS key identifier for an encrypted CEV. A symmetric KMS key is required for RDS Custom, but optional for Amazon
     * RDS.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the
     * name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
     */
    manifest?: pulumi.Input<string>;
    /**
     * The identifier of the source custom engine version.
     */
    sourceCustomDbEngineVersionIdentifier?: pulumi.Input<string>;
    /**
     * The availability status to be assigned to the CEV.
     */
    status?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.RdsCustomDbEngineVersionTag>[]>;
    /**
     * A value that indicates whether AWS provided latest image is applied automatically to the Custom Engine Version. By
     * default, AWS provided latest image is applied automatically. This value is only applied on create.
     */
    useAwsProvidedLatestImage?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a RdsCustomDbEngineVersion resource.
 */
export interface RdsCustomDbEngineVersionArgs {
    /**
     * The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name
     * is `my-custom-installation-files`.
     */
    databaseInstallationFilesS3BucketName?: pulumi.Input<string>;
    /**
     * The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is
     * `123456789012/cev1`. If this setting isn't specified, no prefix is assumed.
     */
    databaseInstallationFilesS3Prefix?: pulumi.Input<string>;
    /**
     * An optional description of your CEV.
     */
    description?: pulumi.Input<string>;
    /**
     * The database engine to use for your custom engine version (CEV). The only supported value is `custom-oracle-ee`.
     */
    engine: pulumi.Input<string>;
    /**
     * The name of your CEV. The name format is 19.customized_string . For example, a valid name is 19.my_cev1. This setting is
     * required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of Engine and EngineVersion is unique
     * per customer per Region.
     */
    engineVersion: pulumi.Input<string>;
    /**
     * The identifier of Amazon Machine Image (AMI) used for CEV.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The AWS KMS key identifier for an encrypted CEV. A symmetric KMS key is required for RDS Custom, but optional for Amazon
     * RDS.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the
     * name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
     */
    manifest?: pulumi.Input<string>;
    /**
     * The identifier of the source custom engine version.
     */
    sourceCustomDbEngineVersionIdentifier?: pulumi.Input<string>;
    /**
     * The availability status to be assigned to the CEV.
     */
    status?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.RdsCustomDbEngineVersionTag>[]>;
    /**
     * A value that indicates whether AWS provided latest image is applied automatically to the Custom Engine Version. By
     * default, AWS provided latest image is applied automatically. This value is only applied on create.
     */
    useAwsProvidedLatestImage?: pulumi.Input<boolean>;
}
