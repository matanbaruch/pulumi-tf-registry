// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamManagedPolicy(args: GetIamManagedPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamManagedPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIamManagedPolicy:getIamManagedPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamManagedPolicy.
 */
export interface GetIamManagedPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getIamManagedPolicy.
 */
export interface GetIamManagedPolicyResult {
    readonly attachmentCount: number;
    readonly createDate: string;
    readonly defaultVersionId: string;
    readonly description: string;
    readonly groups: string[];
    readonly id: string;
    readonly isAttachable: boolean;
    readonly managedPolicyName: string;
    readonly path: string;
    readonly permissionsBoundaryUsageCount: number;
    readonly policyArn: string;
    readonly policyDocument: string;
    readonly policyId: string;
    readonly roles: string[];
    readonly updateDate: string;
    readonly users: string[];
}
export function getIamManagedPolicyOutput(args: GetIamManagedPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamManagedPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIamManagedPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIamManagedPolicy.
 */
export interface GetIamManagedPolicyOutputArgs {
    id: pulumi.Input<string>;
}
