// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class S3objectlambdaAccessPoint extends pulumi.CustomResource {
    /**
     * Get an existing S3objectlambdaAccessPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3objectlambdaAccessPointState, opts?: pulumi.CustomResourceOptions): S3objectlambdaAccessPoint {
        return new S3objectlambdaAccessPoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/s3objectlambdaAccessPoint:S3objectlambdaAccessPoint';

    /**
     * Returns true if the given object is an instance of S3objectlambdaAccessPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3objectlambdaAccessPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3objectlambdaAccessPoint.__pulumiType;
    }

    public /*out*/ readonly alias!: pulumi.Output<outputs.S3objectlambdaAccessPointAlias>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The date and time when the Object lambda Access Point was created.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * The name you want to assign to this Object lambda Access Point.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified
     * S3 Actions
     */
    public readonly objectLambdaConfiguration!: pulumi.Output<outputs.S3objectlambdaAccessPointObjectLambdaConfiguration>;
    public /*out*/ readonly policyStatus!: pulumi.Output<outputs.S3objectlambdaAccessPointPolicyStatus>;
    /**
     * The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration
     * options in any combination. For more information about when Amazon S3 considers a bucket or object public, see
     * https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status
     * 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
     */
    public /*out*/ readonly publicAccessBlockConfiguration!: pulumi.Output<outputs.S3objectlambdaAccessPointPublicAccessBlockConfiguration>;

    /**
     * Create a S3objectlambdaAccessPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3objectlambdaAccessPointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3objectlambdaAccessPointArgs | S3objectlambdaAccessPointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3objectlambdaAccessPointState | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectLambdaConfiguration"] = state ? state.objectLambdaConfiguration : undefined;
            resourceInputs["policyStatus"] = state ? state.policyStatus : undefined;
            resourceInputs["publicAccessBlockConfiguration"] = state ? state.publicAccessBlockConfiguration : undefined;
        } else {
            const args = argsOrState as S3objectlambdaAccessPointArgs | undefined;
            if ((!args || args.objectLambdaConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectLambdaConfiguration'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectLambdaConfiguration"] = args ? args.objectLambdaConfiguration : undefined;
            resourceInputs["alias"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["policyStatus"] = undefined /*out*/;
            resourceInputs["publicAccessBlockConfiguration"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3objectlambdaAccessPoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering S3objectlambdaAccessPoint resources.
 */
export interface S3objectlambdaAccessPointState {
    alias?: pulumi.Input<inputs.S3objectlambdaAccessPointAlias>;
    arn?: pulumi.Input<string>;
    /**
     * The date and time when the Object lambda Access Point was created.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The name you want to assign to this Object lambda Access Point.
     */
    name?: pulumi.Input<string>;
    /**
     * The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified
     * S3 Actions
     */
    objectLambdaConfiguration?: pulumi.Input<inputs.S3objectlambdaAccessPointObjectLambdaConfiguration>;
    policyStatus?: pulumi.Input<inputs.S3objectlambdaAccessPointPolicyStatus>;
    /**
     * The PublicAccessBlock configuration that you want to apply to this Access Point. You can enable the configuration
     * options in any combination. For more information about when Amazon S3 considers a bucket or object public, see
     * https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status
     * 'The Meaning of Public' in the Amazon Simple Storage Service Developer Guide.
     */
    publicAccessBlockConfiguration?: pulumi.Input<inputs.S3objectlambdaAccessPointPublicAccessBlockConfiguration>;
}

/**
 * The set of arguments for constructing a S3objectlambdaAccessPoint resource.
 */
export interface S3objectlambdaAccessPointArgs {
    /**
     * The name you want to assign to this Object lambda Access Point.
     */
    name?: pulumi.Input<string>;
    /**
     * The Object lambda Access Point Configuration that configures transformations to be applied on the objects on specified
     * S3 Actions
     */
    objectLambdaConfiguration: pulumi.Input<inputs.S3objectlambdaAccessPointObjectLambdaConfiguration>;
}
