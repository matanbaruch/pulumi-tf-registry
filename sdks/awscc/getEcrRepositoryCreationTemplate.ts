// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcrRepositoryCreationTemplate(args: GetEcrRepositoryCreationTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetEcrRepositoryCreationTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEcrRepositoryCreationTemplate:getEcrRepositoryCreationTemplate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcrRepositoryCreationTemplate.
 */
export interface GetEcrRepositoryCreationTemplateArgs {
    id: string;
}

/**
 * A collection of values returned by getEcrRepositoryCreationTemplate.
 */
export interface GetEcrRepositoryCreationTemplateResult {
    readonly appliedFors: string[];
    readonly createdAt: string;
    readonly customRoleArn: string;
    readonly description: string;
    readonly encryptionConfiguration: outputs.GetEcrRepositoryCreationTemplateEncryptionConfiguration;
    readonly id: string;
    readonly imageTagMutability: string;
    readonly lifecyclePolicy: string;
    readonly prefix: string;
    readonly repositoryPolicy: string;
    readonly resourceTags: outputs.GetEcrRepositoryCreationTemplateResourceTag[];
    readonly updatedAt: string;
}
export function getEcrRepositoryCreationTemplateOutput(args: GetEcrRepositoryCreationTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcrRepositoryCreationTemplateResult> {
    return pulumi.output(args).apply((a: any) => getEcrRepositoryCreationTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getEcrRepositoryCreationTemplate.
 */
export interface GetEcrRepositoryCreationTemplateOutputArgs {
    id: pulumi.Input<string>;
}
