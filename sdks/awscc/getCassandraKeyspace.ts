// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCassandraKeyspace(args: GetCassandraKeyspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetCassandraKeyspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCassandraKeyspace:getCassandraKeyspace", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCassandraKeyspace.
 */
export interface GetCassandraKeyspaceArgs {
    id: string;
}

/**
 * A collection of values returned by getCassandraKeyspace.
 */
export interface GetCassandraKeyspaceResult {
    readonly id: string;
    readonly keyspaceName: string;
    readonly replicationSpecification: outputs.GetCassandraKeyspaceReplicationSpecification;
    readonly tags: outputs.GetCassandraKeyspaceTag[];
}
export function getCassandraKeyspaceOutput(args: GetCassandraKeyspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCassandraKeyspaceResult> {
    return pulumi.output(args).apply((a: any) => getCassandraKeyspace(a, opts))
}

/**
 * A collection of arguments for invoking getCassandraKeyspace.
 */
export interface GetCassandraKeyspaceOutputArgs {
    id: pulumi.Input<string>;
}
