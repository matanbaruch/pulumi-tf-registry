// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DeadlineFleet extends pulumi.CustomResource {
    /**
     * Get an existing DeadlineFleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeadlineFleetState, opts?: pulumi.CustomResourceOptions): DeadlineFleet {
        return new DeadlineFleet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/deadlineFleet:DeadlineFleet';

    /**
     * Returns true if the given object is an instance of DeadlineFleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeadlineFleet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeadlineFleet.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly capabilities!: pulumi.Output<outputs.DeadlineFleetCapabilities>;
    public readonly configuration!: pulumi.Output<outputs.DeadlineFleetConfiguration>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly farmId!: pulumi.Output<string>;
    public /*out*/ readonly fleetId!: pulumi.Output<string>;
    public readonly maxWorkerCount!: pulumi.Output<number>;
    public readonly minWorkerCount!: pulumi.Output<number>;
    public readonly roleArn!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.DeadlineFleetTag[]>;
    public /*out*/ readonly workerCount!: pulumi.Output<number>;

    /**
     * Create a DeadlineFleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeadlineFleetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeadlineFleetArgs | DeadlineFleetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeadlineFleetState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["capabilities"] = state ? state.capabilities : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["farmId"] = state ? state.farmId : undefined;
            resourceInputs["fleetId"] = state ? state.fleetId : undefined;
            resourceInputs["maxWorkerCount"] = state ? state.maxWorkerCount : undefined;
            resourceInputs["minWorkerCount"] = state ? state.minWorkerCount : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["workerCount"] = state ? state.workerCount : undefined;
        } else {
            const args = argsOrState as DeadlineFleetArgs | undefined;
            if ((!args || args.configuration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configuration'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.farmId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'farmId'");
            }
            if ((!args || args.maxWorkerCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxWorkerCount'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["farmId"] = args ? args.farmId : undefined;
            resourceInputs["maxWorkerCount"] = args ? args.maxWorkerCount : undefined;
            resourceInputs["minWorkerCount"] = args ? args.minWorkerCount : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["capabilities"] = undefined /*out*/;
            resourceInputs["fleetId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["workerCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeadlineFleet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DeadlineFleet resources.
 */
export interface DeadlineFleetState {
    arn?: pulumi.Input<string>;
    capabilities?: pulumi.Input<inputs.DeadlineFleetCapabilities>;
    configuration?: pulumi.Input<inputs.DeadlineFleetConfiguration>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    farmId?: pulumi.Input<string>;
    fleetId?: pulumi.Input<string>;
    maxWorkerCount?: pulumi.Input<number>;
    minWorkerCount?: pulumi.Input<number>;
    roleArn?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DeadlineFleetTag>[]>;
    workerCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DeadlineFleet resource.
 */
export interface DeadlineFleetArgs {
    configuration: pulumi.Input<inputs.DeadlineFleetConfiguration>;
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    farmId: pulumi.Input<string>;
    maxWorkerCount: pulumi.Input<number>;
    minWorkerCount?: pulumi.Input<number>;
    roleArn: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DeadlineFleetTag>[]>;
}
