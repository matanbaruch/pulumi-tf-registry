// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Route53recoverycontrolControlPanel extends pulumi.CustomResource {
    /**
     * Get an existing Route53recoverycontrolControlPanel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53recoverycontrolControlPanelState, opts?: pulumi.CustomResourceOptions): Route53recoverycontrolControlPanel {
        return new Route53recoverycontrolControlPanel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/route53recoverycontrolControlPanel:Route53recoverycontrolControlPanel';

    /**
     * Returns true if the given object is an instance of Route53recoverycontrolControlPanel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53recoverycontrolControlPanel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53recoverycontrolControlPanel.__pulumiType;
    }

    /**
     * Cluster to associate with the Control Panel
     */
    public readonly clusterArn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the cluster.
     */
    public /*out*/ readonly controlPanelArn!: pulumi.Output<string>;
    /**
     * A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a
     * cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets
     * this flag for that control panel. If you create a control panel yourself, this flag is set to false.
     */
    public /*out*/ readonly defaultControlPanel!: pulumi.Output<boolean>;
    /**
     * The name of the control panel. You can use any non-white space character in the name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Count of associated routing controls
     */
    public /*out*/ readonly routingControlCount!: pulumi.Output<number>;
    /**
     * The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * A collection of tags associated with a resource
     */
    public readonly tags!: pulumi.Output<outputs.Route53recoverycontrolControlPanelTag[]>;

    /**
     * Create a Route53recoverycontrolControlPanel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Route53recoverycontrolControlPanelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53recoverycontrolControlPanelArgs | Route53recoverycontrolControlPanelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53recoverycontrolControlPanelState | undefined;
            resourceInputs["clusterArn"] = state ? state.clusterArn : undefined;
            resourceInputs["controlPanelArn"] = state ? state.controlPanelArn : undefined;
            resourceInputs["defaultControlPanel"] = state ? state.defaultControlPanel : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["routingControlCount"] = state ? state.routingControlCount : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Route53recoverycontrolControlPanelArgs | undefined;
            resourceInputs["clusterArn"] = args ? args.clusterArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["controlPanelArn"] = undefined /*out*/;
            resourceInputs["defaultControlPanel"] = undefined /*out*/;
            resourceInputs["routingControlCount"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53recoverycontrolControlPanel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53recoverycontrolControlPanel resources.
 */
export interface Route53recoverycontrolControlPanelState {
    /**
     * Cluster to associate with the Control Panel
     */
    clusterArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the cluster.
     */
    controlPanelArn?: pulumi.Input<string>;
    /**
     * A flag that Amazon Route 53 Application Recovery Controller sets to true to designate the default control panel for a
     * cluster. When you create a cluster, Amazon Route 53 Application Recovery Controller creates a control panel, and sets
     * this flag for that control panel. If you create a control panel yourself, this flag is set to false.
     */
    defaultControlPanel?: pulumi.Input<boolean>;
    /**
     * The name of the control panel. You can use any non-white space character in the name.
     */
    name?: pulumi.Input<string>;
    /**
     * Count of associated routing controls
     */
    routingControlCount?: pulumi.Input<number>;
    /**
     * The deployment status of control panel. Status can be one of the following: PENDING, DEPLOYED, PENDING_DELETION.
     */
    status?: pulumi.Input<string>;
    /**
     * A collection of tags associated with a resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53recoverycontrolControlPanelTag>[]>;
}

/**
 * The set of arguments for constructing a Route53recoverycontrolControlPanel resource.
 */
export interface Route53recoverycontrolControlPanelArgs {
    /**
     * Cluster to associate with the Control Panel
     */
    clusterArn?: pulumi.Input<string>;
    /**
     * The name of the control panel. You can use any non-white space character in the name.
     */
    name?: pulumi.Input<string>;
    /**
     * A collection of tags associated with a resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53recoverycontrolControlPanelTag>[]>;
}
