// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogsQueryDefinition(args: GetLogsQueryDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsQueryDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLogsQueryDefinition:getLogsQueryDefinition", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogsQueryDefinition.
 */
export interface GetLogsQueryDefinitionArgs {
    id: string;
}

/**
 * A collection of values returned by getLogsQueryDefinition.
 */
export interface GetLogsQueryDefinitionResult {
    readonly id: string;
    readonly logGroupNames: string[];
    readonly name: string;
    readonly queryDefinitionId: string;
    readonly queryString: string;
}
export function getLogsQueryDefinitionOutput(args: GetLogsQueryDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogsQueryDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getLogsQueryDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getLogsQueryDefinition.
 */
export interface GetLogsQueryDefinitionOutputArgs {
    id: pulumi.Input<string>;
}
