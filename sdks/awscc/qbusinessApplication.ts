// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class QbusinessApplication extends pulumi.CustomResource {
    /**
     * Get an existing QbusinessApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QbusinessApplicationState, opts?: pulumi.CustomResourceOptions): QbusinessApplication {
        return new QbusinessApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/qbusinessApplication:QbusinessApplication';

    /**
     * Returns true if the given object is an instance of QbusinessApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QbusinessApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QbusinessApplication.__pulumiType;
    }

    public /*out*/ readonly applicationArn!: pulumi.Output<string>;
    public /*out*/ readonly applicationId!: pulumi.Output<string>;
    public readonly attachmentsConfiguration!: pulumi.Output<outputs.QbusinessApplicationAttachmentsConfiguration>;
    public readonly autoSubscriptionConfiguration!: pulumi.Output<outputs.QbusinessApplicationAutoSubscriptionConfiguration>;
    public readonly clientIdsForOidcs!: pulumi.Output<string[]>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly encryptionConfiguration!: pulumi.Output<outputs.QbusinessApplicationEncryptionConfiguration>;
    public readonly iamIdentityProviderArn!: pulumi.Output<string>;
    public /*out*/ readonly identityCenterApplicationArn!: pulumi.Output<string>;
    public readonly identityCenterInstanceArn!: pulumi.Output<string>;
    public readonly identityType!: pulumi.Output<string>;
    public readonly personalizationConfiguration!: pulumi.Output<outputs.QbusinessApplicationPersonalizationConfiguration>;
    public readonly qAppsConfiguration!: pulumi.Output<outputs.QbusinessApplicationQAppsConfiguration>;
    public readonly roleArn!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.QbusinessApplicationTag[]>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a QbusinessApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QbusinessApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QbusinessApplicationArgs | QbusinessApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QbusinessApplicationState | undefined;
            resourceInputs["applicationArn"] = state ? state.applicationArn : undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["attachmentsConfiguration"] = state ? state.attachmentsConfiguration : undefined;
            resourceInputs["autoSubscriptionConfiguration"] = state ? state.autoSubscriptionConfiguration : undefined;
            resourceInputs["clientIdsForOidcs"] = state ? state.clientIdsForOidcs : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["encryptionConfiguration"] = state ? state.encryptionConfiguration : undefined;
            resourceInputs["iamIdentityProviderArn"] = state ? state.iamIdentityProviderArn : undefined;
            resourceInputs["identityCenterApplicationArn"] = state ? state.identityCenterApplicationArn : undefined;
            resourceInputs["identityCenterInstanceArn"] = state ? state.identityCenterInstanceArn : undefined;
            resourceInputs["identityType"] = state ? state.identityType : undefined;
            resourceInputs["personalizationConfiguration"] = state ? state.personalizationConfiguration : undefined;
            resourceInputs["qAppsConfiguration"] = state ? state.qAppsConfiguration : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as QbusinessApplicationArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["attachmentsConfiguration"] = args ? args.attachmentsConfiguration : undefined;
            resourceInputs["autoSubscriptionConfiguration"] = args ? args.autoSubscriptionConfiguration : undefined;
            resourceInputs["clientIdsForOidcs"] = args ? args.clientIdsForOidcs : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptionConfiguration"] = args ? args.encryptionConfiguration : undefined;
            resourceInputs["iamIdentityProviderArn"] = args ? args.iamIdentityProviderArn : undefined;
            resourceInputs["identityCenterInstanceArn"] = args ? args.identityCenterInstanceArn : undefined;
            resourceInputs["identityType"] = args ? args.identityType : undefined;
            resourceInputs["personalizationConfiguration"] = args ? args.personalizationConfiguration : undefined;
            resourceInputs["qAppsConfiguration"] = args ? args.qAppsConfiguration : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["applicationArn"] = undefined /*out*/;
            resourceInputs["applicationId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["identityCenterApplicationArn"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QbusinessApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering QbusinessApplication resources.
 */
export interface QbusinessApplicationState {
    applicationArn?: pulumi.Input<string>;
    applicationId?: pulumi.Input<string>;
    attachmentsConfiguration?: pulumi.Input<inputs.QbusinessApplicationAttachmentsConfiguration>;
    autoSubscriptionConfiguration?: pulumi.Input<inputs.QbusinessApplicationAutoSubscriptionConfiguration>;
    clientIdsForOidcs?: pulumi.Input<pulumi.Input<string>[]>;
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    encryptionConfiguration?: pulumi.Input<inputs.QbusinessApplicationEncryptionConfiguration>;
    iamIdentityProviderArn?: pulumi.Input<string>;
    identityCenterApplicationArn?: pulumi.Input<string>;
    identityCenterInstanceArn?: pulumi.Input<string>;
    identityType?: pulumi.Input<string>;
    personalizationConfiguration?: pulumi.Input<inputs.QbusinessApplicationPersonalizationConfiguration>;
    qAppsConfiguration?: pulumi.Input<inputs.QbusinessApplicationQAppsConfiguration>;
    roleArn?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.QbusinessApplicationTag>[]>;
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QbusinessApplication resource.
 */
export interface QbusinessApplicationArgs {
    attachmentsConfiguration?: pulumi.Input<inputs.QbusinessApplicationAttachmentsConfiguration>;
    autoSubscriptionConfiguration?: pulumi.Input<inputs.QbusinessApplicationAutoSubscriptionConfiguration>;
    clientIdsForOidcs?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    encryptionConfiguration?: pulumi.Input<inputs.QbusinessApplicationEncryptionConfiguration>;
    iamIdentityProviderArn?: pulumi.Input<string>;
    identityCenterInstanceArn?: pulumi.Input<string>;
    identityType?: pulumi.Input<string>;
    personalizationConfiguration?: pulumi.Input<inputs.QbusinessApplicationPersonalizationConfiguration>;
    qAppsConfiguration?: pulumi.Input<inputs.QbusinessApplicationQAppsConfiguration>;
    roleArn?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.QbusinessApplicationTag>[]>;
}
