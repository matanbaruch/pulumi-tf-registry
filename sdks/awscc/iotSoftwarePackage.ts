// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotSoftwarePackage extends pulumi.CustomResource {
    /**
     * Get an existing IotSoftwarePackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotSoftwarePackageState, opts?: pulumi.CustomResourceOptions): IotSoftwarePackage {
        return new IotSoftwarePackage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotSoftwarePackage:IotSoftwarePackage';

    /**
     * Returns true if the given object is an instance of IotSoftwarePackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotSoftwarePackage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotSoftwarePackage.__pulumiType;
    }

    public readonly description!: pulumi.Output<string>;
    public /*out*/ readonly packageArn!: pulumi.Output<string>;
    public readonly packageName!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.IotSoftwarePackageTag[]>;

    /**
     * Create a IotSoftwarePackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IotSoftwarePackageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotSoftwarePackageArgs | IotSoftwarePackageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotSoftwarePackageState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["packageArn"] = state ? state.packageArn : undefined;
            resourceInputs["packageName"] = state ? state.packageName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IotSoftwarePackageArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["packageName"] = args ? args.packageName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["packageArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotSoftwarePackage.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotSoftwarePackage resources.
 */
export interface IotSoftwarePackageState {
    description?: pulumi.Input<string>;
    packageArn?: pulumi.Input<string>;
    packageName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotSoftwarePackageTag>[]>;
}

/**
 * The set of arguments for constructing a IotSoftwarePackage resource.
 */
export interface IotSoftwarePackageArgs {
    description?: pulumi.Input<string>;
    packageName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotSoftwarePackageTag>[]>;
}
