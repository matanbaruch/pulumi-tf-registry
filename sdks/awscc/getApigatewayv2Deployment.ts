// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApigatewayv2Deployment(args: GetApigatewayv2DeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayv2DeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayv2Deployment:getApigatewayv2Deployment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayv2Deployment.
 */
export interface GetApigatewayv2DeploymentArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayv2Deployment.
 */
export interface GetApigatewayv2DeploymentResult {
    readonly apiId: string;
    readonly deploymentId: string;
    readonly description: string;
    readonly id: string;
    readonly stageName: string;
}
export function getApigatewayv2DeploymentOutput(args: GetApigatewayv2DeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayv2DeploymentResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayv2Deployment(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayv2Deployment.
 */
export interface GetApigatewayv2DeploymentOutputArgs {
    id: pulumi.Input<string>;
}
