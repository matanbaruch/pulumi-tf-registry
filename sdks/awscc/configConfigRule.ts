// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConfigConfigRule extends pulumi.CustomResource {
    /**
     * Get an existing ConfigConfigRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigConfigRuleState, opts?: pulumi.CustomResourceOptions): ConfigConfigRule {
        return new ConfigConfigRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/configConfigRule:ConfigConfigRule';

    /**
     * Returns true if the given object is an instance of ConfigConfigRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigConfigRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigConfigRule.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the
     * compliance.
     */
    public readonly compliance!: pulumi.Output<outputs.ConfigConfigRuleCompliance>;
    public /*out*/ readonly configRuleId!: pulumi.Output<string>;
    /**
     * A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule
     * name. For more information, see [Name
     * Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
     */
    public readonly configRuleName!: pulumi.Output<string>;
    /**
     * The description that you provide for the CC rule.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective
     * evaluation mode only.
     */
    public readonly evaluationModes!: pulumi.Output<outputs.ConfigConfigRuleEvaluationMode[]>;
    /**
     * A string, in JSON format, that is passed to the CC rule Lambda function.
     */
    public readonly inputParameters!: pulumi.Output<string>;
    /**
     * The maximum frequency with which CC runs evaluations for a rule. You can specify a value for
     * ``MaximumExecutionFrequency`` when: + You are using an AWS managed rule that is triggered at a periodic frequency. +
     * Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see
     * [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
     * By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value
     * for the ``MaximumExecutionFrequency`` parameter.
     */
    public readonly maximumExecutionFrequency!: pulumi.Output<string>;
    /**
     * Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a
     * combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to
     * constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are
     * triggered when any resource in the recording group changes. The scope can be empty.
     */
    public readonly scope!: pulumi.Output<outputs.ConfigConfigRuleScope>;
    /**
     * Provides the rule owner (```` for managed rules, ``CUSTOM_POLICY`` for Custom Policy rules, and ``CUSTOM_LAMBDA`` for
     * Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
     */
    public readonly source!: pulumi.Output<outputs.ConfigConfigRuleSource>;

    /**
     * Create a ConfigConfigRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigConfigRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigConfigRuleArgs | ConfigConfigRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigConfigRuleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["compliance"] = state ? state.compliance : undefined;
            resourceInputs["configRuleId"] = state ? state.configRuleId : undefined;
            resourceInputs["configRuleName"] = state ? state.configRuleName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["evaluationModes"] = state ? state.evaluationModes : undefined;
            resourceInputs["inputParameters"] = state ? state.inputParameters : undefined;
            resourceInputs["maximumExecutionFrequency"] = state ? state.maximumExecutionFrequency : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
        } else {
            const args = argsOrState as ConfigConfigRuleArgs | undefined;
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["compliance"] = args ? args.compliance : undefined;
            resourceInputs["configRuleName"] = args ? args.configRuleName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["evaluationModes"] = args ? args.evaluationModes : undefined;
            resourceInputs["inputParameters"] = args ? args.inputParameters : undefined;
            resourceInputs["maximumExecutionFrequency"] = args ? args.maximumExecutionFrequency : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["configRuleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigConfigRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConfigConfigRule resources.
 */
export interface ConfigConfigRuleState {
    arn?: pulumi.Input<string>;
    /**
     * Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the
     * compliance.
     */
    compliance?: pulumi.Input<inputs.ConfigConfigRuleCompliance>;
    configRuleId?: pulumi.Input<string>;
    /**
     * A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule
     * name. For more information, see [Name
     * Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
     */
    configRuleName?: pulumi.Input<string>;
    /**
     * The description that you provide for the CC rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective
     * evaluation mode only.
     */
    evaluationModes?: pulumi.Input<pulumi.Input<inputs.ConfigConfigRuleEvaluationMode>[]>;
    /**
     * A string, in JSON format, that is passed to the CC rule Lambda function.
     */
    inputParameters?: pulumi.Input<string>;
    /**
     * The maximum frequency with which CC runs evaluations for a rule. You can specify a value for
     * ``MaximumExecutionFrequency`` when: + You are using an AWS managed rule that is triggered at a periodic frequency. +
     * Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see
     * [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
     * By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value
     * for the ``MaximumExecutionFrequency`` parameter.
     */
    maximumExecutionFrequency?: pulumi.Input<string>;
    /**
     * Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a
     * combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to
     * constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are
     * triggered when any resource in the recording group changes. The scope can be empty.
     */
    scope?: pulumi.Input<inputs.ConfigConfigRuleScope>;
    /**
     * Provides the rule owner (```` for managed rules, ``CUSTOM_POLICY`` for Custom Policy rules, and ``CUSTOM_LAMBDA`` for
     * Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
     */
    source?: pulumi.Input<inputs.ConfigConfigRuleSource>;
}

/**
 * The set of arguments for constructing a ConfigConfigRule resource.
 */
export interface ConfigConfigRuleArgs {
    /**
     * Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the
     * compliance.
     */
    compliance?: pulumi.Input<inputs.ConfigConfigRuleCompliance>;
    /**
     * A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule
     * name. For more information, see [Name
     * Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
     */
    configRuleName?: pulumi.Input<string>;
    /**
     * The description that you provide for the CC rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective
     * evaluation mode only.
     */
    evaluationModes?: pulumi.Input<pulumi.Input<inputs.ConfigConfigRuleEvaluationMode>[]>;
    /**
     * A string, in JSON format, that is passed to the CC rule Lambda function.
     */
    inputParameters?: pulumi.Input<string>;
    /**
     * The maximum frequency with which CC runs evaluations for a rule. You can specify a value for
     * ``MaximumExecutionFrequency`` when: + You are using an AWS managed rule that is triggered at a periodic frequency. +
     * Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see
     * [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
     * By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value
     * for the ``MaximumExecutionFrequency`` parameter.
     */
    maximumExecutionFrequency?: pulumi.Input<string>;
    /**
     * Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a
     * combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to
     * constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are
     * triggered when any resource in the recording group changes. The scope can be empty.
     */
    scope?: pulumi.Input<inputs.ConfigConfigRuleScope>;
    /**
     * Provides the rule owner (```` for managed rules, ``CUSTOM_POLICY`` for Custom Policy rules, and ``CUSTOM_LAMBDA`` for
     * Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
     */
    source: pulumi.Input<inputs.ConfigConfigRuleSource>;
}
