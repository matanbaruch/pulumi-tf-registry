// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkmanagerCoreNetwork(args: GetNetworkmanagerCoreNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkmanagerCoreNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getNetworkmanagerCoreNetwork:getNetworkmanagerCoreNetwork", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkmanagerCoreNetwork.
 */
export interface GetNetworkmanagerCoreNetworkArgs {
    id: string;
}

/**
 * A collection of values returned by getNetworkmanagerCoreNetwork.
 */
export interface GetNetworkmanagerCoreNetworkResult {
    readonly coreNetworkArn: string;
    readonly coreNetworkId: string;
    readonly createdAt: string;
    readonly description: string;
    readonly edges: outputs.GetNetworkmanagerCoreNetworkEdge[];
    readonly globalNetworkId: string;
    readonly id: string;
    readonly networkFunctionGroups: outputs.GetNetworkmanagerCoreNetworkNetworkFunctionGroup[];
    readonly ownerAccount: string;
    readonly policyDocument: string;
    readonly segments: outputs.GetNetworkmanagerCoreNetworkSegment[];
    readonly state: string;
    readonly tags: outputs.GetNetworkmanagerCoreNetworkTag[];
}
export function getNetworkmanagerCoreNetworkOutput(args: GetNetworkmanagerCoreNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkmanagerCoreNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNetworkmanagerCoreNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkmanagerCoreNetwork.
 */
export interface GetNetworkmanagerCoreNetworkOutputArgs {
    id: pulumi.Input<string>;
}
