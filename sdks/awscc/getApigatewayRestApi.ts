// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayRestApi(args: GetApigatewayRestApiArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayRestApiResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayRestApi:getApigatewayRestApi", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayRestApi.
 */
export interface GetApigatewayRestApiArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayRestApi.
 */
export interface GetApigatewayRestApiResult {
    readonly apiKeySourceType: string;
    readonly binaryMediaTypes: string[];
    readonly body: string;
    readonly bodyS3Location: outputs.GetApigatewayRestApiBodyS3Location;
    readonly cloneFrom: string;
    readonly description: string;
    readonly disableExecuteApiEndpoint: boolean;
    readonly endpointConfiguration: outputs.GetApigatewayRestApiEndpointConfiguration;
    readonly failOnWarnings: boolean;
    readonly id: string;
    readonly minimumCompressionSize: number;
    readonly mode: string;
    readonly name: string;
    readonly parameters: string;
    readonly policy: string;
    readonly restApiId: string;
    readonly rootResourceId: string;
    readonly tags: outputs.GetApigatewayRestApiTag[];
}
export function getApigatewayRestApiOutput(args: GetApigatewayRestApiOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayRestApiResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayRestApi(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayRestApi.
 */
export interface GetApigatewayRestApiOutputArgs {
    id: pulumi.Input<string>;
}
