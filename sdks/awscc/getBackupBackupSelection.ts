// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBackupBackupSelection(args: GetBackupBackupSelectionArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupBackupSelectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getBackupBackupSelection:getBackupBackupSelection", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBackupBackupSelection.
 */
export interface GetBackupBackupSelectionArgs {
    id: string;
}

/**
 * A collection of values returned by getBackupBackupSelection.
 */
export interface GetBackupBackupSelectionResult {
    readonly backupPlanId: string;
    readonly backupSelection: outputs.GetBackupBackupSelectionBackupSelection;
    readonly backupSelectionId: string;
    readonly id: string;
    readonly selectionId: string;
}
export function getBackupBackupSelectionOutput(args: GetBackupBackupSelectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupBackupSelectionResult> {
    return pulumi.output(args).apply((a: any) => getBackupBackupSelection(a, opts))
}

/**
 * A collection of arguments for invoking getBackupBackupSelection.
 */
export interface GetBackupBackupSelectionOutputArgs {
    id: pulumi.Input<string>;
}
