// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CleanroomsmlTrainingDataset extends pulumi.CustomResource {
    /**
     * Get an existing CleanroomsmlTrainingDataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CleanroomsmlTrainingDatasetState, opts?: pulumi.CustomResourceOptions): CleanroomsmlTrainingDataset {
        return new CleanroomsmlTrainingDataset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/cleanroomsmlTrainingDataset:CleanroomsmlTrainingDataset';

    /**
     * Returns true if the given object is an instance of CleanroomsmlTrainingDataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CleanroomsmlTrainingDataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CleanroomsmlTrainingDataset.__pulumiType;
    }

    public readonly description!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly roleArn!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms-ml training dataset.
     */
    public readonly tags!: pulumi.Output<outputs.CleanroomsmlTrainingDatasetTag[]>;
    public readonly trainingDatas!: pulumi.Output<outputs.CleanroomsmlTrainingDatasetTrainingData[]>;
    public /*out*/ readonly trainingDatasetArn!: pulumi.Output<string>;

    /**
     * Create a CleanroomsmlTrainingDataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CleanroomsmlTrainingDatasetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CleanroomsmlTrainingDatasetArgs | CleanroomsmlTrainingDatasetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CleanroomsmlTrainingDatasetState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trainingDatas"] = state ? state.trainingDatas : undefined;
            resourceInputs["trainingDatasetArn"] = state ? state.trainingDatasetArn : undefined;
        } else {
            const args = argsOrState as CleanroomsmlTrainingDatasetArgs | undefined;
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.trainingDatas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trainingDatas'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trainingDatas"] = args ? args.trainingDatas : undefined;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["trainingDatasetArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CleanroomsmlTrainingDataset.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CleanroomsmlTrainingDataset resources.
 */
export interface CleanroomsmlTrainingDatasetState {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms-ml training dataset.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CleanroomsmlTrainingDatasetTag>[]>;
    trainingDatas?: pulumi.Input<pulumi.Input<inputs.CleanroomsmlTrainingDatasetTrainingData>[]>;
    trainingDatasetArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CleanroomsmlTrainingDataset resource.
 */
export interface CleanroomsmlTrainingDatasetArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms-ml training dataset.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CleanroomsmlTrainingDatasetTag>[]>;
    trainingDatas: pulumi.Input<pulumi.Input<inputs.CleanroomsmlTrainingDatasetTrainingData>[]>;
}
