// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ec2EipAssociation extends pulumi.CustomResource {
    /**
     * Get an existing Ec2EipAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2EipAssociationState, opts?: pulumi.CustomResourceOptions): Ec2EipAssociation {
        return new Ec2EipAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ec2EipAssociation:Ec2EipAssociation';

    /**
     * Returns true if the given object is an instance of Ec2EipAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ec2EipAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2EipAssociation.__pulumiType;
    }

    /**
     * The allocation ID. This is required.
     */
    public readonly allocationId!: pulumi.Output<string>;
    public readonly eip!: pulumi.Output<string>;
    public /*out*/ readonly eipAssociationId!: pulumi.Output<string>;
    /**
     * The ID of the instance. The instance must have exactly one attached network interface. You can specify either the
     * instance ID or the network interface ID, but not both.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The ID of the network interface. If the instance has more than one network interface, you must specify a network
     * interface ID. You can specify either the instance ID or the network interface ID, but not both.
     */
    public readonly networkInterfaceId!: pulumi.Output<string>;
    /**
     * The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is
     * specified, the Elastic IP address is associated with the primary private IP address.
     */
    public readonly privateIpAddress!: pulumi.Output<string>;

    /**
     * Create a Ec2EipAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ec2EipAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ec2EipAssociationArgs | Ec2EipAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ec2EipAssociationState | undefined;
            resourceInputs["allocationId"] = state ? state.allocationId : undefined;
            resourceInputs["eip"] = state ? state.eip : undefined;
            resourceInputs["eipAssociationId"] = state ? state.eipAssociationId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["networkInterfaceId"] = state ? state.networkInterfaceId : undefined;
            resourceInputs["privateIpAddress"] = state ? state.privateIpAddress : undefined;
        } else {
            const args = argsOrState as Ec2EipAssociationArgs | undefined;
            resourceInputs["allocationId"] = args ? args.allocationId : undefined;
            resourceInputs["eip"] = args ? args.eip : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["networkInterfaceId"] = args ? args.networkInterfaceId : undefined;
            resourceInputs["privateIpAddress"] = args ? args.privateIpAddress : undefined;
            resourceInputs["eipAssociationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2EipAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ec2EipAssociation resources.
 */
export interface Ec2EipAssociationState {
    /**
     * The allocation ID. This is required.
     */
    allocationId?: pulumi.Input<string>;
    eip?: pulumi.Input<string>;
    eipAssociationId?: pulumi.Input<string>;
    /**
     * The ID of the instance. The instance must have exactly one attached network interface. You can specify either the
     * instance ID or the network interface ID, but not both.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of the network interface. If the instance has more than one network interface, you must specify a network
     * interface ID. You can specify either the instance ID or the network interface ID, but not both.
     */
    networkInterfaceId?: pulumi.Input<string>;
    /**
     * The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is
     * specified, the Elastic IP address is associated with the primary private IP address.
     */
    privateIpAddress?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ec2EipAssociation resource.
 */
export interface Ec2EipAssociationArgs {
    /**
     * The allocation ID. This is required.
     */
    allocationId?: pulumi.Input<string>;
    eip?: pulumi.Input<string>;
    /**
     * The ID of the instance. The instance must have exactly one attached network interface. You can specify either the
     * instance ID or the network interface ID, but not both.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The ID of the network interface. If the instance has more than one network interface, you must specify a network
     * interface ID. You can specify either the instance ID or the network interface ID, but not both.
     */
    networkInterfaceId?: pulumi.Input<string>;
    /**
     * The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is
     * specified, the Elastic IP address is associated with the primary private IP address.
     */
    privateIpAddress?: pulumi.Input<string>;
}
