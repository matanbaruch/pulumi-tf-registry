// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecurityhubFindingAggregator(args: GetSecurityhubFindingAggregatorArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityhubFindingAggregatorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSecurityhubFindingAggregator:getSecurityhubFindingAggregator", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityhubFindingAggregator.
 */
export interface GetSecurityhubFindingAggregatorArgs {
    id: string;
}

/**
 * A collection of values returned by getSecurityhubFindingAggregator.
 */
export interface GetSecurityhubFindingAggregatorResult {
    readonly findingAggregationRegion: string;
    readonly findingAggregatorArn: string;
    readonly id: string;
    readonly regionLinkingMode: string;
    readonly regions: string[];
}
export function getSecurityhubFindingAggregatorOutput(args: GetSecurityhubFindingAggregatorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityhubFindingAggregatorResult> {
    return pulumi.output(args).apply((a: any) => getSecurityhubFindingAggregator(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityhubFindingAggregator.
 */
export interface GetSecurityhubFindingAggregatorOutputArgs {
    id: pulumi.Input<string>;
}
