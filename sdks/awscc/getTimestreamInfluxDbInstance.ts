// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTimestreamInfluxDbInstance(args: GetTimestreamInfluxDbInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetTimestreamInfluxDbInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getTimestreamInfluxDbInstance:getTimestreamInfluxDbInstance", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTimestreamInfluxDbInstance.
 */
export interface GetTimestreamInfluxDbInstanceArgs {
    id: string;
}

/**
 * A collection of values returned by getTimestreamInfluxDbInstance.
 */
export interface GetTimestreamInfluxDbInstanceResult {
    readonly allocatedStorage: number;
    readonly arn: string;
    readonly availabilityZone: string;
    readonly bucket: string;
    readonly dbInstanceType: string;
    readonly dbParameterGroupIdentifier: string;
    readonly dbStorageType: string;
    readonly deploymentType: string;
    readonly endpoint: string;
    readonly id: string;
    readonly influxAuthParametersSecretArn: string;
    readonly influxDbInstanceId: string;
    readonly logDeliveryConfiguration: outputs.GetTimestreamInfluxDbInstanceLogDeliveryConfiguration;
    readonly name: string;
    readonly organization: string;
    readonly password: string;
    readonly publiclyAccessible: boolean;
    readonly secondaryAvailabilityZone: string;
    readonly status: string;
    readonly tags: outputs.GetTimestreamInfluxDbInstanceTag[];
    readonly username: string;
    readonly vpcSecurityGroupIds: string[];
    readonly vpcSubnetIds: string[];
}
export function getTimestreamInfluxDbInstanceOutput(args: GetTimestreamInfluxDbInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTimestreamInfluxDbInstanceResult> {
    return pulumi.output(args).apply((a: any) => getTimestreamInfluxDbInstance(a, opts))
}

/**
 * A collection of arguments for invoking getTimestreamInfluxDbInstance.
 */
export interface GetTimestreamInfluxDbInstanceOutputArgs {
    id: pulumi.Input<string>;
}
