// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatasyncAgent extends pulumi.CustomResource {
    /**
     * Get an existing DatasyncAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatasyncAgentState, opts?: pulumi.CustomResourceOptions): DatasyncAgent {
        return new DatasyncAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/datasyncAgent:DatasyncAgent';

    /**
     * Returns true if the given object is an instance of DatasyncAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatasyncAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasyncAgent.__pulumiType;
    }

    /**
     * Activation key of the Agent.
     */
    public readonly activationKey!: pulumi.Output<string>;
    /**
     * The DataSync Agent ARN.
     */
    public /*out*/ readonly agentArn!: pulumi.Output<string>;
    /**
     * The name configured for the agent. Text reference used to identify the agent in the console.
     */
    public readonly agentName!: pulumi.Output<string>;
    /**
     * The service endpoints that the agent will connect to.
     */
    public /*out*/ readonly endpointType!: pulumi.Output<string>;
    /**
     * The ARNs of the security group used to protect your data transfer task subnets.
     */
    public readonly securityGroupArns!: pulumi.Output<string[]>;
    /**
     * The ARNs of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
     */
    public readonly subnetArns!: pulumi.Output<string[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.DatasyncAgentTag[]>;
    /**
     * The ID of the VPC endpoint that the agent has access to.
     */
    public readonly vpcEndpointId!: pulumi.Output<string>;

    /**
     * Create a DatasyncAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DatasyncAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatasyncAgentArgs | DatasyncAgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatasyncAgentState | undefined;
            resourceInputs["activationKey"] = state ? state.activationKey : undefined;
            resourceInputs["agentArn"] = state ? state.agentArn : undefined;
            resourceInputs["agentName"] = state ? state.agentName : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
            resourceInputs["securityGroupArns"] = state ? state.securityGroupArns : undefined;
            resourceInputs["subnetArns"] = state ? state.subnetArns : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcEndpointId"] = state ? state.vpcEndpointId : undefined;
        } else {
            const args = argsOrState as DatasyncAgentArgs | undefined;
            resourceInputs["activationKey"] = args ? args.activationKey : undefined;
            resourceInputs["agentName"] = args ? args.agentName : undefined;
            resourceInputs["securityGroupArns"] = args ? args.securityGroupArns : undefined;
            resourceInputs["subnetArns"] = args ? args.subnetArns : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcEndpointId"] = args ? args.vpcEndpointId : undefined;
            resourceInputs["agentArn"] = undefined /*out*/;
            resourceInputs["endpointType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatasyncAgent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatasyncAgent resources.
 */
export interface DatasyncAgentState {
    /**
     * Activation key of the Agent.
     */
    activationKey?: pulumi.Input<string>;
    /**
     * The DataSync Agent ARN.
     */
    agentArn?: pulumi.Input<string>;
    /**
     * The name configured for the agent. Text reference used to identify the agent in the console.
     */
    agentName?: pulumi.Input<string>;
    /**
     * The service endpoints that the agent will connect to.
     */
    endpointType?: pulumi.Input<string>;
    /**
     * The ARNs of the security group used to protect your data transfer task subnets.
     */
    securityGroupArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARNs of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
     */
    subnetArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DatasyncAgentTag>[]>;
    /**
     * The ID of the VPC endpoint that the agent has access to.
     */
    vpcEndpointId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatasyncAgent resource.
 */
export interface DatasyncAgentArgs {
    /**
     * Activation key of the Agent.
     */
    activationKey?: pulumi.Input<string>;
    /**
     * The name configured for the agent. Text reference used to identify the agent in the console.
     */
    agentName?: pulumi.Input<string>;
    /**
     * The ARNs of the security group used to protect your data transfer task subnets.
     */
    securityGroupArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARNs of the subnets in which DataSync will create elastic network interfaces for each data transfer task.
     */
    subnetArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DatasyncAgentTag>[]>;
    /**
     * The ID of the VPC endpoint that the agent has access to.
     */
    vpcEndpointId?: pulumi.Input<string>;
}
