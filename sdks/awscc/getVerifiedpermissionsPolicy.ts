// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVerifiedpermissionsPolicy(args: GetVerifiedpermissionsPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetVerifiedpermissionsPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getVerifiedpermissionsPolicy:getVerifiedpermissionsPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVerifiedpermissionsPolicy.
 */
export interface GetVerifiedpermissionsPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getVerifiedpermissionsPolicy.
 */
export interface GetVerifiedpermissionsPolicyResult {
    readonly definition: outputs.GetVerifiedpermissionsPolicyDefinition;
    readonly id: string;
    readonly policyId: string;
    readonly policyStoreId: string;
    readonly policyType: string;
}
export function getVerifiedpermissionsPolicyOutput(args: GetVerifiedpermissionsPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVerifiedpermissionsPolicyResult> {
    return pulumi.output(args).apply((a: any) => getVerifiedpermissionsPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getVerifiedpermissionsPolicy.
 */
export interface GetVerifiedpermissionsPolicyOutputArgs {
    id: pulumi.Input<string>;
}
