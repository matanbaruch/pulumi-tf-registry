// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSagemakerApp(args: GetSagemakerAppArgs, opts?: pulumi.InvokeOptions): Promise<GetSagemakerAppResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSagemakerApp:getSagemakerApp", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSagemakerApp.
 */
export interface GetSagemakerAppArgs {
    id: string;
}

/**
 * A collection of values returned by getSagemakerApp.
 */
export interface GetSagemakerAppResult {
    readonly appArn: string;
    readonly appName: string;
    readonly appType: string;
    readonly domainId: string;
    readonly id: string;
    readonly resourceSpec: outputs.GetSagemakerAppResourceSpec;
    readonly tags: outputs.GetSagemakerAppTag[];
    readonly userProfileName: string;
}
export function getSagemakerAppOutput(args: GetSagemakerAppOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSagemakerAppResult> {
    return pulumi.output(args).apply((a: any) => getSagemakerApp(a, opts))
}

/**
 * A collection of arguments for invoking getSagemakerApp.
 */
export interface GetSagemakerAppOutputArgs {
    id: pulumi.Input<string>;
}
