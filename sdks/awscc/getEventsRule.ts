// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventsRule(args: GetEventsRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEventsRule:getEventsRule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventsRule.
 */
export interface GetEventsRuleArgs {
    id: string;
}

/**
 * A collection of values returned by getEventsRule.
 */
export interface GetEventsRuleResult {
    readonly arn: string;
    readonly description: string;
    readonly eventBusName: string;
    readonly eventPattern: string;
    readonly id: string;
    readonly name: string;
    readonly roleArn: string;
    readonly scheduleExpression: string;
    readonly state: string;
    readonly targets: outputs.GetEventsRuleTarget[];
}
export function getEventsRuleOutput(args: GetEventsRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventsRuleResult> {
    return pulumi.output(args).apply((a: any) => getEventsRule(a, opts))
}

/**
 * A collection of arguments for invoking getEventsRule.
 */
export interface GetEventsRuleOutputArgs {
    id: pulumi.Input<string>;
}
