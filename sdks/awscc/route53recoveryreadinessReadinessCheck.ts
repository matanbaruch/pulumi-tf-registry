// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Route53recoveryreadinessReadinessCheck extends pulumi.CustomResource {
    /**
     * Get an existing Route53recoveryreadinessReadinessCheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53recoveryreadinessReadinessCheckState, opts?: pulumi.CustomResourceOptions): Route53recoveryreadinessReadinessCheck {
        return new Route53recoveryreadinessReadinessCheck(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/route53recoveryreadinessReadinessCheck:Route53recoveryreadinessReadinessCheck';

    /**
     * Returns true if the given object is an instance of Route53recoveryreadinessReadinessCheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53recoveryreadinessReadinessCheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53recoveryreadinessReadinessCheck.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the readiness check.
     */
    public /*out*/ readonly readinessCheckArn!: pulumi.Output<string>;
    /**
     * Name of the ReadinessCheck to create.
     */
    public readonly readinessCheckName!: pulumi.Output<string>;
    /**
     * The name of the resource set to check.
     */
    public readonly resourceSetName!: pulumi.Output<string>;
    /**
     * A collection of tags associated with a resource.
     */
    public readonly tags!: pulumi.Output<outputs.Route53recoveryreadinessReadinessCheckTag[]>;

    /**
     * Create a Route53recoveryreadinessReadinessCheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Route53recoveryreadinessReadinessCheckArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53recoveryreadinessReadinessCheckArgs | Route53recoveryreadinessReadinessCheckState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53recoveryreadinessReadinessCheckState | undefined;
            resourceInputs["readinessCheckArn"] = state ? state.readinessCheckArn : undefined;
            resourceInputs["readinessCheckName"] = state ? state.readinessCheckName : undefined;
            resourceInputs["resourceSetName"] = state ? state.resourceSetName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Route53recoveryreadinessReadinessCheckArgs | undefined;
            resourceInputs["readinessCheckName"] = args ? args.readinessCheckName : undefined;
            resourceInputs["resourceSetName"] = args ? args.resourceSetName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["readinessCheckArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53recoveryreadinessReadinessCheck.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53recoveryreadinessReadinessCheck resources.
 */
export interface Route53recoveryreadinessReadinessCheckState {
    /**
     * The Amazon Resource Name (ARN) of the readiness check.
     */
    readinessCheckArn?: pulumi.Input<string>;
    /**
     * Name of the ReadinessCheck to create.
     */
    readinessCheckName?: pulumi.Input<string>;
    /**
     * The name of the resource set to check.
     */
    resourceSetName?: pulumi.Input<string>;
    /**
     * A collection of tags associated with a resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53recoveryreadinessReadinessCheckTag>[]>;
}

/**
 * The set of arguments for constructing a Route53recoveryreadinessReadinessCheck resource.
 */
export interface Route53recoveryreadinessReadinessCheckArgs {
    /**
     * Name of the ReadinessCheck to create.
     */
    readinessCheckName?: pulumi.Input<string>;
    /**
     * The name of the resource set to check.
     */
    resourceSetName?: pulumi.Input<string>;
    /**
     * A collection of tags associated with a resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53recoveryreadinessReadinessCheckTag>[]>;
}
