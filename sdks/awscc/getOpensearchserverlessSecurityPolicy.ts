// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOpensearchserverlessSecurityPolicy(args: GetOpensearchserverlessSecurityPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchserverlessSecurityPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getOpensearchserverlessSecurityPolicy:getOpensearchserverlessSecurityPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpensearchserverlessSecurityPolicy.
 */
export interface GetOpensearchserverlessSecurityPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getOpensearchserverlessSecurityPolicy.
 */
export interface GetOpensearchserverlessSecurityPolicyResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly policy: string;
    readonly type: string;
}
export function getOpensearchserverlessSecurityPolicyOutput(args: GetOpensearchserverlessSecurityPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpensearchserverlessSecurityPolicyResult> {
    return pulumi.output(args).apply((a: any) => getOpensearchserverlessSecurityPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getOpensearchserverlessSecurityPolicy.
 */
export interface GetOpensearchserverlessSecurityPolicyOutputArgs {
    id: pulumi.Input<string>;
}
