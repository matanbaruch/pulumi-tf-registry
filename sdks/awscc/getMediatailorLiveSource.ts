// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediatailorLiveSource(args: GetMediatailorLiveSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetMediatailorLiveSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediatailorLiveSource:getMediatailorLiveSource", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediatailorLiveSource.
 */
export interface GetMediatailorLiveSourceArgs {
    id: string;
}

/**
 * A collection of values returned by getMediatailorLiveSource.
 */
export interface GetMediatailorLiveSourceResult {
    readonly arn: string;
    readonly httpPackageConfigurations: outputs.GetMediatailorLiveSourceHttpPackageConfiguration[];
    readonly id: string;
    readonly liveSourceName: string;
    readonly sourceLocationName: string;
    readonly tags: outputs.GetMediatailorLiveSourceTag[];
}
export function getMediatailorLiveSourceOutput(args: GetMediatailorLiveSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediatailorLiveSourceResult> {
    return pulumi.output(args).apply((a: any) => getMediatailorLiveSource(a, opts))
}

/**
 * A collection of arguments for invoking getMediatailorLiveSource.
 */
export interface GetMediatailorLiveSourceOutputArgs {
    id: pulumi.Input<string>;
}
