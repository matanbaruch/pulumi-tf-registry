// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getShieldProactiveEngagement(args: GetShieldProactiveEngagementArgs, opts?: pulumi.InvokeOptions): Promise<GetShieldProactiveEngagementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getShieldProactiveEngagement:getShieldProactiveEngagement", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getShieldProactiveEngagement.
 */
export interface GetShieldProactiveEngagementArgs {
    id: string;
}

/**
 * A collection of values returned by getShieldProactiveEngagement.
 */
export interface GetShieldProactiveEngagementResult {
    readonly accountId: string;
    readonly emergencyContactLists: outputs.GetShieldProactiveEngagementEmergencyContactList[];
    readonly id: string;
    readonly proactiveEngagementStatus: string;
}
export function getShieldProactiveEngagementOutput(args: GetShieldProactiveEngagementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetShieldProactiveEngagementResult> {
    return pulumi.output(args).apply((a: any) => getShieldProactiveEngagement(a, opts))
}

/**
 * A collection of arguments for invoking getShieldProactiveEngagement.
 */
export interface GetShieldProactiveEngagementOutputArgs {
    id: pulumi.Input<string>;
}
