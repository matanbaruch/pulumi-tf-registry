// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IvschatRoom extends pulumi.CustomResource {
    /**
     * Get an existing IvschatRoom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IvschatRoomState, opts?: pulumi.CustomResourceOptions): IvschatRoom {
        return new IvschatRoom(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ivschatRoom:IvschatRoom';

    /**
     * Returns true if the given object is an instance of IvschatRoom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IvschatRoom {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IvschatRoom.__pulumiType;
    }

    /**
     * Room ARN is automatically generated on creation and assigned as the unique identifier.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Array of logging configuration identifiers attached to the room.
     */
    public readonly loggingConfigurationIdentifiers!: pulumi.Output<string[]>;
    /**
     * The maximum number of characters in a single message.
     */
    public readonly maximumMessageLength!: pulumi.Output<number>;
    /**
     * The maximum number of messages per second that can be sent to the room.
     */
    public readonly maximumMessageRatePerSecond!: pulumi.Output<number>;
    /**
     * Configuration information for optional review of messages.
     */
    public readonly messageReviewHandler!: pulumi.Output<outputs.IvschatRoomMessageReviewHandler>;
    /**
     * The name of the room. The value does not need to be unique.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The system-generated ID of the room.
     */
    public /*out*/ readonly roomId!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.IvschatRoomTag[]>;

    /**
     * Create a IvschatRoom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IvschatRoomArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IvschatRoomArgs | IvschatRoomState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IvschatRoomState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["loggingConfigurationIdentifiers"] = state ? state.loggingConfigurationIdentifiers : undefined;
            resourceInputs["maximumMessageLength"] = state ? state.maximumMessageLength : undefined;
            resourceInputs["maximumMessageRatePerSecond"] = state ? state.maximumMessageRatePerSecond : undefined;
            resourceInputs["messageReviewHandler"] = state ? state.messageReviewHandler : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roomId"] = state ? state.roomId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IvschatRoomArgs | undefined;
            resourceInputs["loggingConfigurationIdentifiers"] = args ? args.loggingConfigurationIdentifiers : undefined;
            resourceInputs["maximumMessageLength"] = args ? args.maximumMessageLength : undefined;
            resourceInputs["maximumMessageRatePerSecond"] = args ? args.maximumMessageRatePerSecond : undefined;
            resourceInputs["messageReviewHandler"] = args ? args.messageReviewHandler : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["roomId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IvschatRoom.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IvschatRoom resources.
 */
export interface IvschatRoomState {
    /**
     * Room ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn?: pulumi.Input<string>;
    /**
     * Array of logging configuration identifiers attached to the room.
     */
    loggingConfigurationIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of characters in a single message.
     */
    maximumMessageLength?: pulumi.Input<number>;
    /**
     * The maximum number of messages per second that can be sent to the room.
     */
    maximumMessageRatePerSecond?: pulumi.Input<number>;
    /**
     * Configuration information for optional review of messages.
     */
    messageReviewHandler?: pulumi.Input<inputs.IvschatRoomMessageReviewHandler>;
    /**
     * The name of the room. The value does not need to be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The system-generated ID of the room.
     */
    roomId?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IvschatRoomTag>[]>;
}

/**
 * The set of arguments for constructing a IvschatRoom resource.
 */
export interface IvschatRoomArgs {
    /**
     * Array of logging configuration identifiers attached to the room.
     */
    loggingConfigurationIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of characters in a single message.
     */
    maximumMessageLength?: pulumi.Input<number>;
    /**
     * The maximum number of messages per second that can be sent to the room.
     */
    maximumMessageRatePerSecond?: pulumi.Input<number>;
    /**
     * Configuration information for optional review of messages.
     */
    messageReviewHandler?: pulumi.Input<inputs.IvschatRoomMessageReviewHandler>;
    /**
     * The name of the room. The value does not need to be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IvschatRoomTag>[]>;
}
