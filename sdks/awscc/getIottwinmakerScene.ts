// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIottwinmakerScene(args: GetIottwinmakerSceneArgs, opts?: pulumi.InvokeOptions): Promise<GetIottwinmakerSceneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIottwinmakerScene:getIottwinmakerScene", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIottwinmakerScene.
 */
export interface GetIottwinmakerSceneArgs {
    id: string;
}

/**
 * A collection of values returned by getIottwinmakerScene.
 */
export interface GetIottwinmakerSceneResult {
    readonly arn: string;
    readonly capabilities: string[];
    readonly contentLocation: string;
    readonly creationDateTime: string;
    readonly description: string;
    readonly generatedSceneMetadata: {[key: string]: string};
    readonly id: string;
    readonly sceneId: string;
    readonly sceneMetadata: {[key: string]: string};
    readonly tags: {[key: string]: string};
    readonly updateDateTime: string;
    readonly workspaceId: string;
}
export function getIottwinmakerSceneOutput(args: GetIottwinmakerSceneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIottwinmakerSceneResult> {
    return pulumi.output(args).apply((a: any) => getIottwinmakerScene(a, opts))
}

/**
 * A collection of arguments for invoking getIottwinmakerScene.
 */
export interface GetIottwinmakerSceneOutputArgs {
    id: pulumi.Input<string>;
}
