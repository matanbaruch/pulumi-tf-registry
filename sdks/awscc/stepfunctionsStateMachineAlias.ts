// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StepfunctionsStateMachineAlias extends pulumi.CustomResource {
    /**
     * Get an existing StepfunctionsStateMachineAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StepfunctionsStateMachineAliasState, opts?: pulumi.CustomResourceOptions): StepfunctionsStateMachineAlias {
        return new StepfunctionsStateMachineAlias(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/stepfunctionsStateMachineAlias:StepfunctionsStateMachineAlias';

    /**
     * Returns true if the given object is an instance of StepfunctionsStateMachineAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StepfunctionsStateMachineAlias {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StepfunctionsStateMachineAlias.__pulumiType;
    }

    /**
     * The ARN of the alias.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The settings to enable gradual state machine deployments.
     */
    public readonly deploymentPreference!: pulumi.Output<outputs.StepfunctionsStateMachineAliasDeploymentPreference>;
    /**
     * An optional description of the alias.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The alias name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The routing configuration of the alias. One or two versions can be mapped to an alias to split StartExecution requests
     * of the same state machine.
     */
    public readonly routingConfigurations!: pulumi.Output<outputs.StepfunctionsStateMachineAliasRoutingConfiguration[]>;

    /**
     * Create a StepfunctionsStateMachineAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StepfunctionsStateMachineAliasArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StepfunctionsStateMachineAliasArgs | StepfunctionsStateMachineAliasState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StepfunctionsStateMachineAliasState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["deploymentPreference"] = state ? state.deploymentPreference : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["routingConfigurations"] = state ? state.routingConfigurations : undefined;
        } else {
            const args = argsOrState as StepfunctionsStateMachineAliasArgs | undefined;
            resourceInputs["deploymentPreference"] = args ? args.deploymentPreference : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["routingConfigurations"] = args ? args.routingConfigurations : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StepfunctionsStateMachineAlias.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StepfunctionsStateMachineAlias resources.
 */
export interface StepfunctionsStateMachineAliasState {
    /**
     * The ARN of the alias.
     */
    arn?: pulumi.Input<string>;
    /**
     * The settings to enable gradual state machine deployments.
     */
    deploymentPreference?: pulumi.Input<inputs.StepfunctionsStateMachineAliasDeploymentPreference>;
    /**
     * An optional description of the alias.
     */
    description?: pulumi.Input<string>;
    /**
     * The alias name.
     */
    name?: pulumi.Input<string>;
    /**
     * The routing configuration of the alias. One or two versions can be mapped to an alias to split StartExecution requests
     * of the same state machine.
     */
    routingConfigurations?: pulumi.Input<pulumi.Input<inputs.StepfunctionsStateMachineAliasRoutingConfiguration>[]>;
}

/**
 * The set of arguments for constructing a StepfunctionsStateMachineAlias resource.
 */
export interface StepfunctionsStateMachineAliasArgs {
    /**
     * The settings to enable gradual state machine deployments.
     */
    deploymentPreference?: pulumi.Input<inputs.StepfunctionsStateMachineAliasDeploymentPreference>;
    /**
     * An optional description of the alias.
     */
    description?: pulumi.Input<string>;
    /**
     * The alias name.
     */
    name?: pulumi.Input<string>;
    /**
     * The routing configuration of the alias. One or two versions can be mapped to an alias to split StartExecution requests
     * of the same state machine.
     */
    routingConfigurations?: pulumi.Input<pulumi.Input<inputs.StepfunctionsStateMachineAliasRoutingConfiguration>[]>;
}
