// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApigatewayBasePathMapping(args: GetApigatewayBasePathMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayBasePathMappingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayBasePathMapping:getApigatewayBasePathMapping", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayBasePathMapping.
 */
export interface GetApigatewayBasePathMappingArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayBasePathMapping.
 */
export interface GetApigatewayBasePathMappingResult {
    readonly basePath: string;
    readonly domainName: string;
    readonly id: string;
    readonly restApiId: string;
    readonly stage: string;
}
export function getApigatewayBasePathMappingOutput(args: GetApigatewayBasePathMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayBasePathMappingResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayBasePathMapping(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayBasePathMapping.
 */
export interface GetApigatewayBasePathMappingOutputArgs {
    id: pulumi.Input<string>;
}
