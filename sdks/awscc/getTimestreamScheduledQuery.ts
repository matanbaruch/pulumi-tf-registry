// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTimestreamScheduledQuery(args: GetTimestreamScheduledQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetTimestreamScheduledQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getTimestreamScheduledQuery:getTimestreamScheduledQuery", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTimestreamScheduledQuery.
 */
export interface GetTimestreamScheduledQueryArgs {
    id: string;
}

/**
 * A collection of values returned by getTimestreamScheduledQuery.
 */
export interface GetTimestreamScheduledQueryResult {
    readonly arn: string;
    readonly clientToken: string;
    readonly errorReportConfiguration: outputs.GetTimestreamScheduledQueryErrorReportConfiguration;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly notificationConfiguration: outputs.GetTimestreamScheduledQueryNotificationConfiguration;
    readonly queryString: string;
    readonly scheduleConfiguration: outputs.GetTimestreamScheduledQueryScheduleConfiguration;
    readonly scheduledQueryExecutionRoleArn: string;
    readonly scheduledQueryName: string;
    readonly sqErrorReportConfiguration: string;
    readonly sqKmsKeyId: string;
    readonly sqName: string;
    readonly sqNotificationConfiguration: string;
    readonly sqQueryString: string;
    readonly sqScheduleConfiguration: string;
    readonly sqScheduledQueryExecutionRoleArn: string;
    readonly sqTargetConfiguration: string;
    readonly tags: outputs.GetTimestreamScheduledQueryTag[];
    readonly targetConfiguration: outputs.GetTimestreamScheduledQueryTargetConfiguration;
}
export function getTimestreamScheduledQueryOutput(args: GetTimestreamScheduledQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTimestreamScheduledQueryResult> {
    return pulumi.output(args).apply((a: any) => getTimestreamScheduledQuery(a, opts))
}

/**
 * A collection of arguments for invoking getTimestreamScheduledQuery.
 */
export interface GetTimestreamScheduledQueryOutputArgs {
    id: pulumi.Input<string>;
}
