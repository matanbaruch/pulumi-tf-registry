// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Mediapackagev2OriginEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing Mediapackagev2OriginEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Mediapackagev2OriginEndpointState, opts?: pulumi.CustomResourceOptions): Mediapackagev2OriginEndpoint {
        return new Mediapackagev2OriginEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/mediapackagev2OriginEndpoint:Mediapackagev2OriginEndpoint';

    /**
     * Returns true if the given object is an instance of Mediapackagev2OriginEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Mediapackagev2OriginEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Mediapackagev2OriginEndpoint.__pulumiType;
    }

    /**
     * <p>The Amazon Resource Name (ARN) associated with the resource.</p>
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly channelGroupName!: pulumi.Output<string>;
    public readonly channelName!: pulumi.Output<string>;
    public readonly containerType!: pulumi.Output<string>;
    /**
     * <p>The date and time the origin endpoint was created.</p>
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public /*out*/ readonly dashManifestUrls!: pulumi.Output<string[]>;
    /**
     * <p>A DASH manifest configuration.</p>
     */
    public readonly dashManifests!: pulumi.Output<outputs.Mediapackagev2OriginEndpointDashManifest[]>;
    /**
     * <p>Enter any descriptive text that helps you to identify the origin endpoint.</p>
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * <p>The failover settings for the endpoint.</p>
     */
    public readonly forceEndpointErrorConfiguration!: pulumi.Output<outputs.Mediapackagev2OriginEndpointForceEndpointErrorConfiguration>;
    public /*out*/ readonly hlsManifestUrls!: pulumi.Output<string[]>;
    /**
     * <p>An HTTP live streaming (HLS) manifest configuration.</p>
     */
    public readonly hlsManifests!: pulumi.Output<outputs.Mediapackagev2OriginEndpointHlsManifest[]>;
    public /*out*/ readonly lowLatencyHlsManifestUrls!: pulumi.Output<string[]>;
    /**
     * <p>A low-latency HLS manifest configuration.</p>
     */
    public readonly lowLatencyHlsManifests!: pulumi.Output<outputs.Mediapackagev2OriginEndpointLowLatencyHlsManifest[]>;
    /**
     * <p>The date and time the origin endpoint was modified.</p>
     */
    public /*out*/ readonly modifiedAt!: pulumi.Output<string>;
    public readonly originEndpointName!: pulumi.Output<string>;
    /**
     * <p>The segment configuration, including the segment name, duration, and other configuration values.</p>
     */
    public readonly segment!: pulumi.Output<outputs.Mediapackagev2OriginEndpointSegment>;
    /**
     * <p>The size of the window (in seconds) to create a window of the live stream that's available for on-demand viewing.
     * Viewers can start-over or catch-up on content that falls within the window. The maximum startover window is 1,209,600
     * seconds (14 days).</p>
     */
    public readonly startoverWindowSeconds!: pulumi.Output<number>;
    public readonly tags!: pulumi.Output<outputs.Mediapackagev2OriginEndpointTag[]>;

    /**
     * Create a Mediapackagev2OriginEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Mediapackagev2OriginEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Mediapackagev2OriginEndpointArgs | Mediapackagev2OriginEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Mediapackagev2OriginEndpointState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["channelGroupName"] = state ? state.channelGroupName : undefined;
            resourceInputs["channelName"] = state ? state.channelName : undefined;
            resourceInputs["containerType"] = state ? state.containerType : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dashManifestUrls"] = state ? state.dashManifestUrls : undefined;
            resourceInputs["dashManifests"] = state ? state.dashManifests : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["forceEndpointErrorConfiguration"] = state ? state.forceEndpointErrorConfiguration : undefined;
            resourceInputs["hlsManifestUrls"] = state ? state.hlsManifestUrls : undefined;
            resourceInputs["hlsManifests"] = state ? state.hlsManifests : undefined;
            resourceInputs["lowLatencyHlsManifestUrls"] = state ? state.lowLatencyHlsManifestUrls : undefined;
            resourceInputs["lowLatencyHlsManifests"] = state ? state.lowLatencyHlsManifests : undefined;
            resourceInputs["modifiedAt"] = state ? state.modifiedAt : undefined;
            resourceInputs["originEndpointName"] = state ? state.originEndpointName : undefined;
            resourceInputs["segment"] = state ? state.segment : undefined;
            resourceInputs["startoverWindowSeconds"] = state ? state.startoverWindowSeconds : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Mediapackagev2OriginEndpointArgs | undefined;
            if ((!args || args.channelGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelGroupName'");
            }
            if ((!args || args.channelName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelName'");
            }
            if ((!args || args.originEndpointName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originEndpointName'");
            }
            resourceInputs["channelGroupName"] = args ? args.channelGroupName : undefined;
            resourceInputs["channelName"] = args ? args.channelName : undefined;
            resourceInputs["containerType"] = args ? args.containerType : undefined;
            resourceInputs["dashManifests"] = args ? args.dashManifests : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["forceEndpointErrorConfiguration"] = args ? args.forceEndpointErrorConfiguration : undefined;
            resourceInputs["hlsManifests"] = args ? args.hlsManifests : undefined;
            resourceInputs["lowLatencyHlsManifests"] = args ? args.lowLatencyHlsManifests : undefined;
            resourceInputs["originEndpointName"] = args ? args.originEndpointName : undefined;
            resourceInputs["segment"] = args ? args.segment : undefined;
            resourceInputs["startoverWindowSeconds"] = args ? args.startoverWindowSeconds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dashManifestUrls"] = undefined /*out*/;
            resourceInputs["hlsManifestUrls"] = undefined /*out*/;
            resourceInputs["lowLatencyHlsManifestUrls"] = undefined /*out*/;
            resourceInputs["modifiedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Mediapackagev2OriginEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Mediapackagev2OriginEndpoint resources.
 */
export interface Mediapackagev2OriginEndpointState {
    /**
     * <p>The Amazon Resource Name (ARN) associated with the resource.</p>
     */
    arn?: pulumi.Input<string>;
    channelGroupName?: pulumi.Input<string>;
    channelName?: pulumi.Input<string>;
    containerType?: pulumi.Input<string>;
    /**
     * <p>The date and time the origin endpoint was created.</p>
     */
    createdAt?: pulumi.Input<string>;
    dashManifestUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * <p>A DASH manifest configuration.</p>
     */
    dashManifests?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointDashManifest>[]>;
    /**
     * <p>Enter any descriptive text that helps you to identify the origin endpoint.</p>
     */
    description?: pulumi.Input<string>;
    /**
     * <p>The failover settings for the endpoint.</p>
     */
    forceEndpointErrorConfiguration?: pulumi.Input<inputs.Mediapackagev2OriginEndpointForceEndpointErrorConfiguration>;
    hlsManifestUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * <p>An HTTP live streaming (HLS) manifest configuration.</p>
     */
    hlsManifests?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointHlsManifest>[]>;
    lowLatencyHlsManifestUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * <p>A low-latency HLS manifest configuration.</p>
     */
    lowLatencyHlsManifests?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointLowLatencyHlsManifest>[]>;
    /**
     * <p>The date and time the origin endpoint was modified.</p>
     */
    modifiedAt?: pulumi.Input<string>;
    originEndpointName?: pulumi.Input<string>;
    /**
     * <p>The segment configuration, including the segment name, duration, and other configuration values.</p>
     */
    segment?: pulumi.Input<inputs.Mediapackagev2OriginEndpointSegment>;
    /**
     * <p>The size of the window (in seconds) to create a window of the live stream that's available for on-demand viewing.
     * Viewers can start-over or catch-up on content that falls within the window. The maximum startover window is 1,209,600
     * seconds (14 days).</p>
     */
    startoverWindowSeconds?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointTag>[]>;
}

/**
 * The set of arguments for constructing a Mediapackagev2OriginEndpoint resource.
 */
export interface Mediapackagev2OriginEndpointArgs {
    channelGroupName: pulumi.Input<string>;
    channelName: pulumi.Input<string>;
    containerType?: pulumi.Input<string>;
    /**
     * <p>A DASH manifest configuration.</p>
     */
    dashManifests?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointDashManifest>[]>;
    /**
     * <p>Enter any descriptive text that helps you to identify the origin endpoint.</p>
     */
    description?: pulumi.Input<string>;
    /**
     * <p>The failover settings for the endpoint.</p>
     */
    forceEndpointErrorConfiguration?: pulumi.Input<inputs.Mediapackagev2OriginEndpointForceEndpointErrorConfiguration>;
    /**
     * <p>An HTTP live streaming (HLS) manifest configuration.</p>
     */
    hlsManifests?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointHlsManifest>[]>;
    /**
     * <p>A low-latency HLS manifest configuration.</p>
     */
    lowLatencyHlsManifests?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointLowLatencyHlsManifest>[]>;
    originEndpointName: pulumi.Input<string>;
    /**
     * <p>The segment configuration, including the segment name, duration, and other configuration values.</p>
     */
    segment?: pulumi.Input<inputs.Mediapackagev2OriginEndpointSegment>;
    /**
     * <p>The size of the window (in seconds) to create a window of the live stream that's available for on-demand viewing.
     * Viewers can start-over or catch-up on content that falls within the window. The maximum startover window is 1,209,600
     * seconds (14 days).</p>
     */
    startoverWindowSeconds?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.Mediapackagev2OriginEndpointTag>[]>;
}
