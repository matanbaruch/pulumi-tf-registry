// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getComprehendFlywheel(args: GetComprehendFlywheelArgs, opts?: pulumi.InvokeOptions): Promise<GetComprehendFlywheelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getComprehendFlywheel:getComprehendFlywheel", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComprehendFlywheel.
 */
export interface GetComprehendFlywheelArgs {
    id: string;
}

/**
 * A collection of values returned by getComprehendFlywheel.
 */
export interface GetComprehendFlywheelResult {
    readonly activeModelArn: string;
    readonly arn: string;
    readonly dataAccessRoleArn: string;
    readonly dataLakeS3Uri: string;
    readonly dataSecurityConfig: outputs.GetComprehendFlywheelDataSecurityConfig;
    readonly flywheelName: string;
    readonly id: string;
    readonly modelType: string;
    readonly tags: outputs.GetComprehendFlywheelTag[];
    readonly taskConfig: outputs.GetComprehendFlywheelTaskConfig;
}
export function getComprehendFlywheelOutput(args: GetComprehendFlywheelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComprehendFlywheelResult> {
    return pulumi.output(args).apply((a: any) => getComprehendFlywheel(a, opts))
}

/**
 * A collection of arguments for invoking getComprehendFlywheel.
 */
export interface GetComprehendFlywheelOutputArgs {
    id: pulumi.Input<string>;
}
