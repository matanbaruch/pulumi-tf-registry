// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConnectTaskTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ConnectTaskTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectTaskTemplateState, opts?: pulumi.CustomResourceOptions): ConnectTaskTemplate {
        return new ConnectTaskTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/connectTaskTemplate:ConnectTaskTemplate';

    /**
     * Returns true if the given object is an instance of ConnectTaskTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectTaskTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectTaskTemplate.__pulumiType;
    }

    /**
     * The identifier (arn) of the task template.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * the client token string in uuid format
     */
    public readonly clientToken!: pulumi.Output<string>;
    /**
     * The constraints for the task template
     */
    public readonly constraints!: pulumi.Output<outputs.ConnectTaskTemplateConstraints>;
    /**
     * The identifier of the contact flow.
     */
    public readonly contactFlowArn!: pulumi.Output<string>;
    public readonly defaults!: pulumi.Output<outputs.ConnectTaskTemplateDefault[]>;
    /**
     * The description of the task template.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The list of task template's fields
     */
    public readonly fields!: pulumi.Output<outputs.ConnectTaskTemplateField[]>;
    /**
     * The identifier (arn) of the instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * The name of the task template.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of the task template
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * One or more tags.
     */
    public readonly tags!: pulumi.Output<outputs.ConnectTaskTemplateTag[]>;

    /**
     * Create a ConnectTaskTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectTaskTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectTaskTemplateArgs | ConnectTaskTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectTaskTemplateState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["clientToken"] = state ? state.clientToken : undefined;
            resourceInputs["constraints"] = state ? state.constraints : undefined;
            resourceInputs["contactFlowArn"] = state ? state.contactFlowArn : undefined;
            resourceInputs["defaults"] = state ? state.defaults : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fields"] = state ? state.fields : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ConnectTaskTemplateArgs | undefined;
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["constraints"] = args ? args.constraints : undefined;
            resourceInputs["contactFlowArn"] = args ? args.contactFlowArn : undefined;
            resourceInputs["defaults"] = args ? args.defaults : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fields"] = args ? args.fields : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectTaskTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConnectTaskTemplate resources.
 */
export interface ConnectTaskTemplateState {
    /**
     * The identifier (arn) of the task template.
     */
    arn?: pulumi.Input<string>;
    /**
     * the client token string in uuid format
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The constraints for the task template
     */
    constraints?: pulumi.Input<inputs.ConnectTaskTemplateConstraints>;
    /**
     * The identifier of the contact flow.
     */
    contactFlowArn?: pulumi.Input<string>;
    defaults?: pulumi.Input<pulumi.Input<inputs.ConnectTaskTemplateDefault>[]>;
    /**
     * The description of the task template.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of task template's fields
     */
    fields?: pulumi.Input<pulumi.Input<inputs.ConnectTaskTemplateField>[]>;
    /**
     * The identifier (arn) of the instance.
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * The name of the task template.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the task template
     */
    status?: pulumi.Input<string>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectTaskTemplateTag>[]>;
}

/**
 * The set of arguments for constructing a ConnectTaskTemplate resource.
 */
export interface ConnectTaskTemplateArgs {
    /**
     * the client token string in uuid format
     */
    clientToken?: pulumi.Input<string>;
    /**
     * The constraints for the task template
     */
    constraints?: pulumi.Input<inputs.ConnectTaskTemplateConstraints>;
    /**
     * The identifier of the contact flow.
     */
    contactFlowArn?: pulumi.Input<string>;
    defaults?: pulumi.Input<pulumi.Input<inputs.ConnectTaskTemplateDefault>[]>;
    /**
     * The description of the task template.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of task template's fields
     */
    fields?: pulumi.Input<pulumi.Input<inputs.ConnectTaskTemplateField>[]>;
    /**
     * The identifier (arn) of the instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The name of the task template.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the task template
     */
    status?: pulumi.Input<string>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectTaskTemplateTag>[]>;
}
