// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDynamodbTable(args: GetDynamodbTableArgs, opts?: pulumi.InvokeOptions): Promise<GetDynamodbTableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDynamodbTable:getDynamodbTable", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDynamodbTable.
 */
export interface GetDynamodbTableArgs {
    id: string;
}

/**
 * A collection of values returned by getDynamodbTable.
 */
export interface GetDynamodbTableResult {
    readonly arn: string;
    readonly attributeDefinitions: outputs.GetDynamodbTableAttributeDefinition[];
    readonly billingMode: string;
    readonly contributorInsightsSpecification: outputs.GetDynamodbTableContributorInsightsSpecification;
    readonly deletionProtectionEnabled: boolean;
    readonly globalSecondaryIndexes: outputs.GetDynamodbTableGlobalSecondaryIndex[];
    readonly id: string;
    readonly importSourceSpecification: outputs.GetDynamodbTableImportSourceSpecification;
    readonly keySchema: string;
    readonly kinesisStreamSpecification: outputs.GetDynamodbTableKinesisStreamSpecification;
    readonly localSecondaryIndexes: outputs.GetDynamodbTableLocalSecondaryIndex[];
    readonly onDemandThroughput: outputs.GetDynamodbTableOnDemandThroughput;
    readonly pointInTimeRecoverySpecification: outputs.GetDynamodbTablePointInTimeRecoverySpecification;
    readonly provisionedThroughput: outputs.GetDynamodbTableProvisionedThroughput;
    readonly resourcePolicy: outputs.GetDynamodbTableResourcePolicy;
    readonly sseSpecification: outputs.GetDynamodbTableSseSpecification;
    readonly streamArn: string;
    readonly streamSpecification: outputs.GetDynamodbTableStreamSpecification;
    readonly tableClass: string;
    readonly tableName: string;
    readonly tags: outputs.GetDynamodbTableTag[];
    readonly timeToLiveSpecification: outputs.GetDynamodbTableTimeToLiveSpecification;
}
export function getDynamodbTableOutput(args: GetDynamodbTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDynamodbTableResult> {
    return pulumi.output(args).apply((a: any) => getDynamodbTable(a, opts))
}

/**
 * A collection of arguments for invoking getDynamodbTable.
 */
export interface GetDynamodbTableOutputArgs {
    id: pulumi.Input<string>;
}
