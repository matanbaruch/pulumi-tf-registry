// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InspectorAssessmentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing InspectorAssessmentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InspectorAssessmentTemplateState, opts?: pulumi.CustomResourceOptions): InspectorAssessmentTemplate {
        return new InspectorAssessmentTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/inspectorAssessmentTemplate:InspectorAssessmentTemplate';

    /**
     * Returns true if the given object is an instance of InspectorAssessmentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InspectorAssessmentTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InspectorAssessmentTemplate.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly assessmentTargetArn!: pulumi.Output<string>;
    public readonly assessmentTemplateName!: pulumi.Output<string>;
    public readonly durationInSeconds!: pulumi.Output<number>;
    public readonly rulesPackageArns!: pulumi.Output<string[]>;
    public readonly userAttributesForFindings!: pulumi.Output<outputs.InspectorAssessmentTemplateUserAttributesForFinding[]>;

    /**
     * Create a InspectorAssessmentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InspectorAssessmentTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InspectorAssessmentTemplateArgs | InspectorAssessmentTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InspectorAssessmentTemplateState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["assessmentTargetArn"] = state ? state.assessmentTargetArn : undefined;
            resourceInputs["assessmentTemplateName"] = state ? state.assessmentTemplateName : undefined;
            resourceInputs["durationInSeconds"] = state ? state.durationInSeconds : undefined;
            resourceInputs["rulesPackageArns"] = state ? state.rulesPackageArns : undefined;
            resourceInputs["userAttributesForFindings"] = state ? state.userAttributesForFindings : undefined;
        } else {
            const args = argsOrState as InspectorAssessmentTemplateArgs | undefined;
            if ((!args || args.assessmentTargetArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assessmentTargetArn'");
            }
            if ((!args || args.durationInSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'durationInSeconds'");
            }
            if ((!args || args.rulesPackageArns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rulesPackageArns'");
            }
            resourceInputs["assessmentTargetArn"] = args ? args.assessmentTargetArn : undefined;
            resourceInputs["assessmentTemplateName"] = args ? args.assessmentTemplateName : undefined;
            resourceInputs["durationInSeconds"] = args ? args.durationInSeconds : undefined;
            resourceInputs["rulesPackageArns"] = args ? args.rulesPackageArns : undefined;
            resourceInputs["userAttributesForFindings"] = args ? args.userAttributesForFindings : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InspectorAssessmentTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InspectorAssessmentTemplate resources.
 */
export interface InspectorAssessmentTemplateState {
    arn?: pulumi.Input<string>;
    assessmentTargetArn?: pulumi.Input<string>;
    assessmentTemplateName?: pulumi.Input<string>;
    durationInSeconds?: pulumi.Input<number>;
    rulesPackageArns?: pulumi.Input<pulumi.Input<string>[]>;
    userAttributesForFindings?: pulumi.Input<pulumi.Input<inputs.InspectorAssessmentTemplateUserAttributesForFinding>[]>;
}

/**
 * The set of arguments for constructing a InspectorAssessmentTemplate resource.
 */
export interface InspectorAssessmentTemplateArgs {
    assessmentTargetArn: pulumi.Input<string>;
    assessmentTemplateName?: pulumi.Input<string>;
    durationInSeconds: pulumi.Input<number>;
    rulesPackageArns: pulumi.Input<pulumi.Input<string>[]>;
    userAttributesForFindings?: pulumi.Input<pulumi.Input<inputs.InspectorAssessmentTemplateUserAttributesForFinding>[]>;
}
