// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlobalacceleratorAccelerator(args: GetGlobalacceleratorAcceleratorArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalacceleratorAcceleratorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlobalacceleratorAccelerator:getGlobalacceleratorAccelerator", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlobalacceleratorAccelerator.
 */
export interface GetGlobalacceleratorAcceleratorArgs {
    id: string;
}

/**
 * A collection of values returned by getGlobalacceleratorAccelerator.
 */
export interface GetGlobalacceleratorAcceleratorResult {
    readonly acceleratorArn: string;
    readonly dnsName: string;
    readonly dualStackDnsName: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly ipAddressType: string;
    readonly ipAddresses: string[];
    readonly ipv4Addresses: string[];
    readonly ipv6Addresses: string[];
    readonly name: string;
    readonly tags: outputs.GetGlobalacceleratorAcceleratorTag[];
}
export function getGlobalacceleratorAcceleratorOutput(args: GetGlobalacceleratorAcceleratorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalacceleratorAcceleratorResult> {
    return pulumi.output(args).apply((a: any) => getGlobalacceleratorAccelerator(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalacceleratorAccelerator.
 */
export interface GetGlobalacceleratorAcceleratorOutputArgs {
    id: pulumi.Input<string>;
}
