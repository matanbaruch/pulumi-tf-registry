// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GroundstationDataflowEndpointGroup extends pulumi.CustomResource {
    /**
     * Get an existing GroundstationDataflowEndpointGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroundstationDataflowEndpointGroupState, opts?: pulumi.CustomResourceOptions): GroundstationDataflowEndpointGroup {
        return new GroundstationDataflowEndpointGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/groundstationDataflowEndpointGroup:GroundstationDataflowEndpointGroup';

    /**
     * Returns true if the given object is an instance of GroundstationDataflowEndpointGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroundstationDataflowEndpointGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroundstationDataflowEndpointGroup.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a POSTPASS
     * state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group
     * enters and exits the POSTPASS state.
     */
    public readonly contactPostPassDurationSeconds!: pulumi.Output<number>;
    /**
     * Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a PREPASS
     * state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group
     * enters and exits the PREPASS state.
     */
    public readonly contactPrePassDurationSeconds!: pulumi.Output<number>;
    public /*out*/ readonly dataflowEndpointGroupId!: pulumi.Output<string>;
    public readonly endpointDetails!: pulumi.Output<outputs.GroundstationDataflowEndpointGroupEndpointDetail[]>;
    public readonly tags!: pulumi.Output<outputs.GroundstationDataflowEndpointGroupTag[]>;

    /**
     * Create a GroundstationDataflowEndpointGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroundstationDataflowEndpointGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroundstationDataflowEndpointGroupArgs | GroundstationDataflowEndpointGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroundstationDataflowEndpointGroupState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["contactPostPassDurationSeconds"] = state ? state.contactPostPassDurationSeconds : undefined;
            resourceInputs["contactPrePassDurationSeconds"] = state ? state.contactPrePassDurationSeconds : undefined;
            resourceInputs["dataflowEndpointGroupId"] = state ? state.dataflowEndpointGroupId : undefined;
            resourceInputs["endpointDetails"] = state ? state.endpointDetails : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as GroundstationDataflowEndpointGroupArgs | undefined;
            if ((!args || args.endpointDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointDetails'");
            }
            resourceInputs["contactPostPassDurationSeconds"] = args ? args.contactPostPassDurationSeconds : undefined;
            resourceInputs["contactPrePassDurationSeconds"] = args ? args.contactPrePassDurationSeconds : undefined;
            resourceInputs["endpointDetails"] = args ? args.endpointDetails : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["dataflowEndpointGroupId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroundstationDataflowEndpointGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GroundstationDataflowEndpointGroup resources.
 */
export interface GroundstationDataflowEndpointGroupState {
    arn?: pulumi.Input<string>;
    /**
     * Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a POSTPASS
     * state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group
     * enters and exits the POSTPASS state.
     */
    contactPostPassDurationSeconds?: pulumi.Input<number>;
    /**
     * Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a PREPASS
     * state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group
     * enters and exits the PREPASS state.
     */
    contactPrePassDurationSeconds?: pulumi.Input<number>;
    dataflowEndpointGroupId?: pulumi.Input<string>;
    endpointDetails?: pulumi.Input<pulumi.Input<inputs.GroundstationDataflowEndpointGroupEndpointDetail>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GroundstationDataflowEndpointGroupTag>[]>;
}

/**
 * The set of arguments for constructing a GroundstationDataflowEndpointGroup resource.
 */
export interface GroundstationDataflowEndpointGroupArgs {
    /**
     * Amount of time, in seconds, after a contact ends that the Ground Station Dataflow Endpoint Group will be in a POSTPASS
     * state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group
     * enters and exits the POSTPASS state.
     */
    contactPostPassDurationSeconds?: pulumi.Input<number>;
    /**
     * Amount of time, in seconds, before a contact starts that the Ground Station Dataflow Endpoint Group will be in a PREPASS
     * state. A Ground Station Dataflow Endpoint Group State Change event will be emitted when the Dataflow Endpoint Group
     * enters and exits the PREPASS state.
     */
    contactPrePassDurationSeconds?: pulumi.Input<number>;
    endpointDetails: pulumi.Input<pulumi.Input<inputs.GroundstationDataflowEndpointGroupEndpointDetail>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GroundstationDataflowEndpointGroupTag>[]>;
}
