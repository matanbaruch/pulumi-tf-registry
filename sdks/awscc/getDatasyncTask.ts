// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatasyncTask(args: GetDatasyncTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasyncTaskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatasyncTask:getDatasyncTask", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatasyncTask.
 */
export interface GetDatasyncTaskArgs {
    id: string;
}

/**
 * A collection of values returned by getDatasyncTask.
 */
export interface GetDatasyncTaskResult {
    readonly cloudwatchLogGroupArn: string;
    readonly destinationLocationArn: string;
    readonly destinationNetworkInterfaceArns: string[];
    readonly excludes: outputs.GetDatasyncTaskExclude[];
    readonly id: string;
    readonly includes: outputs.GetDatasyncTaskInclude[];
    readonly manifestConfig: outputs.GetDatasyncTaskManifestConfig;
    readonly name: string;
    readonly options: outputs.GetDatasyncTaskOptions;
    readonly schedule: outputs.GetDatasyncTaskSchedule;
    readonly sourceLocationArn: string;
    readonly sourceNetworkInterfaceArns: string[];
    readonly status: string;
    readonly tags: outputs.GetDatasyncTaskTag[];
    readonly taskArn: string;
    readonly taskReportConfig: outputs.GetDatasyncTaskTaskReportConfig;
}
export function getDatasyncTaskOutput(args: GetDatasyncTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasyncTaskResult> {
    return pulumi.output(args).apply((a: any) => getDatasyncTask(a, opts))
}

/**
 * A collection of arguments for invoking getDatasyncTask.
 */
export interface GetDatasyncTaskOutputArgs {
    id: pulumi.Input<string>;
}
