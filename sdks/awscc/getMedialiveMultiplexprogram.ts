// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMedialiveMultiplexprogram(args: GetMedialiveMultiplexprogramArgs, opts?: pulumi.InvokeOptions): Promise<GetMedialiveMultiplexprogramResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMedialiveMultiplexprogram:getMedialiveMultiplexprogram", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMedialiveMultiplexprogram.
 */
export interface GetMedialiveMultiplexprogramArgs {
    id: string;
}

/**
 * A collection of values returned by getMedialiveMultiplexprogram.
 */
export interface GetMedialiveMultiplexprogramResult {
    readonly channelId: string;
    readonly id: string;
    readonly multiplexId: string;
    readonly multiplexProgramSettings: outputs.GetMedialiveMultiplexprogramMultiplexProgramSettings;
    readonly packetIdentifiersMap: outputs.GetMedialiveMultiplexprogramPacketIdentifiersMap;
    readonly pipelineDetails: outputs.GetMedialiveMultiplexprogramPipelineDetail[];
    readonly preferredChannelPipeline: string;
    readonly programName: string;
}
export function getMedialiveMultiplexprogramOutput(args: GetMedialiveMultiplexprogramOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMedialiveMultiplexprogramResult> {
    return pulumi.output(args).apply((a: any) => getMedialiveMultiplexprogram(a, opts))
}

/**
 * A collection of arguments for invoking getMedialiveMultiplexprogram.
 */
export interface GetMedialiveMultiplexprogramOutputArgs {
    id: pulumi.Input<string>;
}
