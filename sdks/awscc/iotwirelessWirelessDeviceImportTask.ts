// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotwirelessWirelessDeviceImportTask extends pulumi.CustomResource {
    /**
     * Get an existing IotwirelessWirelessDeviceImportTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotwirelessWirelessDeviceImportTaskState, opts?: pulumi.CustomResourceOptions): IotwirelessWirelessDeviceImportTask {
        return new IotwirelessWirelessDeviceImportTask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotwirelessWirelessDeviceImportTask:IotwirelessWirelessDeviceImportTask';

    /**
     * Returns true if the given object is an instance of IotwirelessWirelessDeviceImportTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotwirelessWirelessDeviceImportTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotwirelessWirelessDeviceImportTask.__pulumiType;
    }

    /**
     * Arn for Wireless Device Import Task, Returned upon successful start.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * CreationDate for import task
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * Destination Name for import task
     */
    public readonly destinationName!: pulumi.Output<string>;
    /**
     * Failed Imported Devices Count
     */
    public /*out*/ readonly failedImportedDevicesCount!: pulumi.Output<number>;
    /**
     * Initialized Imported Devices Count
     */
    public /*out*/ readonly initializedImportedDevicesCount!: pulumi.Output<number>;
    /**
     * Onboarded Imported Devices Count
     */
    public /*out*/ readonly onboardedImportedDevicesCount!: pulumi.Output<number>;
    /**
     * Pending Imported Devices Count
     */
    public /*out*/ readonly pendingImportedDevicesCount!: pulumi.Output<number>;
    /**
     * sidewalk contain file for created device and role
     */
    public readonly sidewalk!: pulumi.Output<outputs.IotwirelessWirelessDeviceImportTaskSidewalk>;
    /**
     * Status for import task
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * StatusReason for import task
     */
    public /*out*/ readonly statusReason!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.IotwirelessWirelessDeviceImportTaskTag[]>;
    /**
     * Id for Wireless Device Import Task, Returned upon successful start.
     */
    public /*out*/ readonly wirelessDeviceImportTaskId!: pulumi.Output<string>;

    /**
     * Create a IotwirelessWirelessDeviceImportTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotwirelessWirelessDeviceImportTaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotwirelessWirelessDeviceImportTaskArgs | IotwirelessWirelessDeviceImportTaskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotwirelessWirelessDeviceImportTaskState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["destinationName"] = state ? state.destinationName : undefined;
            resourceInputs["failedImportedDevicesCount"] = state ? state.failedImportedDevicesCount : undefined;
            resourceInputs["initializedImportedDevicesCount"] = state ? state.initializedImportedDevicesCount : undefined;
            resourceInputs["onboardedImportedDevicesCount"] = state ? state.onboardedImportedDevicesCount : undefined;
            resourceInputs["pendingImportedDevicesCount"] = state ? state.pendingImportedDevicesCount : undefined;
            resourceInputs["sidewalk"] = state ? state.sidewalk : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusReason"] = state ? state.statusReason : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["wirelessDeviceImportTaskId"] = state ? state.wirelessDeviceImportTaskId : undefined;
        } else {
            const args = argsOrState as IotwirelessWirelessDeviceImportTaskArgs | undefined;
            if ((!args || args.destinationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationName'");
            }
            if ((!args || args.sidewalk === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sidewalk'");
            }
            resourceInputs["destinationName"] = args ? args.destinationName : undefined;
            resourceInputs["sidewalk"] = args ? args.sidewalk : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["failedImportedDevicesCount"] = undefined /*out*/;
            resourceInputs["initializedImportedDevicesCount"] = undefined /*out*/;
            resourceInputs["onboardedImportedDevicesCount"] = undefined /*out*/;
            resourceInputs["pendingImportedDevicesCount"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusReason"] = undefined /*out*/;
            resourceInputs["wirelessDeviceImportTaskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotwirelessWirelessDeviceImportTask.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotwirelessWirelessDeviceImportTask resources.
 */
export interface IotwirelessWirelessDeviceImportTaskState {
    /**
     * Arn for Wireless Device Import Task, Returned upon successful start.
     */
    arn?: pulumi.Input<string>;
    /**
     * CreationDate for import task
     */
    creationDate?: pulumi.Input<string>;
    /**
     * Destination Name for import task
     */
    destinationName?: pulumi.Input<string>;
    /**
     * Failed Imported Devices Count
     */
    failedImportedDevicesCount?: pulumi.Input<number>;
    /**
     * Initialized Imported Devices Count
     */
    initializedImportedDevicesCount?: pulumi.Input<number>;
    /**
     * Onboarded Imported Devices Count
     */
    onboardedImportedDevicesCount?: pulumi.Input<number>;
    /**
     * Pending Imported Devices Count
     */
    pendingImportedDevicesCount?: pulumi.Input<number>;
    /**
     * sidewalk contain file for created device and role
     */
    sidewalk?: pulumi.Input<inputs.IotwirelessWirelessDeviceImportTaskSidewalk>;
    /**
     * Status for import task
     */
    status?: pulumi.Input<string>;
    /**
     * StatusReason for import task
     */
    statusReason?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessWirelessDeviceImportTaskTag>[]>;
    /**
     * Id for Wireless Device Import Task, Returned upon successful start.
     */
    wirelessDeviceImportTaskId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IotwirelessWirelessDeviceImportTask resource.
 */
export interface IotwirelessWirelessDeviceImportTaskArgs {
    /**
     * Destination Name for import task
     */
    destinationName: pulumi.Input<string>;
    /**
     * sidewalk contain file for created device and role
     */
    sidewalk: pulumi.Input<inputs.IotwirelessWirelessDeviceImportTaskSidewalk>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessWirelessDeviceImportTaskTag>[]>;
}
