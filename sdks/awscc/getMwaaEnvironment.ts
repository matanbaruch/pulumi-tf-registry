// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMwaaEnvironment(args: GetMwaaEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetMwaaEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMwaaEnvironment:getMwaaEnvironment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMwaaEnvironment.
 */
export interface GetMwaaEnvironmentArgs {
    id: string;
}

/**
 * A collection of values returned by getMwaaEnvironment.
 */
export interface GetMwaaEnvironmentResult {
    readonly airflowConfigurationOptions: string;
    readonly airflowVersion: string;
    readonly arn: string;
    readonly celeryExecutorQueue: string;
    readonly dagS3Path: string;
    readonly databaseVpcEndpointService: string;
    readonly endpointManagement: string;
    readonly environmentClass: string;
    readonly executionRoleArn: string;
    readonly id: string;
    readonly kmsKey: string;
    readonly loggingConfiguration: outputs.GetMwaaEnvironmentLoggingConfiguration;
    readonly maxWebservers: number;
    readonly maxWorkers: number;
    readonly minWebservers: number;
    readonly minWorkers: number;
    readonly name: string;
    readonly networkConfiguration: outputs.GetMwaaEnvironmentNetworkConfiguration;
    readonly pluginsS3ObjectVersion: string;
    readonly pluginsS3Path: string;
    readonly requirementsS3ObjectVersion: string;
    readonly requirementsS3Path: string;
    readonly schedulers: number;
    readonly sourceBucketArn: string;
    readonly startupScriptS3ObjectVersion: string;
    readonly startupScriptS3Path: string;
    readonly tags: string;
    readonly webserverAccessMode: string;
    readonly webserverUrl: string;
    readonly webserverVpcEndpointService: string;
    readonly weeklyMaintenanceWindowStart: string;
}
export function getMwaaEnvironmentOutput(args: GetMwaaEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMwaaEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getMwaaEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking getMwaaEnvironment.
 */
export interface GetMwaaEnvironmentOutputArgs {
    id: pulumi.Input<string>;
}
