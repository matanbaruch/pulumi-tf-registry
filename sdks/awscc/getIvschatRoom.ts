// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIvschatRoom(args: GetIvschatRoomArgs, opts?: pulumi.InvokeOptions): Promise<GetIvschatRoomResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIvschatRoom:getIvschatRoom", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIvschatRoom.
 */
export interface GetIvschatRoomArgs {
    id: string;
}

/**
 * A collection of values returned by getIvschatRoom.
 */
export interface GetIvschatRoomResult {
    readonly arn: string;
    readonly id: string;
    readonly loggingConfigurationIdentifiers: string[];
    readonly maximumMessageLength: number;
    readonly maximumMessageRatePerSecond: number;
    readonly messageReviewHandler: outputs.GetIvschatRoomMessageReviewHandler;
    readonly name: string;
    readonly roomId: string;
    readonly tags: outputs.GetIvschatRoomTag[];
}
export function getIvschatRoomOutput(args: GetIvschatRoomOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIvschatRoomResult> {
    return pulumi.output(args).apply((a: any) => getIvschatRoom(a, opts))
}

/**
 * A collection of arguments for invoking getIvschatRoom.
 */
export interface GetIvschatRoomOutputArgs {
    id: pulumi.Input<string>;
}
