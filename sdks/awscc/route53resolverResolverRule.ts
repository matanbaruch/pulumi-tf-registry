// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Route53resolverResolverRule extends pulumi.CustomResource {
    /**
     * Get an existing Route53resolverResolverRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53resolverResolverRuleState, opts?: pulumi.CustomResourceOptions): Route53resolverResolverRule {
        return new Route53resolverResolverRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/route53resolverResolverRule:Route53resolverResolverRule';

    /**
     * Returns true if the given object is an instance of Route53resolverResolverRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53resolverResolverRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53resolverResolverRule.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the resolver rule.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The name server domain for queries to be delegated to if a query matches the delegation record.
     */
    public readonly delegationRecord!: pulumi.Output<string>;
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The name for the Resolver rule
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    public readonly resolverEndpointId!: pulumi.Output<string>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    public /*out*/ readonly resolverRuleId!: pulumi.Output<string>;
    /**
     * When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. When you
     * have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for
     * a subdomain of that domain, specify SYSTEM.
     */
    public readonly ruleType!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Route53resolverResolverRuleTag[]>;
    /**
     * An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these
     * are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.
     */
    public readonly targetIps!: pulumi.Output<outputs.Route53resolverResolverRuleTargetIp[]>;

    /**
     * Create a Route53resolverResolverRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Route53resolverResolverRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53resolverResolverRuleArgs | Route53resolverResolverRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53resolverResolverRuleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["delegationRecord"] = state ? state.delegationRecord : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resolverEndpointId"] = state ? state.resolverEndpointId : undefined;
            resourceInputs["resolverRuleId"] = state ? state.resolverRuleId : undefined;
            resourceInputs["ruleType"] = state ? state.ruleType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetIps"] = state ? state.targetIps : undefined;
        } else {
            const args = argsOrState as Route53resolverResolverRuleArgs | undefined;
            if ((!args || args.ruleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleType'");
            }
            resourceInputs["delegationRecord"] = args ? args.delegationRecord : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolverEndpointId"] = args ? args.resolverEndpointId : undefined;
            resourceInputs["ruleType"] = args ? args.ruleType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetIps"] = args ? args.targetIps : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["resolverRuleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53resolverResolverRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53resolverResolverRule resources.
 */
export interface Route53resolverResolverRuleState {
    /**
     * The Amazon Resource Name (ARN) of the resolver rule.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name server domain for queries to be delegated to if a query matches the delegation record.
     */
    delegationRecord?: pulumi.Input<string>;
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps
     */
    domainName?: pulumi.Input<string>;
    /**
     * The name for the Resolver rule
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    resolverEndpointId?: pulumi.Input<string>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    resolverRuleId?: pulumi.Input<string>;
    /**
     * When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. When you
     * have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for
     * a subdomain of that domain, specify SYSTEM.
     */
    ruleType?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53resolverResolverRuleTag>[]>;
    /**
     * An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these
     * are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.
     */
    targetIps?: pulumi.Input<pulumi.Input<inputs.Route53resolverResolverRuleTargetIp>[]>;
}

/**
 * The set of arguments for constructing a Route53resolverResolverRule resource.
 */
export interface Route53resolverResolverRuleArgs {
    /**
     * The name server domain for queries to be delegated to if a query matches the delegation record.
     */
    delegationRecord?: pulumi.Input<string>;
    /**
     * DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps
     */
    domainName?: pulumi.Input<string>;
    /**
     * The name for the Resolver rule
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the endpoint that the rule is associated with.
     */
    resolverEndpointId?: pulumi.Input<string>;
    /**
     * When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. When you
     * have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for
     * a subdomain of that domain, specify SYSTEM.
     */
    ruleType: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Route53resolverResolverRuleTag>[]>;
    /**
     * An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these
     * are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.
     */
    targetIps?: pulumi.Input<pulumi.Input<inputs.Route53resolverResolverRuleTargetIp>[]>;
}
