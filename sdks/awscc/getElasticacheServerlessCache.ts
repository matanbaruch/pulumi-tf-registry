// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticacheServerlessCache(args: GetElasticacheServerlessCacheArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticacheServerlessCacheResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getElasticacheServerlessCache:getElasticacheServerlessCache", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticacheServerlessCache.
 */
export interface GetElasticacheServerlessCacheArgs {
    id: string;
}

/**
 * A collection of values returned by getElasticacheServerlessCache.
 */
export interface GetElasticacheServerlessCacheResult {
    readonly arn: string;
    readonly cacheUsageLimits: outputs.GetElasticacheServerlessCacheCacheUsageLimits;
    readonly createTime: string;
    readonly dailySnapshotTime: string;
    readonly description: string;
    readonly endpoint: outputs.GetElasticacheServerlessCacheEndpoint;
    readonly engine: string;
    readonly finalSnapshotName: string;
    readonly fullEngineVersion: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly majorEngineVersion: string;
    readonly readerEndpoint: outputs.GetElasticacheServerlessCacheReaderEndpoint;
    readonly securityGroupIds: string[];
    readonly serverlessCacheName: string;
    readonly snapshotArnsToRestores: string[];
    readonly snapshotRetentionLimit: number;
    readonly status: string;
    readonly subnetIds: string[];
    readonly tags: outputs.GetElasticacheServerlessCacheTag[];
    readonly userGroupId: string;
}
export function getElasticacheServerlessCacheOutput(args: GetElasticacheServerlessCacheOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticacheServerlessCacheResult> {
    return pulumi.output(args).apply((a: any) => getElasticacheServerlessCache(a, opts))
}

/**
 * A collection of arguments for invoking getElasticacheServerlessCache.
 */
export interface GetElasticacheServerlessCacheOutputArgs {
    id: pulumi.Input<string>;
}
