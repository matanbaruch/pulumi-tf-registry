// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotsitewisePortal extends pulumi.CustomResource {
    /**
     * Get an existing IotsitewisePortal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotsitewisePortalState, opts?: pulumi.CustomResourceOptions): IotsitewisePortal {
        return new IotsitewisePortal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotsitewisePortal:IotsitewisePortal';

    /**
     * Returns true if the given object is an instance of IotsitewisePortal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotsitewisePortal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotsitewisePortal.__pulumiType;
    }

    /**
     * Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm
     * to monitor an asset property and get notified when the asset property value is outside a specified range.
     */
    public readonly alarms!: pulumi.Output<outputs.IotsitewisePortalAlarms>;
    /**
     * The email address that sends alarm notifications.
     */
    public readonly notificationSenderEmail!: pulumi.Output<string>;
    /**
     * The ARN of the portal, which has the following format.
     */
    public /*out*/ readonly portalArn!: pulumi.Output<string>;
    /**
     * The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you
     * create a portal.
     */
    public readonly portalAuthMode!: pulumi.Output<string>;
    /**
     * The AWS SSO application generated client ID (used with AWS SSO APIs).
     */
    public /*out*/ readonly portalClientId!: pulumi.Output<string>;
    /**
     * The AWS administrator's contact email address.
     */
    public readonly portalContactEmail!: pulumi.Output<string>;
    /**
     * A description for the portal.
     */
    public readonly portalDescription!: pulumi.Output<string>;
    /**
     * The ID of the portal.
     */
    public /*out*/ readonly portalId!: pulumi.Output<string>;
    /**
     * A friendly name for the portal.
     */
    public readonly portalName!: pulumi.Output<string>;
    /**
     * The public root URL for the AWS IoT AWS IoT SiteWise Monitor application portal.
     */
    public /*out*/ readonly portalStartUrl!: pulumi.Output<string>;
    /**
     * The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the portal.
     */
    public readonly tags!: pulumi.Output<outputs.IotsitewisePortalTag[]>;

    /**
     * Create a IotsitewisePortal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotsitewisePortalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotsitewisePortalArgs | IotsitewisePortalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotsitewisePortalState | undefined;
            resourceInputs["alarms"] = state ? state.alarms : undefined;
            resourceInputs["notificationSenderEmail"] = state ? state.notificationSenderEmail : undefined;
            resourceInputs["portalArn"] = state ? state.portalArn : undefined;
            resourceInputs["portalAuthMode"] = state ? state.portalAuthMode : undefined;
            resourceInputs["portalClientId"] = state ? state.portalClientId : undefined;
            resourceInputs["portalContactEmail"] = state ? state.portalContactEmail : undefined;
            resourceInputs["portalDescription"] = state ? state.portalDescription : undefined;
            resourceInputs["portalId"] = state ? state.portalId : undefined;
            resourceInputs["portalName"] = state ? state.portalName : undefined;
            resourceInputs["portalStartUrl"] = state ? state.portalStartUrl : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IotsitewisePortalArgs | undefined;
            if ((!args || args.portalContactEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portalContactEmail'");
            }
            if ((!args || args.portalName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portalName'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["alarms"] = args ? args.alarms : undefined;
            resourceInputs["notificationSenderEmail"] = args ? args.notificationSenderEmail : undefined;
            resourceInputs["portalAuthMode"] = args ? args.portalAuthMode : undefined;
            resourceInputs["portalContactEmail"] = args ? args.portalContactEmail : undefined;
            resourceInputs["portalDescription"] = args ? args.portalDescription : undefined;
            resourceInputs["portalName"] = args ? args.portalName : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["portalArn"] = undefined /*out*/;
            resourceInputs["portalClientId"] = undefined /*out*/;
            resourceInputs["portalId"] = undefined /*out*/;
            resourceInputs["portalStartUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotsitewisePortal.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotsitewisePortal resources.
 */
export interface IotsitewisePortalState {
    /**
     * Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm
     * to monitor an asset property and get notified when the asset property value is outside a specified range.
     */
    alarms?: pulumi.Input<inputs.IotsitewisePortalAlarms>;
    /**
     * The email address that sends alarm notifications.
     */
    notificationSenderEmail?: pulumi.Input<string>;
    /**
     * The ARN of the portal, which has the following format.
     */
    portalArn?: pulumi.Input<string>;
    /**
     * The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you
     * create a portal.
     */
    portalAuthMode?: pulumi.Input<string>;
    /**
     * The AWS SSO application generated client ID (used with AWS SSO APIs).
     */
    portalClientId?: pulumi.Input<string>;
    /**
     * The AWS administrator's contact email address.
     */
    portalContactEmail?: pulumi.Input<string>;
    /**
     * A description for the portal.
     */
    portalDescription?: pulumi.Input<string>;
    /**
     * The ID of the portal.
     */
    portalId?: pulumi.Input<string>;
    /**
     * A friendly name for the portal.
     */
    portalName?: pulumi.Input<string>;
    /**
     * The public root URL for the AWS IoT AWS IoT SiteWise Monitor application portal.
     */
    portalStartUrl?: pulumi.Input<string>;
    /**
     * The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the portal.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotsitewisePortalTag>[]>;
}

/**
 * The set of arguments for constructing a IotsitewisePortal resource.
 */
export interface IotsitewisePortalArgs {
    /**
     * Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm
     * to monitor an asset property and get notified when the asset property value is outside a specified range.
     */
    alarms?: pulumi.Input<inputs.IotsitewisePortalAlarms>;
    /**
     * The email address that sends alarm notifications.
     */
    notificationSenderEmail?: pulumi.Input<string>;
    /**
     * The service to use to authenticate users to the portal. Choose from SSO or IAM. You can't change this value after you
     * create a portal.
     */
    portalAuthMode?: pulumi.Input<string>;
    /**
     * The AWS administrator's contact email address.
     */
    portalContactEmail: pulumi.Input<string>;
    /**
     * A description for the portal.
     */
    portalDescription?: pulumi.Input<string>;
    /**
     * A friendly name for the portal.
     */
    portalName: pulumi.Input<string>;
    /**
     * The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the portal.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotsitewisePortalTag>[]>;
}
