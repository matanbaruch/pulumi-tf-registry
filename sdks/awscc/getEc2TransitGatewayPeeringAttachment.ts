// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2TransitGatewayPeeringAttachment(args: GetEc2TransitGatewayPeeringAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2TransitGatewayPeeringAttachmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2TransitGatewayPeeringAttachment:getEc2TransitGatewayPeeringAttachment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2TransitGatewayPeeringAttachment.
 */
export interface GetEc2TransitGatewayPeeringAttachmentArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2TransitGatewayPeeringAttachment.
 */
export interface GetEc2TransitGatewayPeeringAttachmentResult {
    readonly creationTime: string;
    readonly id: string;
    readonly peerAccountId: string;
    readonly peerRegion: string;
    readonly peerTransitGatewayId: string;
    readonly state: string;
    readonly status: outputs.GetEc2TransitGatewayPeeringAttachmentStatus;
    readonly tags: outputs.GetEc2TransitGatewayPeeringAttachmentTag[];
    readonly transitGatewayAttachmentId: string;
    readonly transitGatewayId: string;
}
export function getEc2TransitGatewayPeeringAttachmentOutput(args: GetEc2TransitGatewayPeeringAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2TransitGatewayPeeringAttachmentResult> {
    return pulumi.output(args).apply((a: any) => getEc2TransitGatewayPeeringAttachment(a, opts))
}

/**
 * A collection of arguments for invoking getEc2TransitGatewayPeeringAttachment.
 */
export interface GetEc2TransitGatewayPeeringAttachmentOutputArgs {
    id: pulumi.Input<string>;
}
