// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApsWorkspace(args: GetApsWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetApsWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApsWorkspace:getApsWorkspace", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApsWorkspace.
 */
export interface GetApsWorkspaceArgs {
    id: string;
}

/**
 * A collection of values returned by getApsWorkspace.
 */
export interface GetApsWorkspaceResult {
    readonly alertManagerDefinition: string;
    readonly alias: string;
    readonly arn: string;
    readonly id: string;
    readonly kmsKeyArn: string;
    readonly loggingConfiguration: outputs.GetApsWorkspaceLoggingConfiguration;
    readonly prometheusEndpoint: string;
    readonly tags: outputs.GetApsWorkspaceTag[];
    readonly workspaceId: string;
}
export function getApsWorkspaceOutput(args: GetApsWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApsWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getApsWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getApsWorkspace.
 */
export interface GetApsWorkspaceOutputArgs {
    id: pulumi.Input<string>;
}
