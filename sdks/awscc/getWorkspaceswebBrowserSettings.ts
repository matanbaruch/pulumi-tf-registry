// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkspaceswebBrowserSettings(args: GetWorkspaceswebBrowserSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceswebBrowserSettingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWorkspaceswebBrowserSettings:getWorkspaceswebBrowserSettings", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspaceswebBrowserSettings.
 */
export interface GetWorkspaceswebBrowserSettingsArgs {
    id: string;
}

/**
 * A collection of values returned by getWorkspaceswebBrowserSettings.
 */
export interface GetWorkspaceswebBrowserSettingsResult {
    readonly additionalEncryptionContext: {[key: string]: string};
    readonly associatedPortalArns: string[];
    readonly browserPolicy: string;
    readonly browserSettingsArn: string;
    readonly customerManagedKey: string;
    readonly id: string;
    readonly tags: outputs.GetWorkspaceswebBrowserSettingsTag[];
}
export function getWorkspaceswebBrowserSettingsOutput(args: GetWorkspaceswebBrowserSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceswebBrowserSettingsResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceswebBrowserSettings(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceswebBrowserSettings.
 */
export interface GetWorkspaceswebBrowserSettingsOutputArgs {
    id: pulumi.Input<string>;
}
