// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmrserverlessApplication(args: GetEmrserverlessApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrserverlessApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEmrserverlessApplication:getEmrserverlessApplication", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrserverlessApplication.
 */
export interface GetEmrserverlessApplicationArgs {
    id: string;
}

/**
 * A collection of values returned by getEmrserverlessApplication.
 */
export interface GetEmrserverlessApplicationResult {
    readonly applicationId: string;
    readonly architecture: string;
    readonly arn: string;
    readonly autoStartConfiguration: outputs.GetEmrserverlessApplicationAutoStartConfiguration;
    readonly autoStopConfiguration: outputs.GetEmrserverlessApplicationAutoStopConfiguration;
    readonly id: string;
    readonly imageConfiguration: outputs.GetEmrserverlessApplicationImageConfiguration;
    readonly initialCapacities: outputs.GetEmrserverlessApplicationInitialCapacity[];
    readonly maximumCapacity: outputs.GetEmrserverlessApplicationMaximumCapacity;
    readonly name: string;
    readonly networkConfiguration: outputs.GetEmrserverlessApplicationNetworkConfiguration;
    readonly releaseLabel: string;
    readonly tags: outputs.GetEmrserverlessApplicationTag[];
    readonly type: string;
    readonly workerTypeSpecifications: {[key: string]: outputs.GetEmrserverlessApplicationWorkerTypeSpecifications};
}
export function getEmrserverlessApplicationOutput(args: GetEmrserverlessApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrserverlessApplicationResult> {
    return pulumi.output(args).apply((a: any) => getEmrserverlessApplication(a, opts))
}

/**
 * A collection of arguments for invoking getEmrserverlessApplication.
 */
export interface GetEmrserverlessApplicationOutputArgs {
    id: pulumi.Input<string>;
}
