// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLightsailDisk(args: GetLightsailDiskArgs, opts?: pulumi.InvokeOptions): Promise<GetLightsailDiskResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLightsailDisk:getLightsailDisk", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLightsailDisk.
 */
export interface GetLightsailDiskArgs {
    id: string;
}

/**
 * A collection of values returned by getLightsailDisk.
 */
export interface GetLightsailDiskResult {
    readonly addOns: outputs.GetLightsailDiskAddOn[];
    readonly attachedTo: string;
    readonly attachmentState: string;
    readonly availabilityZone: string;
    readonly diskArn: string;
    readonly diskName: string;
    readonly id: string;
    readonly iops: number;
    readonly isAttached: boolean;
    readonly location: outputs.GetLightsailDiskLocation;
    readonly path: string;
    readonly resourceType: string;
    readonly sizeInGb: number;
    readonly state: string;
    readonly supportCode: string;
    readonly tags: outputs.GetLightsailDiskTag[];
}
export function getLightsailDiskOutput(args: GetLightsailDiskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLightsailDiskResult> {
    return pulumi.output(args).apply((a: any) => getLightsailDisk(a, opts))
}

/**
 * A collection of arguments for invoking getLightsailDisk.
 */
export interface GetLightsailDiskOutputArgs {
    id: pulumi.Input<string>;
}
