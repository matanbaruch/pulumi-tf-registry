// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpensearchserverlessCollection extends pulumi.CustomResource {
    /**
     * Get an existing OpensearchserverlessCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpensearchserverlessCollectionState, opts?: pulumi.CustomResourceOptions): OpensearchserverlessCollection {
        return new OpensearchserverlessCollection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/opensearchserverlessCollection:OpensearchserverlessCollection';

    /**
     * Returns true if the given object is an instance of OpensearchserverlessCollection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpensearchserverlessCollection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpensearchserverlessCollection.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the collection.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The endpoint for the collection.
     */
    public /*out*/ readonly collectionEndpoint!: pulumi.Output<string>;
    /**
     * The identifier of the collection
     */
    public /*out*/ readonly collectionId!: pulumi.Output<string>;
    /**
     * The OpenSearch Dashboards endpoint for the collection.
     */
    public /*out*/ readonly dashboardEndpoint!: pulumi.Output<string>;
    /**
     * The description of the collection
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the collection. The name must meet the following criteria: Unique to your account and AWS Region Starts with
     * a lowercase letter Contains only lowercase letters a-z, the numbers 0-9 and the hyphen (-) Contains between 3 and 32
     * characters
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The possible standby replicas for the collection
     */
    public readonly standbyReplicas!: pulumi.Output<string>;
    /**
     * List of tags to be added to the resource
     */
    public readonly tags!: pulumi.Output<outputs.OpensearchserverlessCollectionTag[]>;
    /**
     * The possible types for the collection
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a OpensearchserverlessCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OpensearchserverlessCollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpensearchserverlessCollectionArgs | OpensearchserverlessCollectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpensearchserverlessCollectionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["collectionEndpoint"] = state ? state.collectionEndpoint : undefined;
            resourceInputs["collectionId"] = state ? state.collectionId : undefined;
            resourceInputs["dashboardEndpoint"] = state ? state.dashboardEndpoint : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["standbyReplicas"] = state ? state.standbyReplicas : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as OpensearchserverlessCollectionArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["standbyReplicas"] = args ? args.standbyReplicas : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collectionEndpoint"] = undefined /*out*/;
            resourceInputs["collectionId"] = undefined /*out*/;
            resourceInputs["dashboardEndpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpensearchserverlessCollection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OpensearchserverlessCollection resources.
 */
export interface OpensearchserverlessCollectionState {
    /**
     * The Amazon Resource Name (ARN) of the collection.
     */
    arn?: pulumi.Input<string>;
    /**
     * The endpoint for the collection.
     */
    collectionEndpoint?: pulumi.Input<string>;
    /**
     * The identifier of the collection
     */
    collectionId?: pulumi.Input<string>;
    /**
     * The OpenSearch Dashboards endpoint for the collection.
     */
    dashboardEndpoint?: pulumi.Input<string>;
    /**
     * The description of the collection
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the collection. The name must meet the following criteria: Unique to your account and AWS Region Starts with
     * a lowercase letter Contains only lowercase letters a-z, the numbers 0-9 and the hyphen (-) Contains between 3 and 32
     * characters
     */
    name?: pulumi.Input<string>;
    /**
     * The possible standby replicas for the collection
     */
    standbyReplicas?: pulumi.Input<string>;
    /**
     * List of tags to be added to the resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.OpensearchserverlessCollectionTag>[]>;
    /**
     * The possible types for the collection
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OpensearchserverlessCollection resource.
 */
export interface OpensearchserverlessCollectionArgs {
    /**
     * The description of the collection
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the collection. The name must meet the following criteria: Unique to your account and AWS Region Starts with
     * a lowercase letter Contains only lowercase letters a-z, the numbers 0-9 and the hyphen (-) Contains between 3 and 32
     * characters
     */
    name?: pulumi.Input<string>;
    /**
     * The possible standby replicas for the collection
     */
    standbyReplicas?: pulumi.Input<string>;
    /**
     * List of tags to be added to the resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.OpensearchserverlessCollectionTag>[]>;
    /**
     * The possible types for the collection
     */
    type?: pulumi.Input<string>;
}
