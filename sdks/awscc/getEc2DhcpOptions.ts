// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2DhcpOptions(args: GetEc2DhcpOptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2DhcpOptionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2DhcpOptions:getEc2DhcpOptions", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2DhcpOptions.
 */
export interface GetEc2DhcpOptionsArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2DhcpOptions.
 */
export interface GetEc2DhcpOptionsResult {
    readonly dhcpOptionsId: string;
    readonly domainName: string;
    readonly domainNameServers: string[];
    readonly id: string;
    readonly ipv6AddressPreferredLeaseTime: number;
    readonly netbiosNameServers: string[];
    readonly netbiosNodeType: number;
    readonly ntpServers: string[];
    readonly tags: outputs.GetEc2DhcpOptionsTag[];
}
export function getEc2DhcpOptionsOutput(args: GetEc2DhcpOptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2DhcpOptionsResult> {
    return pulumi.output(args).apply((a: any) => getEc2DhcpOptions(a, opts))
}

/**
 * A collection of arguments for invoking getEc2DhcpOptions.
 */
export interface GetEc2DhcpOptionsOutputArgs {
    id: pulumi.Input<string>;
}
