// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FinspaceEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing FinspaceEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FinspaceEnvironmentState, opts?: pulumi.CustomResourceOptions): FinspaceEnvironment {
        return new FinspaceEnvironment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/finspaceEnvironment:FinspaceEnvironment';

    /**
     * Returns true if the given object is an instance of FinspaceEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FinspaceEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FinspaceEnvironment.__pulumiType;
    }

    /**
     * AWS account ID associated with the Environment
     */
    public /*out*/ readonly awsAccountId!: pulumi.Output<string>;
    /**
     * ARNs of FinSpace Data Bundles to install
     */
    public readonly dataBundles!: pulumi.Output<string[]>;
    /**
     * ID for FinSpace created account used to store Environment artifacts
     */
    public /*out*/ readonly dedicatedServiceAccountId!: pulumi.Output<string>;
    /**
     * Description of the Environment
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * ARN of the Environment
     */
    public /*out*/ readonly environmentArn!: pulumi.Output<string>;
    /**
     * Unique identifier for representing FinSpace Environment
     */
    public /*out*/ readonly environmentId!: pulumi.Output<string>;
    /**
     * URL used to login to the Environment
     */
    public /*out*/ readonly environmentUrl!: pulumi.Output<string>;
    /**
     * Federation mode used with the Environment
     */
    public readonly federationMode!: pulumi.Output<string>;
    /**
     * Additional parameters to identify Federation mode
     */
    public readonly federationParameters!: pulumi.Output<outputs.FinspaceEnvironmentFederationParameters>;
    /**
     * KMS key used to encrypt customer data within FinSpace Environment infrastructure
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * Name of the Environment
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * SageMaker Studio Domain URL associated with the Environment
     */
    public /*out*/ readonly sageMakerStudioDomainUrl!: pulumi.Output<string>;
    /**
     * State of the Environment
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Parameters of the first Superuser for the FinSpace Environment
     */
    public readonly superuserParameters!: pulumi.Output<outputs.FinspaceEnvironmentSuperuserParameters>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.FinspaceEnvironmentTag[]>;

    /**
     * Create a FinspaceEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FinspaceEnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FinspaceEnvironmentArgs | FinspaceEnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FinspaceEnvironmentState | undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["dataBundles"] = state ? state.dataBundles : undefined;
            resourceInputs["dedicatedServiceAccountId"] = state ? state.dedicatedServiceAccountId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentArn"] = state ? state.environmentArn : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["environmentUrl"] = state ? state.environmentUrl : undefined;
            resourceInputs["federationMode"] = state ? state.federationMode : undefined;
            resourceInputs["federationParameters"] = state ? state.federationParameters : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sageMakerStudioDomainUrl"] = state ? state.sageMakerStudioDomainUrl : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["superuserParameters"] = state ? state.superuserParameters : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as FinspaceEnvironmentArgs | undefined;
            resourceInputs["dataBundles"] = args ? args.dataBundles : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["federationMode"] = args ? args.federationMode : undefined;
            resourceInputs["federationParameters"] = args ? args.federationParameters : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["superuserParameters"] = args ? args.superuserParameters : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["awsAccountId"] = undefined /*out*/;
            resourceInputs["dedicatedServiceAccountId"] = undefined /*out*/;
            resourceInputs["environmentArn"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["environmentUrl"] = undefined /*out*/;
            resourceInputs["sageMakerStudioDomainUrl"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FinspaceEnvironment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FinspaceEnvironment resources.
 */
export interface FinspaceEnvironmentState {
    /**
     * AWS account ID associated with the Environment
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * ARNs of FinSpace Data Bundles to install
     */
    dataBundles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID for FinSpace created account used to store Environment artifacts
     */
    dedicatedServiceAccountId?: pulumi.Input<string>;
    /**
     * Description of the Environment
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of the Environment
     */
    environmentArn?: pulumi.Input<string>;
    /**
     * Unique identifier for representing FinSpace Environment
     */
    environmentId?: pulumi.Input<string>;
    /**
     * URL used to login to the Environment
     */
    environmentUrl?: pulumi.Input<string>;
    /**
     * Federation mode used with the Environment
     */
    federationMode?: pulumi.Input<string>;
    /**
     * Additional parameters to identify Federation mode
     */
    federationParameters?: pulumi.Input<inputs.FinspaceEnvironmentFederationParameters>;
    /**
     * KMS key used to encrypt customer data within FinSpace Environment infrastructure
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of the Environment
     */
    name?: pulumi.Input<string>;
    /**
     * SageMaker Studio Domain URL associated with the Environment
     */
    sageMakerStudioDomainUrl?: pulumi.Input<string>;
    /**
     * State of the Environment
     */
    status?: pulumi.Input<string>;
    /**
     * Parameters of the first Superuser for the FinSpace Environment
     */
    superuserParameters?: pulumi.Input<inputs.FinspaceEnvironmentSuperuserParameters>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.FinspaceEnvironmentTag>[]>;
}

/**
 * The set of arguments for constructing a FinspaceEnvironment resource.
 */
export interface FinspaceEnvironmentArgs {
    /**
     * ARNs of FinSpace Data Bundles to install
     */
    dataBundles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the Environment
     */
    description?: pulumi.Input<string>;
    /**
     * Federation mode used with the Environment
     */
    federationMode?: pulumi.Input<string>;
    /**
     * Additional parameters to identify Federation mode
     */
    federationParameters?: pulumi.Input<inputs.FinspaceEnvironmentFederationParameters>;
    /**
     * KMS key used to encrypt customer data within FinSpace Environment infrastructure
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Name of the Environment
     */
    name?: pulumi.Input<string>;
    /**
     * Parameters of the first Superuser for the FinSpace Environment
     */
    superuserParameters?: pulumi.Input<inputs.FinspaceEnvironmentSuperuserParameters>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.FinspaceEnvironmentTag>[]>;
}
