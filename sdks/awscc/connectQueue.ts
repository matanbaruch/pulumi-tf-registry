// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConnectQueue extends pulumi.CustomResource {
    /**
     * Get an existing ConnectQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectQueueState, opts?: pulumi.CustomResourceOptions): ConnectQueue {
        return new ConnectQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/connectQueue:ConnectQueue';

    /**
     * Returns true if the given object is an instance of ConnectQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectQueue.__pulumiType;
    }

    /**
     * The description of the queue.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The identifier for the hours of operation.
     */
    public readonly hoursOfOperationArn!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * The maximum number of contacts that can be in the queue before it is considered full.
     */
    public readonly maxContacts!: pulumi.Output<number>;
    /**
     * The name of the queue.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The outbound caller ID name, number, and outbound whisper flow.
     */
    public readonly outboundCallerConfig!: pulumi.Output<outputs.ConnectQueueOutboundCallerConfig>;
    /**
     * The Amazon Resource Name (ARN) for the queue.
     */
    public /*out*/ readonly queueArn!: pulumi.Output<string>;
    /**
     * The quick connects available to agents who are working the queue.
     */
    public readonly quickConnectArns!: pulumi.Output<string[]>;
    /**
     * The status of the queue.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.ConnectQueueTag[]>;
    /**
     * The type of queue.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ConnectQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectQueueArgs | ConnectQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectQueueState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hoursOfOperationArn"] = state ? state.hoursOfOperationArn : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["maxContacts"] = state ? state.maxContacts : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outboundCallerConfig"] = state ? state.outboundCallerConfig : undefined;
            resourceInputs["queueArn"] = state ? state.queueArn : undefined;
            resourceInputs["quickConnectArns"] = state ? state.quickConnectArns : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ConnectQueueArgs | undefined;
            if ((!args || args.hoursOfOperationArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hoursOfOperationArn'");
            }
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hoursOfOperationArn"] = args ? args.hoursOfOperationArn : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["maxContacts"] = args ? args.maxContacts : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outboundCallerConfig"] = args ? args.outboundCallerConfig : undefined;
            resourceInputs["quickConnectArns"] = args ? args.quickConnectArns : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["queueArn"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectQueue.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConnectQueue resources.
 */
export interface ConnectQueueState {
    /**
     * The description of the queue.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier for the hours of operation.
     */
    hoursOfOperationArn?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * The maximum number of contacts that can be in the queue before it is considered full.
     */
    maxContacts?: pulumi.Input<number>;
    /**
     * The name of the queue.
     */
    name?: pulumi.Input<string>;
    /**
     * The outbound caller ID name, number, and outbound whisper flow.
     */
    outboundCallerConfig?: pulumi.Input<inputs.ConnectQueueOutboundCallerConfig>;
    /**
     * The Amazon Resource Name (ARN) for the queue.
     */
    queueArn?: pulumi.Input<string>;
    /**
     * The quick connects available to agents who are working the queue.
     */
    quickConnectArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the queue.
     */
    status?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectQueueTag>[]>;
    /**
     * The type of queue.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectQueue resource.
 */
export interface ConnectQueueArgs {
    /**
     * The description of the queue.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier for the hours of operation.
     */
    hoursOfOperationArn: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The maximum number of contacts that can be in the queue before it is considered full.
     */
    maxContacts?: pulumi.Input<number>;
    /**
     * The name of the queue.
     */
    name?: pulumi.Input<string>;
    /**
     * The outbound caller ID name, number, and outbound whisper flow.
     */
    outboundCallerConfig?: pulumi.Input<inputs.ConnectQueueOutboundCallerConfig>;
    /**
     * The quick connects available to agents who are working the queue.
     */
    quickConnectArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the queue.
     */
    status?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectQueueTag>[]>;
}
