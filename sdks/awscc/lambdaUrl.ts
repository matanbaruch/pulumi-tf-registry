// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LambdaUrl extends pulumi.CustomResource {
    /**
     * Get an existing LambdaUrl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LambdaUrlState, opts?: pulumi.CustomResourceOptions): LambdaUrl {
        return new LambdaUrl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/lambdaUrl:LambdaUrl';

    /**
     * Returns true if the given object is an instance of LambdaUrl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LambdaUrl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LambdaUrl.__pulumiType;
    }

    /**
     * Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function
     * URL.
     */
    public readonly authType!: pulumi.Output<string>;
    public readonly cors!: pulumi.Output<outputs.LambdaUrlCors>;
    /**
     * The full Amazon Resource Name (ARN) of the function associated with the Function URL.
     */
    public /*out*/ readonly functionArn!: pulumi.Output<string>;
    /**
     * The generated url for this resource.
     */
    public /*out*/ readonly functionUrl!: pulumi.Output<string>;
    /**
     * The invocation mode for the function's URL. Set to BUFFERED if you want to buffer responses before returning them to the
     * client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response
     * payload sizes. If not set, defaults to BUFFERED.
     */
    public readonly invokeMode!: pulumi.Output<string>;
    /**
     * The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
     */
    public readonly qualifier!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the function associated with the Function URL.
     */
    public readonly targetFunctionArn!: pulumi.Output<string>;

    /**
     * Create a LambdaUrl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LambdaUrlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LambdaUrlArgs | LambdaUrlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LambdaUrlState | undefined;
            resourceInputs["authType"] = state ? state.authType : undefined;
            resourceInputs["cors"] = state ? state.cors : undefined;
            resourceInputs["functionArn"] = state ? state.functionArn : undefined;
            resourceInputs["functionUrl"] = state ? state.functionUrl : undefined;
            resourceInputs["invokeMode"] = state ? state.invokeMode : undefined;
            resourceInputs["qualifier"] = state ? state.qualifier : undefined;
            resourceInputs["targetFunctionArn"] = state ? state.targetFunctionArn : undefined;
        } else {
            const args = argsOrState as LambdaUrlArgs | undefined;
            if ((!args || args.authType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authType'");
            }
            if ((!args || args.targetFunctionArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetFunctionArn'");
            }
            resourceInputs["authType"] = args ? args.authType : undefined;
            resourceInputs["cors"] = args ? args.cors : undefined;
            resourceInputs["invokeMode"] = args ? args.invokeMode : undefined;
            resourceInputs["qualifier"] = args ? args.qualifier : undefined;
            resourceInputs["targetFunctionArn"] = args ? args.targetFunctionArn : undefined;
            resourceInputs["functionArn"] = undefined /*out*/;
            resourceInputs["functionUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LambdaUrl.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LambdaUrl resources.
 */
export interface LambdaUrlState {
    /**
     * Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function
     * URL.
     */
    authType?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.LambdaUrlCors>;
    /**
     * The full Amazon Resource Name (ARN) of the function associated with the Function URL.
     */
    functionArn?: pulumi.Input<string>;
    /**
     * The generated url for this resource.
     */
    functionUrl?: pulumi.Input<string>;
    /**
     * The invocation mode for the function's URL. Set to BUFFERED if you want to buffer responses before returning them to the
     * client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response
     * payload sizes. If not set, defaults to BUFFERED.
     */
    invokeMode?: pulumi.Input<string>;
    /**
     * The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
     */
    qualifier?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the function associated with the Function URL.
     */
    targetFunctionArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LambdaUrl resource.
 */
export interface LambdaUrlArgs {
    /**
     * Can be either AWS_IAM if the requests are authorized via IAM, or NONE if no authorization is configured on the Function
     * URL.
     */
    authType: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.LambdaUrlCors>;
    /**
     * The invocation mode for the function's URL. Set to BUFFERED if you want to buffer responses before returning them to the
     * client. Set to RESPONSE_STREAM if you want to stream responses, allowing faster time to first byte and larger response
     * payload sizes. If not set, defaults to BUFFERED.
     */
    invokeMode?: pulumi.Input<string>;
    /**
     * The alias qualifier for the target function. If TargetFunctionArn is unqualified then Qualifier must be passed.
     */
    qualifier?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the function associated with the Function URL.
     */
    targetFunctionArn: pulumi.Input<string>;
}
