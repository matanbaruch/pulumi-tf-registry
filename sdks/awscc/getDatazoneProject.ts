// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatazoneProject(args: GetDatazoneProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetDatazoneProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatazoneProject:getDatazoneProject", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatazoneProject.
 */
export interface GetDatazoneProjectArgs {
    id: string;
}

/**
 * A collection of values returned by getDatazoneProject.
 */
export interface GetDatazoneProjectResult {
    readonly createdAt: string;
    readonly createdBy: string;
    readonly description: string;
    readonly domainId: string;
    readonly domainIdentifier: string;
    readonly glossaryTerms: string[];
    readonly id: string;
    readonly lastUpdatedAt: string;
    readonly name: string;
    readonly projectId: string;
}
export function getDatazoneProjectOutput(args: GetDatazoneProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatazoneProjectResult> {
    return pulumi.output(args).apply((a: any) => getDatazoneProject(a, opts))
}

/**
 * A collection of arguments for invoking getDatazoneProject.
 */
export interface GetDatazoneProjectOutputArgs {
    id: pulumi.Input<string>;
}
