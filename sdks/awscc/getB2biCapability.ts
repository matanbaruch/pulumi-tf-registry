// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getB2biCapability(args: GetB2biCapabilityArgs, opts?: pulumi.InvokeOptions): Promise<GetB2biCapabilityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getB2biCapability:getB2biCapability", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getB2biCapability.
 */
export interface GetB2biCapabilityArgs {
    id: string;
}

/**
 * A collection of values returned by getB2biCapability.
 */
export interface GetB2biCapabilityResult {
    readonly capabilityArn: string;
    readonly capabilityId: string;
    readonly configuration: outputs.GetB2biCapabilityConfiguration;
    readonly createdAt: string;
    readonly id: string;
    readonly instructionsDocuments: outputs.GetB2biCapabilityInstructionsDocument[];
    readonly modifiedAt: string;
    readonly name: string;
    readonly tags: outputs.GetB2biCapabilityTag[];
    readonly type: string;
}
export function getB2biCapabilityOutput(args: GetB2biCapabilityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetB2biCapabilityResult> {
    return pulumi.output(args).apply((a: any) => getB2biCapability(a, opts))
}

/**
 * A collection of arguments for invoking getB2biCapability.
 */
export interface GetB2biCapabilityOutputArgs {
    id: pulumi.Input<string>;
}
