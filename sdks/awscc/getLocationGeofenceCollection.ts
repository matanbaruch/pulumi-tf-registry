// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLocationGeofenceCollection(args: GetLocationGeofenceCollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationGeofenceCollectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLocationGeofenceCollection:getLocationGeofenceCollection", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocationGeofenceCollection.
 */
export interface GetLocationGeofenceCollectionArgs {
    id: string;
}

/**
 * A collection of values returned by getLocationGeofenceCollection.
 */
export interface GetLocationGeofenceCollectionResult {
    readonly arn: string;
    readonly collectionArn: string;
    readonly collectionName: string;
    readonly createTime: string;
    readonly description: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly pricingPlan: string;
    readonly pricingPlanDataSource: string;
    readonly tags: outputs.GetLocationGeofenceCollectionTag[];
    readonly updateTime: string;
}
export function getLocationGeofenceCollectionOutput(args: GetLocationGeofenceCollectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationGeofenceCollectionResult> {
    return pulumi.output(args).apply((a: any) => getLocationGeofenceCollection(a, opts))
}

/**
 * A collection of arguments for invoking getLocationGeofenceCollection.
 */
export interface GetLocationGeofenceCollectionOutputArgs {
    id: pulumi.Input<string>;
}
