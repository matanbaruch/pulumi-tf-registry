// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLightsailDistribution(args: GetLightsailDistributionArgs, opts?: pulumi.InvokeOptions): Promise<GetLightsailDistributionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLightsailDistribution:getLightsailDistribution", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLightsailDistribution.
 */
export interface GetLightsailDistributionArgs {
    id: string;
}

/**
 * A collection of values returned by getLightsailDistribution.
 */
export interface GetLightsailDistributionResult {
    readonly ableToUpdateBundle: boolean;
    readonly bundleId: string;
    readonly cacheBehaviorSettings: outputs.GetLightsailDistributionCacheBehaviorSettings;
    readonly cacheBehaviors: outputs.GetLightsailDistributionCacheBehavior[];
    readonly certificateName: string;
    readonly defaultCacheBehavior: outputs.GetLightsailDistributionDefaultCacheBehavior;
    readonly distributionArn: string;
    readonly distributionName: string;
    readonly id: string;
    readonly ipAddressType: string;
    readonly isEnabled: boolean;
    readonly origin: outputs.GetLightsailDistributionOrigin;
    readonly status: string;
    readonly tags: outputs.GetLightsailDistributionTag[];
}
export function getLightsailDistributionOutput(args: GetLightsailDistributionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLightsailDistributionResult> {
    return pulumi.output(args).apply((a: any) => getLightsailDistribution(a, opts))
}

/**
 * A collection of arguments for invoking getLightsailDistribution.
 */
export interface GetLightsailDistributionOutputArgs {
    id: pulumi.Input<string>;
}
