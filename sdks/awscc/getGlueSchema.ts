// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlueSchema(args: GetGlueSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetGlueSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlueSchema:getGlueSchema", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlueSchema.
 */
export interface GetGlueSchemaArgs {
    id: string;
}

/**
 * A collection of values returned by getGlueSchema.
 */
export interface GetGlueSchemaResult {
    readonly arn: string;
    readonly checkpointVersion: outputs.GetGlueSchemaCheckpointVersion;
    readonly compatibility: string;
    readonly dataFormat: string;
    readonly description: string;
    readonly id: string;
    readonly initialSchemaVersionId: string;
    readonly name: string;
    readonly registry: outputs.GetGlueSchemaRegistry;
    readonly schemaDefinition: string;
    readonly tags: outputs.GetGlueSchemaTag[];
}
export function getGlueSchemaOutput(args: GetGlueSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlueSchemaResult> {
    return pulumi.output(args).apply((a: any) => getGlueSchema(a, opts))
}

/**
 * A collection of arguments for invoking getGlueSchema.
 */
export interface GetGlueSchemaOutputArgs {
    id: pulumi.Input<string>;
}
