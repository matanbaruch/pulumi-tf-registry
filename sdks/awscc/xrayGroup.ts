// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class XrayGroup extends pulumi.CustomResource {
    /**
     * Get an existing XrayGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: XrayGroupState, opts?: pulumi.CustomResourceOptions): XrayGroup {
        return new XrayGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/xrayGroup:XrayGroup';

    /**
     * Returns true if the given object is an instance of XrayGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is XrayGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === XrayGroup.__pulumiType;
    }

    /**
     * The filter expression defining criteria by which to group traces.
     */
    public readonly filterExpression!: pulumi.Output<string>;
    /**
     * The ARN of the group that was generated on creation.
     */
    public /*out*/ readonly groupArn!: pulumi.Output<string>;
    /**
     * The case-sensitive name of the new group. Names must be unique.
     */
    public readonly groupName!: pulumi.Output<string>;
    public readonly insightsConfiguration!: pulumi.Output<outputs.XrayGroupInsightsConfiguration>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.XrayGroupTag[]>;

    /**
     * Create a XrayGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: XrayGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: XrayGroupArgs | XrayGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as XrayGroupState | undefined;
            resourceInputs["filterExpression"] = state ? state.filterExpression : undefined;
            resourceInputs["groupArn"] = state ? state.groupArn : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["insightsConfiguration"] = state ? state.insightsConfiguration : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as XrayGroupArgs | undefined;
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            resourceInputs["filterExpression"] = args ? args.filterExpression : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["insightsConfiguration"] = args ? args.insightsConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["groupArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(XrayGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering XrayGroup resources.
 */
export interface XrayGroupState {
    /**
     * The filter expression defining criteria by which to group traces.
     */
    filterExpression?: pulumi.Input<string>;
    /**
     * The ARN of the group that was generated on creation.
     */
    groupArn?: pulumi.Input<string>;
    /**
     * The case-sensitive name of the new group. Names must be unique.
     */
    groupName?: pulumi.Input<string>;
    insightsConfiguration?: pulumi.Input<inputs.XrayGroupInsightsConfiguration>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.XrayGroupTag>[]>;
}

/**
 * The set of arguments for constructing a XrayGroup resource.
 */
export interface XrayGroupArgs {
    /**
     * The filter expression defining criteria by which to group traces.
     */
    filterExpression?: pulumi.Input<string>;
    /**
     * The case-sensitive name of the new group. Names must be unique.
     */
    groupName: pulumi.Input<string>;
    insightsConfiguration?: pulumi.Input<inputs.XrayGroupInsightsConfiguration>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.XrayGroupTag>[]>;
}
