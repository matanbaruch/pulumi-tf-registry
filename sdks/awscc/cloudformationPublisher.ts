// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudformationPublisher extends pulumi.CustomResource {
    /**
     * Get an existing CloudformationPublisher resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudformationPublisherState, opts?: pulumi.CustomResourceOptions): CloudformationPublisher {
        return new CloudformationPublisher(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/cloudformationPublisher:CloudformationPublisher';

    /**
     * Returns true if the given object is an instance of CloudformationPublisher.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudformationPublisher {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudformationPublisher.__pulumiType;
    }

    /**
     * Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept
     * the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions
     * can be found at
     * https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf
     */
    public readonly acceptTermsAndConditions!: pulumi.Output<boolean>;
    /**
     * If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your
     * connection to that account.
     */
    public readonly connectionArn!: pulumi.Output<string>;
    /**
     * The type of account used as the identity provider when registering this publisher with CloudFormation.
     */
    public /*out*/ readonly identityProvider!: pulumi.Output<string>;
    /**
     * The publisher id assigned by CloudFormation for publishing in this region.
     */
    public /*out*/ readonly publisherId!: pulumi.Output<string>;
    /**
     * The URL to the publisher's profile with the identity provider.
     */
    public /*out*/ readonly publisherProfile!: pulumi.Output<string>;
    /**
     * Whether the publisher is verified.
     */
    public /*out*/ readonly publisherStatus!: pulumi.Output<string>;

    /**
     * Create a CloudformationPublisher resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudformationPublisherArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudformationPublisherArgs | CloudformationPublisherState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudformationPublisherState | undefined;
            resourceInputs["acceptTermsAndConditions"] = state ? state.acceptTermsAndConditions : undefined;
            resourceInputs["connectionArn"] = state ? state.connectionArn : undefined;
            resourceInputs["identityProvider"] = state ? state.identityProvider : undefined;
            resourceInputs["publisherId"] = state ? state.publisherId : undefined;
            resourceInputs["publisherProfile"] = state ? state.publisherProfile : undefined;
            resourceInputs["publisherStatus"] = state ? state.publisherStatus : undefined;
        } else {
            const args = argsOrState as CloudformationPublisherArgs | undefined;
            if ((!args || args.acceptTermsAndConditions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceptTermsAndConditions'");
            }
            resourceInputs["acceptTermsAndConditions"] = args ? args.acceptTermsAndConditions : undefined;
            resourceInputs["connectionArn"] = args ? args.connectionArn : undefined;
            resourceInputs["identityProvider"] = undefined /*out*/;
            resourceInputs["publisherId"] = undefined /*out*/;
            resourceInputs["publisherProfile"] = undefined /*out*/;
            resourceInputs["publisherStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudformationPublisher.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudformationPublisher resources.
 */
export interface CloudformationPublisherState {
    /**
     * Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept
     * the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions
     * can be found at
     * https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf
     */
    acceptTermsAndConditions?: pulumi.Input<boolean>;
    /**
     * If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your
     * connection to that account.
     */
    connectionArn?: pulumi.Input<string>;
    /**
     * The type of account used as the identity provider when registering this publisher with CloudFormation.
     */
    identityProvider?: pulumi.Input<string>;
    /**
     * The publisher id assigned by CloudFormation for publishing in this region.
     */
    publisherId?: pulumi.Input<string>;
    /**
     * The URL to the publisher's profile with the identity provider.
     */
    publisherProfile?: pulumi.Input<string>;
    /**
     * Whether the publisher is verified.
     */
    publisherStatus?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudformationPublisher resource.
 */
export interface CloudformationPublisherArgs {
    /**
     * Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept
     * the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions
     * can be found at
     * https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf
     */
    acceptTermsAndConditions: pulumi.Input<boolean>;
    /**
     * If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your
     * connection to that account.
     */
    connectionArn?: pulumi.Input<string>;
}
