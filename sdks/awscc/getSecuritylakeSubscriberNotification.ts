// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecuritylakeSubscriberNotification(args: GetSecuritylakeSubscriberNotificationArgs, opts?: pulumi.InvokeOptions): Promise<GetSecuritylakeSubscriberNotificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSecuritylakeSubscriberNotification:getSecuritylakeSubscriberNotification", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecuritylakeSubscriberNotification.
 */
export interface GetSecuritylakeSubscriberNotificationArgs {
    id: string;
}

/**
 * A collection of values returned by getSecuritylakeSubscriberNotification.
 */
export interface GetSecuritylakeSubscriberNotificationResult {
    readonly id: string;
    readonly notificationConfiguration: outputs.GetSecuritylakeSubscriberNotificationNotificationConfiguration;
    readonly subscriberArn: string;
    readonly subscriberEndpoint: string;
}
export function getSecuritylakeSubscriberNotificationOutput(args: GetSecuritylakeSubscriberNotificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecuritylakeSubscriberNotificationResult> {
    return pulumi.output(args).apply((a: any) => getSecuritylakeSubscriberNotification(a, opts))
}

/**
 * A collection of arguments for invoking getSecuritylakeSubscriberNotification.
 */
export interface GetSecuritylakeSubscriberNotificationOutputArgs {
    id: pulumi.Input<string>;
}
