// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTimestreamDatabase(args: GetTimestreamDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetTimestreamDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getTimestreamDatabase:getTimestreamDatabase", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTimestreamDatabase.
 */
export interface GetTimestreamDatabaseArgs {
    id: string;
}

/**
 * A collection of values returned by getTimestreamDatabase.
 */
export interface GetTimestreamDatabaseResult {
    readonly arn: string;
    readonly databaseName: string;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly tags: outputs.GetTimestreamDatabaseTag[];
}
export function getTimestreamDatabaseOutput(args: GetTimestreamDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTimestreamDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getTimestreamDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getTimestreamDatabase.
 */
export interface GetTimestreamDatabaseOutputArgs {
    id: pulumi.Input<string>;
}
