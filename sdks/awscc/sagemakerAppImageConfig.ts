// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SagemakerAppImageConfig extends pulumi.CustomResource {
    /**
     * Get an existing SagemakerAppImageConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagemakerAppImageConfigState, opts?: pulumi.CustomResourceOptions): SagemakerAppImageConfig {
        return new SagemakerAppImageConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/sagemakerAppImageConfig:SagemakerAppImageConfig';

    /**
     * Returns true if the given object is an instance of SagemakerAppImageConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagemakerAppImageConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagemakerAppImageConfig.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the AppImageConfig.
     */
    public /*out*/ readonly appImageConfigArn!: pulumi.Output<string>;
    /**
     * The Name of the AppImageConfig.
     */
    public readonly appImageConfigName!: pulumi.Output<string>;
    /**
     * The CodeEditorAppImageConfig.
     */
    public readonly codeEditorAppImageConfig!: pulumi.Output<outputs.SagemakerAppImageConfigCodeEditorAppImageConfig>;
    /**
     * The JupyterLabAppImageConfig.
     */
    public readonly jupyterLabAppImageConfig!: pulumi.Output<outputs.SagemakerAppImageConfigJupyterLabAppImageConfig>;
    /**
     * The KernelGatewayImageConfig.
     */
    public readonly kernelGatewayImageConfig!: pulumi.Output<outputs.SagemakerAppImageConfigKernelGatewayImageConfig>;
    /**
     * A list of tags to apply to the AppImageConfig.
     */
    public readonly tags!: pulumi.Output<outputs.SagemakerAppImageConfigTag[]>;

    /**
     * Create a SagemakerAppImageConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagemakerAppImageConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagemakerAppImageConfigArgs | SagemakerAppImageConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagemakerAppImageConfigState | undefined;
            resourceInputs["appImageConfigArn"] = state ? state.appImageConfigArn : undefined;
            resourceInputs["appImageConfigName"] = state ? state.appImageConfigName : undefined;
            resourceInputs["codeEditorAppImageConfig"] = state ? state.codeEditorAppImageConfig : undefined;
            resourceInputs["jupyterLabAppImageConfig"] = state ? state.jupyterLabAppImageConfig : undefined;
            resourceInputs["kernelGatewayImageConfig"] = state ? state.kernelGatewayImageConfig : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SagemakerAppImageConfigArgs | undefined;
            if ((!args || args.appImageConfigName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appImageConfigName'");
            }
            resourceInputs["appImageConfigName"] = args ? args.appImageConfigName : undefined;
            resourceInputs["codeEditorAppImageConfig"] = args ? args.codeEditorAppImageConfig : undefined;
            resourceInputs["jupyterLabAppImageConfig"] = args ? args.jupyterLabAppImageConfig : undefined;
            resourceInputs["kernelGatewayImageConfig"] = args ? args.kernelGatewayImageConfig : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["appImageConfigArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagemakerAppImageConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagemakerAppImageConfig resources.
 */
export interface SagemakerAppImageConfigState {
    /**
     * The Amazon Resource Name (ARN) of the AppImageConfig.
     */
    appImageConfigArn?: pulumi.Input<string>;
    /**
     * The Name of the AppImageConfig.
     */
    appImageConfigName?: pulumi.Input<string>;
    /**
     * The CodeEditorAppImageConfig.
     */
    codeEditorAppImageConfig?: pulumi.Input<inputs.SagemakerAppImageConfigCodeEditorAppImageConfig>;
    /**
     * The JupyterLabAppImageConfig.
     */
    jupyterLabAppImageConfig?: pulumi.Input<inputs.SagemakerAppImageConfigJupyterLabAppImageConfig>;
    /**
     * The KernelGatewayImageConfig.
     */
    kernelGatewayImageConfig?: pulumi.Input<inputs.SagemakerAppImageConfigKernelGatewayImageConfig>;
    /**
     * A list of tags to apply to the AppImageConfig.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerAppImageConfigTag>[]>;
}

/**
 * The set of arguments for constructing a SagemakerAppImageConfig resource.
 */
export interface SagemakerAppImageConfigArgs {
    /**
     * The Name of the AppImageConfig.
     */
    appImageConfigName: pulumi.Input<string>;
    /**
     * The CodeEditorAppImageConfig.
     */
    codeEditorAppImageConfig?: pulumi.Input<inputs.SagemakerAppImageConfigCodeEditorAppImageConfig>;
    /**
     * The JupyterLabAppImageConfig.
     */
    jupyterLabAppImageConfig?: pulumi.Input<inputs.SagemakerAppImageConfigJupyterLabAppImageConfig>;
    /**
     * The KernelGatewayImageConfig.
     */
    kernelGatewayImageConfig?: pulumi.Input<inputs.SagemakerAppImageConfigKernelGatewayImageConfig>;
    /**
     * A list of tags to apply to the AppImageConfig.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerAppImageConfigTag>[]>;
}
