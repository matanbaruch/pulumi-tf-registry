// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SsmcontactsContactChannel extends pulumi.CustomResource {
    /**
     * Get an existing SsmcontactsContactChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsmcontactsContactChannelState, opts?: pulumi.CustomResourceOptions): SsmcontactsContactChannel {
        return new SsmcontactsContactChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ssmcontactsContactChannel:SsmcontactsContactChannel';

    /**
     * Returns true if the given object is an instance of SsmcontactsContactChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SsmcontactsContactChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SsmcontactsContactChannel.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the engagement to a contact channel.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The details that SSM Incident Manager uses when trying to engage the contact channel.
     */
    public readonly channelAddress!: pulumi.Output<string>;
    /**
     * The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.
     */
    public readonly channelName!: pulumi.Output<string>;
    /**
     * Device type, which specify notification channel. Currently supported values: ?SMS?, ?VOICE?, ?EMAIL?, ?CHATBOT.
     */
    public readonly channelType!: pulumi.Output<string>;
    /**
     * ARN of the contact resource
     */
    public readonly contactId!: pulumi.Output<string>;
    /**
     * If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't
     * engage your contact channel until it has been activated.
     */
    public readonly deferActivation!: pulumi.Output<boolean>;

    /**
     * Create a SsmcontactsContactChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SsmcontactsContactChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsmcontactsContactChannelArgs | SsmcontactsContactChannelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsmcontactsContactChannelState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["channelAddress"] = state ? state.channelAddress : undefined;
            resourceInputs["channelName"] = state ? state.channelName : undefined;
            resourceInputs["channelType"] = state ? state.channelType : undefined;
            resourceInputs["contactId"] = state ? state.contactId : undefined;
            resourceInputs["deferActivation"] = state ? state.deferActivation : undefined;
        } else {
            const args = argsOrState as SsmcontactsContactChannelArgs | undefined;
            resourceInputs["channelAddress"] = args ? args.channelAddress : undefined;
            resourceInputs["channelName"] = args ? args.channelName : undefined;
            resourceInputs["channelType"] = args ? args.channelType : undefined;
            resourceInputs["contactId"] = args ? args.contactId : undefined;
            resourceInputs["deferActivation"] = args ? args.deferActivation : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SsmcontactsContactChannel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SsmcontactsContactChannel resources.
 */
export interface SsmcontactsContactChannelState {
    /**
     * The Amazon Resource Name (ARN) of the engagement to a contact channel.
     */
    arn?: pulumi.Input<string>;
    /**
     * The details that SSM Incident Manager uses when trying to engage the contact channel.
     */
    channelAddress?: pulumi.Input<string>;
    /**
     * The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.
     */
    channelName?: pulumi.Input<string>;
    /**
     * Device type, which specify notification channel. Currently supported values: ?SMS?, ?VOICE?, ?EMAIL?, ?CHATBOT.
     */
    channelType?: pulumi.Input<string>;
    /**
     * ARN of the contact resource
     */
    contactId?: pulumi.Input<string>;
    /**
     * If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't
     * engage your contact channel until it has been activated.
     */
    deferActivation?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a SsmcontactsContactChannel resource.
 */
export interface SsmcontactsContactChannelArgs {
    /**
     * The details that SSM Incident Manager uses when trying to engage the contact channel.
     */
    channelAddress?: pulumi.Input<string>;
    /**
     * The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.
     */
    channelName?: pulumi.Input<string>;
    /**
     * Device type, which specify notification channel. Currently supported values: ?SMS?, ?VOICE?, ?EMAIL?, ?CHATBOT.
     */
    channelType?: pulumi.Input<string>;
    /**
     * ARN of the contact resource
     */
    contactId?: pulumi.Input<string>;
    /**
     * If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't
     * engage your contact channel until it has been activated.
     */
    deferActivation?: pulumi.Input<boolean>;
}
