// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2VerifiedAccessEndpoint(args: GetEc2VerifiedAccessEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2VerifiedAccessEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2VerifiedAccessEndpoint:getEc2VerifiedAccessEndpoint", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2VerifiedAccessEndpoint.
 */
export interface GetEc2VerifiedAccessEndpointArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2VerifiedAccessEndpoint.
 */
export interface GetEc2VerifiedAccessEndpointResult {
    readonly applicationDomain: string;
    readonly attachmentType: string;
    readonly creationTime: string;
    readonly description: string;
    readonly deviceValidationDomain: string;
    readonly domainCertificateArn: string;
    readonly endpointDomain: string;
    readonly endpointDomainPrefix: string;
    readonly endpointType: string;
    readonly id: string;
    readonly lastUpdatedTime: string;
    readonly loadBalancerOptions: outputs.GetEc2VerifiedAccessEndpointLoadBalancerOptions;
    readonly networkInterfaceOptions: outputs.GetEc2VerifiedAccessEndpointNetworkInterfaceOptions;
    readonly policyDocument: string;
    readonly policyEnabled: boolean;
    readonly securityGroupIds: string[];
    readonly sseSpecification: outputs.GetEc2VerifiedAccessEndpointSseSpecification;
    readonly status: string;
    readonly tags: outputs.GetEc2VerifiedAccessEndpointTag[];
    readonly verifiedAccessEndpointId: string;
    readonly verifiedAccessGroupId: string;
    readonly verifiedAccessInstanceId: string;
}
export function getEc2VerifiedAccessEndpointOutput(args: GetEc2VerifiedAccessEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2VerifiedAccessEndpointResult> {
    return pulumi.output(args).apply((a: any) => getEc2VerifiedAccessEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getEc2VerifiedAccessEndpoint.
 */
export interface GetEc2VerifiedAccessEndpointOutputArgs {
    id: pulumi.Input<string>;
}
