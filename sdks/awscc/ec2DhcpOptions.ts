// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ec2DhcpOptions extends pulumi.CustomResource {
    /**
     * Get an existing Ec2DhcpOptions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2DhcpOptionsState, opts?: pulumi.CustomResourceOptions): Ec2DhcpOptions {
        return new Ec2DhcpOptions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ec2DhcpOptions:Ec2DhcpOptions';

    /**
     * Returns true if the given object is an instance of Ec2DhcpOptions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ec2DhcpOptions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2DhcpOptions.__pulumiType;
    }

    public /*out*/ readonly dhcpOptionsId!: pulumi.Output<string>;
    /**
     * This value is used to complete unqualified DNS hostnames.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS.
     */
    public readonly domainNameServers!: pulumi.Output<string[]>;
    /**
     * The preferred Lease Time for ipV6 address in seconds.
     */
    public readonly ipv6AddressPreferredLeaseTime!: pulumi.Output<number>;
    /**
     * The IPv4 addresses of up to four NetBIOS name servers.
     */
    public readonly netbiosNameServers!: pulumi.Output<string[]>;
    /**
     * The NetBIOS node type (1, 2, 4, or 8).
     */
    public readonly netbiosNodeType!: pulumi.Output<number>;
    /**
     * The IPv4 addresses of up to four Network Time Protocol (NTP) servers.
     */
    public readonly ntpServers!: pulumi.Output<string[]>;
    /**
     * Any tags assigned to the DHCP options set.
     */
    public readonly tags!: pulumi.Output<outputs.Ec2DhcpOptionsTag[]>;

    /**
     * Create a Ec2DhcpOptions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ec2DhcpOptionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ec2DhcpOptionsArgs | Ec2DhcpOptionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ec2DhcpOptionsState | undefined;
            resourceInputs["dhcpOptionsId"] = state ? state.dhcpOptionsId : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["domainNameServers"] = state ? state.domainNameServers : undefined;
            resourceInputs["ipv6AddressPreferredLeaseTime"] = state ? state.ipv6AddressPreferredLeaseTime : undefined;
            resourceInputs["netbiosNameServers"] = state ? state.netbiosNameServers : undefined;
            resourceInputs["netbiosNodeType"] = state ? state.netbiosNodeType : undefined;
            resourceInputs["ntpServers"] = state ? state.ntpServers : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Ec2DhcpOptionsArgs | undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["domainNameServers"] = args ? args.domainNameServers : undefined;
            resourceInputs["ipv6AddressPreferredLeaseTime"] = args ? args.ipv6AddressPreferredLeaseTime : undefined;
            resourceInputs["netbiosNameServers"] = args ? args.netbiosNameServers : undefined;
            resourceInputs["netbiosNodeType"] = args ? args.netbiosNodeType : undefined;
            resourceInputs["ntpServers"] = args ? args.ntpServers : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["dhcpOptionsId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2DhcpOptions.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ec2DhcpOptions resources.
 */
export interface Ec2DhcpOptionsState {
    dhcpOptionsId?: pulumi.Input<string>;
    /**
     * This value is used to complete unqualified DNS hostnames.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS.
     */
    domainNameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The preferred Lease Time for ipV6 address in seconds.
     */
    ipv6AddressPreferredLeaseTime?: pulumi.Input<number>;
    /**
     * The IPv4 addresses of up to four NetBIOS name servers.
     */
    netbiosNameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The NetBIOS node type (1, 2, 4, or 8).
     */
    netbiosNodeType?: pulumi.Input<number>;
    /**
     * The IPv4 addresses of up to four Network Time Protocol (NTP) servers.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Any tags assigned to the DHCP options set.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2DhcpOptionsTag>[]>;
}

/**
 * The set of arguments for constructing a Ec2DhcpOptions resource.
 */
export interface Ec2DhcpOptionsArgs {
    /**
     * This value is used to complete unqualified DNS hostnames.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The IPv4 addresses of up to four domain name servers, or AmazonProvidedDNS.
     */
    domainNameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The preferred Lease Time for ipV6 address in seconds.
     */
    ipv6AddressPreferredLeaseTime?: pulumi.Input<number>;
    /**
     * The IPv4 addresses of up to four NetBIOS name servers.
     */
    netbiosNameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The NetBIOS node type (1, 2, 4, or 8).
     */
    netbiosNodeType?: pulumi.Input<number>;
    /**
     * The IPv4 addresses of up to four Network Time Protocol (NTP) servers.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Any tags assigned to the DHCP options set.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2DhcpOptionsTag>[]>;
}
