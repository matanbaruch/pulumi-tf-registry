// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MediaconnectGateway extends pulumi.CustomResource {
    /**
     * Get an existing MediaconnectGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MediaconnectGatewayState, opts?: pulumi.CustomResourceOptions): MediaconnectGateway {
        return new MediaconnectGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/mediaconnectGateway:MediaconnectGateway';

    /**
     * Returns true if the given object is an instance of MediaconnectGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MediaconnectGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MediaconnectGateway.__pulumiType;
    }

    /**
     * The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway.
     * These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     */
    public readonly egressCidrBlocks!: pulumi.Output<string[]>;
    /**
     * The Amazon Resource Name (ARN) of the gateway.
     */
    public /*out*/ readonly gatewayArn!: pulumi.Output<string>;
    /**
     * The current status of the gateway.
     */
    public /*out*/ readonly gatewayState!: pulumi.Output<string>;
    /**
     * The name of the gateway. This name can not be modified after the gateway is created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of networks in the gateway.
     */
    public readonly networks!: pulumi.Output<outputs.MediaconnectGatewayNetwork[]>;

    /**
     * Create a MediaconnectGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MediaconnectGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MediaconnectGatewayArgs | MediaconnectGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MediaconnectGatewayState | undefined;
            resourceInputs["egressCidrBlocks"] = state ? state.egressCidrBlocks : undefined;
            resourceInputs["gatewayArn"] = state ? state.gatewayArn : undefined;
            resourceInputs["gatewayState"] = state ? state.gatewayState : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
        } else {
            const args = argsOrState as MediaconnectGatewayArgs | undefined;
            if ((!args || args.egressCidrBlocks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'egressCidrBlocks'");
            }
            if ((!args || args.networks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networks'");
            }
            resourceInputs["egressCidrBlocks"] = args ? args.egressCidrBlocks : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["gatewayArn"] = undefined /*out*/;
            resourceInputs["gatewayState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MediaconnectGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MediaconnectGateway resources.
 */
export interface MediaconnectGatewayState {
    /**
     * The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway.
     * These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     */
    egressCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Amazon Resource Name (ARN) of the gateway.
     */
    gatewayArn?: pulumi.Input<string>;
    /**
     * The current status of the gateway.
     */
    gatewayState?: pulumi.Input<string>;
    /**
     * The name of the gateway. This name can not be modified after the gateway is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of networks in the gateway.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.MediaconnectGatewayNetwork>[]>;
}

/**
 * The set of arguments for constructing a MediaconnectGateway resource.
 */
export interface MediaconnectGatewayArgs {
    /**
     * The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway.
     * These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     */
    egressCidrBlocks: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the gateway. This name can not be modified after the gateway is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of networks in the gateway.
     */
    networks: pulumi.Input<pulumi.Input<inputs.MediaconnectGatewayNetwork>[]>;
}
