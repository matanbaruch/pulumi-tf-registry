// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getS3expressDirectoryBucket(args: GetS3expressDirectoryBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetS3expressDirectoryBucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getS3expressDirectoryBucket:getS3expressDirectoryBucket", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3expressDirectoryBucket.
 */
export interface GetS3expressDirectoryBucketArgs {
    id: string;
}

/**
 * A collection of values returned by getS3expressDirectoryBucket.
 */
export interface GetS3expressDirectoryBucketResult {
    readonly arn: string;
    readonly bucketName: string;
    readonly dataRedundancy: string;
    readonly id: string;
    readonly locationName: string;
}
export function getS3expressDirectoryBucketOutput(args: GetS3expressDirectoryBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3expressDirectoryBucketResult> {
    return pulumi.output(args).apply((a: any) => getS3expressDirectoryBucket(a, opts))
}

/**
 * A collection of arguments for invoking getS3expressDirectoryBucket.
 */
export interface GetS3expressDirectoryBucketOutputArgs {
    id: pulumi.Input<string>;
}
