// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudformationPublicTypeVersion(args: GetCloudformationPublicTypeVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationPublicTypeVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudformationPublicTypeVersion:getCloudformationPublicTypeVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationPublicTypeVersion.
 */
export interface GetCloudformationPublicTypeVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudformationPublicTypeVersion.
 */
export interface GetCloudformationPublicTypeVersionResult {
    readonly arn: string;
    readonly id: string;
    readonly logDeliveryBucket: string;
    readonly publicTypeArn: string;
    readonly publicVersionNumber: string;
    readonly publisherId: string;
    readonly type: string;
    readonly typeName: string;
    readonly typeVersionArn: string;
}
export function getCloudformationPublicTypeVersionOutput(args: GetCloudformationPublicTypeVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationPublicTypeVersionResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationPublicTypeVersion(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationPublicTypeVersion.
 */
export interface GetCloudformationPublicTypeVersionOutputArgs {
    id: pulumi.Input<string>;
}
