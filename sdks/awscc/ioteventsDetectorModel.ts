// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IoteventsDetectorModel extends pulumi.CustomResource {
    /**
     * Get an existing IoteventsDetectorModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IoteventsDetectorModelState, opts?: pulumi.CustomResourceOptions): IoteventsDetectorModel {
        return new IoteventsDetectorModel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ioteventsDetectorModel:IoteventsDetectorModel';

    /**
     * Returns true if the given object is an instance of IoteventsDetectorModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IoteventsDetectorModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IoteventsDetectorModel.__pulumiType;
    }

    /**
     * Information that defines how a detector operates.
     */
    public readonly detectorModelDefinition!: pulumi.Output<outputs.IoteventsDetectorModelDetectorModelDefinition>;
    /**
     * A brief description of the detector model.
     */
    public readonly detectorModelDescription!: pulumi.Output<string>;
    /**
     * The name of the detector model.
     */
    public readonly detectorModelName!: pulumi.Output<string>;
    /**
     * Information about the order in which events are evaluated and how actions are executed.
     */
    public readonly evaluationMethod!: pulumi.Output<string>;
    /**
     * The value used to identify a detector instance. When a device or system sends input, a new detector instance with a
     * unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on
     * this identifying information. This parameter uses a JSON-path expression to select the attribute-value pair in the
     * message payload that is used for identification. To route the message to the correct detector instance, the device must
     * send a message payload that contains the same attribute-value.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The ARN of the role that grants permission to AWS IoT Events to perform its operations.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    public readonly tags!: pulumi.Output<outputs.IoteventsDetectorModelTag[]>;

    /**
     * Create a IoteventsDetectorModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IoteventsDetectorModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IoteventsDetectorModelArgs | IoteventsDetectorModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IoteventsDetectorModelState | undefined;
            resourceInputs["detectorModelDefinition"] = state ? state.detectorModelDefinition : undefined;
            resourceInputs["detectorModelDescription"] = state ? state.detectorModelDescription : undefined;
            resourceInputs["detectorModelName"] = state ? state.detectorModelName : undefined;
            resourceInputs["evaluationMethod"] = state ? state.evaluationMethod : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IoteventsDetectorModelArgs | undefined;
            if ((!args || args.detectorModelDefinition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'detectorModelDefinition'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["detectorModelDefinition"] = args ? args.detectorModelDefinition : undefined;
            resourceInputs["detectorModelDescription"] = args ? args.detectorModelDescription : undefined;
            resourceInputs["detectorModelName"] = args ? args.detectorModelName : undefined;
            resourceInputs["evaluationMethod"] = args ? args.evaluationMethod : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IoteventsDetectorModel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IoteventsDetectorModel resources.
 */
export interface IoteventsDetectorModelState {
    /**
     * Information that defines how a detector operates.
     */
    detectorModelDefinition?: pulumi.Input<inputs.IoteventsDetectorModelDetectorModelDefinition>;
    /**
     * A brief description of the detector model.
     */
    detectorModelDescription?: pulumi.Input<string>;
    /**
     * The name of the detector model.
     */
    detectorModelName?: pulumi.Input<string>;
    /**
     * Information about the order in which events are evaluated and how actions are executed.
     */
    evaluationMethod?: pulumi.Input<string>;
    /**
     * The value used to identify a detector instance. When a device or system sends input, a new detector instance with a
     * unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on
     * this identifying information. This parameter uses a JSON-path expression to select the attribute-value pair in the
     * message payload that is used for identification. To route the message to the correct detector instance, the device must
     * send a message payload that contains the same attribute-value.
     */
    key?: pulumi.Input<string>;
    /**
     * The ARN of the role that grants permission to AWS IoT Events to perform its operations.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IoteventsDetectorModelTag>[]>;
}

/**
 * The set of arguments for constructing a IoteventsDetectorModel resource.
 */
export interface IoteventsDetectorModelArgs {
    /**
     * Information that defines how a detector operates.
     */
    detectorModelDefinition: pulumi.Input<inputs.IoteventsDetectorModelDetectorModelDefinition>;
    /**
     * A brief description of the detector model.
     */
    detectorModelDescription?: pulumi.Input<string>;
    /**
     * The name of the detector model.
     */
    detectorModelName?: pulumi.Input<string>;
    /**
     * Information about the order in which events are evaluated and how actions are executed.
     */
    evaluationMethod?: pulumi.Input<string>;
    /**
     * The value used to identify a detector instance. When a device or system sends input, a new detector instance with a
     * unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on
     * this identifying information. This parameter uses a JSON-path expression to select the attribute-value pair in the
     * message payload that is used for identification. To route the message to the correct detector instance, the device must
     * send a message payload that contains the same attribute-value.
     */
    key?: pulumi.Input<string>;
    /**
     * The ARN of the role that grants permission to AWS IoT Events to perform its operations.
     */
    roleArn: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IoteventsDetectorModelTag>[]>;
}
