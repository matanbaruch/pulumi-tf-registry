// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRolesanywhereTrustAnchor(args: GetRolesanywhereTrustAnchorArgs, opts?: pulumi.InvokeOptions): Promise<GetRolesanywhereTrustAnchorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRolesanywhereTrustAnchor:getRolesanywhereTrustAnchor", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRolesanywhereTrustAnchor.
 */
export interface GetRolesanywhereTrustAnchorArgs {
    id: string;
}

/**
 * A collection of values returned by getRolesanywhereTrustAnchor.
 */
export interface GetRolesanywhereTrustAnchorResult {
    readonly enabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly notificationSettings: outputs.GetRolesanywhereTrustAnchorNotificationSetting[];
    readonly source: outputs.GetRolesanywhereTrustAnchorSource;
    readonly tags: outputs.GetRolesanywhereTrustAnchorTag[];
    readonly trustAnchorArn: string;
    readonly trustAnchorId: string;
}
export function getRolesanywhereTrustAnchorOutput(args: GetRolesanywhereTrustAnchorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRolesanywhereTrustAnchorResult> {
    return pulumi.output(args).apply((a: any) => getRolesanywhereTrustAnchor(a, opts))
}

/**
 * A collection of arguments for invoking getRolesanywhereTrustAnchor.
 */
export interface GetRolesanywhereTrustAnchorOutputArgs {
    id: pulumi.Input<string>;
}
