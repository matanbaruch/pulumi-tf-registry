// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class QuicksightTemplate extends pulumi.CustomResource {
    /**
     * Get an existing QuicksightTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QuicksightTemplateState, opts?: pulumi.CustomResourceOptions): QuicksightTemplate {
        return new QuicksightTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/quicksightTemplate:QuicksightTemplate';

    /**
     * Returns true if the given object is an instance of QuicksightTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is QuicksightTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === QuicksightTemplate.__pulumiType;
    }

    /**
     * <p>The Amazon Resource Name (ARN) of the template.</p>
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly awsAccountId!: pulumi.Output<string>;
    /**
     * <p>Time when this was created.</p>
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * <p>Time when this was last updated.</p>
     */
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<string>;
    /**
     * <p>A display name for the template.</p>
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * <p>A list of resource permissions to be set on the template. </p>
     */
    public readonly permissions!: pulumi.Output<outputs.QuicksightTemplatePermission[]>;
    /**
     * <p>The source entity of the template.</p>
     */
    public readonly sourceEntity!: pulumi.Output<outputs.QuicksightTemplateSourceEntity>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>
     */
    public readonly tags!: pulumi.Output<outputs.QuicksightTemplateTag[]>;
    public readonly templateId!: pulumi.Output<string>;
    /**
     * <p>A version of a template.</p>
     */
    public /*out*/ readonly version!: pulumi.Output<outputs.QuicksightTemplateVersion>;
    /**
     * <p>A description of the current template version being created. This API operation creates the first version of the
     * template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template
     * maintains a description of the version in the <code>VersionDescription</code> field.</p>
     */
    public readonly versionDescription!: pulumi.Output<string>;

    /**
     * Create a QuicksightTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QuicksightTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QuicksightTemplateArgs | QuicksightTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QuicksightTemplateState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["lastUpdatedTime"] = state ? state.lastUpdatedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["sourceEntity"] = state ? state.sourceEntity : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionDescription"] = state ? state.versionDescription : undefined;
        } else {
            const args = argsOrState as QuicksightTemplateArgs | undefined;
            if ((!args || args.awsAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsAccountId'");
            }
            if ((!args || args.sourceEntity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceEntity'");
            }
            if ((!args || args.templateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateId'");
            }
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["sourceEntity"] = args ? args.sourceEntity : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(QuicksightTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering QuicksightTemplate resources.
 */
export interface QuicksightTemplateState {
    /**
     * <p>The Amazon Resource Name (ARN) of the template.</p>
     */
    arn?: pulumi.Input<string>;
    awsAccountId?: pulumi.Input<string>;
    /**
     * <p>Time when this was created.</p>
     */
    createdTime?: pulumi.Input<string>;
    /**
     * <p>Time when this was last updated.</p>
     */
    lastUpdatedTime?: pulumi.Input<string>;
    /**
     * <p>A display name for the template.</p>
     */
    name?: pulumi.Input<string>;
    /**
     * <p>A list of resource permissions to be set on the template. </p>
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.QuicksightTemplatePermission>[]>;
    /**
     * <p>The source entity of the template.</p>
     */
    sourceEntity?: pulumi.Input<inputs.QuicksightTemplateSourceEntity>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.QuicksightTemplateTag>[]>;
    templateId?: pulumi.Input<string>;
    /**
     * <p>A version of a template.</p>
     */
    version?: pulumi.Input<inputs.QuicksightTemplateVersion>;
    /**
     * <p>A description of the current template version being created. This API operation creates the first version of the
     * template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template
     * maintains a description of the version in the <code>VersionDescription</code> field.</p>
     */
    versionDescription?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a QuicksightTemplate resource.
 */
export interface QuicksightTemplateArgs {
    awsAccountId: pulumi.Input<string>;
    /**
     * <p>A display name for the template.</p>
     */
    name?: pulumi.Input<string>;
    /**
     * <p>A list of resource permissions to be set on the template. </p>
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.QuicksightTemplatePermission>[]>;
    /**
     * <p>The source entity of the template.</p>
     */
    sourceEntity: pulumi.Input<inputs.QuicksightTemplateSourceEntity>;
    /**
     * <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.QuicksightTemplateTag>[]>;
    templateId: pulumi.Input<string>;
    /**
     * <p>A description of the current template version being created. This API operation creates the first version of the
     * template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template
     * maintains a description of the version in the <code>VersionDescription</code> field.</p>
     */
    versionDescription?: pulumi.Input<string>;
}
