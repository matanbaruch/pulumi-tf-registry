// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGameliftFleet(args: GetGameliftFleetArgs, opts?: pulumi.InvokeOptions): Promise<GetGameliftFleetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGameliftFleet:getGameliftFleet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGameliftFleet.
 */
export interface GetGameliftFleetArgs {
    id: string;
}

/**
 * A collection of values returned by getGameliftFleet.
 */
export interface GetGameliftFleetResult {
    readonly anywhereConfiguration: outputs.GetGameliftFleetAnywhereConfiguration;
    readonly applyCapacity: string;
    readonly buildId: string;
    readonly certificateConfiguration: outputs.GetGameliftFleetCertificateConfiguration;
    readonly computeType: string;
    readonly containerGroupsConfiguration: outputs.GetGameliftFleetContainerGroupsConfiguration;
    readonly description: string;
    readonly desiredEc2Instances: number;
    readonly ec2InboundPermissions: outputs.GetGameliftFleetEc2InboundPermission[];
    readonly ec2InstanceType: string;
    readonly fleetId: string;
    readonly fleetType: string;
    readonly id: string;
    readonly instanceRoleArn: string;
    readonly instanceRoleCredentialsProvider: string;
    readonly locations: outputs.GetGameliftFleetLocation[];
    readonly logPaths: string[];
    readonly maxSize: number;
    readonly metricGroups: string[];
    readonly minSize: number;
    readonly name: string;
    readonly newGameSessionProtectionPolicy: string;
    readonly peerVpcAwsAccountId: string;
    readonly peerVpcId: string;
    readonly resourceCreationLimitPolicy: outputs.GetGameliftFleetResourceCreationLimitPolicy;
    readonly runtimeConfiguration: outputs.GetGameliftFleetRuntimeConfiguration;
    readonly scalingPolicies: outputs.GetGameliftFleetScalingPolicy[];
    readonly scriptId: string;
    readonly serverLaunchParameters: string;
    readonly serverLaunchPath: string;
}
export function getGameliftFleetOutput(args: GetGameliftFleetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGameliftFleetResult> {
    return pulumi.output(args).apply((a: any) => getGameliftFleet(a, opts))
}

/**
 * A collection of arguments for invoking getGameliftFleet.
 */
export interface GetGameliftFleetOutputArgs {
    id: pulumi.Input<string>;
}
