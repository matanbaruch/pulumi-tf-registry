// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLightsailLoadBalancer(args: GetLightsailLoadBalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetLightsailLoadBalancerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLightsailLoadBalancer:getLightsailLoadBalancer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLightsailLoadBalancer.
 */
export interface GetLightsailLoadBalancerArgs {
    id: string;
}

/**
 * A collection of values returned by getLightsailLoadBalancer.
 */
export interface GetLightsailLoadBalancerResult {
    readonly attachedInstances: string[];
    readonly healthCheckPath: string;
    readonly id: string;
    readonly instancePort: number;
    readonly ipAddressType: string;
    readonly loadBalancerArn: string;
    readonly loadBalancerName: string;
    readonly sessionStickinessEnabled: boolean;
    readonly sessionStickinessLbCookieDurationSeconds: string;
    readonly tags: outputs.GetLightsailLoadBalancerTag[];
    readonly tlsPolicyName: string;
}
export function getLightsailLoadBalancerOutput(args: GetLightsailLoadBalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLightsailLoadBalancerResult> {
    return pulumi.output(args).apply((a: any) => getLightsailLoadBalancer(a, opts))
}

/**
 * A collection of arguments for invoking getLightsailLoadBalancer.
 */
export interface GetLightsailLoadBalancerOutputArgs {
    id: pulumi.Input<string>;
}
