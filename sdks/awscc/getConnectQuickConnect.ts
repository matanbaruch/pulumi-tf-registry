// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectQuickConnect(args: GetConnectQuickConnectArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectQuickConnectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConnectQuickConnect:getConnectQuickConnect", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectQuickConnect.
 */
export interface GetConnectQuickConnectArgs {
    id: string;
}

/**
 * A collection of values returned by getConnectQuickConnect.
 */
export interface GetConnectQuickConnectResult {
    readonly description: string;
    readonly id: string;
    readonly instanceArn: string;
    readonly name: string;
    readonly quickConnectArn: string;
    readonly quickConnectConfig: outputs.GetConnectQuickConnectQuickConnectConfig;
    readonly quickConnectType: string;
    readonly tags: outputs.GetConnectQuickConnectTag[];
}
export function getConnectQuickConnectOutput(args: GetConnectQuickConnectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectQuickConnectResult> {
    return pulumi.output(args).apply((a: any) => getConnectQuickConnect(a, opts))
}

/**
 * A collection of arguments for invoking getConnectQuickConnect.
 */
export interface GetConnectQuickConnectOutputArgs {
    id: pulumi.Input<string>;
}
