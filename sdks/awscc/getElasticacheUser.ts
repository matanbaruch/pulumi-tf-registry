// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticacheUser(args: GetElasticacheUserArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticacheUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getElasticacheUser:getElasticacheUser", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticacheUser.
 */
export interface GetElasticacheUserArgs {
    id: string;
}

/**
 * A collection of values returned by getElasticacheUser.
 */
export interface GetElasticacheUserResult {
    readonly accessString: string;
    readonly arn: string;
    readonly authenticationMode: outputs.GetElasticacheUserAuthenticationMode;
    readonly engine: string;
    readonly id: string;
    readonly noPasswordRequired: boolean;
    readonly passwords: string[];
    readonly status: string;
    readonly tags: outputs.GetElasticacheUserTag[];
    readonly userId: string;
    readonly userName: string;
}
export function getElasticacheUserOutput(args: GetElasticacheUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticacheUserResult> {
    return pulumi.output(args).apply((a: any) => getElasticacheUser(a, opts))
}

/**
 * A collection of arguments for invoking getElasticacheUser.
 */
export interface GetElasticacheUserOutputArgs {
    id: pulumi.Input<string>;
}
