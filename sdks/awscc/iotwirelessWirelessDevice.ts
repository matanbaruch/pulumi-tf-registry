// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotwirelessWirelessDevice extends pulumi.CustomResource {
    /**
     * Get an existing IotwirelessWirelessDevice resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotwirelessWirelessDeviceState, opts?: pulumi.CustomResourceOptions): IotwirelessWirelessDevice {
        return new IotwirelessWirelessDevice(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotwirelessWirelessDevice:IotwirelessWirelessDevice';

    /**
     * Returns true if the given object is an instance of IotwirelessWirelessDevice.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotwirelessWirelessDevice {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotwirelessWirelessDevice.__pulumiType;
    }

    /**
     * Wireless device arn. Returned after successful create.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Wireless device description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Wireless device destination name
     */
    public readonly destinationName!: pulumi.Output<string>;
    /**
     * The date and time when the most recent uplink was received.
     */
    public readonly lastUplinkReceivedAt!: pulumi.Output<string>;
    /**
     * The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
     */
    public readonly loRaWan!: pulumi.Output<outputs.IotwirelessWirelessDeviceLoRaWan>;
    /**
     * Wireless device name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
     */
    public readonly positioning!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are
     * passed.
     */
    public readonly tags!: pulumi.Output<outputs.IotwirelessWirelessDeviceTag[]>;
    /**
     * Thing arn. Passed into update to associate Thing with Wireless device.
     */
    public readonly thingArn!: pulumi.Output<string>;
    /**
     * Thing Arn. If there is a Thing created, this can be returned with a Get call.
     */
    public /*out*/ readonly thingName!: pulumi.Output<string>;
    /**
     * Wireless device type, currently only Sidewalk and LoRa
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Wireless device Id. Returned after successful create.
     */
    public /*out*/ readonly wirelessDeviceId!: pulumi.Output<string>;

    /**
     * Create a IotwirelessWirelessDevice resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotwirelessWirelessDeviceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotwirelessWirelessDeviceArgs | IotwirelessWirelessDeviceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotwirelessWirelessDeviceState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationName"] = state ? state.destinationName : undefined;
            resourceInputs["lastUplinkReceivedAt"] = state ? state.lastUplinkReceivedAt : undefined;
            resourceInputs["loRaWan"] = state ? state.loRaWan : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["positioning"] = state ? state.positioning : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["thingArn"] = state ? state.thingArn : undefined;
            resourceInputs["thingName"] = state ? state.thingName : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["wirelessDeviceId"] = state ? state.wirelessDeviceId : undefined;
        } else {
            const args = argsOrState as IotwirelessWirelessDeviceArgs | undefined;
            if ((!args || args.destinationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationName"] = args ? args.destinationName : undefined;
            resourceInputs["lastUplinkReceivedAt"] = args ? args.lastUplinkReceivedAt : undefined;
            resourceInputs["loRaWan"] = args ? args.loRaWan : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["positioning"] = args ? args.positioning : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["thingArn"] = args ? args.thingArn : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["thingName"] = undefined /*out*/;
            resourceInputs["wirelessDeviceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotwirelessWirelessDevice.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotwirelessWirelessDevice resources.
 */
export interface IotwirelessWirelessDeviceState {
    /**
     * Wireless device arn. Returned after successful create.
     */
    arn?: pulumi.Input<string>;
    /**
     * Wireless device description
     */
    description?: pulumi.Input<string>;
    /**
     * Wireless device destination name
     */
    destinationName?: pulumi.Input<string>;
    /**
     * The date and time when the most recent uplink was received.
     */
    lastUplinkReceivedAt?: pulumi.Input<string>;
    /**
     * The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
     */
    loRaWan?: pulumi.Input<inputs.IotwirelessWirelessDeviceLoRaWan>;
    /**
     * Wireless device name
     */
    name?: pulumi.Input<string>;
    /**
     * FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
     */
    positioning?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are
     * passed.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessWirelessDeviceTag>[]>;
    /**
     * Thing arn. Passed into update to associate Thing with Wireless device.
     */
    thingArn?: pulumi.Input<string>;
    /**
     * Thing Arn. If there is a Thing created, this can be returned with a Get call.
     */
    thingName?: pulumi.Input<string>;
    /**
     * Wireless device type, currently only Sidewalk and LoRa
     */
    type?: pulumi.Input<string>;
    /**
     * Wireless device Id. Returned after successful create.
     */
    wirelessDeviceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IotwirelessWirelessDevice resource.
 */
export interface IotwirelessWirelessDeviceArgs {
    /**
     * Wireless device description
     */
    description?: pulumi.Input<string>;
    /**
     * Wireless device destination name
     */
    destinationName: pulumi.Input<string>;
    /**
     * The date and time when the most recent uplink was received.
     */
    lastUplinkReceivedAt?: pulumi.Input<string>;
    /**
     * The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
     */
    loRaWan?: pulumi.Input<inputs.IotwirelessWirelessDeviceLoRaWan>;
    /**
     * Wireless device name
     */
    name?: pulumi.Input<string>;
    /**
     * FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
     */
    positioning?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are
     * passed.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessWirelessDeviceTag>[]>;
    /**
     * Thing arn. Passed into update to associate Thing with Wireless device.
     */
    thingArn?: pulumi.Input<string>;
    /**
     * Wireless device type, currently only Sidewalk and LoRa
     */
    type: pulumi.Input<string>;
}
