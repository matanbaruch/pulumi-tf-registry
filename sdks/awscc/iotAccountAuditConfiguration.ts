// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotAccountAuditConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing IotAccountAuditConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotAccountAuditConfigurationState, opts?: pulumi.CustomResourceOptions): IotAccountAuditConfiguration {
        return new IotAccountAuditConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotAccountAuditConfiguration:IotAccountAuditConfiguration';

    /**
     * Returns true if the given object is an instance of IotAccountAuditConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotAccountAuditConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotAccountAuditConfiguration.__pulumiType;
    }

    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Specifies which audit checks are enabled and disabled for this account.
     */
    public readonly auditCheckConfigurations!: pulumi.Output<outputs.IotAccountAuditConfigurationAuditCheckConfigurations>;
    /**
     * Information about the targets to which audit notifications are sent.
     */
    public readonly auditNotificationTargetConfigurations!: pulumi.Output<outputs.IotAccountAuditConfigurationAuditNotificationTargetConfigurations>;
    /**
     * The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates
     * and other items as required when performing an audit.
     */
    public readonly roleArn!: pulumi.Output<string>;

    /**
     * Create a IotAccountAuditConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotAccountAuditConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotAccountAuditConfigurationArgs | IotAccountAuditConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotAccountAuditConfigurationState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["auditCheckConfigurations"] = state ? state.auditCheckConfigurations : undefined;
            resourceInputs["auditNotificationTargetConfigurations"] = state ? state.auditNotificationTargetConfigurations : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
        } else {
            const args = argsOrState as IotAccountAuditConfigurationArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.auditCheckConfigurations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'auditCheckConfigurations'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["auditCheckConfigurations"] = args ? args.auditCheckConfigurations : undefined;
            resourceInputs["auditNotificationTargetConfigurations"] = args ? args.auditNotificationTargetConfigurations : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotAccountAuditConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotAccountAuditConfiguration resources.
 */
export interface IotAccountAuditConfigurationState {
    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     */
    accountId?: pulumi.Input<string>;
    /**
     * Specifies which audit checks are enabled and disabled for this account.
     */
    auditCheckConfigurations?: pulumi.Input<inputs.IotAccountAuditConfigurationAuditCheckConfigurations>;
    /**
     * Information about the targets to which audit notifications are sent.
     */
    auditNotificationTargetConfigurations?: pulumi.Input<inputs.IotAccountAuditConfigurationAuditNotificationTargetConfigurations>;
    /**
     * The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates
     * and other items as required when performing an audit.
     */
    roleArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IotAccountAuditConfiguration resource.
 */
export interface IotAccountAuditConfigurationArgs {
    /**
     * Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
     */
    accountId: pulumi.Input<string>;
    /**
     * Specifies which audit checks are enabled and disabled for this account.
     */
    auditCheckConfigurations: pulumi.Input<inputs.IotAccountAuditConfigurationAuditCheckConfigurations>;
    /**
     * Information about the targets to which audit notifications are sent.
     */
    auditNotificationTargetConfigurations?: pulumi.Input<inputs.IotAccountAuditConfigurationAuditNotificationTargetConfigurations>;
    /**
     * The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates
     * and other items as required when performing an audit.
     */
    roleArn: pulumi.Input<string>;
}
