// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Wafv2IpSet extends pulumi.CustomResource {
    /**
     * Get an existing Wafv2IpSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Wafv2IpSetState, opts?: pulumi.CustomResourceOptions): Wafv2IpSet {
        return new Wafv2IpSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/wafv2IpSet:Wafv2IpSet';

    /**
     * Returns true if the given object is an instance of Wafv2IpSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Wafv2IpSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Wafv2IpSet.__pulumiType;
    }

    /**
     * List of IPAddresses.
     */
    public readonly addresses!: pulumi.Output<string[]>;
    /**
     * ARN of the WAF entity.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Description of the entity.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Type of addresses in the IPSet, use IPV4 for IPV4 IP addresses, IPV6 for IPV6 address.
     */
    public readonly ipAddressVersion!: pulumi.Output<string>;
    /**
     * Id of the IPSet
     */
    public /*out*/ readonly ipSetId!: pulumi.Output<string>;
    /**
     * Name of the IPSet.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Use CLOUDFRONT for CloudFront IPSet, use REGIONAL for Application Load Balancer and API Gateway.
     */
    public readonly scope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.Wafv2IpSetTag[]>;

    /**
     * Create a Wafv2IpSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Wafv2IpSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Wafv2IpSetArgs | Wafv2IpSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Wafv2IpSetState | undefined;
            resourceInputs["addresses"] = state ? state.addresses : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipAddressVersion"] = state ? state.ipAddressVersion : undefined;
            resourceInputs["ipSetId"] = state ? state.ipSetId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Wafv2IpSetArgs | undefined;
            if ((!args || args.addresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addresses'");
            }
            if ((!args || args.ipAddressVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAddressVersion'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["addresses"] = args ? args.addresses : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipAddressVersion"] = args ? args.ipAddressVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["ipSetId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Wafv2IpSet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Wafv2IpSet resources.
 */
export interface Wafv2IpSetState {
    /**
     * List of IPAddresses.
     */
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the WAF entity.
     */
    arn?: pulumi.Input<string>;
    /**
     * Description of the entity.
     */
    description?: pulumi.Input<string>;
    /**
     * Type of addresses in the IPSet, use IPV4 for IPV4 IP addresses, IPV6 for IPV6 address.
     */
    ipAddressVersion?: pulumi.Input<string>;
    /**
     * Id of the IPSet
     */
    ipSetId?: pulumi.Input<string>;
    /**
     * Name of the IPSet.
     */
    name?: pulumi.Input<string>;
    /**
     * Use CLOUDFRONT for CloudFront IPSet, use REGIONAL for Application Load Balancer and API Gateway.
     */
    scope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.Wafv2IpSetTag>[]>;
}

/**
 * The set of arguments for constructing a Wafv2IpSet resource.
 */
export interface Wafv2IpSetArgs {
    /**
     * List of IPAddresses.
     */
    addresses: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the entity.
     */
    description?: pulumi.Input<string>;
    /**
     * Type of addresses in the IPSet, use IPV4 for IPV4 IP addresses, IPV6 for IPV6 address.
     */
    ipAddressVersion: pulumi.Input<string>;
    /**
     * Name of the IPSet.
     */
    name?: pulumi.Input<string>;
    /**
     * Use CLOUDFRONT for CloudFront IPSet, use REGIONAL for Application Load Balancer and API Gateway.
     */
    scope: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.Wafv2IpSetTag>[]>;
}
