// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConnectSecurityProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConnectSecurityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectSecurityProfileState, opts?: pulumi.CustomResourceOptions): ConnectSecurityProfile {
        return new ConnectSecurityProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/connectSecurityProfile:ConnectSecurityProfile';

    /**
     * Returns true if the given object is an instance of ConnectSecurityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectSecurityProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectSecurityProfile.__pulumiType;
    }

    /**
     * The identifier of the hierarchy group that a security profile uses to restrict access to resources in Amazon Connect.
     */
    public readonly allowedAccessControlHierarchyGroupId!: pulumi.Output<string>;
    /**
     * The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
     */
    public readonly allowedAccessControlTags!: pulumi.Output<outputs.ConnectSecurityProfileAllowedAccessControlTag[]>;
    /**
     * A list of third-party applications that the security profile will give access to.
     */
    public readonly applications!: pulumi.Output<outputs.ConnectSecurityProfileApplication[]>;
    /**
     * The description of the security profile.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The list of resources that a security profile applies hierarchy restrictions to in Amazon Connect.
     */
    public readonly hierarchyRestrictedResources!: pulumi.Output<string[]>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * The AWS Region where this resource was last modified.
     */
    public /*out*/ readonly lastModifiedRegion!: pulumi.Output<string>;
    /**
     * The timestamp when this resource was last modified.
     */
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<number>;
    /**
     * Permissions assigned to the security profile.
     */
    public readonly permissions!: pulumi.Output<string[]>;
    /**
     * The Amazon Resource Name (ARN) for the security profile.
     */
    public /*out*/ readonly securityProfileArn!: pulumi.Output<string>;
    /**
     * The name of the security profile.
     */
    public readonly securityProfileName!: pulumi.Output<string>;
    /**
     * The list of resources that a security profile applies tag restrictions to in Amazon Connect.
     */
    public readonly tagRestrictedResources!: pulumi.Output<string[]>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    public readonly tags!: pulumi.Output<outputs.ConnectSecurityProfileTag[]>;

    /**
     * Create a ConnectSecurityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectSecurityProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectSecurityProfileArgs | ConnectSecurityProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectSecurityProfileState | undefined;
            resourceInputs["allowedAccessControlHierarchyGroupId"] = state ? state.allowedAccessControlHierarchyGroupId : undefined;
            resourceInputs["allowedAccessControlTags"] = state ? state.allowedAccessControlTags : undefined;
            resourceInputs["applications"] = state ? state.applications : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hierarchyRestrictedResources"] = state ? state.hierarchyRestrictedResources : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["lastModifiedRegion"] = state ? state.lastModifiedRegion : undefined;
            resourceInputs["lastModifiedTime"] = state ? state.lastModifiedTime : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["securityProfileArn"] = state ? state.securityProfileArn : undefined;
            resourceInputs["securityProfileName"] = state ? state.securityProfileName : undefined;
            resourceInputs["tagRestrictedResources"] = state ? state.tagRestrictedResources : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ConnectSecurityProfileArgs | undefined;
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            if ((!args || args.securityProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityProfileName'");
            }
            resourceInputs["allowedAccessControlHierarchyGroupId"] = args ? args.allowedAccessControlHierarchyGroupId : undefined;
            resourceInputs["allowedAccessControlTags"] = args ? args.allowedAccessControlTags : undefined;
            resourceInputs["applications"] = args ? args.applications : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hierarchyRestrictedResources"] = args ? args.hierarchyRestrictedResources : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["securityProfileName"] = args ? args.securityProfileName : undefined;
            resourceInputs["tagRestrictedResources"] = args ? args.tagRestrictedResources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["lastModifiedRegion"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["securityProfileArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectSecurityProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConnectSecurityProfile resources.
 */
export interface ConnectSecurityProfileState {
    /**
     * The identifier of the hierarchy group that a security profile uses to restrict access to resources in Amazon Connect.
     */
    allowedAccessControlHierarchyGroupId?: pulumi.Input<string>;
    /**
     * The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
     */
    allowedAccessControlTags?: pulumi.Input<pulumi.Input<inputs.ConnectSecurityProfileAllowedAccessControlTag>[]>;
    /**
     * A list of third-party applications that the security profile will give access to.
     */
    applications?: pulumi.Input<pulumi.Input<inputs.ConnectSecurityProfileApplication>[]>;
    /**
     * The description of the security profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of resources that a security profile applies hierarchy restrictions to in Amazon Connect.
     */
    hierarchyRestrictedResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * The AWS Region where this resource was last modified.
     */
    lastModifiedRegion?: pulumi.Input<string>;
    /**
     * The timestamp when this resource was last modified.
     */
    lastModifiedTime?: pulumi.Input<number>;
    /**
     * Permissions assigned to the security profile.
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Amazon Resource Name (ARN) for the security profile.
     */
    securityProfileArn?: pulumi.Input<string>;
    /**
     * The name of the security profile.
     */
    securityProfileName?: pulumi.Input<string>;
    /**
     * The list of resources that a security profile applies tag restrictions to in Amazon Connect.
     */
    tagRestrictedResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectSecurityProfileTag>[]>;
}

/**
 * The set of arguments for constructing a ConnectSecurityProfile resource.
 */
export interface ConnectSecurityProfileArgs {
    /**
     * The identifier of the hierarchy group that a security profile uses to restrict access to resources in Amazon Connect.
     */
    allowedAccessControlHierarchyGroupId?: pulumi.Input<string>;
    /**
     * The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
     */
    allowedAccessControlTags?: pulumi.Input<pulumi.Input<inputs.ConnectSecurityProfileAllowedAccessControlTag>[]>;
    /**
     * A list of third-party applications that the security profile will give access to.
     */
    applications?: pulumi.Input<pulumi.Input<inputs.ConnectSecurityProfileApplication>[]>;
    /**
     * The description of the security profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of resources that a security profile applies hierarchy restrictions to in Amazon Connect.
     */
    hierarchyRestrictedResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * Permissions assigned to the security profile.
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the security profile.
     */
    securityProfileName: pulumi.Input<string>;
    /**
     * The list of resources that a security profile applies tag restrictions to in Amazon Connect.
     */
    tagRestrictedResources?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectSecurityProfileTag>[]>;
}
