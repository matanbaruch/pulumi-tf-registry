// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNeptuneDbCluster(args: GetNeptuneDbClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetNeptuneDbClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getNeptuneDbCluster:getNeptuneDbCluster", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNeptuneDbCluster.
 */
export interface GetNeptuneDbClusterArgs {
    id: string;
}

/**
 * A collection of values returned by getNeptuneDbCluster.
 */
export interface GetNeptuneDbClusterResult {
    readonly associatedRoles: outputs.GetNeptuneDbClusterAssociatedRole[];
    readonly availabilityZones: string[];
    readonly backupRetentionPeriod: number;
    readonly clusterResourceId: string;
    readonly copyTagsToSnapshot: boolean;
    readonly dbClusterIdentifier: string;
    readonly dbClusterParameterGroupName: string;
    readonly dbInstanceParameterGroupName: string;
    readonly dbPort: number;
    readonly dbSubnetGroupName: string;
    readonly deletionProtection: boolean;
    readonly enableCloudwatchLogsExports: string[];
    readonly endpoint: string;
    readonly engineVersion: string;
    readonly iamAuthEnabled: boolean;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly port: string;
    readonly preferredBackupWindow: string;
    readonly preferredMaintenanceWindow: string;
    readonly readEndpoint: string;
    readonly restoreToTime: string;
    readonly restoreType: string;
    readonly serverlessScalingConfiguration: outputs.GetNeptuneDbClusterServerlessScalingConfiguration;
    readonly snapshotIdentifier: string;
    readonly sourceDbClusterIdentifier: string;
    readonly storageEncrypted: boolean;
    readonly tags: outputs.GetNeptuneDbClusterTag[];
    readonly useLatestRestorableTime: boolean;
    readonly vpcSecurityGroupIds: string[];
}
export function getNeptuneDbClusterOutput(args: GetNeptuneDbClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNeptuneDbClusterResult> {
    return pulumi.output(args).apply((a: any) => getNeptuneDbCluster(a, opts))
}

/**
 * A collection of arguments for invoking getNeptuneDbCluster.
 */
export interface GetNeptuneDbClusterOutputArgs {
    id: pulumi.Input<string>;
}
