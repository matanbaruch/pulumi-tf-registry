// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDeadlineMonitor(args: GetDeadlineMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetDeadlineMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDeadlineMonitor:getDeadlineMonitor", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeadlineMonitor.
 */
export interface GetDeadlineMonitorArgs {
    id: string;
}

/**
 * A collection of values returned by getDeadlineMonitor.
 */
export interface GetDeadlineMonitorResult {
    readonly arn: string;
    readonly displayName: string;
    readonly id: string;
    readonly identityCenterApplicationArn: string;
    readonly identityCenterInstanceArn: string;
    readonly monitorId: string;
    readonly roleArn: string;
    readonly subdomain: string;
    readonly url: string;
}
export function getDeadlineMonitorOutput(args: GetDeadlineMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeadlineMonitorResult> {
    return pulumi.output(args).apply((a: any) => getDeadlineMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getDeadlineMonitor.
 */
export interface GetDeadlineMonitorOutputArgs {
    id: pulumi.Input<string>;
}
