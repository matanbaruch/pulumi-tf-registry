// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConfigConformancePack extends pulumi.CustomResource {
    /**
     * Get an existing ConfigConformancePack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigConformancePackState, opts?: pulumi.CustomResourceOptions): ConfigConformancePack {
        return new ConfigConformancePack(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/configConformancePack:ConfigConformancePack';

    /**
     * Returns true if the given object is an instance of ConfigConformancePack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigConformancePack {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigConformancePack.__pulumiType;
    }

    /**
     * A list of ConformancePackInputParameter objects.
     */
    public readonly conformancePackInputParameters!: pulumi.Output<outputs.ConfigConformancePackConformancePackInputParameter[]>;
    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     */
    public readonly conformancePackName!: pulumi.Output<string>;
    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     */
    public readonly deliveryS3Bucket!: pulumi.Output<string>;
    /**
     * The prefix for delivery S3 bucket.
     */
    public readonly deliveryS3KeyPrefix!: pulumi.Output<string>;
    /**
     * A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri
     * fields.
     */
    public readonly templateBody!: pulumi.Output<string>;
    /**
     * Location of file containing the template body which points to the conformance pack template that is located in an Amazon
     * S3 bucket. You can only specify one of the template body or template S3Uri fields.
     */
    public readonly templateS3Uri!: pulumi.Output<string>;
    /**
     * The TemplateSSMDocumentDetails object contains the name of the SSM document and the version of the SSM document.
     */
    public readonly templateSsmDocumentDetails!: pulumi.Output<outputs.ConfigConformancePackTemplateSsmDocumentDetails>;

    /**
     * Create a ConfigConformancePack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigConformancePackArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigConformancePackArgs | ConfigConformancePackState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigConformancePackState | undefined;
            resourceInputs["conformancePackInputParameters"] = state ? state.conformancePackInputParameters : undefined;
            resourceInputs["conformancePackName"] = state ? state.conformancePackName : undefined;
            resourceInputs["deliveryS3Bucket"] = state ? state.deliveryS3Bucket : undefined;
            resourceInputs["deliveryS3KeyPrefix"] = state ? state.deliveryS3KeyPrefix : undefined;
            resourceInputs["templateBody"] = state ? state.templateBody : undefined;
            resourceInputs["templateS3Uri"] = state ? state.templateS3Uri : undefined;
            resourceInputs["templateSsmDocumentDetails"] = state ? state.templateSsmDocumentDetails : undefined;
        } else {
            const args = argsOrState as ConfigConformancePackArgs | undefined;
            if ((!args || args.conformancePackName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'conformancePackName'");
            }
            resourceInputs["conformancePackInputParameters"] = args ? args.conformancePackInputParameters : undefined;
            resourceInputs["conformancePackName"] = args ? args.conformancePackName : undefined;
            resourceInputs["deliveryS3Bucket"] = args ? args.deliveryS3Bucket : undefined;
            resourceInputs["deliveryS3KeyPrefix"] = args ? args.deliveryS3KeyPrefix : undefined;
            resourceInputs["templateBody"] = args ? args.templateBody : undefined;
            resourceInputs["templateS3Uri"] = args ? args.templateS3Uri : undefined;
            resourceInputs["templateSsmDocumentDetails"] = args ? args.templateSsmDocumentDetails : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConfigConformancePack.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConfigConformancePack resources.
 */
export interface ConfigConformancePackState {
    /**
     * A list of ConformancePackInputParameter objects.
     */
    conformancePackInputParameters?: pulumi.Input<pulumi.Input<inputs.ConfigConformancePackConformancePackInputParameter>[]>;
    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     */
    conformancePackName?: pulumi.Input<string>;
    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     */
    deliveryS3Bucket?: pulumi.Input<string>;
    /**
     * The prefix for delivery S3 bucket.
     */
    deliveryS3KeyPrefix?: pulumi.Input<string>;
    /**
     * A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri
     * fields.
     */
    templateBody?: pulumi.Input<string>;
    /**
     * Location of file containing the template body which points to the conformance pack template that is located in an Amazon
     * S3 bucket. You can only specify one of the template body or template S3Uri fields.
     */
    templateS3Uri?: pulumi.Input<string>;
    /**
     * The TemplateSSMDocumentDetails object contains the name of the SSM document and the version of the SSM document.
     */
    templateSsmDocumentDetails?: pulumi.Input<inputs.ConfigConformancePackTemplateSsmDocumentDetails>;
}

/**
 * The set of arguments for constructing a ConfigConformancePack resource.
 */
export interface ConfigConformancePackArgs {
    /**
     * A list of ConformancePackInputParameter objects.
     */
    conformancePackInputParameters?: pulumi.Input<pulumi.Input<inputs.ConfigConformancePackConformancePackInputParameter>[]>;
    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     */
    conformancePackName: pulumi.Input<string>;
    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     */
    deliveryS3Bucket?: pulumi.Input<string>;
    /**
     * The prefix for delivery S3 bucket.
     */
    deliveryS3KeyPrefix?: pulumi.Input<string>;
    /**
     * A string containing full conformance pack template body. You can only specify one of the template body or template S3Uri
     * fields.
     */
    templateBody?: pulumi.Input<string>;
    /**
     * Location of file containing the template body which points to the conformance pack template that is located in an Amazon
     * S3 bucket. You can only specify one of the template body or template S3Uri fields.
     */
    templateS3Uri?: pulumi.Input<string>;
    /**
     * The TemplateSSMDocumentDetails object contains the name of the SSM document and the version of the SSM document.
     */
    templateSsmDocumentDetails?: pulumi.Input<inputs.ConfigConformancePackTemplateSsmDocumentDetails>;
}
