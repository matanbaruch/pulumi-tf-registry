// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SagemakerModelQualityJobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing SagemakerModelQualityJobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagemakerModelQualityJobDefinitionState, opts?: pulumi.CustomResourceOptions): SagemakerModelQualityJobDefinition {
        return new SagemakerModelQualityJobDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/sagemakerModelQualityJobDefinition:SagemakerModelQualityJobDefinition';

    /**
     * Returns true if the given object is an instance of SagemakerModelQualityJobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagemakerModelQualityJobDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagemakerModelQualityJobDefinition.__pulumiType;
    }

    /**
     * The time at which the job definition was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The name of the endpoint used to run the monitoring job.
     */
    public readonly endpointName!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of job definition.
     */
    public /*out*/ readonly jobDefinitionArn!: pulumi.Output<string>;
    /**
     * The name of the job definition.
     */
    public readonly jobDefinitionName!: pulumi.Output<string>;
    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    public readonly jobResources!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionJobResources>;
    /**
     * Container image configuration object for the monitoring job.
     */
    public readonly modelQualityAppSpecification!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionModelQualityAppSpecification>;
    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    public readonly modelQualityBaselineConfig!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionModelQualityBaselineConfig>;
    /**
     * The inputs for a monitoring job.
     */
    public readonly modelQualityJobInput!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionModelQualityJobInput>;
    /**
     * The output configuration for monitoring jobs.
     */
    public readonly modelQualityJobOutputConfig!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionModelQualityJobOutputConfig>;
    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and
     * outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    public readonly networkConfig!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionNetworkConfig>;
    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    public readonly stoppingCondition!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionStoppingCondition>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.SagemakerModelQualityJobDefinitionTag[]>;

    /**
     * Create a SagemakerModelQualityJobDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagemakerModelQualityJobDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagemakerModelQualityJobDefinitionArgs | SagemakerModelQualityJobDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagemakerModelQualityJobDefinitionState | undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["endpointName"] = state ? state.endpointName : undefined;
            resourceInputs["jobDefinitionArn"] = state ? state.jobDefinitionArn : undefined;
            resourceInputs["jobDefinitionName"] = state ? state.jobDefinitionName : undefined;
            resourceInputs["jobResources"] = state ? state.jobResources : undefined;
            resourceInputs["modelQualityAppSpecification"] = state ? state.modelQualityAppSpecification : undefined;
            resourceInputs["modelQualityBaselineConfig"] = state ? state.modelQualityBaselineConfig : undefined;
            resourceInputs["modelQualityJobInput"] = state ? state.modelQualityJobInput : undefined;
            resourceInputs["modelQualityJobOutputConfig"] = state ? state.modelQualityJobOutputConfig : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["stoppingCondition"] = state ? state.stoppingCondition : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SagemakerModelQualityJobDefinitionArgs | undefined;
            if ((!args || args.jobResources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobResources'");
            }
            if ((!args || args.modelQualityAppSpecification === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelQualityAppSpecification'");
            }
            if ((!args || args.modelQualityJobInput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelQualityJobInput'");
            }
            if ((!args || args.modelQualityJobOutputConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelQualityJobOutputConfig'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["endpointName"] = args ? args.endpointName : undefined;
            resourceInputs["jobDefinitionName"] = args ? args.jobDefinitionName : undefined;
            resourceInputs["jobResources"] = args ? args.jobResources : undefined;
            resourceInputs["modelQualityAppSpecification"] = args ? args.modelQualityAppSpecification : undefined;
            resourceInputs["modelQualityBaselineConfig"] = args ? args.modelQualityBaselineConfig : undefined;
            resourceInputs["modelQualityJobInput"] = args ? args.modelQualityJobInput : undefined;
            resourceInputs["modelQualityJobOutputConfig"] = args ? args.modelQualityJobOutputConfig : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["stoppingCondition"] = args ? args.stoppingCondition : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["jobDefinitionArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagemakerModelQualityJobDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagemakerModelQualityJobDefinition resources.
 */
export interface SagemakerModelQualityJobDefinitionState {
    /**
     * The time at which the job definition was created.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The name of the endpoint used to run the monitoring job.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of job definition.
     */
    jobDefinitionArn?: pulumi.Input<string>;
    /**
     * The name of the job definition.
     */
    jobDefinitionName?: pulumi.Input<string>;
    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    jobResources?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionJobResources>;
    /**
     * Container image configuration object for the monitoring job.
     */
    modelQualityAppSpecification?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityAppSpecification>;
    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    modelQualityBaselineConfig?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityBaselineConfig>;
    /**
     * The inputs for a monitoring job.
     */
    modelQualityJobInput?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityJobInput>;
    /**
     * The output configuration for monitoring jobs.
     */
    modelQualityJobOutputConfig?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityJobOutputConfig>;
    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and
     * outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    networkConfig?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionNetworkConfig>;
    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    stoppingCondition?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionStoppingCondition>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerModelQualityJobDefinitionTag>[]>;
}

/**
 * The set of arguments for constructing a SagemakerModelQualityJobDefinition resource.
 */
export interface SagemakerModelQualityJobDefinitionArgs {
    /**
     * The name of the endpoint used to run the monitoring job.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * The name of the job definition.
     */
    jobDefinitionName?: pulumi.Input<string>;
    /**
     * Identifies the resources to deploy for a monitoring job.
     */
    jobResources: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionJobResources>;
    /**
     * Container image configuration object for the monitoring job.
     */
    modelQualityAppSpecification: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityAppSpecification>;
    /**
     * Baseline configuration used to validate that the data conforms to the specified constraints and statistics.
     */
    modelQualityBaselineConfig?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityBaselineConfig>;
    /**
     * The inputs for a monitoring job.
     */
    modelQualityJobInput: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityJobInput>;
    /**
     * The output configuration for monitoring jobs.
     */
    modelQualityJobOutputConfig: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionModelQualityJobOutputConfig>;
    /**
     * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and
     * outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
     */
    networkConfig?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionNetworkConfig>;
    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * Specifies a time limit for how long the monitoring job is allowed to run.
     */
    stoppingCondition?: pulumi.Input<inputs.SagemakerModelQualityJobDefinitionStoppingCondition>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerModelQualityJobDefinitionTag>[]>;
}
