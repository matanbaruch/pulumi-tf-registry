// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventschemasDiscoverer(args: GetEventschemasDiscovererArgs, opts?: pulumi.InvokeOptions): Promise<GetEventschemasDiscovererResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEventschemasDiscoverer:getEventschemasDiscoverer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventschemasDiscoverer.
 */
export interface GetEventschemasDiscovererArgs {
    id: string;
}

/**
 * A collection of values returned by getEventschemasDiscoverer.
 */
export interface GetEventschemasDiscovererResult {
    readonly crossAccount: boolean;
    readonly description: string;
    readonly discovererArn: string;
    readonly discovererId: string;
    readonly id: string;
    readonly sourceArn: string;
    readonly state: string;
    readonly tags: outputs.GetEventschemasDiscovererTag[];
}
export function getEventschemasDiscovererOutput(args: GetEventschemasDiscovererOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventschemasDiscovererResult> {
    return pulumi.output(args).apply((a: any) => getEventschemasDiscoverer(a, opts))
}

/**
 * A collection of arguments for invoking getEventschemasDiscoverer.
 */
export interface GetEventschemasDiscovererOutputArgs {
    id: pulumi.Input<string>;
}
