// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRolesanywhereProfile(args: GetRolesanywhereProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetRolesanywhereProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRolesanywhereProfile:getRolesanywhereProfile", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRolesanywhereProfile.
 */
export interface GetRolesanywhereProfileArgs {
    id: string;
}

/**
 * A collection of values returned by getRolesanywhereProfile.
 */
export interface GetRolesanywhereProfileResult {
    readonly acceptRoleSessionName: boolean;
    readonly attributeMappings: outputs.GetRolesanywhereProfileAttributeMapping[];
    readonly durationSeconds: number;
    readonly enabled: boolean;
    readonly id: string;
    readonly managedPolicyArns: string[];
    readonly name: string;
    readonly profileArn: string;
    readonly profileId: string;
    readonly requireInstanceProperties: boolean;
    readonly roleArns: string[];
    readonly sessionPolicy: string;
    readonly tags: outputs.GetRolesanywhereProfileTag[];
}
export function getRolesanywhereProfileOutput(args: GetRolesanywhereProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRolesanywhereProfileResult> {
    return pulumi.output(args).apply((a: any) => getRolesanywhereProfile(a, opts))
}

/**
 * A collection of arguments for invoking getRolesanywhereProfile.
 */
export interface GetRolesanywhereProfileOutputArgs {
    id: pulumi.Input<string>;
}
