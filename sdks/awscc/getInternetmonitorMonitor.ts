// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInternetmonitorMonitor(args: GetInternetmonitorMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetInternetmonitorMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getInternetmonitorMonitor:getInternetmonitorMonitor", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInternetmonitorMonitor.
 */
export interface GetInternetmonitorMonitorArgs {
    id: string;
}

/**
 * A collection of values returned by getInternetmonitorMonitor.
 */
export interface GetInternetmonitorMonitorResult {
    readonly createdAt: string;
    readonly healthEventsConfig: outputs.GetInternetmonitorMonitorHealthEventsConfig;
    readonly id: string;
    readonly includeLinkedAccounts: boolean;
    readonly internetMeasurementsLogDelivery: outputs.GetInternetmonitorMonitorInternetMeasurementsLogDelivery;
    readonly linkedAccountId: string;
    readonly maxCityNetworksToMonitor: number;
    readonly modifiedAt: string;
    readonly monitorArn: string;
    readonly monitorName: string;
    readonly processingStatus: string;
    readonly processingStatusInfo: string;
    readonly resources: string[];
    readonly resourcesToAdds: string[];
    readonly resourcesToRemoves: string[];
    readonly status: string;
    readonly tags: outputs.GetInternetmonitorMonitorTag[];
    readonly trafficPercentageToMonitor: number;
}
export function getInternetmonitorMonitorOutput(args: GetInternetmonitorMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInternetmonitorMonitorResult> {
    return pulumi.output(args).apply((a: any) => getInternetmonitorMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getInternetmonitorMonitor.
 */
export interface GetInternetmonitorMonitorOutputArgs {
    id: pulumi.Input<string>;
}
