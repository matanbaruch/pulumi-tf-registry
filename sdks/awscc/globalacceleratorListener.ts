// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GlobalacceleratorListener extends pulumi.CustomResource {
    /**
     * Get an existing GlobalacceleratorListener resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalacceleratorListenerState, opts?: pulumi.CustomResourceOptions): GlobalacceleratorListener {
        return new GlobalacceleratorListener(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/globalacceleratorListener:GlobalacceleratorListener';

    /**
     * Returns true if the given object is an instance of GlobalacceleratorListener.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GlobalacceleratorListener {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GlobalacceleratorListener.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the accelerator.
     */
    public readonly acceleratorArn!: pulumi.Output<string>;
    /**
     * Client affinity lets you direct all requests from a user to the same endpoint.
     */
    public readonly clientAffinity!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the listener.
     */
    public /*out*/ readonly listenerArn!: pulumi.Output<string>;
    public readonly portRanges!: pulumi.Output<outputs.GlobalacceleratorListenerPortRange[]>;
    /**
     * The protocol for the listener.
     */
    public readonly protocol!: pulumi.Output<string>;

    /**
     * Create a GlobalacceleratorListener resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GlobalacceleratorListenerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalacceleratorListenerArgs | GlobalacceleratorListenerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlobalacceleratorListenerState | undefined;
            resourceInputs["acceleratorArn"] = state ? state.acceleratorArn : undefined;
            resourceInputs["clientAffinity"] = state ? state.clientAffinity : undefined;
            resourceInputs["listenerArn"] = state ? state.listenerArn : undefined;
            resourceInputs["portRanges"] = state ? state.portRanges : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
        } else {
            const args = argsOrState as GlobalacceleratorListenerArgs | undefined;
            if ((!args || args.acceleratorArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acceleratorArn'");
            }
            if ((!args || args.portRanges === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portRanges'");
            }
            resourceInputs["acceleratorArn"] = args ? args.acceleratorArn : undefined;
            resourceInputs["clientAffinity"] = args ? args.clientAffinity : undefined;
            resourceInputs["portRanges"] = args ? args.portRanges : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["listenerArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GlobalacceleratorListener.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GlobalacceleratorListener resources.
 */
export interface GlobalacceleratorListenerState {
    /**
     * The Amazon Resource Name (ARN) of the accelerator.
     */
    acceleratorArn?: pulumi.Input<string>;
    /**
     * Client affinity lets you direct all requests from a user to the same endpoint.
     */
    clientAffinity?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the listener.
     */
    listenerArn?: pulumi.Input<string>;
    portRanges?: pulumi.Input<pulumi.Input<inputs.GlobalacceleratorListenerPortRange>[]>;
    /**
     * The protocol for the listener.
     */
    protocol?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GlobalacceleratorListener resource.
 */
export interface GlobalacceleratorListenerArgs {
    /**
     * The Amazon Resource Name (ARN) of the accelerator.
     */
    acceleratorArn: pulumi.Input<string>;
    /**
     * Client affinity lets you direct all requests from a user to the same endpoint.
     */
    clientAffinity?: pulumi.Input<string>;
    portRanges: pulumi.Input<pulumi.Input<inputs.GlobalacceleratorListenerPortRange>[]>;
    /**
     * The protocol for the listener.
     */
    protocol?: pulumi.Input<string>;
}
