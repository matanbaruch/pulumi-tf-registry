// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLambdaVersion(args: GetLambdaVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLambdaVersion:getLambdaVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaVersion.
 */
export interface GetLambdaVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getLambdaVersion.
 */
export interface GetLambdaVersionResult {
    readonly codeSha256: string;
    readonly description: string;
    readonly functionArn: string;
    readonly functionName: string;
    readonly id: string;
    readonly policy: string;
    readonly provisionedConcurrencyConfig: outputs.GetLambdaVersionProvisionedConcurrencyConfig;
    readonly runtimePolicy: outputs.GetLambdaVersionRuntimePolicy;
    readonly version: string;
}
export function getLambdaVersionOutput(args: GetLambdaVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaVersionResult> {
    return pulumi.output(args).apply((a: any) => getLambdaVersion(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaVersion.
 */
export interface GetLambdaVersionOutputArgs {
    id: pulumi.Input<string>;
}
