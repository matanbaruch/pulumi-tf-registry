// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGameliftGameSessionQueue(args: GetGameliftGameSessionQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetGameliftGameSessionQueueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGameliftGameSessionQueue:getGameliftGameSessionQueue", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGameliftGameSessionQueue.
 */
export interface GetGameliftGameSessionQueueArgs {
    id: string;
}

/**
 * A collection of values returned by getGameliftGameSessionQueue.
 */
export interface GetGameliftGameSessionQueueResult {
    readonly arn: string;
    readonly customEventData: string;
    readonly destinations: outputs.GetGameliftGameSessionQueueDestination[];
    readonly filterConfiguration: outputs.GetGameliftGameSessionQueueFilterConfiguration;
    readonly id: string;
    readonly name: string;
    readonly notificationTarget: string;
    readonly playerLatencyPolicies: outputs.GetGameliftGameSessionQueuePlayerLatencyPolicy[];
    readonly priorityConfiguration: outputs.GetGameliftGameSessionQueuePriorityConfiguration;
    readonly tags: outputs.GetGameliftGameSessionQueueTag[];
    readonly timeoutInSeconds: number;
}
export function getGameliftGameSessionQueueOutput(args: GetGameliftGameSessionQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGameliftGameSessionQueueResult> {
    return pulumi.output(args).apply((a: any) => getGameliftGameSessionQueue(a, opts))
}

/**
 * A collection of arguments for invoking getGameliftGameSessionQueue.
 */
export interface GetGameliftGameSessionQueueOutputArgs {
    id: pulumi.Input<string>;
}
