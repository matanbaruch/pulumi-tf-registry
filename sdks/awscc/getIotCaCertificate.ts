// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIotCaCertificate(args: GetIotCaCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetIotCaCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIotCaCertificate:getIotCaCertificate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIotCaCertificate.
 */
export interface GetIotCaCertificateArgs {
    id: string;
}

/**
 * A collection of values returned by getIotCaCertificate.
 */
export interface GetIotCaCertificateResult {
    readonly arn: string;
    readonly autoRegistrationStatus: string;
    readonly caCertificateId: string;
    readonly caCertificatePem: string;
    readonly certificateMode: string;
    readonly id: string;
    readonly registrationConfig: outputs.GetIotCaCertificateRegistrationConfig;
    readonly removeAutoRegistration: boolean;
    readonly status: string;
    readonly tags: outputs.GetIotCaCertificateTag[];
    readonly verificationCertificatePem: string;
}
export function getIotCaCertificateOutput(args: GetIotCaCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIotCaCertificateResult> {
    return pulumi.output(args).apply((a: any) => getIotCaCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getIotCaCertificate.
 */
export interface GetIotCaCertificateOutputArgs {
    id: pulumi.Input<string>;
}
