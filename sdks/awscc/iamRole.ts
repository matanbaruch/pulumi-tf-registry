// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IamRole extends pulumi.CustomResource {
    /**
     * Get an existing IamRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamRoleState, opts?: pulumi.CustomResourceOptions): IamRole {
        return new IamRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iamRole:IamRole';

    /**
     * Returns true if the given object is an instance of IamRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamRole.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can
     * associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template
     * Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples).
     * For more information about the elements that you can use in an IAM policy, see [Policy Elements
     * Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *User Guide*.
     */
    public readonly assumeRolePolicyDocument!: pulumi.Output<string>;
    /**
     * A description of the role that you provide.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. For more
     * information about ARNs, see [Amazon Resource Names (ARNs) and Service
     * Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
     */
    public readonly managedPolicyArns!: pulumi.Output<string[]>;
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for
     * this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. Anyone
     * who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI
     * parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be
     * requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter,
     * their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API
     * operations or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console
     * URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in
     * the *IAM User Guide*.
     */
    public readonly maxSessionDuration!: pulumi.Output<number>;
    /**
     * The path to the role. For more information about paths, see [IAM
     * Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*. This
     * parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a
     * forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any
     * ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters,
     * digits, and upper and lowercased letters.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * The ARN of the policy used to set the permissions boundary for the role. For more information about permissions
     * boundaries, see [Permissions boundaries for IAM
     * identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.
     */
    public readonly permissionsBoundary!: pulumi.Output<string>;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy in
     * a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created
     * at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to
     * [Using Roles to Delegate Permissions and Federate
     * Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html). A role can also have an attached
     * managed policy. For information about policies, see [Managed Policies and Inline
     * Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*. For
     * information about limits on the number of inline policies that you can embed with a role, see [Limitations on
     * Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*. If an
     * external policy (such as ``AWS::IAM::Policy`` or
     */
    public readonly policies!: pulumi.Output<outputs.IamRolePolicy[]>;
    public /*out*/ readonly roleId!: pulumi.Output<string>;
    /**
     * A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the
     * [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *User Guide*. This
     * parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of
     * characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the
     * following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by
     * case. For example, you cannot create roles named both "Role1" and "role1". If you don't specify a name, CFN generates a
     * unique physical ID and uses that ID for the role name. If you specify a name, you must specify the
     * ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging
     * Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/Use
     */
    public readonly roleName!: pulumi.Output<string>;
    /**
     * A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM
     * resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
     */
    public readonly tags!: pulumi.Output<outputs.IamRoleTag[]>;

    /**
     * Create a IamRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamRoleArgs | IamRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamRoleState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["assumeRolePolicyDocument"] = state ? state.assumeRolePolicyDocument : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["managedPolicyArns"] = state ? state.managedPolicyArns : undefined;
            resourceInputs["maxSessionDuration"] = state ? state.maxSessionDuration : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["permissionsBoundary"] = state ? state.permissionsBoundary : undefined;
            resourceInputs["policies"] = state ? state.policies : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IamRoleArgs | undefined;
            if ((!args || args.assumeRolePolicyDocument === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assumeRolePolicyDocument'");
            }
            resourceInputs["assumeRolePolicyDocument"] = args ? args.assumeRolePolicyDocument : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["managedPolicyArns"] = args ? args.managedPolicyArns : undefined;
            resourceInputs["maxSessionDuration"] = args ? args.maxSessionDuration : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["permissionsBoundary"] = args ? args.permissionsBoundary : undefined;
            resourceInputs["policies"] = args ? args.policies : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["roleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IamRole resources.
 */
export interface IamRoleState {
    arn?: pulumi.Input<string>;
    /**
     * The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can
     * associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template
     * Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples).
     * For more information about the elements that you can use in an IAM policy, see [Policy Elements
     * Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *User Guide*.
     */
    assumeRolePolicyDocument?: pulumi.Input<string>;
    /**
     * A description of the role that you provide.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. For more
     * information about ARNs, see [Amazon Resource Names (ARNs) and Service
     * Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
     */
    managedPolicyArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for
     * this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. Anyone
     * who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI
     * parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be
     * requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter,
     * their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API
     * operations or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console
     * URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in
     * the *IAM User Guide*.
     */
    maxSessionDuration?: pulumi.Input<number>;
    /**
     * The path to the role. For more information about paths, see [IAM
     * Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*. This
     * parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a
     * forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any
     * ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters,
     * digits, and upper and lowercased letters.
     */
    path?: pulumi.Input<string>;
    /**
     * The ARN of the policy used to set the permissions boundary for the role. For more information about permissions
     * boundaries, see [Permissions boundaries for IAM
     * identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.
     */
    permissionsBoundary?: pulumi.Input<string>;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy in
     * a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created
     * at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to
     * [Using Roles to Delegate Permissions and Federate
     * Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html). A role can also have an attached
     * managed policy. For information about policies, see [Managed Policies and Inline
     * Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*. For
     * information about limits on the number of inline policies that you can embed with a role, see [Limitations on
     * Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*. If an
     * external policy (such as ``AWS::IAM::Policy`` or
     */
    policies?: pulumi.Input<pulumi.Input<inputs.IamRolePolicy>[]>;
    roleId?: pulumi.Input<string>;
    /**
     * A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the
     * [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *User Guide*. This
     * parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of
     * characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the
     * following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by
     * case. For example, you cannot create roles named both "Role1" and "role1". If you don't specify a name, CFN generates a
     * unique physical ID and uses that ID for the role name. If you specify a name, you must specify the
     * ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging
     * Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/Use
     */
    roleName?: pulumi.Input<string>;
    /**
     * A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM
     * resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IamRoleTag>[]>;
}

/**
 * The set of arguments for constructing a IamRole resource.
 */
export interface IamRoleArgs {
    /**
     * The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can
     * associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template
     * Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples).
     * For more information about the elements that you can use in an IAM policy, see [Policy Elements
     * Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *User Guide*.
     */
    assumeRolePolicyDocument: pulumi.Input<string>;
    /**
     * A description of the role that you provide.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role. For more
     * information about ARNs, see [Amazon Resource Names (ARNs) and Service
     * Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
     */
    managedPolicyArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for
     * this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. Anyone
     * who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI
     * parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be
     * requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter,
     * their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API
     * operations or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console
     * URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in
     * the *IAM User Guide*.
     */
    maxSessionDuration?: pulumi.Input<number>;
    /**
     * The path to the role. For more information about paths, see [IAM
     * Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*. This
     * parameter is optional. If it is not included, it defaults to a slash (/). This parameter allows (through its [regex
     * pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a
     * forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any
     * ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters,
     * digits, and upper and lowercased letters.
     */
    path?: pulumi.Input<string>;
    /**
     * The ARN of the policy used to set the permissions boundary for the role. For more information about permissions
     * boundaries, see [Permissions boundaries for IAM
     * identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.
     */
    permissionsBoundary?: pulumi.Input<string>;
    /**
     * Adds or updates an inline policy document that is embedded in the specified IAM role. When you embed an inline policy in
     * a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created
     * at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to
     * [Using Roles to Delegate Permissions and Federate
     * Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html). A role can also have an attached
     * managed policy. For information about policies, see [Managed Policies and Inline
     * Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*. For
     * information about limits on the number of inline policies that you can embed with a role, see [Limitations on
     * Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*. If an
     * external policy (such as ``AWS::IAM::Policy`` or
     */
    policies?: pulumi.Input<pulumi.Input<inputs.IamRolePolicy>[]>;
    /**
     * A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the
     * [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *User Guide*. This
     * parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of
     * characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the
     * following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by
     * case. For example, you cannot create roles named both "Role1" and "role1". If you don't specify a name, CFN generates a
     * unique physical ID and uses that ID for the role name. If you specify a name, you must specify the
     * ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging
     * Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/Use
     */
    roleName?: pulumi.Input<string>;
    /**
     * A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM
     * resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IamRoleTag>[]>;
}
