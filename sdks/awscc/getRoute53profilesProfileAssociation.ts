// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoute53profilesProfileAssociation(args: GetRoute53profilesProfileAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53profilesProfileAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRoute53profilesProfileAssociation:getRoute53profilesProfileAssociation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53profilesProfileAssociation.
 */
export interface GetRoute53profilesProfileAssociationArgs {
    id: string;
}

/**
 * A collection of values returned by getRoute53profilesProfileAssociation.
 */
export interface GetRoute53profilesProfileAssociationResult {
    readonly arn: string;
    readonly id: string;
    readonly name: string;
    readonly profileAssociationId: string;
    readonly profileId: string;
    readonly resourceId: string;
    readonly tags: outputs.GetRoute53profilesProfileAssociationTag[];
}
export function getRoute53profilesProfileAssociationOutput(args: GetRoute53profilesProfileAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53profilesProfileAssociationResult> {
    return pulumi.output(args).apply((a: any) => getRoute53profilesProfileAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53profilesProfileAssociation.
 */
export interface GetRoute53profilesProfileAssociationOutputArgs {
    id: pulumi.Input<string>;
}
