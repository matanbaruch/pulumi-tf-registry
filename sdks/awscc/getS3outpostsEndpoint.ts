// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getS3outpostsEndpoint(args: GetS3outpostsEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetS3outpostsEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getS3outpostsEndpoint:getS3outpostsEndpoint", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getS3outpostsEndpoint.
 */
export interface GetS3outpostsEndpointArgs {
    id: string;
}

/**
 * A collection of values returned by getS3outpostsEndpoint.
 */
export interface GetS3outpostsEndpointResult {
    readonly accessType: string;
    readonly arn: string;
    readonly cidrBlock: string;
    readonly creationTime: string;
    readonly customerOwnedIpv4Pool: string;
    readonly endpointId: string;
    readonly failedReason: outputs.GetS3outpostsEndpointFailedReason;
    readonly id: string;
    readonly networkInterfaces: outputs.GetS3outpostsEndpointNetworkInterface[];
    readonly outpostId: string;
    readonly securityGroupId: string;
    readonly status: string;
    readonly subnetId: string;
}
export function getS3outpostsEndpointOutput(args: GetS3outpostsEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetS3outpostsEndpointResult> {
    return pulumi.output(args).apply((a: any) => getS3outpostsEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getS3outpostsEndpoint.
 */
export interface GetS3outpostsEndpointOutputArgs {
    id: pulumi.Input<string>;
}
