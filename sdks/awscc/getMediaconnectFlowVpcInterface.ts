// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMediaconnectFlowVpcInterface(args: GetMediaconnectFlowVpcInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaconnectFlowVpcInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediaconnectFlowVpcInterface:getMediaconnectFlowVpcInterface", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediaconnectFlowVpcInterface.
 */
export interface GetMediaconnectFlowVpcInterfaceArgs {
    id: string;
}

/**
 * A collection of values returned by getMediaconnectFlowVpcInterface.
 */
export interface GetMediaconnectFlowVpcInterfaceResult {
    readonly flowArn: string;
    readonly id: string;
    readonly name: string;
    readonly networkInterfaceIds: string[];
    readonly roleArn: string;
    readonly securityGroupIds: string[];
    readonly subnetId: string;
}
export function getMediaconnectFlowVpcInterfaceOutput(args: GetMediaconnectFlowVpcInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaconnectFlowVpcInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getMediaconnectFlowVpcInterface(a, opts))
}

/**
 * A collection of arguments for invoking getMediaconnectFlowVpcInterface.
 */
export interface GetMediaconnectFlowVpcInterfaceOutputArgs {
    id: pulumi.Input<string>;
}
