// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediapackagev2Channel(args: GetMediapackagev2ChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetMediapackagev2ChannelResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediapackagev2Channel:getMediapackagev2Channel", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediapackagev2Channel.
 */
export interface GetMediapackagev2ChannelArgs {
    id: string;
}

/**
 * A collection of values returned by getMediapackagev2Channel.
 */
export interface GetMediapackagev2ChannelResult {
    readonly arn: string;
    readonly channelGroupName: string;
    readonly channelName: string;
    readonly createdAt: string;
    readonly description: string;
    readonly id: string;
    readonly ingestEndpointUrls: string[];
    readonly ingestEndpoints: outputs.GetMediapackagev2ChannelIngestEndpoint[];
    readonly inputType: string;
    readonly modifiedAt: string;
    readonly tags: outputs.GetMediapackagev2ChannelTag[];
}
export function getMediapackagev2ChannelOutput(args: GetMediapackagev2ChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediapackagev2ChannelResult> {
    return pulumi.output(args).apply((a: any) => getMediapackagev2Channel(a, opts))
}

/**
 * A collection of arguments for invoking getMediapackagev2Channel.
 */
export interface GetMediapackagev2ChannelOutputArgs {
    id: pulumi.Input<string>;
}
