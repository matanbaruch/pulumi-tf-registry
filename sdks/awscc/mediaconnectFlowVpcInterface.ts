// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MediaconnectFlowVpcInterface extends pulumi.CustomResource {
    /**
     * Get an existing MediaconnectFlowVpcInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MediaconnectFlowVpcInterfaceState, opts?: pulumi.CustomResourceOptions): MediaconnectFlowVpcInterface {
        return new MediaconnectFlowVpcInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/mediaconnectFlowVpcInterface:MediaconnectFlowVpcInterface';

    /**
     * Returns true if the given object is an instance of MediaconnectFlowVpcInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MediaconnectFlowVpcInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MediaconnectFlowVpcInterface.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    public readonly flowArn!: pulumi.Output<string>;
    /**
     * Immutable and has to be a unique against other VpcInterfaces in this Flow.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * IDs of the network interfaces created in customer's account by MediaConnect.
     */
    public /*out*/ readonly networkInterfaceIds!: pulumi.Output<string[]>;
    /**
     * Role Arn MediaConnect can assume to create ENIs in customer's account.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * Security Group IDs to be used on ENI.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * Subnet must be in the AZ of the Flow
     */
    public readonly subnetId!: pulumi.Output<string>;

    /**
     * Create a MediaconnectFlowVpcInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MediaconnectFlowVpcInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MediaconnectFlowVpcInterfaceArgs | MediaconnectFlowVpcInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MediaconnectFlowVpcInterfaceState | undefined;
            resourceInputs["flowArn"] = state ? state.flowArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInterfaceIds"] = state ? state.networkInterfaceIds : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
        } else {
            const args = argsOrState as MediaconnectFlowVpcInterfaceArgs | undefined;
            if ((!args || args.flowArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flowArn'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.securityGroupIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupIds'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["flowArn"] = args ? args.flowArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["networkInterfaceIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MediaconnectFlowVpcInterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MediaconnectFlowVpcInterface resources.
 */
export interface MediaconnectFlowVpcInterfaceState {
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    flowArn?: pulumi.Input<string>;
    /**
     * Immutable and has to be a unique against other VpcInterfaces in this Flow.
     */
    name?: pulumi.Input<string>;
    /**
     * IDs of the network interfaces created in customer's account by MediaConnect.
     */
    networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role Arn MediaConnect can assume to create ENIs in customer's account.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Security Group IDs to be used on ENI.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subnet must be in the AZ of the Flow
     */
    subnetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MediaconnectFlowVpcInterface resource.
 */
export interface MediaconnectFlowVpcInterfaceArgs {
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    flowArn: pulumi.Input<string>;
    /**
     * Immutable and has to be a unique against other VpcInterfaces in this Flow.
     */
    name?: pulumi.Input<string>;
    /**
     * Role Arn MediaConnect can assume to create ENIs in customer's account.
     */
    roleArn: pulumi.Input<string>;
    /**
     * Security Group IDs to be used on ENI.
     */
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Subnet must be in the AZ of the Flow
     */
    subnetId: pulumi.Input<string>;
}
