// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedshiftEventSubscription(args: GetRedshiftEventSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetRedshiftEventSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRedshiftEventSubscription:getRedshiftEventSubscription", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedshiftEventSubscription.
 */
export interface GetRedshiftEventSubscriptionArgs {
    id: string;
}

/**
 * A collection of values returned by getRedshiftEventSubscription.
 */
export interface GetRedshiftEventSubscriptionResult {
    readonly custSubscriptionId: string;
    readonly customerAwsId: string;
    readonly enabled: boolean;
    readonly eventCategories: string[];
    readonly eventCategoriesLists: string[];
    readonly id: string;
    readonly severity: string;
    readonly snsTopicArn: string;
    readonly sourceIds: string[];
    readonly sourceIdsLists: string[];
    readonly sourceType: string;
    readonly status: string;
    readonly subscriptionCreationTime: string;
    readonly subscriptionName: string;
    readonly tags: outputs.GetRedshiftEventSubscriptionTag[];
}
export function getRedshiftEventSubscriptionOutput(args: GetRedshiftEventSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedshiftEventSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getRedshiftEventSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getRedshiftEventSubscription.
 */
export interface GetRedshiftEventSubscriptionOutputArgs {
    id: pulumi.Input<string>;
}
