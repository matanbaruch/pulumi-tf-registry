// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPcaconnectoradDirectoryRegistration(args: GetPcaconnectoradDirectoryRegistrationArgs, opts?: pulumi.InvokeOptions): Promise<GetPcaconnectoradDirectoryRegistrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getPcaconnectoradDirectoryRegistration:getPcaconnectoradDirectoryRegistration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPcaconnectoradDirectoryRegistration.
 */
export interface GetPcaconnectoradDirectoryRegistrationArgs {
    id: string;
}

/**
 * A collection of values returned by getPcaconnectoradDirectoryRegistration.
 */
export interface GetPcaconnectoradDirectoryRegistrationResult {
    readonly directoryId: string;
    readonly directoryRegistrationArn: string;
    readonly id: string;
    readonly tags: {[key: string]: string};
}
export function getPcaconnectoradDirectoryRegistrationOutput(args: GetPcaconnectoradDirectoryRegistrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPcaconnectoradDirectoryRegistrationResult> {
    return pulumi.output(args).apply((a: any) => getPcaconnectoradDirectoryRegistration(a, opts))
}

/**
 * A collection of arguments for invoking getPcaconnectoradDirectoryRegistration.
 */
export interface GetPcaconnectoradDirectoryRegistrationOutputArgs {
    id: pulumi.Input<string>;
}
