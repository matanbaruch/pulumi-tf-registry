// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLambdaUrl(args: GetLambdaUrlArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaUrlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLambdaUrl:getLambdaUrl", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaUrl.
 */
export interface GetLambdaUrlArgs {
    id: string;
}

/**
 * A collection of values returned by getLambdaUrl.
 */
export interface GetLambdaUrlResult {
    readonly authType: string;
    readonly cors: outputs.GetLambdaUrlCors;
    readonly functionArn: string;
    readonly functionUrl: string;
    readonly id: string;
    readonly invokeMode: string;
    readonly qualifier: string;
    readonly targetFunctionArn: string;
}
export function getLambdaUrlOutput(args: GetLambdaUrlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaUrlResult> {
    return pulumi.output(args).apply((a: any) => getLambdaUrl(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaUrl.
 */
export interface GetLambdaUrlOutputArgs {
    id: pulumi.Input<string>;
}
