// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayDomainName(args: GetApigatewayDomainNameArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayDomainNameResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayDomainName:getApigatewayDomainName", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayDomainName.
 */
export interface GetApigatewayDomainNameArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayDomainName.
 */
export interface GetApigatewayDomainNameResult {
    readonly certificateArn: string;
    readonly distributionDomainName: string;
    readonly distributionHostedZoneId: string;
    readonly domainName: string;
    readonly endpointConfiguration: outputs.GetApigatewayDomainNameEndpointConfiguration;
    readonly id: string;
    readonly mutualTlsAuthentication: outputs.GetApigatewayDomainNameMutualTlsAuthentication;
    readonly ownershipVerificationCertificateArn: string;
    readonly regionalCertificateArn: string;
    readonly regionalDomainName: string;
    readonly regionalHostedZoneId: string;
    readonly securityPolicy: string;
    readonly tags: outputs.GetApigatewayDomainNameTag[];
}
export function getApigatewayDomainNameOutput(args: GetApigatewayDomainNameOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayDomainNameResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayDomainName(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayDomainName.
 */
export interface GetApigatewayDomainNameOutputArgs {
    id: pulumi.Input<string>;
}
