// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getControltowerEnabledControl(args: GetControltowerEnabledControlArgs, opts?: pulumi.InvokeOptions): Promise<GetControltowerEnabledControlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getControltowerEnabledControl:getControltowerEnabledControl", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getControltowerEnabledControl.
 */
export interface GetControltowerEnabledControlArgs {
    id: string;
}

/**
 * A collection of values returned by getControltowerEnabledControl.
 */
export interface GetControltowerEnabledControlResult {
    readonly controlIdentifier: string;
    readonly id: string;
    readonly targetIdentifier: string;
}
export function getControltowerEnabledControlOutput(args: GetControltowerEnabledControlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetControltowerEnabledControlResult> {
    return pulumi.output(args).apply((a: any) => getControltowerEnabledControl(a, opts))
}

/**
 * A collection of arguments for invoking getControltowerEnabledControl.
 */
export interface GetControltowerEnabledControlOutputArgs {
    id: pulumi.Input<string>;
}
