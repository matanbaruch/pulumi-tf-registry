// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TimestreamInfluxDbInstance extends pulumi.CustomResource {
    /**
     * Get an existing TimestreamInfluxDbInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TimestreamInfluxDbInstanceState, opts?: pulumi.CustomResourceOptions): TimestreamInfluxDbInstance {
        return new TimestreamInfluxDbInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/timestreamInfluxDbInstance:TimestreamInfluxDbInstance';

    /**
     * Returns true if the given object is an instance of TimestreamInfluxDbInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TimestreamInfluxDbInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TimestreamInfluxDbInstance.__pulumiType;
    }

    /**
     * The allocated storage for the InfluxDB instance.
     */
    public readonly allocatedStorage!: pulumi.Output<number>;
    /**
     * The Amazon Resource Name (ARN) that is associated with the InfluxDB instance.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The Availability Zone (AZ) where the InfluxDB instance is created.
     */
    public /*out*/ readonly availabilityZone!: pulumi.Output<string>;
    /**
     * The bucket for the InfluxDB instance.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * The compute instance of the InfluxDB instance.
     */
    public readonly dbInstanceType!: pulumi.Output<string>;
    /**
     * The name of an existing InfluxDB parameter group.
     */
    public readonly dbParameterGroupIdentifier!: pulumi.Output<string>;
    /**
     * The storage type of the InfluxDB instance.
     */
    public readonly dbStorageType!: pulumi.Output<string>;
    /**
     * Deployment type of the InfluxDB Instance.
     */
    public readonly deploymentType!: pulumi.Output<string>;
    /**
     * The connection endpoint for the InfluxDB instance.
     */
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    /**
     * The Auth parameters secret Amazon Resource name (ARN) that is associated with the InfluxDB instance.
     */
    public /*out*/ readonly influxAuthParametersSecretArn!: pulumi.Output<string>;
    /**
     * The service generated unique identifier for InfluxDB instance.
     */
    public /*out*/ readonly influxDbInstanceId!: pulumi.Output<string>;
    /**
     * Configuration for sending logs to customer account from the InfluxDB instance.
     */
    public readonly logDeliveryConfiguration!: pulumi.Output<outputs.TimestreamInfluxDbInstanceLogDeliveryConfiguration>;
    /**
     * The unique name that is associated with the InfluxDB instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The organization for the InfluxDB instance.
     */
    public readonly organization!: pulumi.Output<string>;
    /**
     * The password for the InfluxDB instance.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Attach a public IP to the customer ENI.
     */
    public readonly publiclyAccessible!: pulumi.Output<boolean>;
    /**
     * The Secondary Availability Zone (AZ) where the InfluxDB instance is created, if DeploymentType is set as
     * WITH_MULTIAZ_STANDBY.
     */
    public /*out*/ readonly secondaryAvailabilityZone!: pulumi.Output<string>;
    /**
     * Status of the InfluxDB Instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this DB instance.
     */
    public readonly tags!: pulumi.Output<outputs.TimestreamInfluxDbInstanceTag[]>;
    /**
     * The username for the InfluxDB instance.
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * A list of Amazon EC2 VPC security groups to associate with this InfluxDB instance.
     */
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[]>;
    /**
     * A list of EC2 subnet IDs for this InfluxDB instance.
     */
    public readonly vpcSubnetIds!: pulumi.Output<string[]>;

    /**
     * Create a TimestreamInfluxDbInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TimestreamInfluxDbInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TimestreamInfluxDbInstanceArgs | TimestreamInfluxDbInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TimestreamInfluxDbInstanceState | undefined;
            resourceInputs["allocatedStorage"] = state ? state.allocatedStorage : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["dbInstanceType"] = state ? state.dbInstanceType : undefined;
            resourceInputs["dbParameterGroupIdentifier"] = state ? state.dbParameterGroupIdentifier : undefined;
            resourceInputs["dbStorageType"] = state ? state.dbStorageType : undefined;
            resourceInputs["deploymentType"] = state ? state.deploymentType : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["influxAuthParametersSecretArn"] = state ? state.influxAuthParametersSecretArn : undefined;
            resourceInputs["influxDbInstanceId"] = state ? state.influxDbInstanceId : undefined;
            resourceInputs["logDeliveryConfiguration"] = state ? state.logDeliveryConfiguration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["publiclyAccessible"] = state ? state.publiclyAccessible : undefined;
            resourceInputs["secondaryAvailabilityZone"] = state ? state.secondaryAvailabilityZone : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
            resourceInputs["vpcSubnetIds"] = state ? state.vpcSubnetIds : undefined;
        } else {
            const args = argsOrState as TimestreamInfluxDbInstanceArgs | undefined;
            resourceInputs["allocatedStorage"] = args ? args.allocatedStorage : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["dbInstanceType"] = args ? args.dbInstanceType : undefined;
            resourceInputs["dbParameterGroupIdentifier"] = args ? args.dbParameterGroupIdentifier : undefined;
            resourceInputs["dbStorageType"] = args ? args.dbStorageType : undefined;
            resourceInputs["deploymentType"] = args ? args.deploymentType : undefined;
            resourceInputs["logDeliveryConfiguration"] = args ? args.logDeliveryConfiguration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["vpcSubnetIds"] = args ? args.vpcSubnetIds : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["availabilityZone"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["influxAuthParametersSecretArn"] = undefined /*out*/;
            resourceInputs["influxDbInstanceId"] = undefined /*out*/;
            resourceInputs["secondaryAvailabilityZone"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TimestreamInfluxDbInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TimestreamInfluxDbInstance resources.
 */
export interface TimestreamInfluxDbInstanceState {
    /**
     * The allocated storage for the InfluxDB instance.
     */
    allocatedStorage?: pulumi.Input<number>;
    /**
     * The Amazon Resource Name (ARN) that is associated with the InfluxDB instance.
     */
    arn?: pulumi.Input<string>;
    /**
     * The Availability Zone (AZ) where the InfluxDB instance is created.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The bucket for the InfluxDB instance.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The compute instance of the InfluxDB instance.
     */
    dbInstanceType?: pulumi.Input<string>;
    /**
     * The name of an existing InfluxDB parameter group.
     */
    dbParameterGroupIdentifier?: pulumi.Input<string>;
    /**
     * The storage type of the InfluxDB instance.
     */
    dbStorageType?: pulumi.Input<string>;
    /**
     * Deployment type of the InfluxDB Instance.
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * The connection endpoint for the InfluxDB instance.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The Auth parameters secret Amazon Resource name (ARN) that is associated with the InfluxDB instance.
     */
    influxAuthParametersSecretArn?: pulumi.Input<string>;
    /**
     * The service generated unique identifier for InfluxDB instance.
     */
    influxDbInstanceId?: pulumi.Input<string>;
    /**
     * Configuration for sending logs to customer account from the InfluxDB instance.
     */
    logDeliveryConfiguration?: pulumi.Input<inputs.TimestreamInfluxDbInstanceLogDeliveryConfiguration>;
    /**
     * The unique name that is associated with the InfluxDB instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The organization for the InfluxDB instance.
     */
    organization?: pulumi.Input<string>;
    /**
     * The password for the InfluxDB instance.
     */
    password?: pulumi.Input<string>;
    /**
     * Attach a public IP to the customer ENI.
     */
    publiclyAccessible?: pulumi.Input<boolean>;
    /**
     * The Secondary Availability Zone (AZ) where the InfluxDB instance is created, if DeploymentType is set as
     * WITH_MULTIAZ_STANDBY.
     */
    secondaryAvailabilityZone?: pulumi.Input<string>;
    /**
     * Status of the InfluxDB Instance.
     */
    status?: pulumi.Input<string>;
    /**
     * An arbitrary set of tags (key-value pairs) for this DB instance.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TimestreamInfluxDbInstanceTag>[]>;
    /**
     * The username for the InfluxDB instance.
     */
    username?: pulumi.Input<string>;
    /**
     * A list of Amazon EC2 VPC security groups to associate with this InfluxDB instance.
     */
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of EC2 subnet IDs for this InfluxDB instance.
     */
    vpcSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a TimestreamInfluxDbInstance resource.
 */
export interface TimestreamInfluxDbInstanceArgs {
    /**
     * The allocated storage for the InfluxDB instance.
     */
    allocatedStorage?: pulumi.Input<number>;
    /**
     * The bucket for the InfluxDB instance.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The compute instance of the InfluxDB instance.
     */
    dbInstanceType?: pulumi.Input<string>;
    /**
     * The name of an existing InfluxDB parameter group.
     */
    dbParameterGroupIdentifier?: pulumi.Input<string>;
    /**
     * The storage type of the InfluxDB instance.
     */
    dbStorageType?: pulumi.Input<string>;
    /**
     * Deployment type of the InfluxDB Instance.
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * Configuration for sending logs to customer account from the InfluxDB instance.
     */
    logDeliveryConfiguration?: pulumi.Input<inputs.TimestreamInfluxDbInstanceLogDeliveryConfiguration>;
    /**
     * The unique name that is associated with the InfluxDB instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The organization for the InfluxDB instance.
     */
    organization?: pulumi.Input<string>;
    /**
     * The password for the InfluxDB instance.
     */
    password?: pulumi.Input<string>;
    /**
     * Attach a public IP to the customer ENI.
     */
    publiclyAccessible?: pulumi.Input<boolean>;
    /**
     * An arbitrary set of tags (key-value pairs) for this DB instance.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TimestreamInfluxDbInstanceTag>[]>;
    /**
     * The username for the InfluxDB instance.
     */
    username?: pulumi.Input<string>;
    /**
     * A list of Amazon EC2 VPC security groups to associate with this InfluxDB instance.
     */
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of EC2 subnet IDs for this InfluxDB instance.
     */
    vpcSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}
