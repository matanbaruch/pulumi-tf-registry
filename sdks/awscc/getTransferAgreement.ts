// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransferAgreement(args: GetTransferAgreementArgs, opts?: pulumi.InvokeOptions): Promise<GetTransferAgreementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getTransferAgreement:getTransferAgreement", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransferAgreement.
 */
export interface GetTransferAgreementArgs {
    id: string;
}

/**
 * A collection of values returned by getTransferAgreement.
 */
export interface GetTransferAgreementResult {
    readonly accessRole: string;
    readonly agreementId: string;
    readonly arn: string;
    readonly baseDirectory: string;
    readonly description: string;
    readonly id: string;
    readonly localProfileId: string;
    readonly partnerProfileId: string;
    readonly serverId: string;
    readonly status: string;
    readonly tags: outputs.GetTransferAgreementTag[];
}
export function getTransferAgreementOutput(args: GetTransferAgreementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransferAgreementResult> {
    return pulumi.output(args).apply((a: any) => getTransferAgreement(a, opts))
}

/**
 * A collection of arguments for invoking getTransferAgreement.
 */
export interface GetTransferAgreementOutputArgs {
    id: pulumi.Input<string>;
}
