// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkmanagerConnectPeer(args: GetNetworkmanagerConnectPeerArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkmanagerConnectPeerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getNetworkmanagerConnectPeer:getNetworkmanagerConnectPeer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkmanagerConnectPeer.
 */
export interface GetNetworkmanagerConnectPeerArgs {
    id: string;
}

/**
 * A collection of values returned by getNetworkmanagerConnectPeer.
 */
export interface GetNetworkmanagerConnectPeerResult {
    readonly bgpOptions: outputs.GetNetworkmanagerConnectPeerBgpOptions;
    readonly configuration: outputs.GetNetworkmanagerConnectPeerConfiguration;
    readonly connectAttachmentId: string;
    readonly connectPeerId: string;
    readonly coreNetworkAddress: string;
    readonly coreNetworkId: string;
    readonly createdAt: string;
    readonly edgeLocation: string;
    readonly id: string;
    readonly insideCidrBlocks: string[];
    readonly peerAddress: string;
    readonly state: string;
    readonly subnetArn: string;
    readonly tags: outputs.GetNetworkmanagerConnectPeerTag[];
}
export function getNetworkmanagerConnectPeerOutput(args: GetNetworkmanagerConnectPeerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkmanagerConnectPeerResult> {
    return pulumi.output(args).apply((a: any) => getNetworkmanagerConnectPeer(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkmanagerConnectPeer.
 */
export interface GetNetworkmanagerConnectPeerOutputArgs {
    id: pulumi.Input<string>;
}
