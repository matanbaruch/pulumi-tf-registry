// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2Subnet(args: GetEc2SubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2SubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2Subnet:getEc2Subnet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2Subnet.
 */
export interface GetEc2SubnetArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2Subnet.
 */
export interface GetEc2SubnetResult {
    readonly assignIpv6AddressOnCreation: boolean;
    readonly availabilityZone: string;
    readonly availabilityZoneId: string;
    readonly cidrBlock: string;
    readonly enableDns64: boolean;
    readonly enableLniAtDeviceIndex: number;
    readonly id: string;
    readonly ipv4IpamPoolId: string;
    readonly ipv4NetmaskLength: number;
    readonly ipv6CidrBlock: string;
    readonly ipv6CidrBlocks: string[];
    readonly ipv6IpamPoolId: string;
    readonly ipv6Native: boolean;
    readonly ipv6NetmaskLength: number;
    readonly mapPublicIpOnLaunch: boolean;
    readonly networkAclAssociationId: string;
    readonly outpostArn: string;
    readonly privateDnsNameOptionsOnLaunch: outputs.GetEc2SubnetPrivateDnsNameOptionsOnLaunch;
    readonly subnetId: string;
    readonly tags: outputs.GetEc2SubnetTag[];
    readonly vpcId: string;
}
export function getEc2SubnetOutput(args: GetEc2SubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2SubnetResult> {
    return pulumi.output(args).apply((a: any) => getEc2Subnet(a, opts))
}

/**
 * A collection of arguments for invoking getEc2Subnet.
 */
export interface GetEc2SubnetOutputArgs {
    id: pulumi.Input<string>;
}
