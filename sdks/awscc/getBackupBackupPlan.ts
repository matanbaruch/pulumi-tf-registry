// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBackupBackupPlan(args: GetBackupBackupPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupBackupPlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getBackupBackupPlan:getBackupBackupPlan", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBackupBackupPlan.
 */
export interface GetBackupBackupPlanArgs {
    id: string;
}

/**
 * A collection of values returned by getBackupBackupPlan.
 */
export interface GetBackupBackupPlanResult {
    readonly backupPlan: outputs.GetBackupBackupPlanBackupPlan;
    readonly backupPlanArn: string;
    readonly backupPlanId: string;
    readonly backupPlanTags: {[key: string]: string};
    readonly id: string;
    readonly versionId: string;
}
export function getBackupBackupPlanOutput(args: GetBackupBackupPlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupBackupPlanResult> {
    return pulumi.output(args).apply((a: any) => getBackupBackupPlan(a, opts))
}

/**
 * A collection of arguments for invoking getBackupBackupPlan.
 */
export interface GetBackupBackupPlanOutputArgs {
    id: pulumi.Input<string>;
}
