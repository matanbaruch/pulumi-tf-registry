// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Route53resolverResolverQueryLoggingConfig extends pulumi.CustomResource {
    /**
     * Get an existing Route53resolverResolverQueryLoggingConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53resolverResolverQueryLoggingConfigState, opts?: pulumi.CustomResourceOptions): Route53resolverResolverQueryLoggingConfig {
        return new Route53resolverResolverQueryLoggingConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/route53resolverResolverQueryLoggingConfig:Route53resolverResolverQueryLoggingConfig';

    /**
     * Returns true if the given object is an instance of Route53resolverResolverQueryLoggingConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53resolverResolverQueryLoggingConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53resolverResolverQueryLoggingConfig.__pulumiType;
    }

    /**
     * Arn
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Count
     */
    public /*out*/ readonly associationCount!: pulumi.Output<number>;
    /**
     * Rfc3339TimeString
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The id of the creator request.
     */
    public /*out*/ readonly creatorRequestId!: pulumi.Output<string>;
    /**
     * destination arn
     */
    public readonly destinationArn!: pulumi.Output<string>;
    /**
     * ResolverQueryLogConfigName
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * AccountId
     */
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    /**
     * ResourceId
     */
    public /*out*/ readonly resolverQueryLoggingConfigId!: pulumi.Output<string>;
    /**
     * ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
     */
    public /*out*/ readonly shareStatus!: pulumi.Output<string>;
    /**
     * ResolverQueryLogConfigStatus, possible values are CREATING, CREATED, DELETED AND FAILED.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Route53resolverResolverQueryLoggingConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Route53resolverResolverQueryLoggingConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53resolverResolverQueryLoggingConfigArgs | Route53resolverResolverQueryLoggingConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53resolverResolverQueryLoggingConfigState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["associationCount"] = state ? state.associationCount : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["creatorRequestId"] = state ? state.creatorRequestId : undefined;
            resourceInputs["destinationArn"] = state ? state.destinationArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["resolverQueryLoggingConfigId"] = state ? state.resolverQueryLoggingConfigId : undefined;
            resourceInputs["shareStatus"] = state ? state.shareStatus : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as Route53resolverResolverQueryLoggingConfigArgs | undefined;
            resourceInputs["destinationArn"] = args ? args.destinationArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["associationCount"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["creatorRequestId"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["resolverQueryLoggingConfigId"] = undefined /*out*/;
            resourceInputs["shareStatus"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53resolverResolverQueryLoggingConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53resolverResolverQueryLoggingConfig resources.
 */
export interface Route53resolverResolverQueryLoggingConfigState {
    /**
     * Arn
     */
    arn?: pulumi.Input<string>;
    /**
     * Count
     */
    associationCount?: pulumi.Input<number>;
    /**
     * Rfc3339TimeString
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The id of the creator request.
     */
    creatorRequestId?: pulumi.Input<string>;
    /**
     * destination arn
     */
    destinationArn?: pulumi.Input<string>;
    /**
     * ResolverQueryLogConfigName
     */
    name?: pulumi.Input<string>;
    /**
     * AccountId
     */
    ownerId?: pulumi.Input<string>;
    /**
     * ResourceId
     */
    resolverQueryLoggingConfigId?: pulumi.Input<string>;
    /**
     * ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
     */
    shareStatus?: pulumi.Input<string>;
    /**
     * ResolverQueryLogConfigStatus, possible values are CREATING, CREATED, DELETED AND FAILED.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Route53resolverResolverQueryLoggingConfig resource.
 */
export interface Route53resolverResolverQueryLoggingConfigArgs {
    /**
     * destination arn
     */
    destinationArn?: pulumi.Input<string>;
    /**
     * ResolverQueryLogConfigName
     */
    name?: pulumi.Input<string>;
}
