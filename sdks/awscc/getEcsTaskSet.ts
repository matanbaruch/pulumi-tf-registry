// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEcsTaskSet(args: GetEcsTaskSetArgs, opts?: pulumi.InvokeOptions): Promise<GetEcsTaskSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEcsTaskSet:getEcsTaskSet", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEcsTaskSet.
 */
export interface GetEcsTaskSetArgs {
    id: string;
}

/**
 * A collection of values returned by getEcsTaskSet.
 */
export interface GetEcsTaskSetResult {
    readonly cluster: string;
    readonly externalId: string;
    readonly id: string;
    readonly launchType: string;
    readonly loadBalancers: outputs.GetEcsTaskSetLoadBalancer[];
    readonly networkConfiguration: outputs.GetEcsTaskSetNetworkConfiguration;
    readonly platformVersion: string;
    readonly scale: outputs.GetEcsTaskSetScale;
    readonly service: string;
    readonly serviceRegistries: outputs.GetEcsTaskSetServiceRegistry[];
    readonly tags: outputs.GetEcsTaskSetTag[];
    readonly taskDefinition: string;
    readonly taskSetId: string;
}
export function getEcsTaskSetOutput(args: GetEcsTaskSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEcsTaskSetResult> {
    return pulumi.output(args).apply((a: any) => getEcsTaskSet(a, opts))
}

/**
 * A collection of arguments for invoking getEcsTaskSet.
 */
export interface GetEcsTaskSetOutputArgs {
    id: pulumi.Input<string>;
}
