// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2SubnetRouteTableAssociation(args: GetEc2SubnetRouteTableAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2SubnetRouteTableAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2SubnetRouteTableAssociation:getEc2SubnetRouteTableAssociation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2SubnetRouteTableAssociation.
 */
export interface GetEc2SubnetRouteTableAssociationArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2SubnetRouteTableAssociation.
 */
export interface GetEc2SubnetRouteTableAssociationResult {
    readonly id: string;
    readonly routeTableId: string;
    readonly subnetId: string;
    readonly subnetRouteTableAssociationId: string;
}
export function getEc2SubnetRouteTableAssociationOutput(args: GetEc2SubnetRouteTableAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2SubnetRouteTableAssociationResult> {
    return pulumi.output(args).apply((a: any) => getEc2SubnetRouteTableAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getEc2SubnetRouteTableAssociation.
 */
export interface GetEc2SubnetRouteTableAssociationOutputArgs {
    id: pulumi.Input<string>;
}
