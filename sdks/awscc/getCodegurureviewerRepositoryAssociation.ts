// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCodegurureviewerRepositoryAssociation(args: GetCodegurureviewerRepositoryAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetCodegurureviewerRepositoryAssociationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCodegurureviewerRepositoryAssociation:getCodegurureviewerRepositoryAssociation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCodegurureviewerRepositoryAssociation.
 */
export interface GetCodegurureviewerRepositoryAssociationArgs {
    id: string;
}

/**
 * A collection of values returned by getCodegurureviewerRepositoryAssociation.
 */
export interface GetCodegurureviewerRepositoryAssociationResult {
    readonly associationArn: string;
    readonly bucketName: string;
    readonly connectionArn: string;
    readonly id: string;
    readonly name: string;
    readonly owner: string;
    readonly tags: outputs.GetCodegurureviewerRepositoryAssociationTag[];
    readonly type: string;
}
export function getCodegurureviewerRepositoryAssociationOutput(args: GetCodegurureviewerRepositoryAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCodegurureviewerRepositoryAssociationResult> {
    return pulumi.output(args).apply((a: any) => getCodegurureviewerRepositoryAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getCodegurureviewerRepositoryAssociation.
 */
export interface GetCodegurureviewerRepositoryAssociationOutputArgs {
    id: pulumi.Input<string>;
}
