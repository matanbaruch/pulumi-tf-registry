// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectView(args: GetConnectViewArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectViewResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConnectView:getConnectView", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectView.
 */
export interface GetConnectViewArgs {
    id: string;
}

/**
 * A collection of values returned by getConnectView.
 */
export interface GetConnectViewResult {
    readonly actions: string[];
    readonly description: string;
    readonly id: string;
    readonly instanceArn: string;
    readonly name: string;
    readonly tags: outputs.GetConnectViewTag[];
    readonly template: string;
    readonly viewArn: string;
    readonly viewContentSha256: string;
    readonly viewId: string;
}
export function getConnectViewOutput(args: GetConnectViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectViewResult> {
    return pulumi.output(args).apply((a: any) => getConnectView(a, opts))
}

/**
 * A collection of arguments for invoking getConnectView.
 */
export interface GetConnectViewOutputArgs {
    id: pulumi.Input<string>;
}
