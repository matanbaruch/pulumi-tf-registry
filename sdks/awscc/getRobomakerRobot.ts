// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRobomakerRobot(args: GetRobomakerRobotArgs, opts?: pulumi.InvokeOptions): Promise<GetRobomakerRobotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRobomakerRobot:getRobomakerRobot", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRobomakerRobot.
 */
export interface GetRobomakerRobotArgs {
    id: string;
}

/**
 * A collection of values returned by getRobomakerRobot.
 */
export interface GetRobomakerRobotResult {
    readonly architecture: string;
    readonly arn: string;
    readonly fleet: string;
    readonly greengrassGroupId: string;
    readonly id: string;
    readonly name: string;
    readonly tags: {[key: string]: string};
}
export function getRobomakerRobotOutput(args: GetRobomakerRobotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRobomakerRobotResult> {
    return pulumi.output(args).apply((a: any) => getRobomakerRobot(a, opts))
}

/**
 * A collection of arguments for invoking getRobomakerRobot.
 */
export interface GetRobomakerRobotOutputArgs {
    id: pulumi.Input<string>;
}
