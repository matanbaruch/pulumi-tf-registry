// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatasyncLocationEfs(args: GetDatasyncLocationEfsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasyncLocationEfsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatasyncLocationEfs:getDatasyncLocationEfs", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatasyncLocationEfs.
 */
export interface GetDatasyncLocationEfsArgs {
    id: string;
}

/**
 * A collection of values returned by getDatasyncLocationEfs.
 */
export interface GetDatasyncLocationEfsResult {
    readonly accessPointArn: string;
    readonly ec2Config: outputs.GetDatasyncLocationEfsEc2Config;
    readonly efsFilesystemArn: string;
    readonly fileSystemAccessRoleArn: string;
    readonly id: string;
    readonly inTransitEncryption: string;
    readonly locationArn: string;
    readonly locationUri: string;
    readonly subdirectory: string;
    readonly tags: outputs.GetDatasyncLocationEfsTag[];
}
export function getDatasyncLocationEfsOutput(args: GetDatasyncLocationEfsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasyncLocationEfsResult> {
    return pulumi.output(args).apply((a: any) => getDatasyncLocationEfs(a, opts))
}

/**
 * A collection of arguments for invoking getDatasyncLocationEfs.
 */
export interface GetDatasyncLocationEfsOutputArgs {
    id: pulumi.Input<string>;
}
