// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFinspaceEnvironment(args: GetFinspaceEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetFinspaceEnvironmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getFinspaceEnvironment:getFinspaceEnvironment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFinspaceEnvironment.
 */
export interface GetFinspaceEnvironmentArgs {
    id: string;
}

/**
 * A collection of values returned by getFinspaceEnvironment.
 */
export interface GetFinspaceEnvironmentResult {
    readonly awsAccountId: string;
    readonly dataBundles: string[];
    readonly dedicatedServiceAccountId: string;
    readonly description: string;
    readonly environmentArn: string;
    readonly environmentId: string;
    readonly environmentUrl: string;
    readonly federationMode: string;
    readonly federationParameters: outputs.GetFinspaceEnvironmentFederationParameters;
    readonly id: string;
    readonly kmsKeyId: string;
    readonly name: string;
    readonly sageMakerStudioDomainUrl: string;
    readonly status: string;
    readonly superuserParameters: outputs.GetFinspaceEnvironmentSuperuserParameters;
    readonly tags: outputs.GetFinspaceEnvironmentTag[];
}
export function getFinspaceEnvironmentOutput(args: GetFinspaceEnvironmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFinspaceEnvironmentResult> {
    return pulumi.output(args).apply((a: any) => getFinspaceEnvironment(a, opts))
}

/**
 * A collection of arguments for invoking getFinspaceEnvironment.
 */
export interface GetFinspaceEnvironmentOutputArgs {
    id: pulumi.Input<string>;
}
