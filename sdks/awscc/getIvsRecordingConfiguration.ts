// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIvsRecordingConfiguration(args: GetIvsRecordingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetIvsRecordingConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIvsRecordingConfiguration:getIvsRecordingConfiguration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIvsRecordingConfiguration.
 */
export interface GetIvsRecordingConfigurationArgs {
    id: string;
}

/**
 * A collection of values returned by getIvsRecordingConfiguration.
 */
export interface GetIvsRecordingConfigurationResult {
    readonly arn: string;
    readonly destinationConfiguration: outputs.GetIvsRecordingConfigurationDestinationConfiguration;
    readonly id: string;
    readonly name: string;
    readonly recordingReconnectWindowSeconds: number;
    readonly renditionConfiguration: outputs.GetIvsRecordingConfigurationRenditionConfiguration;
    readonly state: string;
    readonly tags: outputs.GetIvsRecordingConfigurationTag[];
    readonly thumbnailConfiguration: outputs.GetIvsRecordingConfigurationThumbnailConfiguration;
}
export function getIvsRecordingConfigurationOutput(args: GetIvsRecordingConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIvsRecordingConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getIvsRecordingConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getIvsRecordingConfiguration.
 */
export interface GetIvsRecordingConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
