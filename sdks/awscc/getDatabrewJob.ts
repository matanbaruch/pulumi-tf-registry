// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabrewJob(args: GetDatabrewJobArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabrewJobResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatabrewJob:getDatabrewJob", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabrewJob.
 */
export interface GetDatabrewJobArgs {
    id: string;
}

/**
 * A collection of values returned by getDatabrewJob.
 */
export interface GetDatabrewJobResult {
    readonly dataCatalogOutputs: outputs.GetDatabrewJobDataCatalogOutput[];
    readonly databaseOutputs: outputs.GetDatabrewJobDatabaseOutput[];
    readonly datasetName: string;
    readonly encryptionKeyArn: string;
    readonly encryptionMode: string;
    readonly id: string;
    readonly jobSample: outputs.GetDatabrewJobJobSample;
    readonly logSubscription: string;
    readonly maxCapacity: number;
    readonly maxRetries: number;
    readonly name: string;
    readonly outputLocation: outputs.GetDatabrewJobOutputLocation;
    readonly outputs: outputs.GetDatabrewJobOutput[];
    readonly profileConfiguration: outputs.GetDatabrewJobProfileConfiguration;
    readonly projectName: string;
    readonly recipe: outputs.GetDatabrewJobRecipe;
    readonly roleArn: string;
    readonly tags: outputs.GetDatabrewJobTag[];
    readonly timeout: number;
    readonly type: string;
    readonly validationConfigurations: outputs.GetDatabrewJobValidationConfiguration[];
}
export function getDatabrewJobOutput(args: GetDatabrewJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabrewJobResult> {
    return pulumi.output(args).apply((a: any) => getDatabrewJob(a, opts))
}

/**
 * A collection of arguments for invoking getDatabrewJob.
 */
export interface GetDatabrewJobOutputArgs {
    id: pulumi.Input<string>;
}
