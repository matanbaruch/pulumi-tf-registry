// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSagemakerInferenceExperiment(args: GetSagemakerInferenceExperimentArgs, opts?: pulumi.InvokeOptions): Promise<GetSagemakerInferenceExperimentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSagemakerInferenceExperiment:getSagemakerInferenceExperiment", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSagemakerInferenceExperiment.
 */
export interface GetSagemakerInferenceExperimentArgs {
    id: string;
}

/**
 * A collection of values returned by getSagemakerInferenceExperiment.
 */
export interface GetSagemakerInferenceExperimentResult {
    readonly arn: string;
    readonly creationTime: string;
    readonly dataStorageConfig: outputs.GetSagemakerInferenceExperimentDataStorageConfig;
    readonly description: string;
    readonly desiredState: string;
    readonly endpointMetadata: outputs.GetSagemakerInferenceExperimentEndpointMetadata;
    readonly endpointName: string;
    readonly id: string;
    readonly kmsKey: string;
    readonly lastModifiedTime: string;
    readonly modelVariants: outputs.GetSagemakerInferenceExperimentModelVariant[];
    readonly name: string;
    readonly roleArn: string;
    readonly schedule: outputs.GetSagemakerInferenceExperimentSchedule;
    readonly shadowModeConfig: outputs.GetSagemakerInferenceExperimentShadowModeConfig;
    readonly status: string;
    readonly statusReason: string;
    readonly tags: outputs.GetSagemakerInferenceExperimentTag[];
    readonly type: string;
}
export function getSagemakerInferenceExperimentOutput(args: GetSagemakerInferenceExperimentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSagemakerInferenceExperimentResult> {
    return pulumi.output(args).apply((a: any) => getSagemakerInferenceExperiment(a, opts))
}

/**
 * A collection of arguments for invoking getSagemakerInferenceExperiment.
 */
export interface GetSagemakerInferenceExperimentOutputArgs {
    id: pulumi.Input<string>;
}
