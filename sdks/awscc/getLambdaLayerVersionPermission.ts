// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLambdaLayerVersionPermission(args: GetLambdaLayerVersionPermissionArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaLayerVersionPermissionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLambdaLayerVersionPermission:getLambdaLayerVersionPermission", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaLayerVersionPermission.
 */
export interface GetLambdaLayerVersionPermissionArgs {
    id: string;
}

/**
 * A collection of values returned by getLambdaLayerVersionPermission.
 */
export interface GetLambdaLayerVersionPermissionResult {
    readonly action: string;
    readonly id: string;
    readonly layerVersionArn: string;
    readonly layerVersionPermissionId: string;
    readonly organizationId: string;
    readonly principal: string;
}
export function getLambdaLayerVersionPermissionOutput(args: GetLambdaLayerVersionPermissionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaLayerVersionPermissionResult> {
    return pulumi.output(args).apply((a: any) => getLambdaLayerVersionPermission(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaLayerVersionPermission.
 */
export interface GetLambdaLayerVersionPermissionOutputArgs {
    id: pulumi.Input<string>;
}
