// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SecuritylakeDataLake extends pulumi.CustomResource {
    /**
     * Get an existing SecuritylakeDataLake resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecuritylakeDataLakeState, opts?: pulumi.CustomResourceOptions): SecuritylakeDataLake {
        return new SecuritylakeDataLake(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/securitylakeDataLake:SecuritylakeDataLake';

    /**
     * Returns true if the given object is an instance of SecuritylakeDataLake.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecuritylakeDataLake {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecuritylakeDataLake.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) created by you to provide to the subscriber.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Provides encryption details of Amazon Security Lake object.
     */
    public readonly encryptionConfiguration!: pulumi.Output<outputs.SecuritylakeDataLakeEncryptionConfiguration>;
    /**
     * Provides lifecycle details of Amazon Security Lake object.
     */
    public readonly lifecycleConfiguration!: pulumi.Output<outputs.SecuritylakeDataLakeLifecycleConfiguration>;
    /**
     * The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and
     * normalization of AWS log sources and custom sources.
     */
    public readonly metaStoreManagerRoleArn!: pulumi.Output<string>;
    /**
     * Provides replication details of Amazon Security Lake object.
     */
    public readonly replicationConfiguration!: pulumi.Output<outputs.SecuritylakeDataLakeReplicationConfiguration>;
    /**
     * The ARN for the Amazon Security Lake Amazon S3 bucket.
     */
    public /*out*/ readonly s3BucketArn!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.SecuritylakeDataLakeTag[]>;

    /**
     * Create a SecuritylakeDataLake resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SecuritylakeDataLakeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecuritylakeDataLakeArgs | SecuritylakeDataLakeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecuritylakeDataLakeState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["encryptionConfiguration"] = state ? state.encryptionConfiguration : undefined;
            resourceInputs["lifecycleConfiguration"] = state ? state.lifecycleConfiguration : undefined;
            resourceInputs["metaStoreManagerRoleArn"] = state ? state.metaStoreManagerRoleArn : undefined;
            resourceInputs["replicationConfiguration"] = state ? state.replicationConfiguration : undefined;
            resourceInputs["s3BucketArn"] = state ? state.s3BucketArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SecuritylakeDataLakeArgs | undefined;
            resourceInputs["encryptionConfiguration"] = args ? args.encryptionConfiguration : undefined;
            resourceInputs["lifecycleConfiguration"] = args ? args.lifecycleConfiguration : undefined;
            resourceInputs["metaStoreManagerRoleArn"] = args ? args.metaStoreManagerRoleArn : undefined;
            resourceInputs["replicationConfiguration"] = args ? args.replicationConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["s3BucketArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecuritylakeDataLake.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SecuritylakeDataLake resources.
 */
export interface SecuritylakeDataLakeState {
    /**
     * The Amazon Resource Name (ARN) created by you to provide to the subscriber.
     */
    arn?: pulumi.Input<string>;
    /**
     * Provides encryption details of Amazon Security Lake object.
     */
    encryptionConfiguration?: pulumi.Input<inputs.SecuritylakeDataLakeEncryptionConfiguration>;
    /**
     * Provides lifecycle details of Amazon Security Lake object.
     */
    lifecycleConfiguration?: pulumi.Input<inputs.SecuritylakeDataLakeLifecycleConfiguration>;
    /**
     * The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and
     * normalization of AWS log sources and custom sources.
     */
    metaStoreManagerRoleArn?: pulumi.Input<string>;
    /**
     * Provides replication details of Amazon Security Lake object.
     */
    replicationConfiguration?: pulumi.Input<inputs.SecuritylakeDataLakeReplicationConfiguration>;
    /**
     * The ARN for the Amazon Security Lake Amazon S3 bucket.
     */
    s3BucketArn?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SecuritylakeDataLakeTag>[]>;
}

/**
 * The set of arguments for constructing a SecuritylakeDataLake resource.
 */
export interface SecuritylakeDataLakeArgs {
    /**
     * Provides encryption details of Amazon Security Lake object.
     */
    encryptionConfiguration?: pulumi.Input<inputs.SecuritylakeDataLakeEncryptionConfiguration>;
    /**
     * Provides lifecycle details of Amazon Security Lake object.
     */
    lifecycleConfiguration?: pulumi.Input<inputs.SecuritylakeDataLakeLifecycleConfiguration>;
    /**
     * The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and
     * normalization of AWS log sources and custom sources.
     */
    metaStoreManagerRoleArn?: pulumi.Input<string>;
    /**
     * Provides replication details of Amazon Security Lake object.
     */
    replicationConfiguration?: pulumi.Input<inputs.SecuritylakeDataLakeReplicationConfiguration>;
    tags?: pulumi.Input<pulumi.Input<inputs.SecuritylakeDataLakeTag>[]>;
}
