// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OrganizationsOrganization extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationsOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationsOrganizationState, opts?: pulumi.CustomResourceOptions): OrganizationsOrganization {
        return new OrganizationsOrganization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/organizationsOrganization:OrganizationsOrganization';

    /**
     * Returns true if the given object is an instance of OrganizationsOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationsOrganization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationsOrganization.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of an organization.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Specifies the feature set supported by the new organization. Each feature set supports different levels of
     * functionality.
     */
    public readonly featureSet!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the account that is designated as the management account for the organization.
     */
    public /*out*/ readonly managementAccountArn!: pulumi.Output<string>;
    /**
     * The email address that is associated with the AWS account that is designated as the management account for the
     * organization.
     */
    public /*out*/ readonly managementAccountEmail!: pulumi.Output<string>;
    /**
     * The unique identifier (ID) of the management account of an organization.
     */
    public /*out*/ readonly managementAccountId!: pulumi.Output<string>;
    /**
     * The unique identifier (ID) of an organization.
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * The unique identifier (ID) for the root.
     */
    public /*out*/ readonly rootId!: pulumi.Output<string>;

    /**
     * Create a OrganizationsOrganization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationsOrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationsOrganizationArgs | OrganizationsOrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationsOrganizationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["featureSet"] = state ? state.featureSet : undefined;
            resourceInputs["managementAccountArn"] = state ? state.managementAccountArn : undefined;
            resourceInputs["managementAccountEmail"] = state ? state.managementAccountEmail : undefined;
            resourceInputs["managementAccountId"] = state ? state.managementAccountId : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["rootId"] = state ? state.rootId : undefined;
        } else {
            const args = argsOrState as OrganizationsOrganizationArgs | undefined;
            resourceInputs["featureSet"] = args ? args.featureSet : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["managementAccountArn"] = undefined /*out*/;
            resourceInputs["managementAccountEmail"] = undefined /*out*/;
            resourceInputs["managementAccountId"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["rootId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationsOrganization.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationsOrganization resources.
 */
export interface OrganizationsOrganizationState {
    /**
     * The Amazon Resource Name (ARN) of an organization.
     */
    arn?: pulumi.Input<string>;
    /**
     * Specifies the feature set supported by the new organization. Each feature set supports different levels of
     * functionality.
     */
    featureSet?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the account that is designated as the management account for the organization.
     */
    managementAccountArn?: pulumi.Input<string>;
    /**
     * The email address that is associated with the AWS account that is designated as the management account for the
     * organization.
     */
    managementAccountEmail?: pulumi.Input<string>;
    /**
     * The unique identifier (ID) of the management account of an organization.
     */
    managementAccountId?: pulumi.Input<string>;
    /**
     * The unique identifier (ID) of an organization.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The unique identifier (ID) for the root.
     */
    rootId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationsOrganization resource.
 */
export interface OrganizationsOrganizationArgs {
    /**
     * Specifies the feature set supported by the new organization. Each feature set supports different levels of
     * functionality.
     */
    featureSet?: pulumi.Input<string>;
}
