// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBedrockDataSource(args: GetBedrockDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetBedrockDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getBedrockDataSource:getBedrockDataSource", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBedrockDataSource.
 */
export interface GetBedrockDataSourceArgs {
    id: string;
}

/**
 * A collection of values returned by getBedrockDataSource.
 */
export interface GetBedrockDataSourceResult {
    readonly createdAt: string;
    readonly dataDeletionPolicy: string;
    readonly dataSourceConfiguration: outputs.GetBedrockDataSourceDataSourceConfiguration;
    readonly dataSourceId: string;
    readonly dataSourceStatus: string;
    readonly description: string;
    readonly failureReasons: string[];
    readonly id: string;
    readonly knowledgeBaseId: string;
    readonly name: string;
    readonly serverSideEncryptionConfiguration: outputs.GetBedrockDataSourceServerSideEncryptionConfiguration;
    readonly updatedAt: string;
    readonly vectorIngestionConfiguration: outputs.GetBedrockDataSourceVectorIngestionConfiguration;
}
export function getBedrockDataSourceOutput(args: GetBedrockDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBedrockDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getBedrockDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getBedrockDataSource.
 */
export interface GetBedrockDataSourceOutputArgs {
    id: pulumi.Input<string>;
}
