// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Elasticloadbalancingv2TrustStoreRevocation extends pulumi.CustomResource {
    /**
     * Get an existing Elasticloadbalancingv2TrustStoreRevocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Elasticloadbalancingv2TrustStoreRevocationState, opts?: pulumi.CustomResourceOptions): Elasticloadbalancingv2TrustStoreRevocation {
        return new Elasticloadbalancingv2TrustStoreRevocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/elasticloadbalancingv2TrustStoreRevocation:Elasticloadbalancingv2TrustStoreRevocation';

    /**
     * Returns true if the given object is an instance of Elasticloadbalancingv2TrustStoreRevocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Elasticloadbalancingv2TrustStoreRevocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Elasticloadbalancingv2TrustStoreRevocation.__pulumiType;
    }

    /**
     * The attributes required to create a trust store revocation.
     */
    public readonly revocationContents!: pulumi.Output<outputs.Elasticloadbalancingv2TrustStoreRevocationRevocationContent[]>;
    /**
     * The ID associated with the revocation.
     */
    public /*out*/ readonly revocationId!: pulumi.Output<number>;
    /**
     * The Amazon Resource Name (ARN) of the trust store.
     */
    public readonly trustStoreArn!: pulumi.Output<string>;
    /**
     * The data associated with a trust store revocation
     */
    public /*out*/ readonly trustStoreRevocations!: pulumi.Output<outputs.Elasticloadbalancingv2TrustStoreRevocationTrustStoreRevocation[]>;

    /**
     * Create a Elasticloadbalancingv2TrustStoreRevocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Elasticloadbalancingv2TrustStoreRevocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Elasticloadbalancingv2TrustStoreRevocationArgs | Elasticloadbalancingv2TrustStoreRevocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Elasticloadbalancingv2TrustStoreRevocationState | undefined;
            resourceInputs["revocationContents"] = state ? state.revocationContents : undefined;
            resourceInputs["revocationId"] = state ? state.revocationId : undefined;
            resourceInputs["trustStoreArn"] = state ? state.trustStoreArn : undefined;
            resourceInputs["trustStoreRevocations"] = state ? state.trustStoreRevocations : undefined;
        } else {
            const args = argsOrState as Elasticloadbalancingv2TrustStoreRevocationArgs | undefined;
            resourceInputs["revocationContents"] = args ? args.revocationContents : undefined;
            resourceInputs["trustStoreArn"] = args ? args.trustStoreArn : undefined;
            resourceInputs["revocationId"] = undefined /*out*/;
            resourceInputs["trustStoreRevocations"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Elasticloadbalancingv2TrustStoreRevocation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Elasticloadbalancingv2TrustStoreRevocation resources.
 */
export interface Elasticloadbalancingv2TrustStoreRevocationState {
    /**
     * The attributes required to create a trust store revocation.
     */
    revocationContents?: pulumi.Input<pulumi.Input<inputs.Elasticloadbalancingv2TrustStoreRevocationRevocationContent>[]>;
    /**
     * The ID associated with the revocation.
     */
    revocationId?: pulumi.Input<number>;
    /**
     * The Amazon Resource Name (ARN) of the trust store.
     */
    trustStoreArn?: pulumi.Input<string>;
    /**
     * The data associated with a trust store revocation
     */
    trustStoreRevocations?: pulumi.Input<pulumi.Input<inputs.Elasticloadbalancingv2TrustStoreRevocationTrustStoreRevocation>[]>;
}

/**
 * The set of arguments for constructing a Elasticloadbalancingv2TrustStoreRevocation resource.
 */
export interface Elasticloadbalancingv2TrustStoreRevocationArgs {
    /**
     * The attributes required to create a trust store revocation.
     */
    revocationContents?: pulumi.Input<pulumi.Input<inputs.Elasticloadbalancingv2TrustStoreRevocationRevocationContent>[]>;
    /**
     * The Amazon Resource Name (ARN) of the trust store.
     */
    trustStoreArn?: pulumi.Input<string>;
}
