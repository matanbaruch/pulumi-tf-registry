// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPaymentcryptographyKey(args: GetPaymentcryptographyKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetPaymentcryptographyKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getPaymentcryptographyKey:getPaymentcryptographyKey", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPaymentcryptographyKey.
 */
export interface GetPaymentcryptographyKeyArgs {
    id: string;
}

/**
 * A collection of values returned by getPaymentcryptographyKey.
 */
export interface GetPaymentcryptographyKeyResult {
    readonly enabled: boolean;
    readonly exportable: boolean;
    readonly id: string;
    readonly keyAttributes: outputs.GetPaymentcryptographyKeyKeyAttributes;
    readonly keyCheckValueAlgorithm: string;
    readonly keyIdentifier: string;
    readonly keyOrigin: string;
    readonly keyState: string;
    readonly tags: outputs.GetPaymentcryptographyKeyTag[];
}
export function getPaymentcryptographyKeyOutput(args: GetPaymentcryptographyKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPaymentcryptographyKeyResult> {
    return pulumi.output(args).apply((a: any) => getPaymentcryptographyKey(a, opts))
}

/**
 * A collection of arguments for invoking getPaymentcryptographyKey.
 */
export interface GetPaymentcryptographyKeyOutputArgs {
    id: pulumi.Input<string>;
}
