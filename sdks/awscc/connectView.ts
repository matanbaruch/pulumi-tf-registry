// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ConnectView extends pulumi.CustomResource {
    /**
     * Get an existing ConnectView resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectViewState, opts?: pulumi.CustomResourceOptions): ConnectView {
        return new ConnectView(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/connectView:ConnectView';

    /**
     * Returns true if the given object is an instance of ConnectView.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectView {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectView.__pulumiType;
    }

    /**
     * The actions of the view in an array.
     */
    public readonly actions!: pulumi.Output<string[]>;
    /**
     * The description of the view.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the instance.
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * The name of the view.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * One or more tags.
     */
    public readonly tags!: pulumi.Output<outputs.ConnectViewTag[]>;
    /**
     * The template of the view as JSON.
     */
    public readonly template!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the view.
     */
    public /*out*/ readonly viewArn!: pulumi.Output<string>;
    /**
     * The view content hash.
     */
    public /*out*/ readonly viewContentSha256!: pulumi.Output<string>;
    /**
     * The view id of the view.
     */
    public /*out*/ readonly viewId!: pulumi.Output<string>;

    /**
     * Create a ConnectView resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectViewArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectViewArgs | ConnectViewState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectViewState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["viewArn"] = state ? state.viewArn : undefined;
            resourceInputs["viewContentSha256"] = state ? state.viewContentSha256 : undefined;
            resourceInputs["viewId"] = state ? state.viewId : undefined;
        } else {
            const args = argsOrState as ConnectViewArgs | undefined;
            if ((!args || args.actions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["viewArn"] = undefined /*out*/;
            resourceInputs["viewContentSha256"] = undefined /*out*/;
            resourceInputs["viewId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectView.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConnectView resources.
 */
export interface ConnectViewState {
    /**
     * The actions of the view in an array.
     */
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the view.
     */
    description?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the instance.
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * The name of the view.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectViewTag>[]>;
    /**
     * The template of the view as JSON.
     */
    template?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the view.
     */
    viewArn?: pulumi.Input<string>;
    /**
     * The view content hash.
     */
    viewContentSha256?: pulumi.Input<string>;
    /**
     * The view id of the view.
     */
    viewId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectView resource.
 */
export interface ConnectViewArgs {
    /**
     * The actions of the view in an array.
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the view.
     */
    description?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The name of the view.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ConnectViewTag>[]>;
    /**
     * The template of the view as JSON.
     */
    template: pulumi.Input<string>;
}
