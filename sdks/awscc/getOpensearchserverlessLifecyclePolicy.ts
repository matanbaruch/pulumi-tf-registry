// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOpensearchserverlessLifecyclePolicy(args: GetOpensearchserverlessLifecyclePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchserverlessLifecyclePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getOpensearchserverlessLifecyclePolicy:getOpensearchserverlessLifecyclePolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpensearchserverlessLifecyclePolicy.
 */
export interface GetOpensearchserverlessLifecyclePolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getOpensearchserverlessLifecyclePolicy.
 */
export interface GetOpensearchserverlessLifecyclePolicyResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly policy: string;
    readonly type: string;
}
export function getOpensearchserverlessLifecyclePolicyOutput(args: GetOpensearchserverlessLifecyclePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpensearchserverlessLifecyclePolicyResult> {
    return pulumi.output(args).apply((a: any) => getOpensearchserverlessLifecyclePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getOpensearchserverlessLifecyclePolicy.
 */
export interface GetOpensearchserverlessLifecyclePolicyOutputArgs {
    id: pulumi.Input<string>;
}
