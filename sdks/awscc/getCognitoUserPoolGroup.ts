// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCognitoUserPoolGroup(args: GetCognitoUserPoolGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetCognitoUserPoolGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCognitoUserPoolGroup:getCognitoUserPoolGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCognitoUserPoolGroup.
 */
export interface GetCognitoUserPoolGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getCognitoUserPoolGroup.
 */
export interface GetCognitoUserPoolGroupResult {
    readonly description: string;
    readonly groupName: string;
    readonly id: string;
    readonly precedence: number;
    readonly roleArn: string;
    readonly userPoolId: string;
}
export function getCognitoUserPoolGroupOutput(args: GetCognitoUserPoolGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCognitoUserPoolGroupResult> {
    return pulumi.output(args).apply((a: any) => getCognitoUserPoolGroup(a, opts))
}

/**
 * A collection of arguments for invoking getCognitoUserPoolGroup.
 */
export interface GetCognitoUserPoolGroupOutputArgs {
    id: pulumi.Input<string>;
}
