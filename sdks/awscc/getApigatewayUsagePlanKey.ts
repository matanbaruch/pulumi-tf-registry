// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApigatewayUsagePlanKey(args: GetApigatewayUsagePlanKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayUsagePlanKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayUsagePlanKey:getApigatewayUsagePlanKey", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayUsagePlanKey.
 */
export interface GetApigatewayUsagePlanKeyArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayUsagePlanKey.
 */
export interface GetApigatewayUsagePlanKeyResult {
    readonly id: string;
    readonly keyId: string;
    readonly keyType: string;
    readonly usagePlanId: string;
    readonly usagePlanKeyId: string;
}
export function getApigatewayUsagePlanKeyOutput(args: GetApigatewayUsagePlanKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayUsagePlanKeyResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayUsagePlanKey(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayUsagePlanKey.
 */
export interface GetApigatewayUsagePlanKeyOutputArgs {
    id: pulumi.Input<string>;
}
