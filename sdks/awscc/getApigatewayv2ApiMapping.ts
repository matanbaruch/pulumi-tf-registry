// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApigatewayv2ApiMapping(args: GetApigatewayv2ApiMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayv2ApiMappingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayv2ApiMapping:getApigatewayv2ApiMapping", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayv2ApiMapping.
 */
export interface GetApigatewayv2ApiMappingArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayv2ApiMapping.
 */
export interface GetApigatewayv2ApiMappingResult {
    readonly apiId: string;
    readonly apiMappingId: string;
    readonly apiMappingKey: string;
    readonly domainName: string;
    readonly id: string;
    readonly stage: string;
}
export function getApigatewayv2ApiMappingOutput(args: GetApigatewayv2ApiMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayv2ApiMappingResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayv2ApiMapping(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayv2ApiMapping.
 */
export interface GetApigatewayv2ApiMappingOutputArgs {
    id: pulumi.Input<string>;
}
