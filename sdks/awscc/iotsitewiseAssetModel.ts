// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotsitewiseAssetModel extends pulumi.CustomResource {
    /**
     * Get an existing IotsitewiseAssetModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotsitewiseAssetModelState, opts?: pulumi.CustomResourceOptions): IotsitewiseAssetModel {
        return new IotsitewiseAssetModel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotsitewiseAssetModel:IotsitewiseAssetModel';

    /**
     * Returns true if the given object is an instance of IotsitewiseAssetModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotsitewiseAssetModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotsitewiseAssetModel.__pulumiType;
    }

    /**
     * The ARN of the asset model, which has the following format.
     */
    public /*out*/ readonly assetModelArn!: pulumi.Output<string>;
    /**
     * The composite asset models that are part of this asset model. Composite asset models are asset models that contain
     * specific properties.
     */
    public readonly assetModelCompositeModels!: pulumi.Output<outputs.IotsitewiseAssetModelAssetModelCompositeModel[]>;
    /**
     * A description for the asset model.
     */
    public readonly assetModelDescription!: pulumi.Output<string>;
    /**
     * The external ID of the asset model.
     */
    public readonly assetModelExternalId!: pulumi.Output<string>;
    /**
     * The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of
     * any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.
     */
    public readonly assetModelHierarchies!: pulumi.Output<outputs.IotsitewiseAssetModelAssetModelHierarchy[]>;
    /**
     * The ID of the asset model.
     */
    public /*out*/ readonly assetModelId!: pulumi.Output<string>;
    /**
     * A unique, friendly name for the asset model.
     */
    public readonly assetModelName!: pulumi.Output<string>;
    /**
     * The property definitions of the asset model. You can specify up to 200 properties per asset model.
     */
    public readonly assetModelProperties!: pulumi.Output<outputs.IotsitewiseAssetModelAssetModelProperty[]>;
    /**
     * The type of the asset model (ASSET_MODEL OR COMPONENT_MODEL)
     */
    public readonly assetModelType!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    public readonly tags!: pulumi.Output<outputs.IotsitewiseAssetModelTag[]>;

    /**
     * Create a IotsitewiseAssetModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotsitewiseAssetModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotsitewiseAssetModelArgs | IotsitewiseAssetModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotsitewiseAssetModelState | undefined;
            resourceInputs["assetModelArn"] = state ? state.assetModelArn : undefined;
            resourceInputs["assetModelCompositeModels"] = state ? state.assetModelCompositeModels : undefined;
            resourceInputs["assetModelDescription"] = state ? state.assetModelDescription : undefined;
            resourceInputs["assetModelExternalId"] = state ? state.assetModelExternalId : undefined;
            resourceInputs["assetModelHierarchies"] = state ? state.assetModelHierarchies : undefined;
            resourceInputs["assetModelId"] = state ? state.assetModelId : undefined;
            resourceInputs["assetModelName"] = state ? state.assetModelName : undefined;
            resourceInputs["assetModelProperties"] = state ? state.assetModelProperties : undefined;
            resourceInputs["assetModelType"] = state ? state.assetModelType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IotsitewiseAssetModelArgs | undefined;
            if ((!args || args.assetModelName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assetModelName'");
            }
            resourceInputs["assetModelCompositeModels"] = args ? args.assetModelCompositeModels : undefined;
            resourceInputs["assetModelDescription"] = args ? args.assetModelDescription : undefined;
            resourceInputs["assetModelExternalId"] = args ? args.assetModelExternalId : undefined;
            resourceInputs["assetModelHierarchies"] = args ? args.assetModelHierarchies : undefined;
            resourceInputs["assetModelName"] = args ? args.assetModelName : undefined;
            resourceInputs["assetModelProperties"] = args ? args.assetModelProperties : undefined;
            resourceInputs["assetModelType"] = args ? args.assetModelType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["assetModelArn"] = undefined /*out*/;
            resourceInputs["assetModelId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotsitewiseAssetModel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotsitewiseAssetModel resources.
 */
export interface IotsitewiseAssetModelState {
    /**
     * The ARN of the asset model, which has the following format.
     */
    assetModelArn?: pulumi.Input<string>;
    /**
     * The composite asset models that are part of this asset model. Composite asset models are asset models that contain
     * specific properties.
     */
    assetModelCompositeModels?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelAssetModelCompositeModel>[]>;
    /**
     * A description for the asset model.
     */
    assetModelDescription?: pulumi.Input<string>;
    /**
     * The external ID of the asset model.
     */
    assetModelExternalId?: pulumi.Input<string>;
    /**
     * The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of
     * any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.
     */
    assetModelHierarchies?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelAssetModelHierarchy>[]>;
    /**
     * The ID of the asset model.
     */
    assetModelId?: pulumi.Input<string>;
    /**
     * A unique, friendly name for the asset model.
     */
    assetModelName?: pulumi.Input<string>;
    /**
     * The property definitions of the asset model. You can specify up to 200 properties per asset model.
     */
    assetModelProperties?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelAssetModelProperty>[]>;
    /**
     * The type of the asset model (ASSET_MODEL OR COMPONENT_MODEL)
     */
    assetModelType?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelTag>[]>;
}

/**
 * The set of arguments for constructing a IotsitewiseAssetModel resource.
 */
export interface IotsitewiseAssetModelArgs {
    /**
     * The composite asset models that are part of this asset model. Composite asset models are asset models that contain
     * specific properties.
     */
    assetModelCompositeModels?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelAssetModelCompositeModel>[]>;
    /**
     * A description for the asset model.
     */
    assetModelDescription?: pulumi.Input<string>;
    /**
     * The external ID of the asset model.
     */
    assetModelExternalId?: pulumi.Input<string>;
    /**
     * The hierarchy definitions of the asset model. Each hierarchy specifies an asset model whose assets can be children of
     * any other assets created from this asset model. You can specify up to 10 hierarchies per asset model.
     */
    assetModelHierarchies?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelAssetModelHierarchy>[]>;
    /**
     * A unique, friendly name for the asset model.
     */
    assetModelName: pulumi.Input<string>;
    /**
     * The property definitions of the asset model. You can specify up to 200 properties per asset model.
     */
    assetModelProperties?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelAssetModelProperty>[]>;
    /**
     * The type of the asset model (ASSET_MODEL OR COMPONENT_MODEL)
     */
    assetModelType?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotsitewiseAssetModelTag>[]>;
}
