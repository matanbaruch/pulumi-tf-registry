// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotSecurityProfile extends pulumi.CustomResource {
    /**
     * Get an existing IotSecurityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotSecurityProfileState, opts?: pulumi.CustomResourceOptions): IotSecurityProfile {
        return new IotSecurityProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotSecurityProfile:IotSecurityProfile';

    /**
     * Returns true if the given object is an instance of IotSecurityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotSecurityProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotSecurityProfile.__pulumiType;
    }

    /**
     * A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's
     * behaviors, but it is also retained for any metric specified here.
     */
    public readonly additionalMetricsToRetainV2s!: pulumi.Output<outputs.IotSecurityProfileAdditionalMetricsToRetainV2[]>;
    /**
     * Specifies the destinations to which alerts are sent.
     */
    public readonly alertTargets!: pulumi.Output<{[key: string]: outputs.IotSecurityProfileAlertTargets}>;
    /**
     * Specifies the behaviors that, when violated by a device (thing), cause an alert.
     */
    public readonly behaviors!: pulumi.Output<outputs.IotSecurityProfileBehavior[]>;
    /**
     * A structure containing the mqtt topic for metrics export.
     */
    public readonly metricsExportConfig!: pulumi.Output<outputs.IotSecurityProfileMetricsExportConfig>;
    /**
     * The ARN (Amazon resource name) of the created security profile.
     */
    public /*out*/ readonly securityProfileArn!: pulumi.Output<string>;
    /**
     * A description of the security profile.
     */
    public readonly securityProfileDescription!: pulumi.Output<string>;
    /**
     * A unique identifier for the security profile.
     */
    public readonly securityProfileName!: pulumi.Output<string>;
    /**
     * Metadata that can be used to manage the security profile.
     */
    public readonly tags!: pulumi.Output<outputs.IotSecurityProfileTag[]>;
    /**
     * A set of target ARNs that the security profile is attached to.
     */
    public readonly targetArns!: pulumi.Output<string[]>;

    /**
     * Create a IotSecurityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IotSecurityProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotSecurityProfileArgs | IotSecurityProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotSecurityProfileState | undefined;
            resourceInputs["additionalMetricsToRetainV2s"] = state ? state.additionalMetricsToRetainV2s : undefined;
            resourceInputs["alertTargets"] = state ? state.alertTargets : undefined;
            resourceInputs["behaviors"] = state ? state.behaviors : undefined;
            resourceInputs["metricsExportConfig"] = state ? state.metricsExportConfig : undefined;
            resourceInputs["securityProfileArn"] = state ? state.securityProfileArn : undefined;
            resourceInputs["securityProfileDescription"] = state ? state.securityProfileDescription : undefined;
            resourceInputs["securityProfileName"] = state ? state.securityProfileName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetArns"] = state ? state.targetArns : undefined;
        } else {
            const args = argsOrState as IotSecurityProfileArgs | undefined;
            resourceInputs["additionalMetricsToRetainV2s"] = args ? args.additionalMetricsToRetainV2s : undefined;
            resourceInputs["alertTargets"] = args ? args.alertTargets : undefined;
            resourceInputs["behaviors"] = args ? args.behaviors : undefined;
            resourceInputs["metricsExportConfig"] = args ? args.metricsExportConfig : undefined;
            resourceInputs["securityProfileDescription"] = args ? args.securityProfileDescription : undefined;
            resourceInputs["securityProfileName"] = args ? args.securityProfileName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetArns"] = args ? args.targetArns : undefined;
            resourceInputs["securityProfileArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotSecurityProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotSecurityProfile resources.
 */
export interface IotSecurityProfileState {
    /**
     * A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's
     * behaviors, but it is also retained for any metric specified here.
     */
    additionalMetricsToRetainV2s?: pulumi.Input<pulumi.Input<inputs.IotSecurityProfileAdditionalMetricsToRetainV2>[]>;
    /**
     * Specifies the destinations to which alerts are sent.
     */
    alertTargets?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IotSecurityProfileAlertTargets>}>;
    /**
     * Specifies the behaviors that, when violated by a device (thing), cause an alert.
     */
    behaviors?: pulumi.Input<pulumi.Input<inputs.IotSecurityProfileBehavior>[]>;
    /**
     * A structure containing the mqtt topic for metrics export.
     */
    metricsExportConfig?: pulumi.Input<inputs.IotSecurityProfileMetricsExportConfig>;
    /**
     * The ARN (Amazon resource name) of the created security profile.
     */
    securityProfileArn?: pulumi.Input<string>;
    /**
     * A description of the security profile.
     */
    securityProfileDescription?: pulumi.Input<string>;
    /**
     * A unique identifier for the security profile.
     */
    securityProfileName?: pulumi.Input<string>;
    /**
     * Metadata that can be used to manage the security profile.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotSecurityProfileTag>[]>;
    /**
     * A set of target ARNs that the security profile is attached to.
     */
    targetArns?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a IotSecurityProfile resource.
 */
export interface IotSecurityProfileArgs {
    /**
     * A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's
     * behaviors, but it is also retained for any metric specified here.
     */
    additionalMetricsToRetainV2s?: pulumi.Input<pulumi.Input<inputs.IotSecurityProfileAdditionalMetricsToRetainV2>[]>;
    /**
     * Specifies the destinations to which alerts are sent.
     */
    alertTargets?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IotSecurityProfileAlertTargets>}>;
    /**
     * Specifies the behaviors that, when violated by a device (thing), cause an alert.
     */
    behaviors?: pulumi.Input<pulumi.Input<inputs.IotSecurityProfileBehavior>[]>;
    /**
     * A structure containing the mqtt topic for metrics export.
     */
    metricsExportConfig?: pulumi.Input<inputs.IotSecurityProfileMetricsExportConfig>;
    /**
     * A description of the security profile.
     */
    securityProfileDescription?: pulumi.Input<string>;
    /**
     * A unique identifier for the security profile.
     */
    securityProfileName?: pulumi.Input<string>;
    /**
     * Metadata that can be used to manage the security profile.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotSecurityProfileTag>[]>;
    /**
     * A set of target ARNs that the security profile is attached to.
     */
    targetArns?: pulumi.Input<pulumi.Input<string>[]>;
}
