// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class S3StorageLens extends pulumi.CustomResource {
    /**
     * Get an existing S3StorageLens resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: S3StorageLensState, opts?: pulumi.CustomResourceOptions): S3StorageLens {
        return new S3StorageLens(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/s3StorageLens:S3StorageLens';

    /**
     * Returns true if the given object is an instance of S3StorageLens.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is S3StorageLens {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === S3StorageLens.__pulumiType;
    }

    /**
     * Specifies the details of Amazon S3 Storage Lens configuration.
     */
    public readonly storageLensConfiguration!: pulumi.Output<outputs.S3StorageLensStorageLensConfiguration>;
    /**
     * A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration.
     */
    public readonly tags!: pulumi.Output<outputs.S3StorageLensTag[]>;

    /**
     * Create a S3StorageLens resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: S3StorageLensArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: S3StorageLensArgs | S3StorageLensState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as S3StorageLensState | undefined;
            resourceInputs["storageLensConfiguration"] = state ? state.storageLensConfiguration : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as S3StorageLensArgs | undefined;
            if ((!args || args.storageLensConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageLensConfiguration'");
            }
            resourceInputs["storageLensConfiguration"] = args ? args.storageLensConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(S3StorageLens.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering S3StorageLens resources.
 */
export interface S3StorageLensState {
    /**
     * Specifies the details of Amazon S3 Storage Lens configuration.
     */
    storageLensConfiguration?: pulumi.Input<inputs.S3StorageLensStorageLensConfiguration>;
    /**
     * A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.S3StorageLensTag>[]>;
}

/**
 * The set of arguments for constructing a S3StorageLens resource.
 */
export interface S3StorageLensArgs {
    /**
     * Specifies the details of Amazon S3 Storage Lens configuration.
     */
    storageLensConfiguration: pulumi.Input<inputs.S3StorageLensStorageLensConfiguration>;
    /**
     * A set of tags (key-value pairs) for this Amazon S3 Storage Lens configuration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.S3StorageLensTag>[]>;
}
