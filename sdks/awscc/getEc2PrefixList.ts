// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEc2PrefixList(args: GetEc2PrefixListArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2PrefixListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2PrefixList:getEc2PrefixList", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2PrefixList.
 */
export interface GetEc2PrefixListArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2PrefixList.
 */
export interface GetEc2PrefixListResult {
    readonly addressFamily: string;
    readonly arn: string;
    readonly entries: outputs.GetEc2PrefixListEntry[];
    readonly id: string;
    readonly maxEntries: number;
    readonly ownerId: string;
    readonly prefixListId: string;
    readonly prefixListName: string;
    readonly tags: outputs.GetEc2PrefixListTag[];
    readonly version: number;
}
export function getEc2PrefixListOutput(args: GetEc2PrefixListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2PrefixListResult> {
    return pulumi.output(args).apply((a: any) => getEc2PrefixList(a, opts))
}

/**
 * A collection of arguments for invoking getEc2PrefixList.
 */
export interface GetEc2PrefixListOutputArgs {
    id: pulumi.Input<string>;
}
