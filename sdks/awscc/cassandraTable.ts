// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CassandraTable extends pulumi.CustomResource {
    /**
     * Get an existing CassandraTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CassandraTableState, opts?: pulumi.CustomResourceOptions): CassandraTable {
        return new CassandraTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/cassandraTable:CassandraTable';

    /**
     * Returns true if the given object is an instance of CassandraTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CassandraTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CassandraTable.__pulumiType;
    }

    /**
     * Represents the read and write settings used for AutoScaling.
     */
    public readonly autoScalingSpecifications!: pulumi.Output<outputs.CassandraTableAutoScalingSpecifications>;
    public readonly billingMode!: pulumi.Output<outputs.CassandraTableBillingMode>;
    /**
     * Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it
     * is enabled it cannot be disabled again.
     */
    public readonly clientSideTimestampsEnabled!: pulumi.Output<boolean>;
    /**
     * Clustering key columns of the table
     */
    public readonly clusteringKeyColumns!: pulumi.Output<outputs.CassandraTableClusteringKeyColumn[]>;
    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the
     * entire table and an expiration timestamp is added to each column.
     */
    public readonly defaultTimeToLive!: pulumi.Output<number>;
    /**
     * Represents the settings used to enable server-side encryption
     */
    public readonly encryptionSpecification!: pulumi.Output<outputs.CassandraTableEncryptionSpecification>;
    /**
     * Name for Cassandra keyspace
     */
    public readonly keyspaceName!: pulumi.Output<string>;
    /**
     * Partition key columns of the table
     */
    public readonly partitionKeyColumns!: pulumi.Output<outputs.CassandraTablePartitionKeyColumn[]>;
    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     */
    public readonly pointInTimeRecoveryEnabled!: pulumi.Output<boolean>;
    /**
     * Non-key columns of the table
     */
    public readonly regularColumns!: pulumi.Output<outputs.CassandraTableRegularColumn[]>;
    public readonly replicaSpecifications!: pulumi.Output<outputs.CassandraTableReplicaSpecification[]>;
    /**
     * Name for Cassandra table
     */
    public readonly tableName!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource
     */
    public readonly tags!: pulumi.Output<outputs.CassandraTableTag[]>;

    /**
     * Create a CassandraTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CassandraTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CassandraTableArgs | CassandraTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CassandraTableState | undefined;
            resourceInputs["autoScalingSpecifications"] = state ? state.autoScalingSpecifications : undefined;
            resourceInputs["billingMode"] = state ? state.billingMode : undefined;
            resourceInputs["clientSideTimestampsEnabled"] = state ? state.clientSideTimestampsEnabled : undefined;
            resourceInputs["clusteringKeyColumns"] = state ? state.clusteringKeyColumns : undefined;
            resourceInputs["defaultTimeToLive"] = state ? state.defaultTimeToLive : undefined;
            resourceInputs["encryptionSpecification"] = state ? state.encryptionSpecification : undefined;
            resourceInputs["keyspaceName"] = state ? state.keyspaceName : undefined;
            resourceInputs["partitionKeyColumns"] = state ? state.partitionKeyColumns : undefined;
            resourceInputs["pointInTimeRecoveryEnabled"] = state ? state.pointInTimeRecoveryEnabled : undefined;
            resourceInputs["regularColumns"] = state ? state.regularColumns : undefined;
            resourceInputs["replicaSpecifications"] = state ? state.replicaSpecifications : undefined;
            resourceInputs["tableName"] = state ? state.tableName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as CassandraTableArgs | undefined;
            if ((!args || args.keyspaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyspaceName'");
            }
            if ((!args || args.partitionKeyColumns === undefined) && !opts.urn) {
                throw new Error("Missing required property 'partitionKeyColumns'");
            }
            resourceInputs["autoScalingSpecifications"] = args ? args.autoScalingSpecifications : undefined;
            resourceInputs["billingMode"] = args ? args.billingMode : undefined;
            resourceInputs["clientSideTimestampsEnabled"] = args ? args.clientSideTimestampsEnabled : undefined;
            resourceInputs["clusteringKeyColumns"] = args ? args.clusteringKeyColumns : undefined;
            resourceInputs["defaultTimeToLive"] = args ? args.defaultTimeToLive : undefined;
            resourceInputs["encryptionSpecification"] = args ? args.encryptionSpecification : undefined;
            resourceInputs["keyspaceName"] = args ? args.keyspaceName : undefined;
            resourceInputs["partitionKeyColumns"] = args ? args.partitionKeyColumns : undefined;
            resourceInputs["pointInTimeRecoveryEnabled"] = args ? args.pointInTimeRecoveryEnabled : undefined;
            resourceInputs["regularColumns"] = args ? args.regularColumns : undefined;
            resourceInputs["replicaSpecifications"] = args ? args.replicaSpecifications : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CassandraTable.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CassandraTable resources.
 */
export interface CassandraTableState {
    /**
     * Represents the read and write settings used for AutoScaling.
     */
    autoScalingSpecifications?: pulumi.Input<inputs.CassandraTableAutoScalingSpecifications>;
    billingMode?: pulumi.Input<inputs.CassandraTableBillingMode>;
    /**
     * Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it
     * is enabled it cannot be disabled again.
     */
    clientSideTimestampsEnabled?: pulumi.Input<boolean>;
    /**
     * Clustering key columns of the table
     */
    clusteringKeyColumns?: pulumi.Input<pulumi.Input<inputs.CassandraTableClusteringKeyColumn>[]>;
    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the
     * entire table and an expiration timestamp is added to each column.
     */
    defaultTimeToLive?: pulumi.Input<number>;
    /**
     * Represents the settings used to enable server-side encryption
     */
    encryptionSpecification?: pulumi.Input<inputs.CassandraTableEncryptionSpecification>;
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName?: pulumi.Input<string>;
    /**
     * Partition key columns of the table
     */
    partitionKeyColumns?: pulumi.Input<pulumi.Input<inputs.CassandraTablePartitionKeyColumn>[]>;
    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     */
    pointInTimeRecoveryEnabled?: pulumi.Input<boolean>;
    /**
     * Non-key columns of the table
     */
    regularColumns?: pulumi.Input<pulumi.Input<inputs.CassandraTableRegularColumn>[]>;
    replicaSpecifications?: pulumi.Input<pulumi.Input<inputs.CassandraTableReplicaSpecification>[]>;
    /**
     * Name for Cassandra table
     */
    tableName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CassandraTableTag>[]>;
}

/**
 * The set of arguments for constructing a CassandraTable resource.
 */
export interface CassandraTableArgs {
    /**
     * Represents the read and write settings used for AutoScaling.
     */
    autoScalingSpecifications?: pulumi.Input<inputs.CassandraTableAutoScalingSpecifications>;
    billingMode?: pulumi.Input<inputs.CassandraTableBillingMode>;
    /**
     * Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it
     * is enabled it cannot be disabled again.
     */
    clientSideTimestampsEnabled?: pulumi.Input<boolean>;
    /**
     * Clustering key columns of the table
     */
    clusteringKeyColumns?: pulumi.Input<pulumi.Input<inputs.CassandraTableClusteringKeyColumn>[]>;
    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the
     * entire table and an expiration timestamp is added to each column.
     */
    defaultTimeToLive?: pulumi.Input<number>;
    /**
     * Represents the settings used to enable server-side encryption
     */
    encryptionSpecification?: pulumi.Input<inputs.CassandraTableEncryptionSpecification>;
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: pulumi.Input<string>;
    /**
     * Partition key columns of the table
     */
    partitionKeyColumns: pulumi.Input<pulumi.Input<inputs.CassandraTablePartitionKeyColumn>[]>;
    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     */
    pointInTimeRecoveryEnabled?: pulumi.Input<boolean>;
    /**
     * Non-key columns of the table
     */
    regularColumns?: pulumi.Input<pulumi.Input<inputs.CassandraTableRegularColumn>[]>;
    replicaSpecifications?: pulumi.Input<pulumi.Input<inputs.CassandraTableReplicaSpecification>[]>;
    /**
     * Name for Cassandra table
     */
    tableName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CassandraTableTag>[]>;
}
