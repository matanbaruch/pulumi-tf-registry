// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ElasticbeanstalkApplication extends pulumi.CustomResource {
    /**
     * Get an existing ElasticbeanstalkApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElasticbeanstalkApplicationState, opts?: pulumi.CustomResourceOptions): ElasticbeanstalkApplication {
        return new ElasticbeanstalkApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/elasticbeanstalkApplication:ElasticbeanstalkApplication';

    /**
     * Returns true if the given object is an instance of ElasticbeanstalkApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElasticbeanstalkApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElasticbeanstalkApplication.__pulumiType;
    }

    /**
     * A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique
     * physical ID and uses that ID for the application name.
     */
    public readonly applicationName!: pulumi.Output<string>;
    /**
     * Your description of the application.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Specifies an application resource lifecycle configuration to prevent your application from accumulating too many
     * versions.
     */
    public readonly resourceLifecycleConfig!: pulumi.Output<outputs.ElasticbeanstalkApplicationResourceLifecycleConfig>;

    /**
     * Create a ElasticbeanstalkApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ElasticbeanstalkApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElasticbeanstalkApplicationArgs | ElasticbeanstalkApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElasticbeanstalkApplicationState | undefined;
            resourceInputs["applicationName"] = state ? state.applicationName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["resourceLifecycleConfig"] = state ? state.resourceLifecycleConfig : undefined;
        } else {
            const args = argsOrState as ElasticbeanstalkApplicationArgs | undefined;
            resourceInputs["applicationName"] = args ? args.applicationName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["resourceLifecycleConfig"] = args ? args.resourceLifecycleConfig : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElasticbeanstalkApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ElasticbeanstalkApplication resources.
 */
export interface ElasticbeanstalkApplicationState {
    /**
     * A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique
     * physical ID and uses that ID for the application name.
     */
    applicationName?: pulumi.Input<string>;
    /**
     * Your description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies an application resource lifecycle configuration to prevent your application from accumulating too many
     * versions.
     */
    resourceLifecycleConfig?: pulumi.Input<inputs.ElasticbeanstalkApplicationResourceLifecycleConfig>;
}

/**
 * The set of arguments for constructing a ElasticbeanstalkApplication resource.
 */
export interface ElasticbeanstalkApplicationArgs {
    /**
     * A name for the Elastic Beanstalk application. If you don't specify a name, AWS CloudFormation generates a unique
     * physical ID and uses that ID for the application name.
     */
    applicationName?: pulumi.Input<string>;
    /**
     * Your description of the application.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies an application resource lifecycle configuration to prevent your application from accumulating too many
     * versions.
     */
    resourceLifecycleConfig?: pulumi.Input<inputs.ElasticbeanstalkApplicationResourceLifecycleConfig>;
}
