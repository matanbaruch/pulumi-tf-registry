// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoscalingAutoScalingGroup(args: GetAutoscalingAutoScalingGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoscalingAutoScalingGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getAutoscalingAutoScalingGroup:getAutoscalingAutoScalingGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoscalingAutoScalingGroup.
 */
export interface GetAutoscalingAutoScalingGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getAutoscalingAutoScalingGroup.
 */
export interface GetAutoscalingAutoScalingGroupResult {
    readonly autoScalingGroupName: string;
    readonly availabilityZones: string[];
    readonly capacityRebalance: boolean;
    readonly context: string;
    readonly cooldown: string;
    readonly defaultInstanceWarmup: number;
    readonly desiredCapacity: string;
    readonly desiredCapacityType: string;
    readonly healthCheckGracePeriod: number;
    readonly healthCheckType: string;
    readonly id: string;
    readonly instanceId: string;
    readonly instanceMaintenancePolicy: outputs.GetAutoscalingAutoScalingGroupInstanceMaintenancePolicy;
    readonly launchConfigurationName: string;
    readonly launchTemplate: outputs.GetAutoscalingAutoScalingGroupLaunchTemplate;
    readonly lifecycleHookSpecificationLists: outputs.GetAutoscalingAutoScalingGroupLifecycleHookSpecificationList[];
    readonly loadBalancerNames: string[];
    readonly maxInstanceLifetime: number;
    readonly maxSize: string;
    readonly metricsCollections: outputs.GetAutoscalingAutoScalingGroupMetricsCollection[];
    readonly minSize: string;
    readonly mixedInstancesPolicy: outputs.GetAutoscalingAutoScalingGroupMixedInstancesPolicy;
    readonly newInstancesProtectedFromScaleIn: boolean;
    readonly notificationConfiguration: outputs.GetAutoscalingAutoScalingGroupNotificationConfiguration;
    readonly notificationConfigurations: outputs.GetAutoscalingAutoScalingGroupNotificationConfiguration[];
    readonly placementGroup: string;
    readonly serviceLinkedRoleArn: string;
    readonly tags: outputs.GetAutoscalingAutoScalingGroupTag[];
    readonly targetGroupArNs: string[];
    readonly terminationPolicies: string[];
    readonly vpcZoneIdentifiers: string[];
}
export function getAutoscalingAutoScalingGroupOutput(args: GetAutoscalingAutoScalingGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoscalingAutoScalingGroupResult> {
    return pulumi.output(args).apply((a: any) => getAutoscalingAutoScalingGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAutoscalingAutoScalingGroup.
 */
export interface GetAutoscalingAutoScalingGroupOutputArgs {
    id: pulumi.Input<string>;
}
