// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServicecatalogCloudformationProvisionedProduct(args: GetServicecatalogCloudformationProvisionedProductArgs, opts?: pulumi.InvokeOptions): Promise<GetServicecatalogCloudformationProvisionedProductResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getServicecatalogCloudformationProvisionedProduct:getServicecatalogCloudformationProvisionedProduct", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServicecatalogCloudformationProvisionedProduct.
 */
export interface GetServicecatalogCloudformationProvisionedProductArgs {
    id: string;
}

/**
 * A collection of values returned by getServicecatalogCloudformationProvisionedProduct.
 */
export interface GetServicecatalogCloudformationProvisionedProductResult {
    readonly acceptLanguage: string;
    readonly cloudformationStackArn: string;
    readonly id: string;
    readonly notificationArns: string[];
    readonly outputs: {[key: string]: string};
    readonly pathId: string;
    readonly pathName: string;
    readonly productId: string;
    readonly productName: string;
    readonly provisionedProductId: string;
    readonly provisionedProductName: string;
    readonly provisioningArtifactId: string;
    readonly provisioningArtifactName: string;
    readonly provisioningParameters: outputs.GetServicecatalogCloudformationProvisionedProductProvisioningParameter[];
    readonly provisioningPreferences: outputs.GetServicecatalogCloudformationProvisionedProductProvisioningPreferences;
    readonly recordId: string;
    readonly tags: outputs.GetServicecatalogCloudformationProvisionedProductTag[];
}
export function getServicecatalogCloudformationProvisionedProductOutput(args: GetServicecatalogCloudformationProvisionedProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServicecatalogCloudformationProvisionedProductResult> {
    return pulumi.output(args).apply((a: any) => getServicecatalogCloudformationProvisionedProduct(a, opts))
}

/**
 * A collection of arguments for invoking getServicecatalogCloudformationProvisionedProduct.
 */
export interface GetServicecatalogCloudformationProvisionedProductOutputArgs {
    id: pulumi.Input<string>;
}
