// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WorkspaceswebUserSettings extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceswebUserSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceswebUserSettingsState, opts?: pulumi.CustomResourceOptions): WorkspaceswebUserSettings {
        return new WorkspaceswebUserSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/workspaceswebUserSettings:WorkspaceswebUserSettings';

    /**
     * Returns true if the given object is an instance of WorkspaceswebUserSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceswebUserSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceswebUserSettings.__pulumiType;
    }

    public readonly additionalEncryptionContext!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly associatedPortalArns!: pulumi.Output<string[]>;
    public readonly cookieSynchronizationConfiguration!: pulumi.Output<outputs.WorkspaceswebUserSettingsCookieSynchronizationConfiguration>;
    public readonly copyAllowed!: pulumi.Output<string>;
    public readonly customerManagedKey!: pulumi.Output<string>;
    public readonly deepLinkAllowed!: pulumi.Output<string>;
    public readonly disconnectTimeoutInMinutes!: pulumi.Output<number>;
    public readonly downloadAllowed!: pulumi.Output<string>;
    public readonly idleDisconnectTimeoutInMinutes!: pulumi.Output<number>;
    public readonly pasteAllowed!: pulumi.Output<string>;
    public readonly printAllowed!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.WorkspaceswebUserSettingsTag[]>;
    public readonly uploadAllowed!: pulumi.Output<string>;
    public /*out*/ readonly userSettingsArn!: pulumi.Output<string>;

    /**
     * Create a WorkspaceswebUserSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceswebUserSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceswebUserSettingsArgs | WorkspaceswebUserSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceswebUserSettingsState | undefined;
            resourceInputs["additionalEncryptionContext"] = state ? state.additionalEncryptionContext : undefined;
            resourceInputs["associatedPortalArns"] = state ? state.associatedPortalArns : undefined;
            resourceInputs["cookieSynchronizationConfiguration"] = state ? state.cookieSynchronizationConfiguration : undefined;
            resourceInputs["copyAllowed"] = state ? state.copyAllowed : undefined;
            resourceInputs["customerManagedKey"] = state ? state.customerManagedKey : undefined;
            resourceInputs["deepLinkAllowed"] = state ? state.deepLinkAllowed : undefined;
            resourceInputs["disconnectTimeoutInMinutes"] = state ? state.disconnectTimeoutInMinutes : undefined;
            resourceInputs["downloadAllowed"] = state ? state.downloadAllowed : undefined;
            resourceInputs["idleDisconnectTimeoutInMinutes"] = state ? state.idleDisconnectTimeoutInMinutes : undefined;
            resourceInputs["pasteAllowed"] = state ? state.pasteAllowed : undefined;
            resourceInputs["printAllowed"] = state ? state.printAllowed : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["uploadAllowed"] = state ? state.uploadAllowed : undefined;
            resourceInputs["userSettingsArn"] = state ? state.userSettingsArn : undefined;
        } else {
            const args = argsOrState as WorkspaceswebUserSettingsArgs | undefined;
            if ((!args || args.copyAllowed === undefined) && !opts.urn) {
                throw new Error("Missing required property 'copyAllowed'");
            }
            if ((!args || args.downloadAllowed === undefined) && !opts.urn) {
                throw new Error("Missing required property 'downloadAllowed'");
            }
            if ((!args || args.pasteAllowed === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pasteAllowed'");
            }
            if ((!args || args.printAllowed === undefined) && !opts.urn) {
                throw new Error("Missing required property 'printAllowed'");
            }
            if ((!args || args.uploadAllowed === undefined) && !opts.urn) {
                throw new Error("Missing required property 'uploadAllowed'");
            }
            resourceInputs["additionalEncryptionContext"] = args ? args.additionalEncryptionContext : undefined;
            resourceInputs["cookieSynchronizationConfiguration"] = args ? args.cookieSynchronizationConfiguration : undefined;
            resourceInputs["copyAllowed"] = args ? args.copyAllowed : undefined;
            resourceInputs["customerManagedKey"] = args ? args.customerManagedKey : undefined;
            resourceInputs["deepLinkAllowed"] = args ? args.deepLinkAllowed : undefined;
            resourceInputs["disconnectTimeoutInMinutes"] = args ? args.disconnectTimeoutInMinutes : undefined;
            resourceInputs["downloadAllowed"] = args ? args.downloadAllowed : undefined;
            resourceInputs["idleDisconnectTimeoutInMinutes"] = args ? args.idleDisconnectTimeoutInMinutes : undefined;
            resourceInputs["pasteAllowed"] = args ? args.pasteAllowed : undefined;
            resourceInputs["printAllowed"] = args ? args.printAllowed : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["uploadAllowed"] = args ? args.uploadAllowed : undefined;
            resourceInputs["associatedPortalArns"] = undefined /*out*/;
            resourceInputs["userSettingsArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceswebUserSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceswebUserSettings resources.
 */
export interface WorkspaceswebUserSettingsState {
    additionalEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    associatedPortalArns?: pulumi.Input<pulumi.Input<string>[]>;
    cookieSynchronizationConfiguration?: pulumi.Input<inputs.WorkspaceswebUserSettingsCookieSynchronizationConfiguration>;
    copyAllowed?: pulumi.Input<string>;
    customerManagedKey?: pulumi.Input<string>;
    deepLinkAllowed?: pulumi.Input<string>;
    disconnectTimeoutInMinutes?: pulumi.Input<number>;
    downloadAllowed?: pulumi.Input<string>;
    idleDisconnectTimeoutInMinutes?: pulumi.Input<number>;
    pasteAllowed?: pulumi.Input<string>;
    printAllowed?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkspaceswebUserSettingsTag>[]>;
    uploadAllowed?: pulumi.Input<string>;
    userSettingsArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceswebUserSettings resource.
 */
export interface WorkspaceswebUserSettingsArgs {
    additionalEncryptionContext?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    cookieSynchronizationConfiguration?: pulumi.Input<inputs.WorkspaceswebUserSettingsCookieSynchronizationConfiguration>;
    copyAllowed: pulumi.Input<string>;
    customerManagedKey?: pulumi.Input<string>;
    deepLinkAllowed?: pulumi.Input<string>;
    disconnectTimeoutInMinutes?: pulumi.Input<number>;
    downloadAllowed: pulumi.Input<string>;
    idleDisconnectTimeoutInMinutes?: pulumi.Input<number>;
    pasteAllowed: pulumi.Input<string>;
    printAllowed: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkspaceswebUserSettingsTag>[]>;
    uploadAllowed: pulumi.Input<string>;
}
