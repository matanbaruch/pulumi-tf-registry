// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMediaconnectFlowSource(args: GetMediaconnectFlowSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaconnectFlowSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getMediaconnectFlowSource:getMediaconnectFlowSource", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMediaconnectFlowSource.
 */
export interface GetMediaconnectFlowSourceArgs {
    id: string;
}

/**
 * A collection of values returned by getMediaconnectFlowSource.
 */
export interface GetMediaconnectFlowSourceResult {
    readonly decryption: outputs.GetMediaconnectFlowSourceDecryption;
    readonly description: string;
    readonly entitlementArn: string;
    readonly flowArn: string;
    readonly gatewayBridgeSource: outputs.GetMediaconnectFlowSourceGatewayBridgeSource;
    readonly id: string;
    readonly ingestIp: string;
    readonly ingestPort: number;
    readonly maxBitrate: number;
    readonly maxLatency: number;
    readonly minLatency: number;
    readonly name: string;
    readonly protocol: string;
    readonly senderControlPort: number;
    readonly senderIpAddress: string;
    readonly sourceArn: string;
    readonly sourceIngestPort: string;
    readonly sourceListenerAddress: string;
    readonly sourceListenerPort: number;
    readonly streamId: string;
    readonly vpcInterfaceName: string;
    readonly whitelistCidr: string;
}
export function getMediaconnectFlowSourceOutput(args: GetMediaconnectFlowSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaconnectFlowSourceResult> {
    return pulumi.output(args).apply((a: any) => getMediaconnectFlowSource(a, opts))
}

/**
 * A collection of arguments for invoking getMediaconnectFlowSource.
 */
export interface GetMediaconnectFlowSourceOutputArgs {
    id: pulumi.Input<string>;
}
