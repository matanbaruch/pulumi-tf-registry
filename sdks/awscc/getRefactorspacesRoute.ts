// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRefactorspacesRoute(args: GetRefactorspacesRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetRefactorspacesRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRefactorspacesRoute:getRefactorspacesRoute", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRefactorspacesRoute.
 */
export interface GetRefactorspacesRouteArgs {
    id: string;
}

/**
 * A collection of values returned by getRefactorspacesRoute.
 */
export interface GetRefactorspacesRouteResult {
    readonly applicationIdentifier: string;
    readonly arn: string;
    readonly defaultRoute: outputs.GetRefactorspacesRouteDefaultRoute;
    readonly environmentIdentifier: string;
    readonly id: string;
    readonly pathResourceToId: string;
    readonly routeIdentifier: string;
    readonly routeType: string;
    readonly serviceIdentifier: string;
    readonly tags: outputs.GetRefactorspacesRouteTag[];
    readonly uriPathRoute: outputs.GetRefactorspacesRouteUriPathRoute;
}
export function getRefactorspacesRouteOutput(args: GetRefactorspacesRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRefactorspacesRouteResult> {
    return pulumi.output(args).apply((a: any) => getRefactorspacesRoute(a, opts))
}

/**
 * A collection of arguments for invoking getRefactorspacesRoute.
 */
export interface GetRefactorspacesRouteOutputArgs {
    id: pulumi.Input<string>;
}
