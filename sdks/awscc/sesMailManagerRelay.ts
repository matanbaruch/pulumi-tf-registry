// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SesMailManagerRelay extends pulumi.CustomResource {
    /**
     * Get an existing SesMailManagerRelay resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SesMailManagerRelayState, opts?: pulumi.CustomResourceOptions): SesMailManagerRelay {
        return new SesMailManagerRelay(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/sesMailManagerRelay:SesMailManagerRelay';

    /**
     * Returns true if the given object is an instance of SesMailManagerRelay.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SesMailManagerRelay {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SesMailManagerRelay.__pulumiType;
    }

    public readonly authentication!: pulumi.Output<outputs.SesMailManagerRelayAuthentication>;
    public /*out*/ readonly relayArn!: pulumi.Output<string>;
    public /*out*/ readonly relayId!: pulumi.Output<string>;
    public readonly relayName!: pulumi.Output<string>;
    public readonly serverName!: pulumi.Output<string>;
    public readonly serverPort!: pulumi.Output<number>;
    public readonly tags!: pulumi.Output<outputs.SesMailManagerRelayTag[]>;

    /**
     * Create a SesMailManagerRelay resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SesMailManagerRelayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SesMailManagerRelayArgs | SesMailManagerRelayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SesMailManagerRelayState | undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["relayArn"] = state ? state.relayArn : undefined;
            resourceInputs["relayId"] = state ? state.relayId : undefined;
            resourceInputs["relayName"] = state ? state.relayName : undefined;
            resourceInputs["serverName"] = state ? state.serverName : undefined;
            resourceInputs["serverPort"] = state ? state.serverPort : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SesMailManagerRelayArgs | undefined;
            if ((!args || args.authentication === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authentication'");
            }
            if ((!args || args.serverName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverName'");
            }
            if ((!args || args.serverPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverPort'");
            }
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["relayName"] = args ? args.relayName : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["serverPort"] = args ? args.serverPort : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["relayArn"] = undefined /*out*/;
            resourceInputs["relayId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SesMailManagerRelay.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SesMailManagerRelay resources.
 */
export interface SesMailManagerRelayState {
    authentication?: pulumi.Input<inputs.SesMailManagerRelayAuthentication>;
    relayArn?: pulumi.Input<string>;
    relayId?: pulumi.Input<string>;
    relayName?: pulumi.Input<string>;
    serverName?: pulumi.Input<string>;
    serverPort?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.SesMailManagerRelayTag>[]>;
}

/**
 * The set of arguments for constructing a SesMailManagerRelay resource.
 */
export interface SesMailManagerRelayArgs {
    authentication: pulumi.Input<inputs.SesMailManagerRelayAuthentication>;
    relayName?: pulumi.Input<string>;
    serverName: pulumi.Input<string>;
    serverPort: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.SesMailManagerRelayTag>[]>;
}
