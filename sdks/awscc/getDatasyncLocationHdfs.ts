// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatasyncLocationHdfs(args: GetDatasyncLocationHdfsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasyncLocationHdfsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatasyncLocationHdfs:getDatasyncLocationHdfs", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatasyncLocationHdfs.
 */
export interface GetDatasyncLocationHdfsArgs {
    id: string;
}

/**
 * A collection of values returned by getDatasyncLocationHdfs.
 */
export interface GetDatasyncLocationHdfsResult {
    readonly agentArns: string[];
    readonly authenticationType: string;
    readonly blockSize: number;
    readonly id: string;
    readonly kerberosKeytab: string;
    readonly kerberosKrb5Conf: string;
    readonly kerberosPrincipal: string;
    readonly kmsKeyProviderUri: string;
    readonly locationArn: string;
    readonly locationUri: string;
    readonly nameNodes: outputs.GetDatasyncLocationHdfsNameNode[];
    readonly qopConfiguration: outputs.GetDatasyncLocationHdfsQopConfiguration;
    readonly replicationFactor: number;
    readonly simpleUser: string;
    readonly subdirectory: string;
    readonly tags: outputs.GetDatasyncLocationHdfsTag[];
}
export function getDatasyncLocationHdfsOutput(args: GetDatasyncLocationHdfsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasyncLocationHdfsResult> {
    return pulumi.output(args).apply((a: any) => getDatasyncLocationHdfs(a, opts))
}

/**
 * A collection of arguments for invoking getDatasyncLocationHdfs.
 */
export interface GetDatasyncLocationHdfsOutputArgs {
    id: pulumi.Input<string>;
}
