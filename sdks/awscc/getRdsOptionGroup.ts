// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdsOptionGroup(args: GetRdsOptionGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetRdsOptionGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRdsOptionGroup:getRdsOptionGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdsOptionGroup.
 */
export interface GetRdsOptionGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getRdsOptionGroup.
 */
export interface GetRdsOptionGroupResult {
    readonly engineName: string;
    readonly id: string;
    readonly majorEngineVersion: string;
    readonly optionConfigurations: outputs.GetRdsOptionGroupOptionConfiguration[];
    readonly optionGroupDescription: string;
    readonly optionGroupName: string;
    readonly tags: outputs.GetRdsOptionGroupTag[];
}
export function getRdsOptionGroupOutput(args: GetRdsOptionGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdsOptionGroupResult> {
    return pulumi.output(args).apply((a: any) => getRdsOptionGroup(a, opts))
}

/**
 * A collection of arguments for invoking getRdsOptionGroup.
 */
export interface GetRdsOptionGroupOutputArgs {
    id: pulumi.Input<string>;
}
