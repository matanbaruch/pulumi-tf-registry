// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BackupRestoreTestingSelection extends pulumi.CustomResource {
    /**
     * Get an existing BackupRestoreTestingSelection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupRestoreTestingSelectionState, opts?: pulumi.CustomResourceOptions): BackupRestoreTestingSelection {
        return new BackupRestoreTestingSelection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/backupRestoreTestingSelection:BackupRestoreTestingSelection';

    /**
     * Returns true if the given object is an instance of BackupRestoreTestingSelection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupRestoreTestingSelection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupRestoreTestingSelection.__pulumiType;
    }

    public readonly iamRoleArn!: pulumi.Output<string>;
    public readonly protectedResourceArns!: pulumi.Output<string[]>;
    public readonly protectedResourceConditions!: pulumi.Output<outputs.BackupRestoreTestingSelectionProtectedResourceConditions>;
    public readonly protectedResourceType!: pulumi.Output<string>;
    public readonly restoreMetadataOverrides!: pulumi.Output<{[key: string]: string}>;
    public readonly restoreTestingPlanName!: pulumi.Output<string>;
    public readonly restoreTestingSelectionName!: pulumi.Output<string>;
    public readonly validationWindowHours!: pulumi.Output<number>;

    /**
     * Create a BackupRestoreTestingSelection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupRestoreTestingSelectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupRestoreTestingSelectionArgs | BackupRestoreTestingSelectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupRestoreTestingSelectionState | undefined;
            resourceInputs["iamRoleArn"] = state ? state.iamRoleArn : undefined;
            resourceInputs["protectedResourceArns"] = state ? state.protectedResourceArns : undefined;
            resourceInputs["protectedResourceConditions"] = state ? state.protectedResourceConditions : undefined;
            resourceInputs["protectedResourceType"] = state ? state.protectedResourceType : undefined;
            resourceInputs["restoreMetadataOverrides"] = state ? state.restoreMetadataOverrides : undefined;
            resourceInputs["restoreTestingPlanName"] = state ? state.restoreTestingPlanName : undefined;
            resourceInputs["restoreTestingSelectionName"] = state ? state.restoreTestingSelectionName : undefined;
            resourceInputs["validationWindowHours"] = state ? state.validationWindowHours : undefined;
        } else {
            const args = argsOrState as BackupRestoreTestingSelectionArgs | undefined;
            if ((!args || args.iamRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iamRoleArn'");
            }
            if ((!args || args.protectedResourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectedResourceType'");
            }
            if ((!args || args.restoreTestingPlanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restoreTestingPlanName'");
            }
            if ((!args || args.restoreTestingSelectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restoreTestingSelectionName'");
            }
            resourceInputs["iamRoleArn"] = args ? args.iamRoleArn : undefined;
            resourceInputs["protectedResourceArns"] = args ? args.protectedResourceArns : undefined;
            resourceInputs["protectedResourceConditions"] = args ? args.protectedResourceConditions : undefined;
            resourceInputs["protectedResourceType"] = args ? args.protectedResourceType : undefined;
            resourceInputs["restoreMetadataOverrides"] = args ? args.restoreMetadataOverrides : undefined;
            resourceInputs["restoreTestingPlanName"] = args ? args.restoreTestingPlanName : undefined;
            resourceInputs["restoreTestingSelectionName"] = args ? args.restoreTestingSelectionName : undefined;
            resourceInputs["validationWindowHours"] = args ? args.validationWindowHours : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupRestoreTestingSelection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BackupRestoreTestingSelection resources.
 */
export interface BackupRestoreTestingSelectionState {
    iamRoleArn?: pulumi.Input<string>;
    protectedResourceArns?: pulumi.Input<pulumi.Input<string>[]>;
    protectedResourceConditions?: pulumi.Input<inputs.BackupRestoreTestingSelectionProtectedResourceConditions>;
    protectedResourceType?: pulumi.Input<string>;
    restoreMetadataOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    restoreTestingPlanName?: pulumi.Input<string>;
    restoreTestingSelectionName?: pulumi.Input<string>;
    validationWindowHours?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a BackupRestoreTestingSelection resource.
 */
export interface BackupRestoreTestingSelectionArgs {
    iamRoleArn: pulumi.Input<string>;
    protectedResourceArns?: pulumi.Input<pulumi.Input<string>[]>;
    protectedResourceConditions?: pulumi.Input<inputs.BackupRestoreTestingSelectionProtectedResourceConditions>;
    protectedResourceType: pulumi.Input<string>;
    restoreMetadataOverrides?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    restoreTestingPlanName: pulumi.Input<string>;
    restoreTestingSelectionName: pulumi.Input<string>;
    validationWindowHours?: pulumi.Input<number>;
}
