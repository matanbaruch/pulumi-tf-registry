// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationinsightsApplication extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationinsightsApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationinsightsApplicationState, opts?: pulumi.CustomResourceOptions): ApplicationinsightsApplication {
        return new ApplicationinsightsApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/applicationinsightsApplication:ApplicationinsightsApplication';

    /**
     * Returns true if the given object is an instance of ApplicationinsightsApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationinsightsApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationinsightsApplication.__pulumiType;
    }

    /**
     * The ARN of the ApplicationInsights application.
     */
    public /*out*/ readonly applicationArn!: pulumi.Output<string>;
    /**
     * If set to true, the managed policies for SSM and CW will be attached to the instance roles if they are missing
     */
    public readonly attachMissingPermission!: pulumi.Output<boolean>;
    /**
     * If set to true, application will be configured with recommended monitoring configuration.
     */
    public readonly autoConfigurationEnabled!: pulumi.Output<boolean>;
    /**
     * The monitoring settings of the components.
     */
    public readonly componentMonitoringSettings!: pulumi.Output<outputs.ApplicationinsightsApplicationComponentMonitoringSetting[]>;
    /**
     * The custom grouped components.
     */
    public readonly customComponents!: pulumi.Output<outputs.ApplicationinsightsApplicationCustomComponent[]>;
    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources.
     */
    public readonly cweMonitorEnabled!: pulumi.Output<boolean>;
    /**
     * The grouping type of the application
     */
    public readonly groupingType!: pulumi.Output<string>;
    /**
     * The log pattern sets.
     */
    public readonly logPatternSets!: pulumi.Output<outputs.ApplicationinsightsApplicationLogPatternSet[]>;
    /**
     * When set to true, creates opsItems for any problems detected on an application.
     */
    public readonly opsCenterEnabled!: pulumi.Output<boolean>;
    /**
     * The SNS topic provided to Application Insights that is associated to the created opsItem.
     */
    public readonly opsItemSnsTopicArn!: pulumi.Output<string>;
    /**
     * The name of the resource group.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The tags of Application Insights application.
     */
    public readonly tags!: pulumi.Output<outputs.ApplicationinsightsApplicationTag[]>;

    /**
     * Create a ApplicationinsightsApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationinsightsApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationinsightsApplicationArgs | ApplicationinsightsApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationinsightsApplicationState | undefined;
            resourceInputs["applicationArn"] = state ? state.applicationArn : undefined;
            resourceInputs["attachMissingPermission"] = state ? state.attachMissingPermission : undefined;
            resourceInputs["autoConfigurationEnabled"] = state ? state.autoConfigurationEnabled : undefined;
            resourceInputs["componentMonitoringSettings"] = state ? state.componentMonitoringSettings : undefined;
            resourceInputs["customComponents"] = state ? state.customComponents : undefined;
            resourceInputs["cweMonitorEnabled"] = state ? state.cweMonitorEnabled : undefined;
            resourceInputs["groupingType"] = state ? state.groupingType : undefined;
            resourceInputs["logPatternSets"] = state ? state.logPatternSets : undefined;
            resourceInputs["opsCenterEnabled"] = state ? state.opsCenterEnabled : undefined;
            resourceInputs["opsItemSnsTopicArn"] = state ? state.opsItemSnsTopicArn : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ApplicationinsightsApplicationArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["attachMissingPermission"] = args ? args.attachMissingPermission : undefined;
            resourceInputs["autoConfigurationEnabled"] = args ? args.autoConfigurationEnabled : undefined;
            resourceInputs["componentMonitoringSettings"] = args ? args.componentMonitoringSettings : undefined;
            resourceInputs["customComponents"] = args ? args.customComponents : undefined;
            resourceInputs["cweMonitorEnabled"] = args ? args.cweMonitorEnabled : undefined;
            resourceInputs["groupingType"] = args ? args.groupingType : undefined;
            resourceInputs["logPatternSets"] = args ? args.logPatternSets : undefined;
            resourceInputs["opsCenterEnabled"] = args ? args.opsCenterEnabled : undefined;
            resourceInputs["opsItemSnsTopicArn"] = args ? args.opsItemSnsTopicArn : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["applicationArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationinsightsApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationinsightsApplication resources.
 */
export interface ApplicationinsightsApplicationState {
    /**
     * The ARN of the ApplicationInsights application.
     */
    applicationArn?: pulumi.Input<string>;
    /**
     * If set to true, the managed policies for SSM and CW will be attached to the instance roles if they are missing
     */
    attachMissingPermission?: pulumi.Input<boolean>;
    /**
     * If set to true, application will be configured with recommended monitoring configuration.
     */
    autoConfigurationEnabled?: pulumi.Input<boolean>;
    /**
     * The monitoring settings of the components.
     */
    componentMonitoringSettings?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationComponentMonitoringSetting>[]>;
    /**
     * The custom grouped components.
     */
    customComponents?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationCustomComponent>[]>;
    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources.
     */
    cweMonitorEnabled?: pulumi.Input<boolean>;
    /**
     * The grouping type of the application
     */
    groupingType?: pulumi.Input<string>;
    /**
     * The log pattern sets.
     */
    logPatternSets?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationLogPatternSet>[]>;
    /**
     * When set to true, creates opsItems for any problems detected on an application.
     */
    opsCenterEnabled?: pulumi.Input<boolean>;
    /**
     * The SNS topic provided to Application Insights that is associated to the created opsItem.
     */
    opsItemSnsTopicArn?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The tags of Application Insights application.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationTag>[]>;
}

/**
 * The set of arguments for constructing a ApplicationinsightsApplication resource.
 */
export interface ApplicationinsightsApplicationArgs {
    /**
     * If set to true, the managed policies for SSM and CW will be attached to the instance roles if they are missing
     */
    attachMissingPermission?: pulumi.Input<boolean>;
    /**
     * If set to true, application will be configured with recommended monitoring configuration.
     */
    autoConfigurationEnabled?: pulumi.Input<boolean>;
    /**
     * The monitoring settings of the components.
     */
    componentMonitoringSettings?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationComponentMonitoringSetting>[]>;
    /**
     * The custom grouped components.
     */
    customComponents?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationCustomComponent>[]>;
    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources.
     */
    cweMonitorEnabled?: pulumi.Input<boolean>;
    /**
     * The grouping type of the application
     */
    groupingType?: pulumi.Input<string>;
    /**
     * The log pattern sets.
     */
    logPatternSets?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationLogPatternSet>[]>;
    /**
     * When set to true, creates opsItems for any problems detected on an application.
     */
    opsCenterEnabled?: pulumi.Input<boolean>;
    /**
     * The SNS topic provided to Application Insights that is associated to the created opsItem.
     */
    opsItemSnsTopicArn?: pulumi.Input<string>;
    /**
     * The name of the resource group.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The tags of Application Insights application.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApplicationinsightsApplicationTag>[]>;
}
