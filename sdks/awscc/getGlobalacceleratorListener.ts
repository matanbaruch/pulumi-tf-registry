// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlobalacceleratorListener(args: GetGlobalacceleratorListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalacceleratorListenerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlobalacceleratorListener:getGlobalacceleratorListener", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlobalacceleratorListener.
 */
export interface GetGlobalacceleratorListenerArgs {
    id: string;
}

/**
 * A collection of values returned by getGlobalacceleratorListener.
 */
export interface GetGlobalacceleratorListenerResult {
    readonly acceleratorArn: string;
    readonly clientAffinity: string;
    readonly id: string;
    readonly listenerArn: string;
    readonly portRanges: outputs.GetGlobalacceleratorListenerPortRange[];
    readonly protocol: string;
}
export function getGlobalacceleratorListenerOutput(args: GetGlobalacceleratorListenerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalacceleratorListenerResult> {
    return pulumi.output(args).apply((a: any) => getGlobalacceleratorListener(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalacceleratorListener.
 */
export interface GetGlobalacceleratorListenerOutputArgs {
    id: pulumi.Input<string>;
}
