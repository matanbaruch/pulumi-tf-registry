// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DeadlineStorageProfile extends pulumi.CustomResource {
    /**
     * Get an existing DeadlineStorageProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeadlineStorageProfileState, opts?: pulumi.CustomResourceOptions): DeadlineStorageProfile {
        return new DeadlineStorageProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/deadlineStorageProfile:DeadlineStorageProfile';

    /**
     * Returns true if the given object is an instance of DeadlineStorageProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeadlineStorageProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeadlineStorageProfile.__pulumiType;
    }

    public readonly displayName!: pulumi.Output<string>;
    public readonly farmId!: pulumi.Output<string>;
    public readonly fileSystemLocations!: pulumi.Output<outputs.DeadlineStorageProfileFileSystemLocation[]>;
    public readonly osFamily!: pulumi.Output<string>;
    public /*out*/ readonly storageProfileId!: pulumi.Output<string>;

    /**
     * Create a DeadlineStorageProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeadlineStorageProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeadlineStorageProfileArgs | DeadlineStorageProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeadlineStorageProfileState | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["farmId"] = state ? state.farmId : undefined;
            resourceInputs["fileSystemLocations"] = state ? state.fileSystemLocations : undefined;
            resourceInputs["osFamily"] = state ? state.osFamily : undefined;
            resourceInputs["storageProfileId"] = state ? state.storageProfileId : undefined;
        } else {
            const args = argsOrState as DeadlineStorageProfileArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.farmId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'farmId'");
            }
            if ((!args || args.osFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osFamily'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["farmId"] = args ? args.farmId : undefined;
            resourceInputs["fileSystemLocations"] = args ? args.fileSystemLocations : undefined;
            resourceInputs["osFamily"] = args ? args.osFamily : undefined;
            resourceInputs["storageProfileId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeadlineStorageProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DeadlineStorageProfile resources.
 */
export interface DeadlineStorageProfileState {
    displayName?: pulumi.Input<string>;
    farmId?: pulumi.Input<string>;
    fileSystemLocations?: pulumi.Input<pulumi.Input<inputs.DeadlineStorageProfileFileSystemLocation>[]>;
    osFamily?: pulumi.Input<string>;
    storageProfileId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DeadlineStorageProfile resource.
 */
export interface DeadlineStorageProfileArgs {
    displayName: pulumi.Input<string>;
    farmId: pulumi.Input<string>;
    fileSystemLocations?: pulumi.Input<pulumi.Input<inputs.DeadlineStorageProfileFileSystemLocation>[]>;
    osFamily: pulumi.Input<string>;
}
