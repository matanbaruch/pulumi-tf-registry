// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BackupBackupPlan extends pulumi.CustomResource {
    /**
     * Get an existing BackupBackupPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupBackupPlanState, opts?: pulumi.CustomResourceOptions): BackupBackupPlan {
        return new BackupBackupPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/backupBackupPlan:BackupBackupPlan';

    /**
     * Returns true if the given object is an instance of BackupBackupPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupBackupPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupBackupPlan.__pulumiType;
    }

    public readonly backupPlan!: pulumi.Output<outputs.BackupBackupPlanBackupPlan>;
    public /*out*/ readonly backupPlanArn!: pulumi.Output<string>;
    public /*out*/ readonly backupPlanId!: pulumi.Output<string>;
    public readonly backupPlanTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly versionId!: pulumi.Output<string>;

    /**
     * Create a BackupBackupPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupBackupPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupBackupPlanArgs | BackupBackupPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupBackupPlanState | undefined;
            resourceInputs["backupPlan"] = state ? state.backupPlan : undefined;
            resourceInputs["backupPlanArn"] = state ? state.backupPlanArn : undefined;
            resourceInputs["backupPlanId"] = state ? state.backupPlanId : undefined;
            resourceInputs["backupPlanTags"] = state ? state.backupPlanTags : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as BackupBackupPlanArgs | undefined;
            if ((!args || args.backupPlan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupPlan'");
            }
            resourceInputs["backupPlan"] = args ? args.backupPlan : undefined;
            resourceInputs["backupPlanTags"] = args ? args.backupPlanTags : undefined;
            resourceInputs["backupPlanArn"] = undefined /*out*/;
            resourceInputs["backupPlanId"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupBackupPlan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BackupBackupPlan resources.
 */
export interface BackupBackupPlanState {
    backupPlan?: pulumi.Input<inputs.BackupBackupPlanBackupPlan>;
    backupPlanArn?: pulumi.Input<string>;
    backupPlanId?: pulumi.Input<string>;
    backupPlanTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BackupBackupPlan resource.
 */
export interface BackupBackupPlanArgs {
    backupPlan: pulumi.Input<inputs.BackupBackupPlanBackupPlan>;
    backupPlanTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
