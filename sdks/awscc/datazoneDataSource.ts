// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatazoneDataSource extends pulumi.CustomResource {
    /**
     * Get an existing DatazoneDataSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatazoneDataSourceState, opts?: pulumi.CustomResourceOptions): DatazoneDataSource {
        return new DatazoneDataSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/datazoneDataSource:DatazoneDataSource';

    /**
     * Returns true if the given object is an instance of DatazoneDataSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatazoneDataSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatazoneDataSource.__pulumiType;
    }

    /**
     * The metadata forms that are to be attached to the assets that this data source works with.
     */
    public readonly assetFormsInputs!: pulumi.Output<outputs.DatazoneDataSourceAssetFormsInput[]>;
    /**
     * Configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
     */
    public readonly configuration!: pulumi.Output<outputs.DatazoneDataSourceConfiguration>;
    /**
     * The timestamp of when the data source was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The unique identifier of the data source.
     */
    public /*out*/ readonly dataSourceId!: pulumi.Output<string>;
    /**
     * The description of the data source.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    public readonly domainIdentifier!: pulumi.Output<string>;
    /**
     * Specifies whether the data source is enabled.
     */
    public readonly enableSetting!: pulumi.Output<string>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    public /*out*/ readonly environmentId!: pulumi.Output<string>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    public readonly environmentIdentifier!: pulumi.Output<string>;
    /**
     * The number of assets created by the data source during its last run.
     */
    public /*out*/ readonly lastRunAssetCount!: pulumi.Output<number>;
    /**
     * The timestamp that specifies when the data source was last run.
     */
    public /*out*/ readonly lastRunAt!: pulumi.Output<string>;
    /**
     * The status of the last run of this data source.
     */
    public /*out*/ readonly lastRunStatus!: pulumi.Output<string>;
    /**
     * The name of the data source.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Amazon DataZone project to which the data source is added.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * The identifier of the Amazon DataZone project in which you want to add the data source.
     */
    public readonly projectIdentifier!: pulumi.Output<string>;
    /**
     * Specifies whether the assets that this data source creates in the inventory are to be also automatically published to
     * the catalog.
     */
    public readonly publishOnImport!: pulumi.Output<boolean>;
    /**
     * Specifies whether the business name generation is to be enabled for this data source.
     */
    public readonly recommendation!: pulumi.Output<outputs.DatazoneDataSourceRecommendation>;
    /**
     * The schedule of the data source runs.
     */
    public readonly schedule!: pulumi.Output<outputs.DatazoneDataSourceSchedule>;
    /**
     * The status of the data source.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The type of the data source.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The timestamp of when this data source was updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a DatazoneDataSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatazoneDataSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatazoneDataSourceArgs | DatazoneDataSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatazoneDataSourceState | undefined;
            resourceInputs["assetFormsInputs"] = state ? state.assetFormsInputs : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dataSourceId"] = state ? state.dataSourceId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["domainIdentifier"] = state ? state.domainIdentifier : undefined;
            resourceInputs["enableSetting"] = state ? state.enableSetting : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["environmentIdentifier"] = state ? state.environmentIdentifier : undefined;
            resourceInputs["lastRunAssetCount"] = state ? state.lastRunAssetCount : undefined;
            resourceInputs["lastRunAt"] = state ? state.lastRunAt : undefined;
            resourceInputs["lastRunStatus"] = state ? state.lastRunStatus : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["projectIdentifier"] = state ? state.projectIdentifier : undefined;
            resourceInputs["publishOnImport"] = state ? state.publishOnImport : undefined;
            resourceInputs["recommendation"] = state ? state.recommendation : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as DatazoneDataSourceArgs | undefined;
            if ((!args || args.domainIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainIdentifier'");
            }
            if ((!args || args.environmentIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentIdentifier'");
            }
            if ((!args || args.projectIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectIdentifier'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["assetFormsInputs"] = args ? args.assetFormsInputs : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainIdentifier"] = args ? args.domainIdentifier : undefined;
            resourceInputs["enableSetting"] = args ? args.enableSetting : undefined;
            resourceInputs["environmentIdentifier"] = args ? args.environmentIdentifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectIdentifier"] = args ? args.projectIdentifier : undefined;
            resourceInputs["publishOnImport"] = args ? args.publishOnImport : undefined;
            resourceInputs["recommendation"] = args ? args.recommendation : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dataSourceId"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["lastRunAssetCount"] = undefined /*out*/;
            resourceInputs["lastRunAt"] = undefined /*out*/;
            resourceInputs["lastRunStatus"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatazoneDataSource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatazoneDataSource resources.
 */
export interface DatazoneDataSourceState {
    /**
     * The metadata forms that are to be attached to the assets that this data source works with.
     */
    assetFormsInputs?: pulumi.Input<pulumi.Input<inputs.DatazoneDataSourceAssetFormsInput>[]>;
    /**
     * Configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
     */
    configuration?: pulumi.Input<inputs.DatazoneDataSourceConfiguration>;
    /**
     * The timestamp of when the data source was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The unique identifier of the data source.
     */
    dataSourceId?: pulumi.Input<string>;
    /**
     * The description of the data source.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    domainId?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    domainIdentifier?: pulumi.Input<string>;
    /**
     * Specifies whether the data source is enabled.
     */
    enableSetting?: pulumi.Input<string>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    environmentIdentifier?: pulumi.Input<string>;
    /**
     * The number of assets created by the data source during its last run.
     */
    lastRunAssetCount?: pulumi.Input<number>;
    /**
     * The timestamp that specifies when the data source was last run.
     */
    lastRunAt?: pulumi.Input<string>;
    /**
     * The status of the last run of this data source.
     */
    lastRunStatus?: pulumi.Input<string>;
    /**
     * The name of the data source.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone project to which the data source is added.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon DataZone project in which you want to add the data source.
     */
    projectIdentifier?: pulumi.Input<string>;
    /**
     * Specifies whether the assets that this data source creates in the inventory are to be also automatically published to
     * the catalog.
     */
    publishOnImport?: pulumi.Input<boolean>;
    /**
     * Specifies whether the business name generation is to be enabled for this data source.
     */
    recommendation?: pulumi.Input<inputs.DatazoneDataSourceRecommendation>;
    /**
     * The schedule of the data source runs.
     */
    schedule?: pulumi.Input<inputs.DatazoneDataSourceSchedule>;
    /**
     * The status of the data source.
     */
    status?: pulumi.Input<string>;
    /**
     * The type of the data source.
     */
    type?: pulumi.Input<string>;
    /**
     * The timestamp of when this data source was updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatazoneDataSource resource.
 */
export interface DatazoneDataSourceArgs {
    /**
     * The metadata forms that are to be attached to the assets that this data source works with.
     */
    assetFormsInputs?: pulumi.Input<pulumi.Input<inputs.DatazoneDataSourceAssetFormsInput>[]>;
    /**
     * Configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
     */
    configuration?: pulumi.Input<inputs.DatazoneDataSourceConfiguration>;
    /**
     * The description of the data source.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the Amazon DataZone domain where the data source is created.
     */
    domainIdentifier: pulumi.Input<string>;
    /**
     * Specifies whether the data source is enabled.
     */
    enableSetting?: pulumi.Input<string>;
    /**
     * The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
     */
    environmentIdentifier: pulumi.Input<string>;
    /**
     * The name of the data source.
     */
    name?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon DataZone project in which you want to add the data source.
     */
    projectIdentifier: pulumi.Input<string>;
    /**
     * Specifies whether the assets that this data source creates in the inventory are to be also automatically published to
     * the catalog.
     */
    publishOnImport?: pulumi.Input<boolean>;
    /**
     * Specifies whether the business name generation is to be enabled for this data source.
     */
    recommendation?: pulumi.Input<inputs.DatazoneDataSourceRecommendation>;
    /**
     * The schedule of the data source runs.
     */
    schedule?: pulumi.Input<inputs.DatazoneDataSourceSchedule>;
    /**
     * The type of the data source.
     */
    type: pulumi.Input<string>;
}
