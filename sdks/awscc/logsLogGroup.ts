// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LogsLogGroup extends pulumi.CustomResource {
    /**
     * Get an existing LogsLogGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogsLogGroupState, opts?: pulumi.CustomResourceOptions): LogsLogGroup {
        return new LogsLogGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/logsLogGroup:LogsLogGroup';

    /**
     * Returns true if the given object is an instance of LogsLogGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogsLogGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogsLogGroup.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Creates a data protection policy and assigns it to the log group. A data protection policy can help safeguard sensitive
     * data that's ingested by the log group by auditing and masking the sensitive log data. When a user who does not have
     * permission to view masked data views a log event that includes masked data, the sensitive data is replaced by asterisks.
     * For more information, including a list of types of data that can be audited and masked, see [Protect sensitive log data
     * with masking](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).
     */
    public readonly dataProtectionPolicy!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. To associate an KMS key with the log
     * group, specify the ARN of that KMS key here. If you do so, ingested data is encrypted using this key. This association
     * is stored as long as the data encrypted with the KMS key is still within CWL. This enables CWL to decrypt this data
     * whenever it is requested. If you attempt to associate a KMS key with the log group but the KMS key doesn't exist or is
     * deactivated, you will receive an ``InvalidParameterException`` error. Log group data is always encrypted in CWL. If you
     * omit this key, the encryption does not use KMS. For more information, see [Encrypt log data in
     * using](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * Specifies the log group class for this log group. There are two classes: + The ``Standard`` log class supports all CWL
     * features. + The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs. For details
     * about the features supported by each class, see [Log
     * classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)
     */
    public readonly logGroupClass!: pulumi.Output<string>;
    /**
     * The name of the log group. If you don't specify a name, CFNlong generates a unique ID for the log group.
     */
    public readonly logGroupName!: pulumi.Output<string>;
    /**
     * The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90,
     * 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653. To set a log group so that its log
     * events do not expire, use
     * [DeleteRetentionPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html).
     */
    public readonly retentionInDays!: pulumi.Output<number>;
    /**
     * An array of key-value pairs to apply to the log group. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    public readonly tags!: pulumi.Output<outputs.LogsLogGroupTag[]>;

    /**
     * Create a LogsLogGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogsLogGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogsLogGroupArgs | LogsLogGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogsLogGroupState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["dataProtectionPolicy"] = state ? state.dataProtectionPolicy : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["logGroupClass"] = state ? state.logGroupClass : undefined;
            resourceInputs["logGroupName"] = state ? state.logGroupName : undefined;
            resourceInputs["retentionInDays"] = state ? state.retentionInDays : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as LogsLogGroupArgs | undefined;
            resourceInputs["dataProtectionPolicy"] = args ? args.dataProtectionPolicy : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["logGroupClass"] = args ? args.logGroupClass : undefined;
            resourceInputs["logGroupName"] = args ? args.logGroupName : undefined;
            resourceInputs["retentionInDays"] = args ? args.retentionInDays : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogsLogGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogsLogGroup resources.
 */
export interface LogsLogGroupState {
    arn?: pulumi.Input<string>;
    /**
     * Creates a data protection policy and assigns it to the log group. A data protection policy can help safeguard sensitive
     * data that's ingested by the log group by auditing and masking the sensitive log data. When a user who does not have
     * permission to view masked data views a log event that includes masked data, the sensitive data is replaced by asterisks.
     * For more information, including a list of types of data that can be audited and masked, see [Protect sensitive log data
     * with masking](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).
     */
    dataProtectionPolicy?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. To associate an KMS key with the log
     * group, specify the ARN of that KMS key here. If you do so, ingested data is encrypted using this key. This association
     * is stored as long as the data encrypted with the KMS key is still within CWL. This enables CWL to decrypt this data
     * whenever it is requested. If you attempt to associate a KMS key with the log group but the KMS key doesn't exist or is
     * deactivated, you will receive an ``InvalidParameterException`` error. Log group data is always encrypted in CWL. If you
     * omit this key, the encryption does not use KMS. For more information, see [Encrypt log data in
     * using](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the log group class for this log group. There are two classes: + The ``Standard`` log class supports all CWL
     * features. + The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs. For details
     * about the features supported by each class, see [Log
     * classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)
     */
    logGroupClass?: pulumi.Input<string>;
    /**
     * The name of the log group. If you don't specify a name, CFNlong generates a unique ID for the log group.
     */
    logGroupName?: pulumi.Input<string>;
    /**
     * The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90,
     * 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653. To set a log group so that its log
     * events do not expire, use
     * [DeleteRetentionPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html).
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * An array of key-value pairs to apply to the log group. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LogsLogGroupTag>[]>;
}

/**
 * The set of arguments for constructing a LogsLogGroup resource.
 */
export interface LogsLogGroupArgs {
    /**
     * Creates a data protection policy and assigns it to the log group. A data protection policy can help safeguard sensitive
     * data that's ingested by the log group by auditing and masking the sensitive log data. When a user who does not have
     * permission to view masked data views a log event that includes masked data, the sensitive data is replaced by asterisks.
     * For more information, including a list of types of data that can be audited and masked, see [Protect sensitive log data
     * with masking](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).
     */
    dataProtectionPolicy?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the KMS key to use when encrypting log data. To associate an KMS key with the log
     * group, specify the ARN of that KMS key here. If you do so, ingested data is encrypted using this key. This association
     * is stored as long as the data encrypted with the KMS key is still within CWL. This enables CWL to decrypt this data
     * whenever it is requested. If you attempt to associate a KMS key with the log group but the KMS key doesn't exist or is
     * deactivated, you will receive an ``InvalidParameterException`` error. Log group data is always encrypted in CWL. If you
     * omit this key, the encryption does not use KMS. For more information, see [Encrypt log data in
     * using](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Specifies the log group class for this log group. There are two classes: + The ``Standard`` log class supports all CWL
     * features. + The ``Infrequent Access`` log class supports a subset of CWL features and incurs lower costs. For details
     * about the features supported by each class, see [Log
     * classes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CloudWatch_Logs_Log_Classes.html)
     */
    logGroupClass?: pulumi.Input<string>;
    /**
     * The name of the log group. If you don't specify a name, CFNlong generates a unique ID for the log group.
     */
    logGroupName?: pulumi.Input<string>;
    /**
     * The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90,
     * 120, 150, 180, 365, 400, 545, 731, 1096, 1827, 2192, 2557, 2922, 3288, and 3653. To set a log group so that its log
     * events do not expire, use
     * [DeleteRetentionPolicy](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteRetentionPolicy.html).
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * An array of key-value pairs to apply to the log group. For more information, see
     * [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LogsLogGroupTag>[]>;
}
