// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedshiftEndpointAccess(args: GetRedshiftEndpointAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetRedshiftEndpointAccessResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRedshiftEndpointAccess:getRedshiftEndpointAccess", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedshiftEndpointAccess.
 */
export interface GetRedshiftEndpointAccessArgs {
    id: string;
}

/**
 * A collection of values returned by getRedshiftEndpointAccess.
 */
export interface GetRedshiftEndpointAccessResult {
    readonly address: string;
    readonly clusterIdentifier: string;
    readonly endpointCreateTime: string;
    readonly endpointName: string;
    readonly endpointStatus: string;
    readonly id: string;
    readonly port: number;
    readonly resourceOwner: string;
    readonly subnetGroupName: string;
    readonly vpcEndpoint: outputs.GetRedshiftEndpointAccessVpcEndpoint;
    readonly vpcSecurityGroupIds: string[];
    readonly vpcSecurityGroups: outputs.GetRedshiftEndpointAccessVpcSecurityGroup[];
}
export function getRedshiftEndpointAccessOutput(args: GetRedshiftEndpointAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedshiftEndpointAccessResult> {
    return pulumi.output(args).apply((a: any) => getRedshiftEndpointAccess(a, opts))
}

/**
 * A collection of arguments for invoking getRedshiftEndpointAccess.
 */
export interface GetRedshiftEndpointAccessOutputArgs {
    id: pulumi.Input<string>;
}
