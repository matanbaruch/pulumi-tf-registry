// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2SecurityGroupIngress(args: GetEc2SecurityGroupIngressArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2SecurityGroupIngressResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2SecurityGroupIngress:getEc2SecurityGroupIngress", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2SecurityGroupIngress.
 */
export interface GetEc2SecurityGroupIngressArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2SecurityGroupIngress.
 */
export interface GetEc2SecurityGroupIngressResult {
    readonly cidrIp: string;
    readonly cidrIpv6: string;
    readonly description: string;
    readonly fromPort: number;
    readonly groupId: string;
    readonly groupName: string;
    readonly id: string;
    readonly ipProtocol: string;
    readonly securityGroupIngressId: string;
    readonly sourcePrefixListId: string;
    readonly sourceSecurityGroupId: string;
    readonly sourceSecurityGroupName: string;
    readonly sourceSecurityGroupOwnerId: string;
    readonly toPort: number;
}
export function getEc2SecurityGroupIngressOutput(args: GetEc2SecurityGroupIngressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2SecurityGroupIngressResult> {
    return pulumi.output(args).apply((a: any) => getEc2SecurityGroupIngress(a, opts))
}

/**
 * A collection of arguments for invoking getEc2SecurityGroupIngress.
 */
export interface GetEc2SecurityGroupIngressOutputArgs {
    id: pulumi.Input<string>;
}
