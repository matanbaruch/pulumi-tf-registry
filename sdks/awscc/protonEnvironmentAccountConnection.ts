// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProtonEnvironmentAccountConnection extends pulumi.CustomResource {
    /**
     * Get an existing ProtonEnvironmentAccountConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtonEnvironmentAccountConnectionState, opts?: pulumi.CustomResourceOptions): ProtonEnvironmentAccountConnection {
        return new ProtonEnvironmentAccountConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/protonEnvironmentAccountConnection:ProtonEnvironmentAccountConnection';

    /**
     * Returns true if the given object is an instance of ProtonEnvironmentAccountConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProtonEnvironmentAccountConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtonEnvironmentAccountConnection.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the environment account connection.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of an IAM service role in the environment account. AWS Proton uses this role to provision
     * infrastructure resources using CodeBuild-based provisioning in the associated environment account.
     */
    public readonly codebuildRoleArn!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that AWS Proton uses when provisioning directly defined
     * components in the associated environment account. It determines the scope of infrastructure that a component can
     * provision in the account.
     */
    public readonly componentRoleArn!: pulumi.Output<string>;
    /**
     * The ID of the environment account connection.
     */
    public /*out*/ readonly environmentAccountConnectionId!: pulumi.Output<string>;
    /**
     * The environment account that's connected to the environment account connection.
     */
    public readonly environmentAccountId!: pulumi.Output<string>;
    /**
     * The name of the AWS Proton environment that's created in the associated management account.
     */
    public readonly environmentName!: pulumi.Output<string>;
    /**
     * The ID of the management account that accepts or rejects the environment account connection. You create an manage the
     * AWS Proton environment in this account. If the management account accepts the environment account connection, AWS Proton
     * can use the associated IAM role to provision environment infrastructure resources in the associated environment account.
     */
    public readonly managementAccountId!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. AWS Proton uses this
     * role to provision infrastructure resources in the associated environment account.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * The status of the environment account connection.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a
     * key-value pair.</p> <p>For more information, see <a
     * href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     * <i>Proton User Guide</i>.</p>
     */
    public readonly tags!: pulumi.Output<outputs.ProtonEnvironmentAccountConnectionTag[]>;

    /**
     * Create a ProtonEnvironmentAccountConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProtonEnvironmentAccountConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtonEnvironmentAccountConnectionArgs | ProtonEnvironmentAccountConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtonEnvironmentAccountConnectionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["codebuildRoleArn"] = state ? state.codebuildRoleArn : undefined;
            resourceInputs["componentRoleArn"] = state ? state.componentRoleArn : undefined;
            resourceInputs["environmentAccountConnectionId"] = state ? state.environmentAccountConnectionId : undefined;
            resourceInputs["environmentAccountId"] = state ? state.environmentAccountId : undefined;
            resourceInputs["environmentName"] = state ? state.environmentName : undefined;
            resourceInputs["managementAccountId"] = state ? state.managementAccountId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ProtonEnvironmentAccountConnectionArgs | undefined;
            resourceInputs["codebuildRoleArn"] = args ? args.codebuildRoleArn : undefined;
            resourceInputs["componentRoleArn"] = args ? args.componentRoleArn : undefined;
            resourceInputs["environmentAccountId"] = args ? args.environmentAccountId : undefined;
            resourceInputs["environmentName"] = args ? args.environmentName : undefined;
            resourceInputs["managementAccountId"] = args ? args.managementAccountId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["environmentAccountConnectionId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProtonEnvironmentAccountConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProtonEnvironmentAccountConnection resources.
 */
export interface ProtonEnvironmentAccountConnectionState {
    /**
     * The Amazon Resource Name (ARN) of the environment account connection.
     */
    arn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of an IAM service role in the environment account. AWS Proton uses this role to provision
     * infrastructure resources using CodeBuild-based provisioning in the associated environment account.
     */
    codebuildRoleArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that AWS Proton uses when provisioning directly defined
     * components in the associated environment account. It determines the scope of infrastructure that a component can
     * provision in the account.
     */
    componentRoleArn?: pulumi.Input<string>;
    /**
     * The ID of the environment account connection.
     */
    environmentAccountConnectionId?: pulumi.Input<string>;
    /**
     * The environment account that's connected to the environment account connection.
     */
    environmentAccountId?: pulumi.Input<string>;
    /**
     * The name of the AWS Proton environment that's created in the associated management account.
     */
    environmentName?: pulumi.Input<string>;
    /**
     * The ID of the management account that accepts or rejects the environment account connection. You create an manage the
     * AWS Proton environment in this account. If the management account accepts the environment account connection, AWS Proton
     * can use the associated IAM role to provision environment infrastructure resources in the associated environment account.
     */
    managementAccountId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. AWS Proton uses this
     * role to provision infrastructure resources in the associated environment account.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The status of the environment account connection.
     */
    status?: pulumi.Input<string>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a
     * key-value pair.</p> <p>For more information, see <a
     * href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     * <i>Proton User Guide</i>.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProtonEnvironmentAccountConnectionTag>[]>;
}

/**
 * The set of arguments for constructing a ProtonEnvironmentAccountConnection resource.
 */
export interface ProtonEnvironmentAccountConnectionArgs {
    /**
     * The Amazon Resource Name (ARN) of an IAM service role in the environment account. AWS Proton uses this role to provision
     * infrastructure resources using CodeBuild-based provisioning in the associated environment account.
     */
    codebuildRoleArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that AWS Proton uses when provisioning directly defined
     * components in the associated environment account. It determines the scope of infrastructure that a component can
     * provision in the account.
     */
    componentRoleArn?: pulumi.Input<string>;
    /**
     * The environment account that's connected to the environment account connection.
     */
    environmentAccountId?: pulumi.Input<string>;
    /**
     * The name of the AWS Proton environment that's created in the associated management account.
     */
    environmentName?: pulumi.Input<string>;
    /**
     * The ID of the management account that accepts or rejects the environment account connection. You create an manage the
     * AWS Proton environment in this account. If the management account accepts the environment account connection, AWS Proton
     * can use the associated IAM role to provision environment infrastructure resources in the associated environment account.
     */
    managementAccountId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. AWS Proton uses this
     * role to provision infrastructure resources in the associated environment account.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a
     * key-value pair.</p> <p>For more information, see <a
     * href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     * <i>Proton User Guide</i>.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProtonEnvironmentAccountConnectionTag>[]>;
}
