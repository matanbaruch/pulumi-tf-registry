// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIottwinmakerWorkspace(args: GetIottwinmakerWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetIottwinmakerWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIottwinmakerWorkspace:getIottwinmakerWorkspace", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIottwinmakerWorkspace.
 */
export interface GetIottwinmakerWorkspaceArgs {
    id: string;
}

/**
 * A collection of values returned by getIottwinmakerWorkspace.
 */
export interface GetIottwinmakerWorkspaceResult {
    readonly arn: string;
    readonly creationDateTime: string;
    readonly description: string;
    readonly id: string;
    readonly role: string;
    readonly s3Location: string;
    readonly tags: {[key: string]: string};
    readonly updateDateTime: string;
    readonly workspaceId: string;
}
export function getIottwinmakerWorkspaceOutput(args: GetIottwinmakerWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIottwinmakerWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getIottwinmakerWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getIottwinmakerWorkspace.
 */
export interface GetIottwinmakerWorkspaceOutputArgs {
    id: pulumi.Input<string>;
}
