// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PersonalizeDatasetGroup extends pulumi.CustomResource {
    /**
     * Get an existing PersonalizeDatasetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PersonalizeDatasetGroupState, opts?: pulumi.CustomResourceOptions): PersonalizeDatasetGroup {
        return new PersonalizeDatasetGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/personalizeDatasetGroup:PersonalizeDatasetGroup';

    /**
     * Returns true if the given object is an instance of PersonalizeDatasetGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PersonalizeDatasetGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PersonalizeDatasetGroup.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the dataset group.
     */
    public /*out*/ readonly datasetGroupArn!: pulumi.Output<string>;
    /**
     * The domain of a Domain dataset group.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name(ARN) of a AWS Key Management Service (KMS) key used to encrypt the datasets.
     */
    public readonly kmsKeyArn!: pulumi.Output<string>;
    /**
     * The name for the new dataset group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that has permissions to access the AWS Key Management
     * Service (KMS) key. Supplying an IAM role is only valid when also specifying a KMS key.
     */
    public readonly roleArn!: pulumi.Output<string>;

    /**
     * Create a PersonalizeDatasetGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PersonalizeDatasetGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PersonalizeDatasetGroupArgs | PersonalizeDatasetGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PersonalizeDatasetGroupState | undefined;
            resourceInputs["datasetGroupArn"] = state ? state.datasetGroupArn : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
        } else {
            const args = argsOrState as PersonalizeDatasetGroupArgs | undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["datasetGroupArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PersonalizeDatasetGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PersonalizeDatasetGroup resources.
 */
export interface PersonalizeDatasetGroupState {
    /**
     * The Amazon Resource Name (ARN) of the dataset group.
     */
    datasetGroupArn?: pulumi.Input<string>;
    /**
     * The domain of a Domain dataset group.
     */
    domain?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name(ARN) of a AWS Key Management Service (KMS) key used to encrypt the datasets.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The name for the new dataset group.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that has permissions to access the AWS Key Management
     * Service (KMS) key. Supplying an IAM role is only valid when also specifying a KMS key.
     */
    roleArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PersonalizeDatasetGroup resource.
 */
export interface PersonalizeDatasetGroupArgs {
    /**
     * The domain of a Domain dataset group.
     */
    domain?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name(ARN) of a AWS Key Management Service (KMS) key used to encrypt the datasets.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The name for the new dataset group.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that has permissions to access the AWS Key Management
     * Service (KMS) key. Supplying an IAM role is only valid when also specifying a KMS key.
     */
    roleArn?: pulumi.Input<string>;
}
