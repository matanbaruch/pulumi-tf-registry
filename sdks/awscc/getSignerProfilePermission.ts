// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSignerProfilePermission(args: GetSignerProfilePermissionArgs, opts?: pulumi.InvokeOptions): Promise<GetSignerProfilePermissionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSignerProfilePermission:getSignerProfilePermission", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSignerProfilePermission.
 */
export interface GetSignerProfilePermissionArgs {
    id: string;
}

/**
 * A collection of values returned by getSignerProfilePermission.
 */
export interface GetSignerProfilePermissionResult {
    readonly action: string;
    readonly id: string;
    readonly principal: string;
    readonly profileName: string;
    readonly profileVersion: string;
    readonly statementId: string;
}
export function getSignerProfilePermissionOutput(args: GetSignerProfilePermissionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSignerProfilePermissionResult> {
    return pulumi.output(args).apply((a: any) => getSignerProfilePermission(a, opts))
}

/**
 * A collection of arguments for invoking getSignerProfilePermission.
 */
export interface GetSignerProfilePermissionOutputArgs {
    id: pulumi.Input<string>;
}
