// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSimspaceweaverSimulation(args: GetSimspaceweaverSimulationArgs, opts?: pulumi.InvokeOptions): Promise<GetSimspaceweaverSimulationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSimspaceweaverSimulation:getSimspaceweaverSimulation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSimspaceweaverSimulation.
 */
export interface GetSimspaceweaverSimulationArgs {
    id: string;
}

/**
 * A collection of values returned by getSimspaceweaverSimulation.
 */
export interface GetSimspaceweaverSimulationResult {
    readonly describePayload: string;
    readonly id: string;
    readonly maximumDuration: string;
    readonly name: string;
    readonly roleArn: string;
    readonly schemaS3Location: outputs.GetSimspaceweaverSimulationSchemaS3Location;
    readonly snapshotS3Location: outputs.GetSimspaceweaverSimulationSnapshotS3Location;
}
export function getSimspaceweaverSimulationOutput(args: GetSimspaceweaverSimulationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSimspaceweaverSimulationResult> {
    return pulumi.output(args).apply((a: any) => getSimspaceweaverSimulation(a, opts))
}

/**
 * A collection of arguments for invoking getSimspaceweaverSimulation.
 */
export interface GetSimspaceweaverSimulationOutputArgs {
    id: pulumi.Input<string>;
}
