// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SchedulerScheduleGroup extends pulumi.CustomResource {
    /**
     * Get an existing SchedulerScheduleGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SchedulerScheduleGroupState, opts?: pulumi.CustomResourceOptions): SchedulerScheduleGroup {
        return new SchedulerScheduleGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/schedulerScheduleGroup:SchedulerScheduleGroup';

    /**
     * Returns true if the given object is an instance of SchedulerScheduleGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SchedulerScheduleGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SchedulerScheduleGroup.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) of the schedule group.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The time at which the schedule group was created.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * The time at which the schedule group was last modified.
     */
    public /*out*/ readonly lastModificationDate!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the state of the schedule group.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The list of tags to associate with the schedule group.
     */
    public readonly tags!: pulumi.Output<outputs.SchedulerScheduleGroupTag[]>;

    /**
     * Create a SchedulerScheduleGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SchedulerScheduleGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SchedulerScheduleGroupArgs | SchedulerScheduleGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SchedulerScheduleGroupState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["lastModificationDate"] = state ? state.lastModificationDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SchedulerScheduleGroupArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["lastModificationDate"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SchedulerScheduleGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SchedulerScheduleGroup resources.
 */
export interface SchedulerScheduleGroupState {
    /**
     * The Amazon Resource Name (ARN) of the schedule group.
     */
    arn?: pulumi.Input<string>;
    /**
     * The time at which the schedule group was created.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The time at which the schedule group was last modified.
     */
    lastModificationDate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Specifies the state of the schedule group.
     */
    state?: pulumi.Input<string>;
    /**
     * The list of tags to associate with the schedule group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SchedulerScheduleGroupTag>[]>;
}

/**
 * The set of arguments for constructing a SchedulerScheduleGroup resource.
 */
export interface SchedulerScheduleGroupArgs {
    name?: pulumi.Input<string>;
    /**
     * The list of tags to associate with the schedule group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SchedulerScheduleGroupTag>[]>;
}
