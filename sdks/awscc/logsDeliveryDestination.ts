// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LogsDeliveryDestination extends pulumi.CustomResource {
    /**
     * Get an existing LogsDeliveryDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogsDeliveryDestinationState, opts?: pulumi.CustomResourceOptions): LogsDeliveryDestination {
        return new LogsDeliveryDestination(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/logsDeliveryDestination:LogsDeliveryDestination';

    /**
     * Returns true if the given object is an instance of LogsDeliveryDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogsDeliveryDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogsDeliveryDestination.__pulumiType;
    }

    /**
     * The Amazon Resource Name (ARN) that uniquely identifies this delivery destination.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * IAM policy that grants permissions to CloudWatch Logs to deliver logs cross-account to a specified destination in this
     * account. The policy must be in JSON string format. Length Constraints: Maximum length of 51200
     */
    public readonly deliveryDestinationPolicy!: pulumi.Output<string>;
    /**
     * Displays whether this delivery destination is CloudWatch Logs, Amazon S3, or Kinesis Data Firehose.
     */
    public /*out*/ readonly deliveryDestinationType!: pulumi.Output<string>;
    /**
     * The ARN of the Amazon Web Services destination that this delivery destination represents. That Amazon Web Services
     * destination can be a log group in CloudWatch Logs, an Amazon S3 bucket, or a delivery stream in Firehose.
     */
    public readonly destinationResourceArn!: pulumi.Output<string>;
    /**
     * The name of this delivery destination.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The tags that have been assigned to this delivery destination.
     */
    public readonly tags!: pulumi.Output<outputs.LogsDeliveryDestinationTag[]>;

    /**
     * Create a LogsDeliveryDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogsDeliveryDestinationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogsDeliveryDestinationArgs | LogsDeliveryDestinationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogsDeliveryDestinationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["deliveryDestinationPolicy"] = state ? state.deliveryDestinationPolicy : undefined;
            resourceInputs["deliveryDestinationType"] = state ? state.deliveryDestinationType : undefined;
            resourceInputs["destinationResourceArn"] = state ? state.destinationResourceArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as LogsDeliveryDestinationArgs | undefined;
            resourceInputs["deliveryDestinationPolicy"] = args ? args.deliveryDestinationPolicy : undefined;
            resourceInputs["destinationResourceArn"] = args ? args.destinationResourceArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["deliveryDestinationType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogsDeliveryDestination.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogsDeliveryDestination resources.
 */
export interface LogsDeliveryDestinationState {
    /**
     * The Amazon Resource Name (ARN) that uniquely identifies this delivery destination.
     */
    arn?: pulumi.Input<string>;
    /**
     * IAM policy that grants permissions to CloudWatch Logs to deliver logs cross-account to a specified destination in this
     * account. The policy must be in JSON string format. Length Constraints: Maximum length of 51200
     */
    deliveryDestinationPolicy?: pulumi.Input<string>;
    /**
     * Displays whether this delivery destination is CloudWatch Logs, Amazon S3, or Kinesis Data Firehose.
     */
    deliveryDestinationType?: pulumi.Input<string>;
    /**
     * The ARN of the Amazon Web Services destination that this delivery destination represents. That Amazon Web Services
     * destination can be a log group in CloudWatch Logs, an Amazon S3 bucket, or a delivery stream in Firehose.
     */
    destinationResourceArn?: pulumi.Input<string>;
    /**
     * The name of this delivery destination.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags that have been assigned to this delivery destination.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LogsDeliveryDestinationTag>[]>;
}

/**
 * The set of arguments for constructing a LogsDeliveryDestination resource.
 */
export interface LogsDeliveryDestinationArgs {
    /**
     * IAM policy that grants permissions to CloudWatch Logs to deliver logs cross-account to a specified destination in this
     * account. The policy must be in JSON string format. Length Constraints: Maximum length of 51200
     */
    deliveryDestinationPolicy?: pulumi.Input<string>;
    /**
     * The ARN of the Amazon Web Services destination that this delivery destination represents. That Amazon Web Services
     * destination can be a log group in CloudWatch Logs, an Amazon S3 bucket, or a delivery stream in Firehose.
     */
    destinationResourceArn?: pulumi.Input<string>;
    /**
     * The name of this delivery destination.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags that have been assigned to this delivery destination.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.LogsDeliveryDestinationTag>[]>;
}
