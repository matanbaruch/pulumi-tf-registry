// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApsWorkspace extends pulumi.CustomResource {
    /**
     * Get an existing ApsWorkspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApsWorkspaceState, opts?: pulumi.CustomResourceOptions): ApsWorkspace {
        return new ApsWorkspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/apsWorkspace:ApsWorkspace';

    /**
     * Returns true if the given object is an instance of ApsWorkspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApsWorkspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApsWorkspace.__pulumiType;
    }

    /**
     * The AMP Workspace alert manager definition data
     */
    public readonly alertManagerDefinition!: pulumi.Output<string>;
    /**
     * AMP Workspace alias.
     */
    public readonly alias!: pulumi.Output<string>;
    /**
     * Workspace arn.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * KMS Key ARN used to encrypt and decrypt AMP workspace data.
     */
    public readonly kmsKeyArn!: pulumi.Output<string>;
    /**
     * Logging configuration
     */
    public readonly loggingConfiguration!: pulumi.Output<outputs.ApsWorkspaceLoggingConfiguration>;
    /**
     * AMP Workspace prometheus endpoint
     */
    public /*out*/ readonly prometheusEndpoint!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.ApsWorkspaceTag[]>;
    /**
     * Required to identify a specific APS Workspace.
     */
    public /*out*/ readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a ApsWorkspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApsWorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApsWorkspaceArgs | ApsWorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApsWorkspaceState | undefined;
            resourceInputs["alertManagerDefinition"] = state ? state.alertManagerDefinition : undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            resourceInputs["loggingConfiguration"] = state ? state.loggingConfiguration : undefined;
            resourceInputs["prometheusEndpoint"] = state ? state.prometheusEndpoint : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as ApsWorkspaceArgs | undefined;
            resourceInputs["alertManagerDefinition"] = args ? args.alertManagerDefinition : undefined;
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["loggingConfiguration"] = args ? args.loggingConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["prometheusEndpoint"] = undefined /*out*/;
            resourceInputs["workspaceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApsWorkspace.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApsWorkspace resources.
 */
export interface ApsWorkspaceState {
    /**
     * The AMP Workspace alert manager definition data
     */
    alertManagerDefinition?: pulumi.Input<string>;
    /**
     * AMP Workspace alias.
     */
    alias?: pulumi.Input<string>;
    /**
     * Workspace arn.
     */
    arn?: pulumi.Input<string>;
    /**
     * KMS Key ARN used to encrypt and decrypt AMP workspace data.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Logging configuration
     */
    loggingConfiguration?: pulumi.Input<inputs.ApsWorkspaceLoggingConfiguration>;
    /**
     * AMP Workspace prometheus endpoint
     */
    prometheusEndpoint?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApsWorkspaceTag>[]>;
    /**
     * Required to identify a specific APS Workspace.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApsWorkspace resource.
 */
export interface ApsWorkspaceArgs {
    /**
     * The AMP Workspace alert manager definition data
     */
    alertManagerDefinition?: pulumi.Input<string>;
    /**
     * AMP Workspace alias.
     */
    alias?: pulumi.Input<string>;
    /**
     * KMS Key ARN used to encrypt and decrypt AMP workspace data.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Logging configuration
     */
    loggingConfiguration?: pulumi.Input<inputs.ApsWorkspaceLoggingConfiguration>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApsWorkspaceTag>[]>;
}
