// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudformationPublicTypeVersion extends pulumi.CustomResource {
    /**
     * Get an existing CloudformationPublicTypeVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudformationPublicTypeVersionState, opts?: pulumi.CustomResourceOptions): CloudformationPublicTypeVersion {
        return new CloudformationPublicTypeVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/cloudformationPublicTypeVersion:CloudformationPublicTypeVersion';

    /**
     * Returns true if the given object is an instance of CloudformationPublicTypeVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudformationPublicTypeVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudformationPublicTypeVersion.__pulumiType;
    }

    /**
     * The Amazon Resource Number (ARN) of the extension.
     */
    public readonly arn!: pulumi.Output<string>;
    /**
     * A url to the S3 bucket where logs for the testType run will be available
     */
    public readonly logDeliveryBucket!: pulumi.Output<string>;
    /**
     * The Amazon Resource Number (ARN) assigned to the public extension upon publication
     */
    public /*out*/ readonly publicTypeArn!: pulumi.Output<string>;
    /**
     * The version number of a public third-party extension
     */
    public readonly publicVersionNumber!: pulumi.Output<string>;
    /**
     * The publisher id assigned by CloudFormation for publishing in this region.
     */
    public /*out*/ readonly publisherId!: pulumi.Output<string>;
    /**
     * The kind of extension
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The name of the type being registered. We recommend that type names adhere to the following pattern:
     * company_or_organization::service::type.
     */
    public readonly typeName!: pulumi.Output<string>;
    /**
     * The Amazon Resource Number (ARN) of the extension with the versionId.
     */
    public /*out*/ readonly typeVersionArn!: pulumi.Output<string>;

    /**
     * Create a CloudformationPublicTypeVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudformationPublicTypeVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudformationPublicTypeVersionArgs | CloudformationPublicTypeVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudformationPublicTypeVersionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["logDeliveryBucket"] = state ? state.logDeliveryBucket : undefined;
            resourceInputs["publicTypeArn"] = state ? state.publicTypeArn : undefined;
            resourceInputs["publicVersionNumber"] = state ? state.publicVersionNumber : undefined;
            resourceInputs["publisherId"] = state ? state.publisherId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["typeName"] = state ? state.typeName : undefined;
            resourceInputs["typeVersionArn"] = state ? state.typeVersionArn : undefined;
        } else {
            const args = argsOrState as CloudformationPublicTypeVersionArgs | undefined;
            resourceInputs["arn"] = args ? args.arn : undefined;
            resourceInputs["logDeliveryBucket"] = args ? args.logDeliveryBucket : undefined;
            resourceInputs["publicVersionNumber"] = args ? args.publicVersionNumber : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["typeName"] = args ? args.typeName : undefined;
            resourceInputs["publicTypeArn"] = undefined /*out*/;
            resourceInputs["publisherId"] = undefined /*out*/;
            resourceInputs["typeVersionArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudformationPublicTypeVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudformationPublicTypeVersion resources.
 */
export interface CloudformationPublicTypeVersionState {
    /**
     * The Amazon Resource Number (ARN) of the extension.
     */
    arn?: pulumi.Input<string>;
    /**
     * A url to the S3 bucket where logs for the testType run will be available
     */
    logDeliveryBucket?: pulumi.Input<string>;
    /**
     * The Amazon Resource Number (ARN) assigned to the public extension upon publication
     */
    publicTypeArn?: pulumi.Input<string>;
    /**
     * The version number of a public third-party extension
     */
    publicVersionNumber?: pulumi.Input<string>;
    /**
     * The publisher id assigned by CloudFormation for publishing in this region.
     */
    publisherId?: pulumi.Input<string>;
    /**
     * The kind of extension
     */
    type?: pulumi.Input<string>;
    /**
     * The name of the type being registered. We recommend that type names adhere to the following pattern:
     * company_or_organization::service::type.
     */
    typeName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Number (ARN) of the extension with the versionId.
     */
    typeVersionArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudformationPublicTypeVersion resource.
 */
export interface CloudformationPublicTypeVersionArgs {
    /**
     * The Amazon Resource Number (ARN) of the extension.
     */
    arn?: pulumi.Input<string>;
    /**
     * A url to the S3 bucket where logs for the testType run will be available
     */
    logDeliveryBucket?: pulumi.Input<string>;
    /**
     * The version number of a public third-party extension
     */
    publicVersionNumber?: pulumi.Input<string>;
    /**
     * The kind of extension
     */
    type?: pulumi.Input<string>;
    /**
     * The name of the type being registered. We recommend that type names adhere to the following pattern:
     * company_or_organization::service::type.
     */
    typeName?: pulumi.Input<string>;
}
