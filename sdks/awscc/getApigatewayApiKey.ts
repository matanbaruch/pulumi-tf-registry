// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayApiKey(args: GetApigatewayApiKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayApiKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayApiKey:getApigatewayApiKey", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayApiKey.
 */
export interface GetApigatewayApiKeyArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayApiKey.
 */
export interface GetApigatewayApiKeyResult {
    readonly apiKeyId: string;
    readonly customerId: string;
    readonly description: string;
    readonly enabled: boolean;
    readonly generateDistinctId: boolean;
    readonly id: string;
    readonly name: string;
    readonly stageKeys: outputs.GetApigatewayApiKeyStageKey[];
    readonly tags: outputs.GetApigatewayApiKeyTag[];
    readonly value: string;
}
export function getApigatewayApiKeyOutput(args: GetApigatewayApiKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayApiKeyResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayApiKey(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayApiKey.
 */
export interface GetApigatewayApiKeyOutputArgs {
    id: pulumi.Input<string>;
}
