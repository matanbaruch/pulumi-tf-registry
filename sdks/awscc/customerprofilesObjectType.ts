// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CustomerprofilesObjectType extends pulumi.CustomResource {
    /**
     * Get an existing CustomerprofilesObjectType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomerprofilesObjectTypeState, opts?: pulumi.CustomResourceOptions): CustomerprofilesObjectType {
        return new CustomerprofilesObjectType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/customerprofilesObjectType:CustomerprofilesObjectType';

    /**
     * Returns true if the given object is an instance of CustomerprofilesObjectType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomerprofilesObjectType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerprofilesObjectType.__pulumiType;
    }

    /**
     * Indicates whether a profile should be created when data is received.
     */
    public readonly allowProfileCreation!: pulumi.Output<boolean>;
    /**
     * The time of this integration got created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Description of the profile object type.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The unique name of the domain.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The default encryption key
     */
    public readonly encryptionKey!: pulumi.Output<string>;
    /**
     * The default number of days until the data within the domain expires.
     */
    public readonly expirationDays!: pulumi.Output<number>;
    /**
     * A list of the name and ObjectType field.
     */
    public readonly fields!: pulumi.Output<outputs.CustomerprofilesObjectTypeField[]>;
    /**
     * A list of unique keys that can be used to map data to the profile.
     */
    public readonly keys!: pulumi.Output<outputs.CustomerprofilesObjectTypeKey[]>;
    /**
     * The time of this integration got last updated at.
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * The name of the profile object type.
     */
    public readonly objectTypeName!: pulumi.Output<string>;
    /**
     * The format of your sourceLastUpdatedTimestamp that was previously set up.
     */
    public readonly sourceLastUpdatedTimestampFormat!: pulumi.Output<string>;
    /**
     * The tags (keys and values) associated with the integration.
     */
    public readonly tags!: pulumi.Output<outputs.CustomerprofilesObjectTypeTag[]>;
    /**
     * A unique identifier for the object template.
     */
    public readonly templateId!: pulumi.Output<string>;

    /**
     * Create a CustomerprofilesObjectType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomerprofilesObjectTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomerprofilesObjectTypeArgs | CustomerprofilesObjectTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomerprofilesObjectTypeState | undefined;
            resourceInputs["allowProfileCreation"] = state ? state.allowProfileCreation : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["encryptionKey"] = state ? state.encryptionKey : undefined;
            resourceInputs["expirationDays"] = state ? state.expirationDays : undefined;
            resourceInputs["fields"] = state ? state.fields : undefined;
            resourceInputs["keys"] = state ? state.keys : undefined;
            resourceInputs["lastUpdatedAt"] = state ? state.lastUpdatedAt : undefined;
            resourceInputs["objectTypeName"] = state ? state.objectTypeName : undefined;
            resourceInputs["sourceLastUpdatedTimestampFormat"] = state ? state.sourceLastUpdatedTimestampFormat : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
        } else {
            const args = argsOrState as CustomerprofilesObjectTypeArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.objectTypeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectTypeName'");
            }
            resourceInputs["allowProfileCreation"] = args ? args.allowProfileCreation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["expirationDays"] = args ? args.expirationDays : undefined;
            resourceInputs["fields"] = args ? args.fields : undefined;
            resourceInputs["keys"] = args ? args.keys : undefined;
            resourceInputs["objectTypeName"] = args ? args.objectTypeName : undefined;
            resourceInputs["sourceLastUpdatedTimestampFormat"] = args ? args.sourceLastUpdatedTimestampFormat : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomerprofilesObjectType.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CustomerprofilesObjectType resources.
 */
export interface CustomerprofilesObjectTypeState {
    /**
     * Indicates whether a profile should be created when data is received.
     */
    allowProfileCreation?: pulumi.Input<boolean>;
    /**
     * The time of this integration got created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Description of the profile object type.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique name of the domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The default encryption key
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The default number of days until the data within the domain expires.
     */
    expirationDays?: pulumi.Input<number>;
    /**
     * A list of the name and ObjectType field.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesObjectTypeField>[]>;
    /**
     * A list of unique keys that can be used to map data to the profile.
     */
    keys?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesObjectTypeKey>[]>;
    /**
     * The time of this integration got last updated at.
     */
    lastUpdatedAt?: pulumi.Input<string>;
    /**
     * The name of the profile object type.
     */
    objectTypeName?: pulumi.Input<string>;
    /**
     * The format of your sourceLastUpdatedTimestamp that was previously set up.
     */
    sourceLastUpdatedTimestampFormat?: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the integration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesObjectTypeTag>[]>;
    /**
     * A unique identifier for the object template.
     */
    templateId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomerprofilesObjectType resource.
 */
export interface CustomerprofilesObjectTypeArgs {
    /**
     * Indicates whether a profile should be created when data is received.
     */
    allowProfileCreation?: pulumi.Input<boolean>;
    /**
     * Description of the profile object type.
     */
    description: pulumi.Input<string>;
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * The default encryption key
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The default number of days until the data within the domain expires.
     */
    expirationDays?: pulumi.Input<number>;
    /**
     * A list of the name and ObjectType field.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesObjectTypeField>[]>;
    /**
     * A list of unique keys that can be used to map data to the profile.
     */
    keys?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesObjectTypeKey>[]>;
    /**
     * The name of the profile object type.
     */
    objectTypeName: pulumi.Input<string>;
    /**
     * The format of your sourceLastUpdatedTimestamp that was previously set up.
     */
    sourceLastUpdatedTimestampFormat?: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the integration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesObjectTypeTag>[]>;
    /**
     * A unique identifier for the object template.
     */
    templateId?: pulumi.Input<string>;
}
