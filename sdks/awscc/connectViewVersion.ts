// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ConnectViewVersion extends pulumi.CustomResource {
    /**
     * Get an existing ConnectViewVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectViewVersionState, opts?: pulumi.CustomResourceOptions): ConnectViewVersion {
        return new ConnectViewVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/connectViewVersion:ConnectViewVersion';

    /**
     * Returns true if the given object is an instance of ConnectViewVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectViewVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectViewVersion.__pulumiType;
    }

    /**
     * The version of the view.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;
    /**
     * The description for the view version.
     */
    public readonly versionDescription!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the view for which a version is being created.
     */
    public readonly viewArn!: pulumi.Output<string>;
    /**
     * The view content hash to be checked.
     */
    public readonly viewContentSha256!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the created view version.
     */
    public /*out*/ readonly viewVersionArn!: pulumi.Output<string>;

    /**
     * Create a ConnectViewVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectViewVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectViewVersionArgs | ConnectViewVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectViewVersionState | undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionDescription"] = state ? state.versionDescription : undefined;
            resourceInputs["viewArn"] = state ? state.viewArn : undefined;
            resourceInputs["viewContentSha256"] = state ? state.viewContentSha256 : undefined;
            resourceInputs["viewVersionArn"] = state ? state.viewVersionArn : undefined;
        } else {
            const args = argsOrState as ConnectViewVersionArgs | undefined;
            if ((!args || args.viewArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'viewArn'");
            }
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["viewArn"] = args ? args.viewArn : undefined;
            resourceInputs["viewContentSha256"] = args ? args.viewContentSha256 : undefined;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["viewVersionArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectViewVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ConnectViewVersion resources.
 */
export interface ConnectViewVersionState {
    /**
     * The version of the view.
     */
    version?: pulumi.Input<number>;
    /**
     * The description for the view version.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the view for which a version is being created.
     */
    viewArn?: pulumi.Input<string>;
    /**
     * The view content hash to be checked.
     */
    viewContentSha256?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the created view version.
     */
    viewVersionArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectViewVersion resource.
 */
export interface ConnectViewVersionArgs {
    /**
     * The description for the view version.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the view for which a version is being created.
     */
    viewArn: pulumi.Input<string>;
    /**
     * The view content hash to be checked.
     */
    viewContentSha256?: pulumi.Input<string>;
}
