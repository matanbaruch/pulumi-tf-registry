// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudwatchMetricStream(args: GetCloudwatchMetricStreamArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwatchMetricStreamResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudwatchMetricStream:getCloudwatchMetricStream", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudwatchMetricStream.
 */
export interface GetCloudwatchMetricStreamArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudwatchMetricStream.
 */
export interface GetCloudwatchMetricStreamResult {
    readonly arn: string;
    readonly creationDate: string;
    readonly excludeFilters: outputs.GetCloudwatchMetricStreamExcludeFilter[];
    readonly firehoseArn: string;
    readonly id: string;
    readonly includeFilters: outputs.GetCloudwatchMetricStreamIncludeFilter[];
    readonly includeLinkedAccountsMetrics: boolean;
    readonly lastUpdateDate: string;
    readonly name: string;
    readonly outputFormat: string;
    readonly roleArn: string;
    readonly state: string;
    readonly statisticsConfigurations: outputs.GetCloudwatchMetricStreamStatisticsConfiguration[];
    readonly tags: outputs.GetCloudwatchMetricStreamTag[];
}
export function getCloudwatchMetricStreamOutput(args: GetCloudwatchMetricStreamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwatchMetricStreamResult> {
    return pulumi.output(args).apply((a: any) => getCloudwatchMetricStream(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwatchMetricStream.
 */
export interface GetCloudwatchMetricStreamOutputArgs {
    id: pulumi.Input<string>;
}
