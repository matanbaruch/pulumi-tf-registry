// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BedrockPromptVersion extends pulumi.CustomResource {
    /**
     * Get an existing BedrockPromptVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BedrockPromptVersionState, opts?: pulumi.CustomResourceOptions): BedrockPromptVersion {
        return new BedrockPromptVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/bedrockPromptVersion:BedrockPromptVersion';

    /**
     * Returns true if the given object is an instance of BedrockPromptVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BedrockPromptVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BedrockPromptVersion.__pulumiType;
    }

    /**
     * ARN of a prompt version resource
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Time Stamp.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Name for a variant.
     */
    public /*out*/ readonly defaultVariant!: pulumi.Output<string>;
    /**
     * Description for a prompt version resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Name for a prompt resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * ARN of a prompt resource possibly with a version
     */
    public readonly promptArn!: pulumi.Output<string>;
    /**
     * Identifier for a Prompt
     */
    public /*out*/ readonly promptId!: pulumi.Output<string>;
    /**
     * Time Stamp.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * List of prompt variants
     */
    public /*out*/ readonly variants!: pulumi.Output<outputs.BedrockPromptVersionVariant[]>;
    /**
     * Version.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a BedrockPromptVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BedrockPromptVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BedrockPromptVersionArgs | BedrockPromptVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BedrockPromptVersionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["defaultVariant"] = state ? state.defaultVariant : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["promptArn"] = state ? state.promptArn : undefined;
            resourceInputs["promptId"] = state ? state.promptId : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["variants"] = state ? state.variants : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as BedrockPromptVersionArgs | undefined;
            if ((!args || args.promptArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'promptArn'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["promptArn"] = args ? args.promptArn : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["defaultVariant"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["promptId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["variants"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BedrockPromptVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BedrockPromptVersion resources.
 */
export interface BedrockPromptVersionState {
    /**
     * ARN of a prompt version resource
     */
    arn?: pulumi.Input<string>;
    /**
     * Time Stamp.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Name for a variant.
     */
    defaultVariant?: pulumi.Input<string>;
    /**
     * Description for a prompt version resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Name for a prompt resource.
     */
    name?: pulumi.Input<string>;
    /**
     * ARN of a prompt resource possibly with a version
     */
    promptArn?: pulumi.Input<string>;
    /**
     * Identifier for a Prompt
     */
    promptId?: pulumi.Input<string>;
    /**
     * Time Stamp.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * List of prompt variants
     */
    variants?: pulumi.Input<pulumi.Input<inputs.BedrockPromptVersionVariant>[]>;
    /**
     * Version.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BedrockPromptVersion resource.
 */
export interface BedrockPromptVersionArgs {
    /**
     * Description for a prompt version resource.
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of a prompt resource possibly with a version
     */
    promptArn: pulumi.Input<string>;
}
