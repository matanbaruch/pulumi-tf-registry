// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVerifiedpermissionsIdentitySource(args: GetVerifiedpermissionsIdentitySourceArgs, opts?: pulumi.InvokeOptions): Promise<GetVerifiedpermissionsIdentitySourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getVerifiedpermissionsIdentitySource:getVerifiedpermissionsIdentitySource", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVerifiedpermissionsIdentitySource.
 */
export interface GetVerifiedpermissionsIdentitySourceArgs {
    id: string;
}

/**
 * A collection of values returned by getVerifiedpermissionsIdentitySource.
 */
export interface GetVerifiedpermissionsIdentitySourceResult {
    readonly configuration: outputs.GetVerifiedpermissionsIdentitySourceConfiguration;
    readonly details: outputs.GetVerifiedpermissionsIdentitySourceDetails;
    readonly id: string;
    readonly identitySourceId: string;
    readonly policyStoreId: string;
    readonly principalEntityType: string;
}
export function getVerifiedpermissionsIdentitySourceOutput(args: GetVerifiedpermissionsIdentitySourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVerifiedpermissionsIdentitySourceResult> {
    return pulumi.output(args).apply((a: any) => getVerifiedpermissionsIdentitySource(a, opts))
}

/**
 * A collection of arguments for invoking getVerifiedpermissionsIdentitySource.
 */
export interface GetVerifiedpermissionsIdentitySourceOutputArgs {
    id: pulumi.Input<string>;
}
