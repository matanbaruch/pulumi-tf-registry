// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRolesanywhereCrl(args: GetRolesanywhereCrlArgs, opts?: pulumi.InvokeOptions): Promise<GetRolesanywhereCrlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRolesanywhereCrl:getRolesanywhereCrl", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRolesanywhereCrl.
 */
export interface GetRolesanywhereCrlArgs {
    id: string;
}

/**
 * A collection of values returned by getRolesanywhereCrl.
 */
export interface GetRolesanywhereCrlResult {
    readonly crlData: string;
    readonly crlId: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly tags: outputs.GetRolesanywhereCrlTag[];
    readonly trustAnchorArn: string;
}
export function getRolesanywhereCrlOutput(args: GetRolesanywhereCrlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRolesanywhereCrlResult> {
    return pulumi.output(args).apply((a: any) => getRolesanywhereCrl(a, opts))
}

/**
 * A collection of arguments for invoking getRolesanywhereCrl.
 */
export interface GetRolesanywhereCrlOutputArgs {
    id: pulumi.Input<string>;
}
