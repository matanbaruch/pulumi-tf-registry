// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDeadlineMeteredProduct(args: GetDeadlineMeteredProductArgs, opts?: pulumi.InvokeOptions): Promise<GetDeadlineMeteredProductResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDeadlineMeteredProduct:getDeadlineMeteredProduct", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeadlineMeteredProduct.
 */
export interface GetDeadlineMeteredProductArgs {
    id: string;
}

/**
 * A collection of values returned by getDeadlineMeteredProduct.
 */
export interface GetDeadlineMeteredProductResult {
    readonly arn: string;
    readonly family: string;
    readonly id: string;
    readonly licenseEndpointId: string;
    readonly port: number;
    readonly productId: string;
    readonly vendor: string;
}
export function getDeadlineMeteredProductOutput(args: GetDeadlineMeteredProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeadlineMeteredProductResult> {
    return pulumi.output(args).apply((a: any) => getDeadlineMeteredProduct(a, opts))
}

/**
 * A collection of arguments for invoking getDeadlineMeteredProduct.
 */
export interface GetDeadlineMeteredProductOutputArgs {
    id: pulumi.Input<string>;
}
