// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGameliftAlias(args: GetGameliftAliasArgs, opts?: pulumi.InvokeOptions): Promise<GetGameliftAliasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGameliftAlias:getGameliftAlias", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGameliftAlias.
 */
export interface GetGameliftAliasArgs {
    id: string;
}

/**
 * A collection of values returned by getGameliftAlias.
 */
export interface GetGameliftAliasResult {
    readonly aliasId: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly routingStrategy: outputs.GetGameliftAliasRoutingStrategy;
}
export function getGameliftAliasOutput(args: GetGameliftAliasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGameliftAliasResult> {
    return pulumi.output(args).apply((a: any) => getGameliftAlias(a, opts))
}

/**
 * A collection of arguments for invoking getGameliftAlias.
 */
export interface GetGameliftAliasOutputArgs {
    id: pulumi.Input<string>;
}
