// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApigatewayAuthorizer(args: GetApigatewayAuthorizerArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayAuthorizerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayAuthorizer:getApigatewayAuthorizer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayAuthorizer.
 */
export interface GetApigatewayAuthorizerArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayAuthorizer.
 */
export interface GetApigatewayAuthorizerResult {
    readonly authType: string;
    readonly authorizerCredentials: string;
    readonly authorizerId: string;
    readonly authorizerResultTtlInSeconds: number;
    readonly authorizerUri: string;
    readonly id: string;
    readonly identitySource: string;
    readonly identityValidationExpression: string;
    readonly name: string;
    readonly providerArNs: string[];
    readonly restApiId: string;
    readonly type: string;
}
export function getApigatewayAuthorizerOutput(args: GetApigatewayAuthorizerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayAuthorizerResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayAuthorizer(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayAuthorizer.
 */
export interface GetApigatewayAuthorizerOutputArgs {
    id: pulumi.Input<string>;
}
