// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ec2IpamPool extends pulumi.CustomResource {
    /**
     * Get an existing Ec2IpamPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2IpamPoolState, opts?: pulumi.CustomResourceOptions): Ec2IpamPool {
        return new Ec2IpamPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ec2IpamPool:Ec2IpamPool';

    /**
     * Returns true if the given object is an instance of Ec2IpamPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ec2IpamPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2IpamPool.__pulumiType;
    }

    /**
     * The address family of the address space in this pool. Either IPv4 or IPv6.
     */
    public readonly addressFamily!: pulumi.Output<string>;
    /**
     * The default netmask length for allocations made from this pool. This value is used when the netmask length of an
     * allocation isn't specified.
     */
    public readonly allocationDefaultNetmaskLength!: pulumi.Output<number>;
    /**
     * The maximum allowed netmask length for allocations made from this pool.
     */
    public readonly allocationMaxNetmaskLength!: pulumi.Output<number>;
    /**
     * The minimum allowed netmask length for allocations made from this pool.
     */
    public readonly allocationMinNetmaskLength!: pulumi.Output<number>;
    /**
     * When specified, an allocation will not be allowed unless a resource has a matching set of tags.
     */
    public readonly allocationResourceTags!: pulumi.Output<outputs.Ec2IpamPoolAllocationResourceTag[]>;
    /**
     * The Amazon Resource Name (ARN) of the IPAM Pool.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Determines what to do if IPAM discovers resources that haven't been assigned an allocation. If set to true, an
     * allocation will be made automatically.
     */
    public readonly autoImport!: pulumi.Output<boolean>;
    /**
     * Limits which service in Amazon Web Services that the pool can be used in.
     */
    public readonly awsService!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IPAM this pool is a part of.
     */
    public /*out*/ readonly ipamArn!: pulumi.Output<string>;
    /**
     * Id of the IPAM Pool.
     */
    public /*out*/ readonly ipamPoolId!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the scope this pool is a part of.
     */
    public /*out*/ readonly ipamScopeArn!: pulumi.Output<string>;
    /**
     * The Id of the scope this pool is a part of.
     */
    public readonly ipamScopeId!: pulumi.Output<string>;
    /**
     * Determines whether this scope contains publicly routable space or space for a private network
     */
    public /*out*/ readonly ipamScopeType!: pulumi.Output<string>;
    /**
     * The region of this pool. If not set, this will default to "None" which will disable non-custom allocations. If the
     * locale has been specified for the source pool, this value must match.
     */
    public readonly locale!: pulumi.Output<string>;
    /**
     * The depth of this pool in the source pool hierarchy.
     */
    public /*out*/ readonly poolDepth!: pulumi.Output<number>;
    /**
     * A list of cidrs representing the address space available for allocation in this pool.
     */
    public readonly provisionedCidrs!: pulumi.Output<outputs.Ec2IpamPoolProvisionedCidr[]>;
    /**
     * The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public
     * scope. Default is `byoip`.
     */
    public readonly publicIpSource!: pulumi.Output<string>;
    /**
     * Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is
     * IPv6.
     */
    public readonly publiclyAdvertisable!: pulumi.Output<boolean>;
    /**
     * The Id of this pool's source. If set, all space provisioned in this pool must be free space provisioned in the parent
     * pool.
     */
    public readonly sourceIpamPoolId!: pulumi.Output<string>;
    /**
     * The resource associated with this pool's space. Depending on the ResourceType, setting a SourceResource changes which
     * space can be provisioned in this pool and which types of resources can receive allocations
     */
    public readonly sourceResource!: pulumi.Output<outputs.Ec2IpamPoolSourceResource>;
    /**
     * The state of this pool. This can be one of the following values: "create-in-progress", "create-complete",
     * "modify-in-progress", "modify-complete", "delete-in-progress", or "delete-complete"
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * An explanation of how the pool arrived at it current state.
     */
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Ec2IpamPoolTag[]>;

    /**
     * Create a Ec2IpamPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ec2IpamPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ec2IpamPoolArgs | Ec2IpamPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ec2IpamPoolState | undefined;
            resourceInputs["addressFamily"] = state ? state.addressFamily : undefined;
            resourceInputs["allocationDefaultNetmaskLength"] = state ? state.allocationDefaultNetmaskLength : undefined;
            resourceInputs["allocationMaxNetmaskLength"] = state ? state.allocationMaxNetmaskLength : undefined;
            resourceInputs["allocationMinNetmaskLength"] = state ? state.allocationMinNetmaskLength : undefined;
            resourceInputs["allocationResourceTags"] = state ? state.allocationResourceTags : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["autoImport"] = state ? state.autoImport : undefined;
            resourceInputs["awsService"] = state ? state.awsService : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipamArn"] = state ? state.ipamArn : undefined;
            resourceInputs["ipamPoolId"] = state ? state.ipamPoolId : undefined;
            resourceInputs["ipamScopeArn"] = state ? state.ipamScopeArn : undefined;
            resourceInputs["ipamScopeId"] = state ? state.ipamScopeId : undefined;
            resourceInputs["ipamScopeType"] = state ? state.ipamScopeType : undefined;
            resourceInputs["locale"] = state ? state.locale : undefined;
            resourceInputs["poolDepth"] = state ? state.poolDepth : undefined;
            resourceInputs["provisionedCidrs"] = state ? state.provisionedCidrs : undefined;
            resourceInputs["publicIpSource"] = state ? state.publicIpSource : undefined;
            resourceInputs["publiclyAdvertisable"] = state ? state.publiclyAdvertisable : undefined;
            resourceInputs["sourceIpamPoolId"] = state ? state.sourceIpamPoolId : undefined;
            resourceInputs["sourceResource"] = state ? state.sourceResource : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Ec2IpamPoolArgs | undefined;
            if ((!args || args.addressFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressFamily'");
            }
            if ((!args || args.ipamScopeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipamScopeId'");
            }
            resourceInputs["addressFamily"] = args ? args.addressFamily : undefined;
            resourceInputs["allocationDefaultNetmaskLength"] = args ? args.allocationDefaultNetmaskLength : undefined;
            resourceInputs["allocationMaxNetmaskLength"] = args ? args.allocationMaxNetmaskLength : undefined;
            resourceInputs["allocationMinNetmaskLength"] = args ? args.allocationMinNetmaskLength : undefined;
            resourceInputs["allocationResourceTags"] = args ? args.allocationResourceTags : undefined;
            resourceInputs["autoImport"] = args ? args.autoImport : undefined;
            resourceInputs["awsService"] = args ? args.awsService : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipamScopeId"] = args ? args.ipamScopeId : undefined;
            resourceInputs["locale"] = args ? args.locale : undefined;
            resourceInputs["provisionedCidrs"] = args ? args.provisionedCidrs : undefined;
            resourceInputs["publicIpSource"] = args ? args.publicIpSource : undefined;
            resourceInputs["publiclyAdvertisable"] = args ? args.publiclyAdvertisable : undefined;
            resourceInputs["sourceIpamPoolId"] = args ? args.sourceIpamPoolId : undefined;
            resourceInputs["sourceResource"] = args ? args.sourceResource : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["ipamArn"] = undefined /*out*/;
            resourceInputs["ipamPoolId"] = undefined /*out*/;
            resourceInputs["ipamScopeArn"] = undefined /*out*/;
            resourceInputs["ipamScopeType"] = undefined /*out*/;
            resourceInputs["poolDepth"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2IpamPool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ec2IpamPool resources.
 */
export interface Ec2IpamPoolState {
    /**
     * The address family of the address space in this pool. Either IPv4 or IPv6.
     */
    addressFamily?: pulumi.Input<string>;
    /**
     * The default netmask length for allocations made from this pool. This value is used when the netmask length of an
     * allocation isn't specified.
     */
    allocationDefaultNetmaskLength?: pulumi.Input<number>;
    /**
     * The maximum allowed netmask length for allocations made from this pool.
     */
    allocationMaxNetmaskLength?: pulumi.Input<number>;
    /**
     * The minimum allowed netmask length for allocations made from this pool.
     */
    allocationMinNetmaskLength?: pulumi.Input<number>;
    /**
     * When specified, an allocation will not be allowed unless a resource has a matching set of tags.
     */
    allocationResourceTags?: pulumi.Input<pulumi.Input<inputs.Ec2IpamPoolAllocationResourceTag>[]>;
    /**
     * The Amazon Resource Name (ARN) of the IPAM Pool.
     */
    arn?: pulumi.Input<string>;
    /**
     * Determines what to do if IPAM discovers resources that haven't been assigned an allocation. If set to true, an
     * allocation will be made automatically.
     */
    autoImport?: pulumi.Input<boolean>;
    /**
     * Limits which service in Amazon Web Services that the pool can be used in.
     */
    awsService?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IPAM this pool is a part of.
     */
    ipamArn?: pulumi.Input<string>;
    /**
     * Id of the IPAM Pool.
     */
    ipamPoolId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the scope this pool is a part of.
     */
    ipamScopeArn?: pulumi.Input<string>;
    /**
     * The Id of the scope this pool is a part of.
     */
    ipamScopeId?: pulumi.Input<string>;
    /**
     * Determines whether this scope contains publicly routable space or space for a private network
     */
    ipamScopeType?: pulumi.Input<string>;
    /**
     * The region of this pool. If not set, this will default to "None" which will disable non-custom allocations. If the
     * locale has been specified for the source pool, this value must match.
     */
    locale?: pulumi.Input<string>;
    /**
     * The depth of this pool in the source pool hierarchy.
     */
    poolDepth?: pulumi.Input<number>;
    /**
     * A list of cidrs representing the address space available for allocation in this pool.
     */
    provisionedCidrs?: pulumi.Input<pulumi.Input<inputs.Ec2IpamPoolProvisionedCidr>[]>;
    /**
     * The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public
     * scope. Default is `byoip`.
     */
    publicIpSource?: pulumi.Input<string>;
    /**
     * Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is
     * IPv6.
     */
    publiclyAdvertisable?: pulumi.Input<boolean>;
    /**
     * The Id of this pool's source. If set, all space provisioned in this pool must be free space provisioned in the parent
     * pool.
     */
    sourceIpamPoolId?: pulumi.Input<string>;
    /**
     * The resource associated with this pool's space. Depending on the ResourceType, setting a SourceResource changes which
     * space can be provisioned in this pool and which types of resources can receive allocations
     */
    sourceResource?: pulumi.Input<inputs.Ec2IpamPoolSourceResource>;
    /**
     * The state of this pool. This can be one of the following values: "create-in-progress", "create-complete",
     * "modify-in-progress", "modify-complete", "delete-in-progress", or "delete-complete"
     */
    state?: pulumi.Input<string>;
    /**
     * An explanation of how the pool arrived at it current state.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2IpamPoolTag>[]>;
}

/**
 * The set of arguments for constructing a Ec2IpamPool resource.
 */
export interface Ec2IpamPoolArgs {
    /**
     * The address family of the address space in this pool. Either IPv4 or IPv6.
     */
    addressFamily: pulumi.Input<string>;
    /**
     * The default netmask length for allocations made from this pool. This value is used when the netmask length of an
     * allocation isn't specified.
     */
    allocationDefaultNetmaskLength?: pulumi.Input<number>;
    /**
     * The maximum allowed netmask length for allocations made from this pool.
     */
    allocationMaxNetmaskLength?: pulumi.Input<number>;
    /**
     * The minimum allowed netmask length for allocations made from this pool.
     */
    allocationMinNetmaskLength?: pulumi.Input<number>;
    /**
     * When specified, an allocation will not be allowed unless a resource has a matching set of tags.
     */
    allocationResourceTags?: pulumi.Input<pulumi.Input<inputs.Ec2IpamPoolAllocationResourceTag>[]>;
    /**
     * Determines what to do if IPAM discovers resources that haven't been assigned an allocation. If set to true, an
     * allocation will be made automatically.
     */
    autoImport?: pulumi.Input<boolean>;
    /**
     * Limits which service in Amazon Web Services that the pool can be used in.
     */
    awsService?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * The Id of the scope this pool is a part of.
     */
    ipamScopeId: pulumi.Input<string>;
    /**
     * The region of this pool. If not set, this will default to "None" which will disable non-custom allocations. If the
     * locale has been specified for the source pool, this value must match.
     */
    locale?: pulumi.Input<string>;
    /**
     * A list of cidrs representing the address space available for allocation in this pool.
     */
    provisionedCidrs?: pulumi.Input<pulumi.Input<inputs.Ec2IpamPoolProvisionedCidr>[]>;
    /**
     * The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public
     * scope. Default is `byoip`.
     */
    publicIpSource?: pulumi.Input<string>;
    /**
     * Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is
     * IPv6.
     */
    publiclyAdvertisable?: pulumi.Input<boolean>;
    /**
     * The Id of this pool's source. If set, all space provisioned in this pool must be free space provisioned in the parent
     * pool.
     */
    sourceIpamPoolId?: pulumi.Input<string>;
    /**
     * The resource associated with this pool's space. Depending on the ResourceType, setting a SourceResource changes which
     * space can be provisioned in this pool and which types of resources can receive allocations
     */
    sourceResource?: pulumi.Input<inputs.Ec2IpamPoolSourceResource>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2IpamPoolTag>[]>;
}
