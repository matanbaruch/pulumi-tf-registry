// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudformationTypeActivation(args: GetCloudformationTypeActivationArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudformationTypeActivationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudformationTypeActivation:getCloudformationTypeActivation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudformationTypeActivation.
 */
export interface GetCloudformationTypeActivationArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudformationTypeActivation.
 */
export interface GetCloudformationTypeActivationResult {
    readonly arn: string;
    readonly autoUpdate: boolean;
    readonly executionRoleArn: string;
    readonly id: string;
    readonly loggingConfig: outputs.GetCloudformationTypeActivationLoggingConfig;
    readonly majorVersion: string;
    readonly publicTypeArn: string;
    readonly publisherId: string;
    readonly type: string;
    readonly typeName: string;
    readonly typeNameAlias: string;
    readonly versionBump: string;
}
export function getCloudformationTypeActivationOutput(args: GetCloudformationTypeActivationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudformationTypeActivationResult> {
    return pulumi.output(args).apply((a: any) => getCloudformationTypeActivation(a, opts))
}

/**
 * A collection of arguments for invoking getCloudformationTypeActivation.
 */
export interface GetCloudformationTypeActivationOutputArgs {
    id: pulumi.Input<string>;
}
