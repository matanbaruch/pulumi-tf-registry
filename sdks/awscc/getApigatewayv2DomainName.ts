// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayv2DomainName(args: GetApigatewayv2DomainNameArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayv2DomainNameResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayv2DomainName:getApigatewayv2DomainName", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayv2DomainName.
 */
export interface GetApigatewayv2DomainNameArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayv2DomainName.
 */
export interface GetApigatewayv2DomainNameResult {
    readonly domainName: string;
    readonly domainNameConfigurations: outputs.GetApigatewayv2DomainNameDomainNameConfiguration[];
    readonly id: string;
    readonly mutualTlsAuthentication: outputs.GetApigatewayv2DomainNameMutualTlsAuthentication;
    readonly regionalDomainName: string;
    readonly regionalHostedZoneId: string;
    readonly tags: {[key: string]: string};
}
export function getApigatewayv2DomainNameOutput(args: GetApigatewayv2DomainNameOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayv2DomainNameResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayv2DomainName(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayv2DomainName.
 */
export interface GetApigatewayv2DomainNameOutputArgs {
    id: pulumi.Input<string>;
}
