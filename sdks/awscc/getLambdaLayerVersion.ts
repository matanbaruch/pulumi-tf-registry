// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLambdaLayerVersion(args: GetLambdaLayerVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaLayerVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLambdaLayerVersion:getLambdaLayerVersion", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaLayerVersion.
 */
export interface GetLambdaLayerVersionArgs {
    id: string;
}

/**
 * A collection of values returned by getLambdaLayerVersion.
 */
export interface GetLambdaLayerVersionResult {
    readonly compatibleArchitectures: string[];
    readonly compatibleRuntimes: string[];
    readonly content: outputs.GetLambdaLayerVersionContent;
    readonly description: string;
    readonly id: string;
    readonly layerName: string;
    readonly layerVersionArn: string;
    readonly licenseInfo: string;
}
export function getLambdaLayerVersionOutput(args: GetLambdaLayerVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaLayerVersionResult> {
    return pulumi.output(args).apply((a: any) => getLambdaLayerVersion(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaLayerVersion.
 */
export interface GetLambdaLayerVersionOutputArgs {
    id: pulumi.Input<string>;
}
