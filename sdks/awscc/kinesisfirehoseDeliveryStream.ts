// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KinesisfirehoseDeliveryStream extends pulumi.CustomResource {
    /**
     * Get an existing KinesisfirehoseDeliveryStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KinesisfirehoseDeliveryStreamState, opts?: pulumi.CustomResourceOptions): KinesisfirehoseDeliveryStream {
        return new KinesisfirehoseDeliveryStream(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/kinesisfirehoseDeliveryStream:KinesisfirehoseDeliveryStream';

    /**
     * Returns true if the given object is an instance of KinesisfirehoseDeliveryStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KinesisfirehoseDeliveryStream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KinesisfirehoseDeliveryStream.__pulumiType;
    }

    public readonly amazonOpenSearchServerlessDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration>;
    public readonly amazonopensearchserviceDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamAmazonopensearchserviceDestinationConfiguration>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly deliveryStreamEncryptionConfigurationInput!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamDeliveryStreamEncryptionConfigurationInput>;
    public readonly deliveryStreamName!: pulumi.Output<string>;
    public readonly deliveryStreamType!: pulumi.Output<string>;
    public readonly elasticsearchDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamElasticsearchDestinationConfiguration>;
    public readonly extendedS3DestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamExtendedS3DestinationConfiguration>;
    public readonly httpEndpointDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamHttpEndpointDestinationConfiguration>;
    public readonly icebergDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamIcebergDestinationConfiguration>;
    public readonly kinesisStreamSourceConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamKinesisStreamSourceConfiguration>;
    public readonly mskSourceConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamMskSourceConfiguration>;
    public readonly redshiftDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamRedshiftDestinationConfiguration>;
    public readonly s3DestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamS3DestinationConfiguration>;
    public readonly snowflakeDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamSnowflakeDestinationConfiguration>;
    public readonly splunkDestinationConfiguration!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamSplunkDestinationConfiguration>;
    public readonly tags!: pulumi.Output<outputs.KinesisfirehoseDeliveryStreamTag[]>;

    /**
     * Create a KinesisfirehoseDeliveryStream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KinesisfirehoseDeliveryStreamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KinesisfirehoseDeliveryStreamArgs | KinesisfirehoseDeliveryStreamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KinesisfirehoseDeliveryStreamState | undefined;
            resourceInputs["amazonOpenSearchServerlessDestinationConfiguration"] = state ? state.amazonOpenSearchServerlessDestinationConfiguration : undefined;
            resourceInputs["amazonopensearchserviceDestinationConfiguration"] = state ? state.amazonopensearchserviceDestinationConfiguration : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["deliveryStreamEncryptionConfigurationInput"] = state ? state.deliveryStreamEncryptionConfigurationInput : undefined;
            resourceInputs["deliveryStreamName"] = state ? state.deliveryStreamName : undefined;
            resourceInputs["deliveryStreamType"] = state ? state.deliveryStreamType : undefined;
            resourceInputs["elasticsearchDestinationConfiguration"] = state ? state.elasticsearchDestinationConfiguration : undefined;
            resourceInputs["extendedS3DestinationConfiguration"] = state ? state.extendedS3DestinationConfiguration : undefined;
            resourceInputs["httpEndpointDestinationConfiguration"] = state ? state.httpEndpointDestinationConfiguration : undefined;
            resourceInputs["icebergDestinationConfiguration"] = state ? state.icebergDestinationConfiguration : undefined;
            resourceInputs["kinesisStreamSourceConfiguration"] = state ? state.kinesisStreamSourceConfiguration : undefined;
            resourceInputs["mskSourceConfiguration"] = state ? state.mskSourceConfiguration : undefined;
            resourceInputs["redshiftDestinationConfiguration"] = state ? state.redshiftDestinationConfiguration : undefined;
            resourceInputs["s3DestinationConfiguration"] = state ? state.s3DestinationConfiguration : undefined;
            resourceInputs["snowflakeDestinationConfiguration"] = state ? state.snowflakeDestinationConfiguration : undefined;
            resourceInputs["splunkDestinationConfiguration"] = state ? state.splunkDestinationConfiguration : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as KinesisfirehoseDeliveryStreamArgs | undefined;
            resourceInputs["amazonOpenSearchServerlessDestinationConfiguration"] = args ? args.amazonOpenSearchServerlessDestinationConfiguration : undefined;
            resourceInputs["amazonopensearchserviceDestinationConfiguration"] = args ? args.amazonopensearchserviceDestinationConfiguration : undefined;
            resourceInputs["deliveryStreamEncryptionConfigurationInput"] = args ? args.deliveryStreamEncryptionConfigurationInput : undefined;
            resourceInputs["deliveryStreamName"] = args ? args.deliveryStreamName : undefined;
            resourceInputs["deliveryStreamType"] = args ? args.deliveryStreamType : undefined;
            resourceInputs["elasticsearchDestinationConfiguration"] = args ? args.elasticsearchDestinationConfiguration : undefined;
            resourceInputs["extendedS3DestinationConfiguration"] = args ? args.extendedS3DestinationConfiguration : undefined;
            resourceInputs["httpEndpointDestinationConfiguration"] = args ? args.httpEndpointDestinationConfiguration : undefined;
            resourceInputs["icebergDestinationConfiguration"] = args ? args.icebergDestinationConfiguration : undefined;
            resourceInputs["kinesisStreamSourceConfiguration"] = args ? args.kinesisStreamSourceConfiguration : undefined;
            resourceInputs["mskSourceConfiguration"] = args ? args.mskSourceConfiguration : undefined;
            resourceInputs["redshiftDestinationConfiguration"] = args ? args.redshiftDestinationConfiguration : undefined;
            resourceInputs["s3DestinationConfiguration"] = args ? args.s3DestinationConfiguration : undefined;
            resourceInputs["snowflakeDestinationConfiguration"] = args ? args.snowflakeDestinationConfiguration : undefined;
            resourceInputs["splunkDestinationConfiguration"] = args ? args.splunkDestinationConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KinesisfirehoseDeliveryStream.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KinesisfirehoseDeliveryStream resources.
 */
export interface KinesisfirehoseDeliveryStreamState {
    amazonOpenSearchServerlessDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration>;
    amazonopensearchserviceDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamAmazonopensearchserviceDestinationConfiguration>;
    arn?: pulumi.Input<string>;
    deliveryStreamEncryptionConfigurationInput?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamDeliveryStreamEncryptionConfigurationInput>;
    deliveryStreamName?: pulumi.Input<string>;
    deliveryStreamType?: pulumi.Input<string>;
    elasticsearchDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamElasticsearchDestinationConfiguration>;
    extendedS3DestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamExtendedS3DestinationConfiguration>;
    httpEndpointDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamHttpEndpointDestinationConfiguration>;
    icebergDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamIcebergDestinationConfiguration>;
    kinesisStreamSourceConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamKinesisStreamSourceConfiguration>;
    mskSourceConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamMskSourceConfiguration>;
    redshiftDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamRedshiftDestinationConfiguration>;
    s3DestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamS3DestinationConfiguration>;
    snowflakeDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamSnowflakeDestinationConfiguration>;
    splunkDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamSplunkDestinationConfiguration>;
    tags?: pulumi.Input<pulumi.Input<inputs.KinesisfirehoseDeliveryStreamTag>[]>;
}

/**
 * The set of arguments for constructing a KinesisfirehoseDeliveryStream resource.
 */
export interface KinesisfirehoseDeliveryStreamArgs {
    amazonOpenSearchServerlessDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration>;
    amazonopensearchserviceDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamAmazonopensearchserviceDestinationConfiguration>;
    deliveryStreamEncryptionConfigurationInput?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamDeliveryStreamEncryptionConfigurationInput>;
    deliveryStreamName?: pulumi.Input<string>;
    deliveryStreamType?: pulumi.Input<string>;
    elasticsearchDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamElasticsearchDestinationConfiguration>;
    extendedS3DestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamExtendedS3DestinationConfiguration>;
    httpEndpointDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamHttpEndpointDestinationConfiguration>;
    icebergDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamIcebergDestinationConfiguration>;
    kinesisStreamSourceConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamKinesisStreamSourceConfiguration>;
    mskSourceConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamMskSourceConfiguration>;
    redshiftDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamRedshiftDestinationConfiguration>;
    s3DestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamS3DestinationConfiguration>;
    snowflakeDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamSnowflakeDestinationConfiguration>;
    splunkDestinationConfiguration?: pulumi.Input<inputs.KinesisfirehoseDeliveryStreamSplunkDestinationConfiguration>;
    tags?: pulumi.Input<pulumi.Input<inputs.KinesisfirehoseDeliveryStreamTag>[]>;
}
