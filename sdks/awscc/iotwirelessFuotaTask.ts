// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotwirelessFuotaTask extends pulumi.CustomResource {
    /**
     * Get an existing IotwirelessFuotaTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotwirelessFuotaTaskState, opts?: pulumi.CustomResourceOptions): IotwirelessFuotaTask {
        return new IotwirelessFuotaTask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotwirelessFuotaTask:IotwirelessFuotaTask';

    /**
     * Returns true if the given object is an instance of IotwirelessFuotaTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotwirelessFuotaTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotwirelessFuotaTask.__pulumiType;
    }

    /**
     * FUOTA task arn. Returned after successful create.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Multicast group to associate. Only for update request.
     */
    public readonly associateMulticastGroup!: pulumi.Output<string>;
    /**
     * Wireless device to associate. Only for update request.
     */
    public readonly associateWirelessDevice!: pulumi.Output<string>;
    /**
     * FUOTA task description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Multicast group to disassociate. Only for update request.
     */
    public readonly disassociateMulticastGroup!: pulumi.Output<string>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    public readonly disassociateWirelessDevice!: pulumi.Output<string>;
    /**
     * FUOTA task firmware update image binary S3 link
     */
    public readonly firmwareUpdateImage!: pulumi.Output<string>;
    /**
     * FUOTA task firmware IAM role for reading S3
     */
    public readonly firmwareUpdateRole!: pulumi.Output<string>;
    /**
     * FUOTA task id. Returned after successful create.
     */
    public /*out*/ readonly fuotaTaskId!: pulumi.Output<string>;
    /**
     * FUOTA task status. Returned after successful read.
     */
    public /*out*/ readonly fuotaTaskStatus!: pulumi.Output<string>;
    /**
     * FUOTA task LoRaWAN
     */
    public readonly loRaWan!: pulumi.Output<outputs.IotwirelessFuotaTaskLoRaWan>;
    /**
     * Name of FUOTA task
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the FUOTA task.
     */
    public readonly tags!: pulumi.Output<outputs.IotwirelessFuotaTaskTag[]>;

    /**
     * Create a IotwirelessFuotaTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IotwirelessFuotaTaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotwirelessFuotaTaskArgs | IotwirelessFuotaTaskState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotwirelessFuotaTaskState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["associateMulticastGroup"] = state ? state.associateMulticastGroup : undefined;
            resourceInputs["associateWirelessDevice"] = state ? state.associateWirelessDevice : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disassociateMulticastGroup"] = state ? state.disassociateMulticastGroup : undefined;
            resourceInputs["disassociateWirelessDevice"] = state ? state.disassociateWirelessDevice : undefined;
            resourceInputs["firmwareUpdateImage"] = state ? state.firmwareUpdateImage : undefined;
            resourceInputs["firmwareUpdateRole"] = state ? state.firmwareUpdateRole : undefined;
            resourceInputs["fuotaTaskId"] = state ? state.fuotaTaskId : undefined;
            resourceInputs["fuotaTaskStatus"] = state ? state.fuotaTaskStatus : undefined;
            resourceInputs["loRaWan"] = state ? state.loRaWan : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IotwirelessFuotaTaskArgs | undefined;
            if ((!args || args.firmwareUpdateImage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firmwareUpdateImage'");
            }
            if ((!args || args.firmwareUpdateRole === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firmwareUpdateRole'");
            }
            if ((!args || args.loRaWan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loRaWan'");
            }
            resourceInputs["associateMulticastGroup"] = args ? args.associateMulticastGroup : undefined;
            resourceInputs["associateWirelessDevice"] = args ? args.associateWirelessDevice : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disassociateMulticastGroup"] = args ? args.disassociateMulticastGroup : undefined;
            resourceInputs["disassociateWirelessDevice"] = args ? args.disassociateWirelessDevice : undefined;
            resourceInputs["firmwareUpdateImage"] = args ? args.firmwareUpdateImage : undefined;
            resourceInputs["firmwareUpdateRole"] = args ? args.firmwareUpdateRole : undefined;
            resourceInputs["loRaWan"] = args ? args.loRaWan : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fuotaTaskId"] = undefined /*out*/;
            resourceInputs["fuotaTaskStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotwirelessFuotaTask.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotwirelessFuotaTask resources.
 */
export interface IotwirelessFuotaTaskState {
    /**
     * FUOTA task arn. Returned after successful create.
     */
    arn?: pulumi.Input<string>;
    /**
     * Multicast group to associate. Only for update request.
     */
    associateMulticastGroup?: pulumi.Input<string>;
    /**
     * Wireless device to associate. Only for update request.
     */
    associateWirelessDevice?: pulumi.Input<string>;
    /**
     * FUOTA task description
     */
    description?: pulumi.Input<string>;
    /**
     * Multicast group to disassociate. Only for update request.
     */
    disassociateMulticastGroup?: pulumi.Input<string>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    disassociateWirelessDevice?: pulumi.Input<string>;
    /**
     * FUOTA task firmware update image binary S3 link
     */
    firmwareUpdateImage?: pulumi.Input<string>;
    /**
     * FUOTA task firmware IAM role for reading S3
     */
    firmwareUpdateRole?: pulumi.Input<string>;
    /**
     * FUOTA task id. Returned after successful create.
     */
    fuotaTaskId?: pulumi.Input<string>;
    /**
     * FUOTA task status. Returned after successful read.
     */
    fuotaTaskStatus?: pulumi.Input<string>;
    /**
     * FUOTA task LoRaWAN
     */
    loRaWan?: pulumi.Input<inputs.IotwirelessFuotaTaskLoRaWan>;
    /**
     * Name of FUOTA task
     */
    name?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the FUOTA task.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessFuotaTaskTag>[]>;
}

/**
 * The set of arguments for constructing a IotwirelessFuotaTask resource.
 */
export interface IotwirelessFuotaTaskArgs {
    /**
     * Multicast group to associate. Only for update request.
     */
    associateMulticastGroup?: pulumi.Input<string>;
    /**
     * Wireless device to associate. Only for update request.
     */
    associateWirelessDevice?: pulumi.Input<string>;
    /**
     * FUOTA task description
     */
    description?: pulumi.Input<string>;
    /**
     * Multicast group to disassociate. Only for update request.
     */
    disassociateMulticastGroup?: pulumi.Input<string>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    disassociateWirelessDevice?: pulumi.Input<string>;
    /**
     * FUOTA task firmware update image binary S3 link
     */
    firmwareUpdateImage: pulumi.Input<string>;
    /**
     * FUOTA task firmware IAM role for reading S3
     */
    firmwareUpdateRole: pulumi.Input<string>;
    /**
     * FUOTA task LoRaWAN
     */
    loRaWan: pulumi.Input<inputs.IotwirelessFuotaTaskLoRaWan>;
    /**
     * Name of FUOTA task
     */
    name?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the FUOTA task.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.IotwirelessFuotaTaskTag>[]>;
}
