// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DmsDataProvider extends pulumi.CustomResource {
    /**
     * Get an existing DmsDataProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DmsDataProviderState, opts?: pulumi.CustomResourceOptions): DmsDataProvider {
        return new DmsDataProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/dmsDataProvider:DmsDataProvider';

    /**
     * Returns true if the given object is an instance of DmsDataProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DmsDataProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DmsDataProvider.__pulumiType;
    }

    /**
     * The data provider ARN.
     */
    public /*out*/ readonly dataProviderArn!: pulumi.Output<string>;
    /**
     * The data provider creation time.
     */
    public /*out*/ readonly dataProviderCreationTime!: pulumi.Output<string>;
    /**
     * The property describes an identifier for the data provider. It is used for describing/deleting/modifying can be name/arn
     */
    public readonly dataProviderIdentifier!: pulumi.Output<string>;
    /**
     * The property describes a name to identify the data provider.
     */
    public readonly dataProviderName!: pulumi.Output<string>;
    /**
     * The optional description of the data provider.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The property describes a data engine for the data provider.
     */
    public readonly engine!: pulumi.Output<string>;
    /**
     * The property describes the exact settings which can be modified
     */
    public readonly exactSettings!: pulumi.Output<boolean>;
    /**
     * The property identifies the exact type of settings for the data provider.
     */
    public readonly settings!: pulumi.Output<outputs.DmsDataProviderSettings>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.DmsDataProviderTag[]>;

    /**
     * Create a DmsDataProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DmsDataProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DmsDataProviderArgs | DmsDataProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DmsDataProviderState | undefined;
            resourceInputs["dataProviderArn"] = state ? state.dataProviderArn : undefined;
            resourceInputs["dataProviderCreationTime"] = state ? state.dataProviderCreationTime : undefined;
            resourceInputs["dataProviderIdentifier"] = state ? state.dataProviderIdentifier : undefined;
            resourceInputs["dataProviderName"] = state ? state.dataProviderName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["exactSettings"] = state ? state.exactSettings : undefined;
            resourceInputs["settings"] = state ? state.settings : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DmsDataProviderArgs | undefined;
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            resourceInputs["dataProviderIdentifier"] = args ? args.dataProviderIdentifier : undefined;
            resourceInputs["dataProviderName"] = args ? args.dataProviderName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["exactSettings"] = args ? args.exactSettings : undefined;
            resourceInputs["settings"] = args ? args.settings : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["dataProviderArn"] = undefined /*out*/;
            resourceInputs["dataProviderCreationTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DmsDataProvider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DmsDataProvider resources.
 */
export interface DmsDataProviderState {
    /**
     * The data provider ARN.
     */
    dataProviderArn?: pulumi.Input<string>;
    /**
     * The data provider creation time.
     */
    dataProviderCreationTime?: pulumi.Input<string>;
    /**
     * The property describes an identifier for the data provider. It is used for describing/deleting/modifying can be name/arn
     */
    dataProviderIdentifier?: pulumi.Input<string>;
    /**
     * The property describes a name to identify the data provider.
     */
    dataProviderName?: pulumi.Input<string>;
    /**
     * The optional description of the data provider.
     */
    description?: pulumi.Input<string>;
    /**
     * The property describes a data engine for the data provider.
     */
    engine?: pulumi.Input<string>;
    /**
     * The property describes the exact settings which can be modified
     */
    exactSettings?: pulumi.Input<boolean>;
    /**
     * The property identifies the exact type of settings for the data provider.
     */
    settings?: pulumi.Input<inputs.DmsDataProviderSettings>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DmsDataProviderTag>[]>;
}

/**
 * The set of arguments for constructing a DmsDataProvider resource.
 */
export interface DmsDataProviderArgs {
    /**
     * The property describes an identifier for the data provider. It is used for describing/deleting/modifying can be name/arn
     */
    dataProviderIdentifier?: pulumi.Input<string>;
    /**
     * The property describes a name to identify the data provider.
     */
    dataProviderName?: pulumi.Input<string>;
    /**
     * The optional description of the data provider.
     */
    description?: pulumi.Input<string>;
    /**
     * The property describes a data engine for the data provider.
     */
    engine: pulumi.Input<string>;
    /**
     * The property describes the exact settings which can be modified
     */
    exactSettings?: pulumi.Input<boolean>;
    /**
     * The property identifies the exact type of settings for the data provider.
     */
    settings?: pulumi.Input<inputs.DmsDataProviderSettings>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.DmsDataProviderTag>[]>;
}
