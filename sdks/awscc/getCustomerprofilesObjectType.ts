// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCustomerprofilesObjectType(args: GetCustomerprofilesObjectTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomerprofilesObjectTypeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCustomerprofilesObjectType:getCustomerprofilesObjectType", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomerprofilesObjectType.
 */
export interface GetCustomerprofilesObjectTypeArgs {
    id: string;
}

/**
 * A collection of values returned by getCustomerprofilesObjectType.
 */
export interface GetCustomerprofilesObjectTypeResult {
    readonly allowProfileCreation: boolean;
    readonly createdAt: string;
    readonly description: string;
    readonly domainName: string;
    readonly encryptionKey: string;
    readonly expirationDays: number;
    readonly fields: outputs.GetCustomerprofilesObjectTypeField[];
    readonly id: string;
    readonly keys: outputs.GetCustomerprofilesObjectTypeKey[];
    readonly lastUpdatedAt: string;
    readonly objectTypeName: string;
    readonly sourceLastUpdatedTimestampFormat: string;
    readonly tags: outputs.GetCustomerprofilesObjectTypeTag[];
    readonly templateId: string;
}
export function getCustomerprofilesObjectTypeOutput(args: GetCustomerprofilesObjectTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomerprofilesObjectTypeResult> {
    return pulumi.output(args).apply((a: any) => getCustomerprofilesObjectType(a, opts))
}

/**
 * A collection of arguments for invoking getCustomerprofilesObjectType.
 */
export interface GetCustomerprofilesObjectTypeOutputArgs {
    id: pulumi.Input<string>;
}
