// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getXrayResourcePolicy(args: GetXrayResourcePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetXrayResourcePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getXrayResourcePolicy:getXrayResourcePolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getXrayResourcePolicy.
 */
export interface GetXrayResourcePolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getXrayResourcePolicy.
 */
export interface GetXrayResourcePolicyResult {
    readonly bypassPolicyLockoutCheck: boolean;
    readonly id: string;
    readonly policyDocument: string;
    readonly policyName: string;
}
export function getXrayResourcePolicyOutput(args: GetXrayResourcePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetXrayResourcePolicyResult> {
    return pulumi.output(args).apply((a: any) => getXrayResourcePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getXrayResourcePolicy.
 */
export interface GetXrayResourcePolicyOutputArgs {
    id: pulumi.Input<string>;
}
