// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Route53HealthCheck extends pulumi.CustomResource {
    /**
     * Get an existing Route53HealthCheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Route53HealthCheckState, opts?: pulumi.CustomResourceOptions): Route53HealthCheck {
        return new Route53HealthCheck(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/route53HealthCheck:Route53HealthCheck';

    /**
     * Returns true if the given object is an instance of Route53HealthCheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Route53HealthCheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Route53HealthCheck.__pulumiType;
    }

    /**
     * A complex type that contains information about the health check.
     */
    public readonly healthCheckConfig!: pulumi.Output<outputs.Route53HealthCheckHealthCheckConfig>;
    public /*out*/ readonly healthCheckId!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly healthCheckTags!: pulumi.Output<outputs.Route53HealthCheckHealthCheckTag[]>;

    /**
     * Create a Route53HealthCheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Route53HealthCheckArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Route53HealthCheckArgs | Route53HealthCheckState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Route53HealthCheckState | undefined;
            resourceInputs["healthCheckConfig"] = state ? state.healthCheckConfig : undefined;
            resourceInputs["healthCheckId"] = state ? state.healthCheckId : undefined;
            resourceInputs["healthCheckTags"] = state ? state.healthCheckTags : undefined;
        } else {
            const args = argsOrState as Route53HealthCheckArgs | undefined;
            if ((!args || args.healthCheckConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'healthCheckConfig'");
            }
            resourceInputs["healthCheckConfig"] = args ? args.healthCheckConfig : undefined;
            resourceInputs["healthCheckTags"] = args ? args.healthCheckTags : undefined;
            resourceInputs["healthCheckId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Route53HealthCheck.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Route53HealthCheck resources.
 */
export interface Route53HealthCheckState {
    /**
     * A complex type that contains information about the health check.
     */
    healthCheckConfig?: pulumi.Input<inputs.Route53HealthCheckHealthCheckConfig>;
    healthCheckId?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    healthCheckTags?: pulumi.Input<pulumi.Input<inputs.Route53HealthCheckHealthCheckTag>[]>;
}

/**
 * The set of arguments for constructing a Route53HealthCheck resource.
 */
export interface Route53HealthCheckArgs {
    /**
     * A complex type that contains information about the health check.
     */
    healthCheckConfig: pulumi.Input<inputs.Route53HealthCheckHealthCheckConfig>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    healthCheckTags?: pulumi.Input<pulumi.Input<inputs.Route53HealthCheckHealthCheckTag>[]>;
}
