// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ec2LaunchTemplate extends pulumi.CustomResource {
    /**
     * Get an existing Ec2LaunchTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2LaunchTemplateState, opts?: pulumi.CustomResourceOptions): Ec2LaunchTemplate {
        return new Ec2LaunchTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ec2LaunchTemplate:Ec2LaunchTemplate';

    /**
     * Returns true if the given object is an instance of Ec2LaunchTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ec2LaunchTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2LaunchTemplate.__pulumiType;
    }

    public /*out*/ readonly defaultVersionNumber!: pulumi.Output<string>;
    public /*out*/ readonly latestVersionNumber!: pulumi.Output<string>;
    /**
     * The information for the launch template.
     */
    public readonly launchTemplateData!: pulumi.Output<outputs.Ec2LaunchTemplateLaunchTemplateData>;
    public /*out*/ readonly launchTemplateId!: pulumi.Output<string>;
    /**
     * A name for the launch template.
     */
    public readonly launchTemplateName!: pulumi.Output<string>;
    /**
     * The tags to apply to the launch template on creation. To tag the launch template, the resource type must be
     * ``launch-template``. To specify the tags for the resources that are created when an instance is launched, you must use
     * [TagSpecifications](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications).
     */
    public readonly tagSpecifications!: pulumi.Output<outputs.Ec2LaunchTemplateTagSpecification[]>;
    /**
     * A description for the first version of the launch template.
     */
    public readonly versionDescription!: pulumi.Output<string>;

    /**
     * Create a Ec2LaunchTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ec2LaunchTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ec2LaunchTemplateArgs | Ec2LaunchTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ec2LaunchTemplateState | undefined;
            resourceInputs["defaultVersionNumber"] = state ? state.defaultVersionNumber : undefined;
            resourceInputs["latestVersionNumber"] = state ? state.latestVersionNumber : undefined;
            resourceInputs["launchTemplateData"] = state ? state.launchTemplateData : undefined;
            resourceInputs["launchTemplateId"] = state ? state.launchTemplateId : undefined;
            resourceInputs["launchTemplateName"] = state ? state.launchTemplateName : undefined;
            resourceInputs["tagSpecifications"] = state ? state.tagSpecifications : undefined;
            resourceInputs["versionDescription"] = state ? state.versionDescription : undefined;
        } else {
            const args = argsOrState as Ec2LaunchTemplateArgs | undefined;
            if ((!args || args.launchTemplateData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'launchTemplateData'");
            }
            resourceInputs["launchTemplateData"] = args ? args.launchTemplateData : undefined;
            resourceInputs["launchTemplateName"] = args ? args.launchTemplateName : undefined;
            resourceInputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["defaultVersionNumber"] = undefined /*out*/;
            resourceInputs["latestVersionNumber"] = undefined /*out*/;
            resourceInputs["launchTemplateId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2LaunchTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ec2LaunchTemplate resources.
 */
export interface Ec2LaunchTemplateState {
    defaultVersionNumber?: pulumi.Input<string>;
    latestVersionNumber?: pulumi.Input<string>;
    /**
     * The information for the launch template.
     */
    launchTemplateData?: pulumi.Input<inputs.Ec2LaunchTemplateLaunchTemplateData>;
    launchTemplateId?: pulumi.Input<string>;
    /**
     * A name for the launch template.
     */
    launchTemplateName?: pulumi.Input<string>;
    /**
     * The tags to apply to the launch template on creation. To tag the launch template, the resource type must be
     * ``launch-template``. To specify the tags for the resources that are created when an instance is launched, you must use
     * [TagSpecifications](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications).
     */
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.Ec2LaunchTemplateTagSpecification>[]>;
    /**
     * A description for the first version of the launch template.
     */
    versionDescription?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ec2LaunchTemplate resource.
 */
export interface Ec2LaunchTemplateArgs {
    /**
     * The information for the launch template.
     */
    launchTemplateData: pulumi.Input<inputs.Ec2LaunchTemplateLaunchTemplateData>;
    /**
     * A name for the launch template.
     */
    launchTemplateName?: pulumi.Input<string>;
    /**
     * The tags to apply to the launch template on creation. To tag the launch template, the resource type must be
     * ``launch-template``. To specify the tags for the resources that are created when an instance is launched, you must use
     * [TagSpecifications](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-launchtemplatedata.html#cfn-ec2-launchtemplate-launchtemplatedata-tagspecifications).
     */
    tagSpecifications?: pulumi.Input<pulumi.Input<inputs.Ec2LaunchTemplateTagSpecification>[]>;
    /**
     * A description for the first version of the launch template.
     */
    versionDescription?: pulumi.Input<string>;
}
