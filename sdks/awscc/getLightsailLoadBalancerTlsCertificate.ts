// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLightsailLoadBalancerTlsCertificate(args: GetLightsailLoadBalancerTlsCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetLightsailLoadBalancerTlsCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLightsailLoadBalancerTlsCertificate:getLightsailLoadBalancerTlsCertificate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLightsailLoadBalancerTlsCertificate.
 */
export interface GetLightsailLoadBalancerTlsCertificateArgs {
    id: string;
}

/**
 * A collection of values returned by getLightsailLoadBalancerTlsCertificate.
 */
export interface GetLightsailLoadBalancerTlsCertificateResult {
    readonly certificateAlternativeNames: string[];
    readonly certificateDomainName: string;
    readonly certificateName: string;
    readonly httpsRedirectionEnabled: boolean;
    readonly id: string;
    readonly isAttached: boolean;
    readonly loadBalancerName: string;
    readonly loadBalancerTlsCertificateArn: string;
    readonly status: string;
}
export function getLightsailLoadBalancerTlsCertificateOutput(args: GetLightsailLoadBalancerTlsCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLightsailLoadBalancerTlsCertificateResult> {
    return pulumi.output(args).apply((a: any) => getLightsailLoadBalancerTlsCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getLightsailLoadBalancerTlsCertificate.
 */
export interface GetLightsailLoadBalancerTlsCertificateOutputArgs {
    id: pulumi.Input<string>;
}
