// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApprunnerVpcIngressConnection(args: GetApprunnerVpcIngressConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetApprunnerVpcIngressConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApprunnerVpcIngressConnection:getApprunnerVpcIngressConnection", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApprunnerVpcIngressConnection.
 */
export interface GetApprunnerVpcIngressConnectionArgs {
    id: string;
}

/**
 * A collection of values returned by getApprunnerVpcIngressConnection.
 */
export interface GetApprunnerVpcIngressConnectionResult {
    readonly domainName: string;
    readonly id: string;
    readonly ingressVpcConfiguration: outputs.GetApprunnerVpcIngressConnectionIngressVpcConfiguration;
    readonly serviceArn: string;
    readonly status: string;
    readonly tags: outputs.GetApprunnerVpcIngressConnectionTag[];
    readonly vpcIngressConnectionArn: string;
    readonly vpcIngressConnectionName: string;
}
export function getApprunnerVpcIngressConnectionOutput(args: GetApprunnerVpcIngressConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApprunnerVpcIngressConnectionResult> {
    return pulumi.output(args).apply((a: any) => getApprunnerVpcIngressConnection(a, opts))
}

/**
 * A collection of arguments for invoking getApprunnerVpcIngressConnection.
 */
export interface GetApprunnerVpcIngressConnectionOutputArgs {
    id: pulumi.Input<string>;
}
