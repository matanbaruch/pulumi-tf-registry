// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SsmDocument extends pulumi.CustomResource {
    /**
     * Get an existing SsmDocument resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsmDocumentState, opts?: pulumi.CustomResourceOptions): SsmDocument {
        return new SsmDocument(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ssmDocument:SsmDocument';

    /**
     * Returns true if the given object is an instance of SsmDocument.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SsmDocument {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SsmDocument.__pulumiType;
    }

    /**
     * A list of key and value pairs that describe attachments to a version of a document.
     */
    public readonly attachments!: pulumi.Output<outputs.SsmDocumentAttachment[]>;
    /**
     * The content for the Systems Manager document in JSON, YAML or String format.
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
     */
    public readonly documentFormat!: pulumi.Output<string>;
    /**
     * The type of document to create.
     */
    public readonly documentType!: pulumi.Output<string>;
    /**
     * A name for the Systems Manager document.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an
     * ApplicationConfigurationSchema document.
     */
    public readonly requires!: pulumi.Output<outputs.SsmDocumentRequire[]>;
    /**
     * Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by
     * purpose, owner, or environment.
     */
    public readonly tags!: pulumi.Output<outputs.SsmDocumentTag[]>;
    /**
     * Specify a target type to define the kinds of resources the document can run on.
     */
    public readonly targetType!: pulumi.Output<string>;
    /**
     * Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the
     * update will create a new version.
     */
    public readonly updateMethod!: pulumi.Output<string>;
    /**
     * An optional field specifying the version of the artifact you are creating with the document. This value is unique across
     * all versions of a document, and cannot be changed.
     */
    public readonly versionName!: pulumi.Output<string>;

    /**
     * Create a SsmDocument resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SsmDocumentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsmDocumentArgs | SsmDocumentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsmDocumentState | undefined;
            resourceInputs["attachments"] = state ? state.attachments : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["documentFormat"] = state ? state.documentFormat : undefined;
            resourceInputs["documentType"] = state ? state.documentType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["requires"] = state ? state.requires : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
            resourceInputs["updateMethod"] = state ? state.updateMethod : undefined;
            resourceInputs["versionName"] = state ? state.versionName : undefined;
        } else {
            const args = argsOrState as SsmDocumentArgs | undefined;
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            resourceInputs["attachments"] = args ? args.attachments : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["documentFormat"] = args ? args.documentFormat : undefined;
            resourceInputs["documentType"] = args ? args.documentType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["requires"] = args ? args.requires : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
            resourceInputs["updateMethod"] = args ? args.updateMethod : undefined;
            resourceInputs["versionName"] = args ? args.versionName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SsmDocument.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SsmDocument resources.
 */
export interface SsmDocumentState {
    /**
     * A list of key and value pairs that describe attachments to a version of a document.
     */
    attachments?: pulumi.Input<pulumi.Input<inputs.SsmDocumentAttachment>[]>;
    /**
     * The content for the Systems Manager document in JSON, YAML or String format.
     */
    content?: pulumi.Input<string>;
    /**
     * Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
     */
    documentFormat?: pulumi.Input<string>;
    /**
     * The type of document to create.
     */
    documentType?: pulumi.Input<string>;
    /**
     * A name for the Systems Manager document.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an
     * ApplicationConfigurationSchema document.
     */
    requires?: pulumi.Input<pulumi.Input<inputs.SsmDocumentRequire>[]>;
    /**
     * Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by
     * purpose, owner, or environment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SsmDocumentTag>[]>;
    /**
     * Specify a target type to define the kinds of resources the document can run on.
     */
    targetType?: pulumi.Input<string>;
    /**
     * Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the
     * update will create a new version.
     */
    updateMethod?: pulumi.Input<string>;
    /**
     * An optional field specifying the version of the artifact you are creating with the document. This value is unique across
     * all versions of a document, and cannot be changed.
     */
    versionName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SsmDocument resource.
 */
export interface SsmDocumentArgs {
    /**
     * A list of key and value pairs that describe attachments to a version of a document.
     */
    attachments?: pulumi.Input<pulumi.Input<inputs.SsmDocumentAttachment>[]>;
    /**
     * The content for the Systems Manager document in JSON, YAML or String format.
     */
    content: pulumi.Input<string>;
    /**
     * Specify the document format for the request. The document format can be either JSON or YAML. JSON is the default format.
     */
    documentFormat?: pulumi.Input<string>;
    /**
     * The type of document to create.
     */
    documentType?: pulumi.Input<string>;
    /**
     * A name for the Systems Manager document.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of SSM documents required by a document. For example, an ApplicationConfiguration document requires an
     * ApplicationConfigurationSchema document.
     */
    requires?: pulumi.Input<pulumi.Input<inputs.SsmDocumentRequire>[]>;
    /**
     * Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by
     * purpose, owner, or environment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SsmDocumentTag>[]>;
    /**
     * Specify a target type to define the kinds of resources the document can run on.
     */
    targetType?: pulumi.Input<string>;
    /**
     * Update method - when set to 'Replace', the update will replace the existing document; when set to 'NewVersion', the
     * update will create a new version.
     */
    updateMethod?: pulumi.Input<string>;
    /**
     * An optional field specifying the version of the artifact you are creating with the document. This value is unique across
     * all versions of a document, and cannot be changed.
     */
    versionName?: pulumi.Input<string>;
}
