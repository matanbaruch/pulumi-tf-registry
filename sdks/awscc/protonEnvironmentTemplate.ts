// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProtonEnvironmentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ProtonEnvironmentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtonEnvironmentTemplateState, opts?: pulumi.CustomResourceOptions): ProtonEnvironmentTemplate {
        return new ProtonEnvironmentTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/protonEnvironmentTemplate:ProtonEnvironmentTemplate';

    /**
     * Returns true if the given object is an instance of ProtonEnvironmentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProtonEnvironmentTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtonEnvironmentTemplate.__pulumiType;
    }

    /**
     * <p>The Amazon Resource Name (ARN) of the environment template.</p>
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * <p>A description of the environment template.</p>
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * <p>The environment template name as displayed in the developer interface.</p>
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * <p>A customer provided encryption key that Proton uses to encrypt data.</p>
     */
    public readonly encryptionKey!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly provisioning!: pulumi.Output<string>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value
     * pair.</p> <p>For more information, see <a
     * href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     * <i>Proton User Guide</i>.</p>
     */
    public readonly tags!: pulumi.Output<outputs.ProtonEnvironmentTemplateTag[]>;

    /**
     * Create a ProtonEnvironmentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProtonEnvironmentTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtonEnvironmentTemplateArgs | ProtonEnvironmentTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtonEnvironmentTemplateState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["encryptionKey"] = state ? state.encryptionKey : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["provisioning"] = state ? state.provisioning : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ProtonEnvironmentTemplateArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["provisioning"] = args ? args.provisioning : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProtonEnvironmentTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProtonEnvironmentTemplate resources.
 */
export interface ProtonEnvironmentTemplateState {
    /**
     * <p>The Amazon Resource Name (ARN) of the environment template.</p>
     */
    arn?: pulumi.Input<string>;
    /**
     * <p>A description of the environment template.</p>
     */
    description?: pulumi.Input<string>;
    /**
     * <p>The environment template name as displayed in the developer interface.</p>
     */
    displayName?: pulumi.Input<string>;
    /**
     * <p>A customer provided encryption key that Proton uses to encrypt data.</p>
     */
    encryptionKey?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    provisioning?: pulumi.Input<string>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value
     * pair.</p> <p>For more information, see <a
     * href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     * <i>Proton User Guide</i>.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProtonEnvironmentTemplateTag>[]>;
}

/**
 * The set of arguments for constructing a ProtonEnvironmentTemplate resource.
 */
export interface ProtonEnvironmentTemplateArgs {
    /**
     * <p>A description of the environment template.</p>
     */
    description?: pulumi.Input<string>;
    /**
     * <p>The environment template name as displayed in the developer interface.</p>
     */
    displayName?: pulumi.Input<string>;
    /**
     * <p>A customer provided encryption key that Proton uses to encrypt data.</p>
     */
    encryptionKey?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    provisioning?: pulumi.Input<string>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value
     * pair.</p> <p>For more information, see <a
     * href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     * <i>Proton User Guide</i>.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProtonEnvironmentTemplateTag>[]>;
}
