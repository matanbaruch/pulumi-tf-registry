// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmrStudio(args: GetEmrStudioArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrStudioResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEmrStudio:getEmrStudio", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrStudio.
 */
export interface GetEmrStudioArgs {
    id: string;
}

/**
 * A collection of values returned by getEmrStudio.
 */
export interface GetEmrStudioResult {
    readonly arn: string;
    readonly authMode: string;
    readonly defaultS3Location: string;
    readonly description: string;
    readonly encryptionKeyArn: string;
    readonly engineSecurityGroupId: string;
    readonly id: string;
    readonly idcInstanceArn: string;
    readonly idcUserAssignment: string;
    readonly idpAuthUrl: string;
    readonly idpRelayStateParameterName: string;
    readonly name: string;
    readonly serviceRole: string;
    readonly studioId: string;
    readonly subnetIds: string[];
    readonly tags: outputs.GetEmrStudioTag[];
    readonly trustedIdentityPropagationEnabled: boolean;
    readonly url: string;
    readonly userRole: string;
    readonly vpcId: string;
    readonly workspaceSecurityGroupId: string;
}
export function getEmrStudioOutput(args: GetEmrStudioOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrStudioResult> {
    return pulumi.output(args).apply((a: any) => getEmrStudio(a, opts))
}

/**
 * A collection of arguments for invoking getEmrStudio.
 */
export interface GetEmrStudioOutputArgs {
    id: pulumi.Input<string>;
}
