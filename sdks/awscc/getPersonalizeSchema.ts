// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPersonalizeSchema(args: GetPersonalizeSchemaArgs, opts?: pulumi.InvokeOptions): Promise<GetPersonalizeSchemaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getPersonalizeSchema:getPersonalizeSchema", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPersonalizeSchema.
 */
export interface GetPersonalizeSchemaArgs {
    id: string;
}

/**
 * A collection of values returned by getPersonalizeSchema.
 */
export interface GetPersonalizeSchemaResult {
    readonly domain: string;
    readonly id: string;
    readonly name: string;
    readonly schema: string;
    readonly schemaArn: string;
}
export function getPersonalizeSchemaOutput(args: GetPersonalizeSchemaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPersonalizeSchemaResult> {
    return pulumi.output(args).apply((a: any) => getPersonalizeSchema(a, opts))
}

/**
 * A collection of arguments for invoking getPersonalizeSchema.
 */
export interface GetPersonalizeSchemaOutputArgs {
    id: pulumi.Input<string>;
}
