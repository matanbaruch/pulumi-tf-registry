// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEventschemasRegistryPolicy(args: GetEventschemasRegistryPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetEventschemasRegistryPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEventschemasRegistryPolicy:getEventschemasRegistryPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventschemasRegistryPolicy.
 */
export interface GetEventschemasRegistryPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getEventschemasRegistryPolicy.
 */
export interface GetEventschemasRegistryPolicyResult {
    readonly id: string;
    readonly policy: string;
    readonly registryName: string;
    readonly registryPolicyId: string;
    readonly revisionId: string;
}
export function getEventschemasRegistryPolicyOutput(args: GetEventschemasRegistryPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventschemasRegistryPolicyResult> {
    return pulumi.output(args).apply((a: any) => getEventschemasRegistryPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getEventschemasRegistryPolicy.
 */
export interface GetEventschemasRegistryPolicyOutputArgs {
    id: pulumi.Input<string>;
}
