// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSagemakerSpace(args: GetSagemakerSpaceArgs, opts?: pulumi.InvokeOptions): Promise<GetSagemakerSpaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSagemakerSpace:getSagemakerSpace", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSagemakerSpace.
 */
export interface GetSagemakerSpaceArgs {
    id: string;
}

/**
 * A collection of values returned by getSagemakerSpace.
 */
export interface GetSagemakerSpaceResult {
    readonly domainId: string;
    readonly id: string;
    readonly ownershipSettings: outputs.GetSagemakerSpaceOwnershipSettings;
    readonly spaceArn: string;
    readonly spaceDisplayName: string;
    readonly spaceName: string;
    readonly spaceSettings: outputs.GetSagemakerSpaceSpaceSettings;
    readonly spaceSharingSettings: outputs.GetSagemakerSpaceSpaceSharingSettings;
    readonly tags: outputs.GetSagemakerSpaceTag[];
    readonly url: string;
}
export function getSagemakerSpaceOutput(args: GetSagemakerSpaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSagemakerSpaceResult> {
    return pulumi.output(args).apply((a: any) => getSagemakerSpace(a, opts))
}

/**
 * A collection of arguments for invoking getSagemakerSpace.
 */
export interface GetSagemakerSpaceOutputArgs {
    id: pulumi.Input<string>;
}
