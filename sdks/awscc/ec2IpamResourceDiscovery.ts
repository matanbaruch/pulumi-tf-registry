// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ec2IpamResourceDiscovery extends pulumi.CustomResource {
    /**
     * Get an existing Ec2IpamResourceDiscovery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2IpamResourceDiscoveryState, opts?: pulumi.CustomResourceOptions): Ec2IpamResourceDiscovery {
        return new Ec2IpamResourceDiscovery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ec2IpamResourceDiscovery:Ec2IpamResourceDiscovery';

    /**
     * Returns true if the given object is an instance of Ec2IpamResourceDiscovery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ec2IpamResourceDiscovery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2IpamResourceDiscovery.__pulumiType;
    }

    public readonly description!: pulumi.Output<string>;
    /**
     * Amazon Resource Name (Arn) for the Resource Discovery.
     */
    public /*out*/ readonly ipamResourceDiscoveryArn!: pulumi.Output<string>;
    /**
     * Id of the IPAM Pool.
     */
    public /*out*/ readonly ipamResourceDiscoveryId!: pulumi.Output<string>;
    /**
     * The region the resource discovery is setup in.
     */
    public /*out*/ readonly ipamResourceDiscoveryRegion!: pulumi.Output<string>;
    /**
     * Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is
     * IPv6.
     */
    public /*out*/ readonly isDefault!: pulumi.Output<boolean>;
    /**
     * The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as
     * enabling monitoring
     */
    public readonly operatingRegions!: pulumi.Output<outputs.Ec2IpamResourceDiscoveryOperatingRegion[]>;
    /**
     * Owner Account ID of the Resource Discovery
     */
    public /*out*/ readonly ownerId!: pulumi.Output<string>;
    /**
     * The state of this Resource Discovery.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Ec2IpamResourceDiscoveryTag[]>;

    /**
     * Create a Ec2IpamResourceDiscovery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ec2IpamResourceDiscoveryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ec2IpamResourceDiscoveryArgs | Ec2IpamResourceDiscoveryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ec2IpamResourceDiscoveryState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipamResourceDiscoveryArn"] = state ? state.ipamResourceDiscoveryArn : undefined;
            resourceInputs["ipamResourceDiscoveryId"] = state ? state.ipamResourceDiscoveryId : undefined;
            resourceInputs["ipamResourceDiscoveryRegion"] = state ? state.ipamResourceDiscoveryRegion : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["operatingRegions"] = state ? state.operatingRegions : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Ec2IpamResourceDiscoveryArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["operatingRegions"] = args ? args.operatingRegions : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["ipamResourceDiscoveryArn"] = undefined /*out*/;
            resourceInputs["ipamResourceDiscoveryId"] = undefined /*out*/;
            resourceInputs["ipamResourceDiscoveryRegion"] = undefined /*out*/;
            resourceInputs["isDefault"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2IpamResourceDiscovery.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ec2IpamResourceDiscovery resources.
 */
export interface Ec2IpamResourceDiscoveryState {
    description?: pulumi.Input<string>;
    /**
     * Amazon Resource Name (Arn) for the Resource Discovery.
     */
    ipamResourceDiscoveryArn?: pulumi.Input<string>;
    /**
     * Id of the IPAM Pool.
     */
    ipamResourceDiscoveryId?: pulumi.Input<string>;
    /**
     * The region the resource discovery is setup in.
     */
    ipamResourceDiscoveryRegion?: pulumi.Input<string>;
    /**
     * Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is
     * IPv6.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as
     * enabling monitoring
     */
    operatingRegions?: pulumi.Input<pulumi.Input<inputs.Ec2IpamResourceDiscoveryOperatingRegion>[]>;
    /**
     * Owner Account ID of the Resource Discovery
     */
    ownerId?: pulumi.Input<string>;
    /**
     * The state of this Resource Discovery.
     */
    state?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2IpamResourceDiscoveryTag>[]>;
}

/**
 * The set of arguments for constructing a Ec2IpamResourceDiscovery resource.
 */
export interface Ec2IpamResourceDiscoveryArgs {
    description?: pulumi.Input<string>;
    /**
     * The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as
     * enabling monitoring
     */
    operatingRegions?: pulumi.Input<pulumi.Input<inputs.Ec2IpamResourceDiscoveryOperatingRegion>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2IpamResourceDiscoveryTag>[]>;
}
