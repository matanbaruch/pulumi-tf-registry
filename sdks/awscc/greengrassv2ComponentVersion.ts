// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Greengrassv2ComponentVersion extends pulumi.CustomResource {
    /**
     * Get an existing Greengrassv2ComponentVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Greengrassv2ComponentVersionState, opts?: pulumi.CustomResourceOptions): Greengrassv2ComponentVersion {
        return new Greengrassv2ComponentVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/greengrassv2ComponentVersion:Greengrassv2ComponentVersion';

    /**
     * Returns true if the given object is an instance of Greengrassv2ComponentVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Greengrassv2ComponentVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Greengrassv2ComponentVersion.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly componentName!: pulumi.Output<string>;
    public /*out*/ readonly componentVersion!: pulumi.Output<string>;
    public readonly inlineRecipe!: pulumi.Output<string>;
    public readonly lambdaFunction!: pulumi.Output<outputs.Greengrassv2ComponentVersionLambdaFunction>;
    public readonly tags!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Greengrassv2ComponentVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Greengrassv2ComponentVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Greengrassv2ComponentVersionArgs | Greengrassv2ComponentVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Greengrassv2ComponentVersionState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["componentName"] = state ? state.componentName : undefined;
            resourceInputs["componentVersion"] = state ? state.componentVersion : undefined;
            resourceInputs["inlineRecipe"] = state ? state.inlineRecipe : undefined;
            resourceInputs["lambdaFunction"] = state ? state.lambdaFunction : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Greengrassv2ComponentVersionArgs | undefined;
            resourceInputs["inlineRecipe"] = args ? args.inlineRecipe : undefined;
            resourceInputs["lambdaFunction"] = args ? args.lambdaFunction : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["componentName"] = undefined /*out*/;
            resourceInputs["componentVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Greengrassv2ComponentVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Greengrassv2ComponentVersion resources.
 */
export interface Greengrassv2ComponentVersionState {
    arn?: pulumi.Input<string>;
    componentName?: pulumi.Input<string>;
    componentVersion?: pulumi.Input<string>;
    inlineRecipe?: pulumi.Input<string>;
    lambdaFunction?: pulumi.Input<inputs.Greengrassv2ComponentVersionLambdaFunction>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Greengrassv2ComponentVersion resource.
 */
export interface Greengrassv2ComponentVersionArgs {
    inlineRecipe?: pulumi.Input<string>;
    lambdaFunction?: pulumi.Input<inputs.Greengrassv2ComponentVersionLambdaFunction>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
