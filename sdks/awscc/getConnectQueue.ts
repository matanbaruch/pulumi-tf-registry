// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectQueue(args: GetConnectQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectQueueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getConnectQueue:getConnectQueue", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectQueue.
 */
export interface GetConnectQueueArgs {
    id: string;
}

/**
 * A collection of values returned by getConnectQueue.
 */
export interface GetConnectQueueResult {
    readonly description: string;
    readonly hoursOfOperationArn: string;
    readonly id: string;
    readonly instanceArn: string;
    readonly maxContacts: number;
    readonly name: string;
    readonly outboundCallerConfig: outputs.GetConnectQueueOutboundCallerConfig;
    readonly queueArn: string;
    readonly quickConnectArns: string[];
    readonly status: string;
    readonly tags: outputs.GetConnectQueueTag[];
    readonly type: string;
}
export function getConnectQueueOutput(args: GetConnectQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectQueueResult> {
    return pulumi.output(args).apply((a: any) => getConnectQueue(a, opts))
}

/**
 * A collection of arguments for invoking getConnectQueue.
 */
export interface GetConnectQueueOutputArgs {
    id: pulumi.Input<string>;
}
