// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ShieldProtection extends pulumi.CustomResource {
    /**
     * Get an existing ShieldProtection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ShieldProtectionState, opts?: pulumi.CustomResourceOptions): ShieldProtection {
        return new ShieldProtection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/shieldProtection:ShieldProtection';

    /**
     * Returns true if the given object is an instance of ShieldProtection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ShieldProtection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ShieldProtection.__pulumiType;
    }

    /**
     * The automatic application layer DDoS mitigation settings for a Protection. This configuration determines whether Shield
     * Advanced automatically manages rules in the web ACL in order to respond to application layer events that Shield Advanced
     * determines to be DDoS attacks.
     */
    public readonly applicationLayerAutomaticResponseConfiguration!: pulumi.Output<outputs.ShieldProtectionApplicationLayerAutomaticResponseConfiguration>;
    /**
     * The Amazon Resource Names (ARNs) of the health check to associate with the protection.
     */
    public readonly healthCheckArns!: pulumi.Output<string[]>;
    /**
     * Friendly name for the Protection.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ARN (Amazon Resource Name) of the protection.
     */
    public /*out*/ readonly protectionArn!: pulumi.Output<string>;
    /**
     * The unique identifier (ID) of the protection.
     */
    public /*out*/ readonly protectionId!: pulumi.Output<string>;
    /**
     * The ARN (Amazon Resource Name) of the resource to be protected.
     */
    public readonly resourceArn!: pulumi.Output<string>;
    /**
     * One or more tag key-value pairs for the Protection object.
     */
    public readonly tags!: pulumi.Output<outputs.ShieldProtectionTag[]>;

    /**
     * Create a ShieldProtection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ShieldProtectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ShieldProtectionArgs | ShieldProtectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ShieldProtectionState | undefined;
            resourceInputs["applicationLayerAutomaticResponseConfiguration"] = state ? state.applicationLayerAutomaticResponseConfiguration : undefined;
            resourceInputs["healthCheckArns"] = state ? state.healthCheckArns : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protectionArn"] = state ? state.protectionArn : undefined;
            resourceInputs["protectionId"] = state ? state.protectionId : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ShieldProtectionArgs | undefined;
            if ((!args || args.resourceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceArn'");
            }
            resourceInputs["applicationLayerAutomaticResponseConfiguration"] = args ? args.applicationLayerAutomaticResponseConfiguration : undefined;
            resourceInputs["healthCheckArns"] = args ? args.healthCheckArns : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceArn"] = args ? args.resourceArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["protectionArn"] = undefined /*out*/;
            resourceInputs["protectionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ShieldProtection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ShieldProtection resources.
 */
export interface ShieldProtectionState {
    /**
     * The automatic application layer DDoS mitigation settings for a Protection. This configuration determines whether Shield
     * Advanced automatically manages rules in the web ACL in order to respond to application layer events that Shield Advanced
     * determines to be DDoS attacks.
     */
    applicationLayerAutomaticResponseConfiguration?: pulumi.Input<inputs.ShieldProtectionApplicationLayerAutomaticResponseConfiguration>;
    /**
     * The Amazon Resource Names (ARNs) of the health check to associate with the protection.
     */
    healthCheckArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Friendly name for the Protection.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN (Amazon Resource Name) of the protection.
     */
    protectionArn?: pulumi.Input<string>;
    /**
     * The unique identifier (ID) of the protection.
     */
    protectionId?: pulumi.Input<string>;
    /**
     * The ARN (Amazon Resource Name) of the resource to be protected.
     */
    resourceArn?: pulumi.Input<string>;
    /**
     * One or more tag key-value pairs for the Protection object.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ShieldProtectionTag>[]>;
}

/**
 * The set of arguments for constructing a ShieldProtection resource.
 */
export interface ShieldProtectionArgs {
    /**
     * The automatic application layer DDoS mitigation settings for a Protection. This configuration determines whether Shield
     * Advanced automatically manages rules in the web ACL in order to respond to application layer events that Shield Advanced
     * determines to be DDoS attacks.
     */
    applicationLayerAutomaticResponseConfiguration?: pulumi.Input<inputs.ShieldProtectionApplicationLayerAutomaticResponseConfiguration>;
    /**
     * The Amazon Resource Names (ARNs) of the health check to associate with the protection.
     */
    healthCheckArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Friendly name for the Protection.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN (Amazon Resource Name) of the resource to be protected.
     */
    resourceArn: pulumi.Input<string>;
    /**
     * One or more tag key-value pairs for the Protection object.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ShieldProtectionTag>[]>;
}
