// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGlueTrigger(args: GetGlueTriggerArgs, opts?: pulumi.InvokeOptions): Promise<GetGlueTriggerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGlueTrigger:getGlueTrigger", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlueTrigger.
 */
export interface GetGlueTriggerArgs {
    id: string;
}

/**
 * A collection of values returned by getGlueTrigger.
 */
export interface GetGlueTriggerResult {
    readonly actions: outputs.GetGlueTriggerAction[];
    readonly description: string;
    readonly eventBatchingCondition: outputs.GetGlueTriggerEventBatchingCondition;
    readonly id: string;
    readonly name: string;
    readonly predicate: outputs.GetGlueTriggerPredicate;
    readonly schedule: string;
    readonly startOnCreation: boolean;
    readonly tags: string;
    readonly type: string;
    readonly workflowName: string;
}
export function getGlueTriggerOutput(args: GetGlueTriggerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlueTriggerResult> {
    return pulumi.output(args).apply((a: any) => getGlueTrigger(a, opts))
}

/**
 * A collection of arguments for invoking getGlueTrigger.
 */
export interface GetGlueTriggerOutputArgs {
    id: pulumi.Input<string>;
}
