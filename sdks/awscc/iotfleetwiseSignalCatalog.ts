// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IotfleetwiseSignalCatalog extends pulumi.CustomResource {
    /**
     * Get an existing IotfleetwiseSignalCatalog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IotfleetwiseSignalCatalogState, opts?: pulumi.CustomResourceOptions): IotfleetwiseSignalCatalog {
        return new IotfleetwiseSignalCatalog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/iotfleetwiseSignalCatalog:IotfleetwiseSignalCatalog';

    /**
     * Returns true if the given object is an instance of IotfleetwiseSignalCatalog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IotfleetwiseSignalCatalog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IotfleetwiseSignalCatalog.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public /*out*/ readonly lastModificationTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nodeCounts!: pulumi.Output<outputs.IotfleetwiseSignalCatalogNodeCounts>;
    public readonly nodes!: pulumi.Output<outputs.IotfleetwiseSignalCatalogNode[]>;
    public readonly tags!: pulumi.Output<outputs.IotfleetwiseSignalCatalogTag[]>;

    /**
     * Create a IotfleetwiseSignalCatalog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IotfleetwiseSignalCatalogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IotfleetwiseSignalCatalogArgs | IotfleetwiseSignalCatalogState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IotfleetwiseSignalCatalogState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastModificationTime"] = state ? state.lastModificationTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeCounts"] = state ? state.nodeCounts : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as IotfleetwiseSignalCatalogArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeCounts"] = args ? args.nodeCounts : undefined;
            resourceInputs["nodes"] = args ? args.nodes : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastModificationTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IotfleetwiseSignalCatalog.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IotfleetwiseSignalCatalog resources.
 */
export interface IotfleetwiseSignalCatalogState {
    arn?: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    lastModificationTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nodeCounts?: pulumi.Input<inputs.IotfleetwiseSignalCatalogNodeCounts>;
    nodes?: pulumi.Input<pulumi.Input<inputs.IotfleetwiseSignalCatalogNode>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.IotfleetwiseSignalCatalogTag>[]>;
}

/**
 * The set of arguments for constructing a IotfleetwiseSignalCatalog resource.
 */
export interface IotfleetwiseSignalCatalogArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nodeCounts?: pulumi.Input<inputs.IotfleetwiseSignalCatalogNodeCounts>;
    nodes?: pulumi.Input<pulumi.Input<inputs.IotfleetwiseSignalCatalogNode>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.IotfleetwiseSignalCatalogTag>[]>;
}
