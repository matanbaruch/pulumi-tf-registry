// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SsoApplication extends pulumi.CustomResource {
    /**
     * Get an existing SsoApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsoApplicationState, opts?: pulumi.CustomResourceOptions): SsoApplication {
        return new SsoApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ssoApplication:SsoApplication';

    /**
     * Returns true if the given object is an instance of SsoApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SsoApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SsoApplication.__pulumiType;
    }

    /**
     * The Application ARN that is returned upon creation of the Identity Center (SSO) Application
     */
    public /*out*/ readonly applicationArn!: pulumi.Output<string>;
    /**
     * The ARN of the application provider under which the operation will run
     */
    public readonly applicationProviderArn!: pulumi.Output<string>;
    /**
     * The description information for the Identity Center (SSO) Application
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The ARN of the instance of IAM Identity Center under which the operation will run
     */
    public readonly instanceArn!: pulumi.Output<string>;
    /**
     * The name you want to assign to this Identity Center (SSO) Application
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A structure that describes the options for the portal associated with an application
     */
    public readonly portalOptions!: pulumi.Output<outputs.SsoApplicationPortalOptions>;
    /**
     * Specifies whether the application is enabled or disabled
     */
    public readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.SsoApplicationTag[]>;

    /**
     * Create a SsoApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SsoApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsoApplicationArgs | SsoApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsoApplicationState | undefined;
            resourceInputs["applicationArn"] = state ? state.applicationArn : undefined;
            resourceInputs["applicationProviderArn"] = state ? state.applicationProviderArn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portalOptions"] = state ? state.portalOptions : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SsoApplicationArgs | undefined;
            if ((!args || args.applicationProviderArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationProviderArn'");
            }
            if ((!args || args.instanceArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceArn'");
            }
            resourceInputs["applicationProviderArn"] = args ? args.applicationProviderArn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceArn"] = args ? args.instanceArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portalOptions"] = args ? args.portalOptions : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["applicationArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SsoApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SsoApplication resources.
 */
export interface SsoApplicationState {
    /**
     * The Application ARN that is returned upon creation of the Identity Center (SSO) Application
     */
    applicationArn?: pulumi.Input<string>;
    /**
     * The ARN of the application provider under which the operation will run
     */
    applicationProviderArn?: pulumi.Input<string>;
    /**
     * The description information for the Identity Center (SSO) Application
     */
    description?: pulumi.Input<string>;
    /**
     * The ARN of the instance of IAM Identity Center under which the operation will run
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * The name you want to assign to this Identity Center (SSO) Application
     */
    name?: pulumi.Input<string>;
    /**
     * A structure that describes the options for the portal associated with an application
     */
    portalOptions?: pulumi.Input<inputs.SsoApplicationPortalOptions>;
    /**
     * Specifies whether the application is enabled or disabled
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SsoApplicationTag>[]>;
}

/**
 * The set of arguments for constructing a SsoApplication resource.
 */
export interface SsoApplicationArgs {
    /**
     * The ARN of the application provider under which the operation will run
     */
    applicationProviderArn: pulumi.Input<string>;
    /**
     * The description information for the Identity Center (SSO) Application
     */
    description?: pulumi.Input<string>;
    /**
     * The ARN of the instance of IAM Identity Center under which the operation will run
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The name you want to assign to this Identity Center (SSO) Application
     */
    name?: pulumi.Input<string>;
    /**
     * A structure that describes the options for the portal associated with an application
     */
    portalOptions?: pulumi.Input<inputs.SsoApplicationPortalOptions>;
    /**
     * Specifies whether the application is enabled or disabled
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SsoApplicationTag>[]>;
}
