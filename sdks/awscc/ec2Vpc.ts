// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ec2Vpc extends pulumi.CustomResource {
    /**
     * Get an existing Ec2Vpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2VpcState, opts?: pulumi.CustomResourceOptions): Ec2Vpc {
        return new Ec2Vpc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ec2Vpc:Ec2Vpc';

    /**
     * Returns true if the given object is an instance of Ec2Vpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ec2Vpc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2Vpc.__pulumiType;
    }

    /**
     * The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block
     * to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``. You must
     * specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
     */
    public readonly cidrBlock!: pulumi.Output<string>;
    public /*out*/ readonly cidrBlockAssociations!: pulumi.Output<string[]>;
    public /*out*/ readonly defaultNetworkAcl!: pulumi.Output<string>;
    public /*out*/ readonly defaultSecurityGroup!: pulumi.Output<string>;
    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS
     * hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in
     * your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support). You can only enable DNS
     * hostnames if you've enabled DNS support.
     */
    public readonly enableDnsHostnames!: pulumi.Output<boolean>;
    /**
     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at
     * the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If
     * disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
     * Enabled by default. For more information, see [DNS attributes in your
     * VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
     */
    public readonly enableDnsSupport!: pulumi.Output<boolean>;
    /**
     * The allowed tenancy of instances launched into the VPC. + ``default``: An instance launched into the VPC runs on shared
     * hardware by default, unless you explicitly specify a different tenancy during instance launch. + ``dedicated``: An
     * instance launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of
     * ``host`` during instance launch. You cannot specify a tenancy of ``default`` during instance launch. Updating
     * ``InstanceTenancy`` requires no replacement only if you are updating its value from ``dedicated`` to ``default``.
     * Updating ``InstanceTenancy`` from ``default`` to ``dedicated`` requires replacement.
     */
    public readonly instanceTenancy!: pulumi.Output<string>;
    /**
     * The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is
     * IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide*. You must
     * specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
     */
    public readonly ipv4IpamPoolId!: pulumi.Output<string>;
    /**
     * The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool.
     * For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
     * in the *Amazon VPC IPAM User Guide*.
     */
    public readonly ipv4NetmaskLength!: pulumi.Output<number>;
    public /*out*/ readonly ipv6CidrBlocks!: pulumi.Output<string[]>;
    /**
     * The tags for the VPC.
     */
    public readonly tags!: pulumi.Output<outputs.Ec2VpcTag[]>;
    public /*out*/ readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Ec2Vpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ec2VpcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ec2VpcArgs | Ec2VpcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ec2VpcState | undefined;
            resourceInputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            resourceInputs["cidrBlockAssociations"] = state ? state.cidrBlockAssociations : undefined;
            resourceInputs["defaultNetworkAcl"] = state ? state.defaultNetworkAcl : undefined;
            resourceInputs["defaultSecurityGroup"] = state ? state.defaultSecurityGroup : undefined;
            resourceInputs["enableDnsHostnames"] = state ? state.enableDnsHostnames : undefined;
            resourceInputs["enableDnsSupport"] = state ? state.enableDnsSupport : undefined;
            resourceInputs["instanceTenancy"] = state ? state.instanceTenancy : undefined;
            resourceInputs["ipv4IpamPoolId"] = state ? state.ipv4IpamPoolId : undefined;
            resourceInputs["ipv4NetmaskLength"] = state ? state.ipv4NetmaskLength : undefined;
            resourceInputs["ipv6CidrBlocks"] = state ? state.ipv6CidrBlocks : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as Ec2VpcArgs | undefined;
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["enableDnsHostnames"] = args ? args.enableDnsHostnames : undefined;
            resourceInputs["enableDnsSupport"] = args ? args.enableDnsSupport : undefined;
            resourceInputs["instanceTenancy"] = args ? args.instanceTenancy : undefined;
            resourceInputs["ipv4IpamPoolId"] = args ? args.ipv4IpamPoolId : undefined;
            resourceInputs["ipv4NetmaskLength"] = args ? args.ipv4NetmaskLength : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["cidrBlockAssociations"] = undefined /*out*/;
            resourceInputs["defaultNetworkAcl"] = undefined /*out*/;
            resourceInputs["defaultSecurityGroup"] = undefined /*out*/;
            resourceInputs["ipv6CidrBlocks"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2Vpc.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ec2Vpc resources.
 */
export interface Ec2VpcState {
    /**
     * The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block
     * to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``. You must
     * specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
     */
    cidrBlock?: pulumi.Input<string>;
    cidrBlockAssociations?: pulumi.Input<pulumi.Input<string>[]>;
    defaultNetworkAcl?: pulumi.Input<string>;
    defaultSecurityGroup?: pulumi.Input<string>;
    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS
     * hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in
     * your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support). You can only enable DNS
     * hostnames if you've enabled DNS support.
     */
    enableDnsHostnames?: pulumi.Input<boolean>;
    /**
     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at
     * the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If
     * disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
     * Enabled by default. For more information, see [DNS attributes in your
     * VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
     */
    enableDnsSupport?: pulumi.Input<boolean>;
    /**
     * The allowed tenancy of instances launched into the VPC. + ``default``: An instance launched into the VPC runs on shared
     * hardware by default, unless you explicitly specify a different tenancy during instance launch. + ``dedicated``: An
     * instance launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of
     * ``host`` during instance launch. You cannot specify a tenancy of ``default`` during instance launch. Updating
     * ``InstanceTenancy`` requires no replacement only if you are updating its value from ``dedicated`` to ``default``.
     * Updating ``InstanceTenancy`` from ``default`` to ``dedicated`` requires replacement.
     */
    instanceTenancy?: pulumi.Input<string>;
    /**
     * The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is
     * IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide*. You must
     * specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
     */
    ipv4IpamPoolId?: pulumi.Input<string>;
    /**
     * The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool.
     * For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
     * in the *Amazon VPC IPAM User Guide*.
     */
    ipv4NetmaskLength?: pulumi.Input<number>;
    ipv6CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags for the VPC.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2VpcTag>[]>;
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ec2Vpc resource.
 */
export interface Ec2VpcArgs {
    /**
     * The IPv4 network range for the VPC, in CIDR notation. For example, ``10.0.0.0/16``. We modify the specified CIDR block
     * to its canonical form; for example, if you specify ``100.68.0.18/18``, we modify it to ``100.68.0.0/18``. You must
     * specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS
     * hostnames; otherwise, they do not. Disabled by default for nondefault VPCs. For more information, see [DNS attributes in
     * your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support). You can only enable DNS
     * hostnames if you've enabled DNS support.
     */
    enableDnsHostnames?: pulumi.Input<boolean>;
    /**
     * Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at
     * the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If
     * disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.
     * Enabled by default. For more information, see [DNS attributes in your
     * VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-support).
     */
    enableDnsSupport?: pulumi.Input<boolean>;
    /**
     * The allowed tenancy of instances launched into the VPC. + ``default``: An instance launched into the VPC runs on shared
     * hardware by default, unless you explicitly specify a different tenancy during instance launch. + ``dedicated``: An
     * instance launched into the VPC runs on dedicated hardware by default, unless you explicitly specify a tenancy of
     * ``host`` during instance launch. You cannot specify a tenancy of ``default`` during instance launch. Updating
     * ``InstanceTenancy`` requires no replacement only if you are updating its value from ``dedicated`` to ``default``.
     * Updating ``InstanceTenancy`` from ``default`` to ``dedicated`` requires replacement.
     */
    instanceTenancy?: pulumi.Input<string>;
    /**
     * The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. For more information, see [What is
     * IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html) in the *Amazon VPC IPAM User Guide*. You must
     * specify either``CidrBlock`` or ``Ipv4IpamPoolId``.
     */
    ipv4IpamPoolId?: pulumi.Input<string>;
    /**
     * The netmask length of the IPv4 CIDR you want to allocate to this VPC from an Amazon VPC IP Address Manager (IPAM) pool.
     * For more information about IPAM, see [What is IPAM?](https://docs.aws.amazon.com//vpc/latest/ipam/what-is-it-ipam.html)
     * in the *Amazon VPC IPAM User Guide*.
     */
    ipv4NetmaskLength?: pulumi.Input<number>;
    /**
     * The tags for the VPC.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Ec2VpcTag>[]>;
}
