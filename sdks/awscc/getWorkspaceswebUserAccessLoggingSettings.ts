// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkspaceswebUserAccessLoggingSettings(args: GetWorkspaceswebUserAccessLoggingSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceswebUserAccessLoggingSettingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWorkspaceswebUserAccessLoggingSettings:getWorkspaceswebUserAccessLoggingSettings", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspaceswebUserAccessLoggingSettings.
 */
export interface GetWorkspaceswebUserAccessLoggingSettingsArgs {
    id: string;
}

/**
 * A collection of values returned by getWorkspaceswebUserAccessLoggingSettings.
 */
export interface GetWorkspaceswebUserAccessLoggingSettingsResult {
    readonly associatedPortalArns: string[];
    readonly id: string;
    readonly kinesisStreamArn: string;
    readonly tags: outputs.GetWorkspaceswebUserAccessLoggingSettingsTag[];
    readonly userAccessLoggingSettingsArn: string;
}
export function getWorkspaceswebUserAccessLoggingSettingsOutput(args: GetWorkspaceswebUserAccessLoggingSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceswebUserAccessLoggingSettingsResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceswebUserAccessLoggingSettings(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceswebUserAccessLoggingSettings.
 */
export interface GetWorkspaceswebUserAccessLoggingSettingsOutputArgs {
    id: pulumi.Input<string>;
}
