// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCognitoLogDeliveryConfiguration(args: GetCognitoLogDeliveryConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetCognitoLogDeliveryConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCognitoLogDeliveryConfiguration:getCognitoLogDeliveryConfiguration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCognitoLogDeliveryConfiguration.
 */
export interface GetCognitoLogDeliveryConfigurationArgs {
    id: string;
}

/**
 * A collection of values returned by getCognitoLogDeliveryConfiguration.
 */
export interface GetCognitoLogDeliveryConfigurationResult {
    readonly id: string;
    readonly logConfigurations: outputs.GetCognitoLogDeliveryConfigurationLogConfiguration[];
    readonly logDeliveryConfigurationId: string;
    readonly userPoolId: string;
}
export function getCognitoLogDeliveryConfigurationOutput(args: GetCognitoLogDeliveryConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCognitoLogDeliveryConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getCognitoLogDeliveryConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getCognitoLogDeliveryConfiguration.
 */
export interface GetCognitoLogDeliveryConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
