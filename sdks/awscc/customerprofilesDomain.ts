// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CustomerprofilesDomain extends pulumi.CustomResource {
    /**
     * Get an existing CustomerprofilesDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomerprofilesDomainState, opts?: pulumi.CustomResourceOptions): CustomerprofilesDomain {
        return new CustomerprofilesDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/customerprofilesDomain:CustomerprofilesDomain';

    /**
     * Returns true if the given object is an instance of CustomerprofilesDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomerprofilesDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerprofilesDomain.__pulumiType;
    }

    /**
     * The time of this integration got created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The URL of the SQS dead letter queue
     */
    public readonly deadLetterQueueUrl!: pulumi.Output<string>;
    /**
     * The default encryption key
     */
    public readonly defaultEncryptionKey!: pulumi.Output<string>;
    /**
     * The default number of days until the data within the domain expires.
     */
    public readonly defaultExpirationDays!: pulumi.Output<number>;
    /**
     * The unique name of the domain.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The time of this integration got last updated at
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * The tags (keys and values) associated with the domain
     */
    public readonly tags!: pulumi.Output<outputs.CustomerprofilesDomainTag[]>;

    /**
     * Create a CustomerprofilesDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomerprofilesDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomerprofilesDomainArgs | CustomerprofilesDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomerprofilesDomainState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deadLetterQueueUrl"] = state ? state.deadLetterQueueUrl : undefined;
            resourceInputs["defaultEncryptionKey"] = state ? state.defaultEncryptionKey : undefined;
            resourceInputs["defaultExpirationDays"] = state ? state.defaultExpirationDays : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["lastUpdatedAt"] = state ? state.lastUpdatedAt : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as CustomerprofilesDomainArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            resourceInputs["deadLetterQueueUrl"] = args ? args.deadLetterQueueUrl : undefined;
            resourceInputs["defaultEncryptionKey"] = args ? args.defaultEncryptionKey : undefined;
            resourceInputs["defaultExpirationDays"] = args ? args.defaultExpirationDays : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomerprofilesDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CustomerprofilesDomain resources.
 */
export interface CustomerprofilesDomainState {
    /**
     * The time of this integration got created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The URL of the SQS dead letter queue
     */
    deadLetterQueueUrl?: pulumi.Input<string>;
    /**
     * The default encryption key
     */
    defaultEncryptionKey?: pulumi.Input<string>;
    /**
     * The default number of days until the data within the domain expires.
     */
    defaultExpirationDays?: pulumi.Input<number>;
    /**
     * The unique name of the domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The time of this integration got last updated at
     */
    lastUpdatedAt?: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the domain
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesDomainTag>[]>;
}

/**
 * The set of arguments for constructing a CustomerprofilesDomain resource.
 */
export interface CustomerprofilesDomainArgs {
    /**
     * The URL of the SQS dead letter queue
     */
    deadLetterQueueUrl?: pulumi.Input<string>;
    /**
     * The default encryption key
     */
    defaultEncryptionKey?: pulumi.Input<string>;
    /**
     * The default number of days until the data within the domain expires.
     */
    defaultExpirationDays?: pulumi.Input<number>;
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the domain
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CustomerprofilesDomainTag>[]>;
}
