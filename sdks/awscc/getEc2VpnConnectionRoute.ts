// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2VpnConnectionRoute(args: GetEc2VpnConnectionRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2VpnConnectionRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2VpnConnectionRoute:getEc2VpnConnectionRoute", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2VpnConnectionRoute.
 */
export interface GetEc2VpnConnectionRouteArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2VpnConnectionRoute.
 */
export interface GetEc2VpnConnectionRouteResult {
    readonly destinationCidrBlock: string;
    readonly id: string;
    readonly vpnConnectionId: string;
}
export function getEc2VpnConnectionRouteOutput(args: GetEc2VpnConnectionRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2VpnConnectionRouteResult> {
    return pulumi.output(args).apply((a: any) => getEc2VpnConnectionRoute(a, opts))
}

/**
 * A collection of arguments for invoking getEc2VpnConnectionRoute.
 */
export interface GetEc2VpnConnectionRouteOutputArgs {
    id: pulumi.Input<string>;
}
