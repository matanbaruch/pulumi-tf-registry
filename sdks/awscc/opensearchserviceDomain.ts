// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpensearchserviceDomain extends pulumi.CustomResource {
    /**
     * Get an existing OpensearchserviceDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpensearchserviceDomainState, opts?: pulumi.CustomResourceOptions): OpensearchserviceDomain {
        return new OpensearchserviceDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/opensearchserviceDomain:OpensearchserviceDomain';

    /**
     * Returns true if the given object is an instance of OpensearchserviceDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpensearchserviceDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpensearchserviceDomain.__pulumiType;
    }

    public readonly accessPolicies!: pulumi.Output<string>;
    public readonly advancedOptions!: pulumi.Output<{[key: string]: string}>;
    public readonly advancedSecurityOptions!: pulumi.Output<outputs.OpensearchserviceDomainAdvancedSecurityOptions>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly clusterConfig!: pulumi.Output<outputs.OpensearchserviceDomainClusterConfig>;
    public readonly cognitoOptions!: pulumi.Output<outputs.OpensearchserviceDomainCognitoOptions>;
    public /*out*/ readonly domainArn!: pulumi.Output<string>;
    public /*out*/ readonly domainEndpoint!: pulumi.Output<string>;
    public readonly domainEndpointOptions!: pulumi.Output<outputs.OpensearchserviceDomainDomainEndpointOptions>;
    public /*out*/ readonly domainEndpointV2!: pulumi.Output<string>;
    public /*out*/ readonly domainEndpoints!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly domainId!: pulumi.Output<string>;
    public readonly domainName!: pulumi.Output<string>;
    public readonly ebsOptions!: pulumi.Output<outputs.OpensearchserviceDomainEbsOptions>;
    public readonly encryptionAtRestOptions!: pulumi.Output<outputs.OpensearchserviceDomainEncryptionAtRestOptions>;
    public readonly engineVersion!: pulumi.Output<string>;
    public readonly ipAddressType!: pulumi.Output<string>;
    public readonly logPublishingOptions!: pulumi.Output<{[key: string]: outputs.OpensearchserviceDomainLogPublishingOptions}>;
    public readonly nodeToNodeEncryptionOptions!: pulumi.Output<outputs.OpensearchserviceDomainNodeToNodeEncryptionOptions>;
    public readonly offPeakWindowOptions!: pulumi.Output<outputs.OpensearchserviceDomainOffPeakWindowOptions>;
    public /*out*/ readonly serviceSoftwareOptions!: pulumi.Output<outputs.OpensearchserviceDomainServiceSoftwareOptions>;
    public readonly snapshotOptions!: pulumi.Output<outputs.OpensearchserviceDomainSnapshotOptions>;
    public readonly softwareUpdateOptions!: pulumi.Output<outputs.OpensearchserviceDomainSoftwareUpdateOptions>;
    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     */
    public readonly tags!: pulumi.Output<outputs.OpensearchserviceDomainTag[]>;
    public readonly vpcOptions!: pulumi.Output<outputs.OpensearchserviceDomainVpcOptions>;

    /**
     * Create a OpensearchserviceDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OpensearchserviceDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpensearchserviceDomainArgs | OpensearchserviceDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpensearchserviceDomainState | undefined;
            resourceInputs["accessPolicies"] = state ? state.accessPolicies : undefined;
            resourceInputs["advancedOptions"] = state ? state.advancedOptions : undefined;
            resourceInputs["advancedSecurityOptions"] = state ? state.advancedSecurityOptions : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["clusterConfig"] = state ? state.clusterConfig : undefined;
            resourceInputs["cognitoOptions"] = state ? state.cognitoOptions : undefined;
            resourceInputs["domainArn"] = state ? state.domainArn : undefined;
            resourceInputs["domainEndpoint"] = state ? state.domainEndpoint : undefined;
            resourceInputs["domainEndpointOptions"] = state ? state.domainEndpointOptions : undefined;
            resourceInputs["domainEndpointV2"] = state ? state.domainEndpointV2 : undefined;
            resourceInputs["domainEndpoints"] = state ? state.domainEndpoints : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["ebsOptions"] = state ? state.ebsOptions : undefined;
            resourceInputs["encryptionAtRestOptions"] = state ? state.encryptionAtRestOptions : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["ipAddressType"] = state ? state.ipAddressType : undefined;
            resourceInputs["logPublishingOptions"] = state ? state.logPublishingOptions : undefined;
            resourceInputs["nodeToNodeEncryptionOptions"] = state ? state.nodeToNodeEncryptionOptions : undefined;
            resourceInputs["offPeakWindowOptions"] = state ? state.offPeakWindowOptions : undefined;
            resourceInputs["serviceSoftwareOptions"] = state ? state.serviceSoftwareOptions : undefined;
            resourceInputs["snapshotOptions"] = state ? state.snapshotOptions : undefined;
            resourceInputs["softwareUpdateOptions"] = state ? state.softwareUpdateOptions : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcOptions"] = state ? state.vpcOptions : undefined;
        } else {
            const args = argsOrState as OpensearchserviceDomainArgs | undefined;
            resourceInputs["accessPolicies"] = args ? args.accessPolicies : undefined;
            resourceInputs["advancedOptions"] = args ? args.advancedOptions : undefined;
            resourceInputs["advancedSecurityOptions"] = args ? args.advancedSecurityOptions : undefined;
            resourceInputs["clusterConfig"] = args ? args.clusterConfig : undefined;
            resourceInputs["cognitoOptions"] = args ? args.cognitoOptions : undefined;
            resourceInputs["domainEndpointOptions"] = args ? args.domainEndpointOptions : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["ebsOptions"] = args ? args.ebsOptions : undefined;
            resourceInputs["encryptionAtRestOptions"] = args ? args.encryptionAtRestOptions : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["ipAddressType"] = args ? args.ipAddressType : undefined;
            resourceInputs["logPublishingOptions"] = args ? args.logPublishingOptions : undefined;
            resourceInputs["nodeToNodeEncryptionOptions"] = args ? args.nodeToNodeEncryptionOptions : undefined;
            resourceInputs["offPeakWindowOptions"] = args ? args.offPeakWindowOptions : undefined;
            resourceInputs["snapshotOptions"] = args ? args.snapshotOptions : undefined;
            resourceInputs["softwareUpdateOptions"] = args ? args.softwareUpdateOptions : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcOptions"] = args ? args.vpcOptions : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["domainArn"] = undefined /*out*/;
            resourceInputs["domainEndpoint"] = undefined /*out*/;
            resourceInputs["domainEndpointV2"] = undefined /*out*/;
            resourceInputs["domainEndpoints"] = undefined /*out*/;
            resourceInputs["domainId"] = undefined /*out*/;
            resourceInputs["serviceSoftwareOptions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpensearchserviceDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OpensearchserviceDomain resources.
 */
export interface OpensearchserviceDomainState {
    accessPolicies?: pulumi.Input<string>;
    advancedOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    advancedSecurityOptions?: pulumi.Input<inputs.OpensearchserviceDomainAdvancedSecurityOptions>;
    arn?: pulumi.Input<string>;
    clusterConfig?: pulumi.Input<inputs.OpensearchserviceDomainClusterConfig>;
    cognitoOptions?: pulumi.Input<inputs.OpensearchserviceDomainCognitoOptions>;
    domainArn?: pulumi.Input<string>;
    domainEndpoint?: pulumi.Input<string>;
    domainEndpointOptions?: pulumi.Input<inputs.OpensearchserviceDomainDomainEndpointOptions>;
    domainEndpointV2?: pulumi.Input<string>;
    domainEndpoints?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    domainId?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    ebsOptions?: pulumi.Input<inputs.OpensearchserviceDomainEbsOptions>;
    encryptionAtRestOptions?: pulumi.Input<inputs.OpensearchserviceDomainEncryptionAtRestOptions>;
    engineVersion?: pulumi.Input<string>;
    ipAddressType?: pulumi.Input<string>;
    logPublishingOptions?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OpensearchserviceDomainLogPublishingOptions>}>;
    nodeToNodeEncryptionOptions?: pulumi.Input<inputs.OpensearchserviceDomainNodeToNodeEncryptionOptions>;
    offPeakWindowOptions?: pulumi.Input<inputs.OpensearchserviceDomainOffPeakWindowOptions>;
    serviceSoftwareOptions?: pulumi.Input<inputs.OpensearchserviceDomainServiceSoftwareOptions>;
    snapshotOptions?: pulumi.Input<inputs.OpensearchserviceDomainSnapshotOptions>;
    softwareUpdateOptions?: pulumi.Input<inputs.OpensearchserviceDomainSoftwareUpdateOptions>;
    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.OpensearchserviceDomainTag>[]>;
    vpcOptions?: pulumi.Input<inputs.OpensearchserviceDomainVpcOptions>;
}

/**
 * The set of arguments for constructing a OpensearchserviceDomain resource.
 */
export interface OpensearchserviceDomainArgs {
    accessPolicies?: pulumi.Input<string>;
    advancedOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    advancedSecurityOptions?: pulumi.Input<inputs.OpensearchserviceDomainAdvancedSecurityOptions>;
    clusterConfig?: pulumi.Input<inputs.OpensearchserviceDomainClusterConfig>;
    cognitoOptions?: pulumi.Input<inputs.OpensearchserviceDomainCognitoOptions>;
    domainEndpointOptions?: pulumi.Input<inputs.OpensearchserviceDomainDomainEndpointOptions>;
    domainName?: pulumi.Input<string>;
    ebsOptions?: pulumi.Input<inputs.OpensearchserviceDomainEbsOptions>;
    encryptionAtRestOptions?: pulumi.Input<inputs.OpensearchserviceDomainEncryptionAtRestOptions>;
    engineVersion?: pulumi.Input<string>;
    ipAddressType?: pulumi.Input<string>;
    logPublishingOptions?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OpensearchserviceDomainLogPublishingOptions>}>;
    nodeToNodeEncryptionOptions?: pulumi.Input<inputs.OpensearchserviceDomainNodeToNodeEncryptionOptions>;
    offPeakWindowOptions?: pulumi.Input<inputs.OpensearchserviceDomainOffPeakWindowOptions>;
    snapshotOptions?: pulumi.Input<inputs.OpensearchserviceDomainSnapshotOptions>;
    softwareUpdateOptions?: pulumi.Input<inputs.OpensearchserviceDomainSoftwareUpdateOptions>;
    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.OpensearchserviceDomainTag>[]>;
    vpcOptions?: pulumi.Input<inputs.OpensearchserviceDomainVpcOptions>;
}
