// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamGroup(args: GetIamGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetIamGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getIamGroup:getIamGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamGroup.
 */
export interface GetIamGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getIamGroup.
 */
export interface GetIamGroupResult {
    readonly arn: string;
    readonly groupName: string;
    readonly id: string;
    readonly managedPolicyArns: string[];
    readonly path: string;
    readonly policies: outputs.GetIamGroupPolicy[];
}
export function getIamGroupOutput(args: GetIamGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamGroupResult> {
    return pulumi.output(args).apply((a: any) => getIamGroup(a, opts))
}

/**
 * A collection of arguments for invoking getIamGroup.
 */
export interface GetIamGroupOutputArgs {
    id: pulumi.Input<string>;
}
