// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class EfsFileSystem extends pulumi.CustomResource {
    /**
     * Get an existing EfsFileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EfsFileSystemState, opts?: pulumi.CustomResourceOptions): EfsFileSystem {
        return new EfsFileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/efsFileSystem:EfsFileSystem';

    /**
     * Returns true if the given object is an instance of EfsFileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EfsFileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EfsFileSystem.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * For One Zone file systems, specify the AWS Availability Zone in which to create the file system. Use the format
     * ``us-east-1a`` to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system
     * types](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html#file-system-type) in the *Amazon EFS User
     * Guide*. One Zone file systems are not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
     */
    public readonly availabilityZoneName!: pulumi.Output<string>;
    /**
     * Use the ``BackupPolicy`` to turn automatic backups on or off for the file system.
     */
    public readonly backupPolicy!: pulumi.Output<outputs.EfsFileSystemBackupPolicy>;
    /**
     * (Optional) A boolean that specifies whether or not to bypass the ``FileSystemPolicy`` lockout safety check. The lockout
     * safety check determines whether the policy in the request will lock out, or prevent, the IAM principal that is making
     * the request from making future ``PutFileSystemPolicy`` requests on this file system. Set
     * ``BypassPolicyLockoutSafetyCheck`` to ``True`` only when you intend to prevent the IAM principal that is making the
     * request from making subsequent ``PutFileSystemPolicy`` requests on this file system. The default value is ``False``.
     */
    public readonly bypassPolicyLockoutSafetyCheck!: pulumi.Output<boolean>;
    /**
     * A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the
     * option of specifying a KmsKeyId for an existing kms-key-long. If you don't specify a kms-key, then the default kms-key
     * for EFS, ``/aws/elasticfilesystem``, is used to protect the encrypted file system.
     */
    public readonly encrypted!: pulumi.Output<boolean>;
    public /*out*/ readonly fileSystemId!: pulumi.Output<string>;
    /**
     * The ``FileSystemPolicy`` for the EFS file system. A file system policy is an IAM resource policy used to control NFS
     * access to an EFS file system. For more information, see [Using to control NFS access to Amazon
     * EFS](https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html) in the *Amazon EFS User Guide*.
     */
    public readonly fileSystemPolicy!: pulumi.Output<string>;
    /**
     * Describes the protection on the file system.
     */
    public readonly fileSystemProtection!: pulumi.Output<outputs.EfsFileSystemFileSystemProtection>;
    /**
     * Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your
     * file system on creation by including a ``"Key":"Name","Value":"{value}"`` key-value pair. Each key must be unique. For
     * more information, see [Tagging resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the
     * *General Reference Guide*.
     */
    public readonly fileSystemTags!: pulumi.Output<outputs.EfsFileSystemFileSystemTag[]>;
    /**
     * The ID of the kms-key-long to be used to protect the encrypted file system. This parameter is only required if you want
     * to use a nondefault kms-key. If this parameter is not specified, the default kms-key for EFS is used. This ID can be in
     * one of the following formats: + Key ID - A unique identifier of the key, for example
     * ``1234abcd-12ab-34cd-56ef-1234567890ab``. + ARN - An Amazon Resource Name (ARN) for the key, for example
     * ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``. + Key alias - A previously created
     * display name for a key, for example ``alias/projectKey1``. + Key alias ARN - An ARN for a key alias, for example
     * ``arn:aws:kms:us-west-2:444455556666:alias/projectKey1``. If ``KmsKeyId`` is specified, the ``Encrypted`` parameter must
     * be set to true.
     */
    public readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * An array of ``LifecyclePolicy`` objects that define the file system's ``LifecycleConfiguration`` object. A
     * ``LifecycleConfiguration`` object informs Lifecycle management of the following: + When to move files in the file system
     * from primary storage to IA storage. + When to move files in the file system from primary storage or IA storage to
     * Archive storage. + When to move files that are in IA or Archive storage to primary storage. EFS requires that each
     * ``LifecyclePolicy`` object have only a single transition. This means that in a request body, ``LifecyclePolicies`` needs
     * to be structured as an array of ``LifecyclePolicy`` objects, one object for each transition, ``TransitionToIA``,
     * ``TransitionToArchive`` ``TransitionToPrimaryStorageClass``. See the example requests in the following section for more
     * information.
     */
    public readonly lifecyclePolicies!: pulumi.Output<outputs.EfsFileSystemLifecyclePolicy[]>;
    /**
     * The performance mode of the file system. We recommend ``generalPurpose`` performance mode for all file systems. File
     * systems using the ``maxIO`` performance mode can scale to higher levels of aggregate throughput and operations per
     * second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed
     * after the file system has been created. The ``maxIO`` mode is not supported on One Zone file systems. Due to the higher
     * per-operation latencies with Max I/O, we recommend using General Purpose performance mode for all file systems. Default
     * is ``generalPurpose``.
     */
    public readonly performanceMode!: pulumi.Output<string>;
    /**
     * The throughput, measured in mebibytes per second (MiBps), that you want to provision for a file system that you're
     * creating. Required if ``ThroughputMode`` is set to ``provisioned``. Valid values are 1-3414 MiBps, with the upper limit
     * depending on Region. To increase this limit, contact SUP. For more information, see [Amazon EFS quotas that you can
     * increase](https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits) in the *Amazon EFS User Guide*.
     */
    public readonly provisionedThroughputInMibps!: pulumi.Output<number>;
    /**
     * Describes the replication configuration for a specific file system.
     */
    public readonly replicationConfiguration!: pulumi.Output<outputs.EfsFileSystemReplicationConfiguration>;
    /**
     * Specifies the throughput mode for the file system. The mode can be ``bursting``, ``provisioned``, or ``elastic``. If you
     * set ``ThroughputMode`` to ``provisioned``, you must also set a value for ``ProvisionedThroughputInMibps``. After you
     * create the file system, you can decrease your file system's Provisioned throughput or change between the throughput
     * modes, with certain time restrictions. For more information, see [Specifying throughput with provisioned
     * mode](https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput) in the *Amazon EFS User Guide*.
     * Default is ``bursting``.
     */
    public readonly throughputMode!: pulumi.Output<string>;

    /**
     * Create a EfsFileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EfsFileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EfsFileSystemArgs | EfsFileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EfsFileSystemState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["availabilityZoneName"] = state ? state.availabilityZoneName : undefined;
            resourceInputs["backupPolicy"] = state ? state.backupPolicy : undefined;
            resourceInputs["bypassPolicyLockoutSafetyCheck"] = state ? state.bypassPolicyLockoutSafetyCheck : undefined;
            resourceInputs["encrypted"] = state ? state.encrypted : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["fileSystemPolicy"] = state ? state.fileSystemPolicy : undefined;
            resourceInputs["fileSystemProtection"] = state ? state.fileSystemProtection : undefined;
            resourceInputs["fileSystemTags"] = state ? state.fileSystemTags : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["lifecyclePolicies"] = state ? state.lifecyclePolicies : undefined;
            resourceInputs["performanceMode"] = state ? state.performanceMode : undefined;
            resourceInputs["provisionedThroughputInMibps"] = state ? state.provisionedThroughputInMibps : undefined;
            resourceInputs["replicationConfiguration"] = state ? state.replicationConfiguration : undefined;
            resourceInputs["throughputMode"] = state ? state.throughputMode : undefined;
        } else {
            const args = argsOrState as EfsFileSystemArgs | undefined;
            resourceInputs["availabilityZoneName"] = args ? args.availabilityZoneName : undefined;
            resourceInputs["backupPolicy"] = args ? args.backupPolicy : undefined;
            resourceInputs["bypassPolicyLockoutSafetyCheck"] = args ? args.bypassPolicyLockoutSafetyCheck : undefined;
            resourceInputs["encrypted"] = args ? args.encrypted : undefined;
            resourceInputs["fileSystemPolicy"] = args ? args.fileSystemPolicy : undefined;
            resourceInputs["fileSystemProtection"] = args ? args.fileSystemProtection : undefined;
            resourceInputs["fileSystemTags"] = args ? args.fileSystemTags : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["lifecyclePolicies"] = args ? args.lifecyclePolicies : undefined;
            resourceInputs["performanceMode"] = args ? args.performanceMode : undefined;
            resourceInputs["provisionedThroughputInMibps"] = args ? args.provisionedThroughputInMibps : undefined;
            resourceInputs["replicationConfiguration"] = args ? args.replicationConfiguration : undefined;
            resourceInputs["throughputMode"] = args ? args.throughputMode : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["fileSystemId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EfsFileSystem.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EfsFileSystem resources.
 */
export interface EfsFileSystemState {
    arn?: pulumi.Input<string>;
    /**
     * For One Zone file systems, specify the AWS Availability Zone in which to create the file system. Use the format
     * ``us-east-1a`` to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system
     * types](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html#file-system-type) in the *Amazon EFS User
     * Guide*. One Zone file systems are not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
     */
    availabilityZoneName?: pulumi.Input<string>;
    /**
     * Use the ``BackupPolicy`` to turn automatic backups on or off for the file system.
     */
    backupPolicy?: pulumi.Input<inputs.EfsFileSystemBackupPolicy>;
    /**
     * (Optional) A boolean that specifies whether or not to bypass the ``FileSystemPolicy`` lockout safety check. The lockout
     * safety check determines whether the policy in the request will lock out, or prevent, the IAM principal that is making
     * the request from making future ``PutFileSystemPolicy`` requests on this file system. Set
     * ``BypassPolicyLockoutSafetyCheck`` to ``True`` only when you intend to prevent the IAM principal that is making the
     * request from making subsequent ``PutFileSystemPolicy`` requests on this file system. The default value is ``False``.
     */
    bypassPolicyLockoutSafetyCheck?: pulumi.Input<boolean>;
    /**
     * A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the
     * option of specifying a KmsKeyId for an existing kms-key-long. If you don't specify a kms-key, then the default kms-key
     * for EFS, ``/aws/elasticfilesystem``, is used to protect the encrypted file system.
     */
    encrypted?: pulumi.Input<boolean>;
    fileSystemId?: pulumi.Input<string>;
    /**
     * The ``FileSystemPolicy`` for the EFS file system. A file system policy is an IAM resource policy used to control NFS
     * access to an EFS file system. For more information, see [Using to control NFS access to Amazon
     * EFS](https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html) in the *Amazon EFS User Guide*.
     */
    fileSystemPolicy?: pulumi.Input<string>;
    /**
     * Describes the protection on the file system.
     */
    fileSystemProtection?: pulumi.Input<inputs.EfsFileSystemFileSystemProtection>;
    /**
     * Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your
     * file system on creation by including a ``"Key":"Name","Value":"{value}"`` key-value pair. Each key must be unique. For
     * more information, see [Tagging resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the
     * *General Reference Guide*.
     */
    fileSystemTags?: pulumi.Input<pulumi.Input<inputs.EfsFileSystemFileSystemTag>[]>;
    /**
     * The ID of the kms-key-long to be used to protect the encrypted file system. This parameter is only required if you want
     * to use a nondefault kms-key. If this parameter is not specified, the default kms-key for EFS is used. This ID can be in
     * one of the following formats: + Key ID - A unique identifier of the key, for example
     * ``1234abcd-12ab-34cd-56ef-1234567890ab``. + ARN - An Amazon Resource Name (ARN) for the key, for example
     * ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``. + Key alias - A previously created
     * display name for a key, for example ``alias/projectKey1``. + Key alias ARN - An ARN for a key alias, for example
     * ``arn:aws:kms:us-west-2:444455556666:alias/projectKey1``. If ``KmsKeyId`` is specified, the ``Encrypted`` parameter must
     * be set to true.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * An array of ``LifecyclePolicy`` objects that define the file system's ``LifecycleConfiguration`` object. A
     * ``LifecycleConfiguration`` object informs Lifecycle management of the following: + When to move files in the file system
     * from primary storage to IA storage. + When to move files in the file system from primary storage or IA storage to
     * Archive storage. + When to move files that are in IA or Archive storage to primary storage. EFS requires that each
     * ``LifecyclePolicy`` object have only a single transition. This means that in a request body, ``LifecyclePolicies`` needs
     * to be structured as an array of ``LifecyclePolicy`` objects, one object for each transition, ``TransitionToIA``,
     * ``TransitionToArchive`` ``TransitionToPrimaryStorageClass``. See the example requests in the following section for more
     * information.
     */
    lifecyclePolicies?: pulumi.Input<pulumi.Input<inputs.EfsFileSystemLifecyclePolicy>[]>;
    /**
     * The performance mode of the file system. We recommend ``generalPurpose`` performance mode for all file systems. File
     * systems using the ``maxIO`` performance mode can scale to higher levels of aggregate throughput and operations per
     * second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed
     * after the file system has been created. The ``maxIO`` mode is not supported on One Zone file systems. Due to the higher
     * per-operation latencies with Max I/O, we recommend using General Purpose performance mode for all file systems. Default
     * is ``generalPurpose``.
     */
    performanceMode?: pulumi.Input<string>;
    /**
     * The throughput, measured in mebibytes per second (MiBps), that you want to provision for a file system that you're
     * creating. Required if ``ThroughputMode`` is set to ``provisioned``. Valid values are 1-3414 MiBps, with the upper limit
     * depending on Region. To increase this limit, contact SUP. For more information, see [Amazon EFS quotas that you can
     * increase](https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits) in the *Amazon EFS User Guide*.
     */
    provisionedThroughputInMibps?: pulumi.Input<number>;
    /**
     * Describes the replication configuration for a specific file system.
     */
    replicationConfiguration?: pulumi.Input<inputs.EfsFileSystemReplicationConfiguration>;
    /**
     * Specifies the throughput mode for the file system. The mode can be ``bursting``, ``provisioned``, or ``elastic``. If you
     * set ``ThroughputMode`` to ``provisioned``, you must also set a value for ``ProvisionedThroughputInMibps``. After you
     * create the file system, you can decrease your file system's Provisioned throughput or change between the throughput
     * modes, with certain time restrictions. For more information, see [Specifying throughput with provisioned
     * mode](https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput) in the *Amazon EFS User Guide*.
     * Default is ``bursting``.
     */
    throughputMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EfsFileSystem resource.
 */
export interface EfsFileSystemArgs {
    /**
     * For One Zone file systems, specify the AWS Availability Zone in which to create the file system. Use the format
     * ``us-east-1a`` to specify the Availability Zone. For more information about One Zone file systems, see [EFS file system
     * types](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html#file-system-type) in the *Amazon EFS User
     * Guide*. One Zone file systems are not available in all Availability Zones in AWS-Regions where Amazon EFS is available.
     */
    availabilityZoneName?: pulumi.Input<string>;
    /**
     * Use the ``BackupPolicy`` to turn automatic backups on or off for the file system.
     */
    backupPolicy?: pulumi.Input<inputs.EfsFileSystemBackupPolicy>;
    /**
     * (Optional) A boolean that specifies whether or not to bypass the ``FileSystemPolicy`` lockout safety check. The lockout
     * safety check determines whether the policy in the request will lock out, or prevent, the IAM principal that is making
     * the request from making future ``PutFileSystemPolicy`` requests on this file system. Set
     * ``BypassPolicyLockoutSafetyCheck`` to ``True`` only when you intend to prevent the IAM principal that is making the
     * request from making subsequent ``PutFileSystemPolicy`` requests on this file system. The default value is ``False``.
     */
    bypassPolicyLockoutSafetyCheck?: pulumi.Input<boolean>;
    /**
     * A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the
     * option of specifying a KmsKeyId for an existing kms-key-long. If you don't specify a kms-key, then the default kms-key
     * for EFS, ``/aws/elasticfilesystem``, is used to protect the encrypted file system.
     */
    encrypted?: pulumi.Input<boolean>;
    /**
     * The ``FileSystemPolicy`` for the EFS file system. A file system policy is an IAM resource policy used to control NFS
     * access to an EFS file system. For more information, see [Using to control NFS access to Amazon
     * EFS](https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html) in the *Amazon EFS User Guide*.
     */
    fileSystemPolicy?: pulumi.Input<string>;
    /**
     * Describes the protection on the file system.
     */
    fileSystemProtection?: pulumi.Input<inputs.EfsFileSystemFileSystemProtection>;
    /**
     * Use to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your
     * file system on creation by including a ``"Key":"Name","Value":"{value}"`` key-value pair. Each key must be unique. For
     * more information, see [Tagging resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the
     * *General Reference Guide*.
     */
    fileSystemTags?: pulumi.Input<pulumi.Input<inputs.EfsFileSystemFileSystemTag>[]>;
    /**
     * The ID of the kms-key-long to be used to protect the encrypted file system. This parameter is only required if you want
     * to use a nondefault kms-key. If this parameter is not specified, the default kms-key for EFS is used. This ID can be in
     * one of the following formats: + Key ID - A unique identifier of the key, for example
     * ``1234abcd-12ab-34cd-56ef-1234567890ab``. + ARN - An Amazon Resource Name (ARN) for the key, for example
     * ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab``. + Key alias - A previously created
     * display name for a key, for example ``alias/projectKey1``. + Key alias ARN - An ARN for a key alias, for example
     * ``arn:aws:kms:us-west-2:444455556666:alias/projectKey1``. If ``KmsKeyId`` is specified, the ``Encrypted`` parameter must
     * be set to true.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * An array of ``LifecyclePolicy`` objects that define the file system's ``LifecycleConfiguration`` object. A
     * ``LifecycleConfiguration`` object informs Lifecycle management of the following: + When to move files in the file system
     * from primary storage to IA storage. + When to move files in the file system from primary storage or IA storage to
     * Archive storage. + When to move files that are in IA or Archive storage to primary storage. EFS requires that each
     * ``LifecyclePolicy`` object have only a single transition. This means that in a request body, ``LifecyclePolicies`` needs
     * to be structured as an array of ``LifecyclePolicy`` objects, one object for each transition, ``TransitionToIA``,
     * ``TransitionToArchive`` ``TransitionToPrimaryStorageClass``. See the example requests in the following section for more
     * information.
     */
    lifecyclePolicies?: pulumi.Input<pulumi.Input<inputs.EfsFileSystemLifecyclePolicy>[]>;
    /**
     * The performance mode of the file system. We recommend ``generalPurpose`` performance mode for all file systems. File
     * systems using the ``maxIO`` performance mode can scale to higher levels of aggregate throughput and operations per
     * second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed
     * after the file system has been created. The ``maxIO`` mode is not supported on One Zone file systems. Due to the higher
     * per-operation latencies with Max I/O, we recommend using General Purpose performance mode for all file systems. Default
     * is ``generalPurpose``.
     */
    performanceMode?: pulumi.Input<string>;
    /**
     * The throughput, measured in mebibytes per second (MiBps), that you want to provision for a file system that you're
     * creating. Required if ``ThroughputMode`` is set to ``provisioned``. Valid values are 1-3414 MiBps, with the upper limit
     * depending on Region. To increase this limit, contact SUP. For more information, see [Amazon EFS quotas that you can
     * increase](https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits) in the *Amazon EFS User Guide*.
     */
    provisionedThroughputInMibps?: pulumi.Input<number>;
    /**
     * Describes the replication configuration for a specific file system.
     */
    replicationConfiguration?: pulumi.Input<inputs.EfsFileSystemReplicationConfiguration>;
    /**
     * Specifies the throughput mode for the file system. The mode can be ``bursting``, ``provisioned``, or ``elastic``. If you
     * set ``ThroughputMode`` to ``provisioned``, you must also set a value for ``ProvisionedThroughputInMibps``. After you
     * create the file system, you can decrease your file system's Provisioned throughput or change between the throughput
     * modes, with certain time restrictions. For more information, see [Specifying throughput with provisioned
     * mode](https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput) in the *Amazon EFS User Guide*.
     * Default is ``bursting``.
     */
    throughputMode?: pulumi.Input<string>;
}
