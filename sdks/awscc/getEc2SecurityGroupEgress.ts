// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2SecurityGroupEgress(args: GetEc2SecurityGroupEgressArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2SecurityGroupEgressResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2SecurityGroupEgress:getEc2SecurityGroupEgress", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2SecurityGroupEgress.
 */
export interface GetEc2SecurityGroupEgressArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2SecurityGroupEgress.
 */
export interface GetEc2SecurityGroupEgressResult {
    readonly cidrIp: string;
    readonly cidrIpv6: string;
    readonly description: string;
    readonly destinationPrefixListId: string;
    readonly destinationSecurityGroupId: string;
    readonly fromPort: number;
    readonly groupId: string;
    readonly id: string;
    readonly ipProtocol: string;
    readonly securityGroupEgressId: string;
    readonly toPort: number;
}
export function getEc2SecurityGroupEgressOutput(args: GetEc2SecurityGroupEgressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2SecurityGroupEgressResult> {
    return pulumi.output(args).apply((a: any) => getEc2SecurityGroupEgress(a, opts))
}

/**
 * A collection of arguments for invoking getEc2SecurityGroupEgress.
 */
export interface GetEc2SecurityGroupEgressOutputArgs {
    id: pulumi.Input<string>;
}
