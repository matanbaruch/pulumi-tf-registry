// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EventsApiDestination extends pulumi.CustomResource {
    /**
     * Get an existing EventsApiDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EventsApiDestinationState, opts?: pulumi.CustomResourceOptions): EventsApiDestination {
        return new EventsApiDestination(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/eventsApiDestination:EventsApiDestination';

    /**
     * Returns true if the given object is an instance of EventsApiDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EventsApiDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventsApiDestination.__pulumiType;
    }

    /**
     * The arn of the api destination.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The arn of the connection.
     */
    public readonly connectionArn!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly httpMethod!: pulumi.Output<string>;
    /**
     * Url endpoint to invoke.
     */
    public readonly invocationEndpoint!: pulumi.Output<string>;
    public readonly invocationRateLimitPerSecond!: pulumi.Output<number>;
    /**
     * Name of the apiDestination.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a EventsApiDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventsApiDestinationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EventsApiDestinationArgs | EventsApiDestinationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EventsApiDestinationState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["connectionArn"] = state ? state.connectionArn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["httpMethod"] = state ? state.httpMethod : undefined;
            resourceInputs["invocationEndpoint"] = state ? state.invocationEndpoint : undefined;
            resourceInputs["invocationRateLimitPerSecond"] = state ? state.invocationRateLimitPerSecond : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as EventsApiDestinationArgs | undefined;
            if ((!args || args.connectionArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionArn'");
            }
            if ((!args || args.httpMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'httpMethod'");
            }
            if ((!args || args.invocationEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'invocationEndpoint'");
            }
            resourceInputs["connectionArn"] = args ? args.connectionArn : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["httpMethod"] = args ? args.httpMethod : undefined;
            resourceInputs["invocationEndpoint"] = args ? args.invocationEndpoint : undefined;
            resourceInputs["invocationRateLimitPerSecond"] = args ? args.invocationRateLimitPerSecond : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EventsApiDestination.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EventsApiDestination resources.
 */
export interface EventsApiDestinationState {
    /**
     * The arn of the api destination.
     */
    arn?: pulumi.Input<string>;
    /**
     * The arn of the connection.
     */
    connectionArn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    httpMethod?: pulumi.Input<string>;
    /**
     * Url endpoint to invoke.
     */
    invocationEndpoint?: pulumi.Input<string>;
    invocationRateLimitPerSecond?: pulumi.Input<number>;
    /**
     * Name of the apiDestination.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EventsApiDestination resource.
 */
export interface EventsApiDestinationArgs {
    /**
     * The arn of the connection.
     */
    connectionArn: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    httpMethod: pulumi.Input<string>;
    /**
     * Url endpoint to invoke.
     */
    invocationEndpoint: pulumi.Input<string>;
    invocationRateLimitPerSecond?: pulumi.Input<number>;
    /**
     * Name of the apiDestination.
     */
    name?: pulumi.Input<string>;
}
