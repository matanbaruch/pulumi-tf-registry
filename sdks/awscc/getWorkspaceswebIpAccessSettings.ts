// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkspaceswebIpAccessSettings(args: GetWorkspaceswebIpAccessSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceswebIpAccessSettingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWorkspaceswebIpAccessSettings:getWorkspaceswebIpAccessSettings", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspaceswebIpAccessSettings.
 */
export interface GetWorkspaceswebIpAccessSettingsArgs {
    id: string;
}

/**
 * A collection of values returned by getWorkspaceswebIpAccessSettings.
 */
export interface GetWorkspaceswebIpAccessSettingsResult {
    readonly additionalEncryptionContext: {[key: string]: string};
    readonly associatedPortalArns: string[];
    readonly creationDate: string;
    readonly customerManagedKey: string;
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly ipAccessSettingsArn: string;
    readonly ipRules: outputs.GetWorkspaceswebIpAccessSettingsIpRule[];
    readonly tags: outputs.GetWorkspaceswebIpAccessSettingsTag[];
}
export function getWorkspaceswebIpAccessSettingsOutput(args: GetWorkspaceswebIpAccessSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceswebIpAccessSettingsResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceswebIpAccessSettings(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceswebIpAccessSettings.
 */
export interface GetWorkspaceswebIpAccessSettingsOutputArgs {
    id: pulumi.Input<string>;
}
