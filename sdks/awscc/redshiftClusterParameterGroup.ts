// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RedshiftClusterParameterGroup extends pulumi.CustomResource {
    /**
     * Get an existing RedshiftClusterParameterGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RedshiftClusterParameterGroupState, opts?: pulumi.CustomResourceOptions): RedshiftClusterParameterGroup {
        return new RedshiftClusterParameterGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/redshiftClusterParameterGroup:RedshiftClusterParameterGroup';

    /**
     * Returns true if the given object is an instance of RedshiftClusterParameterGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RedshiftClusterParameterGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RedshiftClusterParameterGroup.__pulumiType;
    }

    /**
     * A description of the parameter group.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version determines
     * the set of parameters.
     */
    public readonly parameterGroupFamily!: pulumi.Output<string>;
    /**
     * The name of the cluster parameter group.
     */
    public readonly parameterGroupName!: pulumi.Output<string>;
    /**
     * An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.
     */
    public readonly parameters!: pulumi.Output<outputs.RedshiftClusterParameterGroupParameter[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.RedshiftClusterParameterGroupTag[]>;

    /**
     * Create a RedshiftClusterParameterGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RedshiftClusterParameterGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RedshiftClusterParameterGroupArgs | RedshiftClusterParameterGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RedshiftClusterParameterGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["parameterGroupFamily"] = state ? state.parameterGroupFamily : undefined;
            resourceInputs["parameterGroupName"] = state ? state.parameterGroupName : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as RedshiftClusterParameterGroupArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.parameterGroupFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parameterGroupFamily'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["parameterGroupFamily"] = args ? args.parameterGroupFamily : undefined;
            resourceInputs["parameterGroupName"] = args ? args.parameterGroupName : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RedshiftClusterParameterGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RedshiftClusterParameterGroup resources.
 */
export interface RedshiftClusterParameterGroupState {
    /**
     * A description of the parameter group.
     */
    description?: pulumi.Input<string>;
    /**
     * The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version determines
     * the set of parameters.
     */
    parameterGroupFamily?: pulumi.Input<string>;
    /**
     * The name of the cluster parameter group.
     */
    parameterGroupName?: pulumi.Input<string>;
    /**
     * An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.RedshiftClusterParameterGroupParameter>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.RedshiftClusterParameterGroupTag>[]>;
}

/**
 * The set of arguments for constructing a RedshiftClusterParameterGroup resource.
 */
export interface RedshiftClusterParameterGroupArgs {
    /**
     * A description of the parameter group.
     */
    description: pulumi.Input<string>;
    /**
     * The Amazon Redshift engine version to which the cluster parameter group applies. The cluster engine version determines
     * the set of parameters.
     */
    parameterGroupFamily: pulumi.Input<string>;
    /**
     * The name of the cluster parameter group.
     */
    parameterGroupName?: pulumi.Input<string>;
    /**
     * An array of parameters to be modified. A maximum of 20 parameters can be modified in a single request.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.RedshiftClusterParameterGroupParameter>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.RedshiftClusterParameterGroupTag>[]>;
}
