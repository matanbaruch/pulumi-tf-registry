// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabrewDataset(args: GetDatabrewDatasetArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabrewDatasetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatabrewDataset:getDatabrewDataset", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabrewDataset.
 */
export interface GetDatabrewDatasetArgs {
    id: string;
}

/**
 * A collection of values returned by getDatabrewDataset.
 */
export interface GetDatabrewDatasetResult {
    readonly format: string;
    readonly formatOptions: outputs.GetDatabrewDatasetFormatOptions;
    readonly id: string;
    readonly input: outputs.GetDatabrewDatasetInput;
    readonly name: string;
    readonly pathOptions: outputs.GetDatabrewDatasetPathOptions;
    readonly tags: outputs.GetDatabrewDatasetTag[];
}
export function getDatabrewDatasetOutput(args: GetDatabrewDatasetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabrewDatasetResult> {
    return pulumi.output(args).apply((a: any) => getDatabrewDataset(a, opts))
}

/**
 * A collection of arguments for invoking getDatabrewDataset.
 */
export interface GetDatabrewDatasetOutputArgs {
    id: pulumi.Input<string>;
}
