// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventsEventBus(args: GetEventsEventBusArgs, opts?: pulumi.InvokeOptions): Promise<GetEventsEventBusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEventsEventBus:getEventsEventBus", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventsEventBus.
 */
export interface GetEventsEventBusArgs {
    id: string;
}

/**
 * A collection of values returned by getEventsEventBus.
 */
export interface GetEventsEventBusResult {
    readonly arn: string;
    readonly deadLetterConfig: outputs.GetEventsEventBusDeadLetterConfig;
    readonly description: string;
    readonly eventSourceName: string;
    readonly id: string;
    readonly kmsKeyIdentifier: string;
    readonly name: string;
    readonly policy: string;
    readonly tags: outputs.GetEventsEventBusTag[];
}
export function getEventsEventBusOutput(args: GetEventsEventBusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventsEventBusResult> {
    return pulumi.output(args).apply((a: any) => getEventsEventBus(a, opts))
}

/**
 * A collection of arguments for invoking getEventsEventBus.
 */
export interface GetEventsEventBusOutputArgs {
    id: pulumi.Input<string>;
}
