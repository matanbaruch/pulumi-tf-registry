// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSsmParameter(args: GetSsmParameterArgs, opts?: pulumi.InvokeOptions): Promise<GetSsmParameterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getSsmParameter:getSsmParameter", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSsmParameter.
 */
export interface GetSsmParameterArgs {
    id: string;
}

/**
 * A collection of values returned by getSsmParameter.
 */
export interface GetSsmParameterResult {
    readonly allowedPattern: string;
    readonly dataType: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly policies: string;
    readonly tags: {[key: string]: string};
    readonly tier: string;
    readonly type: string;
    readonly value: string;
}
export function getSsmParameterOutput(args: GetSsmParameterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSsmParameterResult> {
    return pulumi.output(args).apply((a: any) => getSsmParameter(a, opts))
}

/**
 * A collection of arguments for invoking getSsmParameter.
 */
export interface GetSsmParameterOutputArgs {
    id: pulumi.Input<string>;
}
