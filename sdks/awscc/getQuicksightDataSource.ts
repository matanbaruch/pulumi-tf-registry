// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getQuicksightDataSource(args: GetQuicksightDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetQuicksightDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getQuicksightDataSource:getQuicksightDataSource", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQuicksightDataSource.
 */
export interface GetQuicksightDataSourceArgs {
    id: string;
}

/**
 * A collection of values returned by getQuicksightDataSource.
 */
export interface GetQuicksightDataSourceResult {
    readonly alternateDataSourceParameters: outputs.GetQuicksightDataSourceAlternateDataSourceParameter[];
    readonly arn: string;
    readonly awsAccountId: string;
    readonly createdTime: string;
    readonly credentials: outputs.GetQuicksightDataSourceCredentials;
    readonly dataSourceId: string;
    readonly dataSourceParameters: outputs.GetQuicksightDataSourceDataSourceParameters;
    readonly errorInfo: outputs.GetQuicksightDataSourceErrorInfo;
    readonly id: string;
    readonly lastUpdatedTime: string;
    readonly name: string;
    readonly permissions: outputs.GetQuicksightDataSourcePermission[];
    readonly sslProperties: outputs.GetQuicksightDataSourceSslProperties;
    readonly status: string;
    readonly tags: outputs.GetQuicksightDataSourceTag[];
    readonly type: string;
    readonly vpcConnectionProperties: outputs.GetQuicksightDataSourceVpcConnectionProperties;
}
export function getQuicksightDataSourceOutput(args: GetQuicksightDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQuicksightDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getQuicksightDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getQuicksightDataSource.
 */
export interface GetQuicksightDataSourceOutputArgs {
    id: pulumi.Input<string>;
}
