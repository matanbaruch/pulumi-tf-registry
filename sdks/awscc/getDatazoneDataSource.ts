// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatazoneDataSource(args: GetDatazoneDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetDatazoneDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getDatazoneDataSource:getDatazoneDataSource", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatazoneDataSource.
 */
export interface GetDatazoneDataSourceArgs {
    id: string;
}

/**
 * A collection of values returned by getDatazoneDataSource.
 */
export interface GetDatazoneDataSourceResult {
    readonly assetFormsInputs: outputs.GetDatazoneDataSourceAssetFormsInput[];
    readonly configuration: outputs.GetDatazoneDataSourceConfiguration;
    readonly createdAt: string;
    readonly dataSourceId: string;
    readonly description: string;
    readonly domainId: string;
    readonly domainIdentifier: string;
    readonly enableSetting: string;
    readonly environmentId: string;
    readonly environmentIdentifier: string;
    readonly id: string;
    readonly lastRunAssetCount: number;
    readonly lastRunAt: string;
    readonly lastRunStatus: string;
    readonly name: string;
    readonly projectId: string;
    readonly projectIdentifier: string;
    readonly publishOnImport: boolean;
    readonly recommendation: outputs.GetDatazoneDataSourceRecommendation;
    readonly schedule: outputs.GetDatazoneDataSourceSchedule;
    readonly status: string;
    readonly type: string;
    readonly updatedAt: string;
}
export function getDatazoneDataSourceOutput(args: GetDatazoneDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatazoneDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getDatazoneDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getDatazoneDataSource.
 */
export interface GetDatazoneDataSourceOutputArgs {
    id: pulumi.Input<string>;
}
