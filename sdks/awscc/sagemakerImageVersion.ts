// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SagemakerImageVersion extends pulumi.CustomResource {
    /**
     * Get an existing SagemakerImageVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagemakerImageVersionState, opts?: pulumi.CustomResourceOptions): SagemakerImageVersion {
        return new SagemakerImageVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/sagemakerImageVersion:SagemakerImageVersion';

    /**
     * Returns true if the given object is an instance of SagemakerImageVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagemakerImageVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagemakerImageVersion.__pulumiType;
    }

    /**
     * The alias of the image version.
     */
    public readonly alias!: pulumi.Output<string>;
    /**
     * List of aliases for the image version.
     */
    public readonly aliases!: pulumi.Output<string[]>;
    /**
     * The registry path of the container image on which this image version is based.
     */
    public readonly baseImage!: pulumi.Output<string>;
    /**
     * The registry path of the container image that contains this image version.
     */
    public /*out*/ readonly containerImage!: pulumi.Output<string>;
    /**
     * Indicates Horovod compatibility.
     */
    public readonly horovod!: pulumi.Output<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the parent image.
     */
    public /*out*/ readonly imageArn!: pulumi.Output<string>;
    /**
     * The name of the image this version belongs to.
     */
    public readonly imageName!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the image version.
     */
    public /*out*/ readonly imageVersionArn!: pulumi.Output<string>;
    /**
     * Indicates SageMaker job type compatibility.
     */
    public readonly jobType!: pulumi.Output<string>;
    /**
     * The machine learning framework vended in the image version.
     */
    public readonly mlFramework!: pulumi.Output<string>;
    /**
     * Indicates CPU or GPU compatibility.
     */
    public readonly processor!: pulumi.Output<string>;
    /**
     * The supported programming language and its version.
     */
    public readonly programmingLang!: pulumi.Output<string>;
    /**
     * The maintainer description of the image version.
     */
    public readonly releaseNotes!: pulumi.Output<string>;
    /**
     * The availability of the image version specified by the maintainer.
     */
    public readonly vendorGuidance!: pulumi.Output<string>;
    /**
     * The version number of the image version.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a SagemakerImageVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagemakerImageVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagemakerImageVersionArgs | SagemakerImageVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagemakerImageVersionState | undefined;
            resourceInputs["alias"] = state ? state.alias : undefined;
            resourceInputs["aliases"] = state ? state.aliases : undefined;
            resourceInputs["baseImage"] = state ? state.baseImage : undefined;
            resourceInputs["containerImage"] = state ? state.containerImage : undefined;
            resourceInputs["horovod"] = state ? state.horovod : undefined;
            resourceInputs["imageArn"] = state ? state.imageArn : undefined;
            resourceInputs["imageName"] = state ? state.imageName : undefined;
            resourceInputs["imageVersionArn"] = state ? state.imageVersionArn : undefined;
            resourceInputs["jobType"] = state ? state.jobType : undefined;
            resourceInputs["mlFramework"] = state ? state.mlFramework : undefined;
            resourceInputs["processor"] = state ? state.processor : undefined;
            resourceInputs["programmingLang"] = state ? state.programmingLang : undefined;
            resourceInputs["releaseNotes"] = state ? state.releaseNotes : undefined;
            resourceInputs["vendorGuidance"] = state ? state.vendorGuidance : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as SagemakerImageVersionArgs | undefined;
            if ((!args || args.baseImage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseImage'");
            }
            if ((!args || args.imageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageName'");
            }
            resourceInputs["alias"] = args ? args.alias : undefined;
            resourceInputs["aliases"] = args ? args.aliases : undefined;
            resourceInputs["baseImage"] = args ? args.baseImage : undefined;
            resourceInputs["horovod"] = args ? args.horovod : undefined;
            resourceInputs["imageName"] = args ? args.imageName : undefined;
            resourceInputs["jobType"] = args ? args.jobType : undefined;
            resourceInputs["mlFramework"] = args ? args.mlFramework : undefined;
            resourceInputs["processor"] = args ? args.processor : undefined;
            resourceInputs["programmingLang"] = args ? args.programmingLang : undefined;
            resourceInputs["releaseNotes"] = args ? args.releaseNotes : undefined;
            resourceInputs["vendorGuidance"] = args ? args.vendorGuidance : undefined;
            resourceInputs["containerImage"] = undefined /*out*/;
            resourceInputs["imageArn"] = undefined /*out*/;
            resourceInputs["imageVersionArn"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagemakerImageVersion.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagemakerImageVersion resources.
 */
export interface SagemakerImageVersionState {
    /**
     * The alias of the image version.
     */
    alias?: pulumi.Input<string>;
    /**
     * List of aliases for the image version.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The registry path of the container image on which this image version is based.
     */
    baseImage?: pulumi.Input<string>;
    /**
     * The registry path of the container image that contains this image version.
     */
    containerImage?: pulumi.Input<string>;
    /**
     * Indicates Horovod compatibility.
     */
    horovod?: pulumi.Input<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the parent image.
     */
    imageArn?: pulumi.Input<string>;
    /**
     * The name of the image this version belongs to.
     */
    imageName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the image version.
     */
    imageVersionArn?: pulumi.Input<string>;
    /**
     * Indicates SageMaker job type compatibility.
     */
    jobType?: pulumi.Input<string>;
    /**
     * The machine learning framework vended in the image version.
     */
    mlFramework?: pulumi.Input<string>;
    /**
     * Indicates CPU or GPU compatibility.
     */
    processor?: pulumi.Input<string>;
    /**
     * The supported programming language and its version.
     */
    programmingLang?: pulumi.Input<string>;
    /**
     * The maintainer description of the image version.
     */
    releaseNotes?: pulumi.Input<string>;
    /**
     * The availability of the image version specified by the maintainer.
     */
    vendorGuidance?: pulumi.Input<string>;
    /**
     * The version number of the image version.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SagemakerImageVersion resource.
 */
export interface SagemakerImageVersionArgs {
    /**
     * The alias of the image version.
     */
    alias?: pulumi.Input<string>;
    /**
     * List of aliases for the image version.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The registry path of the container image on which this image version is based.
     */
    baseImage: pulumi.Input<string>;
    /**
     * Indicates Horovod compatibility.
     */
    horovod?: pulumi.Input<boolean>;
    /**
     * The name of the image this version belongs to.
     */
    imageName: pulumi.Input<string>;
    /**
     * Indicates SageMaker job type compatibility.
     */
    jobType?: pulumi.Input<string>;
    /**
     * The machine learning framework vended in the image version.
     */
    mlFramework?: pulumi.Input<string>;
    /**
     * Indicates CPU or GPU compatibility.
     */
    processor?: pulumi.Input<string>;
    /**
     * The supported programming language and its version.
     */
    programmingLang?: pulumi.Input<string>;
    /**
     * The maintainer description of the image version.
     */
    releaseNotes?: pulumi.Input<string>;
    /**
     * The availability of the image version specified by the maintainer.
     */
    vendorGuidance?: pulumi.Input<string>;
}
