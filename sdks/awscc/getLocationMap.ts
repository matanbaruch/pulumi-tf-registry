// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLocationMap(args: GetLocationMapArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationMapResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLocationMap:getLocationMap", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocationMap.
 */
export interface GetLocationMapArgs {
    id: string;
}

/**
 * A collection of values returned by getLocationMap.
 */
export interface GetLocationMapResult {
    readonly arn: string;
    readonly configuration: outputs.GetLocationMapConfiguration;
    readonly createTime: string;
    readonly description: string;
    readonly id: string;
    readonly mapArn: string;
    readonly mapName: string;
    readonly pricingPlan: string;
    readonly tags: outputs.GetLocationMapTag[];
    readonly updateTime: string;
}
export function getLocationMapOutput(args: GetLocationMapOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationMapResult> {
    return pulumi.output(args).apply((a: any) => getLocationMap(a, opts))
}

/**
 * A collection of arguments for invoking getLocationMap.
 */
export interface GetLocationMapOutputArgs {
    id: pulumi.Input<string>;
}
