// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoscalingWarmPool(args: GetAutoscalingWarmPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoscalingWarmPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getAutoscalingWarmPool:getAutoscalingWarmPool", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoscalingWarmPool.
 */
export interface GetAutoscalingWarmPoolArgs {
    id: string;
}

/**
 * A collection of values returned by getAutoscalingWarmPool.
 */
export interface GetAutoscalingWarmPoolResult {
    readonly autoScalingGroupName: string;
    readonly id: string;
    readonly instanceReusePolicy: outputs.GetAutoscalingWarmPoolInstanceReusePolicy;
    readonly maxGroupPreparedCapacity: number;
    readonly minSize: number;
    readonly poolState: string;
}
export function getAutoscalingWarmPoolOutput(args: GetAutoscalingWarmPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoscalingWarmPoolResult> {
    return pulumi.output(args).apply((a: any) => getAutoscalingWarmPool(a, opts))
}

/**
 * A collection of arguments for invoking getAutoscalingWarmPool.
 */
export interface GetAutoscalingWarmPoolOutputArgs {
    id: pulumi.Input<string>;
}
