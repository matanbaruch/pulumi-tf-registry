// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkspacesWorkspacesPool(args: GetWorkspacesWorkspacesPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspacesWorkspacesPoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getWorkspacesWorkspacesPool:getWorkspacesWorkspacesPool", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspacesWorkspacesPool.
 */
export interface GetWorkspacesWorkspacesPoolArgs {
    id: string;
}

/**
 * A collection of values returned by getWorkspacesWorkspacesPool.
 */
export interface GetWorkspacesWorkspacesPoolResult {
    readonly applicationSettings: outputs.GetWorkspacesWorkspacesPoolApplicationSettings;
    readonly bundleId: string;
    readonly capacity: outputs.GetWorkspacesWorkspacesPoolCapacity;
    readonly createdAt: string;
    readonly description: string;
    readonly directoryId: string;
    readonly id: string;
    readonly poolArn: string;
    readonly poolId: string;
    readonly poolName: string;
    readonly tags: outputs.GetWorkspacesWorkspacesPoolTag[];
    readonly timeoutSettings: outputs.GetWorkspacesWorkspacesPoolTimeoutSettings;
}
export function getWorkspacesWorkspacesPoolOutput(args: GetWorkspacesWorkspacesPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspacesWorkspacesPoolResult> {
    return pulumi.output(args).apply((a: any) => getWorkspacesWorkspacesPool(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspacesWorkspacesPool.
 */
export interface GetWorkspacesWorkspacesPoolOutputArgs {
    id: pulumi.Input<string>;
}
