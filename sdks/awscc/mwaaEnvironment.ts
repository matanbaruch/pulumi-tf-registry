// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MwaaEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing MwaaEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MwaaEnvironmentState, opts?: pulumi.CustomResourceOptions): MwaaEnvironment {
        return new MwaaEnvironment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/mwaaEnvironment:MwaaEnvironment';

    /**
     * Returns true if the given object is an instance of MwaaEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MwaaEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MwaaEnvironment.__pulumiType;
    }

    /**
     * Key/value pairs representing Airflow configuration variables. Keys are prefixed by their section: [core]
     * dags_folder={AIRFLOW_HOME}/dags Would be represented as "core.dags_folder": "{AIRFLOW_HOME}/dags"
     */
    public readonly airflowConfigurationOptions!: pulumi.Output<string>;
    /**
     * Version of airflow to deploy to the environment.
     */
    public readonly airflowVersion!: pulumi.Output<string>;
    /**
     * ARN for the MWAA environment.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * The celery executor queue associated with the environment.
     */
    public /*out*/ readonly celeryExecutorQueue!: pulumi.Output<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    public readonly dagS3Path!: pulumi.Output<string>;
    /**
     * The database VPC endpoint service name.
     */
    public /*out*/ readonly databaseVpcEndpointService!: pulumi.Output<string>;
    /**
     * Defines whether the VPC endpoints configured for the environment are created, and managed, by the customer or by Amazon
     * MWAA.
     */
    public readonly endpointManagement!: pulumi.Output<string>;
    /**
     * Templated configuration for airflow processes and backing infrastructure.
     */
    public readonly environmentClass!: pulumi.Output<string>;
    /**
     * IAM role to be used by tasks.
     */
    public readonly executionRoleArn!: pulumi.Output<string>;
    /**
     * The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for MWAA data encryption.
     * You can specify the CMK using any of the following: Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab. Key
     * alias. For example, alias/ExampleAlias. Key ARN. For example,
     * arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. Alias ARN. For example,
     * arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias. AWS authenticates the CMK asynchronously. Therefore, if you
     * specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.
     */
    public readonly kmsKey!: pulumi.Output<string>;
    /**
     * Logging configuration for the environment.
     */
    public readonly loggingConfiguration!: pulumi.Output<outputs.MwaaEnvironmentLoggingConfiguration>;
    /**
     * Maximum webserver compute units.
     */
    public readonly maxWebservers!: pulumi.Output<number>;
    /**
     * Maximum worker compute units.
     */
    public readonly maxWorkers!: pulumi.Output<number>;
    /**
     * Minimum webserver compute units.
     */
    public readonly minWebservers!: pulumi.Output<number>;
    /**
     * Minimum worker compute units.
     */
    public readonly minWorkers!: pulumi.Output<number>;
    /**
     * Customer-defined identifier for the environment, unique per customer region.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Configures the network resources of the environment.
     */
    public readonly networkConfiguration!: pulumi.Output<outputs.MwaaEnvironmentNetworkConfiguration>;
    /**
     * Represents an version ID for an S3 object.
     */
    public readonly pluginsS3ObjectVersion!: pulumi.Output<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    public readonly pluginsS3Path!: pulumi.Output<string>;
    /**
     * Represents an version ID for an S3 object.
     */
    public readonly requirementsS3ObjectVersion!: pulumi.Output<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    public readonly requirementsS3Path!: pulumi.Output<string>;
    /**
     * Scheduler compute units.
     */
    public readonly schedulers!: pulumi.Output<number>;
    /**
     * ARN for the AWS S3 bucket to use as the source of DAGs and plugins for the environment.
     */
    public readonly sourceBucketArn!: pulumi.Output<string>;
    /**
     * Represents an version ID for an S3 object.
     */
    public readonly startupScriptS3ObjectVersion!: pulumi.Output<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    public readonly startupScriptS3Path!: pulumi.Output<string>;
    /**
     * A map of tags for the environment.
     */
    public readonly tags!: pulumi.Output<string>;
    /**
     * Choice for mode of webserver access including over public internet or via private VPC endpoint.
     */
    public readonly webserverAccessMode!: pulumi.Output<string>;
    /**
     * Url endpoint for the environment's Airflow UI.
     */
    public /*out*/ readonly webserverUrl!: pulumi.Output<string>;
    /**
     * The webserver VPC endpoint service name, applicable if private webserver access mode selected.
     */
    public /*out*/ readonly webserverVpcEndpointService!: pulumi.Output<string>;
    /**
     * Start time for the weekly maintenance window.
     */
    public readonly weeklyMaintenanceWindowStart!: pulumi.Output<string>;

    /**
     * Create a MwaaEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MwaaEnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MwaaEnvironmentArgs | MwaaEnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MwaaEnvironmentState | undefined;
            resourceInputs["airflowConfigurationOptions"] = state ? state.airflowConfigurationOptions : undefined;
            resourceInputs["airflowVersion"] = state ? state.airflowVersion : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["celeryExecutorQueue"] = state ? state.celeryExecutorQueue : undefined;
            resourceInputs["dagS3Path"] = state ? state.dagS3Path : undefined;
            resourceInputs["databaseVpcEndpointService"] = state ? state.databaseVpcEndpointService : undefined;
            resourceInputs["endpointManagement"] = state ? state.endpointManagement : undefined;
            resourceInputs["environmentClass"] = state ? state.environmentClass : undefined;
            resourceInputs["executionRoleArn"] = state ? state.executionRoleArn : undefined;
            resourceInputs["kmsKey"] = state ? state.kmsKey : undefined;
            resourceInputs["loggingConfiguration"] = state ? state.loggingConfiguration : undefined;
            resourceInputs["maxWebservers"] = state ? state.maxWebservers : undefined;
            resourceInputs["maxWorkers"] = state ? state.maxWorkers : undefined;
            resourceInputs["minWebservers"] = state ? state.minWebservers : undefined;
            resourceInputs["minWorkers"] = state ? state.minWorkers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfiguration"] = state ? state.networkConfiguration : undefined;
            resourceInputs["pluginsS3ObjectVersion"] = state ? state.pluginsS3ObjectVersion : undefined;
            resourceInputs["pluginsS3Path"] = state ? state.pluginsS3Path : undefined;
            resourceInputs["requirementsS3ObjectVersion"] = state ? state.requirementsS3ObjectVersion : undefined;
            resourceInputs["requirementsS3Path"] = state ? state.requirementsS3Path : undefined;
            resourceInputs["schedulers"] = state ? state.schedulers : undefined;
            resourceInputs["sourceBucketArn"] = state ? state.sourceBucketArn : undefined;
            resourceInputs["startupScriptS3ObjectVersion"] = state ? state.startupScriptS3ObjectVersion : undefined;
            resourceInputs["startupScriptS3Path"] = state ? state.startupScriptS3Path : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["webserverAccessMode"] = state ? state.webserverAccessMode : undefined;
            resourceInputs["webserverUrl"] = state ? state.webserverUrl : undefined;
            resourceInputs["webserverVpcEndpointService"] = state ? state.webserverVpcEndpointService : undefined;
            resourceInputs["weeklyMaintenanceWindowStart"] = state ? state.weeklyMaintenanceWindowStart : undefined;
        } else {
            const args = argsOrState as MwaaEnvironmentArgs | undefined;
            resourceInputs["airflowConfigurationOptions"] = args ? args.airflowConfigurationOptions : undefined;
            resourceInputs["airflowVersion"] = args ? args.airflowVersion : undefined;
            resourceInputs["dagS3Path"] = args ? args.dagS3Path : undefined;
            resourceInputs["endpointManagement"] = args ? args.endpointManagement : undefined;
            resourceInputs["environmentClass"] = args ? args.environmentClass : undefined;
            resourceInputs["executionRoleArn"] = args ? args.executionRoleArn : undefined;
            resourceInputs["kmsKey"] = args ? args.kmsKey : undefined;
            resourceInputs["loggingConfiguration"] = args ? args.loggingConfiguration : undefined;
            resourceInputs["maxWebservers"] = args ? args.maxWebservers : undefined;
            resourceInputs["maxWorkers"] = args ? args.maxWorkers : undefined;
            resourceInputs["minWebservers"] = args ? args.minWebservers : undefined;
            resourceInputs["minWorkers"] = args ? args.minWorkers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfiguration"] = args ? args.networkConfiguration : undefined;
            resourceInputs["pluginsS3ObjectVersion"] = args ? args.pluginsS3ObjectVersion : undefined;
            resourceInputs["pluginsS3Path"] = args ? args.pluginsS3Path : undefined;
            resourceInputs["requirementsS3ObjectVersion"] = args ? args.requirementsS3ObjectVersion : undefined;
            resourceInputs["requirementsS3Path"] = args ? args.requirementsS3Path : undefined;
            resourceInputs["schedulers"] = args ? args.schedulers : undefined;
            resourceInputs["sourceBucketArn"] = args ? args.sourceBucketArn : undefined;
            resourceInputs["startupScriptS3ObjectVersion"] = args ? args.startupScriptS3ObjectVersion : undefined;
            resourceInputs["startupScriptS3Path"] = args ? args.startupScriptS3Path : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["webserverAccessMode"] = args ? args.webserverAccessMode : undefined;
            resourceInputs["weeklyMaintenanceWindowStart"] = args ? args.weeklyMaintenanceWindowStart : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["celeryExecutorQueue"] = undefined /*out*/;
            resourceInputs["databaseVpcEndpointService"] = undefined /*out*/;
            resourceInputs["webserverUrl"] = undefined /*out*/;
            resourceInputs["webserverVpcEndpointService"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MwaaEnvironment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MwaaEnvironment resources.
 */
export interface MwaaEnvironmentState {
    /**
     * Key/value pairs representing Airflow configuration variables. Keys are prefixed by their section: [core]
     * dags_folder={AIRFLOW_HOME}/dags Would be represented as "core.dags_folder": "{AIRFLOW_HOME}/dags"
     */
    airflowConfigurationOptions?: pulumi.Input<string>;
    /**
     * Version of airflow to deploy to the environment.
     */
    airflowVersion?: pulumi.Input<string>;
    /**
     * ARN for the MWAA environment.
     */
    arn?: pulumi.Input<string>;
    /**
     * The celery executor queue associated with the environment.
     */
    celeryExecutorQueue?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    dagS3Path?: pulumi.Input<string>;
    /**
     * The database VPC endpoint service name.
     */
    databaseVpcEndpointService?: pulumi.Input<string>;
    /**
     * Defines whether the VPC endpoints configured for the environment are created, and managed, by the customer or by Amazon
     * MWAA.
     */
    endpointManagement?: pulumi.Input<string>;
    /**
     * Templated configuration for airflow processes and backing infrastructure.
     */
    environmentClass?: pulumi.Input<string>;
    /**
     * IAM role to be used by tasks.
     */
    executionRoleArn?: pulumi.Input<string>;
    /**
     * The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for MWAA data encryption.
     * You can specify the CMK using any of the following: Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab. Key
     * alias. For example, alias/ExampleAlias. Key ARN. For example,
     * arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. Alias ARN. For example,
     * arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias. AWS authenticates the CMK asynchronously. Therefore, if you
     * specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.
     */
    kmsKey?: pulumi.Input<string>;
    /**
     * Logging configuration for the environment.
     */
    loggingConfiguration?: pulumi.Input<inputs.MwaaEnvironmentLoggingConfiguration>;
    /**
     * Maximum webserver compute units.
     */
    maxWebservers?: pulumi.Input<number>;
    /**
     * Maximum worker compute units.
     */
    maxWorkers?: pulumi.Input<number>;
    /**
     * Minimum webserver compute units.
     */
    minWebservers?: pulumi.Input<number>;
    /**
     * Minimum worker compute units.
     */
    minWorkers?: pulumi.Input<number>;
    /**
     * Customer-defined identifier for the environment, unique per customer region.
     */
    name?: pulumi.Input<string>;
    /**
     * Configures the network resources of the environment.
     */
    networkConfiguration?: pulumi.Input<inputs.MwaaEnvironmentNetworkConfiguration>;
    /**
     * Represents an version ID for an S3 object.
     */
    pluginsS3ObjectVersion?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    pluginsS3Path?: pulumi.Input<string>;
    /**
     * Represents an version ID for an S3 object.
     */
    requirementsS3ObjectVersion?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    requirementsS3Path?: pulumi.Input<string>;
    /**
     * Scheduler compute units.
     */
    schedulers?: pulumi.Input<number>;
    /**
     * ARN for the AWS S3 bucket to use as the source of DAGs and plugins for the environment.
     */
    sourceBucketArn?: pulumi.Input<string>;
    /**
     * Represents an version ID for an S3 object.
     */
    startupScriptS3ObjectVersion?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    startupScriptS3Path?: pulumi.Input<string>;
    /**
     * A map of tags for the environment.
     */
    tags?: pulumi.Input<string>;
    /**
     * Choice for mode of webserver access including over public internet or via private VPC endpoint.
     */
    webserverAccessMode?: pulumi.Input<string>;
    /**
     * Url endpoint for the environment's Airflow UI.
     */
    webserverUrl?: pulumi.Input<string>;
    /**
     * The webserver VPC endpoint service name, applicable if private webserver access mode selected.
     */
    webserverVpcEndpointService?: pulumi.Input<string>;
    /**
     * Start time for the weekly maintenance window.
     */
    weeklyMaintenanceWindowStart?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MwaaEnvironment resource.
 */
export interface MwaaEnvironmentArgs {
    /**
     * Key/value pairs representing Airflow configuration variables. Keys are prefixed by their section: [core]
     * dags_folder={AIRFLOW_HOME}/dags Would be represented as "core.dags_folder": "{AIRFLOW_HOME}/dags"
     */
    airflowConfigurationOptions?: pulumi.Input<string>;
    /**
     * Version of airflow to deploy to the environment.
     */
    airflowVersion?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    dagS3Path?: pulumi.Input<string>;
    /**
     * Defines whether the VPC endpoints configured for the environment are created, and managed, by the customer or by Amazon
     * MWAA.
     */
    endpointManagement?: pulumi.Input<string>;
    /**
     * Templated configuration for airflow processes and backing infrastructure.
     */
    environmentClass?: pulumi.Input<string>;
    /**
     * IAM role to be used by tasks.
     */
    executionRoleArn?: pulumi.Input<string>;
    /**
     * The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for MWAA data encryption.
     * You can specify the CMK using any of the following: Key ID. For example, key/1234abcd-12ab-34cd-56ef-1234567890ab. Key
     * alias. For example, alias/ExampleAlias. Key ARN. For example,
     * arn:aws:kms:us-east-1:012345678910:key/abcd1234-a123-456a-a12b-a123b4cd56ef. Alias ARN. For example,
     * arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias. AWS authenticates the CMK asynchronously. Therefore, if you
     * specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.
     */
    kmsKey?: pulumi.Input<string>;
    /**
     * Logging configuration for the environment.
     */
    loggingConfiguration?: pulumi.Input<inputs.MwaaEnvironmentLoggingConfiguration>;
    /**
     * Maximum webserver compute units.
     */
    maxWebservers?: pulumi.Input<number>;
    /**
     * Maximum worker compute units.
     */
    maxWorkers?: pulumi.Input<number>;
    /**
     * Minimum webserver compute units.
     */
    minWebservers?: pulumi.Input<number>;
    /**
     * Minimum worker compute units.
     */
    minWorkers?: pulumi.Input<number>;
    /**
     * Customer-defined identifier for the environment, unique per customer region.
     */
    name?: pulumi.Input<string>;
    /**
     * Configures the network resources of the environment.
     */
    networkConfiguration?: pulumi.Input<inputs.MwaaEnvironmentNetworkConfiguration>;
    /**
     * Represents an version ID for an S3 object.
     */
    pluginsS3ObjectVersion?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    pluginsS3Path?: pulumi.Input<string>;
    /**
     * Represents an version ID for an S3 object.
     */
    requirementsS3ObjectVersion?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    requirementsS3Path?: pulumi.Input<string>;
    /**
     * Scheduler compute units.
     */
    schedulers?: pulumi.Input<number>;
    /**
     * ARN for the AWS S3 bucket to use as the source of DAGs and plugins for the environment.
     */
    sourceBucketArn?: pulumi.Input<string>;
    /**
     * Represents an version ID for an S3 object.
     */
    startupScriptS3ObjectVersion?: pulumi.Input<string>;
    /**
     * Represents an S3 prefix relative to the root of an S3 bucket.
     */
    startupScriptS3Path?: pulumi.Input<string>;
    /**
     * A map of tags for the environment.
     */
    tags?: pulumi.Input<string>;
    /**
     * Choice for mode of webserver access including over public internet or via private VPC endpoint.
     */
    webserverAccessMode?: pulumi.Input<string>;
    /**
     * Start time for the weekly maintenance window.
     */
    weeklyMaintenanceWindowStart?: pulumi.Input<string>;
}
