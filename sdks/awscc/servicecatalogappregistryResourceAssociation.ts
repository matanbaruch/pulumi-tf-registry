// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ServicecatalogappregistryResourceAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ServicecatalogappregistryResourceAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicecatalogappregistryResourceAssociationState, opts?: pulumi.CustomResourceOptions): ServicecatalogappregistryResourceAssociation {
        return new ServicecatalogappregistryResourceAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/servicecatalogappregistryResourceAssociation:ServicecatalogappregistryResourceAssociation';

    /**
     * Returns true if the given object is an instance of ServicecatalogappregistryResourceAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicecatalogappregistryResourceAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicecatalogappregistryResourceAssociation.__pulumiType;
    }

    /**
     * The name or the Id of the Application.
     */
    public readonly application!: pulumi.Output<string>;
    public /*out*/ readonly applicationArn!: pulumi.Output<string>;
    /**
     * The name or the Id of the Resource.
     */
    public readonly resource!: pulumi.Output<string>;
    public /*out*/ readonly resourceArn!: pulumi.Output<string>;
    /**
     * The type of the CFN Resource for now it's enum CFN_STACK.
     */
    public readonly resourceType!: pulumi.Output<string>;

    /**
     * Create a ServicecatalogappregistryResourceAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicecatalogappregistryResourceAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicecatalogappregistryResourceAssociationArgs | ServicecatalogappregistryResourceAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicecatalogappregistryResourceAssociationState | undefined;
            resourceInputs["application"] = state ? state.application : undefined;
            resourceInputs["applicationArn"] = state ? state.applicationArn : undefined;
            resourceInputs["resource"] = state ? state.resource : undefined;
            resourceInputs["resourceArn"] = state ? state.resourceArn : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
        } else {
            const args = argsOrState as ServicecatalogappregistryResourceAssociationArgs | undefined;
            if ((!args || args.application === undefined) && !opts.urn) {
                throw new Error("Missing required property 'application'");
            }
            if ((!args || args.resource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resource'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["application"] = args ? args.application : undefined;
            resourceInputs["resource"] = args ? args.resource : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["applicationArn"] = undefined /*out*/;
            resourceInputs["resourceArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServicecatalogappregistryResourceAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServicecatalogappregistryResourceAssociation resources.
 */
export interface ServicecatalogappregistryResourceAssociationState {
    /**
     * The name or the Id of the Application.
     */
    application?: pulumi.Input<string>;
    applicationArn?: pulumi.Input<string>;
    /**
     * The name or the Id of the Resource.
     */
    resource?: pulumi.Input<string>;
    resourceArn?: pulumi.Input<string>;
    /**
     * The type of the CFN Resource for now it's enum CFN_STACK.
     */
    resourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServicecatalogappregistryResourceAssociation resource.
 */
export interface ServicecatalogappregistryResourceAssociationArgs {
    /**
     * The name or the Id of the Application.
     */
    application: pulumi.Input<string>;
    /**
     * The name or the Id of the Resource.
     */
    resource: pulumi.Input<string>;
    /**
     * The type of the CFN Resource for now it's enum CFN_STACK.
     */
    resourceType: pulumi.Input<string>;
}
