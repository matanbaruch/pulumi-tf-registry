// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ec2VpcEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing Ec2VpcEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ec2VpcEndpointState, opts?: pulumi.CustomResourceOptions): Ec2VpcEndpoint {
        return new Ec2VpcEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ec2VpcEndpoint:Ec2VpcEndpoint';

    /**
     * Returns true if the given object is an instance of Ec2VpcEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ec2VpcEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ec2VpcEndpoint.__pulumiType;
    }

    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    public /*out*/ readonly dnsEntries!: pulumi.Output<string[]>;
    public /*out*/ readonly networkInterfaceIds!: pulumi.Output<string[]>;
    /**
     * An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to
     * the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates in
     * YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
     * the API to create or modify the VPC endpoint.
     */
    public readonly policyDocument!: pulumi.Output<string>;
    /**
     * Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
     * set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
     * which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make
     * requests to the default public DNS name for the service instead of the public DNS names that are automatically generated
     * by the VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``:
     * ``enableDnsHostnames`` and ``enableDnsSupport``. This property is supported only for interface endpoints. Default:
     * ``false``
     */
    public readonly privateDnsEnabled!: pulumi.Output<boolean>;
    /**
     * The IDs of the route tables. Routing is supported only for gateway endpoints.
     */
    public readonly routeTableIds!: pulumi.Output<string[]>;
    /**
     * The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we
     * use the default security group for the VPC. Security groups are supported only for interface endpoints.
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * The name of the endpoint service.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
     * endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
     * Balancer endpoint, you can specify only one subnet.
     */
    public readonly subnetIds!: pulumi.Output<string[]>;
    public /*out*/ readonly vpcEndpointId!: pulumi.Output<string>;
    /**
     * The type of endpoint. Default: Gateway
     */
    public readonly vpcEndpointType!: pulumi.Output<string>;
    /**
     * The ID of the VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Ec2VpcEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ec2VpcEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ec2VpcEndpointArgs | Ec2VpcEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ec2VpcEndpointState | undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["dnsEntries"] = state ? state.dnsEntries : undefined;
            resourceInputs["networkInterfaceIds"] = state ? state.networkInterfaceIds : undefined;
            resourceInputs["policyDocument"] = state ? state.policyDocument : undefined;
            resourceInputs["privateDnsEnabled"] = state ? state.privateDnsEnabled : undefined;
            resourceInputs["routeTableIds"] = state ? state.routeTableIds : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["vpcEndpointId"] = state ? state.vpcEndpointId : undefined;
            resourceInputs["vpcEndpointType"] = state ? state.vpcEndpointType : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as Ec2VpcEndpointArgs | undefined;
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["policyDocument"] = args ? args.policyDocument : undefined;
            resourceInputs["privateDnsEnabled"] = args ? args.privateDnsEnabled : undefined;
            resourceInputs["routeTableIds"] = args ? args.routeTableIds : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["vpcEndpointType"] = args ? args.vpcEndpointType : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["dnsEntries"] = undefined /*out*/;
            resourceInputs["networkInterfaceIds"] = undefined /*out*/;
            resourceInputs["vpcEndpointId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ec2VpcEndpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ec2VpcEndpoint resources.
 */
export interface Ec2VpcEndpointState {
    creationTimestamp?: pulumi.Input<string>;
    dnsEntries?: pulumi.Input<pulumi.Input<string>[]>;
    networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to
     * the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates in
     * YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
     * the API to create or modify the VPC endpoint.
     */
    policyDocument?: pulumi.Input<string>;
    /**
     * Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
     * set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
     * which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make
     * requests to the default public DNS name for the service instead of the public DNS names that are automatically generated
     * by the VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``:
     * ``enableDnsHostnames`` and ``enableDnsSupport``. This property is supported only for interface endpoints. Default:
     * ``false``
     */
    privateDnsEnabled?: pulumi.Input<boolean>;
    /**
     * The IDs of the route tables. Routing is supported only for gateway endpoints.
     */
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we
     * use the default security group for the VPC. Security groups are supported only for interface endpoints.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the endpoint service.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
     * endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
     * Balancer endpoint, you can specify only one subnet.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    vpcEndpointId?: pulumi.Input<string>;
    /**
     * The type of endpoint. Default: Gateway
     */
    vpcEndpointType?: pulumi.Input<string>;
    /**
     * The ID of the VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ec2VpcEndpoint resource.
 */
export interface Ec2VpcEndpointArgs {
    /**
     * An endpoint policy, which controls access to the service from the VPC. The default endpoint policy allows full access to
     * the service. Endpoint policies are supported only for gateway and interface endpoints. For CloudFormation templates in
     * YAML, you can provide the policy in JSON or YAML format. CFNlong converts YAML policies to JSON format before calling
     * the API to create or modify the VPC endpoint.
     */
    policyDocument?: pulumi.Input<string>;
    /**
     * Indicate whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record
     * set for the default public DNS name for the service for the Region (for example, ``kinesis.us-east-1.amazonaws.com``),
     * which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make
     * requests to the default public DNS name for the service instead of the public DNS names that are automatically generated
     * by the VPC endpoint service. To use a private hosted zone, you must set the following VPC attributes to ``true``:
     * ``enableDnsHostnames`` and ``enableDnsSupport``. This property is supported only for interface endpoints. Default:
     * ``false``
     */
    privateDnsEnabled?: pulumi.Input<boolean>;
    /**
     * The IDs of the route tables. Routing is supported only for gateway endpoints.
     */
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IDs of the security groups to associate with the endpoint network interfaces. If this parameter is not specified, we
     * use the default security group for the VPC. Security groups are supported only for interface endpoints.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the endpoint service.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The IDs of the subnets in which to create endpoint network interfaces. You must specify this property for an interface
     * endpoint or a Gateway Load Balancer endpoint. You can't specify this property for a gateway endpoint. For a Gateway Load
     * Balancer endpoint, you can specify only one subnet.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of endpoint. Default: Gateway
     */
    vpcEndpointType?: pulumi.Input<string>;
    /**
     * The ID of the VPC.
     */
    vpcId: pulumi.Input<string>;
}
