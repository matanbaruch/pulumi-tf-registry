// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRobomakerRobotApplication(args: GetRobomakerRobotApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetRobomakerRobotApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRobomakerRobotApplication:getRobomakerRobotApplication", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRobomakerRobotApplication.
 */
export interface GetRobomakerRobotApplicationArgs {
    id: string;
}

/**
 * A collection of values returned by getRobomakerRobotApplication.
 */
export interface GetRobomakerRobotApplicationResult {
    readonly arn: string;
    readonly currentRevisionId: string;
    readonly environment: string;
    readonly id: string;
    readonly name: string;
    readonly robotSoftwareSuite: outputs.GetRobomakerRobotApplicationRobotSoftwareSuite;
    readonly sources: outputs.GetRobomakerRobotApplicationSource[];
    readonly tags: {[key: string]: string};
}
export function getRobomakerRobotApplicationOutput(args: GetRobomakerRobotApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRobomakerRobotApplicationResult> {
    return pulumi.output(args).apply((a: any) => getRobomakerRobotApplication(a, opts))
}

/**
 * A collection of arguments for invoking getRobomakerRobotApplication.
 */
export interface GetRobomakerRobotApplicationOutputArgs {
    id: pulumi.Input<string>;
}
