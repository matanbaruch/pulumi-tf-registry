// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLambdaEventInvokeConfig(args: GetLambdaEventInvokeConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetLambdaEventInvokeConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLambdaEventInvokeConfig:getLambdaEventInvokeConfig", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLambdaEventInvokeConfig.
 */
export interface GetLambdaEventInvokeConfigArgs {
    id: string;
}

/**
 * A collection of values returned by getLambdaEventInvokeConfig.
 */
export interface GetLambdaEventInvokeConfigResult {
    readonly destinationConfig: outputs.GetLambdaEventInvokeConfigDestinationConfig;
    readonly functionName: string;
    readonly id: string;
    readonly maximumEventAgeInSeconds: number;
    readonly maximumRetryAttempts: number;
    readonly qualifier: string;
}
export function getLambdaEventInvokeConfigOutput(args: GetLambdaEventInvokeConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLambdaEventInvokeConfigResult> {
    return pulumi.output(args).apply((a: any) => getLambdaEventInvokeConfig(a, opts))
}

/**
 * A collection of arguments for invoking getLambdaEventInvokeConfig.
 */
export interface GetLambdaEventInvokeConfigOutputArgs {
    id: pulumi.Input<string>;
}
