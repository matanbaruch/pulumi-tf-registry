// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationsignalsServiceLevelObjective extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationsignalsServiceLevelObjective resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationsignalsServiceLevelObjectiveState, opts?: pulumi.CustomResourceOptions): ApplicationsignalsServiceLevelObjective {
        return new ApplicationsignalsServiceLevelObjective(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/applicationsignalsServiceLevelObjective:ApplicationsignalsServiceLevelObjective';

    /**
     * Returns true if the given object is an instance of ApplicationsignalsServiceLevelObjective.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationsignalsServiceLevelObjective {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationsignalsServiceLevelObjective.__pulumiType;
    }

    /**
     * The ARN of this SLO.
     */
    public /*out*/ readonly arn!: pulumi.Output<string>;
    /**
     * Epoch time in seconds of the time that this SLO was created
     */
    public /*out*/ readonly createdTime!: pulumi.Output<number>;
    /**
     * An optional description for this SLO. Default is 'No description'
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * A structure that contains the attributes that determine the goal of the SLO. This includes the time period for
     * evaluation and the attainment threshold.
     */
    public readonly goal!: pulumi.Output<outputs.ApplicationsignalsServiceLevelObjectiveGoal>;
    /**
     * Epoch time in seconds of the time that this SLO was most recently updated
     */
    public /*out*/ readonly lastUpdatedTime!: pulumi.Output<number>;
    /**
     * The name of this SLO.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * This structure contains information about the performance metric that an SLO monitors.
     */
    public readonly sli!: pulumi.Output<outputs.ApplicationsignalsServiceLevelObjectiveSli>;
    /**
     * The list of tag keys and values associated with the resource you specified
     */
    public readonly tags!: pulumi.Output<outputs.ApplicationsignalsServiceLevelObjectiveTag[]>;

    /**
     * Create a ApplicationsignalsServiceLevelObjective resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationsignalsServiceLevelObjectiveArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationsignalsServiceLevelObjectiveArgs | ApplicationsignalsServiceLevelObjectiveState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationsignalsServiceLevelObjectiveState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["goal"] = state ? state.goal : undefined;
            resourceInputs["lastUpdatedTime"] = state ? state.lastUpdatedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sli"] = state ? state.sli : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ApplicationsignalsServiceLevelObjectiveArgs | undefined;
            if ((!args || args.sli === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sli'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["goal"] = args ? args.goal : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sli"] = args ? args.sli : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationsignalsServiceLevelObjective.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationsignalsServiceLevelObjective resources.
 */
export interface ApplicationsignalsServiceLevelObjectiveState {
    /**
     * The ARN of this SLO.
     */
    arn?: pulumi.Input<string>;
    /**
     * Epoch time in seconds of the time that this SLO was created
     */
    createdTime?: pulumi.Input<number>;
    /**
     * An optional description for this SLO. Default is 'No description'
     */
    description?: pulumi.Input<string>;
    /**
     * A structure that contains the attributes that determine the goal of the SLO. This includes the time period for
     * evaluation and the attainment threshold.
     */
    goal?: pulumi.Input<inputs.ApplicationsignalsServiceLevelObjectiveGoal>;
    /**
     * Epoch time in seconds of the time that this SLO was most recently updated
     */
    lastUpdatedTime?: pulumi.Input<number>;
    /**
     * The name of this SLO.
     */
    name?: pulumi.Input<string>;
    /**
     * This structure contains information about the performance metric that an SLO monitors.
     */
    sli?: pulumi.Input<inputs.ApplicationsignalsServiceLevelObjectiveSli>;
    /**
     * The list of tag keys and values associated with the resource you specified
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApplicationsignalsServiceLevelObjectiveTag>[]>;
}

/**
 * The set of arguments for constructing a ApplicationsignalsServiceLevelObjective resource.
 */
export interface ApplicationsignalsServiceLevelObjectiveArgs {
    /**
     * An optional description for this SLO. Default is 'No description'
     */
    description?: pulumi.Input<string>;
    /**
     * A structure that contains the attributes that determine the goal of the SLO. This includes the time period for
     * evaluation and the attainment threshold.
     */
    goal?: pulumi.Input<inputs.ApplicationsignalsServiceLevelObjectiveGoal>;
    /**
     * The name of this SLO.
     */
    name?: pulumi.Input<string>;
    /**
     * This structure contains information about the performance metric that an SLO monitors.
     */
    sli: pulumi.Input<inputs.ApplicationsignalsServiceLevelObjectiveSli>;
    /**
     * The list of tag keys and values associated with the resource you specified
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ApplicationsignalsServiceLevelObjectiveTag>[]>;
}
