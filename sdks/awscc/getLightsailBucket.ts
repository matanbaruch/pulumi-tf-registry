// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLightsailBucket(args: GetLightsailBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetLightsailBucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLightsailBucket:getLightsailBucket", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLightsailBucket.
 */
export interface GetLightsailBucketArgs {
    id: string;
}

/**
 * A collection of values returned by getLightsailBucket.
 */
export interface GetLightsailBucketResult {
    readonly ableToUpdateBundle: boolean;
    readonly accessRules: outputs.GetLightsailBucketAccessRules;
    readonly bucketArn: string;
    readonly bucketName: string;
    readonly bundleId: string;
    readonly id: string;
    readonly objectVersioning: boolean;
    readonly readOnlyAccessAccounts: string[];
    readonly resourcesReceivingAccesses: string[];
    readonly tags: outputs.GetLightsailBucketTag[];
    readonly url: string;
}
export function getLightsailBucketOutput(args: GetLightsailBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLightsailBucketResult> {
    return pulumi.output(args).apply((a: any) => getLightsailBucket(a, opts))
}

/**
 * A collection of arguments for invoking getLightsailBucket.
 */
export interface GetLightsailBucketOutputArgs {
    id: pulumi.Input<string>;
}
