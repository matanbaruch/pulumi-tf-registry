// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApigatewayv2Authorizer(args: GetApigatewayv2AuthorizerArgs, opts?: pulumi.InvokeOptions): Promise<GetApigatewayv2AuthorizerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getApigatewayv2Authorizer:getApigatewayv2Authorizer", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApigatewayv2Authorizer.
 */
export interface GetApigatewayv2AuthorizerArgs {
    id: string;
}

/**
 * A collection of values returned by getApigatewayv2Authorizer.
 */
export interface GetApigatewayv2AuthorizerResult {
    readonly apiId: string;
    readonly authorizerCredentialsArn: string;
    readonly authorizerId: string;
    readonly authorizerPayloadFormatVersion: string;
    readonly authorizerResultTtlInSeconds: number;
    readonly authorizerType: string;
    readonly authorizerUri: string;
    readonly enableSimpleResponses: boolean;
    readonly id: string;
    readonly identitySources: string[];
    readonly identityValidationExpression: string;
    readonly jwtConfiguration: outputs.GetApigatewayv2AuthorizerJwtConfiguration;
    readonly name: string;
}
export function getApigatewayv2AuthorizerOutput(args: GetApigatewayv2AuthorizerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApigatewayv2AuthorizerResult> {
    return pulumi.output(args).apply((a: any) => getApigatewayv2Authorizer(a, opts))
}

/**
 * A collection of arguments for invoking getApigatewayv2Authorizer.
 */
export interface GetApigatewayv2AuthorizerOutputArgs {
    id: pulumi.Input<string>;
}
