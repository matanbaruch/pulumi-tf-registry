// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2VpcEndpoint(args: GetEc2VpcEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2VpcEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2VpcEndpoint:getEc2VpcEndpoint", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2VpcEndpoint.
 */
export interface GetEc2VpcEndpointArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2VpcEndpoint.
 */
export interface GetEc2VpcEndpointResult {
    readonly creationTimestamp: string;
    readonly dnsEntries: string[];
    readonly id: string;
    readonly networkInterfaceIds: string[];
    readonly policyDocument: string;
    readonly privateDnsEnabled: boolean;
    readonly routeTableIds: string[];
    readonly securityGroupIds: string[];
    readonly serviceName: string;
    readonly subnetIds: string[];
    readonly vpcEndpointId: string;
    readonly vpcEndpointType: string;
    readonly vpcId: string;
}
export function getEc2VpcEndpointOutput(args: GetEc2VpcEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2VpcEndpointResult> {
    return pulumi.output(args).apply((a: any) => getEc2VpcEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getEc2VpcEndpoint.
 */
export interface GetEc2VpcEndpointOutputArgs {
    id: pulumi.Input<string>;
}
