// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Apigatewayv2RouteResponse extends pulumi.CustomResource {
    /**
     * Get an existing Apigatewayv2RouteResponse resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Apigatewayv2RouteResponseState, opts?: pulumi.CustomResourceOptions): Apigatewayv2RouteResponse {
        return new Apigatewayv2RouteResponse(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/apigatewayv2RouteResponse:Apigatewayv2RouteResponse';

    /**
     * Returns true if the given object is an instance of Apigatewayv2RouteResponse.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Apigatewayv2RouteResponse {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Apigatewayv2RouteResponse.__pulumiType;
    }

    /**
     * The API identifier.
     */
    public readonly apiId!: pulumi.Output<string>;
    /**
     * The model selection expression for the route response. Supported only for WebSocket APIs.
     */
    public readonly modelSelectionExpression!: pulumi.Output<string>;
    /**
     * The response models for the route response.
     */
    public readonly responseModels!: pulumi.Output<string>;
    /**
     * The route response parameters.
     */
    public readonly responseParameters!: pulumi.Output<{[key: string]: outputs.Apigatewayv2RouteResponseResponseParameters}>;
    /**
     * The route ID.
     */
    public readonly routeId!: pulumi.Output<string>;
    public /*out*/ readonly routeResponseId!: pulumi.Output<string>;
    /**
     * The route response key.
     */
    public readonly routeResponseKey!: pulumi.Output<string>;

    /**
     * Create a Apigatewayv2RouteResponse resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Apigatewayv2RouteResponseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Apigatewayv2RouteResponseArgs | Apigatewayv2RouteResponseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Apigatewayv2RouteResponseState | undefined;
            resourceInputs["apiId"] = state ? state.apiId : undefined;
            resourceInputs["modelSelectionExpression"] = state ? state.modelSelectionExpression : undefined;
            resourceInputs["responseModels"] = state ? state.responseModels : undefined;
            resourceInputs["responseParameters"] = state ? state.responseParameters : undefined;
            resourceInputs["routeId"] = state ? state.routeId : undefined;
            resourceInputs["routeResponseId"] = state ? state.routeResponseId : undefined;
            resourceInputs["routeResponseKey"] = state ? state.routeResponseKey : undefined;
        } else {
            const args = argsOrState as Apigatewayv2RouteResponseArgs | undefined;
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if ((!args || args.routeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeId'");
            }
            if ((!args || args.routeResponseKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routeResponseKey'");
            }
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["modelSelectionExpression"] = args ? args.modelSelectionExpression : undefined;
            resourceInputs["responseModels"] = args ? args.responseModels : undefined;
            resourceInputs["responseParameters"] = args ? args.responseParameters : undefined;
            resourceInputs["routeId"] = args ? args.routeId : undefined;
            resourceInputs["routeResponseKey"] = args ? args.routeResponseKey : undefined;
            resourceInputs["routeResponseId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Apigatewayv2RouteResponse.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Apigatewayv2RouteResponse resources.
 */
export interface Apigatewayv2RouteResponseState {
    /**
     * The API identifier.
     */
    apiId?: pulumi.Input<string>;
    /**
     * The model selection expression for the route response. Supported only for WebSocket APIs.
     */
    modelSelectionExpression?: pulumi.Input<string>;
    /**
     * The response models for the route response.
     */
    responseModels?: pulumi.Input<string>;
    /**
     * The route response parameters.
     */
    responseParameters?: pulumi.Input<{[key: string]: pulumi.Input<inputs.Apigatewayv2RouteResponseResponseParameters>}>;
    /**
     * The route ID.
     */
    routeId?: pulumi.Input<string>;
    routeResponseId?: pulumi.Input<string>;
    /**
     * The route response key.
     */
    routeResponseKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Apigatewayv2RouteResponse resource.
 */
export interface Apigatewayv2RouteResponseArgs {
    /**
     * The API identifier.
     */
    apiId: pulumi.Input<string>;
    /**
     * The model selection expression for the route response. Supported only for WebSocket APIs.
     */
    modelSelectionExpression?: pulumi.Input<string>;
    /**
     * The response models for the route response.
     */
    responseModels?: pulumi.Input<string>;
    /**
     * The route response parameters.
     */
    responseParameters?: pulumi.Input<{[key: string]: pulumi.Input<inputs.Apigatewayv2RouteResponseResponseParameters>}>;
    /**
     * The route ID.
     */
    routeId: pulumi.Input<string>;
    /**
     * The route response key.
     */
    routeResponseKey: pulumi.Input<string>;
}
