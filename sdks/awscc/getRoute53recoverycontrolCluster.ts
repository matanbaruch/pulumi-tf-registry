// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoute53recoverycontrolCluster(args: GetRoute53recoverycontrolClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53recoverycontrolClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRoute53recoverycontrolCluster:getRoute53recoverycontrolCluster", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53recoverycontrolCluster.
 */
export interface GetRoute53recoverycontrolClusterArgs {
    id: string;
}

/**
 * A collection of values returned by getRoute53recoverycontrolCluster.
 */
export interface GetRoute53recoverycontrolClusterResult {
    readonly clusterArn: string;
    readonly clusterEndpoints: outputs.GetRoute53recoverycontrolClusterClusterEndpoint[];
    readonly id: string;
    readonly name: string;
    readonly status: string;
    readonly tags: outputs.GetRoute53recoverycontrolClusterTag[];
}
export function getRoute53recoverycontrolClusterOutput(args: GetRoute53recoverycontrolClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53recoverycontrolClusterResult> {
    return pulumi.output(args).apply((a: any) => getRoute53recoverycontrolCluster(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53recoverycontrolCluster.
 */
export interface GetRoute53recoverycontrolClusterOutputArgs {
    id: pulumi.Input<string>;
}
