// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getXraySamplingRule(args: GetXraySamplingRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetXraySamplingRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getXraySamplingRule:getXraySamplingRule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getXraySamplingRule.
 */
export interface GetXraySamplingRuleArgs {
    id: string;
}

/**
 * A collection of values returned by getXraySamplingRule.
 */
export interface GetXraySamplingRuleResult {
    readonly id: string;
    readonly ruleArn: string;
    readonly ruleName: string;
    readonly samplingRule: outputs.GetXraySamplingRuleSamplingRule;
    readonly samplingRuleRecord: outputs.GetXraySamplingRuleSamplingRuleRecord;
    readonly samplingRuleUpdate: outputs.GetXraySamplingRuleSamplingRuleUpdate;
    readonly tags: outputs.GetXraySamplingRuleTag[];
}
export function getXraySamplingRuleOutput(args: GetXraySamplingRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetXraySamplingRuleResult> {
    return pulumi.output(args).apply((a: any) => getXraySamplingRule(a, opts))
}

/**
 * A collection of arguments for invoking getXraySamplingRule.
 */
export interface GetXraySamplingRuleOutputArgs {
    id: pulumi.Input<string>;
}
