// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoute53resolverOutpostResolver(args: GetRoute53resolverOutpostResolverArgs, opts?: pulumi.InvokeOptions): Promise<GetRoute53resolverOutpostResolverResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getRoute53resolverOutpostResolver:getRoute53resolverOutpostResolver", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoute53resolverOutpostResolver.
 */
export interface GetRoute53resolverOutpostResolverArgs {
    id: string;
}

/**
 * A collection of values returned by getRoute53resolverOutpostResolver.
 */
export interface GetRoute53resolverOutpostResolverResult {
    readonly arn: string;
    readonly creationTime: string;
    readonly creatorRequestId: string;
    readonly id: string;
    readonly instanceCount: number;
    readonly modificationTime: string;
    readonly name: string;
    readonly outpostArn: string;
    readonly outpostResolverId: string;
    readonly preferredInstanceType: string;
    readonly status: string;
    readonly statusMessage: string;
    readonly tags: outputs.GetRoute53resolverOutpostResolverTag[];
}
export function getRoute53resolverOutpostResolverOutput(args: GetRoute53resolverOutpostResolverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoute53resolverOutpostResolverResult> {
    return pulumi.output(args).apply((a: any) => getRoute53resolverOutpostResolver(a, opts))
}

/**
 * A collection of arguments for invoking getRoute53resolverOutpostResolver.
 */
export interface GetRoute53resolverOutpostResolverOutputArgs {
    id: pulumi.Input<string>;
}
