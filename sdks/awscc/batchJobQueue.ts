// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BatchJobQueue extends pulumi.CustomResource {
    /**
     * Get an existing BatchJobQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BatchJobQueueState, opts?: pulumi.CustomResourceOptions): BatchJobQueue {
        return new BatchJobQueue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/batchJobQueue:BatchJobQueue';

    /**
     * Returns true if the given object is an instance of BatchJobQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BatchJobQueue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BatchJobQueue.__pulumiType;
    }

    public readonly computeEnvironmentOrders!: pulumi.Output<outputs.BatchJobQueueComputeEnvironmentOrder[]>;
    public /*out*/ readonly jobQueueArn!: pulumi.Output<string>;
    public readonly jobQueueName!: pulumi.Output<string>;
    public readonly jobStateTimeLimitActions!: pulumi.Output<outputs.BatchJobQueueJobStateTimeLimitAction[]>;
    public readonly priority!: pulumi.Output<number>;
    public readonly schedulingPolicyArn!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    /**
     * A key-value pair to associate with a resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a BatchJobQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BatchJobQueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BatchJobQueueArgs | BatchJobQueueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BatchJobQueueState | undefined;
            resourceInputs["computeEnvironmentOrders"] = state ? state.computeEnvironmentOrders : undefined;
            resourceInputs["jobQueueArn"] = state ? state.jobQueueArn : undefined;
            resourceInputs["jobQueueName"] = state ? state.jobQueueName : undefined;
            resourceInputs["jobStateTimeLimitActions"] = state ? state.jobStateTimeLimitActions : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["schedulingPolicyArn"] = state ? state.schedulingPolicyArn : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as BatchJobQueueArgs | undefined;
            if ((!args || args.computeEnvironmentOrders === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeEnvironmentOrders'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            resourceInputs["computeEnvironmentOrders"] = args ? args.computeEnvironmentOrders : undefined;
            resourceInputs["jobQueueName"] = args ? args.jobQueueName : undefined;
            resourceInputs["jobStateTimeLimitActions"] = args ? args.jobStateTimeLimitActions : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["schedulingPolicyArn"] = args ? args.schedulingPolicyArn : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["jobQueueArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BatchJobQueue.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BatchJobQueue resources.
 */
export interface BatchJobQueueState {
    computeEnvironmentOrders?: pulumi.Input<pulumi.Input<inputs.BatchJobQueueComputeEnvironmentOrder>[]>;
    jobQueueArn?: pulumi.Input<string>;
    jobQueueName?: pulumi.Input<string>;
    jobStateTimeLimitActions?: pulumi.Input<pulumi.Input<inputs.BatchJobQueueJobStateTimeLimitAction>[]>;
    priority?: pulumi.Input<number>;
    schedulingPolicyArn?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    /**
     * A key-value pair to associate with a resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a BatchJobQueue resource.
 */
export interface BatchJobQueueArgs {
    computeEnvironmentOrders: pulumi.Input<pulumi.Input<inputs.BatchJobQueueComputeEnvironmentOrder>[]>;
    jobQueueName?: pulumi.Input<string>;
    jobStateTimeLimitActions?: pulumi.Input<pulumi.Input<inputs.BatchJobQueueJobStateTimeLimitAction>[]>;
    priority: pulumi.Input<number>;
    schedulingPolicyArn?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    /**
     * A key-value pair to associate with a resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
