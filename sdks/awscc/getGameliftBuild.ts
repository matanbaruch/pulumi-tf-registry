// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGameliftBuild(args: GetGameliftBuildArgs, opts?: pulumi.InvokeOptions): Promise<GetGameliftBuildResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getGameliftBuild:getGameliftBuild", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGameliftBuild.
 */
export interface GetGameliftBuildArgs {
    id: string;
}

/**
 * A collection of values returned by getGameliftBuild.
 */
export interface GetGameliftBuildResult {
    readonly buildId: string;
    readonly id: string;
    readonly name: string;
    readonly operatingSystem: string;
    readonly serverSdkVersion: string;
    readonly storageLocation: outputs.GetGameliftBuildStorageLocation;
    readonly version: string;
}
export function getGameliftBuildOutput(args: GetGameliftBuildOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGameliftBuildResult> {
    return pulumi.output(args).apply((a: any) => getGameliftBuild(a, opts))
}

/**
 * A collection of arguments for invoking getGameliftBuild.
 */
export interface GetGameliftBuildOutputArgs {
    id: pulumi.Input<string>;
}
