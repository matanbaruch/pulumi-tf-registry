// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHealthimagingDatastore(args: GetHealthimagingDatastoreArgs, opts?: pulumi.InvokeOptions): Promise<GetHealthimagingDatastoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getHealthimagingDatastore:getHealthimagingDatastore", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHealthimagingDatastore.
 */
export interface GetHealthimagingDatastoreArgs {
    id: string;
}

/**
 * A collection of values returned by getHealthimagingDatastore.
 */
export interface GetHealthimagingDatastoreResult {
    readonly createdAt: string;
    readonly datastoreArn: string;
    readonly datastoreId: string;
    readonly datastoreName: string;
    readonly datastoreStatus: string;
    readonly id: string;
    readonly kmsKeyArn: string;
    readonly tags: {[key: string]: string};
    readonly updatedAt: string;
}
export function getHealthimagingDatastoreOutput(args: GetHealthimagingDatastoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHealthimagingDatastoreResult> {
    return pulumi.output(args).apply((a: any) => getHealthimagingDatastore(a, opts))
}

/**
 * A collection of arguments for invoking getHealthimagingDatastore.
 */
export interface GetHealthimagingDatastoreOutputArgs {
    id: pulumi.Input<string>;
}
