// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogsDestination(args: GetLogsDestinationArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsDestinationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getLogsDestination:getLogsDestination", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogsDestination.
 */
export interface GetLogsDestinationArgs {
    id: string;
}

/**
 * A collection of values returned by getLogsDestination.
 */
export interface GetLogsDestinationResult {
    readonly arn: string;
    readonly destinationName: string;
    readonly destinationPolicy: string;
    readonly id: string;
    readonly roleArn: string;
    readonly targetArn: string;
}
export function getLogsDestinationOutput(args: GetLogsDestinationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogsDestinationResult> {
    return pulumi.output(args).apply((a: any) => getLogsDestination(a, opts))
}

/**
 * A collection of arguments for invoking getLogsDestination.
 */
export interface GetLogsDestinationOutputArgs {
    id: pulumi.Input<string>;
}
