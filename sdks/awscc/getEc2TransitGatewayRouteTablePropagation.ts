// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEc2TransitGatewayRouteTablePropagation(args: GetEc2TransitGatewayRouteTablePropagationArgs, opts?: pulumi.InvokeOptions): Promise<GetEc2TransitGatewayRouteTablePropagationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEc2TransitGatewayRouteTablePropagation:getEc2TransitGatewayRouteTablePropagation", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEc2TransitGatewayRouteTablePropagation.
 */
export interface GetEc2TransitGatewayRouteTablePropagationArgs {
    id: string;
}

/**
 * A collection of values returned by getEc2TransitGatewayRouteTablePropagation.
 */
export interface GetEc2TransitGatewayRouteTablePropagationResult {
    readonly id: string;
    readonly transitGatewayAttachmentId: string;
    readonly transitGatewayRouteTableId: string;
}
export function getEc2TransitGatewayRouteTablePropagationOutput(args: GetEc2TransitGatewayRouteTablePropagationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEc2TransitGatewayRouteTablePropagationResult> {
    return pulumi.output(args).apply((a: any) => getEc2TransitGatewayRouteTablePropagation(a, opts))
}

/**
 * A collection of arguments for invoking getEc2TransitGatewayRouteTablePropagation.
 */
export interface GetEc2TransitGatewayRouteTablePropagationOutputArgs {
    id: pulumi.Input<string>;
}
