// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEfsMountTarget(args: GetEfsMountTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetEfsMountTargetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEfsMountTarget:getEfsMountTarget", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEfsMountTarget.
 */
export interface GetEfsMountTargetArgs {
    id: string;
}

/**
 * A collection of values returned by getEfsMountTarget.
 */
export interface GetEfsMountTargetResult {
    readonly fileSystemId: string;
    readonly id: string;
    readonly ipAddress: string;
    readonly mountTargetId: string;
    readonly securityGroups: string[];
    readonly subnetId: string;
}
export function getEfsMountTargetOutput(args: GetEfsMountTargetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEfsMountTargetResult> {
    return pulumi.output(args).apply((a: any) => getEfsMountTarget(a, opts))
}

/**
 * A collection of arguments for invoking getEfsMountTarget.
 */
export interface GetEfsMountTargetOutputArgs {
    id: pulumi.Input<string>;
}
