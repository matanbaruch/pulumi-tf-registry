// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AmplifyBranch extends pulumi.CustomResource {
    /**
     * Get an existing AmplifyBranch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AmplifyBranchState, opts?: pulumi.CustomResourceOptions): AmplifyBranch {
        return new AmplifyBranch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/amplifyBranch:AmplifyBranch';

    /**
     * Returns true if the given object is an instance of AmplifyBranch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AmplifyBranch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AmplifyBranch.__pulumiType;
    }

    public readonly appId!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly backend!: pulumi.Output<outputs.AmplifyBranchBackend>;
    public readonly basicAuthConfig!: pulumi.Output<outputs.AmplifyBranchBasicAuthConfig>;
    public readonly branchName!: pulumi.Output<string>;
    public readonly buildSpec!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly enableAutoBuild!: pulumi.Output<boolean>;
    public readonly enablePerformanceMode!: pulumi.Output<boolean>;
    public readonly enablePullRequestPreview!: pulumi.Output<boolean>;
    public readonly environmentVariables!: pulumi.Output<outputs.AmplifyBranchEnvironmentVariable[]>;
    public readonly framework!: pulumi.Output<string>;
    public readonly pullRequestEnvironmentName!: pulumi.Output<string>;
    public readonly stage!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.AmplifyBranchTag[]>;

    /**
     * Create a AmplifyBranch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AmplifyBranchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AmplifyBranchArgs | AmplifyBranchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AmplifyBranchState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["basicAuthConfig"] = state ? state.basicAuthConfig : undefined;
            resourceInputs["branchName"] = state ? state.branchName : undefined;
            resourceInputs["buildSpec"] = state ? state.buildSpec : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableAutoBuild"] = state ? state.enableAutoBuild : undefined;
            resourceInputs["enablePerformanceMode"] = state ? state.enablePerformanceMode : undefined;
            resourceInputs["enablePullRequestPreview"] = state ? state.enablePullRequestPreview : undefined;
            resourceInputs["environmentVariables"] = state ? state.environmentVariables : undefined;
            resourceInputs["framework"] = state ? state.framework : undefined;
            resourceInputs["pullRequestEnvironmentName"] = state ? state.pullRequestEnvironmentName : undefined;
            resourceInputs["stage"] = state ? state.stage : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as AmplifyBranchArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.branchName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'branchName'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["basicAuthConfig"] = args ? args.basicAuthConfig : undefined;
            resourceInputs["branchName"] = args ? args.branchName : undefined;
            resourceInputs["buildSpec"] = args ? args.buildSpec : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableAutoBuild"] = args ? args.enableAutoBuild : undefined;
            resourceInputs["enablePerformanceMode"] = args ? args.enablePerformanceMode : undefined;
            resourceInputs["enablePullRequestPreview"] = args ? args.enablePullRequestPreview : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["framework"] = args ? args.framework : undefined;
            resourceInputs["pullRequestEnvironmentName"] = args ? args.pullRequestEnvironmentName : undefined;
            resourceInputs["stage"] = args ? args.stage : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AmplifyBranch.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AmplifyBranch resources.
 */
export interface AmplifyBranchState {
    appId?: pulumi.Input<string>;
    arn?: pulumi.Input<string>;
    backend?: pulumi.Input<inputs.AmplifyBranchBackend>;
    basicAuthConfig?: pulumi.Input<inputs.AmplifyBranchBasicAuthConfig>;
    branchName?: pulumi.Input<string>;
    buildSpec?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableAutoBuild?: pulumi.Input<boolean>;
    enablePerformanceMode?: pulumi.Input<boolean>;
    enablePullRequestPreview?: pulumi.Input<boolean>;
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.AmplifyBranchEnvironmentVariable>[]>;
    framework?: pulumi.Input<string>;
    pullRequestEnvironmentName?: pulumi.Input<string>;
    stage?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AmplifyBranchTag>[]>;
}

/**
 * The set of arguments for constructing a AmplifyBranch resource.
 */
export interface AmplifyBranchArgs {
    appId: pulumi.Input<string>;
    backend?: pulumi.Input<inputs.AmplifyBranchBackend>;
    basicAuthConfig?: pulumi.Input<inputs.AmplifyBranchBasicAuthConfig>;
    branchName: pulumi.Input<string>;
    buildSpec?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableAutoBuild?: pulumi.Input<boolean>;
    enablePerformanceMode?: pulumi.Input<boolean>;
    enablePullRequestPreview?: pulumi.Input<boolean>;
    environmentVariables?: pulumi.Input<pulumi.Input<inputs.AmplifyBranchEnvironmentVariable>[]>;
    framework?: pulumi.Input<string>;
    pullRequestEnvironmentName?: pulumi.Input<string>;
    stage?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AmplifyBranchTag>[]>;
}
