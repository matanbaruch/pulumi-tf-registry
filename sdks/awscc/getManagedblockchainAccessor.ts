// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagedblockchainAccessor(args: GetManagedblockchainAccessorArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedblockchainAccessorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getManagedblockchainAccessor:getManagedblockchainAccessor", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagedblockchainAccessor.
 */
export interface GetManagedblockchainAccessorArgs {
    id: string;
}

/**
 * A collection of values returned by getManagedblockchainAccessor.
 */
export interface GetManagedblockchainAccessorResult {
    readonly accessorId: string;
    readonly accessorType: string;
    readonly arn: string;
    readonly billingToken: string;
    readonly creationDate: string;
    readonly id: string;
    readonly networkType: string;
    readonly status: string;
    readonly tags: outputs.GetManagedblockchainAccessorTag[];
}
export function getManagedblockchainAccessorOutput(args: GetManagedblockchainAccessorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedblockchainAccessorResult> {
    return pulumi.output(args).apply((a: any) => getManagedblockchainAccessor(a, opts))
}

/**
 * A collection of arguments for invoking getManagedblockchainAccessor.
 */
export interface GetManagedblockchainAccessorOutputArgs {
    id: pulumi.Input<string>;
}
