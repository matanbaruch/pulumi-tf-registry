// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransferCertificate(args: GetTransferCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetTransferCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getTransferCertificate:getTransferCertificate", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransferCertificate.
 */
export interface GetTransferCertificateArgs {
    id: string;
}

/**
 * A collection of values returned by getTransferCertificate.
 */
export interface GetTransferCertificateResult {
    readonly activeDate: string;
    readonly arn: string;
    readonly certificate: string;
    readonly certificateChain: string;
    readonly certificateId: string;
    readonly description: string;
    readonly id: string;
    readonly inactiveDate: string;
    readonly notAfterDate: string;
    readonly notBeforeDate: string;
    readonly privateKey: string;
    readonly serial: string;
    readonly status: string;
    readonly tags: outputs.GetTransferCertificateTag[];
    readonly type: string;
    readonly usage: string;
}
export function getTransferCertificateOutput(args: GetTransferCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransferCertificateResult> {
    return pulumi.output(args).apply((a: any) => getTransferCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getTransferCertificate.
 */
export interface GetTransferCertificateOutputArgs {
    id: pulumi.Input<string>;
}
