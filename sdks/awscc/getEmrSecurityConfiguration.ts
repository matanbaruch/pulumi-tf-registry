// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEmrSecurityConfiguration(args: GetEmrSecurityConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetEmrSecurityConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getEmrSecurityConfiguration:getEmrSecurityConfiguration", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmrSecurityConfiguration.
 */
export interface GetEmrSecurityConfigurationArgs {
    id: string;
}

/**
 * A collection of values returned by getEmrSecurityConfiguration.
 */
export interface GetEmrSecurityConfigurationResult {
    readonly id: string;
    readonly name: string;
    readonly securityConfiguration: string;
}
export function getEmrSecurityConfigurationOutput(args: GetEmrSecurityConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmrSecurityConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getEmrSecurityConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getEmrSecurityConfiguration.
 */
export interface GetEmrSecurityConfigurationOutputArgs {
    id: pulumi.Input<string>;
}
