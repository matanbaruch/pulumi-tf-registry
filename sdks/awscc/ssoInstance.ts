// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SsoInstance extends pulumi.CustomResource {
    /**
     * Get an existing SsoInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsoInstanceState, opts?: pulumi.CustomResourceOptions): SsoInstance {
        return new SsoInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/ssoInstance:SsoInstance';

    /**
     * Returns true if the given object is an instance of SsoInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SsoInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SsoInstance.__pulumiType;
    }

    /**
     * The ID of the identity store associated with the created Identity Center (SSO) Instance
     */
    public /*out*/ readonly identityStoreId!: pulumi.Output<string>;
    /**
     * The SSO Instance ARN that is returned upon creation of the Identity Center (SSO) Instance
     */
    public /*out*/ readonly instanceArn!: pulumi.Output<string>;
    /**
     * The name you want to assign to this Identity Center (SSO) Instance
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The AWS accountId of the owner of the Identity Center (SSO) Instance
     */
    public /*out*/ readonly ownerAccountId!: pulumi.Output<string>;
    /**
     * The status of the Identity Center (SSO) Instance, create_in_progress/delete_in_progress/active
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.SsoInstanceTag[]>;

    /**
     * Create a SsoInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SsoInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsoInstanceArgs | SsoInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsoInstanceState | undefined;
            resourceInputs["identityStoreId"] = state ? state.identityStoreId : undefined;
            resourceInputs["instanceArn"] = state ? state.instanceArn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerAccountId"] = state ? state.ownerAccountId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SsoInstanceArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["identityStoreId"] = undefined /*out*/;
            resourceInputs["instanceArn"] = undefined /*out*/;
            resourceInputs["ownerAccountId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SsoInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SsoInstance resources.
 */
export interface SsoInstanceState {
    /**
     * The ID of the identity store associated with the created Identity Center (SSO) Instance
     */
    identityStoreId?: pulumi.Input<string>;
    /**
     * The SSO Instance ARN that is returned upon creation of the Identity Center (SSO) Instance
     */
    instanceArn?: pulumi.Input<string>;
    /**
     * The name you want to assign to this Identity Center (SSO) Instance
     */
    name?: pulumi.Input<string>;
    /**
     * The AWS accountId of the owner of the Identity Center (SSO) Instance
     */
    ownerAccountId?: pulumi.Input<string>;
    /**
     * The status of the Identity Center (SSO) Instance, create_in_progress/delete_in_progress/active
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SsoInstanceTag>[]>;
}

/**
 * The set of arguments for constructing a SsoInstance resource.
 */
export interface SsoInstanceArgs {
    /**
     * The name you want to assign to this Identity Center (SSO) Instance
     */
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SsoInstanceTag>[]>;
}
