// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudwatchAlarm(args: GetCloudwatchAlarmArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudwatchAlarmResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("awscc:index/getCloudwatchAlarm:getCloudwatchAlarm", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudwatchAlarm.
 */
export interface GetCloudwatchAlarmArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudwatchAlarm.
 */
export interface GetCloudwatchAlarmResult {
    readonly actionsEnabled: boolean;
    readonly alarmActions: string[];
    readonly alarmDescription: string;
    readonly alarmName: string;
    readonly arn: string;
    readonly comparisonOperator: string;
    readonly datapointsToAlarm: number;
    readonly dimensions: outputs.GetCloudwatchAlarmDimension[];
    readonly evaluateLowSampleCountPercentile: string;
    readonly evaluationPeriods: number;
    readonly extendedStatistic: string;
    readonly id: string;
    readonly insufficientDataActions: string[];
    readonly metricName: string;
    readonly metrics: outputs.GetCloudwatchAlarmMetric[];
    readonly namespace: string;
    readonly okActions: string[];
    readonly period: number;
    readonly statistic: string;
    readonly tags: outputs.GetCloudwatchAlarmTag[];
    readonly threshold: number;
    readonly thresholdMetricId: string;
    readonly treatMissingData: string;
    readonly unit: string;
}
export function getCloudwatchAlarmOutput(args: GetCloudwatchAlarmOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudwatchAlarmResult> {
    return pulumi.output(args).apply((a: any) => getCloudwatchAlarm(a, opts))
}

/**
 * A collection of arguments for invoking getCloudwatchAlarm.
 */
export interface GetCloudwatchAlarmOutputArgs {
    id: pulumi.Input<string>;
}
