// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CodebuildFleet extends pulumi.CustomResource {
    /**
     * Get an existing CodebuildFleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CodebuildFleetState, opts?: pulumi.CustomResourceOptions): CodebuildFleet {
        return new CodebuildFleet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/codebuildFleet:CodebuildFleet';

    /**
     * Returns true if the given object is an instance of CodebuildFleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CodebuildFleet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CodebuildFleet.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly baseCapacity!: pulumi.Output<number>;
    public readonly computeType!: pulumi.Output<string>;
    public readonly environmentType!: pulumi.Output<string>;
    public readonly fleetServiceRole!: pulumi.Output<string>;
    public readonly fleetVpcConfig!: pulumi.Output<outputs.CodebuildFleetFleetVpcConfig>;
    public readonly imageId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly overflowBehavior!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.CodebuildFleetTag[]>;

    /**
     * Create a CodebuildFleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CodebuildFleetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CodebuildFleetArgs | CodebuildFleetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CodebuildFleetState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["baseCapacity"] = state ? state.baseCapacity : undefined;
            resourceInputs["computeType"] = state ? state.computeType : undefined;
            resourceInputs["environmentType"] = state ? state.environmentType : undefined;
            resourceInputs["fleetServiceRole"] = state ? state.fleetServiceRole : undefined;
            resourceInputs["fleetVpcConfig"] = state ? state.fleetVpcConfig : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overflowBehavior"] = state ? state.overflowBehavior : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as CodebuildFleetArgs | undefined;
            resourceInputs["baseCapacity"] = args ? args.baseCapacity : undefined;
            resourceInputs["computeType"] = args ? args.computeType : undefined;
            resourceInputs["environmentType"] = args ? args.environmentType : undefined;
            resourceInputs["fleetServiceRole"] = args ? args.fleetServiceRole : undefined;
            resourceInputs["fleetVpcConfig"] = args ? args.fleetVpcConfig : undefined;
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overflowBehavior"] = args ? args.overflowBehavior : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CodebuildFleet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CodebuildFleet resources.
 */
export interface CodebuildFleetState {
    arn?: pulumi.Input<string>;
    baseCapacity?: pulumi.Input<number>;
    computeType?: pulumi.Input<string>;
    environmentType?: pulumi.Input<string>;
    fleetServiceRole?: pulumi.Input<string>;
    fleetVpcConfig?: pulumi.Input<inputs.CodebuildFleetFleetVpcConfig>;
    imageId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    overflowBehavior?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.CodebuildFleetTag>[]>;
}

/**
 * The set of arguments for constructing a CodebuildFleet resource.
 */
export interface CodebuildFleetArgs {
    baseCapacity?: pulumi.Input<number>;
    computeType?: pulumi.Input<string>;
    environmentType?: pulumi.Input<string>;
    fleetServiceRole?: pulumi.Input<string>;
    fleetVpcConfig?: pulumi.Input<inputs.CodebuildFleetFleetVpcConfig>;
    imageId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    overflowBehavior?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.CodebuildFleetTag>[]>;
}
