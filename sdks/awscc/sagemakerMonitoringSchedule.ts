// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SagemakerMonitoringSchedule extends pulumi.CustomResource {
    /**
     * Get an existing SagemakerMonitoringSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SagemakerMonitoringScheduleState, opts?: pulumi.CustomResourceOptions): SagemakerMonitoringSchedule {
        return new SagemakerMonitoringSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'awscc:index/sagemakerMonitoringSchedule:SagemakerMonitoringSchedule';

    /**
     * Returns true if the given object is an instance of SagemakerMonitoringSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SagemakerMonitoringSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SagemakerMonitoringSchedule.__pulumiType;
    }

    /**
     * The time at which the schedule was created.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * The name of the endpoint used to run the monitoring job.
     */
    public readonly endpointName!: pulumi.Output<string>;
    /**
     * Contains the reason a monitoring job failed, if it failed.
     */
    public readonly failureReason!: pulumi.Output<string>;
    /**
     * A timestamp that indicates the last time the monitoring job was modified.
     */
    public /*out*/ readonly lastModifiedTime!: pulumi.Output<string>;
    /**
     * Describes metadata on the last execution to run, if there was one.
     */
    public readonly lastMonitoringExecutionSummary!: pulumi.Output<outputs.SagemakerMonitoringScheduleLastMonitoringExecutionSummary>;
    /**
     * The Amazon Resource Name (ARN) of the monitoring schedule.
     */
    public /*out*/ readonly monitoringScheduleArn!: pulumi.Output<string>;
    /**
     * The configuration object that specifies the monitoring schedule and defines the monitoring job.
     */
    public readonly monitoringScheduleConfig!: pulumi.Output<outputs.SagemakerMonitoringScheduleMonitoringScheduleConfig>;
    /**
     * The name of the monitoring schedule.
     */
    public readonly monitoringScheduleName!: pulumi.Output<string>;
    /**
     * The status of a schedule job.
     */
    public readonly monitoringScheduleStatus!: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    public readonly tags!: pulumi.Output<outputs.SagemakerMonitoringScheduleTag[]>;

    /**
     * Create a SagemakerMonitoringSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SagemakerMonitoringScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SagemakerMonitoringScheduleArgs | SagemakerMonitoringScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SagemakerMonitoringScheduleState | undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["endpointName"] = state ? state.endpointName : undefined;
            resourceInputs["failureReason"] = state ? state.failureReason : undefined;
            resourceInputs["lastModifiedTime"] = state ? state.lastModifiedTime : undefined;
            resourceInputs["lastMonitoringExecutionSummary"] = state ? state.lastMonitoringExecutionSummary : undefined;
            resourceInputs["monitoringScheduleArn"] = state ? state.monitoringScheduleArn : undefined;
            resourceInputs["monitoringScheduleConfig"] = state ? state.monitoringScheduleConfig : undefined;
            resourceInputs["monitoringScheduleName"] = state ? state.monitoringScheduleName : undefined;
            resourceInputs["monitoringScheduleStatus"] = state ? state.monitoringScheduleStatus : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as SagemakerMonitoringScheduleArgs | undefined;
            if ((!args || args.monitoringScheduleConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'monitoringScheduleConfig'");
            }
            if ((!args || args.monitoringScheduleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'monitoringScheduleName'");
            }
            resourceInputs["endpointName"] = args ? args.endpointName : undefined;
            resourceInputs["failureReason"] = args ? args.failureReason : undefined;
            resourceInputs["lastMonitoringExecutionSummary"] = args ? args.lastMonitoringExecutionSummary : undefined;
            resourceInputs["monitoringScheduleConfig"] = args ? args.monitoringScheduleConfig : undefined;
            resourceInputs["monitoringScheduleName"] = args ? args.monitoringScheduleName : undefined;
            resourceInputs["monitoringScheduleStatus"] = args ? args.monitoringScheduleStatus : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["lastModifiedTime"] = undefined /*out*/;
            resourceInputs["monitoringScheduleArn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SagemakerMonitoringSchedule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SagemakerMonitoringSchedule resources.
 */
export interface SagemakerMonitoringScheduleState {
    /**
     * The time at which the schedule was created.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * The name of the endpoint used to run the monitoring job.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * Contains the reason a monitoring job failed, if it failed.
     */
    failureReason?: pulumi.Input<string>;
    /**
     * A timestamp that indicates the last time the monitoring job was modified.
     */
    lastModifiedTime?: pulumi.Input<string>;
    /**
     * Describes metadata on the last execution to run, if there was one.
     */
    lastMonitoringExecutionSummary?: pulumi.Input<inputs.SagemakerMonitoringScheduleLastMonitoringExecutionSummary>;
    /**
     * The Amazon Resource Name (ARN) of the monitoring schedule.
     */
    monitoringScheduleArn?: pulumi.Input<string>;
    /**
     * The configuration object that specifies the monitoring schedule and defines the monitoring job.
     */
    monitoringScheduleConfig?: pulumi.Input<inputs.SagemakerMonitoringScheduleMonitoringScheduleConfig>;
    /**
     * The name of the monitoring schedule.
     */
    monitoringScheduleName?: pulumi.Input<string>;
    /**
     * The status of a schedule job.
     */
    monitoringScheduleStatus?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerMonitoringScheduleTag>[]>;
}

/**
 * The set of arguments for constructing a SagemakerMonitoringSchedule resource.
 */
export interface SagemakerMonitoringScheduleArgs {
    /**
     * The name of the endpoint used to run the monitoring job.
     */
    endpointName?: pulumi.Input<string>;
    /**
     * Contains the reason a monitoring job failed, if it failed.
     */
    failureReason?: pulumi.Input<string>;
    /**
     * Describes metadata on the last execution to run, if there was one.
     */
    lastMonitoringExecutionSummary?: pulumi.Input<inputs.SagemakerMonitoringScheduleLastMonitoringExecutionSummary>;
    /**
     * The configuration object that specifies the monitoring schedule and defines the monitoring job.
     */
    monitoringScheduleConfig: pulumi.Input<inputs.SagemakerMonitoringScheduleMonitoringScheduleConfig>;
    /**
     * The name of the monitoring schedule.
     */
    monitoringScheduleName: pulumi.Input<string>;
    /**
     * The status of a schedule job.
     */
    monitoringScheduleStatus?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SagemakerMonitoringScheduleTag>[]>;
}
