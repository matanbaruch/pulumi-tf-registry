// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AlertV2 extends pulumi.CustomResource {
    /**
     * Get an existing AlertV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertV2State, opts?: pulumi.CustomResourceOptions): AlertV2 {
        return new AlertV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'logzio:index/alertV2:AlertV2';

    /**
     * Returns true if the given object is an instance of AlertV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertV2.__pulumiType;
    }

    public readonly alertNotificationEndpoints!: pulumi.Output<number[] | undefined>;
    public readonly correlationOperator!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly isEnabled!: pulumi.Output<boolean | undefined>;
    public readonly joins!: pulumi.Output<{[key: string]: string}[] | undefined>;
    public readonly notificationEmails!: pulumi.Output<string[] | undefined>;
    public readonly outputType!: pulumi.Output<string | undefined>;
    public readonly scheduleCronExpression!: pulumi.Output<string | undefined>;
    public readonly scheduleTimezone!: pulumi.Output<string | undefined>;
    public readonly searchTimeframeMinutes!: pulumi.Output<number>;
    public readonly subComponents!: pulumi.Output<outputs.AlertV2SubComponent[]>;
    public readonly suppressNotificationsMinutes!: pulumi.Output<number | undefined>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly title!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;

    /**
     * Create a AlertV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertV2Args | AlertV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertV2State | undefined;
            resourceInputs["alertNotificationEndpoints"] = state ? state.alertNotificationEndpoints : undefined;
            resourceInputs["correlationOperator"] = state ? state.correlationOperator : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isEnabled"] = state ? state.isEnabled : undefined;
            resourceInputs["joins"] = state ? state.joins : undefined;
            resourceInputs["notificationEmails"] = state ? state.notificationEmails : undefined;
            resourceInputs["outputType"] = state ? state.outputType : undefined;
            resourceInputs["scheduleCronExpression"] = state ? state.scheduleCronExpression : undefined;
            resourceInputs["scheduleTimezone"] = state ? state.scheduleTimezone : undefined;
            resourceInputs["searchTimeframeMinutes"] = state ? state.searchTimeframeMinutes : undefined;
            resourceInputs["subComponents"] = state ? state.subComponents : undefined;
            resourceInputs["suppressNotificationsMinutes"] = state ? state.suppressNotificationsMinutes : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
        } else {
            const args = argsOrState as AlertV2Args | undefined;
            if ((!args || args.searchTimeframeMinutes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'searchTimeframeMinutes'");
            }
            if ((!args || args.subComponents === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subComponents'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["alertNotificationEndpoints"] = args ? args.alertNotificationEndpoints : undefined;
            resourceInputs["correlationOperator"] = args ? args.correlationOperator : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["joins"] = args ? args.joins : undefined;
            resourceInputs["notificationEmails"] = args ? args.notificationEmails : undefined;
            resourceInputs["outputType"] = args ? args.outputType : undefined;
            resourceInputs["scheduleCronExpression"] = args ? args.scheduleCronExpression : undefined;
            resourceInputs["scheduleTimezone"] = args ? args.scheduleTimezone : undefined;
            resourceInputs["searchTimeframeMinutes"] = args ? args.searchTimeframeMinutes : undefined;
            resourceInputs["subComponents"] = args ? args.subComponents : undefined;
            resourceInputs["suppressNotificationsMinutes"] = args ? args.suppressNotificationsMinutes : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AlertV2 resources.
 */
export interface AlertV2State {
    alertNotificationEndpoints?: pulumi.Input<pulumi.Input<number>[]>;
    correlationOperator?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
    joins?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    outputType?: pulumi.Input<string>;
    scheduleCronExpression?: pulumi.Input<string>;
    scheduleTimezone?: pulumi.Input<string>;
    searchTimeframeMinutes?: pulumi.Input<number>;
    subComponents?: pulumi.Input<pulumi.Input<inputs.AlertV2SubComponent>[]>;
    suppressNotificationsMinutes?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    title?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AlertV2 resource.
 */
export interface AlertV2Args {
    alertNotificationEndpoints?: pulumi.Input<pulumi.Input<number>[]>;
    correlationOperator?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
    joins?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    outputType?: pulumi.Input<string>;
    scheduleCronExpression?: pulumi.Input<string>;
    scheduleTimezone?: pulumi.Input<string>;
    searchTimeframeMinutes: pulumi.Input<number>;
    subComponents: pulumi.Input<pulumi.Input<inputs.AlertV2SubComponent>[]>;
    suppressNotificationsMinutes?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    title: pulumi.Input<string>;
}
