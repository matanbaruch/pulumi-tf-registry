// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LogShippingToken extends pulumi.CustomResource {
    /**
     * Get an existing LogShippingToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogShippingTokenState, opts?: pulumi.CustomResourceOptions): LogShippingToken {
        return new LogShippingToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'logzio:index/logShippingToken:LogShippingToken';

    /**
     * Returns true if the given object is an instance of LogShippingToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogShippingToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogShippingToken.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<number>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly token!: pulumi.Output<string>;
    public /*out*/ readonly tokenId!: pulumi.Output<number>;
    public /*out*/ readonly updatedAt!: pulumi.Output<number>;
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;

    /**
     * Create a LogShippingToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogShippingTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogShippingTokenArgs | LogShippingTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogShippingTokenState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["tokenId"] = state ? state.tokenId : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
        } else {
            const args = argsOrState as LogShippingTokenArgs | undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
            resourceInputs["tokenId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogShippingToken.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LogShippingToken resources.
 */
export interface LogShippingTokenState {
    createdAt?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
    tokenId?: pulumi.Input<number>;
    updatedAt?: pulumi.Input<number>;
    updatedBy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogShippingToken resource.
 */
export interface LogShippingTokenArgs {
    enabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
}
