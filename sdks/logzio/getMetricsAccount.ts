// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMetricsAccount(args?: GetMetricsAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricsAccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logzio:index/getMetricsAccount:getMetricsAccount", {
        "accountId": args.accountId,
        "accountName": args.accountName,
        "accountToken": args.accountToken,
        "authorizedAccounts": args.authorizedAccounts,
        "email": args.email,
        "id": args.id,
        "planUts": args.planUts,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetricsAccount.
 */
export interface GetMetricsAccountArgs {
    accountId?: number;
    accountName?: string;
    accountToken?: string;
    authorizedAccounts?: number[];
    email?: string;
    id?: string;
    planUts?: number;
    timeouts?: inputs.GetMetricsAccountTimeouts;
}

/**
 * A collection of values returned by getMetricsAccount.
 */
export interface GetMetricsAccountResult {
    readonly accountId?: number;
    readonly accountName?: string;
    readonly accountToken?: string;
    readonly authorizedAccounts?: number[];
    readonly email?: string;
    readonly id: string;
    readonly planUts?: number;
    readonly timeouts?: outputs.GetMetricsAccountTimeouts;
}
export function getMetricsAccountOutput(args?: GetMetricsAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetricsAccountResult> {
    return pulumi.output(args).apply((a: any) => getMetricsAccount(a, opts))
}

/**
 * A collection of arguments for invoking getMetricsAccount.
 */
export interface GetMetricsAccountOutputArgs {
    accountId?: pulumi.Input<number>;
    accountName?: pulumi.Input<string>;
    accountToken?: pulumi.Input<string>;
    authorizedAccounts?: pulumi.Input<pulumi.Input<number>[]>;
    email?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    planUts?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.GetMetricsAccountTimeoutsArgs>;
}
