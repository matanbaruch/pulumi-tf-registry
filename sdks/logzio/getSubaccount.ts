// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubaccount(args?: GetSubaccountArgs, opts?: pulumi.InvokeOptions): Promise<GetSubaccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logzio:index/getSubaccount:getSubaccount", {
        "accessible": args.accessible,
        "accountId": args.accountId,
        "accountName": args.accountName,
        "accountToken": args.accountToken,
        "docSizeSetting": args.docSizeSetting,
        "email": args.email,
        "flexible": args.flexible,
        "frequencyMinutes": args.frequencyMinutes,
        "id": args.id,
        "maxDailyGb": args.maxDailyGb,
        "reservedDailyGb": args.reservedDailyGb,
        "retentionDays": args.retentionDays,
        "searchable": args.searchable,
        "sharingObjectsAccounts": args.sharingObjectsAccounts,
        "timeouts": args.timeouts,
        "utilizationEnabled": args.utilizationEnabled,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubaccount.
 */
export interface GetSubaccountArgs {
    accessible?: boolean;
    accountId?: number;
    accountName?: string;
    accountToken?: string;
    docSizeSetting?: boolean;
    email?: string;
    flexible?: boolean;
    frequencyMinutes?: number;
    id?: string;
    maxDailyGb?: number;
    reservedDailyGb?: number;
    retentionDays?: number;
    searchable?: boolean;
    sharingObjectsAccounts?: number[];
    timeouts?: inputs.GetSubaccountTimeouts;
    utilizationEnabled?: boolean;
}

/**
 * A collection of values returned by getSubaccount.
 */
export interface GetSubaccountResult {
    readonly accessible?: boolean;
    readonly accountId?: number;
    readonly accountName?: string;
    readonly accountToken?: string;
    readonly docSizeSetting?: boolean;
    readonly email?: string;
    readonly flexible?: boolean;
    readonly frequencyMinutes?: number;
    readonly id: string;
    readonly maxDailyGb?: number;
    readonly reservedDailyGb?: number;
    readonly retentionDays?: number;
    readonly searchable?: boolean;
    readonly sharingObjectsAccounts?: number[];
    readonly timeouts?: outputs.GetSubaccountTimeouts;
    readonly utilizationEnabled?: boolean;
}
export function getSubaccountOutput(args?: GetSubaccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubaccountResult> {
    return pulumi.output(args).apply((a: any) => getSubaccount(a, opts))
}

/**
 * A collection of arguments for invoking getSubaccount.
 */
export interface GetSubaccountOutputArgs {
    accessible?: pulumi.Input<boolean>;
    accountId?: pulumi.Input<number>;
    accountName?: pulumi.Input<string>;
    accountToken?: pulumi.Input<string>;
    docSizeSetting?: pulumi.Input<boolean>;
    email?: pulumi.Input<string>;
    flexible?: pulumi.Input<boolean>;
    frequencyMinutes?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    maxDailyGb?: pulumi.Input<number>;
    reservedDailyGb?: pulumi.Input<number>;
    retentionDays?: pulumi.Input<number>;
    searchable?: pulumi.Input<boolean>;
    sharingObjectsAccounts?: pulumi.Input<pulumi.Input<number>[]>;
    timeouts?: pulumi.Input<inputs.GetSubaccountTimeoutsArgs>;
    utilizationEnabled?: pulumi.Input<boolean>;
}
