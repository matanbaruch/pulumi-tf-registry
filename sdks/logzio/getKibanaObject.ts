// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKibanaObject(args: GetKibanaObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetKibanaObjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logzio:index/getKibanaObject:getKibanaObject", {
        "data": args.data,
        "id": args.id,
        "kibanaVersion": args.kibanaVersion,
        "objectId": args.objectId,
        "objectType": args.objectType,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKibanaObject.
 */
export interface GetKibanaObjectArgs {
    data?: string;
    id?: string;
    kibanaVersion?: string;
    objectId: string;
    objectType: string;
    timeouts?: inputs.GetKibanaObjectTimeouts;
}

/**
 * A collection of values returned by getKibanaObject.
 */
export interface GetKibanaObjectResult {
    readonly data: string;
    readonly id: string;
    readonly kibanaVersion: string;
    readonly objectId: string;
    readonly objectType: string;
    readonly timeouts?: outputs.GetKibanaObjectTimeouts;
}
export function getKibanaObjectOutput(args: GetKibanaObjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKibanaObjectResult> {
    return pulumi.output(args).apply((a: any) => getKibanaObject(a, opts))
}

/**
 * A collection of arguments for invoking getKibanaObject.
 */
export interface GetKibanaObjectOutputArgs {
    data?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    kibanaVersion?: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    objectType: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetKibanaObjectTimeoutsArgs>;
}
