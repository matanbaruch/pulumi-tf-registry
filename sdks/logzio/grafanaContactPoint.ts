// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GrafanaContactPoint extends pulumi.CustomResource {
    /**
     * Get an existing GrafanaContactPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GrafanaContactPointState, opts?: pulumi.CustomResourceOptions): GrafanaContactPoint {
        return new GrafanaContactPoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'logzio:index/grafanaContactPoint:GrafanaContactPoint';

    /**
     * Returns true if the given object is an instance of GrafanaContactPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GrafanaContactPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GrafanaContactPoint.__pulumiType;
    }

    public readonly emails!: pulumi.Output<outputs.GrafanaContactPointEmail[] | undefined>;
    public readonly googlechats!: pulumi.Output<outputs.GrafanaContactPointGooglechat[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly opsgenies!: pulumi.Output<outputs.GrafanaContactPointOpsgeny[] | undefined>;
    public readonly pagerduties!: pulumi.Output<outputs.GrafanaContactPointPagerduty[] | undefined>;
    public readonly slacks!: pulumi.Output<outputs.GrafanaContactPointSlack[] | undefined>;
    public readonly teams!: pulumi.Output<outputs.GrafanaContactPointTeam[] | undefined>;
    public readonly victorops!: pulumi.Output<outputs.GrafanaContactPointVictorop[] | undefined>;
    public readonly webhooks!: pulumi.Output<outputs.GrafanaContactPointWebhook[] | undefined>;

    /**
     * Create a GrafanaContactPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GrafanaContactPointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GrafanaContactPointArgs | GrafanaContactPointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GrafanaContactPointState | undefined;
            resourceInputs["emails"] = state ? state.emails : undefined;
            resourceInputs["googlechats"] = state ? state.googlechats : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["opsgenies"] = state ? state.opsgenies : undefined;
            resourceInputs["pagerduties"] = state ? state.pagerduties : undefined;
            resourceInputs["slacks"] = state ? state.slacks : undefined;
            resourceInputs["teams"] = state ? state.teams : undefined;
            resourceInputs["victorops"] = state ? state.victorops : undefined;
            resourceInputs["webhooks"] = state ? state.webhooks : undefined;
        } else {
            const args = argsOrState as GrafanaContactPointArgs | undefined;
            resourceInputs["emails"] = args ? args.emails : undefined;
            resourceInputs["googlechats"] = args ? args.googlechats : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["opsgenies"] = args ? args.opsgenies : undefined;
            resourceInputs["pagerduties"] = args ? args.pagerduties : undefined;
            resourceInputs["slacks"] = args ? args.slacks : undefined;
            resourceInputs["teams"] = args ? args.teams : undefined;
            resourceInputs["victorops"] = args ? args.victorops : undefined;
            resourceInputs["webhooks"] = args ? args.webhooks : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GrafanaContactPoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GrafanaContactPoint resources.
 */
export interface GrafanaContactPointState {
    emails?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointEmail>[]>;
    googlechats?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointGooglechat>[]>;
    name?: pulumi.Input<string>;
    opsgenies?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointOpsgeny>[]>;
    pagerduties?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointPagerduty>[]>;
    slacks?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointSlack>[]>;
    teams?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointTeam>[]>;
    victorops?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointVictorop>[]>;
    webhooks?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointWebhook>[]>;
}

/**
 * The set of arguments for constructing a GrafanaContactPoint resource.
 */
export interface GrafanaContactPointArgs {
    emails?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointEmail>[]>;
    googlechats?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointGooglechat>[]>;
    name?: pulumi.Input<string>;
    opsgenies?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointOpsgeny>[]>;
    pagerduties?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointPagerduty>[]>;
    slacks?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointSlack>[]>;
    teams?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointTeam>[]>;
    victorops?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointVictorop>[]>;
    webhooks?: pulumi.Input<pulumi.Input<inputs.GrafanaContactPointWebhook>[]>;
}
