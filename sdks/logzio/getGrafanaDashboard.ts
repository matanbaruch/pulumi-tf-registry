// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGrafanaDashboard(args: GetGrafanaDashboardArgs, opts?: pulumi.InvokeOptions): Promise<GetGrafanaDashboardResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logzio:index/getGrafanaDashboard:getGrafanaDashboard", {
        "dashboardUid": args.dashboardUid,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGrafanaDashboard.
 */
export interface GetGrafanaDashboardArgs {
    dashboardUid: string;
    id?: string;
}

/**
 * A collection of values returned by getGrafanaDashboard.
 */
export interface GetGrafanaDashboardResult {
    readonly dashboardJson: string;
    readonly dashboardUid: string;
    readonly folderUid: string;
    readonly id: string;
    readonly url: string;
}
export function getGrafanaDashboardOutput(args: GetGrafanaDashboardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGrafanaDashboardResult> {
    return pulumi.output(args).apply((a: any) => getGrafanaDashboard(a, opts))
}

/**
 * A collection of arguments for invoking getGrafanaDashboard.
 */
export interface GetGrafanaDashboardOutputArgs {
    dashboardUid: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
