// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAuthenticationGroups(args?: GetAuthenticationGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticationGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logzio:index/getAuthenticationGroups:getAuthenticationGroups", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthenticationGroups.
 */
export interface GetAuthenticationGroupsArgs {
    id?: string;
}

/**
 * A collection of values returned by getAuthenticationGroups.
 */
export interface GetAuthenticationGroupsResult {
    readonly authenticationGroups: outputs.GetAuthenticationGroupsAuthenticationGroup[];
    readonly id: string;
}
export function getAuthenticationGroupsOutput(args?: GetAuthenticationGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthenticationGroupsResult> {
    return pulumi.output(args).apply((a: any) => getAuthenticationGroups(a, opts))
}

/**
 * A collection of arguments for invoking getAuthenticationGroups.
 */
export interface GetAuthenticationGroupsOutputArgs {
    id?: pulumi.Input<string>;
}
