// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointState, opts?: pulumi.CustomResourceOptions): Endpoint {
        return new Endpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'logzio:index/endpoint:Endpoint';

    /**
     * Returns true if the given object is an instance of Endpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Endpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Endpoint.__pulumiType;
    }

    public readonly bigpanda!: pulumi.Output<outputs.EndpointBigpanda | undefined>;
    public readonly custom!: pulumi.Output<outputs.EndpointCustom | undefined>;
    public readonly datadog!: pulumi.Output<outputs.EndpointDatadog | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly endpointId!: pulumi.Output<number>;
    public readonly endpointType!: pulumi.Output<string>;
    public readonly microsoftteams!: pulumi.Output<outputs.EndpointMicrosoftteams | undefined>;
    public readonly opsgenie!: pulumi.Output<outputs.EndpointOpsgenie | undefined>;
    public readonly pagerduty!: pulumi.Output<outputs.EndpointPagerduty | undefined>;
    public readonly servicenow!: pulumi.Output<outputs.EndpointServicenow | undefined>;
    public readonly slack!: pulumi.Output<outputs.EndpointSlack | undefined>;
    public readonly title!: pulumi.Output<string>;
    public readonly victorops!: pulumi.Output<outputs.EndpointVictorops | undefined>;

    /**
     * Create a Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndpointArgs | EndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EndpointState | undefined;
            resourceInputs["bigpanda"] = state ? state.bigpanda : undefined;
            resourceInputs["custom"] = state ? state.custom : undefined;
            resourceInputs["datadog"] = state ? state.datadog : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endpointId"] = state ? state.endpointId : undefined;
            resourceInputs["endpointType"] = state ? state.endpointType : undefined;
            resourceInputs["microsoftteams"] = state ? state.microsoftteams : undefined;
            resourceInputs["opsgenie"] = state ? state.opsgenie : undefined;
            resourceInputs["pagerduty"] = state ? state.pagerduty : undefined;
            resourceInputs["servicenow"] = state ? state.servicenow : undefined;
            resourceInputs["slack"] = state ? state.slack : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["victorops"] = state ? state.victorops : undefined;
        } else {
            const args = argsOrState as EndpointArgs | undefined;
            if ((!args || args.endpointType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointType'");
            }
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["bigpanda"] = args ? args.bigpanda : undefined;
            resourceInputs["custom"] = args ? args.custom : undefined;
            resourceInputs["datadog"] = args ? args.datadog : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["endpointType"] = args ? args.endpointType : undefined;
            resourceInputs["microsoftteams"] = args ? args.microsoftteams : undefined;
            resourceInputs["opsgenie"] = args ? args.opsgenie : undefined;
            resourceInputs["pagerduty"] = args ? args.pagerduty : undefined;
            resourceInputs["servicenow"] = args ? args.servicenow : undefined;
            resourceInputs["slack"] = args ? args.slack : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["victorops"] = args ? args.victorops : undefined;
            resourceInputs["endpointId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Endpoint.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Endpoint resources.
 */
export interface EndpointState {
    bigpanda?: pulumi.Input<inputs.EndpointBigpanda>;
    custom?: pulumi.Input<inputs.EndpointCustom>;
    datadog?: pulumi.Input<inputs.EndpointDatadog>;
    description?: pulumi.Input<string>;
    endpointId?: pulumi.Input<number>;
    endpointType?: pulumi.Input<string>;
    microsoftteams?: pulumi.Input<inputs.EndpointMicrosoftteams>;
    opsgenie?: pulumi.Input<inputs.EndpointOpsgenie>;
    pagerduty?: pulumi.Input<inputs.EndpointPagerduty>;
    servicenow?: pulumi.Input<inputs.EndpointServicenow>;
    slack?: pulumi.Input<inputs.EndpointSlack>;
    title?: pulumi.Input<string>;
    victorops?: pulumi.Input<inputs.EndpointVictorops>;
}

/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    bigpanda?: pulumi.Input<inputs.EndpointBigpanda>;
    custom?: pulumi.Input<inputs.EndpointCustom>;
    datadog?: pulumi.Input<inputs.EndpointDatadog>;
    description?: pulumi.Input<string>;
    endpointType: pulumi.Input<string>;
    microsoftteams?: pulumi.Input<inputs.EndpointMicrosoftteams>;
    opsgenie?: pulumi.Input<inputs.EndpointOpsgenie>;
    pagerduty?: pulumi.Input<inputs.EndpointPagerduty>;
    servicenow?: pulumi.Input<inputs.EndpointServicenow>;
    slack?: pulumi.Input<inputs.EndpointSlack>;
    title: pulumi.Input<string>;
    victorops?: pulumi.Input<inputs.EndpointVictorops>;
}
