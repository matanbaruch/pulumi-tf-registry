// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogShippingToken(args?: GetLogShippingTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetLogShippingTokenResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logzio:index/getLogShippingToken:getLogShippingToken", {
        "enabled": args.enabled,
        "id": args.id,
        "name": args.name,
        "tokenId": args.tokenId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogShippingToken.
 */
export interface GetLogShippingTokenArgs {
    enabled?: boolean;
    id?: string;
    name?: string;
    tokenId?: number;
}

/**
 * A collection of values returned by getLogShippingToken.
 */
export interface GetLogShippingTokenResult {
    readonly createdAt: number;
    readonly createdBy: string;
    readonly enabled?: boolean;
    readonly id: string;
    readonly name?: string;
    readonly token: string;
    readonly tokenId?: number;
    readonly updatedAt: number;
    readonly updatedBy: string;
}
export function getLogShippingTokenOutput(args?: GetLogShippingTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogShippingTokenResult> {
    return pulumi.output(args).apply((a: any) => getLogShippingToken(a, opts))
}

/**
 * A collection of arguments for invoking getLogShippingToken.
 */
export interface GetLogShippingTokenOutputArgs {
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tokenId?: pulumi.Input<number>;
}
