// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDropFilter(args?: GetDropFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetDropFilterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("logzio:index/getDropFilter:getDropFilter", {
        "dropFilterId": args.dropFilterId,
        "fieldConditions": args.fieldConditions,
        "id": args.id,
        "logType": args.logType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDropFilter.
 */
export interface GetDropFilterArgs {
    dropFilterId?: string;
    fieldConditions?: inputs.GetDropFilterFieldCondition[];
    id?: string;
    logType?: string;
}

/**
 * A collection of values returned by getDropFilter.
 */
export interface GetDropFilterResult {
    readonly active: boolean;
    readonly dropFilterId: string;
    readonly fieldConditions?: outputs.GetDropFilterFieldCondition[];
    readonly id: string;
    readonly logType: string;
}
export function getDropFilterOutput(args?: GetDropFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDropFilterResult> {
    return pulumi.output(args).apply((a: any) => getDropFilter(a, opts))
}

/**
 * A collection of arguments for invoking getDropFilter.
 */
export interface GetDropFilterOutputArgs {
    dropFilterId?: pulumi.Input<string>;
    fieldConditions?: pulumi.Input<pulumi.Input<inputs.GetDropFilterFieldConditionArgs>[]>;
    id?: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
}
