// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Subaccount extends pulumi.CustomResource {
    /**
     * Get an existing Subaccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubaccountState, opts?: pulumi.CustomResourceOptions): Subaccount {
        return new Subaccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'logzio:index/subaccount:Subaccount';

    /**
     * Returns true if the given object is an instance of Subaccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Subaccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Subaccount.__pulumiType;
    }

    public readonly accessible!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly accountId!: pulumi.Output<number>;
    public readonly accountName!: pulumi.Output<string>;
    public /*out*/ readonly accountToken!: pulumi.Output<string>;
    public readonly docSizeSetting!: pulumi.Output<boolean | undefined>;
    public readonly email!: pulumi.Output<string>;
    public readonly flexible!: pulumi.Output<boolean | undefined>;
    public readonly frequencyMinutes!: pulumi.Output<number | undefined>;
    public readonly maxDailyGb!: pulumi.Output<number | undefined>;
    public readonly reservedDailyGb!: pulumi.Output<number | undefined>;
    public readonly retentionDays!: pulumi.Output<number>;
    public readonly searchable!: pulumi.Output<boolean | undefined>;
    public readonly sharingObjectsAccounts!: pulumi.Output<number[]>;
    public readonly utilizationEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Subaccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubaccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubaccountArgs | SubaccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubaccountState | undefined;
            resourceInputs["accessible"] = state ? state.accessible : undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["accountToken"] = state ? state.accountToken : undefined;
            resourceInputs["docSizeSetting"] = state ? state.docSizeSetting : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["flexible"] = state ? state.flexible : undefined;
            resourceInputs["frequencyMinutes"] = state ? state.frequencyMinutes : undefined;
            resourceInputs["maxDailyGb"] = state ? state.maxDailyGb : undefined;
            resourceInputs["reservedDailyGb"] = state ? state.reservedDailyGb : undefined;
            resourceInputs["retentionDays"] = state ? state.retentionDays : undefined;
            resourceInputs["searchable"] = state ? state.searchable : undefined;
            resourceInputs["sharingObjectsAccounts"] = state ? state.sharingObjectsAccounts : undefined;
            resourceInputs["utilizationEnabled"] = state ? state.utilizationEnabled : undefined;
        } else {
            const args = argsOrState as SubaccountArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.retentionDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionDays'");
            }
            resourceInputs["accessible"] = args ? args.accessible : undefined;
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["docSizeSetting"] = args ? args.docSizeSetting : undefined;
            resourceInputs["email"] = args?.email ? pulumi.secret(args.email) : undefined;
            resourceInputs["flexible"] = args ? args.flexible : undefined;
            resourceInputs["frequencyMinutes"] = args ? args.frequencyMinutes : undefined;
            resourceInputs["maxDailyGb"] = args ? args.maxDailyGb : undefined;
            resourceInputs["reservedDailyGb"] = args ? args.reservedDailyGb : undefined;
            resourceInputs["retentionDays"] = args ? args.retentionDays : undefined;
            resourceInputs["searchable"] = args ? args.searchable : undefined;
            resourceInputs["sharingObjectsAccounts"] = args ? args.sharingObjectsAccounts : undefined;
            resourceInputs["utilizationEnabled"] = args ? args.utilizationEnabled : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["accountToken"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accountToken", "email"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Subaccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Subaccount resources.
 */
export interface SubaccountState {
    accessible?: pulumi.Input<boolean>;
    accountId?: pulumi.Input<number>;
    accountName?: pulumi.Input<string>;
    accountToken?: pulumi.Input<string>;
    docSizeSetting?: pulumi.Input<boolean>;
    email?: pulumi.Input<string>;
    flexible?: pulumi.Input<boolean>;
    frequencyMinutes?: pulumi.Input<number>;
    maxDailyGb?: pulumi.Input<number>;
    reservedDailyGb?: pulumi.Input<number>;
    retentionDays?: pulumi.Input<number>;
    searchable?: pulumi.Input<boolean>;
    sharingObjectsAccounts?: pulumi.Input<pulumi.Input<number>[]>;
    utilizationEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Subaccount resource.
 */
export interface SubaccountArgs {
    accessible?: pulumi.Input<boolean>;
    accountName: pulumi.Input<string>;
    docSizeSetting?: pulumi.Input<boolean>;
    email: pulumi.Input<string>;
    flexible?: pulumi.Input<boolean>;
    frequencyMinutes?: pulumi.Input<number>;
    maxDailyGb?: pulumi.Input<number>;
    reservedDailyGb?: pulumi.Input<number>;
    retentionDays: pulumi.Input<number>;
    searchable?: pulumi.Input<boolean>;
    sharingObjectsAccounts?: pulumi.Input<pulumi.Input<number>[]>;
    utilizationEnabled?: pulumi.Input<boolean>;
}
