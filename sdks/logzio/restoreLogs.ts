// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RestoreLogs extends pulumi.CustomResource {
    /**
     * Get an existing RestoreLogs resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RestoreLogsState, opts?: pulumi.CustomResourceOptions): RestoreLogs {
        return new RestoreLogs(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'logzio:index/restoreLogs:RestoreLogs';

    /**
     * Returns true if the given object is an instance of RestoreLogs.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RestoreLogs {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestoreLogs.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<number>;
    public readonly accountName!: pulumi.Output<string>;
    public /*out*/ readonly createdAt!: pulumi.Output<number>;
    public readonly endTime!: pulumi.Output<number>;
    public /*out*/ readonly expiresAt!: pulumi.Output<number>;
    public /*out*/ readonly finishedAt!: pulumi.Output<number>;
    public /*out*/ readonly restoreOperationId!: pulumi.Output<number>;
    public /*out*/ readonly restoredVolumeGb!: pulumi.Output<number>;
    public readonly startTime!: pulumi.Output<number>;
    public /*out*/ readonly startedAt!: pulumi.Output<number>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a RestoreLogs resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestoreLogsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RestoreLogsArgs | RestoreLogsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RestoreLogsState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["expiresAt"] = state ? state.expiresAt : undefined;
            resourceInputs["finishedAt"] = state ? state.finishedAt : undefined;
            resourceInputs["restoreOperationId"] = state ? state.restoreOperationId : undefined;
            resourceInputs["restoredVolumeGb"] = state ? state.restoredVolumeGb : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["startedAt"] = state ? state.startedAt : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as RestoreLogsArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.endTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["expiresAt"] = undefined /*out*/;
            resourceInputs["finishedAt"] = undefined /*out*/;
            resourceInputs["restoreOperationId"] = undefined /*out*/;
            resourceInputs["restoredVolumeGb"] = undefined /*out*/;
            resourceInputs["startedAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RestoreLogs.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RestoreLogs resources.
 */
export interface RestoreLogsState {
    accountId?: pulumi.Input<number>;
    accountName?: pulumi.Input<string>;
    createdAt?: pulumi.Input<number>;
    endTime?: pulumi.Input<number>;
    expiresAt?: pulumi.Input<number>;
    finishedAt?: pulumi.Input<number>;
    restoreOperationId?: pulumi.Input<number>;
    restoredVolumeGb?: pulumi.Input<number>;
    startTime?: pulumi.Input<number>;
    startedAt?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RestoreLogs resource.
 */
export interface RestoreLogsArgs {
    accountName: pulumi.Input<string>;
    endTime: pulumi.Input<number>;
    startTime: pulumi.Input<number>;
    username: pulumi.Input<string>;
}
