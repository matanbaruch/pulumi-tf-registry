// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSubnet(args?: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("orion:index/getSubnet:getSubnet", {
        "address": args.address,
        "id": args.id,
        "vlan": args.vlan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    address?: string;
    id?: string;
    vlan?: string;
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly address?: string;
    readonly addressMask: string;
    readonly availableCount: string;
    readonly cidr: number;
    readonly displayName: string;
    readonly id: string;
    readonly name: string;
    readonly reserved: string;
    readonly reservedCount: string;
    readonly totalCount: string;
    readonly transientCount: string;
    readonly usedCount: string;
    readonly vlan?: string;
}
export function getSubnetOutput(args?: GetSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetResult> {
    return pulumi.output(args).apply((a: any) => getSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    address?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    vlan?: pulumi.Input<string>;
}
