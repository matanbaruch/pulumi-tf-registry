// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemSnifferprofile extends pulumi.CustomResource {
    /**
     * Get an existing SystemSnifferprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSnifferprofileState, opts?: pulumi.CustomResourceOptions): SystemSnifferprofile {
        return new SystemSnifferprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/systemSnifferprofile:SystemSnifferprofile';

    /**
     * Returns true if the given object is an instance of SystemSnifferprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSnifferprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSnifferprofile.__pulumiType;
    }

    public readonly filter!: pulumi.Output<string>;
    public readonly maxPktCount!: pulumi.Output<number>;
    public readonly maxPktLen!: pulumi.Output<number>;
    public readonly profileName!: pulumi.Output<string>;
    public readonly switchInterface!: pulumi.Output<string>;
    public readonly systemInterface!: pulumi.Output<string>;

    /**
     * Create a SystemSnifferprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSnifferprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSnifferprofileArgs | SystemSnifferprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSnifferprofileState | undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["maxPktCount"] = state ? state.maxPktCount : undefined;
            resourceInputs["maxPktLen"] = state ? state.maxPktLen : undefined;
            resourceInputs["profileName"] = state ? state.profileName : undefined;
            resourceInputs["switchInterface"] = state ? state.switchInterface : undefined;
            resourceInputs["systemInterface"] = state ? state.systemInterface : undefined;
        } else {
            const args = argsOrState as SystemSnifferprofileArgs | undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["maxPktCount"] = args ? args.maxPktCount : undefined;
            resourceInputs["maxPktLen"] = args ? args.maxPktLen : undefined;
            resourceInputs["profileName"] = args ? args.profileName : undefined;
            resourceInputs["switchInterface"] = args ? args.switchInterface : undefined;
            resourceInputs["systemInterface"] = args ? args.systemInterface : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSnifferprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemSnifferprofile resources.
 */
export interface SystemSnifferprofileState {
    filter?: pulumi.Input<string>;
    maxPktCount?: pulumi.Input<number>;
    maxPktLen?: pulumi.Input<number>;
    profileName?: pulumi.Input<string>;
    switchInterface?: pulumi.Input<string>;
    systemInterface?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemSnifferprofile resource.
 */
export interface SystemSnifferprofileArgs {
    filter?: pulumi.Input<string>;
    maxPktCount?: pulumi.Input<number>;
    maxPktLen?: pulumi.Input<number>;
    profileName?: pulumi.Input<string>;
    switchInterface?: pulumi.Input<string>;
    systemInterface?: pulumi.Input<string>;
}
