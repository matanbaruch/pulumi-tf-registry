// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemInterface(args: GetSystemInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getSystemInterface:getSystemInterface", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemInterface.
 */
export interface GetSystemInterfaceArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getSystemInterface.
 */
export interface GetSystemInterfaceResult {
    readonly alias: string;
    readonly allowaccess: string;
    readonly authType: string;
    readonly bfd: string;
    readonly bfdDesiredMinTx: number;
    readonly bfdDetectMult: number;
    readonly bfdRequiredMinRx: number;
    readonly cliConnStatus: string;
    readonly defaultgw: string;
    readonly description: string;
    readonly detectprotocol: string;
    readonly detectserver: string;
    readonly dhcpClientIdentifier: string;
    readonly dhcpClientStatus: string;
    readonly dhcpExpire: number;
    readonly dhcpRelayIp: string;
    readonly dhcpRelayOption82: string;
    readonly dhcpRelayService: string;
    readonly dhcpVendorSpecificOption: string;
    readonly distance: number;
    readonly dnsServerOverride: string;
    readonly dynamicDns1: string;
    readonly dynamicDns2: string;
    readonly dynamicgw: string;
    readonly forwardDomain: number;
    readonly gwdetect: string;
    readonly haPriority: number;
    readonly icmpRedirect: string;
    readonly id: string;
    readonly interface: string;
    readonly ip: string;
    readonly ipv6s: outputs.GetSystemInterfaceIpv6[];
    readonly l2Interface: string;
    readonly macaddr: string;
    readonly mode: string;
    readonly mtu: number;
    readonly mtuOverride: string;
    readonly name: string;
    readonly pingServStatus: number;
    readonly priority: number;
    readonly remoteIp: string;
    readonly secondaryIp: string;
    readonly secondaryips: outputs.GetSystemInterfaceSecondaryip[];
    readonly snmpIndex: number;
    readonly speed: string;
    readonly srcCheck: string;
    readonly srcCheckAllowDefault: string;
    readonly status: string;
    readonly switch: string;
    readonly switchMembers: outputs.GetSystemInterfaceSwitchMember[];
    readonly type: string;
    readonly vdom: string;
    readonly vlanforward: string;
    readonly vlanid: number;
    readonly vrf: string;
    readonly vrrpVirtualMac: string;
    readonly vrrps: outputs.GetSystemInterfaceVrrp[];
    readonly weight: number;
}
export function getSystemInterfaceOutput(args: GetSystemInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getSystemInterface(a, opts))
}

/**
 * A collection of arguments for invoking getSystemInterface.
 */
export interface GetSystemInterfaceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
