// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemcertificateLocal extends pulumi.CustomResource {
    /**
     * Get an existing SystemcertificateLocal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemcertificateLocalState, opts?: pulumi.CustomResourceOptions): SystemcertificateLocal {
        return new SystemcertificateLocal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/systemcertificateLocal:SystemcertificateLocal';

    /**
     * Returns true if the given object is an instance of SystemcertificateLocal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemcertificateLocal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemcertificateLocal.__pulumiType;
    }

    public readonly autoRegenerateDays!: pulumi.Output<number>;
    public readonly autoRegenerateDaysWarning!: pulumi.Output<number>;
    public readonly certificate!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string>;
    public readonly csr!: pulumi.Output<string>;
    public readonly info!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameEncoding!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly privateKey!: pulumi.Output<string>;
    public readonly scepPassword!: pulumi.Output<string | undefined>;
    public readonly scepUrl!: pulumi.Output<string>;

    /**
     * Create a SystemcertificateLocal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemcertificateLocalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemcertificateLocalArgs | SystemcertificateLocalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemcertificateLocalState | undefined;
            resourceInputs["autoRegenerateDays"] = state ? state.autoRegenerateDays : undefined;
            resourceInputs["autoRegenerateDaysWarning"] = state ? state.autoRegenerateDaysWarning : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["csr"] = state ? state.csr : undefined;
            resourceInputs["info"] = state ? state.info : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameEncoding"] = state ? state.nameEncoding : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["scepPassword"] = state ? state.scepPassword : undefined;
            resourceInputs["scepUrl"] = state ? state.scepUrl : undefined;
        } else {
            const args = argsOrState as SystemcertificateLocalArgs | undefined;
            resourceInputs["autoRegenerateDays"] = args ? args.autoRegenerateDays : undefined;
            resourceInputs["autoRegenerateDaysWarning"] = args ? args.autoRegenerateDaysWarning : undefined;
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["csr"] = args ? args.csr : undefined;
            resourceInputs["info"] = args ? args.info : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameEncoding"] = args ? args.nameEncoding : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["scepPassword"] = args ? args.scepPassword : undefined;
            resourceInputs["scepUrl"] = args ? args.scepUrl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemcertificateLocal.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemcertificateLocal resources.
 */
export interface SystemcertificateLocalState {
    autoRegenerateDays?: pulumi.Input<number>;
    autoRegenerateDaysWarning?: pulumi.Input<number>;
    certificate?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    csr?: pulumi.Input<string>;
    info?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameEncoding?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    scepPassword?: pulumi.Input<string>;
    scepUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemcertificateLocal resource.
 */
export interface SystemcertificateLocalArgs {
    autoRegenerateDays?: pulumi.Input<number>;
    autoRegenerateDaysWarning?: pulumi.Input<number>;
    certificate?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    csr?: pulumi.Input<string>;
    info?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameEncoding?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    scepPassword?: pulumi.Input<string>;
    scepUrl?: pulumi.Input<string>;
}
