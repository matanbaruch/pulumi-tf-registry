// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchqosDot1pmap extends pulumi.CustomResource {
    /**
     * Get an existing SwitchqosDot1pmap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchqosDot1pmapState, opts?: pulumi.CustomResourceOptions): SwitchqosDot1pmap {
        return new SwitchqosDot1pmap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/switchqosDot1pmap:SwitchqosDot1pmap';

    /**
     * Returns true if the given object is an instance of SwitchqosDot1pmap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchqosDot1pmap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchqosDot1pmap.__pulumiType;
    }

    public readonly description!: pulumi.Output<string>;
    public readonly egressPriTagging!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly priority0!: pulumi.Output<string>;
    public readonly priority1!: pulumi.Output<string>;
    public readonly priority2!: pulumi.Output<string>;
    public readonly priority3!: pulumi.Output<string>;
    public readonly priority4!: pulumi.Output<string>;
    public readonly priority5!: pulumi.Output<string>;
    public readonly priority6!: pulumi.Output<string>;
    public readonly priority7!: pulumi.Output<string>;

    /**
     * Create a SwitchqosDot1pmap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchqosDot1pmapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchqosDot1pmapArgs | SwitchqosDot1pmapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchqosDot1pmapState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["egressPriTagging"] = state ? state.egressPriTagging : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority0"] = state ? state.priority0 : undefined;
            resourceInputs["priority1"] = state ? state.priority1 : undefined;
            resourceInputs["priority2"] = state ? state.priority2 : undefined;
            resourceInputs["priority3"] = state ? state.priority3 : undefined;
            resourceInputs["priority4"] = state ? state.priority4 : undefined;
            resourceInputs["priority5"] = state ? state.priority5 : undefined;
            resourceInputs["priority6"] = state ? state.priority6 : undefined;
            resourceInputs["priority7"] = state ? state.priority7 : undefined;
        } else {
            const args = argsOrState as SwitchqosDot1pmapArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["egressPriTagging"] = args ? args.egressPriTagging : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority0"] = args ? args.priority0 : undefined;
            resourceInputs["priority1"] = args ? args.priority1 : undefined;
            resourceInputs["priority2"] = args ? args.priority2 : undefined;
            resourceInputs["priority3"] = args ? args.priority3 : undefined;
            resourceInputs["priority4"] = args ? args.priority4 : undefined;
            resourceInputs["priority5"] = args ? args.priority5 : undefined;
            resourceInputs["priority6"] = args ? args.priority6 : undefined;
            resourceInputs["priority7"] = args ? args.priority7 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchqosDot1pmap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchqosDot1pmap resources.
 */
export interface SwitchqosDot1pmapState {
    description?: pulumi.Input<string>;
    egressPriTagging?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priority0?: pulumi.Input<string>;
    priority1?: pulumi.Input<string>;
    priority2?: pulumi.Input<string>;
    priority3?: pulumi.Input<string>;
    priority4?: pulumi.Input<string>;
    priority5?: pulumi.Input<string>;
    priority6?: pulumi.Input<string>;
    priority7?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchqosDot1pmap resource.
 */
export interface SwitchqosDot1pmapArgs {
    description?: pulumi.Input<string>;
    egressPriTagging?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priority0?: pulumi.Input<string>;
    priority1?: pulumi.Input<string>;
    priority2?: pulumi.Input<string>;
    priority3?: pulumi.Input<string>;
    priority4?: pulumi.Input<string>;
    priority5?: pulumi.Input<string>;
    priority6?: pulumi.Input<string>;
    priority7?: pulumi.Input<string>;
}
