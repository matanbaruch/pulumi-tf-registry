// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterOspf6 extends pulumi.CustomResource {
    /**
     * Get an existing RouterOspf6 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterOspf6State, opts?: pulumi.CustomResourceOptions): RouterOspf6 {
        return new RouterOspf6(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/routerOspf6:RouterOspf6';

    /**
     * Returns true if the given object is an instance of RouterOspf6.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterOspf6 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterOspf6.__pulumiType;
    }

    public readonly areas!: pulumi.Output<outputs.RouterOspf6Area[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly interfaces!: pulumi.Output<outputs.RouterOspf6Interface[] | undefined>;
    public readonly logNeighborChanges!: pulumi.Output<string>;
    public readonly redistributes!: pulumi.Output<outputs.RouterOspf6Redistribute[] | undefined>;
    public readonly routerId!: pulumi.Output<string>;
    public readonly spfTimers!: pulumi.Output<string>;

    /**
     * Create a RouterOspf6 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterOspf6Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterOspf6Args | RouterOspf6State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterOspf6State | undefined;
            resourceInputs["areas"] = state ? state.areas : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["logNeighborChanges"] = state ? state.logNeighborChanges : undefined;
            resourceInputs["redistributes"] = state ? state.redistributes : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
            resourceInputs["spfTimers"] = state ? state.spfTimers : undefined;
        } else {
            const args = argsOrState as RouterOspf6Args | undefined;
            resourceInputs["areas"] = args ? args.areas : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["logNeighborChanges"] = args ? args.logNeighborChanges : undefined;
            resourceInputs["redistributes"] = args ? args.redistributes : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
            resourceInputs["spfTimers"] = args ? args.spfTimers : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterOspf6.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterOspf6 resources.
 */
export interface RouterOspf6State {
    areas?: pulumi.Input<pulumi.Input<inputs.RouterOspf6Area>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.RouterOspf6Interface>[]>;
    logNeighborChanges?: pulumi.Input<string>;
    redistributes?: pulumi.Input<pulumi.Input<inputs.RouterOspf6Redistribute>[]>;
    routerId?: pulumi.Input<string>;
    spfTimers?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterOspf6 resource.
 */
export interface RouterOspf6Args {
    areas?: pulumi.Input<pulumi.Input<inputs.RouterOspf6Area>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.RouterOspf6Interface>[]>;
    logNeighborChanges?: pulumi.Input<string>;
    redistributes?: pulumi.Input<pulumi.Input<inputs.RouterOspf6Redistribute>[]>;
    routerId?: pulumi.Input<string>;
    spfTimers?: pulumi.Input<string>;
}
