// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemManagementtunnel(args?: GetSystemManagementtunnelArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemManagementtunnelResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getSystemManagementtunnel:getSystemManagementtunnel", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemManagementtunnel.
 */
export interface GetSystemManagementtunnelArgs {
    id?: string;
}

/**
 * A collection of values returned by getSystemManagementtunnel.
 */
export interface GetSystemManagementtunnelResult {
    readonly allowCollectStatistics: string;
    readonly allowConfigRestore: string;
    readonly allowPushConfiguration: string;
    readonly allowPushFirmware: string;
    readonly authorizedManagerOnly: string;
    readonly id: string;
    readonly serialNumber: string;
    readonly status: string;
}
export function getSystemManagementtunnelOutput(args?: GetSystemManagementtunnelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemManagementtunnelResult> {
    return pulumi.output(args).apply((a: any) => getSystemManagementtunnel(a, opts))
}

/**
 * A collection of arguments for invoking getSystemManagementtunnel.
 */
export interface GetSystemManagementtunnelOutputArgs {
    id?: pulumi.Input<string>;
}
