// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterSetting(args?: GetRouterSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterSettingResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getRouterSetting:getRouterSetting", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterSetting.
 */
export interface GetRouterSettingArgs {
    id?: string;
}

/**
 * A collection of values returned by getRouterSetting.
 */
export interface GetRouterSettingResult {
    readonly filterLists: outputs.GetRouterSettingFilterList[];
    readonly hostname: string;
    readonly id: string;
}
export function getRouterSettingOutput(args?: GetRouterSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterSettingResult> {
    return pulumi.output(args).apply((a: any) => getRouterSetting(a, opts))
}

/**
 * A collection of arguments for invoking getRouterSetting.
 */
export interface GetRouterSettingOutputArgs {
    id?: pulumi.Input<string>;
}
