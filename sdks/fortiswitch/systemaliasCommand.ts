// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemaliasCommand extends pulumi.CustomResource {
    /**
     * Get an existing SystemaliasCommand resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemaliasCommandState, opts?: pulumi.CustomResourceOptions): SystemaliasCommand {
        return new SystemaliasCommand(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/systemaliasCommand:SystemaliasCommand';

    /**
     * Returns true if the given object is an instance of SystemaliasCommand.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemaliasCommand {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemaliasCommand.__pulumiType;
    }

    public readonly attribute!: pulumi.Output<string>;
    public readonly command!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly limitShownAttributes!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly path!: pulumi.Output<string>;
    public readonly permission!: pulumi.Output<string>;
    public readonly readOnlyAttributes!: pulumi.Output<outputs.SystemaliasCommandReadOnlyAttribute[] | undefined>;
    public readonly scriptArguments!: pulumi.Output<outputs.SystemaliasCommandScriptArgument[] | undefined>;
    public readonly tableEntryCreate!: pulumi.Output<string>;
    public readonly tableIdsAlloweds!: pulumi.Output<outputs.SystemaliasCommandTableIdsAllowed[] | undefined>;
    public readonly tableListing!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a SystemaliasCommand resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemaliasCommandArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemaliasCommandArgs | SystemaliasCommandState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemaliasCommandState | undefined;
            resourceInputs["attribute"] = state ? state.attribute : undefined;
            resourceInputs["command"] = state ? state.command : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["limitShownAttributes"] = state ? state.limitShownAttributes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["permission"] = state ? state.permission : undefined;
            resourceInputs["readOnlyAttributes"] = state ? state.readOnlyAttributes : undefined;
            resourceInputs["scriptArguments"] = state ? state.scriptArguments : undefined;
            resourceInputs["tableEntryCreate"] = state ? state.tableEntryCreate : undefined;
            resourceInputs["tableIdsAlloweds"] = state ? state.tableIdsAlloweds : undefined;
            resourceInputs["tableListing"] = state ? state.tableListing : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SystemaliasCommandArgs | undefined;
            resourceInputs["attribute"] = args ? args.attribute : undefined;
            resourceInputs["command"] = args ? args.command : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["limitShownAttributes"] = args ? args.limitShownAttributes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["permission"] = args ? args.permission : undefined;
            resourceInputs["readOnlyAttributes"] = args ? args.readOnlyAttributes : undefined;
            resourceInputs["scriptArguments"] = args ? args.scriptArguments : undefined;
            resourceInputs["tableEntryCreate"] = args ? args.tableEntryCreate : undefined;
            resourceInputs["tableIdsAlloweds"] = args ? args.tableIdsAlloweds : undefined;
            resourceInputs["tableListing"] = args ? args.tableListing : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemaliasCommand.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemaliasCommand resources.
 */
export interface SystemaliasCommandState {
    attribute?: pulumi.Input<string>;
    command?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    limitShownAttributes?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    permission?: pulumi.Input<string>;
    readOnlyAttributes?: pulumi.Input<pulumi.Input<inputs.SystemaliasCommandReadOnlyAttribute>[]>;
    scriptArguments?: pulumi.Input<pulumi.Input<inputs.SystemaliasCommandScriptArgument>[]>;
    tableEntryCreate?: pulumi.Input<string>;
    tableIdsAlloweds?: pulumi.Input<pulumi.Input<inputs.SystemaliasCommandTableIdsAllowed>[]>;
    tableListing?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemaliasCommand resource.
 */
export interface SystemaliasCommandArgs {
    attribute?: pulumi.Input<string>;
    command?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    limitShownAttributes?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    permission?: pulumi.Input<string>;
    readOnlyAttributes?: pulumi.Input<pulumi.Input<inputs.SystemaliasCommandReadOnlyAttribute>[]>;
    scriptArguments?: pulumi.Input<pulumi.Input<inputs.SystemaliasCommandScriptArgument>[]>;
    tableEntryCreate?: pulumi.Input<string>;
    tableIdsAlloweds?: pulumi.Input<pulumi.Input<inputs.SystemaliasCommandTableIdsAllowed>[]>;
    tableListing?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
