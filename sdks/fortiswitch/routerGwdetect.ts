// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterGwdetect extends pulumi.CustomResource {
    /**
     * Get an existing RouterGwdetect resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterGwdetectState, opts?: pulumi.CustomResourceOptions): RouterGwdetect {
        return new RouterGwdetect(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/routerGwdetect:RouterGwdetect';

    /**
     * Returns true if the given object is an instance of RouterGwdetect.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterGwdetect {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterGwdetect.__pulumiType;
    }

    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly failtime!: pulumi.Output<number>;
    public readonly haPriority!: pulumi.Output<number>;
    public readonly interface!: pulumi.Output<string>;
    public readonly interval!: pulumi.Output<number>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly servers!: pulumi.Output<outputs.RouterGwdetectServer[] | undefined>;
    public readonly sourceIp!: pulumi.Output<string>;
    public readonly status!: pulumi.Output<number>;

    /**
     * Create a RouterGwdetect resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterGwdetectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterGwdetectArgs | RouterGwdetectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterGwdetectState | undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["failtime"] = state ? state.failtime : undefined;
            resourceInputs["haPriority"] = state ? state.haPriority : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interval"] = state ? state.interval : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as RouterGwdetectArgs | undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["failtime"] = args ? args.failtime : undefined;
            resourceInputs["haPriority"] = args ? args.haPriority : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interval"] = args ? args.interval : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterGwdetect.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterGwdetect resources.
 */
export interface RouterGwdetectState {
    dynamicSortSubtable?: pulumi.Input<string>;
    failtime?: pulumi.Input<number>;
    haPriority?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.RouterGwdetectServer>[]>;
    sourceIp?: pulumi.Input<string>;
    status?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RouterGwdetect resource.
 */
export interface RouterGwdetectArgs {
    dynamicSortSubtable?: pulumi.Input<string>;
    failtime?: pulumi.Input<number>;
    haPriority?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.RouterGwdetectServer>[]>;
    sourceIp?: pulumi.Input<string>;
    status?: pulumi.Input<number>;
}
