// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterIsis(args?: GetRouterIsisArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterIsisResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getRouterIsis:getRouterIsis", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterIsis.
 */
export interface GetRouterIsisArgs {
    id?: string;
}

/**
 * A collection of values returned by getRouterIsis.
 */
export interface GetRouterIsisResult {
    readonly authKeychainArea: string;
    readonly authKeychainDomain: string;
    readonly authModeArea: string;
    readonly authModeDomain: string;
    readonly authPasswordArea: string;
    readonly authPasswordDomain: string;
    readonly authSendonlyArea: string;
    readonly authSendonlyDomain: string;
    readonly defaultInformationLevel: string;
    readonly defaultInformationLevel6: string;
    readonly defaultInformationMetric: number;
    readonly defaultInformationMetric6: number;
    readonly defaultInformationOriginate: string;
    readonly defaultInformationOriginate6: string;
    readonly id: string;
    readonly ignoreAttachedBit: string;
    readonly interfaces: outputs.GetRouterIsisInterface[];
    readonly isType: string;
    readonly logNeighbourChanges: string;
    readonly lspGenIntervalL1: number;
    readonly lspGenIntervalL2: number;
    readonly lspRefreshInterval: number;
    readonly maxLspLifetime: number;
    readonly metricStyle: string;
    readonly nets: outputs.GetRouterIsisNet[];
    readonly overloadBit: string;
    readonly redistribute6L1: string;
    readonly redistribute6L1List: string;
    readonly redistribute6s: outputs.GetRouterIsisRedistribute6[];
    readonly redistributeL1: string;
    readonly redistributeL1List: string;
    readonly redistributes: outputs.GetRouterIsisRedistribute[];
    readonly routerId: string;
    readonly spfIntervalExpL1: number;
    readonly spfIntervalExpL2: number;
    readonly summaryAddress6s: outputs.GetRouterIsisSummaryAddress6[];
    readonly summaryAddresses: outputs.GetRouterIsisSummaryAddress[];
}
export function getRouterIsisOutput(args?: GetRouterIsisOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterIsisResult> {
    return pulumi.output(args).apply((a: any) => getRouterIsis(a, opts))
}

/**
 * A collection of arguments for invoking getRouterIsis.
 */
export interface GetRouterIsisOutputArgs {
    id?: pulumi.Input<string>;
}
