// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemAccprofile extends pulumi.CustomResource {
    /**
     * Get an existing SystemAccprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAccprofileState, opts?: pulumi.CustomResourceOptions): SystemAccprofile {
        return new SystemAccprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/systemAccprofile:SystemAccprofile';

    /**
     * Returns true if the given object is an instance of SystemAccprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAccprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAccprofile.__pulumiType;
    }

    public readonly admingrp!: pulumi.Output<string>;
    public readonly aliasCommands!: pulumi.Output<outputs.SystemAccprofileAliasCommand[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly execAliasGrp!: pulumi.Output<string>;
    public readonly loggrp!: pulumi.Output<string>;
    public readonly mntgrp!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly netgrp!: pulumi.Output<string>;
    public readonly pktmongrp!: pulumi.Output<string>;
    public readonly routegrp!: pulumi.Output<string>;
    public readonly swcoregrp!: pulumi.Output<string>;
    public readonly swmonguardgrp!: pulumi.Output<string>;
    public readonly sysgrp!: pulumi.Output<string>;
    public readonly utilgrp!: pulumi.Output<string>;

    /**
     * Create a SystemAccprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAccprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAccprofileArgs | SystemAccprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAccprofileState | undefined;
            resourceInputs["admingrp"] = state ? state.admingrp : undefined;
            resourceInputs["aliasCommands"] = state ? state.aliasCommands : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["execAliasGrp"] = state ? state.execAliasGrp : undefined;
            resourceInputs["loggrp"] = state ? state.loggrp : undefined;
            resourceInputs["mntgrp"] = state ? state.mntgrp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netgrp"] = state ? state.netgrp : undefined;
            resourceInputs["pktmongrp"] = state ? state.pktmongrp : undefined;
            resourceInputs["routegrp"] = state ? state.routegrp : undefined;
            resourceInputs["swcoregrp"] = state ? state.swcoregrp : undefined;
            resourceInputs["swmonguardgrp"] = state ? state.swmonguardgrp : undefined;
            resourceInputs["sysgrp"] = state ? state.sysgrp : undefined;
            resourceInputs["utilgrp"] = state ? state.utilgrp : undefined;
        } else {
            const args = argsOrState as SystemAccprofileArgs | undefined;
            resourceInputs["admingrp"] = args ? args.admingrp : undefined;
            resourceInputs["aliasCommands"] = args ? args.aliasCommands : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["execAliasGrp"] = args ? args.execAliasGrp : undefined;
            resourceInputs["loggrp"] = args ? args.loggrp : undefined;
            resourceInputs["mntgrp"] = args ? args.mntgrp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netgrp"] = args ? args.netgrp : undefined;
            resourceInputs["pktmongrp"] = args ? args.pktmongrp : undefined;
            resourceInputs["routegrp"] = args ? args.routegrp : undefined;
            resourceInputs["swcoregrp"] = args ? args.swcoregrp : undefined;
            resourceInputs["swmonguardgrp"] = args ? args.swmonguardgrp : undefined;
            resourceInputs["sysgrp"] = args ? args.sysgrp : undefined;
            resourceInputs["utilgrp"] = args ? args.utilgrp : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemAccprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemAccprofile resources.
 */
export interface SystemAccprofileState {
    admingrp?: pulumi.Input<string>;
    aliasCommands?: pulumi.Input<pulumi.Input<inputs.SystemAccprofileAliasCommand>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    execAliasGrp?: pulumi.Input<string>;
    loggrp?: pulumi.Input<string>;
    mntgrp?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netgrp?: pulumi.Input<string>;
    pktmongrp?: pulumi.Input<string>;
    routegrp?: pulumi.Input<string>;
    swcoregrp?: pulumi.Input<string>;
    swmonguardgrp?: pulumi.Input<string>;
    sysgrp?: pulumi.Input<string>;
    utilgrp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemAccprofile resource.
 */
export interface SystemAccprofileArgs {
    admingrp?: pulumi.Input<string>;
    aliasCommands?: pulumi.Input<pulumi.Input<inputs.SystemAccprofileAliasCommand>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    execAliasGrp?: pulumi.Input<string>;
    loggrp?: pulumi.Input<string>;
    mntgrp?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netgrp?: pulumi.Input<string>;
    pktmongrp?: pulumi.Input<string>;
    routegrp?: pulumi.Input<string>;
    swcoregrp?: pulumi.Input<string>;
    swmonguardgrp?: pulumi.Input<string>;
    sysgrp?: pulumi.Input<string>;
    utilgrp?: pulumi.Input<string>;
}
