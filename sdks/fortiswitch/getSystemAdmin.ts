// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemAdmin(args: GetSystemAdminArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemAdminResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getSystemAdmin:getSystemAdmin", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemAdmin.
 */
export interface GetSystemAdminArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getSystemAdmin.
 */
export interface GetSystemAdminResult {
    readonly accprofile: string;
    readonly accprofileOverride: string;
    readonly allowRemoveAdminSession: string;
    readonly comments: string;
    readonly forcePasswordChange: string;
    readonly hidden: number;
    readonly id: string;
    readonly ip6Trusthost1: string;
    readonly ip6Trusthost10: string;
    readonly ip6Trusthost2: string;
    readonly ip6Trusthost3: string;
    readonly ip6Trusthost4: string;
    readonly ip6Trusthost5: string;
    readonly ip6Trusthost6: string;
    readonly ip6Trusthost7: string;
    readonly ip6Trusthost8: string;
    readonly ip6Trusthost9: string;
    readonly isAdmin: number;
    readonly name: string;
    readonly password: string;
    readonly passwordExpire: string;
    readonly peerAuth: string;
    readonly peerGroup: string;
    readonly remoteAuth: string;
    readonly remoteGroup: string;
    readonly schedule: string;
    readonly sshPublicKey1: string;
    readonly sshPublicKey2: string;
    readonly sshPublicKey3: string;
    readonly trusthost1: string;
    readonly trusthost10: string;
    readonly trusthost2: string;
    readonly trusthost3: string;
    readonly trusthost4: string;
    readonly trusthost5: string;
    readonly trusthost6: string;
    readonly trusthost7: string;
    readonly trusthost8: string;
    readonly trusthost9: string;
    readonly vdom: string;
    readonly wildcard: string;
    readonly wildcardFallback: string;
}
export function getSystemAdminOutput(args: GetSystemAdminOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemAdminResult> {
    return pulumi.output(args).apply((a: any) => getSystemAdmin(a, opts))
}

/**
 * A collection of arguments for invoking getSystemAdmin.
 */
export interface GetSystemAdminOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
