// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterIsis extends pulumi.CustomResource {
    /**
     * Get an existing RouterIsis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterIsisState, opts?: pulumi.CustomResourceOptions): RouterIsis {
        return new RouterIsis(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/routerIsis:RouterIsis';

    /**
     * Returns true if the given object is an instance of RouterIsis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterIsis {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterIsis.__pulumiType;
    }

    public readonly authKeychainArea!: pulumi.Output<string>;
    public readonly authKeychainDomain!: pulumi.Output<string>;
    public readonly authModeArea!: pulumi.Output<string>;
    public readonly authModeDomain!: pulumi.Output<string>;
    public readonly authPasswordArea!: pulumi.Output<string | undefined>;
    public readonly authPasswordDomain!: pulumi.Output<string | undefined>;
    public readonly authSendonlyArea!: pulumi.Output<string>;
    public readonly authSendonlyDomain!: pulumi.Output<string>;
    public readonly defaultInformationLevel!: pulumi.Output<string>;
    public readonly defaultInformationLevel6!: pulumi.Output<string>;
    public readonly defaultInformationMetric!: pulumi.Output<number>;
    public readonly defaultInformationMetric6!: pulumi.Output<number>;
    public readonly defaultInformationOriginate!: pulumi.Output<string>;
    public readonly defaultInformationOriginate6!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly ignoreAttachedBit!: pulumi.Output<string>;
    public readonly interfaces!: pulumi.Output<outputs.RouterIsisInterface[] | undefined>;
    public readonly isType!: pulumi.Output<string>;
    public readonly logNeighbourChanges!: pulumi.Output<string>;
    public readonly lspGenIntervalL1!: pulumi.Output<number>;
    public readonly lspGenIntervalL2!: pulumi.Output<number>;
    public readonly lspRefreshInterval!: pulumi.Output<number>;
    public readonly maxLspLifetime!: pulumi.Output<number>;
    public readonly metricStyle!: pulumi.Output<string>;
    public readonly nets!: pulumi.Output<outputs.RouterIsisNet[] | undefined>;
    public readonly overloadBit!: pulumi.Output<string>;
    public readonly redistribute6L1!: pulumi.Output<string>;
    public readonly redistribute6L1List!: pulumi.Output<string>;
    public readonly redistribute6s!: pulumi.Output<outputs.RouterIsisRedistribute6[] | undefined>;
    public readonly redistributeL1!: pulumi.Output<string>;
    public readonly redistributeL1List!: pulumi.Output<string>;
    public readonly redistributes!: pulumi.Output<outputs.RouterIsisRedistribute[] | undefined>;
    public readonly routerId!: pulumi.Output<string>;
    public readonly spfIntervalExpL1!: pulumi.Output<number>;
    public readonly spfIntervalExpL2!: pulumi.Output<number>;
    public readonly summaryAddress6s!: pulumi.Output<outputs.RouterIsisSummaryAddress6[] | undefined>;
    public readonly summaryAddresses!: pulumi.Output<outputs.RouterIsisSummaryAddress[] | undefined>;

    /**
     * Create a RouterIsis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterIsisArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterIsisArgs | RouterIsisState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterIsisState | undefined;
            resourceInputs["authKeychainArea"] = state ? state.authKeychainArea : undefined;
            resourceInputs["authKeychainDomain"] = state ? state.authKeychainDomain : undefined;
            resourceInputs["authModeArea"] = state ? state.authModeArea : undefined;
            resourceInputs["authModeDomain"] = state ? state.authModeDomain : undefined;
            resourceInputs["authPasswordArea"] = state ? state.authPasswordArea : undefined;
            resourceInputs["authPasswordDomain"] = state ? state.authPasswordDomain : undefined;
            resourceInputs["authSendonlyArea"] = state ? state.authSendonlyArea : undefined;
            resourceInputs["authSendonlyDomain"] = state ? state.authSendonlyDomain : undefined;
            resourceInputs["defaultInformationLevel"] = state ? state.defaultInformationLevel : undefined;
            resourceInputs["defaultInformationLevel6"] = state ? state.defaultInformationLevel6 : undefined;
            resourceInputs["defaultInformationMetric"] = state ? state.defaultInformationMetric : undefined;
            resourceInputs["defaultInformationMetric6"] = state ? state.defaultInformationMetric6 : undefined;
            resourceInputs["defaultInformationOriginate"] = state ? state.defaultInformationOriginate : undefined;
            resourceInputs["defaultInformationOriginate6"] = state ? state.defaultInformationOriginate6 : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ignoreAttachedBit"] = state ? state.ignoreAttachedBit : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["isType"] = state ? state.isType : undefined;
            resourceInputs["logNeighbourChanges"] = state ? state.logNeighbourChanges : undefined;
            resourceInputs["lspGenIntervalL1"] = state ? state.lspGenIntervalL1 : undefined;
            resourceInputs["lspGenIntervalL2"] = state ? state.lspGenIntervalL2 : undefined;
            resourceInputs["lspRefreshInterval"] = state ? state.lspRefreshInterval : undefined;
            resourceInputs["maxLspLifetime"] = state ? state.maxLspLifetime : undefined;
            resourceInputs["metricStyle"] = state ? state.metricStyle : undefined;
            resourceInputs["nets"] = state ? state.nets : undefined;
            resourceInputs["overloadBit"] = state ? state.overloadBit : undefined;
            resourceInputs["redistribute6L1"] = state ? state.redistribute6L1 : undefined;
            resourceInputs["redistribute6L1List"] = state ? state.redistribute6L1List : undefined;
            resourceInputs["redistribute6s"] = state ? state.redistribute6s : undefined;
            resourceInputs["redistributeL1"] = state ? state.redistributeL1 : undefined;
            resourceInputs["redistributeL1List"] = state ? state.redistributeL1List : undefined;
            resourceInputs["redistributes"] = state ? state.redistributes : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
            resourceInputs["spfIntervalExpL1"] = state ? state.spfIntervalExpL1 : undefined;
            resourceInputs["spfIntervalExpL2"] = state ? state.spfIntervalExpL2 : undefined;
            resourceInputs["summaryAddress6s"] = state ? state.summaryAddress6s : undefined;
            resourceInputs["summaryAddresses"] = state ? state.summaryAddresses : undefined;
        } else {
            const args = argsOrState as RouterIsisArgs | undefined;
            resourceInputs["authKeychainArea"] = args ? args.authKeychainArea : undefined;
            resourceInputs["authKeychainDomain"] = args ? args.authKeychainDomain : undefined;
            resourceInputs["authModeArea"] = args ? args.authModeArea : undefined;
            resourceInputs["authModeDomain"] = args ? args.authModeDomain : undefined;
            resourceInputs["authPasswordArea"] = args ? args.authPasswordArea : undefined;
            resourceInputs["authPasswordDomain"] = args ? args.authPasswordDomain : undefined;
            resourceInputs["authSendonlyArea"] = args ? args.authSendonlyArea : undefined;
            resourceInputs["authSendonlyDomain"] = args ? args.authSendonlyDomain : undefined;
            resourceInputs["defaultInformationLevel"] = args ? args.defaultInformationLevel : undefined;
            resourceInputs["defaultInformationLevel6"] = args ? args.defaultInformationLevel6 : undefined;
            resourceInputs["defaultInformationMetric"] = args ? args.defaultInformationMetric : undefined;
            resourceInputs["defaultInformationMetric6"] = args ? args.defaultInformationMetric6 : undefined;
            resourceInputs["defaultInformationOriginate"] = args ? args.defaultInformationOriginate : undefined;
            resourceInputs["defaultInformationOriginate6"] = args ? args.defaultInformationOriginate6 : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ignoreAttachedBit"] = args ? args.ignoreAttachedBit : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["isType"] = args ? args.isType : undefined;
            resourceInputs["logNeighbourChanges"] = args ? args.logNeighbourChanges : undefined;
            resourceInputs["lspGenIntervalL1"] = args ? args.lspGenIntervalL1 : undefined;
            resourceInputs["lspGenIntervalL2"] = args ? args.lspGenIntervalL2 : undefined;
            resourceInputs["lspRefreshInterval"] = args ? args.lspRefreshInterval : undefined;
            resourceInputs["maxLspLifetime"] = args ? args.maxLspLifetime : undefined;
            resourceInputs["metricStyle"] = args ? args.metricStyle : undefined;
            resourceInputs["nets"] = args ? args.nets : undefined;
            resourceInputs["overloadBit"] = args ? args.overloadBit : undefined;
            resourceInputs["redistribute6L1"] = args ? args.redistribute6L1 : undefined;
            resourceInputs["redistribute6L1List"] = args ? args.redistribute6L1List : undefined;
            resourceInputs["redistribute6s"] = args ? args.redistribute6s : undefined;
            resourceInputs["redistributeL1"] = args ? args.redistributeL1 : undefined;
            resourceInputs["redistributeL1List"] = args ? args.redistributeL1List : undefined;
            resourceInputs["redistributes"] = args ? args.redistributes : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
            resourceInputs["spfIntervalExpL1"] = args ? args.spfIntervalExpL1 : undefined;
            resourceInputs["spfIntervalExpL2"] = args ? args.spfIntervalExpL2 : undefined;
            resourceInputs["summaryAddress6s"] = args ? args.summaryAddress6s : undefined;
            resourceInputs["summaryAddresses"] = args ? args.summaryAddresses : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterIsis.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterIsis resources.
 */
export interface RouterIsisState {
    authKeychainArea?: pulumi.Input<string>;
    authKeychainDomain?: pulumi.Input<string>;
    authModeArea?: pulumi.Input<string>;
    authModeDomain?: pulumi.Input<string>;
    authPasswordArea?: pulumi.Input<string>;
    authPasswordDomain?: pulumi.Input<string>;
    authSendonlyArea?: pulumi.Input<string>;
    authSendonlyDomain?: pulumi.Input<string>;
    defaultInformationLevel?: pulumi.Input<string>;
    defaultInformationLevel6?: pulumi.Input<string>;
    defaultInformationMetric?: pulumi.Input<number>;
    defaultInformationMetric6?: pulumi.Input<number>;
    defaultInformationOriginate?: pulumi.Input<string>;
    defaultInformationOriginate6?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ignoreAttachedBit?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.RouterIsisInterface>[]>;
    isType?: pulumi.Input<string>;
    logNeighbourChanges?: pulumi.Input<string>;
    lspGenIntervalL1?: pulumi.Input<number>;
    lspGenIntervalL2?: pulumi.Input<number>;
    lspRefreshInterval?: pulumi.Input<number>;
    maxLspLifetime?: pulumi.Input<number>;
    metricStyle?: pulumi.Input<string>;
    nets?: pulumi.Input<pulumi.Input<inputs.RouterIsisNet>[]>;
    overloadBit?: pulumi.Input<string>;
    redistribute6L1?: pulumi.Input<string>;
    redistribute6L1List?: pulumi.Input<string>;
    redistribute6s?: pulumi.Input<pulumi.Input<inputs.RouterIsisRedistribute6>[]>;
    redistributeL1?: pulumi.Input<string>;
    redistributeL1List?: pulumi.Input<string>;
    redistributes?: pulumi.Input<pulumi.Input<inputs.RouterIsisRedistribute>[]>;
    routerId?: pulumi.Input<string>;
    spfIntervalExpL1?: pulumi.Input<number>;
    spfIntervalExpL2?: pulumi.Input<number>;
    summaryAddress6s?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress6>[]>;
    summaryAddresses?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress>[]>;
}

/**
 * The set of arguments for constructing a RouterIsis resource.
 */
export interface RouterIsisArgs {
    authKeychainArea?: pulumi.Input<string>;
    authKeychainDomain?: pulumi.Input<string>;
    authModeArea?: pulumi.Input<string>;
    authModeDomain?: pulumi.Input<string>;
    authPasswordArea?: pulumi.Input<string>;
    authPasswordDomain?: pulumi.Input<string>;
    authSendonlyArea?: pulumi.Input<string>;
    authSendonlyDomain?: pulumi.Input<string>;
    defaultInformationLevel?: pulumi.Input<string>;
    defaultInformationLevel6?: pulumi.Input<string>;
    defaultInformationMetric?: pulumi.Input<number>;
    defaultInformationMetric6?: pulumi.Input<number>;
    defaultInformationOriginate?: pulumi.Input<string>;
    defaultInformationOriginate6?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ignoreAttachedBit?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.RouterIsisInterface>[]>;
    isType?: pulumi.Input<string>;
    logNeighbourChanges?: pulumi.Input<string>;
    lspGenIntervalL1?: pulumi.Input<number>;
    lspGenIntervalL2?: pulumi.Input<number>;
    lspRefreshInterval?: pulumi.Input<number>;
    maxLspLifetime?: pulumi.Input<number>;
    metricStyle?: pulumi.Input<string>;
    nets?: pulumi.Input<pulumi.Input<inputs.RouterIsisNet>[]>;
    overloadBit?: pulumi.Input<string>;
    redistribute6L1?: pulumi.Input<string>;
    redistribute6L1List?: pulumi.Input<string>;
    redistribute6s?: pulumi.Input<pulumi.Input<inputs.RouterIsisRedistribute6>[]>;
    redistributeL1?: pulumi.Input<string>;
    redistributeL1List?: pulumi.Input<string>;
    redistributes?: pulumi.Input<pulumi.Input<inputs.RouterIsisRedistribute>[]>;
    routerId?: pulumi.Input<string>;
    spfIntervalExpL1?: pulumi.Input<number>;
    spfIntervalExpL2?: pulumi.Input<number>;
    summaryAddress6s?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress6>[]>;
    summaryAddresses?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress>[]>;
}
