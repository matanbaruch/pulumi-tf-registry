// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemAutomationaction(args: GetSystemAutomationactionArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemAutomationactionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getSystemAutomationaction:getSystemAutomationaction", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemAutomationaction.
 */
export interface GetSystemAutomationactionArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getSystemAutomationaction.
 */
export interface GetSystemAutomationactionResult {
    readonly accprofile: string;
    readonly actionType: string;
    readonly alicloudAccessKeyId: string;
    readonly alicloudAccessKeySecret: string;
    readonly alicloudAccountId: string;
    readonly alicloudFunction: string;
    readonly alicloudFunctionAuthorization: string;
    readonly alicloudFunctionDomain: string;
    readonly alicloudRegion: string;
    readonly alicloudService: string;
    readonly alicloudVersion: string;
    readonly awsApiId: string;
    readonly awsApiKey: string;
    readonly awsApiPath: string;
    readonly awsApiStage: string;
    readonly awsDomain: string;
    readonly awsRegion: string;
    readonly azureApiKey: string;
    readonly azureApp: string;
    readonly azureDomain: string;
    readonly azureFunction: string;
    readonly azureFunctionAuthorization: string;
    readonly emailBody: string;
    readonly emailFrom: string;
    readonly emailSubject: string;
    readonly emailTos: outputs.GetSystemAutomationactionEmailTo[];
    readonly gcpFunction: string;
    readonly gcpFunctionDomain: string;
    readonly gcpFunctionRegion: string;
    readonly gcpProject: string;
    readonly headers: outputs.GetSystemAutomationactionHeader[];
    readonly httpBody: string;
    readonly id: string;
    readonly method: string;
    readonly minimumInterval: number;
    readonly name: string;
    readonly port: number;
    readonly protocol: string;
    readonly script: string;
    readonly snmpTrap: string;
    readonly uri: string;
}
export function getSystemAutomationactionOutput(args: GetSystemAutomationactionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemAutomationactionResult> {
    return pulumi.output(args).apply((a: any) => getSystemAutomationaction(a, opts))
}

/**
 * A collection of arguments for invoking getSystemAutomationaction.
 */
export interface GetSystemAutomationactionOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
