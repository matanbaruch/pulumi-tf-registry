// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("fortiswitch");

/**
 * CA Bundle file content
 */
export declare const cabundlecontent: string | undefined;
Object.defineProperty(exports, "cabundlecontent", {
    get() {
        return __config.get("cabundlecontent");
    },
    enumerable: true,
});

/**
 * CA Bundle file
 */
export declare const cabundlefile: string | undefined;
Object.defineProperty(exports, "cabundlefile", {
    get() {
        return __config.get("cabundlefile");
    },
    enumerable: true,
});

/**
 * CA certtificate(Optional)
 */
export declare const cacert: string | undefined;
Object.defineProperty(exports, "cacert", {
    get() {
        return __config.get("cacert");
    },
    enumerable: true,
});

/**
 * User certificate
 */
export declare const clientcert: string | undefined;
Object.defineProperty(exports, "clientcert", {
    get() {
        return __config.get("clientcert");
    },
    enumerable: true,
});

/**
 * User private key
 */
export declare const clientkey: string | undefined;
Object.defineProperty(exports, "clientkey", {
    get() {
        return __config.get("clientkey");
    },
    enumerable: true,
});

/**
 * The hostname/IP address of the FortiSwitch to be connected
 */
export declare const hostname: string | undefined;
Object.defineProperty(exports, "hostname", {
    get() {
        return __config.get("hostname");
    },
    enumerable: true,
});

/**
 * HTTP proxy address
 */
export declare const httpProxy: string | undefined;
Object.defineProperty(exports, "httpProxy", {
    get() {
        return __config.get("httpProxy");
    },
    enumerable: true,
});

export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

/**
 * The password of the FortiSwitch to be connected
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Enable/disable peer authentication, can be 'enable' or 'disable'
 */
export declare const peerauth: string | undefined;
Object.defineProperty(exports, "peerauth", {
    get() {
        return __config.get("peerauth");
    },
    enumerable: true,
});

/**
 * The username of the FortiSwitch
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

