// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemFortiguard(args?: GetSystemFortiguardArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemFortiguardResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getSystemFortiguard:getSystemFortiguard", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemFortiguard.
 */
export interface GetSystemFortiguardArgs {
    id?: string;
}

/**
 * A collection of values returned by getSystemFortiguard.
 */
export interface GetSystemFortiguardResult {
    readonly analysisService: string;
    readonly antispamCache: string;
    readonly antispamCacheMpercent: number;
    readonly antispamCacheTtl: number;
    readonly antispamExpiration: number;
    readonly antispamForceOff: string;
    readonly antispamLicense: number;
    readonly antispamScoreThreshold: number;
    readonly antispamTimeout: number;
    readonly avqueryCache: string;
    readonly avqueryCacheMpercent: number;
    readonly avqueryCacheTtl: number;
    readonly avqueryExpiration: number;
    readonly avqueryForceOff: string;
    readonly avqueryLicense: number;
    readonly avqueryTimeout: number;
    readonly clientOverrideIp: string;
    readonly clientOverrideStatus: string;
    readonly hostname: string;
    readonly id: string;
    readonly loadBalanceServers: number;
    readonly port: string;
    readonly serviceAccountId: string;
    readonly srvOvrd: string;
    readonly srvOvrdLists: outputs.GetSystemFortiguardSrvOvrdList[];
    readonly webfilterCache: string;
    readonly webfilterCacheTtl: number;
    readonly webfilterExpiration: number;
    readonly webfilterForceOff: string;
    readonly webfilterLicense: number;
    readonly webfilterTimeout: number;
}
export function getSystemFortiguardOutput(args?: GetSystemFortiguardOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemFortiguardResult> {
    return pulumi.output(args).apply((a: any) => getSystemFortiguard(a, opts))
}

/**
 * A collection of arguments for invoking getSystemFortiguard.
 */
export interface GetSystemFortiguardOutputArgs {
    id?: pulumi.Input<string>;
}
