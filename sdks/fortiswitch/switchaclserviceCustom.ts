// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchaclserviceCustom extends pulumi.CustomResource {
    /**
     * Get an existing SwitchaclserviceCustom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchaclserviceCustomState, opts?: pulumi.CustomResourceOptions): SwitchaclserviceCustom {
        return new SwitchaclserviceCustom(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/switchaclserviceCustom:SwitchaclserviceCustom';

    /**
     * Returns true if the given object is an instance of SwitchaclserviceCustom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchaclserviceCustom {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchaclserviceCustom.__pulumiType;
    }

    public readonly color!: pulumi.Output<number>;
    public readonly comment!: pulumi.Output<string>;
    public readonly icmpcode!: pulumi.Output<number>;
    public readonly icmptype!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly protocolNumber!: pulumi.Output<number>;
    public readonly sctpPortrange!: pulumi.Output<string>;
    public readonly tcpPortrange!: pulumi.Output<string>;
    public readonly udpPortrange!: pulumi.Output<string>;

    /**
     * Create a SwitchaclserviceCustom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchaclserviceCustomArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchaclserviceCustomArgs | SwitchaclserviceCustomState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchaclserviceCustomState | undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["icmpcode"] = state ? state.icmpcode : undefined;
            resourceInputs["icmptype"] = state ? state.icmptype : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["protocolNumber"] = state ? state.protocolNumber : undefined;
            resourceInputs["sctpPortrange"] = state ? state.sctpPortrange : undefined;
            resourceInputs["tcpPortrange"] = state ? state.tcpPortrange : undefined;
            resourceInputs["udpPortrange"] = state ? state.udpPortrange : undefined;
        } else {
            const args = argsOrState as SwitchaclserviceCustomArgs | undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["icmpcode"] = args ? args.icmpcode : undefined;
            resourceInputs["icmptype"] = args ? args.icmptype : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["protocolNumber"] = args ? args.protocolNumber : undefined;
            resourceInputs["sctpPortrange"] = args ? args.sctpPortrange : undefined;
            resourceInputs["tcpPortrange"] = args ? args.tcpPortrange : undefined;
            resourceInputs["udpPortrange"] = args ? args.udpPortrange : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchaclserviceCustom.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchaclserviceCustom resources.
 */
export interface SwitchaclserviceCustomState {
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    icmpcode?: pulumi.Input<number>;
    icmptype?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<number>;
    sctpPortrange?: pulumi.Input<string>;
    tcpPortrange?: pulumi.Input<string>;
    udpPortrange?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchaclserviceCustom resource.
 */
export interface SwitchaclserviceCustomArgs {
    color?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    icmpcode?: pulumi.Input<number>;
    icmptype?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    protocolNumber?: pulumi.Input<number>;
    sctpPortrange?: pulumi.Input<string>;
    tcpPortrange?: pulumi.Input<string>;
    udpPortrange?: pulumi.Input<string>;
}
