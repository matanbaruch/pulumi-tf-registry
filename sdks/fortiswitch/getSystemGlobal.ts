// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemGlobal(args?: GetSystemGlobalArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemGlobalResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getSystemGlobal:getSystemGlobal", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemGlobal.
 */
export interface GetSystemGlobalArgs {
    id?: string;
}

/**
 * A collection of values returned by getSystemGlobal.
 */
export interface GetSystemGlobalResult {
    readonly adminConcurrent: string;
    readonly adminHttpsPkiRequired: string;
    readonly adminHttpsSslVersions: string;
    readonly adminLockoutDuration: number;
    readonly adminLockoutThreshold: number;
    readonly adminPasswordHash: string;
    readonly adminPort: number;
    readonly adminScp: string;
    readonly adminServerCert: string;
    readonly adminSport: number;
    readonly adminSshGraceTime: number;
    readonly adminSshPort: number;
    readonly adminSshV1: string;
    readonly adminTelnetPort: number;
    readonly admintimeout: number;
    readonly alertInterval: number;
    readonly alertdRelog: string;
    readonly allowSubnetOverlap: string;
    readonly arpTimeout: number;
    readonly assetTag: string;
    readonly autoIsl: string;
    readonly cfgRevertTimeout: number;
    readonly cfgSave: string;
    readonly cltCertReq: string;
    readonly csrCaAttribute: string;
    readonly dailyRestart: string;
    readonly delaycliTimeoutCleanup: number;
    readonly detectIpConflict: string;
    readonly dhParams: number;
    readonly dhcpCircuitId: string;
    readonly dhcpClientLocation: string;
    readonly dhcpOptionFormat: string;
    readonly dhcpRemoteId: string;
    readonly dhcpServerAccessList: string;
    readonly dhcpSnoopClientReq: string;
    readonly dhcpsDbExp: number;
    readonly dhcpsDbPerPortLearnLimit: number;
    readonly dst: string;
    readonly failtime: number;
    readonly fortilinkAutoDiscovery: string;
    readonly hostname: string;
    readonly id: string;
    readonly imageRotation: string;
    readonly interval: number;
    readonly ipConflictIgnoreDefault: string;
    readonly ipv6AcceptDad: number;
    readonly ipv6AllForwarding: string;
    readonly kernelCrashlog: string;
    readonly kernelDevicelog: string;
    readonly l3HostExpiry: string;
    readonly language: string;
    readonly ldapconntimeout: number;
    readonly n8021xCaCertificate: string;
    readonly n8021xCertificate: string;
    readonly postLoginBanner: string;
    readonly preLoginBanner: string;
    readonly privateDataEncryption: string;
    readonly radiusCoaPort: number;
    readonly radiusPort: number;
    readonly remoteauthtimeout: number;
    readonly restartTime: string;
    readonly revisionBackupOnLogout: string;
    readonly revisionBackupOnUpgrade: string;
    readonly strongCrypto: string;
    readonly switchMgmtMode: string;
    readonly tcp6MssMin: number;
    readonly tcpMssMin: number;
    readonly tcpOptions: string;
    readonly tftp: string;
    readonly timezone: string;
}
export function getSystemGlobalOutput(args?: GetSystemGlobalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemGlobalResult> {
    return pulumi.output(args).apply((a: any) => getSystemGlobal(a, opts))
}

/**
 * A collection of arguments for invoking getSystemGlobal.
 */
export interface GetSystemGlobalOutputArgs {
    id?: pulumi.Input<string>;
}
