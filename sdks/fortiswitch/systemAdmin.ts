// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemAdmin extends pulumi.CustomResource {
    /**
     * Get an existing SystemAdmin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAdminState, opts?: pulumi.CustomResourceOptions): SystemAdmin {
        return new SystemAdmin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/systemAdmin:SystemAdmin';

    /**
     * Returns true if the given object is an instance of SystemAdmin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAdmin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAdmin.__pulumiType;
    }

    public readonly accprofile!: pulumi.Output<string>;
    public readonly accprofileOverride!: pulumi.Output<string>;
    public readonly allowRemoveAdminSession!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string>;
    public readonly forcePasswordChange!: pulumi.Output<string>;
    public readonly hidden!: pulumi.Output<number>;
    public readonly ip6Trusthost1!: pulumi.Output<string>;
    public readonly ip6Trusthost10!: pulumi.Output<string>;
    public readonly ip6Trusthost2!: pulumi.Output<string>;
    public readonly ip6Trusthost3!: pulumi.Output<string>;
    public readonly ip6Trusthost4!: pulumi.Output<string>;
    public readonly ip6Trusthost5!: pulumi.Output<string>;
    public readonly ip6Trusthost6!: pulumi.Output<string>;
    public readonly ip6Trusthost7!: pulumi.Output<string>;
    public readonly ip6Trusthost8!: pulumi.Output<string>;
    public readonly ip6Trusthost9!: pulumi.Output<string>;
    public readonly isAdmin!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string | undefined>;
    public readonly passwordExpire!: pulumi.Output<string>;
    public readonly peerAuth!: pulumi.Output<string>;
    public readonly peerGroup!: pulumi.Output<string>;
    public readonly remoteAuth!: pulumi.Output<string>;
    public readonly remoteGroup!: pulumi.Output<string>;
    public readonly schedule!: pulumi.Output<string>;
    public readonly sshPublicKey1!: pulumi.Output<string>;
    public readonly sshPublicKey2!: pulumi.Output<string>;
    public readonly sshPublicKey3!: pulumi.Output<string>;
    public readonly trusthost1!: pulumi.Output<string>;
    public readonly trusthost10!: pulumi.Output<string>;
    public readonly trusthost2!: pulumi.Output<string>;
    public readonly trusthost3!: pulumi.Output<string>;
    public readonly trusthost4!: pulumi.Output<string>;
    public readonly trusthost5!: pulumi.Output<string>;
    public readonly trusthost6!: pulumi.Output<string>;
    public readonly trusthost7!: pulumi.Output<string>;
    public readonly trusthost8!: pulumi.Output<string>;
    public readonly trusthost9!: pulumi.Output<string>;
    public readonly vdom!: pulumi.Output<string>;
    public readonly wildcard!: pulumi.Output<string>;
    public readonly wildcardFallback!: pulumi.Output<string>;

    /**
     * Create a SystemAdmin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAdminArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAdminArgs | SystemAdminState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAdminState | undefined;
            resourceInputs["accprofile"] = state ? state.accprofile : undefined;
            resourceInputs["accprofileOverride"] = state ? state.accprofileOverride : undefined;
            resourceInputs["allowRemoveAdminSession"] = state ? state.allowRemoveAdminSession : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["forcePasswordChange"] = state ? state.forcePasswordChange : undefined;
            resourceInputs["hidden"] = state ? state.hidden : undefined;
            resourceInputs["ip6Trusthost1"] = state ? state.ip6Trusthost1 : undefined;
            resourceInputs["ip6Trusthost10"] = state ? state.ip6Trusthost10 : undefined;
            resourceInputs["ip6Trusthost2"] = state ? state.ip6Trusthost2 : undefined;
            resourceInputs["ip6Trusthost3"] = state ? state.ip6Trusthost3 : undefined;
            resourceInputs["ip6Trusthost4"] = state ? state.ip6Trusthost4 : undefined;
            resourceInputs["ip6Trusthost5"] = state ? state.ip6Trusthost5 : undefined;
            resourceInputs["ip6Trusthost6"] = state ? state.ip6Trusthost6 : undefined;
            resourceInputs["ip6Trusthost7"] = state ? state.ip6Trusthost7 : undefined;
            resourceInputs["ip6Trusthost8"] = state ? state.ip6Trusthost8 : undefined;
            resourceInputs["ip6Trusthost9"] = state ? state.ip6Trusthost9 : undefined;
            resourceInputs["isAdmin"] = state ? state.isAdmin : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordExpire"] = state ? state.passwordExpire : undefined;
            resourceInputs["peerAuth"] = state ? state.peerAuth : undefined;
            resourceInputs["peerGroup"] = state ? state.peerGroup : undefined;
            resourceInputs["remoteAuth"] = state ? state.remoteAuth : undefined;
            resourceInputs["remoteGroup"] = state ? state.remoteGroup : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["sshPublicKey1"] = state ? state.sshPublicKey1 : undefined;
            resourceInputs["sshPublicKey2"] = state ? state.sshPublicKey2 : undefined;
            resourceInputs["sshPublicKey3"] = state ? state.sshPublicKey3 : undefined;
            resourceInputs["trusthost1"] = state ? state.trusthost1 : undefined;
            resourceInputs["trusthost10"] = state ? state.trusthost10 : undefined;
            resourceInputs["trusthost2"] = state ? state.trusthost2 : undefined;
            resourceInputs["trusthost3"] = state ? state.trusthost3 : undefined;
            resourceInputs["trusthost4"] = state ? state.trusthost4 : undefined;
            resourceInputs["trusthost5"] = state ? state.trusthost5 : undefined;
            resourceInputs["trusthost6"] = state ? state.trusthost6 : undefined;
            resourceInputs["trusthost7"] = state ? state.trusthost7 : undefined;
            resourceInputs["trusthost8"] = state ? state.trusthost8 : undefined;
            resourceInputs["trusthost9"] = state ? state.trusthost9 : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["wildcard"] = state ? state.wildcard : undefined;
            resourceInputs["wildcardFallback"] = state ? state.wildcardFallback : undefined;
        } else {
            const args = argsOrState as SystemAdminArgs | undefined;
            resourceInputs["accprofile"] = args ? args.accprofile : undefined;
            resourceInputs["accprofileOverride"] = args ? args.accprofileOverride : undefined;
            resourceInputs["allowRemoveAdminSession"] = args ? args.allowRemoveAdminSession : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["forcePasswordChange"] = args ? args.forcePasswordChange : undefined;
            resourceInputs["hidden"] = args ? args.hidden : undefined;
            resourceInputs["ip6Trusthost1"] = args ? args.ip6Trusthost1 : undefined;
            resourceInputs["ip6Trusthost10"] = args ? args.ip6Trusthost10 : undefined;
            resourceInputs["ip6Trusthost2"] = args ? args.ip6Trusthost2 : undefined;
            resourceInputs["ip6Trusthost3"] = args ? args.ip6Trusthost3 : undefined;
            resourceInputs["ip6Trusthost4"] = args ? args.ip6Trusthost4 : undefined;
            resourceInputs["ip6Trusthost5"] = args ? args.ip6Trusthost5 : undefined;
            resourceInputs["ip6Trusthost6"] = args ? args.ip6Trusthost6 : undefined;
            resourceInputs["ip6Trusthost7"] = args ? args.ip6Trusthost7 : undefined;
            resourceInputs["ip6Trusthost8"] = args ? args.ip6Trusthost8 : undefined;
            resourceInputs["ip6Trusthost9"] = args ? args.ip6Trusthost9 : undefined;
            resourceInputs["isAdmin"] = args ? args.isAdmin : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["passwordExpire"] = args ? args.passwordExpire : undefined;
            resourceInputs["peerAuth"] = args ? args.peerAuth : undefined;
            resourceInputs["peerGroup"] = args ? args.peerGroup : undefined;
            resourceInputs["remoteAuth"] = args ? args.remoteAuth : undefined;
            resourceInputs["remoteGroup"] = args ? args.remoteGroup : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["sshPublicKey1"] = args ? args.sshPublicKey1 : undefined;
            resourceInputs["sshPublicKey2"] = args ? args.sshPublicKey2 : undefined;
            resourceInputs["sshPublicKey3"] = args ? args.sshPublicKey3 : undefined;
            resourceInputs["trusthost1"] = args ? args.trusthost1 : undefined;
            resourceInputs["trusthost10"] = args ? args.trusthost10 : undefined;
            resourceInputs["trusthost2"] = args ? args.trusthost2 : undefined;
            resourceInputs["trusthost3"] = args ? args.trusthost3 : undefined;
            resourceInputs["trusthost4"] = args ? args.trusthost4 : undefined;
            resourceInputs["trusthost5"] = args ? args.trusthost5 : undefined;
            resourceInputs["trusthost6"] = args ? args.trusthost6 : undefined;
            resourceInputs["trusthost7"] = args ? args.trusthost7 : undefined;
            resourceInputs["trusthost8"] = args ? args.trusthost8 : undefined;
            resourceInputs["trusthost9"] = args ? args.trusthost9 : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["wildcard"] = args ? args.wildcard : undefined;
            resourceInputs["wildcardFallback"] = args ? args.wildcardFallback : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemAdmin.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemAdmin resources.
 */
export interface SystemAdminState {
    accprofile?: pulumi.Input<string>;
    accprofileOverride?: pulumi.Input<string>;
    allowRemoveAdminSession?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    forcePasswordChange?: pulumi.Input<string>;
    hidden?: pulumi.Input<number>;
    ip6Trusthost1?: pulumi.Input<string>;
    ip6Trusthost10?: pulumi.Input<string>;
    ip6Trusthost2?: pulumi.Input<string>;
    ip6Trusthost3?: pulumi.Input<string>;
    ip6Trusthost4?: pulumi.Input<string>;
    ip6Trusthost5?: pulumi.Input<string>;
    ip6Trusthost6?: pulumi.Input<string>;
    ip6Trusthost7?: pulumi.Input<string>;
    ip6Trusthost8?: pulumi.Input<string>;
    ip6Trusthost9?: pulumi.Input<string>;
    isAdmin?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    passwordExpire?: pulumi.Input<string>;
    peerAuth?: pulumi.Input<string>;
    peerGroup?: pulumi.Input<string>;
    remoteAuth?: pulumi.Input<string>;
    remoteGroup?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    sshPublicKey1?: pulumi.Input<string>;
    sshPublicKey2?: pulumi.Input<string>;
    sshPublicKey3?: pulumi.Input<string>;
    trusthost1?: pulumi.Input<string>;
    trusthost10?: pulumi.Input<string>;
    trusthost2?: pulumi.Input<string>;
    trusthost3?: pulumi.Input<string>;
    trusthost4?: pulumi.Input<string>;
    trusthost5?: pulumi.Input<string>;
    trusthost6?: pulumi.Input<string>;
    trusthost7?: pulumi.Input<string>;
    trusthost8?: pulumi.Input<string>;
    trusthost9?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    wildcard?: pulumi.Input<string>;
    wildcardFallback?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemAdmin resource.
 */
export interface SystemAdminArgs {
    accprofile?: pulumi.Input<string>;
    accprofileOverride?: pulumi.Input<string>;
    allowRemoveAdminSession?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    forcePasswordChange?: pulumi.Input<string>;
    hidden?: pulumi.Input<number>;
    ip6Trusthost1?: pulumi.Input<string>;
    ip6Trusthost10?: pulumi.Input<string>;
    ip6Trusthost2?: pulumi.Input<string>;
    ip6Trusthost3?: pulumi.Input<string>;
    ip6Trusthost4?: pulumi.Input<string>;
    ip6Trusthost5?: pulumi.Input<string>;
    ip6Trusthost6?: pulumi.Input<string>;
    ip6Trusthost7?: pulumi.Input<string>;
    ip6Trusthost8?: pulumi.Input<string>;
    ip6Trusthost9?: pulumi.Input<string>;
    isAdmin?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    passwordExpire?: pulumi.Input<string>;
    peerAuth?: pulumi.Input<string>;
    peerGroup?: pulumi.Input<string>;
    remoteAuth?: pulumi.Input<string>;
    remoteGroup?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    sshPublicKey1?: pulumi.Input<string>;
    sshPublicKey2?: pulumi.Input<string>;
    sshPublicKey3?: pulumi.Input<string>;
    trusthost1?: pulumi.Input<string>;
    trusthost10?: pulumi.Input<string>;
    trusthost2?: pulumi.Input<string>;
    trusthost3?: pulumi.Input<string>;
    trusthost4?: pulumi.Input<string>;
    trusthost5?: pulumi.Input<string>;
    trusthost6?: pulumi.Input<string>;
    trusthost7?: pulumi.Input<string>;
    trusthost8?: pulumi.Input<string>;
    trusthost9?: pulumi.Input<string>;
    vdom?: pulumi.Input<string>;
    wildcard?: pulumi.Input<string>;
    wildcardFallback?: pulumi.Input<string>;
}
