// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SwitchmacsecProfile extends pulumi.CustomResource {
    /**
     * Get an existing SwitchmacsecProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchmacsecProfileState, opts?: pulumi.CustomResourceOptions): SwitchmacsecProfile {
        return new SwitchmacsecProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/switchmacsecProfile:SwitchmacsecProfile';

    /**
     * Returns true if the given object is an instance of SwitchmacsecProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchmacsecProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchmacsecProfile.__pulumiType;
    }

    public readonly cipherSuite!: pulumi.Output<string>;
    public readonly confidentOffset!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly eapTlsCaCert!: pulumi.Output<string>;
    public readonly eapTlsCert!: pulumi.Output<string>;
    public readonly eapTlsIdentity!: pulumi.Output<string>;
    public readonly eapTlsRadiusServer!: pulumi.Output<string>;
    public readonly encryptTraffic!: pulumi.Output<string>;
    public readonly includeMacsecSci!: pulumi.Output<string>;
    public readonly includeMkaIcvInd!: pulumi.Output<string>;
    public readonly macsecMode!: pulumi.Output<string>;
    public readonly macsecValidate!: pulumi.Output<string>;
    public readonly mkaPriority!: pulumi.Output<number>;
    public readonly mkaPsks!: pulumi.Output<outputs.SwitchmacsecProfileMkaPsk[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly replayProtect!: pulumi.Output<string>;
    public readonly replayWindow!: pulumi.Output<number>;
    public readonly status!: pulumi.Output<string>;
    public readonly trafficPolicies!: pulumi.Output<outputs.SwitchmacsecProfileTrafficPolicy[] | undefined>;

    /**
     * Create a SwitchmacsecProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchmacsecProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchmacsecProfileArgs | SwitchmacsecProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchmacsecProfileState | undefined;
            resourceInputs["cipherSuite"] = state ? state.cipherSuite : undefined;
            resourceInputs["confidentOffset"] = state ? state.confidentOffset : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["eapTlsCaCert"] = state ? state.eapTlsCaCert : undefined;
            resourceInputs["eapTlsCert"] = state ? state.eapTlsCert : undefined;
            resourceInputs["eapTlsIdentity"] = state ? state.eapTlsIdentity : undefined;
            resourceInputs["eapTlsRadiusServer"] = state ? state.eapTlsRadiusServer : undefined;
            resourceInputs["encryptTraffic"] = state ? state.encryptTraffic : undefined;
            resourceInputs["includeMacsecSci"] = state ? state.includeMacsecSci : undefined;
            resourceInputs["includeMkaIcvInd"] = state ? state.includeMkaIcvInd : undefined;
            resourceInputs["macsecMode"] = state ? state.macsecMode : undefined;
            resourceInputs["macsecValidate"] = state ? state.macsecValidate : undefined;
            resourceInputs["mkaPriority"] = state ? state.mkaPriority : undefined;
            resourceInputs["mkaPsks"] = state ? state.mkaPsks : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["replayProtect"] = state ? state.replayProtect : undefined;
            resourceInputs["replayWindow"] = state ? state.replayWindow : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["trafficPolicies"] = state ? state.trafficPolicies : undefined;
        } else {
            const args = argsOrState as SwitchmacsecProfileArgs | undefined;
            resourceInputs["cipherSuite"] = args ? args.cipherSuite : undefined;
            resourceInputs["confidentOffset"] = args ? args.confidentOffset : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["eapTlsCaCert"] = args ? args.eapTlsCaCert : undefined;
            resourceInputs["eapTlsCert"] = args ? args.eapTlsCert : undefined;
            resourceInputs["eapTlsIdentity"] = args ? args.eapTlsIdentity : undefined;
            resourceInputs["eapTlsRadiusServer"] = args ? args.eapTlsRadiusServer : undefined;
            resourceInputs["encryptTraffic"] = args ? args.encryptTraffic : undefined;
            resourceInputs["includeMacsecSci"] = args ? args.includeMacsecSci : undefined;
            resourceInputs["includeMkaIcvInd"] = args ? args.includeMkaIcvInd : undefined;
            resourceInputs["macsecMode"] = args ? args.macsecMode : undefined;
            resourceInputs["macsecValidate"] = args ? args.macsecValidate : undefined;
            resourceInputs["mkaPriority"] = args ? args.mkaPriority : undefined;
            resourceInputs["mkaPsks"] = args ? args.mkaPsks : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replayProtect"] = args ? args.replayProtect : undefined;
            resourceInputs["replayWindow"] = args ? args.replayWindow : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["trafficPolicies"] = args ? args.trafficPolicies : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchmacsecProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchmacsecProfile resources.
 */
export interface SwitchmacsecProfileState {
    cipherSuite?: pulumi.Input<string>;
    confidentOffset?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eapTlsCaCert?: pulumi.Input<string>;
    eapTlsCert?: pulumi.Input<string>;
    eapTlsIdentity?: pulumi.Input<string>;
    eapTlsRadiusServer?: pulumi.Input<string>;
    encryptTraffic?: pulumi.Input<string>;
    includeMacsecSci?: pulumi.Input<string>;
    includeMkaIcvInd?: pulumi.Input<string>;
    macsecMode?: pulumi.Input<string>;
    macsecValidate?: pulumi.Input<string>;
    mkaPriority?: pulumi.Input<number>;
    mkaPsks?: pulumi.Input<pulumi.Input<inputs.SwitchmacsecProfileMkaPsk>[]>;
    name?: pulumi.Input<string>;
    replayProtect?: pulumi.Input<string>;
    replayWindow?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    trafficPolicies?: pulumi.Input<pulumi.Input<inputs.SwitchmacsecProfileTrafficPolicy>[]>;
}

/**
 * The set of arguments for constructing a SwitchmacsecProfile resource.
 */
export interface SwitchmacsecProfileArgs {
    cipherSuite?: pulumi.Input<string>;
    confidentOffset?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    eapTlsCaCert?: pulumi.Input<string>;
    eapTlsCert?: pulumi.Input<string>;
    eapTlsIdentity?: pulumi.Input<string>;
    eapTlsRadiusServer?: pulumi.Input<string>;
    encryptTraffic?: pulumi.Input<string>;
    includeMacsecSci?: pulumi.Input<string>;
    includeMkaIcvInd?: pulumi.Input<string>;
    macsecMode?: pulumi.Input<string>;
    macsecValidate?: pulumi.Input<string>;
    mkaPriority?: pulumi.Input<number>;
    mkaPsks?: pulumi.Input<pulumi.Input<inputs.SwitchmacsecProfileMkaPsk>[]>;
    name?: pulumi.Input<string>;
    replayProtect?: pulumi.Input<string>;
    replayWindow?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    trafficPolicies?: pulumi.Input<pulumi.Input<inputs.SwitchmacsecProfileTrafficPolicy>[]>;
}
