// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRouterCommunitylist(args: GetRouterCommunitylistArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterCommunitylistResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getRouterCommunitylist:getRouterCommunitylist", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterCommunitylist.
 */
export interface GetRouterCommunitylistArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getRouterCommunitylist.
 */
export interface GetRouterCommunitylistResult {
    readonly id: string;
    readonly name: string;
    readonly rules: outputs.GetRouterCommunitylistRule[];
    readonly type: string;
}
export function getRouterCommunitylistOutput(args: GetRouterCommunitylistOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterCommunitylistResult> {
    return pulumi.output(args).apply((a: any) => getRouterCommunitylist(a, opts))
}

/**
 * A collection of arguments for invoking getRouterCommunitylist.
 */
export interface GetRouterCommunitylistOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
