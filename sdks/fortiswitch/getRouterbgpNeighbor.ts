// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRouterbgpNeighbor(args: GetRouterbgpNeighborArgs, opts?: pulumi.InvokeOptions): Promise<GetRouterbgpNeighborResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fortiswitch:index/getRouterbgpNeighbor:getRouterbgpNeighbor", {
        "id": args.id,
        "ip": args.ip,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouterbgpNeighbor.
 */
export interface GetRouterbgpNeighborArgs {
    id?: string;
    ip: string;
}

/**
 * A collection of values returned by getRouterbgpNeighbor.
 */
export interface GetRouterbgpNeighborResult {
    readonly activate: string;
    readonly activate6: string;
    readonly activateEvpn: string;
    readonly advertisementInterval: number;
    readonly allowasIn: number;
    readonly allowasIn6: number;
    readonly allowasInEnable: string;
    readonly allowasInEnable6: string;
    readonly allowasInEnableEvpn: string;
    readonly asOverride: string;
    readonly asOverride6: string;
    readonly attributeUnchanged: string;
    readonly attributeUnchanged6: string;
    readonly attributeUnchangedEvpn: string;
    readonly bfd: string;
    readonly bfdSessionMode: string;
    readonly capabilityDefaultOriginate: string;
    readonly capabilityDefaultOriginate6: string;
    readonly capabilityDynamic: string;
    readonly capabilityOrf: string;
    readonly capabilityOrf6: string;
    readonly connectTimer: number;
    readonly defaultOriginateRoutemap: string;
    readonly defaultOriginateRoutemap6: string;
    readonly description: string;
    readonly distributeListIn: string;
    readonly distributeListIn6: string;
    readonly distributeListOut: string;
    readonly distributeListOut6: string;
    readonly dontCapabilityNegotiate: string;
    readonly ebgpEnforceMultihop: string;
    readonly ebgpMultihopTtl: number;
    readonly ebgpTtlSecurityHops: number;
    readonly enforceFirstAs: string;
    readonly filterListIn: string;
    readonly filterListIn6: string;
    readonly filterListOut: string;
    readonly filterListOut6: string;
    readonly holdtimeTimer: number;
    readonly id: string;
    readonly interface: string;
    readonly ip: string;
    readonly keepAliveTimer: number;
    readonly maximumPrefix: number;
    readonly maximumPrefix6: number;
    readonly maximumPrefixThreshold: number;
    readonly maximumPrefixThreshold6: number;
    readonly maximumPrefixWarningOnly: string;
    readonly maximumPrefixWarningOnly6: string;
    readonly nextHopSelf: string;
    readonly nextHopSelf6: string;
    readonly overrideCapability: string;
    readonly passive: string;
    readonly password: string;
    readonly prefixListIn: string;
    readonly prefixListIn6: string;
    readonly prefixListOut: string;
    readonly prefixListOut6: string;
    readonly remoteAs: number;
    readonly removePrivateAs: string;
    readonly removePrivateAs6: string;
    readonly routeMapIn: string;
    readonly routeMapIn6: string;
    readonly routeMapInEvpn: string;
    readonly routeMapOut: string;
    readonly routeMapOut6: string;
    readonly routeMapOutEvpn: string;
    readonly routeReflectorClient: string;
    readonly routeReflectorClient6: string;
    readonly routeReflectorClientEvpn: string;
    readonly routeServerClient: string;
    readonly routeServerClient6: string;
    readonly sendCommunity: string;
    readonly sendCommunity6: string;
    readonly shutdown: string;
    readonly softReconfiguration: string;
    readonly softReconfiguration6: string;
    readonly softReconfigurationEvpn: string;
    readonly strictCapabilityMatch: string;
    readonly unsuppressMap: string;
    readonly unsuppressMap6: string;
    readonly updateSource: string;
    readonly weight: number;
}
export function getRouterbgpNeighborOutput(args: GetRouterbgpNeighborOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouterbgpNeighborResult> {
    return pulumi.output(args).apply((a: any) => getRouterbgpNeighbor(a, opts))
}

/**
 * A collection of arguments for invoking getRouterbgpNeighbor.
 */
export interface GetRouterbgpNeighborOutputArgs {
    id?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
}
