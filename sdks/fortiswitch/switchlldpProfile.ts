// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SwitchlldpProfile extends pulumi.CustomResource {
    /**
     * Get an existing SwitchlldpProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchlldpProfileState, opts?: pulumi.CustomResourceOptions): SwitchlldpProfile {
        return new SwitchlldpProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fortiswitch:index/switchlldpProfile:SwitchlldpProfile';

    /**
     * Returns true if the given object is an instance of SwitchlldpProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchlldpProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchlldpProfile.__pulumiType;
    }

    public readonly autoIsl!: pulumi.Output<string>;
    public readonly autoIslAuth!: pulumi.Output<string>;
    public readonly autoIslAuthEncrypt!: pulumi.Output<string>;
    public readonly autoIslAuthIdentity!: pulumi.Output<string>;
    public readonly autoIslAuthMacsecProfile!: pulumi.Output<string>;
    public readonly autoIslAuthReauth!: pulumi.Output<number>;
    public readonly autoIslAuthUser!: pulumi.Output<string>;
    public readonly autoIslHelloTimer!: pulumi.Output<number>;
    public readonly autoIslPortGroup!: pulumi.Output<number>;
    public readonly autoIslReceiveTimeout!: pulumi.Output<number>;
    public readonly autoMclagIcl!: pulumi.Output<string>;
    public readonly customTlvs!: pulumi.Output<outputs.SwitchlldpProfileCustomTlv[] | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly medLocationServices!: pulumi.Output<outputs.SwitchlldpProfileMedLocationService[] | undefined>;
    public readonly medNetworkPolicies!: pulumi.Output<outputs.SwitchlldpProfileMedNetworkPolicy[] | undefined>;
    public readonly medTlvs!: pulumi.Output<string>;
    public readonly n8021Tlvs!: pulumi.Output<string>;
    public readonly n8023Tlvs!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly vlanNameMap!: pulumi.Output<string>;

    /**
     * Create a SwitchlldpProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchlldpProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchlldpProfileArgs | SwitchlldpProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchlldpProfileState | undefined;
            resourceInputs["autoIsl"] = state ? state.autoIsl : undefined;
            resourceInputs["autoIslAuth"] = state ? state.autoIslAuth : undefined;
            resourceInputs["autoIslAuthEncrypt"] = state ? state.autoIslAuthEncrypt : undefined;
            resourceInputs["autoIslAuthIdentity"] = state ? state.autoIslAuthIdentity : undefined;
            resourceInputs["autoIslAuthMacsecProfile"] = state ? state.autoIslAuthMacsecProfile : undefined;
            resourceInputs["autoIslAuthReauth"] = state ? state.autoIslAuthReauth : undefined;
            resourceInputs["autoIslAuthUser"] = state ? state.autoIslAuthUser : undefined;
            resourceInputs["autoIslHelloTimer"] = state ? state.autoIslHelloTimer : undefined;
            resourceInputs["autoIslPortGroup"] = state ? state.autoIslPortGroup : undefined;
            resourceInputs["autoIslReceiveTimeout"] = state ? state.autoIslReceiveTimeout : undefined;
            resourceInputs["autoMclagIcl"] = state ? state.autoMclagIcl : undefined;
            resourceInputs["customTlvs"] = state ? state.customTlvs : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["medLocationServices"] = state ? state.medLocationServices : undefined;
            resourceInputs["medNetworkPolicies"] = state ? state.medNetworkPolicies : undefined;
            resourceInputs["medTlvs"] = state ? state.medTlvs : undefined;
            resourceInputs["n8021Tlvs"] = state ? state.n8021Tlvs : undefined;
            resourceInputs["n8023Tlvs"] = state ? state.n8023Tlvs : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["vlanNameMap"] = state ? state.vlanNameMap : undefined;
        } else {
            const args = argsOrState as SwitchlldpProfileArgs | undefined;
            resourceInputs["autoIsl"] = args ? args.autoIsl : undefined;
            resourceInputs["autoIslAuth"] = args ? args.autoIslAuth : undefined;
            resourceInputs["autoIslAuthEncrypt"] = args ? args.autoIslAuthEncrypt : undefined;
            resourceInputs["autoIslAuthIdentity"] = args ? args.autoIslAuthIdentity : undefined;
            resourceInputs["autoIslAuthMacsecProfile"] = args ? args.autoIslAuthMacsecProfile : undefined;
            resourceInputs["autoIslAuthReauth"] = args ? args.autoIslAuthReauth : undefined;
            resourceInputs["autoIslAuthUser"] = args ? args.autoIslAuthUser : undefined;
            resourceInputs["autoIslHelloTimer"] = args ? args.autoIslHelloTimer : undefined;
            resourceInputs["autoIslPortGroup"] = args ? args.autoIslPortGroup : undefined;
            resourceInputs["autoIslReceiveTimeout"] = args ? args.autoIslReceiveTimeout : undefined;
            resourceInputs["autoMclagIcl"] = args ? args.autoMclagIcl : undefined;
            resourceInputs["customTlvs"] = args ? args.customTlvs : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["medLocationServices"] = args ? args.medLocationServices : undefined;
            resourceInputs["medNetworkPolicies"] = args ? args.medNetworkPolicies : undefined;
            resourceInputs["medTlvs"] = args ? args.medTlvs : undefined;
            resourceInputs["n8021Tlvs"] = args ? args.n8021Tlvs : undefined;
            resourceInputs["n8023Tlvs"] = args ? args.n8023Tlvs : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["vlanNameMap"] = args ? args.vlanNameMap : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchlldpProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchlldpProfile resources.
 */
export interface SwitchlldpProfileState {
    autoIsl?: pulumi.Input<string>;
    autoIslAuth?: pulumi.Input<string>;
    autoIslAuthEncrypt?: pulumi.Input<string>;
    autoIslAuthIdentity?: pulumi.Input<string>;
    autoIslAuthMacsecProfile?: pulumi.Input<string>;
    autoIslAuthReauth?: pulumi.Input<number>;
    autoIslAuthUser?: pulumi.Input<string>;
    autoIslHelloTimer?: pulumi.Input<number>;
    autoIslPortGroup?: pulumi.Input<number>;
    autoIslReceiveTimeout?: pulumi.Input<number>;
    autoMclagIcl?: pulumi.Input<string>;
    customTlvs?: pulumi.Input<pulumi.Input<inputs.SwitchlldpProfileCustomTlv>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    medLocationServices?: pulumi.Input<pulumi.Input<inputs.SwitchlldpProfileMedLocationService>[]>;
    medNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.SwitchlldpProfileMedNetworkPolicy>[]>;
    medTlvs?: pulumi.Input<string>;
    n8021Tlvs?: pulumi.Input<string>;
    n8023Tlvs?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    vlanNameMap?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchlldpProfile resource.
 */
export interface SwitchlldpProfileArgs {
    autoIsl?: pulumi.Input<string>;
    autoIslAuth?: pulumi.Input<string>;
    autoIslAuthEncrypt?: pulumi.Input<string>;
    autoIslAuthIdentity?: pulumi.Input<string>;
    autoIslAuthMacsecProfile?: pulumi.Input<string>;
    autoIslAuthReauth?: pulumi.Input<number>;
    autoIslAuthUser?: pulumi.Input<string>;
    autoIslHelloTimer?: pulumi.Input<number>;
    autoIslPortGroup?: pulumi.Input<number>;
    autoIslReceiveTimeout?: pulumi.Input<number>;
    autoMclagIcl?: pulumi.Input<string>;
    customTlvs?: pulumi.Input<pulumi.Input<inputs.SwitchlldpProfileCustomTlv>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    medLocationServices?: pulumi.Input<pulumi.Input<inputs.SwitchlldpProfileMedLocationService>[]>;
    medNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.SwitchlldpProfileMedNetworkPolicy>[]>;
    medTlvs?: pulumi.Input<string>;
    n8021Tlvs?: pulumi.Input<string>;
    n8023Tlvs?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    vlanNameMap?: pulumi.Input<string>;
}
