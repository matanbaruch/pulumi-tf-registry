// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NetworkActions extends pulumi.CustomResource {
    /**
     * Get an existing NetworkActions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkActionsState, opts?: pulumi.CustomResourceOptions): NetworkActions {
        return new NetworkActions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'stackbill:index/networkActions:NetworkActions';

    /**
     * Returns true if the given object is an instance of NetworkActions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkActions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkActions.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly networkUuid!: pulumi.Output<string>;
    public readonly virutalMachineUuid!: pulumi.Output<string>;

    /**
     * Create a NetworkActions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkActionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkActionsArgs | NetworkActionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkActionsState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["networkUuid"] = state ? state.networkUuid : undefined;
            resourceInputs["virutalMachineUuid"] = state ? state.virutalMachineUuid : undefined;
        } else {
            const args = argsOrState as NetworkActionsArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.networkUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkUuid'");
            }
            if ((!args || args.virutalMachineUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virutalMachineUuid'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["networkUuid"] = args ? args.networkUuid : undefined;
            resourceInputs["virutalMachineUuid"] = args ? args.virutalMachineUuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkActions.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkActions resources.
 */
export interface NetworkActionsState {
    action?: pulumi.Input<string>;
    networkUuid?: pulumi.Input<string>;
    virutalMachineUuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkActions resource.
 */
export interface NetworkActionsArgs {
    action: pulumi.Input<string>;
    networkUuid: pulumi.Input<string>;
    virutalMachineUuid: pulumi.Input<string>;
}
