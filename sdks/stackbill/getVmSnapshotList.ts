// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVmSnapshotList(args: GetVmSnapshotListArgs, opts?: pulumi.InvokeOptions): Promise<GetVmSnapshotListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackbill:index/getVmSnapshotList:getVmSnapshotList", {
        "id": args.id,
        "uuid": args.uuid,
        "zoneUuid": args.zoneUuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVmSnapshotList.
 */
export interface GetVmSnapshotListArgs {
    id?: string;
    uuid?: string;
    zoneUuid: string;
}

/**
 * A collection of values returned by getVmSnapshotList.
 */
export interface GetVmSnapshotListResult {
    readonly id: string;
    readonly length: number;
    readonly uuid?: string;
    readonly vmsnapshots: outputs.GetVmSnapshotListVmsnapshot[];
    readonly zoneUuid: string;
}
export function getVmSnapshotListOutput(args: GetVmSnapshotListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmSnapshotListResult> {
    return pulumi.output(args).apply((a: any) => getVmSnapshotList(a, opts))
}

/**
 * A collection of arguments for invoking getVmSnapshotList.
 */
export interface GetVmSnapshotListOutputArgs {
    id?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    zoneUuid: pulumi.Input<string>;
}
