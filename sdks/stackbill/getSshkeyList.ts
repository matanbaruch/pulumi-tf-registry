// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSshkeyList(args?: GetSshkeyListArgs, opts?: pulumi.InvokeOptions): Promise<GetSshkeyListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackbill:index/getSshkeyList:getSshkeyList", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSshkeyList.
 */
export interface GetSshkeyListArgs {
    id?: string;
}

/**
 * A collection of values returned by getSshkeyList.
 */
export interface GetSshkeyListResult {
    readonly id: string;
    readonly length: number;
    readonly sshkeys: outputs.GetSshkeyListSshkey[];
}
export function getSshkeyListOutput(args?: GetSshkeyListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSshkeyListResult> {
    return pulumi.output(args).apply((a: any) => getSshkeyList(a, opts))
}

/**
 * A collection of arguments for invoking getSshkeyList.
 */
export interface GetSshkeyListOutputArgs {
    id?: pulumi.Input<string>;
}
