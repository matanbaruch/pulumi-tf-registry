// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecurityGroupList(args?: GetSecurityGroupListArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityGroupListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("stackbill:index/getSecurityGroupList:getSecurityGroupList", {
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityGroupList.
 */
export interface GetSecurityGroupListArgs {
    id?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getSecurityGroupList.
 */
export interface GetSecurityGroupListResult {
    readonly id: string;
    readonly length: number;
    readonly securitygroups: outputs.GetSecurityGroupListSecuritygroup[];
    readonly uuid?: string;
}
export function getSecurityGroupListOutput(args?: GetSecurityGroupListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityGroupListResult> {
    return pulumi.output(args).apply((a: any) => getSecurityGroupList(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityGroupList.
 */
export interface GetSecurityGroupListOutputArgs {
    id?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
