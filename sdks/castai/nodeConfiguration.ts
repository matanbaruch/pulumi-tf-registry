// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NodeConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing NodeConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NodeConfigurationState, opts?: pulumi.CustomResourceOptions): NodeConfiguration {
        return new NodeConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'castai:index/nodeConfiguration:NodeConfiguration';

    /**
     * Returns true if the given object is an instance of NodeConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NodeConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NodeConfiguration.__pulumiType;
    }

    public readonly aks!: pulumi.Output<outputs.NodeConfigurationAks | undefined>;
    /**
     * CAST AI cluster id
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Optional container runtime to be used by kubelet. Applicable for EKS only. Supported values include: `dockerd`,
     * `containerd`
     */
    public readonly containerRuntime!: pulumi.Output<string | undefined>;
    /**
     * Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
     */
    public readonly diskCpuRatio!: pulumi.Output<number | undefined>;
    /**
     * Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override.
     * Applicable for EKS only. [Available
     * values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
     */
    public readonly dockerConfig!: pulumi.Output<string | undefined>;
    /**
     * Timeout in seconds for draining the node. Defaults to 0
     */
    public readonly drainTimeoutSec!: pulumi.Output<number | undefined>;
    public readonly eks!: pulumi.Output<outputs.NodeConfigurationEks | undefined>;
    public readonly gke!: pulumi.Output<outputs.NodeConfigurationGke | undefined>;
    /**
     * Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on
     * Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
     */
    public readonly image!: pulumi.Output<string | undefined>;
    /**
     * Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
     */
    public readonly initScript!: pulumi.Output<string | undefined>;
    public readonly kops!: pulumi.Output<outputs.NodeConfigurationKops | undefined>;
    /**
     * Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable
     * for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
     */
    public readonly kubeletConfig!: pulumi.Output<string | undefined>;
    /**
     * Minimal disk size in GiB. Defaults to 100, min 30, max 65536
     */
    public readonly minDiskSize!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * SSH public key to be used for provisioned nodes
     */
    public readonly sshPublicKey!: pulumi.Output<string | undefined>;
    /**
     * Subnet ids to be used for provisioned nodes
     */
    public readonly subnets!: pulumi.Output<string[]>;
    /**
     * Tags to be added on cloud instances for provisioned nodes
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.NodeConfigurationTimeouts | undefined>;

    /**
     * Create a NodeConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NodeConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NodeConfigurationArgs | NodeConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NodeConfigurationState | undefined;
            resourceInputs["aks"] = state ? state.aks : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["containerRuntime"] = state ? state.containerRuntime : undefined;
            resourceInputs["diskCpuRatio"] = state ? state.diskCpuRatio : undefined;
            resourceInputs["dockerConfig"] = state ? state.dockerConfig : undefined;
            resourceInputs["drainTimeoutSec"] = state ? state.drainTimeoutSec : undefined;
            resourceInputs["eks"] = state ? state.eks : undefined;
            resourceInputs["gke"] = state ? state.gke : undefined;
            resourceInputs["image"] = state ? state.image : undefined;
            resourceInputs["initScript"] = state ? state.initScript : undefined;
            resourceInputs["kops"] = state ? state.kops : undefined;
            resourceInputs["kubeletConfig"] = state ? state.kubeletConfig : undefined;
            resourceInputs["minDiskSize"] = state ? state.minDiskSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sshPublicKey"] = state ? state.sshPublicKey : undefined;
            resourceInputs["subnets"] = state ? state.subnets : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as NodeConfigurationArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.subnets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnets'");
            }
            resourceInputs["aks"] = args ? args.aks : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["containerRuntime"] = args ? args.containerRuntime : undefined;
            resourceInputs["diskCpuRatio"] = args ? args.diskCpuRatio : undefined;
            resourceInputs["dockerConfig"] = args ? args.dockerConfig : undefined;
            resourceInputs["drainTimeoutSec"] = args ? args.drainTimeoutSec : undefined;
            resourceInputs["eks"] = args ? args.eks : undefined;
            resourceInputs["gke"] = args ? args.gke : undefined;
            resourceInputs["image"] = args ? args.image : undefined;
            resourceInputs["initScript"] = args ? args.initScript : undefined;
            resourceInputs["kops"] = args ? args.kops : undefined;
            resourceInputs["kubeletConfig"] = args ? args.kubeletConfig : undefined;
            resourceInputs["minDiskSize"] = args ? args.minDiskSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sshPublicKey"] = args ? args.sshPublicKey : undefined;
            resourceInputs["subnets"] = args ? args.subnets : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NodeConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NodeConfiguration resources.
 */
export interface NodeConfigurationState {
    aks?: pulumi.Input<inputs.NodeConfigurationAks>;
    /**
     * CAST AI cluster id
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Optional container runtime to be used by kubelet. Applicable for EKS only. Supported values include: `dockerd`,
     * `containerd`
     */
    containerRuntime?: pulumi.Input<string>;
    /**
     * Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
     */
    diskCpuRatio?: pulumi.Input<number>;
    /**
     * Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override.
     * Applicable for EKS only. [Available
     * values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
     */
    dockerConfig?: pulumi.Input<string>;
    /**
     * Timeout in seconds for draining the node. Defaults to 0
     */
    drainTimeoutSec?: pulumi.Input<number>;
    eks?: pulumi.Input<inputs.NodeConfigurationEks>;
    gke?: pulumi.Input<inputs.NodeConfigurationGke>;
    /**
     * Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on
     * Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
     */
    image?: pulumi.Input<string>;
    /**
     * Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
     */
    initScript?: pulumi.Input<string>;
    kops?: pulumi.Input<inputs.NodeConfigurationKops>;
    /**
     * Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable
     * for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
     */
    kubeletConfig?: pulumi.Input<string>;
    /**
     * Minimal disk size in GiB. Defaults to 100, min 30, max 65536
     */
    minDiskSize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * SSH public key to be used for provisioned nodes
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Subnet ids to be used for provisioned nodes
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags to be added on cloud instances for provisioned nodes
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.NodeConfigurationTimeouts>;
}

/**
 * The set of arguments for constructing a NodeConfiguration resource.
 */
export interface NodeConfigurationArgs {
    aks?: pulumi.Input<inputs.NodeConfigurationAks>;
    /**
     * CAST AI cluster id
     */
    clusterId: pulumi.Input<string>;
    /**
     * Optional container runtime to be used by kubelet. Applicable for EKS only. Supported values include: `dockerd`,
     * `containerd`
     */
    containerRuntime?: pulumi.Input<string>;
    /**
     * Disk to CPU ratio. Sets the number of GiBs to be added for every CPU on the node. Defaults to 0
     */
    diskCpuRatio?: pulumi.Input<number>;
    /**
     * Optional docker daemon configuration properties in JSON format. Provide only properties that you want to override.
     * Applicable for EKS only. [Available
     * values](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file)
     */
    dockerConfig?: pulumi.Input<string>;
    /**
     * Timeout in seconds for draining the node. Defaults to 0
     */
    drainTimeoutSec?: pulumi.Input<number>;
    eks?: pulumi.Input<inputs.NodeConfigurationEks>;
    gke?: pulumi.Input<inputs.NodeConfigurationGke>;
    /**
     * Image to be used while provisioning the node. If nothing is provided will be resolved to latest available image based on
     * Image family, Kubernetes version and node architecture if possible. See Cast.ai documentation for details.
     */
    image?: pulumi.Input<string>;
    /**
     * Init script to be run on your instance at launch. Should not contain any sensitive data. Value should be base64 encoded
     */
    initScript?: pulumi.Input<string>;
    kops?: pulumi.Input<inputs.NodeConfigurationKops>;
    /**
     * Optional kubelet configuration properties in JSON format. Provide only properties that you want to override. Applicable
     * for EKS only. [Available values](https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/)
     */
    kubeletConfig?: pulumi.Input<string>;
    /**
     * Minimal disk size in GiB. Defaults to 100, min 30, max 65536
     */
    minDiskSize?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * SSH public key to be used for provisioned nodes
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Subnet ids to be used for provisioned nodes
     */
    subnets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags to be added on cloud instances for provisioned nodes
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.NodeConfigurationTimeouts>;
}
