// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEksSettings(args: GetEksSettingsArgs, opts?: pulumi.InvokeOptions): Promise<GetEksSettingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("castai:index/getEksSettings:getEksSettings", {
        "accountId": args.accountId,
        "cluster": args.cluster,
        "id": args.id,
        "region": args.region,
        "vpc": args.vpc,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEksSettings.
 */
export interface GetEksSettingsArgs {
    accountId: string;
    cluster: string;
    id?: string;
    region: string;
    vpc: string;
}

/**
 * A collection of values returned by getEksSettings.
 */
export interface GetEksSettingsResult {
    readonly accountId: string;
    readonly cluster: string;
    readonly iamManagedPolicies: string[];
    readonly iamPolicyJson: string;
    readonly iamUserPolicyJson: string;
    readonly id: string;
    readonly region: string;
    readonly vpc: string;
}
export function getEksSettingsOutput(args: GetEksSettingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEksSettingsResult> {
    return pulumi.output(args).apply((a: any) => getEksSettings(a, opts))
}

/**
 * A collection of arguments for invoking getEksSettings.
 */
export interface GetEksSettingsOutputArgs {
    accountId: pulumi.Input<string>;
    cluster: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    vpc: pulumi.Input<string>;
}
