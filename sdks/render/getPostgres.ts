// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPostgres(args: GetPostgresArgs, opts?: pulumi.InvokeOptions): Promise<GetPostgresResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:index/getPostgres:getPostgres", {
        "datadogApiKey": args.datadogApiKey,
        "id": args.id,
        "primaryPostgresId": args.primaryPostgresId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPostgres.
 */
export interface GetPostgresArgs {
    datadogApiKey?: string;
    id: string;
    primaryPostgresId?: string;
}

/**
 * A collection of values returned by getPostgres.
 */
export interface GetPostgresResult {
    readonly connectionInfo: outputs.GetPostgresConnectionInfo;
    readonly databaseName: string;
    readonly databaseUser: string;
    readonly datadogApiKey?: string;
    readonly environmentId: string;
    readonly highAvailabilityEnabled: boolean;
    readonly id: string;
    readonly ipAllowLists: outputs.GetPostgresIpAllowList[];
    readonly name: string;
    readonly plan: string;
    readonly primaryPostgresId: string;
    readonly readReplicas: outputs.GetPostgresReadReplica[];
    readonly region: string;
    readonly role: string;
    readonly version: string;
}
export function getPostgresOutput(args: GetPostgresOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPostgresResult> {
    return pulumi.output(args).apply((a: any) => getPostgres(a, opts))
}

/**
 * A collection of arguments for invoking getPostgres.
 */
export interface GetPostgresOutputArgs {
    datadogApiKey?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    primaryPostgresId?: pulumi.Input<string>;
}
