// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCronJob(args: GetCronJobArgs, opts?: pulumi.InvokeOptions): Promise<GetCronJobResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:index/getCronJob:getCronJob", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCronJob.
 */
export interface GetCronJobArgs {
    id: string;
}

/**
 * A collection of values returned by getCronJob.
 */
export interface GetCronJobResult {
    readonly envVars: {[key: string]: outputs.GetCronJobEnvVars};
    readonly environmentId: string;
    readonly id: string;
    readonly name: string;
    readonly notificationOverride: outputs.GetCronJobNotificationOverride;
    readonly plan: string;
    readonly region: string;
    readonly rootDirectory: string;
    readonly runtimeSource: outputs.GetCronJobRuntimeSource;
    readonly schedule: string;
    readonly secretFiles: {[key: string]: outputs.GetCronJobSecretFiles};
    readonly slug: string;
    readonly startCommand: string;
}
export function getCronJobOutput(args: GetCronJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCronJobResult> {
    return pulumi.output(args).apply((a: any) => getCronJob(a, opts))
}

/**
 * A collection of arguments for invoking getCronJob.
 */
export interface GetCronJobOutputArgs {
    id: pulumi.Input<string>;
}
