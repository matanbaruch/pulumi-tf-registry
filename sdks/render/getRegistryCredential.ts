// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRegistryCredential(args: GetRegistryCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryCredentialResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:index/getRegistryCredential:getRegistryCredential", {
        "id": args.id,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRegistryCredential.
 */
export interface GetRegistryCredentialArgs {
    id: string;
    username?: string;
}

/**
 * A collection of values returned by getRegistryCredential.
 */
export interface GetRegistryCredentialResult {
    readonly id: string;
    readonly name: string;
    readonly registry: string;
    readonly username: string;
}
export function getRegistryCredentialOutput(args: GetRegistryCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryCredentialResult> {
    return pulumi.output(args).apply((a: any) => getRegistryCredential(a, opts))
}

/**
 * A collection of arguments for invoking getRegistryCredential.
 */
export interface GetRegistryCredentialOutputArgs {
    id: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}
