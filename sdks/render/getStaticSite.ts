// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStaticSite(args: GetStaticSiteArgs, opts?: pulumi.InvokeOptions): Promise<GetStaticSiteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:index/getStaticSite:getStaticSite", {
        "customDomains": args.customDomains,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStaticSite.
 */
export interface GetStaticSiteArgs {
    customDomains?: inputs.GetStaticSiteCustomDomain[];
    id: string;
}

/**
 * A collection of values returned by getStaticSite.
 */
export interface GetStaticSiteResult {
    readonly autoDeploy: boolean;
    readonly branch: string;
    readonly buildCommand: string;
    readonly buildFilter: outputs.GetStaticSiteBuildFilter;
    readonly customDomains?: outputs.GetStaticSiteCustomDomain[];
    readonly envVars: {[key: string]: outputs.GetStaticSiteEnvVars};
    readonly environmentId: string;
    readonly headers: outputs.GetStaticSiteHeader[];
    readonly id: string;
    readonly name: string;
    readonly notificationOverride: outputs.GetStaticSiteNotificationOverride;
    readonly publishPath: string;
    readonly pullRequestPreviewsEnabled: boolean;
    readonly repoUrl: string;
    readonly rootDirectory: string;
    readonly routes: outputs.GetStaticSiteRoute[];
    readonly slug: string;
    readonly url: string;
}
export function getStaticSiteOutput(args: GetStaticSiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStaticSiteResult> {
    return pulumi.output(args).apply((a: any) => getStaticSite(a, opts))
}

/**
 * A collection of arguments for invoking getStaticSite.
 */
export interface GetStaticSiteOutputArgs {
    customDomains?: pulumi.Input<pulumi.Input<inputs.GetStaticSiteCustomDomainArgs>[]>;
    id: pulumi.Input<string>;
}
