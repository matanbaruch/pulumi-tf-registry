// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEnvGroup(args: GetEnvGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:index/getEnvGroup:getEnvGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnvGroup.
 */
export interface GetEnvGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getEnvGroup.
 */
export interface GetEnvGroupResult {
    readonly envVars: {[key: string]: outputs.GetEnvGroupEnvVars};
    readonly environmentId: string;
    readonly id: string;
    readonly name: string;
    readonly secretFiles: {[key: string]: outputs.GetEnvGroupSecretFiles};
}
export function getEnvGroupOutput(args: GetEnvGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnvGroupResult> {
    return pulumi.output(args).apply((a: any) => getEnvGroup(a, opts))
}

/**
 * A collection of arguments for invoking getEnvGroup.
 */
export interface GetEnvGroupOutputArgs {
    id: pulumi.Input<string>;
}
