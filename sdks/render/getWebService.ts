// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWebService(args: GetWebServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetWebServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("render:index/getWebService:getWebService", {
        "customDomains": args.customDomains,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWebService.
 */
export interface GetWebServiceArgs {
    customDomains?: inputs.GetWebServiceCustomDomain[];
    id: string;
}

/**
 * A collection of values returned by getWebService.
 */
export interface GetWebServiceResult {
    readonly autoscaling: outputs.GetWebServiceAutoscaling;
    readonly customDomains?: outputs.GetWebServiceCustomDomain[];
    readonly disk: outputs.GetWebServiceDisk;
    readonly envVars: {[key: string]: outputs.GetWebServiceEnvVars};
    readonly environmentId: string;
    readonly healthCheckPath: string;
    readonly id: string;
    readonly maxShutdownDelaySeconds: number;
    readonly name: string;
    readonly notificationOverride: outputs.GetWebServiceNotificationOverride;
    readonly numInstances: number;
    readonly plan: string;
    readonly preDeployCommand: string;
    readonly pullRequestPreviewsEnabled: boolean;
    readonly region: string;
    readonly rootDirectory: string;
    readonly runtimeSource: outputs.GetWebServiceRuntimeSource;
    readonly secretFiles: {[key: string]: outputs.GetWebServiceSecretFiles};
    readonly slug: string;
    readonly startCommand: string;
    readonly url: string;
}
export function getWebServiceOutput(args: GetWebServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebServiceResult> {
    return pulumi.output(args).apply((a: any) => getWebService(a, opts))
}

/**
 * A collection of arguments for invoking getWebService.
 */
export interface GetWebServiceOutputArgs {
    customDomains?: pulumi.Input<pulumi.Input<inputs.GetWebServiceCustomDomainArgs>[]>;
    id: pulumi.Input<string>;
}
