// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AccessRules extends pulumi.CustomResource {
    /**
     * Get an existing AccessRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessRulesState, opts?: pulumi.CustomResourceOptions): AccessRules {
        return new AccessRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmc:index/accessRules:AccessRules';

    /**
     * Returns true if the given object is an instance of AccessRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessRules.__pulumiType;
    }

    /**
     * The ID of the ACP this resource belongs to
     */
    public readonly acp!: pulumi.Output<string>;
    /**
     * Action for this resource, "ALLOW", "TRUST", "BLOCK", "MONITOR", "BLOCK_RESET", "BLOCK_INTERACTIVE" or
     * "BLOCK_RESET_INTERACTIVE"
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * The Category of the ACP this resource belongs to. Should be created upfront with fmc.AccessPoliciesCategory resource
     */
    public readonly category!: pulumi.Output<string | undefined>;
    /**
     * Destination dynamic objects ports for this resource
     */
    public readonly destinationDynamicObjects!: pulumi.Output<outputs.AccessRulesDestinationDynamicObjects | undefined>;
    /**
     * Destination networks for this resource
     */
    public readonly destinationNetworks!: pulumi.Output<outputs.AccessRulesDestinationNetworks | undefined>;
    /**
     * Destination ports for this resource
     */
    public readonly destinationPorts!: pulumi.Output<outputs.AccessRulesDestinationPorts | undefined>;
    /**
     * Destination SGTs
     */
    public readonly destinationSecurityGroupTags!: pulumi.Output<outputs.AccessRulesDestinationSecurityGroupTags | undefined>;
    /**
     * Destination zones for this resource
     */
    public readonly destinationZones!: pulumi.Output<outputs.AccessRulesDestinationZones | undefined>;
    /**
     * Enable syslog for this resource
     */
    public readonly enableSyslog!: pulumi.Output<boolean | undefined>;
    /**
     * Enable the resourceFmc
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * File policy for this resource
     */
    public readonly filePolicy!: pulumi.Output<string | undefined>;
    /**
     * The rule number after which to insert this resource
     */
    public readonly insertAfter!: pulumi.Output<number | undefined>;
    /**
     * The rule number before which to insert this resource
     */
    public readonly insertBefore!: pulumi.Output<number | undefined>;
    /**
     * IPS policy for this resource
     */
    public readonly ipsPolicy!: pulumi.Output<string | undefined>;
    /**
     * Enable logging at the beginning of connection for this resource
     */
    public readonly logBegin!: pulumi.Output<boolean | undefined>;
    /**
     * Enable logging at the end of connection for this resource
     */
    public readonly logEnd!: pulumi.Output<boolean | undefined>;
    /**
     * Enable logging files for this resource
     */
    public readonly logFiles!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resourceFmc
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * New comments to be added for this resource
     */
    public readonly newComments!: pulumi.Output<string[] | undefined>;
    /**
     * Section for this resource, "mandatory" or "default"
     */
    public readonly section!: pulumi.Output<string | undefined>;
    /**
     * Enable sending events to FMC for this resource
     */
    public readonly sendEventsToFmc!: pulumi.Output<boolean | undefined>;
    /**
     * Source dynamic objects for this resource
     */
    public readonly sourceDynamicObjects!: pulumi.Output<outputs.AccessRulesSourceDynamicObjects | undefined>;
    /**
     * Source networks for this resource
     */
    public readonly sourceNetworks!: pulumi.Output<outputs.AccessRulesSourceNetworks | undefined>;
    /**
     * Source ports for this resource
     */
    public readonly sourcePorts!: pulumi.Output<outputs.AccessRulesSourcePorts | undefined>;
    /**
     * Source SGTs
     */
    public readonly sourceSecurityGroupTags!: pulumi.Output<outputs.AccessRulesSourceSecurityGroupTags | undefined>;
    /**
     * Source zones for this resource
     */
    public readonly sourceZones!: pulumi.Output<outputs.AccessRulesSourceZones | undefined>;
    /**
     * Syslog configuration ID for this resource
     */
    public readonly syslogConfig!: pulumi.Output<string | undefined>;
    /**
     * Syslog severity for this resource, "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE" or "WARNING"
     */
    public readonly syslogSeverity!: pulumi.Output<string | undefined>;
    /**
     * The type of this resource
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * URLs for this resource
     */
    public readonly urls!: pulumi.Output<outputs.AccessRulesUrls | undefined>;

    /**
     * Create a AccessRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessRulesArgs | AccessRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessRulesState | undefined;
            resourceInputs["acp"] = state ? state.acp : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["destinationDynamicObjects"] = state ? state.destinationDynamicObjects : undefined;
            resourceInputs["destinationNetworks"] = state ? state.destinationNetworks : undefined;
            resourceInputs["destinationPorts"] = state ? state.destinationPorts : undefined;
            resourceInputs["destinationSecurityGroupTags"] = state ? state.destinationSecurityGroupTags : undefined;
            resourceInputs["destinationZones"] = state ? state.destinationZones : undefined;
            resourceInputs["enableSyslog"] = state ? state.enableSyslog : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["filePolicy"] = state ? state.filePolicy : undefined;
            resourceInputs["insertAfter"] = state ? state.insertAfter : undefined;
            resourceInputs["insertBefore"] = state ? state.insertBefore : undefined;
            resourceInputs["ipsPolicy"] = state ? state.ipsPolicy : undefined;
            resourceInputs["logBegin"] = state ? state.logBegin : undefined;
            resourceInputs["logEnd"] = state ? state.logEnd : undefined;
            resourceInputs["logFiles"] = state ? state.logFiles : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["newComments"] = state ? state.newComments : undefined;
            resourceInputs["section"] = state ? state.section : undefined;
            resourceInputs["sendEventsToFmc"] = state ? state.sendEventsToFmc : undefined;
            resourceInputs["sourceDynamicObjects"] = state ? state.sourceDynamicObjects : undefined;
            resourceInputs["sourceNetworks"] = state ? state.sourceNetworks : undefined;
            resourceInputs["sourcePorts"] = state ? state.sourcePorts : undefined;
            resourceInputs["sourceSecurityGroupTags"] = state ? state.sourceSecurityGroupTags : undefined;
            resourceInputs["sourceZones"] = state ? state.sourceZones : undefined;
            resourceInputs["syslogConfig"] = state ? state.syslogConfig : undefined;
            resourceInputs["syslogSeverity"] = state ? state.syslogSeverity : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["urls"] = state ? state.urls : undefined;
        } else {
            const args = argsOrState as AccessRulesArgs | undefined;
            if ((!args || args.acp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acp'");
            }
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            resourceInputs["acp"] = args ? args.acp : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["destinationDynamicObjects"] = args ? args.destinationDynamicObjects : undefined;
            resourceInputs["destinationNetworks"] = args ? args.destinationNetworks : undefined;
            resourceInputs["destinationPorts"] = args ? args.destinationPorts : undefined;
            resourceInputs["destinationSecurityGroupTags"] = args ? args.destinationSecurityGroupTags : undefined;
            resourceInputs["destinationZones"] = args ? args.destinationZones : undefined;
            resourceInputs["enableSyslog"] = args ? args.enableSyslog : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["filePolicy"] = args ? args.filePolicy : undefined;
            resourceInputs["insertAfter"] = args ? args.insertAfter : undefined;
            resourceInputs["insertBefore"] = args ? args.insertBefore : undefined;
            resourceInputs["ipsPolicy"] = args ? args.ipsPolicy : undefined;
            resourceInputs["logBegin"] = args ? args.logBegin : undefined;
            resourceInputs["logEnd"] = args ? args.logEnd : undefined;
            resourceInputs["logFiles"] = args ? args.logFiles : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["newComments"] = args ? args.newComments : undefined;
            resourceInputs["section"] = args ? args.section : undefined;
            resourceInputs["sendEventsToFmc"] = args ? args.sendEventsToFmc : undefined;
            resourceInputs["sourceDynamicObjects"] = args ? args.sourceDynamicObjects : undefined;
            resourceInputs["sourceNetworks"] = args ? args.sourceNetworks : undefined;
            resourceInputs["sourcePorts"] = args ? args.sourcePorts : undefined;
            resourceInputs["sourceSecurityGroupTags"] = args ? args.sourceSecurityGroupTags : undefined;
            resourceInputs["sourceZones"] = args ? args.sourceZones : undefined;
            resourceInputs["syslogConfig"] = args ? args.syslogConfig : undefined;
            resourceInputs["syslogSeverity"] = args ? args.syslogSeverity : undefined;
            resourceInputs["urls"] = args ? args.urls : undefined;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessRules.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AccessRules resources.
 */
export interface AccessRulesState {
    /**
     * The ID of the ACP this resource belongs to
     */
    acp?: pulumi.Input<string>;
    /**
     * Action for this resource, "ALLOW", "TRUST", "BLOCK", "MONITOR", "BLOCK_RESET", "BLOCK_INTERACTIVE" or
     * "BLOCK_RESET_INTERACTIVE"
     */
    action?: pulumi.Input<string>;
    /**
     * The Category of the ACP this resource belongs to. Should be created upfront with fmc.AccessPoliciesCategory resource
     */
    category?: pulumi.Input<string>;
    /**
     * Destination dynamic objects ports for this resource
     */
    destinationDynamicObjects?: pulumi.Input<inputs.AccessRulesDestinationDynamicObjects>;
    /**
     * Destination networks for this resource
     */
    destinationNetworks?: pulumi.Input<inputs.AccessRulesDestinationNetworks>;
    /**
     * Destination ports for this resource
     */
    destinationPorts?: pulumi.Input<inputs.AccessRulesDestinationPorts>;
    /**
     * Destination SGTs
     */
    destinationSecurityGroupTags?: pulumi.Input<inputs.AccessRulesDestinationSecurityGroupTags>;
    /**
     * Destination zones for this resource
     */
    destinationZones?: pulumi.Input<inputs.AccessRulesDestinationZones>;
    /**
     * Enable syslog for this resource
     */
    enableSyslog?: pulumi.Input<boolean>;
    /**
     * Enable the resourceFmc
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * File policy for this resource
     */
    filePolicy?: pulumi.Input<string>;
    /**
     * The rule number after which to insert this resource
     */
    insertAfter?: pulumi.Input<number>;
    /**
     * The rule number before which to insert this resource
     */
    insertBefore?: pulumi.Input<number>;
    /**
     * IPS policy for this resource
     */
    ipsPolicy?: pulumi.Input<string>;
    /**
     * Enable logging at the beginning of connection for this resource
     */
    logBegin?: pulumi.Input<boolean>;
    /**
     * Enable logging at the end of connection for this resource
     */
    logEnd?: pulumi.Input<boolean>;
    /**
     * Enable logging files for this resource
     */
    logFiles?: pulumi.Input<boolean>;
    /**
     * The name of the resourceFmc
     */
    name?: pulumi.Input<string>;
    /**
     * New comments to be added for this resource
     */
    newComments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Section for this resource, "mandatory" or "default"
     */
    section?: pulumi.Input<string>;
    /**
     * Enable sending events to FMC for this resource
     */
    sendEventsToFmc?: pulumi.Input<boolean>;
    /**
     * Source dynamic objects for this resource
     */
    sourceDynamicObjects?: pulumi.Input<inputs.AccessRulesSourceDynamicObjects>;
    /**
     * Source networks for this resource
     */
    sourceNetworks?: pulumi.Input<inputs.AccessRulesSourceNetworks>;
    /**
     * Source ports for this resource
     */
    sourcePorts?: pulumi.Input<inputs.AccessRulesSourcePorts>;
    /**
     * Source SGTs
     */
    sourceSecurityGroupTags?: pulumi.Input<inputs.AccessRulesSourceSecurityGroupTags>;
    /**
     * Source zones for this resource
     */
    sourceZones?: pulumi.Input<inputs.AccessRulesSourceZones>;
    /**
     * Syslog configuration ID for this resource
     */
    syslogConfig?: pulumi.Input<string>;
    /**
     * Syslog severity for this resource, "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE" or "WARNING"
     */
    syslogSeverity?: pulumi.Input<string>;
    /**
     * The type of this resource
     */
    type?: pulumi.Input<string>;
    /**
     * URLs for this resource
     */
    urls?: pulumi.Input<inputs.AccessRulesUrls>;
}

/**
 * The set of arguments for constructing a AccessRules resource.
 */
export interface AccessRulesArgs {
    /**
     * The ID of the ACP this resource belongs to
     */
    acp: pulumi.Input<string>;
    /**
     * Action for this resource, "ALLOW", "TRUST", "BLOCK", "MONITOR", "BLOCK_RESET", "BLOCK_INTERACTIVE" or
     * "BLOCK_RESET_INTERACTIVE"
     */
    action: pulumi.Input<string>;
    /**
     * The Category of the ACP this resource belongs to. Should be created upfront with fmc.AccessPoliciesCategory resource
     */
    category?: pulumi.Input<string>;
    /**
     * Destination dynamic objects ports for this resource
     */
    destinationDynamicObjects?: pulumi.Input<inputs.AccessRulesDestinationDynamicObjects>;
    /**
     * Destination networks for this resource
     */
    destinationNetworks?: pulumi.Input<inputs.AccessRulesDestinationNetworks>;
    /**
     * Destination ports for this resource
     */
    destinationPorts?: pulumi.Input<inputs.AccessRulesDestinationPorts>;
    /**
     * Destination SGTs
     */
    destinationSecurityGroupTags?: pulumi.Input<inputs.AccessRulesDestinationSecurityGroupTags>;
    /**
     * Destination zones for this resource
     */
    destinationZones?: pulumi.Input<inputs.AccessRulesDestinationZones>;
    /**
     * Enable syslog for this resource
     */
    enableSyslog?: pulumi.Input<boolean>;
    /**
     * Enable the resourceFmc
     */
    enabled: pulumi.Input<boolean>;
    /**
     * File policy for this resource
     */
    filePolicy?: pulumi.Input<string>;
    /**
     * The rule number after which to insert this resource
     */
    insertAfter?: pulumi.Input<number>;
    /**
     * The rule number before which to insert this resource
     */
    insertBefore?: pulumi.Input<number>;
    /**
     * IPS policy for this resource
     */
    ipsPolicy?: pulumi.Input<string>;
    /**
     * Enable logging at the beginning of connection for this resource
     */
    logBegin?: pulumi.Input<boolean>;
    /**
     * Enable logging at the end of connection for this resource
     */
    logEnd?: pulumi.Input<boolean>;
    /**
     * Enable logging files for this resource
     */
    logFiles?: pulumi.Input<boolean>;
    /**
     * The name of the resourceFmc
     */
    name?: pulumi.Input<string>;
    /**
     * New comments to be added for this resource
     */
    newComments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Section for this resource, "mandatory" or "default"
     */
    section?: pulumi.Input<string>;
    /**
     * Enable sending events to FMC for this resource
     */
    sendEventsToFmc?: pulumi.Input<boolean>;
    /**
     * Source dynamic objects for this resource
     */
    sourceDynamicObjects?: pulumi.Input<inputs.AccessRulesSourceDynamicObjects>;
    /**
     * Source networks for this resource
     */
    sourceNetworks?: pulumi.Input<inputs.AccessRulesSourceNetworks>;
    /**
     * Source ports for this resource
     */
    sourcePorts?: pulumi.Input<inputs.AccessRulesSourcePorts>;
    /**
     * Source SGTs
     */
    sourceSecurityGroupTags?: pulumi.Input<inputs.AccessRulesSourceSecurityGroupTags>;
    /**
     * Source zones for this resource
     */
    sourceZones?: pulumi.Input<inputs.AccessRulesSourceZones>;
    /**
     * Syslog configuration ID for this resource
     */
    syslogConfig?: pulumi.Input<string>;
    /**
     * Syslog severity for this resource, "ALERT", "CRIT", "DEBUG", "EMERG", "ERR", "INFO", "NOTICE" or "WARNING"
     */
    syslogSeverity?: pulumi.Input<string>;
    /**
     * URLs for this resource
     */
    urls?: pulumi.Input<inputs.AccessRulesUrls>;
}
