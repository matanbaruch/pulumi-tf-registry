// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ExtendedAcl extends pulumi.CustomResource {
    /**
     * Get an existing ExtendedAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExtendedAclState, opts?: pulumi.CustomResourceOptions): ExtendedAcl {
        return new ExtendedAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmc:index/extendedAcl:ExtendedAcl';

    /**
     * Returns true if the given object is an instance of ExtendedAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExtendedAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExtendedAcl.__pulumiType;
    }

    /**
     * The action of this resource
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Destination Network Literal Type
     */
    public readonly destinationNetworkLiteralType!: pulumi.Output<string | undefined>;
    /**
     * Destination Network Literal Value
     */
    public readonly destinationNetworkLiteralValue!: pulumi.Output<string | undefined>;
    /**
     * Destination Network Object ID
     */
    public readonly destinationNetworkObjectId!: pulumi.Output<string | undefined>;
    /**
     * Destination Port Literal Port
     */
    public readonly destinationPortLiteralPort!: pulumi.Output<string | undefined>;
    /**
     * Destination Port Literal Protocol
     */
    public readonly destinationPortLiteralProtocol!: pulumi.Output<string | undefined>;
    /**
     * Destination Port Object ID
     */
    public readonly destinationPortObjectId!: pulumi.Output<string | undefined>;
    /**
     * The log interval of this resource
     */
    public readonly logInterval!: pulumi.Output<number>;
    /**
     * The loglevel of this resource
     */
    public readonly logLevel!: pulumi.Output<string>;
    /**
     * The logging of this resource
     */
    public readonly logging!: pulumi.Output<string>;
    /**
     * The name of this resource
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Source Network Literal Type
     */
    public readonly sourceNetworkLiteralType!: pulumi.Output<string | undefined>;
    /**
     * Source Network Literal Value
     */
    public readonly sourceNetworkLiteralValue!: pulumi.Output<string | undefined>;
    /**
     * Source Network Object ID
     */
    public readonly sourceNetworkObjectId!: pulumi.Output<string | undefined>;
    /**
     * Source Port Literal Port
     */
    public readonly sourcePortLiteralPort!: pulumi.Output<string | undefined>;
    /**
     * Source Port Literal Protocol
     */
    public readonly sourcePortLiteralProtocol!: pulumi.Output<string | undefined>;
    /**
     * Source Port Object ID
     */
    public readonly sourcePortObjectId!: pulumi.Output<string | undefined>;
    /**
     * The type of this resource
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a ExtendedAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExtendedAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExtendedAclArgs | ExtendedAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExtendedAclState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["destinationNetworkLiteralType"] = state ? state.destinationNetworkLiteralType : undefined;
            resourceInputs["destinationNetworkLiteralValue"] = state ? state.destinationNetworkLiteralValue : undefined;
            resourceInputs["destinationNetworkObjectId"] = state ? state.destinationNetworkObjectId : undefined;
            resourceInputs["destinationPortLiteralPort"] = state ? state.destinationPortLiteralPort : undefined;
            resourceInputs["destinationPortLiteralProtocol"] = state ? state.destinationPortLiteralProtocol : undefined;
            resourceInputs["destinationPortObjectId"] = state ? state.destinationPortObjectId : undefined;
            resourceInputs["logInterval"] = state ? state.logInterval : undefined;
            resourceInputs["logLevel"] = state ? state.logLevel : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sourceNetworkLiteralType"] = state ? state.sourceNetworkLiteralType : undefined;
            resourceInputs["sourceNetworkLiteralValue"] = state ? state.sourceNetworkLiteralValue : undefined;
            resourceInputs["sourceNetworkObjectId"] = state ? state.sourceNetworkObjectId : undefined;
            resourceInputs["sourcePortLiteralPort"] = state ? state.sourcePortLiteralPort : undefined;
            resourceInputs["sourcePortLiteralProtocol"] = state ? state.sourcePortLiteralProtocol : undefined;
            resourceInputs["sourcePortObjectId"] = state ? state.sourcePortObjectId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ExtendedAclArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.logInterval === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logInterval'");
            }
            if ((!args || args.logLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logLevel'");
            }
            if ((!args || args.logging === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logging'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["destinationNetworkLiteralType"] = args ? args.destinationNetworkLiteralType : undefined;
            resourceInputs["destinationNetworkLiteralValue"] = args ? args.destinationNetworkLiteralValue : undefined;
            resourceInputs["destinationNetworkObjectId"] = args ? args.destinationNetworkObjectId : undefined;
            resourceInputs["destinationPortLiteralPort"] = args ? args.destinationPortLiteralPort : undefined;
            resourceInputs["destinationPortLiteralProtocol"] = args ? args.destinationPortLiteralProtocol : undefined;
            resourceInputs["destinationPortObjectId"] = args ? args.destinationPortObjectId : undefined;
            resourceInputs["logInterval"] = args ? args.logInterval : undefined;
            resourceInputs["logLevel"] = args ? args.logLevel : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sourceNetworkLiteralType"] = args ? args.sourceNetworkLiteralType : undefined;
            resourceInputs["sourceNetworkLiteralValue"] = args ? args.sourceNetworkLiteralValue : undefined;
            resourceInputs["sourceNetworkObjectId"] = args ? args.sourceNetworkObjectId : undefined;
            resourceInputs["sourcePortLiteralPort"] = args ? args.sourcePortLiteralPort : undefined;
            resourceInputs["sourcePortLiteralProtocol"] = args ? args.sourcePortLiteralProtocol : undefined;
            resourceInputs["sourcePortObjectId"] = args ? args.sourcePortObjectId : undefined;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExtendedAcl.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ExtendedAcl resources.
 */
export interface ExtendedAclState {
    /**
     * The action of this resource
     */
    action?: pulumi.Input<string>;
    /**
     * Destination Network Literal Type
     */
    destinationNetworkLiteralType?: pulumi.Input<string>;
    /**
     * Destination Network Literal Value
     */
    destinationNetworkLiteralValue?: pulumi.Input<string>;
    /**
     * Destination Network Object ID
     */
    destinationNetworkObjectId?: pulumi.Input<string>;
    /**
     * Destination Port Literal Port
     */
    destinationPortLiteralPort?: pulumi.Input<string>;
    /**
     * Destination Port Literal Protocol
     */
    destinationPortLiteralProtocol?: pulumi.Input<string>;
    /**
     * Destination Port Object ID
     */
    destinationPortObjectId?: pulumi.Input<string>;
    /**
     * The log interval of this resource
     */
    logInterval?: pulumi.Input<number>;
    /**
     * The loglevel of this resource
     */
    logLevel?: pulumi.Input<string>;
    /**
     * The logging of this resource
     */
    logging?: pulumi.Input<string>;
    /**
     * The name of this resource
     */
    name?: pulumi.Input<string>;
    /**
     * Source Network Literal Type
     */
    sourceNetworkLiteralType?: pulumi.Input<string>;
    /**
     * Source Network Literal Value
     */
    sourceNetworkLiteralValue?: pulumi.Input<string>;
    /**
     * Source Network Object ID
     */
    sourceNetworkObjectId?: pulumi.Input<string>;
    /**
     * Source Port Literal Port
     */
    sourcePortLiteralPort?: pulumi.Input<string>;
    /**
     * Source Port Literal Protocol
     */
    sourcePortLiteralProtocol?: pulumi.Input<string>;
    /**
     * Source Port Object ID
     */
    sourcePortObjectId?: pulumi.Input<string>;
    /**
     * The type of this resource
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExtendedAcl resource.
 */
export interface ExtendedAclArgs {
    /**
     * The action of this resource
     */
    action: pulumi.Input<string>;
    /**
     * Destination Network Literal Type
     */
    destinationNetworkLiteralType?: pulumi.Input<string>;
    /**
     * Destination Network Literal Value
     */
    destinationNetworkLiteralValue?: pulumi.Input<string>;
    /**
     * Destination Network Object ID
     */
    destinationNetworkObjectId?: pulumi.Input<string>;
    /**
     * Destination Port Literal Port
     */
    destinationPortLiteralPort?: pulumi.Input<string>;
    /**
     * Destination Port Literal Protocol
     */
    destinationPortLiteralProtocol?: pulumi.Input<string>;
    /**
     * Destination Port Object ID
     */
    destinationPortObjectId?: pulumi.Input<string>;
    /**
     * The log interval of this resource
     */
    logInterval: pulumi.Input<number>;
    /**
     * The loglevel of this resource
     */
    logLevel: pulumi.Input<string>;
    /**
     * The logging of this resource
     */
    logging: pulumi.Input<string>;
    /**
     * The name of this resource
     */
    name?: pulumi.Input<string>;
    /**
     * Source Network Literal Type
     */
    sourceNetworkLiteralType?: pulumi.Input<string>;
    /**
     * Source Network Literal Value
     */
    sourceNetworkLiteralValue?: pulumi.Input<string>;
    /**
     * Source Network Object ID
     */
    sourceNetworkObjectId?: pulumi.Input<string>;
    /**
     * Source Port Literal Port
     */
    sourcePortLiteralPort?: pulumi.Input<string>;
    /**
     * Source Port Literal Protocol
     */
    sourcePortLiteralProtocol?: pulumi.Input<string>;
    /**
     * Source Port Object ID
     */
    sourcePortObjectId?: pulumi.Input<string>;
}
