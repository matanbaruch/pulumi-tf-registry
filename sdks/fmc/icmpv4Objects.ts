// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Icmpv4Objects extends pulumi.CustomResource {
    /**
     * Get an existing Icmpv4Objects resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Icmpv4ObjectsState, opts?: pulumi.CustomResourceOptions): Icmpv4Objects {
        return new Icmpv4Objects(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmc:index/icmpv4Objects:Icmpv4Objects';

    /**
     * Returns true if the given object is an instance of Icmpv4Objects.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Icmpv4Objects {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Icmpv4Objects.__pulumiType;
    }

    /**
     * The ICMP code for this resource
     */
    public readonly code!: pulumi.Output<number | undefined>;
    /**
     * The ICMP type for this resource
     */
    public readonly icmpType!: pulumi.Output<string>;
    /**
     * The name of this resource
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The type of this resource
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a Icmpv4Objects resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Icmpv4ObjectsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Icmpv4ObjectsArgs | Icmpv4ObjectsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Icmpv4ObjectsState | undefined;
            resourceInputs["code"] = state ? state.code : undefined;
            resourceInputs["icmpType"] = state ? state.icmpType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as Icmpv4ObjectsArgs | undefined;
            if ((!args || args.icmpType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'icmpType'");
            }
            resourceInputs["code"] = args ? args.code : undefined;
            resourceInputs["icmpType"] = args ? args.icmpType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Icmpv4Objects.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Icmpv4Objects resources.
 */
export interface Icmpv4ObjectsState {
    /**
     * The ICMP code for this resource
     */
    code?: pulumi.Input<number>;
    /**
     * The ICMP type for this resource
     */
    icmpType?: pulumi.Input<string>;
    /**
     * The name of this resource
     */
    name?: pulumi.Input<string>;
    /**
     * The type of this resource
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Icmpv4Objects resource.
 */
export interface Icmpv4ObjectsArgs {
    /**
     * The ICMP code for this resource
     */
    code?: pulumi.Input<number>;
    /**
     * The ICMP type for this resource
     */
    icmpType: pulumi.Input<string>;
    /**
     * The name of this resource
     */
    name?: pulumi.Input<string>;
}
