// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDeviceSubinterfaces(args: GetDeviceSubinterfacesArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceSubinterfacesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fmc:index/getDeviceSubinterfaces:getDeviceSubinterfaces", {
        "deviceId": args.deviceId,
        "id": args.id,
        "subinterfaceId": args.subinterfaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeviceSubinterfaces.
 */
export interface GetDeviceSubinterfacesArgs {
    deviceId: string;
    id?: string;
    subinterfaceId: number;
}

/**
 * A collection of values returned by getDeviceSubinterfaces.
 */
export interface GetDeviceSubinterfacesResult {
    readonly deviceId: string;
    readonly id: string;
    readonly ifName: string;
    readonly ipv4StaticAddress: string;
    readonly mode: string;
    readonly mtu: number;
    readonly securityZoneId: string;
    readonly subinterfaceId: number;
    readonly type: string;
    readonly vlanId: number;
}
export function getDeviceSubinterfacesOutput(args: GetDeviceSubinterfacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceSubinterfacesResult> {
    return pulumi.output(args).apply((a: any) => getDeviceSubinterfaces(a, opts))
}

/**
 * A collection of arguments for invoking getDeviceSubinterfaces.
 */
export interface GetDeviceSubinterfacesOutputArgs {
    deviceId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    subinterfaceId: pulumi.Input<number>;
}
