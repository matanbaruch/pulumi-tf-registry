// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDeviceVtepPolicies(args: GetDeviceVtepPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceVtepPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fmc:index/getDeviceVtepPolicies:getDeviceVtepPolicies", {
        "deviceId": args.deviceId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeviceVtepPolicies.
 */
export interface GetDeviceVtepPoliciesArgs {
    deviceId: string;
    id?: string;
}

/**
 * A collection of values returned by getDeviceVtepPolicies.
 */
export interface GetDeviceVtepPoliciesResult {
    readonly deviceId: string;
    readonly id: string;
    readonly nveenable: boolean;
    readonly type: string;
}
export function getDeviceVtepPoliciesOutput(args: GetDeviceVtepPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceVtepPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getDeviceVtepPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getDeviceVtepPolicies.
 */
export interface GetDeviceVtepPoliciesOutputArgs {
    deviceId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
