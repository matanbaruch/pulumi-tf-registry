// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkAnalysisPolicy(args: GetNetworkAnalysisPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkAnalysisPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fmc:index/getNetworkAnalysisPolicy:getNetworkAnalysisPolicy", {
        "basePolicy": args.basePolicy,
        "name": args.name,
        "snortEngine": args.snortEngine,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkAnalysisPolicy.
 */
export interface GetNetworkAnalysisPolicyArgs {
    basePolicy?: inputs.GetNetworkAnalysisPolicyBasePolicy;
    name: string;
    snortEngine?: string;
}

/**
 * A collection of values returned by getNetworkAnalysisPolicy.
 */
export interface GetNetworkAnalysisPolicyResult {
    readonly basePolicy?: outputs.GetNetworkAnalysisPolicyBasePolicy;
    readonly id: string;
    readonly name: string;
    readonly snortEngine?: string;
    readonly type: string;
}
export function getNetworkAnalysisPolicyOutput(args: GetNetworkAnalysisPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkAnalysisPolicyResult> {
    return pulumi.output(args).apply((a: any) => getNetworkAnalysisPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkAnalysisPolicy.
 */
export interface GetNetworkAnalysisPolicyOutputArgs {
    basePolicy?: pulumi.Input<inputs.GetNetworkAnalysisPolicyBasePolicyArgs>;
    name: pulumi.Input<string>;
    snortEngine?: pulumi.Input<string>;
}
