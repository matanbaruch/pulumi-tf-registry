// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("fmc");

/**
 * The domain uuid to use API of cdFMC the default domain for global is e276abec-e0f2-11e3-8169-6d9ed49b625f
 */
export declare const cdfmcDomainUuid: string | undefined;
Object.defineProperty(exports, "cdfmcDomainUuid", {
    get() {
        return __config.get("cdfmcDomainUuid");
    },
    enumerable: true,
});

/**
 * The CDO Api token to manage cdFMC
 */
export declare const cdoToken: string | undefined;
Object.defineProperty(exports, "cdoToken", {
    get() {
        return __config.get("cdoToken");
    },
    enumerable: true,
});

/**
 * Hostname/IP address of the FMC
 */
export declare const fmcHost: string | undefined;
Object.defineProperty(exports, "fmcHost", {
    get() {
        return __config.get("fmcHost");
    },
    enumerable: true,
});

/**
 * Skip certificate checks if the certificate is not public CA signed, or if using IP address
 */
export declare const fmcInsecureSkipVerify: boolean | undefined;
Object.defineProperty(exports, "fmcInsecureSkipVerify", {
    get() {
        return __config.getObject<boolean>("fmcInsecureSkipVerify");
    },
    enumerable: true,
});

/**
 * Password for the user to login to FMC
 */
export declare const fmcPassword: string | undefined;
Object.defineProperty(exports, "fmcPassword", {
    get() {
        return __config.get("fmcPassword");
    },
    enumerable: true,
});

/**
 * Username for the user to login to FMC
 */
export declare const fmcUsername: string | undefined;
Object.defineProperty(exports, "fmcUsername", {
    get() {
        return __config.get("fmcUsername");
    },
    enumerable: true,
});

/**
 * set to true if is a cloud-delivered Firepower Management Center (cdFMC) with Cisco Defence Orchestrator(CDO)
 */
export declare const isCdfmc: boolean | undefined;
Object.defineProperty(exports, "isCdfmc", {
    get() {
        return __config.getObject<boolean>("isCdfmc");
    },
    enumerable: true,
});

