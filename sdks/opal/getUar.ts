// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUar(args: GetUarArgs, opts?: pulumi.InvokeOptions): Promise<GetUarResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getUar:getUar", {
        "uarId": args.uarId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUar.
 */
export interface GetUarArgs {
    uarId: string;
}

/**
 * A collection of values returned by getUar.
 */
export interface GetUarResult {
    readonly deadline: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly reviewerAssignmentPolicy: string;
    readonly selfReviewAllowed: boolean;
    readonly sendReviewerAssignmentNotification: boolean;
    readonly timeZone: string;
    readonly uarId: string;
    readonly uarScope: outputs.GetUarUarScope;
}
export function getUarOutput(args: GetUarOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUarResult> {
    return pulumi.output(args).apply((a: any) => getUar(a, opts))
}

/**
 * A collection of arguments for invoking getUar.
 */
export interface GetUarOutputArgs {
    uarId: pulumi.Input<string>;
}
