// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupResourceList(args: GetGroupResourceListArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResourceListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getGroupResourceList:getGroupResourceList", {
        "groupId": args.groupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupResourceList.
 */
export interface GetGroupResourceListArgs {
    groupId: string;
}

/**
 * A collection of values returned by getGroupResourceList.
 */
export interface GetGroupResourceListResult {
    readonly groupId: string;
    readonly groupResources: outputs.GetGroupResourceListGroupResource[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getGroupResourceListOutput(args: GetGroupResourceListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResourceListResult> {
    return pulumi.output(args).apply((a: any) => getGroupResourceList(a, opts))
}

/**
 * A collection of arguments for invoking getGroupResourceList.
 */
export interface GetGroupResourceListOutputArgs {
    groupId: pulumi.Input<string>;
}
