// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ConfigurationTemplateArgs, ConfigurationTemplateState } from "./configurationTemplate";
export type ConfigurationTemplate = import("./configurationTemplate").ConfigurationTemplate;
export const ConfigurationTemplate: typeof import("./configurationTemplate").ConfigurationTemplate = null as any;
utilities.lazyLoad(exports, ["ConfigurationTemplate"], () => require("./configurationTemplate"));

export { GetAppArgs, GetAppResult, GetAppOutputArgs } from "./getApp";
export const getApp: typeof import("./getApp").getApp = null as any;
export const getAppOutput: typeof import("./getApp").getAppOutput = null as any;
utilities.lazyLoad(exports, ["getApp","getAppOutput"], () => require("./getApp"));

export { GetAppsArgs, GetAppsResult, GetAppsOutputArgs } from "./getApps";
export const getApps: typeof import("./getApps").getApps = null as any;
export const getAppsOutput: typeof import("./getApps").getAppsOutput = null as any;
utilities.lazyLoad(exports, ["getApps","getAppsOutput"], () => require("./getApps"));

export { GetConfigurationTemplateListResult } from "./getConfigurationTemplateList";
export const getConfigurationTemplateList: typeof import("./getConfigurationTemplateList").getConfigurationTemplateList = null as any;
export const getConfigurationTemplateListOutput: typeof import("./getConfigurationTemplateList").getConfigurationTemplateListOutput = null as any;
utilities.lazyLoad(exports, ["getConfigurationTemplateList","getConfigurationTemplateListOutput"], () => require("./getConfigurationTemplateList"));

export { GetEventsArgs, GetEventsResult, GetEventsOutputArgs } from "./getEvents";
export const getEvents: typeof import("./getEvents").getEvents = null as any;
export const getEventsOutput: typeof import("./getEvents").getEventsOutput = null as any;
utilities.lazyLoad(exports, ["getEvents","getEventsOutput"], () => require("./getEvents"));

export { GetGroupArgs, GetGroupResult, GetGroupOutputArgs } from "./getGroup";
export const getGroup: typeof import("./getGroup").getGroup = null as any;
export const getGroupOutput: typeof import("./getGroup").getGroupOutput = null as any;
utilities.lazyLoad(exports, ["getGroup","getGroupOutput"], () => require("./getGroup"));

export { GetGroupListArgs, GetGroupListResult, GetGroupListOutputArgs } from "./getGroupList";
export const getGroupList: typeof import("./getGroupList").getGroupList = null as any;
export const getGroupListOutput: typeof import("./getGroupList").getGroupListOutput = null as any;
utilities.lazyLoad(exports, ["getGroupList","getGroupListOutput"], () => require("./getGroupList"));

export { GetGroupResourceListArgs, GetGroupResourceListResult, GetGroupResourceListOutputArgs } from "./getGroupResourceList";
export const getGroupResourceList: typeof import("./getGroupResourceList").getGroupResourceList = null as any;
export const getGroupResourceListOutput: typeof import("./getGroupResourceList").getGroupResourceListOutput = null as any;
utilities.lazyLoad(exports, ["getGroupResourceList","getGroupResourceListOutput"], () => require("./getGroupResourceList"));

export { GetGroupReviewersStagesListArgs, GetGroupReviewersStagesListResult, GetGroupReviewersStagesListOutputArgs } from "./getGroupReviewersStagesList";
export const getGroupReviewersStagesList: typeof import("./getGroupReviewersStagesList").getGroupReviewersStagesList = null as any;
export const getGroupReviewersStagesListOutput: typeof import("./getGroupReviewersStagesList").getGroupReviewersStagesListOutput = null as any;
utilities.lazyLoad(exports, ["getGroupReviewersStagesList","getGroupReviewersStagesListOutput"], () => require("./getGroupReviewersStagesList"));

export { GetGroupTagsArgs, GetGroupTagsResult, GetGroupTagsOutputArgs } from "./getGroupTags";
export const getGroupTags: typeof import("./getGroupTags").getGroupTags = null as any;
export const getGroupTagsOutput: typeof import("./getGroupTags").getGroupTagsOutput = null as any;
utilities.lazyLoad(exports, ["getGroupTags","getGroupTagsOutput"], () => require("./getGroupTags"));

export { GetGroupUsersArgs, GetGroupUsersResult, GetGroupUsersOutputArgs } from "./getGroupUsers";
export const getGroupUsers: typeof import("./getGroupUsers").getGroupUsers = null as any;
export const getGroupUsersOutput: typeof import("./getGroupUsers").getGroupUsersOutput = null as any;
utilities.lazyLoad(exports, ["getGroupUsers","getGroupUsersOutput"], () => require("./getGroupUsers"));

export { GetMessageChannelArgs, GetMessageChannelResult, GetMessageChannelOutputArgs } from "./getMessageChannel";
export const getMessageChannel: typeof import("./getMessageChannel").getMessageChannel = null as any;
export const getMessageChannelOutput: typeof import("./getMessageChannel").getMessageChannelOutput = null as any;
utilities.lazyLoad(exports, ["getMessageChannel","getMessageChannelOutput"], () => require("./getMessageChannel"));

export { GetMessageChannelListResult } from "./getMessageChannelList";
export const getMessageChannelList: typeof import("./getMessageChannelList").getMessageChannelList = null as any;
export const getMessageChannelListOutput: typeof import("./getMessageChannelList").getMessageChannelListOutput = null as any;
utilities.lazyLoad(exports, ["getMessageChannelList","getMessageChannelListOutput"], () => require("./getMessageChannelList"));

export { GetOnCallScheduleArgs, GetOnCallScheduleResult, GetOnCallScheduleOutputArgs } from "./getOnCallSchedule";
export const getOnCallSchedule: typeof import("./getOnCallSchedule").getOnCallSchedule = null as any;
export const getOnCallScheduleOutput: typeof import("./getOnCallSchedule").getOnCallScheduleOutput = null as any;
utilities.lazyLoad(exports, ["getOnCallSchedule","getOnCallScheduleOutput"], () => require("./getOnCallSchedule"));

export { GetOnCallScheduleListResult } from "./getOnCallScheduleList";
export const getOnCallScheduleList: typeof import("./getOnCallScheduleList").getOnCallScheduleList = null as any;
export const getOnCallScheduleListOutput: typeof import("./getOnCallScheduleList").getOnCallScheduleListOutput = null as any;
utilities.lazyLoad(exports, ["getOnCallScheduleList","getOnCallScheduleListOutput"], () => require("./getOnCallScheduleList"));

export { GetOwnerArgs, GetOwnerResult, GetOwnerOutputArgs } from "./getOwner";
export const getOwner: typeof import("./getOwner").getOwner = null as any;
export const getOwnerOutput: typeof import("./getOwner").getOwnerOutput = null as any;
utilities.lazyLoad(exports, ["getOwner","getOwnerOutput"], () => require("./getOwner"));

export { GetOwnerFromNameArgs, GetOwnerFromNameResult, GetOwnerFromNameOutputArgs } from "./getOwnerFromName";
export const getOwnerFromName: typeof import("./getOwnerFromName").getOwnerFromName = null as any;
export const getOwnerFromNameOutput: typeof import("./getOwnerFromName").getOwnerFromNameOutput = null as any;
utilities.lazyLoad(exports, ["getOwnerFromName","getOwnerFromNameOutput"], () => require("./getOwnerFromName"));

export { GetOwnersArgs, GetOwnersResult, GetOwnersOutputArgs } from "./getOwners";
export const getOwners: typeof import("./getOwners").getOwners = null as any;
export const getOwnersOutput: typeof import("./getOwners").getOwnersOutput = null as any;
utilities.lazyLoad(exports, ["getOwners","getOwnersOutput"], () => require("./getOwners"));

export { GetRequestsArgs, GetRequestsResult, GetRequestsOutputArgs } from "./getRequests";
export const getRequests: typeof import("./getRequests").getRequests = null as any;
export const getRequestsOutput: typeof import("./getRequests").getRequestsOutput = null as any;
utilities.lazyLoad(exports, ["getRequests","getRequestsOutput"], () => require("./getRequests"));

export { GetResourceArgs, GetResourceResult, GetResourceOutputArgs } from "./getResource";
export const getResource: typeof import("./getResource").getResource = null as any;
export const getResourceOutput: typeof import("./getResource").getResourceOutput = null as any;
utilities.lazyLoad(exports, ["getResource","getResourceOutput"], () => require("./getResource"));

export { GetResourceMessageChannelListArgs, GetResourceMessageChannelListResult, GetResourceMessageChannelListOutputArgs } from "./getResourceMessageChannelList";
export const getResourceMessageChannelList: typeof import("./getResourceMessageChannelList").getResourceMessageChannelList = null as any;
export const getResourceMessageChannelListOutput: typeof import("./getResourceMessageChannelList").getResourceMessageChannelListOutput = null as any;
utilities.lazyLoad(exports, ["getResourceMessageChannelList","getResourceMessageChannelListOutput"], () => require("./getResourceMessageChannelList"));

export { GetResourceReviewersListArgs, GetResourceReviewersListResult, GetResourceReviewersListOutputArgs } from "./getResourceReviewersList";
export const getResourceReviewersList: typeof import("./getResourceReviewersList").getResourceReviewersList = null as any;
export const getResourceReviewersListOutput: typeof import("./getResourceReviewersList").getResourceReviewersListOutput = null as any;
utilities.lazyLoad(exports, ["getResourceReviewersList","getResourceReviewersListOutput"], () => require("./getResourceReviewersList"));

export { GetResourceTagsArgs, GetResourceTagsResult, GetResourceTagsOutputArgs } from "./getResourceTags";
export const getResourceTags: typeof import("./getResourceTags").getResourceTags = null as any;
export const getResourceTagsOutput: typeof import("./getResourceTags").getResourceTagsOutput = null as any;
utilities.lazyLoad(exports, ["getResourceTags","getResourceTagsOutput"], () => require("./getResourceTags"));

export { GetResourceVisibilityArgs, GetResourceVisibilityResult, GetResourceVisibilityOutputArgs } from "./getResourceVisibility";
export const getResourceVisibility: typeof import("./getResourceVisibility").getResourceVisibility = null as any;
export const getResourceVisibilityOutput: typeof import("./getResourceVisibility").getResourceVisibilityOutput = null as any;
utilities.lazyLoad(exports, ["getResourceVisibility","getResourceVisibilityOutput"], () => require("./getResourceVisibility"));

export { GetResourcesAccessStatusArgs, GetResourcesAccessStatusResult, GetResourcesAccessStatusOutputArgs } from "./getResourcesAccessStatus";
export const getResourcesAccessStatus: typeof import("./getResourcesAccessStatus").getResourcesAccessStatus = null as any;
export const getResourcesAccessStatusOutput: typeof import("./getResourcesAccessStatus").getResourcesAccessStatusOutput = null as any;
utilities.lazyLoad(exports, ["getResourcesAccessStatus","getResourcesAccessStatusOutput"], () => require("./getResourcesAccessStatus"));

export { GetResourcesListArgs, GetResourcesListResult, GetResourcesListOutputArgs } from "./getResourcesList";
export const getResourcesList: typeof import("./getResourcesList").getResourcesList = null as any;
export const getResourcesListOutput: typeof import("./getResourcesList").getResourcesListOutput = null as any;
utilities.lazyLoad(exports, ["getResourcesList","getResourcesListOutput"], () => require("./getResourcesList"));

export { GetResourcesUsersListArgs, GetResourcesUsersListResult, GetResourcesUsersListOutputArgs } from "./getResourcesUsersList";
export const getResourcesUsersList: typeof import("./getResourcesUsersList").getResourcesUsersList = null as any;
export const getResourcesUsersListOutput: typeof import("./getResourcesUsersList").getResourcesUsersListOutput = null as any;
utilities.lazyLoad(exports, ["getResourcesUsersList","getResourcesUsersListOutput"], () => require("./getResourcesUsersList"));

export { GetSessionsArgs, GetSessionsResult, GetSessionsOutputArgs } from "./getSessions";
export const getSessions: typeof import("./getSessions").getSessions = null as any;
export const getSessionsOutput: typeof import("./getSessions").getSessionsOutput = null as any;
utilities.lazyLoad(exports, ["getSessions","getSessionsOutput"], () => require("./getSessions"));

export { GetTagArgs, GetTagResult, GetTagOutputArgs } from "./getTag";
export const getTag: typeof import("./getTag").getTag = null as any;
export const getTagOutput: typeof import("./getTag").getTagOutput = null as any;
utilities.lazyLoad(exports, ["getTag","getTagOutput"], () => require("./getTag"));

export { GetTagsListArgs, GetTagsListResult, GetTagsListOutputArgs } from "./getTagsList";
export const getTagsList: typeof import("./getTagsList").getTagsList = null as any;
export const getTagsListOutput: typeof import("./getTagsList").getTagsListOutput = null as any;
utilities.lazyLoad(exports, ["getTagsList","getTagsListOutput"], () => require("./getTagsList"));

export { GetUarArgs, GetUarResult, GetUarOutputArgs } from "./getUar";
export const getUar: typeof import("./getUar").getUar = null as any;
export const getUarOutput: typeof import("./getUar").getUarOutput = null as any;
utilities.lazyLoad(exports, ["getUar","getUarOutput"], () => require("./getUar"));

export { GetUarsListArgs, GetUarsListResult, GetUarsListOutputArgs } from "./getUarsList";
export const getUarsList: typeof import("./getUarsList").getUarsList = null as any;
export const getUarsListOutput: typeof import("./getUarsList").getUarsListOutput = null as any;
utilities.lazyLoad(exports, ["getUarsList","getUarsListOutput"], () => require("./getUarsList"));

export { GetUserArgs, GetUserResult, GetUserOutputArgs } from "./getUser";
export const getUser: typeof import("./getUser").getUser = null as any;
export const getUserOutput: typeof import("./getUser").getUserOutput = null as any;
utilities.lazyLoad(exports, ["getUser","getUserOutput"], () => require("./getUser"));

export { GetUserTagsArgs, GetUserTagsResult, GetUserTagsOutputArgs } from "./getUserTags";
export const getUserTags: typeof import("./getUserTags").getUserTags = null as any;
export const getUserTagsOutput: typeof import("./getUserTags").getUserTagsOutput = null as any;
utilities.lazyLoad(exports, ["getUserTags","getUserTagsOutput"], () => require("./getUserTags"));

export { GetUsersArgs, GetUsersResult, GetUsersOutputArgs } from "./getUsers";
export const getUsers: typeof import("./getUsers").getUsers = null as any;
export const getUsersOutput: typeof import("./getUsers").getUsersOutput = null as any;
utilities.lazyLoad(exports, ["getUsers","getUsersOutput"], () => require("./getUsers"));

export { GroupArgs, GroupState } from "./group";
export type Group = import("./group").Group;
export const Group: typeof import("./group").Group = null as any;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));

export { GroupResourceListArgs, GroupResourceListState } from "./groupResourceList";
export type GroupResourceList = import("./groupResourceList").GroupResourceList;
export const GroupResourceList: typeof import("./groupResourceList").GroupResourceList = null as any;
utilities.lazyLoad(exports, ["GroupResourceList"], () => require("./groupResourceList"));

export { GroupTagArgs, GroupTagState } from "./groupTag";
export type GroupTag = import("./groupTag").GroupTag;
export const GroupTag: typeof import("./groupTag").GroupTag = null as any;
utilities.lazyLoad(exports, ["GroupTag"], () => require("./groupTag"));

export { GroupUserArgs, GroupUserState } from "./groupUser";
export type GroupUser = import("./groupUser").GroupUser;
export const GroupUser: typeof import("./groupUser").GroupUser = null as any;
utilities.lazyLoad(exports, ["GroupUser"], () => require("./groupUser"));

export { MessageChannelArgs, MessageChannelState } from "./messageChannel";
export type MessageChannel = import("./messageChannel").MessageChannel;
export const MessageChannel: typeof import("./messageChannel").MessageChannel = null as any;
utilities.lazyLoad(exports, ["MessageChannel"], () => require("./messageChannel"));

export { OnCallScheduleArgs, OnCallScheduleState } from "./onCallSchedule";
export type OnCallSchedule = import("./onCallSchedule").OnCallSchedule;
export const OnCallSchedule: typeof import("./onCallSchedule").OnCallSchedule = null as any;
utilities.lazyLoad(exports, ["OnCallSchedule"], () => require("./onCallSchedule"));

export { OwnerArgs, OwnerState } from "./owner";
export type Owner = import("./owner").Owner;
export const Owner: typeof import("./owner").Owner = null as any;
utilities.lazyLoad(exports, ["Owner"], () => require("./owner"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { ResourceArgs, ResourceState } from "./resource";
export type Resource = import("./resource").Resource;
export const Resource: typeof import("./resource").Resource = null as any;
utilities.lazyLoad(exports, ["Resource"], () => require("./resource"));

export { ResourceTagArgs, ResourceTagState } from "./resourceTag";
export type ResourceTag = import("./resourceTag").ResourceTag;
export const ResourceTag: typeof import("./resourceTag").ResourceTag = null as any;
utilities.lazyLoad(exports, ["ResourceTag"], () => require("./resourceTag"));

export { TagArgs, TagState } from "./tag";
export type Tag = import("./tag").Tag;
export const Tag: typeof import("./tag").Tag = null as any;
utilities.lazyLoad(exports, ["Tag"], () => require("./tag"));

export { TagUserArgs, TagUserState } from "./tagUser";
export type TagUser = import("./tagUser").TagUser;
export const TagUser: typeof import("./tagUser").TagUser = null as any;
utilities.lazyLoad(exports, ["TagUser"], () => require("./tagUser"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "opal:index/configurationTemplate:ConfigurationTemplate":
                return new ConfigurationTemplate(name, <any>undefined, { urn })
            case "opal:index/group:Group":
                return new Group(name, <any>undefined, { urn })
            case "opal:index/groupResourceList:GroupResourceList":
                return new GroupResourceList(name, <any>undefined, { urn })
            case "opal:index/groupTag:GroupTag":
                return new GroupTag(name, <any>undefined, { urn })
            case "opal:index/groupUser:GroupUser":
                return new GroupUser(name, <any>undefined, { urn })
            case "opal:index/messageChannel:MessageChannel":
                return new MessageChannel(name, <any>undefined, { urn })
            case "opal:index/onCallSchedule:OnCallSchedule":
                return new OnCallSchedule(name, <any>undefined, { urn })
            case "opal:index/owner:Owner":
                return new Owner(name, <any>undefined, { urn })
            case "opal:index/resource:Resource":
                return new Resource(name, <any>undefined, { urn })
            case "opal:index/resourceTag:ResourceTag":
                return new ResourceTag(name, <any>undefined, { urn })
            case "opal:index/tag:Tag":
                return new Tag(name, <any>undefined, { urn })
            case "opal:index/tagUser:TagUser":
                return new TagUser(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("opal", "index/configurationTemplate", _module)
pulumi.runtime.registerResourceModule("opal", "index/group", _module)
pulumi.runtime.registerResourceModule("opal", "index/groupResourceList", _module)
pulumi.runtime.registerResourceModule("opal", "index/groupTag", _module)
pulumi.runtime.registerResourceModule("opal", "index/groupUser", _module)
pulumi.runtime.registerResourceModule("opal", "index/messageChannel", _module)
pulumi.runtime.registerResourceModule("opal", "index/onCallSchedule", _module)
pulumi.runtime.registerResourceModule("opal", "index/owner", _module)
pulumi.runtime.registerResourceModule("opal", "index/resource", _module)
pulumi.runtime.registerResourceModule("opal", "index/resourceTag", _module)
pulumi.runtime.registerResourceModule("opal", "index/tag", _module)
pulumi.runtime.registerResourceModule("opal", "index/tagUser", _module)
pulumi.runtime.registerResourcePackage("opal", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:opal") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
