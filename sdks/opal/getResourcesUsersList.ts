// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResourcesUsersList(args: GetResourcesUsersListArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcesUsersListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getResourcesUsersList:getResourcesUsersList", {
        "limit": args.limit,
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourcesUsersList.
 */
export interface GetResourcesUsersListArgs {
    limit?: number;
    resourceId: string;
}

/**
 * A collection of values returned by getResourcesUsersList.
 */
export interface GetResourcesUsersListResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly resourceId: string;
    readonly results: outputs.GetResourcesUsersListResult[];
}
export function getResourcesUsersListOutput(args: GetResourcesUsersListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcesUsersListResult> {
    return pulumi.output(args).apply((a: any) => getResourcesUsersList(a, opts))
}

/**
 * A collection of arguments for invoking getResourcesUsersList.
 */
export interface GetResourcesUsersListOutputArgs {
    limit?: pulumi.Input<number>;
    resourceId: pulumi.Input<string>;
}
