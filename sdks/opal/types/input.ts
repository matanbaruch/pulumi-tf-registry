// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ConfigurationTemplateRequestConfiguration {
    /**
     * A bool representing whether or not to allow requests for this resource.
     */
    allowRequests: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not to automatically approve requests for this resource.
     */
    autoApproval: pulumi.Input<boolean>;
    condition?: pulumi.Input<inputs.ConfigurationTemplateRequestConfigurationCondition>;
    /**
     * The maximum duration for which the resource can be requested (in minutes).
     */
    maxDuration?: pulumi.Input<number>;
    /**
     * The priority of the request configuration.
     */
    priority: pulumi.Input<number>;
    /**
     * The recommended duration for which the resource should be requested (in minutes). -1 represents an indefinite duration.
     */
    recommendedDuration?: pulumi.Input<number>;
    /**
     * The ID of the associated request template.
     */
    requestTemplateId?: pulumi.Input<string>;
    /**
     * A bool representing whether or not to require MFA for requesting access to this resource.
     */
    requireMfaToRequest: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not access requests to the resource require an access ticket.
     */
    requireSupportTicket: pulumi.Input<boolean>;
    /**
     * The list of reviewer stages for the request configuration.
     */
    reviewerStages?: pulumi.Input<pulumi.Input<inputs.ConfigurationTemplateRequestConfigurationReviewerStage>[]>;
}

export interface ConfigurationTemplateRequestConfigurationCondition {
    /**
     * The list of group IDs to match.
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of role remote IDs to match.
     */
    roleRemoteIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConfigurationTemplateRequestConfigurationReviewerStage {
    /**
     * The operator of the reviewer stage. Admin and manager approval are also treated as reviewers. must be one of ["AND", "OR"]; Default: "AND"
     */
    operator?: pulumi.Input<string>;
    ownerIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether this reviewer stage should require admin approval.
     */
    requireAdminApproval?: pulumi.Input<boolean>;
    /**
     * Whether this reviewer stage should require manager approval.
     */
    requireManagerApproval: pulumi.Input<boolean>;
}

export interface ConfigurationTemplateTicketPropagation {
    /**
     * Not Null
     */
    enabledOnGrant?: pulumi.Input<boolean>;
    /**
     * Not Null
     */
    enabledOnRevocation?: pulumi.Input<boolean>;
    ticketProjectId?: pulumi.Input<string>;
    /**
     * The third party ticketing platform provider. must be one of ["JIRA", "LINEAR", "SERVICE_NOW"]
     */
    ticketProvider?: pulumi.Input<string>;
}

export interface ConfigurationTemplateVisibility {
    /**
     * The visibility level of the entity. must be one of ["GLOBAL", "LIMITED"]
     */
    visibility: pulumi.Input<string>;
    visibilityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GroupMessageChannels {
    channels?: pulumi.Input<pulumi.Input<inputs.GroupMessageChannelsChannel>[]>;
}

export interface GroupMessageChannelsChannel {
    /**
     * The ID of the message channel.
     */
    id?: pulumi.Input<string>;
    /**
     * A bool representing whether or not the message channel is private.
     */
    isPrivate?: pulumi.Input<boolean>;
    /**
     * The name of the message channel.
     */
    name?: pulumi.Input<string>;
    /**
     * The remote ID of the message channel
     */
    remoteId?: pulumi.Input<string>;
    /**
     * The third party provider of the message channel. must be one of ["SLACK"]
     */
    thirdPartyProvider?: pulumi.Input<string>;
}

export interface GroupOncallSchedules {
    /**
     * The ID of the on-call schedule.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the on call schedule.
     */
    name?: pulumi.Input<string>;
    /**
     * The remote ID of the on call schedule
     */
    remoteId?: pulumi.Input<string>;
    /**
     * The third party provider of the on call schedule. must be one of ["OPSGENIE", "PAGER_DUTY"]
     */
    thirdPartyProvider?: pulumi.Input<string>;
}

export interface GroupRemoteInfo {
    /**
     * Remote info for Active Directory group. Requires replacement if changed.
     */
    activeDirectoryGroup?: pulumi.Input<inputs.GroupRemoteInfoActiveDirectoryGroup>;
    /**
     * Remote info for Microsoft Entra ID Microsoft 365 group. Requires replacement if changed.
     */
    azureAdMicrosoft365Group?: pulumi.Input<inputs.GroupRemoteInfoAzureAdMicrosoft365Group>;
    /**
     * Remote info for Microsoft Entra ID Security group. Requires replacement if changed.
     */
    azureAdSecurityGroup?: pulumi.Input<inputs.GroupRemoteInfoAzureAdSecurityGroup>;
    /**
     * Remote info for Duo Security group. Requires replacement if changed.
     */
    duoGroup?: pulumi.Input<inputs.GroupRemoteInfoDuoGroup>;
    /**
     * Remote info for GitHub team. Requires replacement if changed.
     */
    githubTeam?: pulumi.Input<inputs.GroupRemoteInfoGithubTeam>;
    /**
     * Remote info for Gitlab group. Requires replacement if changed.
     */
    gitlabGroup?: pulumi.Input<inputs.GroupRemoteInfoGitlabGroup>;
    /**
     * Remote info for Google group. Requires replacement if changed.
     */
    googleGroup?: pulumi.Input<inputs.GroupRemoteInfoGoogleGroup>;
    /**
     * Remote info for LDAP group. Requires replacement if changed.
     */
    ldapGroup?: pulumi.Input<inputs.GroupRemoteInfoLdapGroup>;
    /**
     * Remote info for Okta Directory group. Requires replacement if changed.
     */
    oktaGroup?: pulumi.Input<inputs.GroupRemoteInfoOktaGroup>;
}

export interface GroupRemoteInfoActiveDirectoryGroup {
    /**
     * The id of the Google group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRemoteInfoAzureAdMicrosoft365Group {
    /**
     * The id of the Microsoft Entra ID Microsoft 365 group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRemoteInfoAzureAdSecurityGroup {
    /**
     * The id of the Microsoft Entra ID Security group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRemoteInfoDuoGroup {
    /**
     * The id of the Duo Security group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRemoteInfoGithubTeam {
    /**
     * The slug of the GitHub team. Requires replacement if changed. ; Not Null
     */
    teamSlug?: pulumi.Input<string>;
}

export interface GroupRemoteInfoGitlabGroup {
    /**
     * The id of the Gitlab group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRemoteInfoGoogleGroup {
    /**
     * The id of the Google group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRemoteInfoLdapGroup {
    /**
     * The id of the LDAP group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRemoteInfoOktaGroup {
    /**
     * The id of the Okta Directory group. Requires replacement if changed. ; Not Null
     */
    groupId?: pulumi.Input<string>;
}

export interface GroupRequestConfiguration {
    /**
     * A bool representing whether or not to allow requests for this resource. Not Null
     */
    allowRequests?: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not to automatically approve requests for this resource. Not Null
     */
    autoApproval?: pulumi.Input<boolean>;
    condition?: pulumi.Input<inputs.GroupRequestConfigurationCondition>;
    /**
     * The maximum duration for which the resource can be requested (in minutes).
     */
    maxDuration?: pulumi.Input<number>;
    /**
     * The priority of the request configuration. Not Null
     */
    priority?: pulumi.Input<number>;
    /**
     * The recommended duration for which the resource should be requested (in minutes). -1 represents an indefinite duration.
     */
    recommendedDuration?: pulumi.Input<number>;
    /**
     * The ID of the associated request template.
     */
    requestTemplateId?: pulumi.Input<string>;
    /**
     * A bool representing whether or not to require MFA for requesting access to this resource. Not Null
     */
    requireMfaToRequest?: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not access requests to the resource require an access ticket. Not Null
     */
    requireSupportTicket?: pulumi.Input<boolean>;
    /**
     * The list of reviewer stages for the request configuration.
     */
    reviewerStages?: pulumi.Input<pulumi.Input<inputs.GroupRequestConfigurationReviewerStage>[]>;
}

export interface GroupRequestConfigurationCondition {
    /**
     * The list of group IDs to match.
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of role remote IDs to match.
     */
    roleRemoteIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GroupRequestConfigurationReviewerStage {
    /**
     * The operator of the reviewer stage. Admin and manager approval are also treated as reviewers. must be one of ["AND", "OR"]; Default: "AND"
     */
    operator?: pulumi.Input<string>;
    /**
     * Not Null
     */
    ownerIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether this reviewer stage should require admin approval.
     */
    requireAdminApproval?: pulumi.Input<boolean>;
    /**
     * Whether this reviewer stage should require manager approval. Not Null
     */
    requireManagerApproval?: pulumi.Input<boolean>;
}

export interface GroupResourceListGroupResource {
    /**
     * # Access Level Object
     * ### Description
     * The `ResourceAccessLevel` object is used to represent the level of access that a user has to a resource or a resource has to a group. The "default" access
     * level is a `ResourceAccessLevel` object whose fields are all empty strings.
     *
     * ### Usage Example
     * View the `ResourceAccessLevel` of a resource/user or resource/group pair to see the level of access granted to the resource.
     */
    accessLevel?: pulumi.Input<inputs.GroupResourceListGroupResourceAccessLevel>;
    /**
     * The ID of the group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The ID of the resource.
     */
    resourceId?: pulumi.Input<string>;
}

export interface GroupResourceListGroupResourceAccessLevel {
    /**
     * The human-readable name of the access level.
     */
    accessLevelName?: pulumi.Input<string>;
    /**
     * The machine-readable identifier of the access level.
     */
    accessLevelRemoteId?: pulumi.Input<string>;
}

export interface GroupResourceListResource {
    /**
     * The ID of the resource.
     */
    accessLevelRemoteId?: pulumi.Input<string>;
    /**
     * The ID of the resource.
     */
    resourceId: pulumi.Input<string>;
}

export interface GroupUserAccessLevel {
    /**
     * The human-readable name of the access level.
     */
    accessLevelName?: pulumi.Input<string>;
    /**
     * The machine-readable identifier of the access level.
     */
    accessLevelRemoteId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfo {
    /**
     * Remote info for AWS account. Requires replacement if changed.
     */
    awsAccount?: pulumi.Input<inputs.ResourceRemoteInfoAwsAccount>;
    /**
     * Remote info for AWS EC2 instance. Requires replacement if changed.
     */
    awsEc2Instance?: pulumi.Input<inputs.ResourceRemoteInfoAwsEc2Instance>;
    /**
     * Remote info for AWS EKS cluster. Requires replacement if changed.
     */
    awsEksCluster?: pulumi.Input<inputs.ResourceRemoteInfoAwsEksCluster>;
    /**
     * Remote info for AWS IAM role. Requires replacement if changed.
     */
    awsIamRole?: pulumi.Input<inputs.ResourceRemoteInfoAwsIamRole>;
    /**
     * Remote info for AWS Identity Center permission set. Requires replacement if changed.
     */
    awsPermissionSet?: pulumi.Input<inputs.ResourceRemoteInfoAwsPermissionSet>;
    /**
     * Remote info for AWS RDS instance. Requires replacement if changed.
     */
    awsRdsInstance?: pulumi.Input<inputs.ResourceRemoteInfoAwsRdsInstance>;
    /**
     * Remote info for GCP BigQuery Dataset. Requires replacement if changed.
     */
    gcpBigQueryDataset?: pulumi.Input<inputs.ResourceRemoteInfoGcpBigQueryDataset>;
    /**
     * Remote info for GCP BigQuery Table. Requires replacement if changed.
     */
    gcpBigQueryTable?: pulumi.Input<inputs.ResourceRemoteInfoGcpBigQueryTable>;
    /**
     * Remote info for GCP bucket. Requires replacement if changed.
     */
    gcpBucket?: pulumi.Input<inputs.ResourceRemoteInfoGcpBucket>;
    /**
     * Remote info for GCP compute instance. Requires replacement if changed.
     */
    gcpComputeInstance?: pulumi.Input<inputs.ResourceRemoteInfoGcpComputeInstance>;
    /**
     * Remote info for GCP folder. Requires replacement if changed.
     */
    gcpFolder?: pulumi.Input<inputs.ResourceRemoteInfoGcpFolder>;
    /**
     * Remote info for GCP GKE cluster. Requires replacement if changed.
     */
    gcpGkeCluster?: pulumi.Input<inputs.ResourceRemoteInfoGcpGkeCluster>;
    /**
     * Remote info for GCP organization. Requires replacement if changed.
     */
    gcpOrganization?: pulumi.Input<inputs.ResourceRemoteInfoGcpOrganization>;
    /**
     * Remote info for GCP project. Requires replacement if changed.
     */
    gcpProject?: pulumi.Input<inputs.ResourceRemoteInfoGcpProject>;
    /**
     * Remote info for GCP SQL instance. Requires replacement if changed.
     */
    gcpSqlInstance?: pulumi.Input<inputs.ResourceRemoteInfoGcpSqlInstance>;
    /**
     * Remote info for GitHub repository. Requires replacement if changed.
     */
    githubRepo?: pulumi.Input<inputs.ResourceRemoteInfoGithubRepo>;
    /**
     * Remote info for Gitlab project. Requires replacement if changed.
     */
    gitlabProject?: pulumi.Input<inputs.ResourceRemoteInfoGitlabProject>;
    /**
     * Remote info for Okta directory app. Requires replacement if changed.
     */
    oktaApp?: pulumi.Input<inputs.ResourceRemoteInfoOktaApp>;
    /**
     * Remote info for Okta directory custom role. Requires replacement if changed.
     */
    oktaCustomRole?: pulumi.Input<inputs.ResourceRemoteInfoOktaCustomRole>;
    /**
     * Remote info for Okta directory standard role. Requires replacement if changed.
     */
    oktaStandardRole?: pulumi.Input<inputs.ResourceRemoteInfoOktaStandardRole>;
    /**
     * Remote info for Pagerduty role. Requires replacement if changed.
     */
    pagerdutyRole?: pulumi.Input<inputs.ResourceRemoteInfoPagerdutyRole>;
    /**
     * Remote info for Salesforce permission set. Requires replacement if changed.
     */
    salesforcePermissionSet?: pulumi.Input<inputs.ResourceRemoteInfoSalesforcePermissionSet>;
    /**
     * Remote info for Salesforce profile. Requires replacement if changed.
     */
    salesforceProfile?: pulumi.Input<inputs.ResourceRemoteInfoSalesforceProfile>;
    /**
     * Remote info for Salesforce role. Requires replacement if changed.
     */
    salesforceRole?: pulumi.Input<inputs.ResourceRemoteInfoSalesforceRole>;
    /**
     * Remote info for Teleport role. Requires replacement if changed.
     */
    teleportRole?: pulumi.Input<inputs.ResourceRemoteInfoTeleportRole>;
}

export interface ResourceRemoteInfoAwsAccount {
    /**
     * The id of the AWS account. Requires replacement if changed. ; Not Null
     */
    accountId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoAwsEc2Instance {
    /**
     * The id of the AWS account. Required for AWS Organizations. Requires replacement if changed.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The instanceId of the EC2 instance. Requires replacement if changed. ; Not Null
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The region of the EC2 instance. Requires replacement if changed. ; Not Null
     */
    region?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoAwsEksCluster {
    /**
     * The id of the AWS account. Required for AWS Organizations. Requires replacement if changed.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The ARN of the EKS cluster. Requires replacement if changed. ; Not Null
     */
    arn?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoAwsIamRole {
    /**
     * The id of the AWS account. Required for AWS Organizations. Requires replacement if changed.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role. Requires replacement if changed. ; Not Null
     */
    arn?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoAwsPermissionSet {
    /**
     * The ID of an AWS account to which this permission set is provisioned. Requires replacement if changed. ; Not Null
     */
    accountId?: pulumi.Input<string>;
    /**
     * The ARN of the permission set. Requires replacement if changed. ; Not Null
     */
    arn?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoAwsRdsInstance {
    /**
     * The id of the AWS account. Required for AWS Organizations. Requires replacement if changed.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The instanceId of the RDS instance. Requires replacement if changed. ; Not Null
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The region of the RDS instance. Requires replacement if changed. ; Not Null
     */
    region?: pulumi.Input<string>;
    /**
     * The resourceId of the RDS instance. Requires replacement if changed. ; Not Null
     */
    resourceId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpBigQueryDataset {
    /**
     * The id of the dataset. Requires replacement if changed. ; Not Null
     */
    datasetId?: pulumi.Input<string>;
    /**
     * The id of the project the dataset is in. Requires replacement if changed. ; Not Null
     */
    projectId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpBigQueryTable {
    /**
     * The id of the dataset the table is in. Requires replacement if changed. ; Not Null
     */
    datasetId?: pulumi.Input<string>;
    /**
     * The id of the project the table is in. Requires replacement if changed. ; Not Null
     */
    projectId?: pulumi.Input<string>;
    /**
     * The id of the table. Requires replacement if changed. ; Not Null
     */
    tableId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpBucket {
    /**
     * The id of the bucket. Requires replacement if changed. ; Not Null
     */
    bucketId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpComputeInstance {
    /**
     * The id of the instance. Requires replacement if changed. ; Not Null
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The id of the project the instance is in. Requires replacement if changed. ; Not Null
     */
    projectId?: pulumi.Input<string>;
    /**
     * The zone the instance is in. Requires replacement if changed. ; Not Null
     */
    zone?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpFolder {
    /**
     * The id of the folder. Requires replacement if changed. ; Not Null
     */
    folderId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpGkeCluster {
    /**
     * The name of the GKE cluster. Requires replacement if changed. ; Not Null
     */
    clusterName?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpOrganization {
    /**
     * The id of the organization. Requires replacement if changed. ; Not Null
     */
    organizationId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpProject {
    /**
     * The id of the project. Requires replacement if changed. ; Not Null
     */
    projectId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGcpSqlInstance {
    /**
     * The id of the SQL instance. Requires replacement if changed. ; Not Null
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The id of the project the instance is in. Requires replacement if changed. ; Not Null
     */
    projectId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGithubRepo {
    /**
     * The name of the repository. Requires replacement if changed. ; Not Null
     */
    repoName?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoGitlabProject {
    /**
     * The id of the project. Requires replacement if changed. ; Not Null
     */
    projectId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoOktaApp {
    /**
     * The id of the app. Requires replacement if changed. ; Not Null
     */
    appId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoOktaCustomRole {
    /**
     * The id of the custom role. Requires replacement if changed. ; Not Null
     */
    roleId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoOktaStandardRole {
    /**
     * The type of the standard role. Requires replacement if changed. ; Not Null
     */
    roleType?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoPagerdutyRole {
    /**
     * The name of the role. Requires replacement if changed. ; Not Null
     */
    roleName?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoSalesforcePermissionSet {
    /**
     * The id of the permission set. Requires replacement if changed. ; Not Null
     */
    permissionSetId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoSalesforceProfile {
    /**
     * The id of the permission set. Requires replacement if changed. ; Not Null
     */
    profileId?: pulumi.Input<string>;
    /**
     * The id of the user license. Requires replacement if changed. ; Not Null
     */
    userLicenseId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoSalesforceRole {
    /**
     * The id of the role. Requires replacement if changed. ; Not Null
     */
    roleId?: pulumi.Input<string>;
}

export interface ResourceRemoteInfoTeleportRole {
    /**
     * The name role. Requires replacement if changed. ; Not Null
     */
    roleName?: pulumi.Input<string>;
}

export interface ResourceRequestConfiguration {
    /**
     * A bool representing whether or not to allow requests for this resource. Not Null
     */
    allowRequests?: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not to automatically approve requests for this resource. Not Null
     */
    autoApproval?: pulumi.Input<boolean>;
    condition?: pulumi.Input<inputs.ResourceRequestConfigurationCondition>;
    /**
     * The maximum duration for which the resource can be requested (in minutes).
     */
    maxDuration?: pulumi.Input<number>;
    /**
     * The priority of the request configuration. Not Null
     */
    priority?: pulumi.Input<number>;
    /**
     * The recommended duration for which the resource should be requested (in minutes). -1 represents an indefinite duration.
     */
    recommendedDuration?: pulumi.Input<number>;
    /**
     * The ID of the associated request template.
     */
    requestTemplateId?: pulumi.Input<string>;
    /**
     * A bool representing whether or not to require MFA for requesting access to this resource. Not Null
     */
    requireMfaToRequest?: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not access requests to the resource require an access ticket. Not Null
     */
    requireSupportTicket?: pulumi.Input<boolean>;
    /**
     * The list of reviewer stages for the request configuration.
     */
    reviewerStages?: pulumi.Input<pulumi.Input<inputs.ResourceRequestConfigurationReviewerStage>[]>;
}

export interface ResourceRequestConfigurationCondition {
    /**
     * The list of group IDs to match.
     */
    groupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of role remote IDs to match.
     */
    roleRemoteIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceRequestConfigurationReviewerStage {
    /**
     * The operator of the reviewer stage. Admin and manager approval are also treated as reviewers. must be one of ["AND", "OR"]; Default: "AND"
     */
    operator?: pulumi.Input<string>;
    /**
     * Not Null
     */
    ownerIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether this reviewer stage should require admin approval.
     */
    requireAdminApproval?: pulumi.Input<boolean>;
    /**
     * Whether this reviewer stage should require manager approval. Not Null
     */
    requireManagerApproval?: pulumi.Input<boolean>;
}

export interface ResourceTicketPropagation {
    /**
     * Not Null
     */
    enabledOnGrant?: pulumi.Input<boolean>;
    /**
     * Not Null
     */
    enabledOnRevocation?: pulumi.Input<boolean>;
    ticketProjectId?: pulumi.Input<string>;
    /**
     * The third party ticketing platform provider. must be one of ["JIRA", "LINEAR", "SERVICE_NOW"]
     */
    ticketProvider?: pulumi.Input<string>;
}
