// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGroupReviewersStagesList(args: GetGroupReviewersStagesListArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupReviewersStagesListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getGroupReviewersStagesList:getGroupReviewersStagesList", {
        "groupId": args.groupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroupReviewersStagesList.
 */
export interface GetGroupReviewersStagesListArgs {
    groupId: string;
}

/**
 * A collection of values returned by getGroupReviewersStagesList.
 */
export interface GetGroupReviewersStagesListResult {
    readonly datas: outputs.GetGroupReviewersStagesListData[];
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getGroupReviewersStagesListOutput(args: GetGroupReviewersStagesListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupReviewersStagesListResult> {
    return pulumi.output(args).apply((a: any) => getGroupReviewersStagesList(a, opts))
}

/**
 * A collection of arguments for invoking getGroupReviewersStagesList.
 */
export interface GetGroupReviewersStagesListOutputArgs {
    groupId: pulumi.Input<string>;
}
