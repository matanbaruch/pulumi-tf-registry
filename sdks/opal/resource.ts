// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Resource extends pulumi.CustomResource {
    /**
     * Get an existing Resource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceState, opts?: pulumi.CustomResourceOptions): Resource {
        return new Resource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opal:index/resource:Resource';

    /**
     * Returns true if the given object is an instance of Resource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Resource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Resource.__pulumiType;
    }

    /**
     * The ID of the owner of the resource.
     */
    public readonly adminOwnerId!: pulumi.Output<string>;
    /**
     * The ID of the app for the resource. Requires replacement if changed.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * A description of the remote resource.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the remote resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the parent resource.
     */
    public /*out*/ readonly parentResourceId!: pulumi.Output<string>;
    /**
     * Information that defines the remote resource. This replaces the deprecated remote_id and metadata fields. Requires
     * replacement if changed.
     */
    public readonly remoteInfo!: pulumi.Output<outputs.ResourceRemoteInfo>;
    /**
     * A list of configurations for requests to this resource. If not provided, the default request configuration will be used.
     */
    public readonly requestConfigurations!: pulumi.Output<outputs.ResourceRequestConfiguration[]>;
    /**
     * A bool representing whether or not to require MFA for reviewers to approve requests for this resource.
     */
    public readonly requireMfaToApprove!: pulumi.Output<boolean>;
    /**
     * A bool representing whether or not to require MFA to connect to this resource.
     */
    public readonly requireMfaToConnect!: pulumi.Output<boolean>;
    /**
     * The type of the resource. Requires replacement if changed. ; must be one of ["AWS_IAM_ROLE", "AWS_EC2_INSTANCE",
     * "AWS_EKS_CLUSTER", "AWS_RDS_POSTGRES_INSTANCE", "AWS_RDS_MYSQL_INSTANCE", "AWS_ACCOUNT", "AWS_SSO_PERMISSION_SET",
     * "CUSTOM", "GCP_BUCKET", "GCP_COMPUTE_INSTANCE", "GCP_FOLDER", "GCP_GKE_CLUSTER", "GCP_PROJECT",
     * "GCP_CLOUD_SQL_POSTGRES_INSTANCE", "GCP_CLOUD_SQL_MYSQL_INSTANCE", "GIT_HUB_REPO", "GIT_LAB_PROJECT",
     * "GOOGLE_WORKSPACE_ROLE", "MONGO_INSTANCE", "MONGO_ATLAS_INSTANCE", "OKTA_APP", "OKTA_ROLE", "OPAL_ROLE",
     * "PAGERDUTY_ROLE", "TAILSCALE_SSH", "SALESFORCE_PERMISSION_SET", "SALESFORCE_PROFILE", "SALESFORCE_ROLE", "WORKDAY_ROLE",
     * "MYSQL_INSTANCE", "MARIADB_INSTANCE", "TELEPORT_ROLE"]
     */
    public readonly resourceType!: pulumi.Output<string>;
    /**
     * Configuration for ticket propagation, when enabled, a ticket will be created for access changes related to the users in
     * this resource.
     */
    public readonly ticketPropagation!: pulumi.Output<outputs.ResourceTicketPropagation>;
    /**
     * The visibility level of the entity. must be one of ["GLOBAL", "LIMITED"]
     */
    public readonly visibility!: pulumi.Output<string>;
    public readonly visibilityGroupIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Resource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceArgs | ResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceState | undefined;
            resourceInputs["adminOwnerId"] = state ? state.adminOwnerId : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentResourceId"] = state ? state.parentResourceId : undefined;
            resourceInputs["remoteInfo"] = state ? state.remoteInfo : undefined;
            resourceInputs["requestConfigurations"] = state ? state.requestConfigurations : undefined;
            resourceInputs["requireMfaToApprove"] = state ? state.requireMfaToApprove : undefined;
            resourceInputs["requireMfaToConnect"] = state ? state.requireMfaToConnect : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["ticketPropagation"] = state ? state.ticketPropagation : undefined;
            resourceInputs["visibility"] = state ? state.visibility : undefined;
            resourceInputs["visibilityGroupIds"] = state ? state.visibilityGroupIds : undefined;
        } else {
            const args = argsOrState as ResourceArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.requestConfigurations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requestConfigurations'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            if ((!args || args.visibility === undefined) && !opts.urn) {
                throw new Error("Missing required property 'visibility'");
            }
            resourceInputs["adminOwnerId"] = args ? args.adminOwnerId : undefined;
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["remoteInfo"] = args ? args.remoteInfo : undefined;
            resourceInputs["requestConfigurations"] = args ? args.requestConfigurations : undefined;
            resourceInputs["requireMfaToApprove"] = args ? args.requireMfaToApprove : undefined;
            resourceInputs["requireMfaToConnect"] = args ? args.requireMfaToConnect : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["ticketPropagation"] = args ? args.ticketPropagation : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
            resourceInputs["visibilityGroupIds"] = args ? args.visibilityGroupIds : undefined;
            resourceInputs["parentResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Resource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Resource resources.
 */
export interface ResourceState {
    /**
     * The ID of the owner of the resource.
     */
    adminOwnerId?: pulumi.Input<string>;
    /**
     * The ID of the app for the resource. Requires replacement if changed.
     */
    appId?: pulumi.Input<string>;
    /**
     * A description of the remote resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the remote resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the parent resource.
     */
    parentResourceId?: pulumi.Input<string>;
    /**
     * Information that defines the remote resource. This replaces the deprecated remote_id and metadata fields. Requires
     * replacement if changed.
     */
    remoteInfo?: pulumi.Input<inputs.ResourceRemoteInfo>;
    /**
     * A list of configurations for requests to this resource. If not provided, the default request configuration will be used.
     */
    requestConfigurations?: pulumi.Input<pulumi.Input<inputs.ResourceRequestConfiguration>[]>;
    /**
     * A bool representing whether or not to require MFA for reviewers to approve requests for this resource.
     */
    requireMfaToApprove?: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not to require MFA to connect to this resource.
     */
    requireMfaToConnect?: pulumi.Input<boolean>;
    /**
     * The type of the resource. Requires replacement if changed. ; must be one of ["AWS_IAM_ROLE", "AWS_EC2_INSTANCE",
     * "AWS_EKS_CLUSTER", "AWS_RDS_POSTGRES_INSTANCE", "AWS_RDS_MYSQL_INSTANCE", "AWS_ACCOUNT", "AWS_SSO_PERMISSION_SET",
     * "CUSTOM", "GCP_BUCKET", "GCP_COMPUTE_INSTANCE", "GCP_FOLDER", "GCP_GKE_CLUSTER", "GCP_PROJECT",
     * "GCP_CLOUD_SQL_POSTGRES_INSTANCE", "GCP_CLOUD_SQL_MYSQL_INSTANCE", "GIT_HUB_REPO", "GIT_LAB_PROJECT",
     * "GOOGLE_WORKSPACE_ROLE", "MONGO_INSTANCE", "MONGO_ATLAS_INSTANCE", "OKTA_APP", "OKTA_ROLE", "OPAL_ROLE",
     * "PAGERDUTY_ROLE", "TAILSCALE_SSH", "SALESFORCE_PERMISSION_SET", "SALESFORCE_PROFILE", "SALESFORCE_ROLE", "WORKDAY_ROLE",
     * "MYSQL_INSTANCE", "MARIADB_INSTANCE", "TELEPORT_ROLE"]
     */
    resourceType?: pulumi.Input<string>;
    /**
     * Configuration for ticket propagation, when enabled, a ticket will be created for access changes related to the users in
     * this resource.
     */
    ticketPropagation?: pulumi.Input<inputs.ResourceTicketPropagation>;
    /**
     * The visibility level of the entity. must be one of ["GLOBAL", "LIMITED"]
     */
    visibility?: pulumi.Input<string>;
    visibilityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Resource resource.
 */
export interface ResourceArgs {
    /**
     * The ID of the owner of the resource.
     */
    adminOwnerId?: pulumi.Input<string>;
    /**
     * The ID of the app for the resource. Requires replacement if changed.
     */
    appId: pulumi.Input<string>;
    /**
     * A description of the remote resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the remote resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Information that defines the remote resource. This replaces the deprecated remote_id and metadata fields. Requires
     * replacement if changed.
     */
    remoteInfo?: pulumi.Input<inputs.ResourceRemoteInfo>;
    /**
     * A list of configurations for requests to this resource. If not provided, the default request configuration will be used.
     */
    requestConfigurations: pulumi.Input<pulumi.Input<inputs.ResourceRequestConfiguration>[]>;
    /**
     * A bool representing whether or not to require MFA for reviewers to approve requests for this resource.
     */
    requireMfaToApprove?: pulumi.Input<boolean>;
    /**
     * A bool representing whether or not to require MFA to connect to this resource.
     */
    requireMfaToConnect?: pulumi.Input<boolean>;
    /**
     * The type of the resource. Requires replacement if changed. ; must be one of ["AWS_IAM_ROLE", "AWS_EC2_INSTANCE",
     * "AWS_EKS_CLUSTER", "AWS_RDS_POSTGRES_INSTANCE", "AWS_RDS_MYSQL_INSTANCE", "AWS_ACCOUNT", "AWS_SSO_PERMISSION_SET",
     * "CUSTOM", "GCP_BUCKET", "GCP_COMPUTE_INSTANCE", "GCP_FOLDER", "GCP_GKE_CLUSTER", "GCP_PROJECT",
     * "GCP_CLOUD_SQL_POSTGRES_INSTANCE", "GCP_CLOUD_SQL_MYSQL_INSTANCE", "GIT_HUB_REPO", "GIT_LAB_PROJECT",
     * "GOOGLE_WORKSPACE_ROLE", "MONGO_INSTANCE", "MONGO_ATLAS_INSTANCE", "OKTA_APP", "OKTA_ROLE", "OPAL_ROLE",
     * "PAGERDUTY_ROLE", "TAILSCALE_SSH", "SALESFORCE_PERMISSION_SET", "SALESFORCE_PROFILE", "SALESFORCE_ROLE", "WORKDAY_ROLE",
     * "MYSQL_INSTANCE", "MARIADB_INSTANCE", "TELEPORT_ROLE"]
     */
    resourceType: pulumi.Input<string>;
    /**
     * Configuration for ticket propagation, when enabled, a ticket will be created for access changes related to the users in
     * this resource.
     */
    ticketPropagation?: pulumi.Input<inputs.ResourceTicketPropagation>;
    /**
     * The visibility level of the entity. must be one of ["GLOBAL", "LIMITED"]
     */
    visibility: pulumi.Input<string>;
    visibilityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
