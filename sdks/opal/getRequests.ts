// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRequests(args?: GetRequestsArgs, opts?: pulumi.InvokeOptions): Promise<GetRequestsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getRequests:getRequests", {
        "cursor": args.cursor,
        "pageSize": args.pageSize,
        "showPendingOnly": args.showPendingOnly,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRequests.
 */
export interface GetRequestsArgs {
    cursor?: string;
    pageSize?: number;
    showPendingOnly?: boolean;
}

/**
 * A collection of values returned by getRequests.
 */
export interface GetRequestsResult {
    readonly cursor: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly pageSize?: number;
    readonly requests: outputs.GetRequestsRequest[];
    readonly showPendingOnly?: boolean;
}
export function getRequestsOutput(args?: GetRequestsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRequestsResult> {
    return pulumi.output(args).apply((a: any) => getRequests(a, opts))
}

/**
 * A collection of arguments for invoking getRequests.
 */
export interface GetRequestsOutputArgs {
    cursor?: pulumi.Input<string>;
    pageSize?: pulumi.Input<number>;
    showPendingOnly?: pulumi.Input<boolean>;
}
