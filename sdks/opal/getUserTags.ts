// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUserTags(args: GetUserTagsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserTagsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getUserTags:getUserTags", {
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserTags.
 */
export interface GetUserTagsArgs {
    userId: string;
}

/**
 * A collection of values returned by getUserTags.
 */
export interface GetUserTagsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly tags: outputs.GetUserTagsTag[];
    readonly userId: string;
}
export function getUserTagsOutput(args: GetUserTagsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserTagsResult> {
    return pulumi.output(args).apply((a: any) => getUserTags(a, opts))
}

/**
 * A collection of arguments for invoking getUserTags.
 */
export interface GetUserTagsOutputArgs {
    userId: pulumi.Input<string>;
}
