// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResource(args: GetResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getResource:getResource", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceArgs {
    id: string;
}

/**
 * A collection of values returned by getResource.
 */
export interface GetResourceResult {
    readonly adminOwnerId: string;
    readonly appId: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly parentResourceId: string;
    readonly remoteInfo: outputs.GetResourceRemoteInfo;
    readonly requestConfigurations: outputs.GetResourceRequestConfiguration[];
    readonly requireMfaToApprove: boolean;
    readonly requireMfaToConnect: boolean;
    readonly resourceType: string;
    readonly ticketPropagation: outputs.GetResourceTicketPropagation;
}
export function getResourceOutput(args: GetResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceResult> {
    return pulumi.output(args).apply((a: any) => getResource(a, opts))
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceOutputArgs {
    id: pulumi.Input<string>;
}
