// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResourceMessageChannelList(args: GetResourceMessageChannelListArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceMessageChannelListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getResourceMessageChannelList:getResourceMessageChannelList", {
        "resourceId": args.resourceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourceMessageChannelList.
 */
export interface GetResourceMessageChannelListArgs {
    resourceId: string;
}

/**
 * A collection of values returned by getResourceMessageChannelList.
 */
export interface GetResourceMessageChannelListResult {
    readonly channels: outputs.GetResourceMessageChannelListChannel[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resourceId: string;
}
export function getResourceMessageChannelListOutput(args: GetResourceMessageChannelListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceMessageChannelListResult> {
    return pulumi.output(args).apply((a: any) => getResourceMessageChannelList(a, opts))
}

/**
 * A collection of arguments for invoking getResourceMessageChannelList.
 */
export interface GetResourceMessageChannelListOutputArgs {
    resourceId: pulumi.Input<string>;
}
