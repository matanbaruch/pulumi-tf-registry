// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSessions(args: GetSessionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSessionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opal:index/getSessions:getSessions", {
        "resourceId": args.resourceId,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSessions.
 */
export interface GetSessionsArgs {
    resourceId: string;
    userId?: string;
}

/**
 * A collection of values returned by getSessions.
 */
export interface GetSessionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly next: string;
    readonly previous: string;
    readonly resourceId: string;
    readonly results: outputs.GetSessionsResult[];
    readonly userId?: string;
}
export function getSessionsOutput(args: GetSessionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSessionsResult> {
    return pulumi.output(args).apply((a: any) => getSessions(a, opts))
}

/**
 * A collection of arguments for invoking getSessions.
 */
export interface GetSessionsOutputArgs {
    resourceId: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
}
