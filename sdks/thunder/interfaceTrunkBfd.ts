// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InterfaceTrunkBfd extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceTrunkBfd resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceTrunkBfdState, opts?: pulumi.CustomResourceOptions): InterfaceTrunkBfd {
        return new InterfaceTrunkBfd(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/interfaceTrunkBfd:InterfaceTrunkBfd';

    /**
     * Returns true if the given object is an instance of InterfaceTrunkBfd.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceTrunkBfd {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceTrunkBfd.__pulumiType;
    }

    public readonly authentication!: pulumi.Output<outputs.InterfaceTrunkBfdAuthentication | undefined>;
    /**
     * Demand mode
     */
    public readonly demand!: pulumi.Output<number | undefined>;
    /**
     * Enable BFD Echo
     */
    public readonly echo!: pulumi.Output<number | undefined>;
    /**
     * Ifnum
     */
    public readonly ifnum!: pulumi.Output<string>;
    public readonly intervalCfg!: pulumi.Output<outputs.InterfaceTrunkBfdIntervalCfg | undefined>;
    public readonly perMemberPort!: pulumi.Output<outputs.InterfaceTrunkBfdPerMemberPort | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a InterfaceTrunkBfd resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceTrunkBfdArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceTrunkBfdArgs | InterfaceTrunkBfdState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceTrunkBfdState | undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["demand"] = state ? state.demand : undefined;
            resourceInputs["echo"] = state ? state.echo : undefined;
            resourceInputs["ifnum"] = state ? state.ifnum : undefined;
            resourceInputs["intervalCfg"] = state ? state.intervalCfg : undefined;
            resourceInputs["perMemberPort"] = state ? state.perMemberPort : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as InterfaceTrunkBfdArgs | undefined;
            if ((!args || args.ifnum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ifnum'");
            }
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["demand"] = args ? args.demand : undefined;
            resourceInputs["echo"] = args ? args.echo : undefined;
            resourceInputs["ifnum"] = args ? args.ifnum : undefined;
            resourceInputs["intervalCfg"] = args ? args.intervalCfg : undefined;
            resourceInputs["perMemberPort"] = args ? args.perMemberPort : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceTrunkBfd.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceTrunkBfd resources.
 */
export interface InterfaceTrunkBfdState {
    authentication?: pulumi.Input<inputs.InterfaceTrunkBfdAuthentication>;
    /**
     * Demand mode
     */
    demand?: pulumi.Input<number>;
    /**
     * Enable BFD Echo
     */
    echo?: pulumi.Input<number>;
    /**
     * Ifnum
     */
    ifnum?: pulumi.Input<string>;
    intervalCfg?: pulumi.Input<inputs.InterfaceTrunkBfdIntervalCfg>;
    perMemberPort?: pulumi.Input<inputs.InterfaceTrunkBfdPerMemberPort>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterfaceTrunkBfd resource.
 */
export interface InterfaceTrunkBfdArgs {
    authentication?: pulumi.Input<inputs.InterfaceTrunkBfdAuthentication>;
    /**
     * Demand mode
     */
    demand?: pulumi.Input<number>;
    /**
     * Enable BFD Echo
     */
    echo?: pulumi.Input<number>;
    /**
     * Ifnum
     */
    ifnum: pulumi.Input<string>;
    intervalCfg?: pulumi.Input<inputs.InterfaceTrunkBfdIntervalCfg>;
    perMemberPort?: pulumi.Input<inputs.InterfaceTrunkBfdPerMemberPort>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
