// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbSiteIpServerStats(args: GetGslbSiteIpServerStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbSiteIpServerStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbSiteIpServerStats:getGslbSiteIpServerStats", {
        "id": args.id,
        "ipServerName": args.ipServerName,
        "siteName": args.siteName,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbSiteIpServerStats.
 */
export interface GetGslbSiteIpServerStatsArgs {
    id?: string;
    ipServerName: string;
    siteName: string;
    stats?: inputs.GetGslbSiteIpServerStatsStats;
}

/**
 * A collection of values returned by getGslbSiteIpServerStats.
 */
export interface GetGslbSiteIpServerStatsResult {
    readonly id: string;
    readonly ipServerName: string;
    readonly siteName: string;
    readonly stats?: outputs.GetGslbSiteIpServerStatsStats;
}
export function getGslbSiteIpServerStatsOutput(args: GetGslbSiteIpServerStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbSiteIpServerStatsResult> {
    return pulumi.output(args).apply((a: any) => getGslbSiteIpServerStats(a, opts))
}

/**
 * A collection of arguments for invoking getGslbSiteIpServerStats.
 */
export interface GetGslbSiteIpServerStatsOutputArgs {
    id?: pulumi.Input<string>;
    ipServerName: pulumi.Input<string>;
    siteName: pulumi.Input<string>;
    stats?: pulumi.Input<inputs.GetGslbSiteIpServerStatsStatsArgs>;
}
