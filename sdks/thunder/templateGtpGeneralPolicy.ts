// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TemplateGtpGeneralPolicy extends pulumi.CustomResource {
    /**
     * Get an existing TemplateGtpGeneralPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateGtpGeneralPolicyState, opts?: pulumi.CustomResourceOptions): TemplateGtpGeneralPolicy {
        return new TemplateGtpGeneralPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/templateGtpGeneralPolicy:TemplateGtpGeneralPolicy';

    /**
     * Returns true if the given object is an instance of TemplateGtpGeneralPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateGtpGeneralPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateGtpGeneralPolicy.__pulumiType;
    }

    /**
     * Tunnel Inactivity Timeout during Handover in minutes (default: 2 mins)
     */
    public readonly handoverTimeout!: pulumi.Output<number | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop packet failing check(Default);
     */
    public readonly maxMesgLengthAction!: pulumi.Output<string | undefined>;
    /**
     * Maximum message length for a GTP message in bytes
     */
    public readonly maximumMessageLength!: pulumi.Output<number | undefined>;
    /**
     * Specify name of the GTP General Policy
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Tunnel Inactivity Timeout in minutes (default: 1440 minutes)
     */
    public readonly tunnelTimeout!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * 'permit': Permit GTP-C version 0; 'drop': Drop GTP-C version 0(Default);
     */
    public readonly v0Action!: pulumi.Output<string | undefined>;

    /**
     * Create a TemplateGtpGeneralPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TemplateGtpGeneralPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateGtpGeneralPolicyArgs | TemplateGtpGeneralPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateGtpGeneralPolicyState | undefined;
            resourceInputs["handoverTimeout"] = state ? state.handoverTimeout : undefined;
            resourceInputs["maxMesgLengthAction"] = state ? state.maxMesgLengthAction : undefined;
            resourceInputs["maximumMessageLength"] = state ? state.maximumMessageLength : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tunnelTimeout"] = state ? state.tunnelTimeout : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["v0Action"] = state ? state.v0Action : undefined;
        } else {
            const args = argsOrState as TemplateGtpGeneralPolicyArgs | undefined;
            resourceInputs["handoverTimeout"] = args ? args.handoverTimeout : undefined;
            resourceInputs["maxMesgLengthAction"] = args ? args.maxMesgLengthAction : undefined;
            resourceInputs["maximumMessageLength"] = args ? args.maximumMessageLength : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tunnelTimeout"] = args ? args.tunnelTimeout : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["v0Action"] = args ? args.v0Action : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateGtpGeneralPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TemplateGtpGeneralPolicy resources.
 */
export interface TemplateGtpGeneralPolicyState {
    /**
     * Tunnel Inactivity Timeout during Handover in minutes (default: 2 mins)
     */
    handoverTimeout?: pulumi.Input<number>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop packet failing check(Default);
     */
    maxMesgLengthAction?: pulumi.Input<string>;
    /**
     * Maximum message length for a GTP message in bytes
     */
    maximumMessageLength?: pulumi.Input<number>;
    /**
     * Specify name of the GTP General Policy
     */
    name?: pulumi.Input<string>;
    /**
     * Tunnel Inactivity Timeout in minutes (default: 1440 minutes)
     */
    tunnelTimeout?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 'permit': Permit GTP-C version 0; 'drop': Drop GTP-C version 0(Default);
     */
    v0Action?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TemplateGtpGeneralPolicy resource.
 */
export interface TemplateGtpGeneralPolicyArgs {
    /**
     * Tunnel Inactivity Timeout during Handover in minutes (default: 2 mins)
     */
    handoverTimeout?: pulumi.Input<number>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop packet failing check(Default);
     */
    maxMesgLengthAction?: pulumi.Input<string>;
    /**
     * Maximum message length for a GTP message in bytes
     */
    maximumMessageLength?: pulumi.Input<number>;
    /**
     * Specify name of the GTP General Policy
     */
    name?: pulumi.Input<string>;
    /**
     * Tunnel Inactivity Timeout in minutes (default: 1440 minutes)
     */
    tunnelTimeout?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 'permit': Permit GTP-C version 0; 'drop': Drop GTP-C version 0(Default);
     */
    v0Action?: pulumi.Input<string>;
}
