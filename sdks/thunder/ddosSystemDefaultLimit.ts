// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DdosSystemDefaultLimit extends pulumi.CustomResource {
    /**
     * Get an existing DdosSystemDefaultLimit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosSystemDefaultLimitState, opts?: pulumi.CustomResourceOptions): DdosSystemDefaultLimit {
        return new DdosSystemDefaultLimit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosSystemDefaultLimit:DdosSystemDefaultLimit';

    /**
     * Returns true if the given object is an instance of DdosSystemDefaultLimit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosSystemDefaultLimit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosSystemDefaultLimit.__pulumiType;
    }

    /**
     * Configure Default Kibit (kibibit / 1024-bit) rate limit
     */
    public readonly defaultBitRateLimit!: pulumi.Output<number | undefined>;
    /**
     * Configure Default Connection limit
     */
    public readonly defaultConnLimit!: pulumi.Output<number | undefined>;
    /**
     * Configure Default Connection rate limit
     */
    public readonly defaultConnRateLimit!: pulumi.Output<number | undefined>;
    /**
     * Configure Default Fragmented packet rate limit
     */
    public readonly defaultFragPktRateLimit!: pulumi.Output<number | undefined>;
    public readonly defaultOverLimitAction!: pulumi.Output<outputs.DdosSystemDefaultLimitDefaultOverLimitAction | undefined>;
    /**
     * Configure Default Packet rate limit
     */
    public readonly defaultPktRateLimit!: pulumi.Output<number | undefined>;
    /**
     * 'dst-entry': dst-entry; 'dst-icmp': dst-icmp; 'dst-other': dst-other; 'dst-tcp': dst-tcp; 'dst-udp': dst-udp;
     * 'src-entry': src-entry; 'src-icmp': src-icmp; 'src-other': src-other; 'src-tcp': src-tcp; 'src-udp': src-udp;
     */
    public readonly limitType!: pulumi.Output<string>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DdosSystemDefaultLimit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosSystemDefaultLimitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosSystemDefaultLimitArgs | DdosSystemDefaultLimitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosSystemDefaultLimitState | undefined;
            resourceInputs["defaultBitRateLimit"] = state ? state.defaultBitRateLimit : undefined;
            resourceInputs["defaultConnLimit"] = state ? state.defaultConnLimit : undefined;
            resourceInputs["defaultConnRateLimit"] = state ? state.defaultConnRateLimit : undefined;
            resourceInputs["defaultFragPktRateLimit"] = state ? state.defaultFragPktRateLimit : undefined;
            resourceInputs["defaultOverLimitAction"] = state ? state.defaultOverLimitAction : undefined;
            resourceInputs["defaultPktRateLimit"] = state ? state.defaultPktRateLimit : undefined;
            resourceInputs["limitType"] = state ? state.limitType : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DdosSystemDefaultLimitArgs | undefined;
            if ((!args || args.limitType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'limitType'");
            }
            resourceInputs["defaultBitRateLimit"] = args ? args.defaultBitRateLimit : undefined;
            resourceInputs["defaultConnLimit"] = args ? args.defaultConnLimit : undefined;
            resourceInputs["defaultConnRateLimit"] = args ? args.defaultConnRateLimit : undefined;
            resourceInputs["defaultFragPktRateLimit"] = args ? args.defaultFragPktRateLimit : undefined;
            resourceInputs["defaultOverLimitAction"] = args ? args.defaultOverLimitAction : undefined;
            resourceInputs["defaultPktRateLimit"] = args ? args.defaultPktRateLimit : undefined;
            resourceInputs["limitType"] = args ? args.limitType : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosSystemDefaultLimit.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosSystemDefaultLimit resources.
 */
export interface DdosSystemDefaultLimitState {
    /**
     * Configure Default Kibit (kibibit / 1024-bit) rate limit
     */
    defaultBitRateLimit?: pulumi.Input<number>;
    /**
     * Configure Default Connection limit
     */
    defaultConnLimit?: pulumi.Input<number>;
    /**
     * Configure Default Connection rate limit
     */
    defaultConnRateLimit?: pulumi.Input<number>;
    /**
     * Configure Default Fragmented packet rate limit
     */
    defaultFragPktRateLimit?: pulumi.Input<number>;
    defaultOverLimitAction?: pulumi.Input<inputs.DdosSystemDefaultLimitDefaultOverLimitAction>;
    /**
     * Configure Default Packet rate limit
     */
    defaultPktRateLimit?: pulumi.Input<number>;
    /**
     * 'dst-entry': dst-entry; 'dst-icmp': dst-icmp; 'dst-other': dst-other; 'dst-tcp': dst-tcp; 'dst-udp': dst-udp;
     * 'src-entry': src-entry; 'src-icmp': src-icmp; 'src-other': src-other; 'src-tcp': src-tcp; 'src-udp': src-udp;
     */
    limitType?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosSystemDefaultLimit resource.
 */
export interface DdosSystemDefaultLimitArgs {
    /**
     * Configure Default Kibit (kibibit / 1024-bit) rate limit
     */
    defaultBitRateLimit?: pulumi.Input<number>;
    /**
     * Configure Default Connection limit
     */
    defaultConnLimit?: pulumi.Input<number>;
    /**
     * Configure Default Connection rate limit
     */
    defaultConnRateLimit?: pulumi.Input<number>;
    /**
     * Configure Default Fragmented packet rate limit
     */
    defaultFragPktRateLimit?: pulumi.Input<number>;
    defaultOverLimitAction?: pulumi.Input<inputs.DdosSystemDefaultLimitDefaultOverLimitAction>;
    /**
     * Configure Default Packet rate limit
     */
    defaultPktRateLimit?: pulumi.Input<number>;
    /**
     * 'dst-entry': dst-entry; 'dst-icmp': dst-icmp; 'dst-other': dst-other; 'dst-tcp': dst-tcp; 'dst-udp': dst-udp;
     * 'src-entry': src-entry; 'src-icmp': src-icmp; 'src-other': src-other; 'src-tcp': src-tcp; 'src-udp': src-udp;
     */
    limitType: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
