// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class HealthMonitorMethodDatabase extends pulumi.CustomResource {
    /**
     * Get an existing HealthMonitorMethodDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HealthMonitorMethodDatabaseState, opts?: pulumi.CustomResourceOptions): HealthMonitorMethodDatabase {
        return new HealthMonitorMethodDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/healthMonitorMethodDatabase:HealthMonitorMethodDatabase';

    /**
     * Returns true if the given object is an instance of HealthMonitorMethodDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HealthMonitorMethodDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HealthMonitorMethodDatabase.__pulumiType;
    }

    /**
     * DATABASE type
     */
    public readonly database!: pulumi.Output<number | undefined>;
    /**
     * 'mssql': Specify MSSQL database; 'mysql': Specify MySQL database; 'oracle': Specify Oracle database; 'postgresql':
     * Specify PostgreSQL database;
     */
    public readonly databaseName!: pulumi.Output<string | undefined>;
    /**
     * Specify the column number for receiving
     */
    public readonly dbColumn!: pulumi.Output<number | undefined>;
    /**
     * Specify the column number for receiving
     */
    public readonly dbColumnInteger!: pulumi.Output<number | undefined>;
    /**
     * Specify the database name
     */
    public readonly dbName!: pulumi.Output<string | undefined>;
    /**
     * Specify the user password
     */
    public readonly dbPassword!: pulumi.Output<number | undefined>;
    /**
     * Configure password
     */
    public readonly dbPasswordStr!: pulumi.Output<string | undefined>;
    /**
     * Specify the response string
     */
    public readonly dbReceive!: pulumi.Output<string | undefined>;
    /**
     * Specify the response integer
     */
    public readonly dbReceiveInteger!: pulumi.Output<number | undefined>;
    /**
     * Specify the row number for receiving
     */
    public readonly dbRow!: pulumi.Output<number | undefined>;
    /**
     * Specify the row number for receiving
     */
    public readonly dbRowInteger!: pulumi.Output<number | undefined>;
    /**
     * Specify the SQL query
     */
    public readonly dbSend!: pulumi.Output<string | undefined>;
    /**
     * Specify the username
     */
    public readonly dbUsername!: pulumi.Output<string | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a HealthMonitorMethodDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HealthMonitorMethodDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HealthMonitorMethodDatabaseArgs | HealthMonitorMethodDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HealthMonitorMethodDatabaseState | undefined;
            resourceInputs["database"] = state ? state.database : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["dbColumn"] = state ? state.dbColumn : undefined;
            resourceInputs["dbColumnInteger"] = state ? state.dbColumnInteger : undefined;
            resourceInputs["dbName"] = state ? state.dbName : undefined;
            resourceInputs["dbPassword"] = state ? state.dbPassword : undefined;
            resourceInputs["dbPasswordStr"] = state ? state.dbPasswordStr : undefined;
            resourceInputs["dbReceive"] = state ? state.dbReceive : undefined;
            resourceInputs["dbReceiveInteger"] = state ? state.dbReceiveInteger : undefined;
            resourceInputs["dbRow"] = state ? state.dbRow : undefined;
            resourceInputs["dbRowInteger"] = state ? state.dbRowInteger : undefined;
            resourceInputs["dbSend"] = state ? state.dbSend : undefined;
            resourceInputs["dbUsername"] = state ? state.dbUsername : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as HealthMonitorMethodDatabaseArgs | undefined;
            resourceInputs["database"] = args ? args.database : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["dbColumn"] = args ? args.dbColumn : undefined;
            resourceInputs["dbColumnInteger"] = args ? args.dbColumnInteger : undefined;
            resourceInputs["dbName"] = args ? args.dbName : undefined;
            resourceInputs["dbPassword"] = args ? args.dbPassword : undefined;
            resourceInputs["dbPasswordStr"] = args ? args.dbPasswordStr : undefined;
            resourceInputs["dbReceive"] = args ? args.dbReceive : undefined;
            resourceInputs["dbReceiveInteger"] = args ? args.dbReceiveInteger : undefined;
            resourceInputs["dbRow"] = args ? args.dbRow : undefined;
            resourceInputs["dbRowInteger"] = args ? args.dbRowInteger : undefined;
            resourceInputs["dbSend"] = args ? args.dbSend : undefined;
            resourceInputs["dbUsername"] = args ? args.dbUsername : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HealthMonitorMethodDatabase.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HealthMonitorMethodDatabase resources.
 */
export interface HealthMonitorMethodDatabaseState {
    /**
     * DATABASE type
     */
    database?: pulumi.Input<number>;
    /**
     * 'mssql': Specify MSSQL database; 'mysql': Specify MySQL database; 'oracle': Specify Oracle database; 'postgresql':
     * Specify PostgreSQL database;
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Specify the column number for receiving
     */
    dbColumn?: pulumi.Input<number>;
    /**
     * Specify the column number for receiving
     */
    dbColumnInteger?: pulumi.Input<number>;
    /**
     * Specify the database name
     */
    dbName?: pulumi.Input<string>;
    /**
     * Specify the user password
     */
    dbPassword?: pulumi.Input<number>;
    /**
     * Configure password
     */
    dbPasswordStr?: pulumi.Input<string>;
    /**
     * Specify the response string
     */
    dbReceive?: pulumi.Input<string>;
    /**
     * Specify the response integer
     */
    dbReceiveInteger?: pulumi.Input<number>;
    /**
     * Specify the row number for receiving
     */
    dbRow?: pulumi.Input<number>;
    /**
     * Specify the row number for receiving
     */
    dbRowInteger?: pulumi.Input<number>;
    /**
     * Specify the SQL query
     */
    dbSend?: pulumi.Input<string>;
    /**
     * Specify the username
     */
    dbUsername?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HealthMonitorMethodDatabase resource.
 */
export interface HealthMonitorMethodDatabaseArgs {
    /**
     * DATABASE type
     */
    database?: pulumi.Input<number>;
    /**
     * 'mssql': Specify MSSQL database; 'mysql': Specify MySQL database; 'oracle': Specify Oracle database; 'postgresql':
     * Specify PostgreSQL database;
     */
    databaseName?: pulumi.Input<string>;
    /**
     * Specify the column number for receiving
     */
    dbColumn?: pulumi.Input<number>;
    /**
     * Specify the column number for receiving
     */
    dbColumnInteger?: pulumi.Input<number>;
    /**
     * Specify the database name
     */
    dbName?: pulumi.Input<string>;
    /**
     * Specify the user password
     */
    dbPassword?: pulumi.Input<number>;
    /**
     * Configure password
     */
    dbPasswordStr?: pulumi.Input<string>;
    /**
     * Specify the response string
     */
    dbReceive?: pulumi.Input<string>;
    /**
     * Specify the response integer
     */
    dbReceiveInteger?: pulumi.Input<number>;
    /**
     * Specify the row number for receiving
     */
    dbRow?: pulumi.Input<number>;
    /**
     * Specify the row number for receiving
     */
    dbRowInteger?: pulumi.Input<number>;
    /**
     * Specify the SQL query
     */
    dbSend?: pulumi.Input<string>;
    /**
     * Specify the username
     */
    dbUsername?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
