// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TemplateCsv extends pulumi.CustomResource {
    /**
     * Get an existing TemplateCsv resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateCsvState, opts?: pulumi.CustomResourceOptions): TemplateCsv {
        return new TemplateCsv(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/templateCsv:TemplateCsv';

    /**
     * Returns true if the given object is an instance of TemplateCsv.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateCsv {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateCsv.__pulumiType;
    }

    /**
     * Specify name of csv template
     */
    public readonly csvName!: pulumi.Output<string>;
    /**
     * enter a delimiter character, default ","
     */
    public readonly delimChar!: pulumi.Output<string | undefined>;
    /**
     * enter a delimiter number, default 44 (",")
     */
    public readonly delimNum!: pulumi.Output<number | undefined>;
    /**
     * Support IPv6 IP ranges
     */
    public readonly ipv6Enable!: pulumi.Output<number | undefined>;
    public readonly multipleFields!: pulumi.Output<outputs.TemplateCsvMultipleField[] | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a TemplateCsv resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateCsvArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateCsvArgs | TemplateCsvState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateCsvState | undefined;
            resourceInputs["csvName"] = state ? state.csvName : undefined;
            resourceInputs["delimChar"] = state ? state.delimChar : undefined;
            resourceInputs["delimNum"] = state ? state.delimNum : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["multipleFields"] = state ? state.multipleFields : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as TemplateCsvArgs | undefined;
            if ((!args || args.csvName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'csvName'");
            }
            resourceInputs["csvName"] = args ? args.csvName : undefined;
            resourceInputs["delimChar"] = args ? args.delimChar : undefined;
            resourceInputs["delimNum"] = args ? args.delimNum : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["multipleFields"] = args ? args.multipleFields : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateCsv.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TemplateCsv resources.
 */
export interface TemplateCsvState {
    /**
     * Specify name of csv template
     */
    csvName?: pulumi.Input<string>;
    /**
     * enter a delimiter character, default ","
     */
    delimChar?: pulumi.Input<string>;
    /**
     * enter a delimiter number, default 44 (",")
     */
    delimNum?: pulumi.Input<number>;
    /**
     * Support IPv6 IP ranges
     */
    ipv6Enable?: pulumi.Input<number>;
    multipleFields?: pulumi.Input<pulumi.Input<inputs.TemplateCsvMultipleField>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TemplateCsv resource.
 */
export interface TemplateCsvArgs {
    /**
     * Specify name of csv template
     */
    csvName: pulumi.Input<string>;
    /**
     * enter a delimiter character, default ","
     */
    delimChar?: pulumi.Input<string>;
    /**
     * enter a delimiter number, default 44 (",")
     */
    delimNum?: pulumi.Input<number>;
    /**
     * Support IPv6 IP ranges
     */
    ipv6Enable?: pulumi.Input<number>;
    multipleFields?: pulumi.Input<pulumi.Input<inputs.TemplateCsvMultipleField>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
