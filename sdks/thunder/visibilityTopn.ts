// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VisibilityTopn extends pulumi.CustomResource {
    /**
     * Get an existing VisibilityTopn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VisibilityTopnState, opts?: pulumi.CustomResourceOptions): VisibilityTopn {
        return new VisibilityTopn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/visibilityTopn:VisibilityTopn';

    /**
     * Returns true if the given object is an instance of VisibilityTopn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VisibilityTopn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VisibilityTopn.__pulumiType;
    }

    public readonly cgnv6NatPoolTopnNode!: pulumi.Output<outputs.VisibilityTopnCgnv6NatPoolTopnNode | undefined>;
    public readonly cgnv6NatPoolTopnTmplLists!: pulumi.Output<outputs.VisibilityTopnCgnv6NatPoolTopnTmplList[] | undefined>;
    public readonly gtpApnPrefixTopnNode!: pulumi.Output<outputs.VisibilityTopnGtpApnPrefixTopnNode | undefined>;
    public readonly gtpApnPrefixTopnTmplLists!: pulumi.Output<outputs.VisibilityTopnGtpApnPrefixTopnTmplList[] | undefined>;
    public readonly gtpNetworkElementTopnNode!: pulumi.Output<outputs.VisibilityTopnGtpNetworkElementTopnNode | undefined>;
    public readonly gtpNetworkElementTopnTmplLists!: pulumi.Output<outputs.VisibilityTopnGtpNetworkElementTopnTmplList[] | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.VisibilityTopnSamplingEnable[] | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a VisibilityTopn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VisibilityTopnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VisibilityTopnArgs | VisibilityTopnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VisibilityTopnState | undefined;
            resourceInputs["cgnv6NatPoolTopnNode"] = state ? state.cgnv6NatPoolTopnNode : undefined;
            resourceInputs["cgnv6NatPoolTopnTmplLists"] = state ? state.cgnv6NatPoolTopnTmplLists : undefined;
            resourceInputs["gtpApnPrefixTopnNode"] = state ? state.gtpApnPrefixTopnNode : undefined;
            resourceInputs["gtpApnPrefixTopnTmplLists"] = state ? state.gtpApnPrefixTopnTmplLists : undefined;
            resourceInputs["gtpNetworkElementTopnNode"] = state ? state.gtpNetworkElementTopnNode : undefined;
            resourceInputs["gtpNetworkElementTopnTmplLists"] = state ? state.gtpNetworkElementTopnTmplLists : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as VisibilityTopnArgs | undefined;
            resourceInputs["cgnv6NatPoolTopnNode"] = args ? args.cgnv6NatPoolTopnNode : undefined;
            resourceInputs["cgnv6NatPoolTopnTmplLists"] = args ? args.cgnv6NatPoolTopnTmplLists : undefined;
            resourceInputs["gtpApnPrefixTopnNode"] = args ? args.gtpApnPrefixTopnNode : undefined;
            resourceInputs["gtpApnPrefixTopnTmplLists"] = args ? args.gtpApnPrefixTopnTmplLists : undefined;
            resourceInputs["gtpNetworkElementTopnNode"] = args ? args.gtpNetworkElementTopnNode : undefined;
            resourceInputs["gtpNetworkElementTopnTmplLists"] = args ? args.gtpNetworkElementTopnTmplLists : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VisibilityTopn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VisibilityTopn resources.
 */
export interface VisibilityTopnState {
    cgnv6NatPoolTopnNode?: pulumi.Input<inputs.VisibilityTopnCgnv6NatPoolTopnNode>;
    cgnv6NatPoolTopnTmplLists?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnCgnv6NatPoolTopnTmplList>[]>;
    gtpApnPrefixTopnNode?: pulumi.Input<inputs.VisibilityTopnGtpApnPrefixTopnNode>;
    gtpApnPrefixTopnTmplLists?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnGtpApnPrefixTopnTmplList>[]>;
    gtpNetworkElementTopnNode?: pulumi.Input<inputs.VisibilityTopnGtpNetworkElementTopnNode>;
    gtpNetworkElementTopnTmplLists?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnGtpNetworkElementTopnTmplList>[]>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnSamplingEnable>[]>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VisibilityTopn resource.
 */
export interface VisibilityTopnArgs {
    cgnv6NatPoolTopnNode?: pulumi.Input<inputs.VisibilityTopnCgnv6NatPoolTopnNode>;
    cgnv6NatPoolTopnTmplLists?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnCgnv6NatPoolTopnTmplList>[]>;
    gtpApnPrefixTopnNode?: pulumi.Input<inputs.VisibilityTopnGtpApnPrefixTopnNode>;
    gtpApnPrefixTopnTmplLists?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnGtpApnPrefixTopnTmplList>[]>;
    gtpNetworkElementTopnNode?: pulumi.Input<inputs.VisibilityTopnGtpNetworkElementTopnNode>;
    gtpNetworkElementTopnTmplLists?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnGtpNetworkElementTopnTmplList>[]>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.VisibilityTopnSamplingEnable>[]>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
