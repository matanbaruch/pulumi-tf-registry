// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipv6RouteStaticBfdEthernet extends pulumi.CustomResource {
    /**
     * Get an existing Ipv6RouteStaticBfdEthernet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv6RouteStaticBfdEthernetState, opts?: pulumi.CustomResourceOptions): Ipv6RouteStaticBfdEthernet {
        return new Ipv6RouteStaticBfdEthernet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ipv6RouteStaticBfdEthernet:Ipv6RouteStaticBfdEthernet';

    /**
     * Returns true if the given object is an instance of Ipv6RouteStaticBfdEthernet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv6RouteStaticBfdEthernet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv6RouteStaticBfdEthernet.__pulumiType;
    }

    /**
     * 'down': BFD down; (BFD state)
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * Ethernet (not a member of vlan or trunk)
     */
    public readonly ethNum!: pulumi.Output<number>;
    /**
     * Nexthop IPv6 address (Link-local)
     */
    public readonly nexthopIpv6Ll!: pulumi.Output<string>;
    /**
     * Configure tracking template (bind tracking template name)
     */
    public readonly template!: pulumi.Output<string | undefined>;
    /**
     * action triggering threshold
     */
    public readonly threshold!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Ipv6RouteStaticBfdEthernet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv6RouteStaticBfdEthernetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv6RouteStaticBfdEthernetArgs | Ipv6RouteStaticBfdEthernetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv6RouteStaticBfdEthernetState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["ethNum"] = state ? state.ethNum : undefined;
            resourceInputs["nexthopIpv6Ll"] = state ? state.nexthopIpv6Ll : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as Ipv6RouteStaticBfdEthernetArgs | undefined;
            if ((!args || args.ethNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ethNum'");
            }
            if ((!args || args.nexthopIpv6Ll === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nexthopIpv6Ll'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["ethNum"] = args ? args.ethNum : undefined;
            resourceInputs["nexthopIpv6Ll"] = args ? args.nexthopIpv6Ll : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv6RouteStaticBfdEthernet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipv6RouteStaticBfdEthernet resources.
 */
export interface Ipv6RouteStaticBfdEthernetState {
    /**
     * 'down': BFD down; (BFD state)
     */
    action?: pulumi.Input<string>;
    /**
     * Ethernet (not a member of vlan or trunk)
     */
    ethNum?: pulumi.Input<number>;
    /**
     * Nexthop IPv6 address (Link-local)
     */
    nexthopIpv6Ll?: pulumi.Input<string>;
    /**
     * Configure tracking template (bind tracking template name)
     */
    template?: pulumi.Input<string>;
    /**
     * action triggering threshold
     */
    threshold?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv6RouteStaticBfdEthernet resource.
 */
export interface Ipv6RouteStaticBfdEthernetArgs {
    /**
     * 'down': BFD down; (BFD state)
     */
    action?: pulumi.Input<string>;
    /**
     * Ethernet (not a member of vlan or trunk)
     */
    ethNum: pulumi.Input<number>;
    /**
     * Nexthop IPv6 address (Link-local)
     */
    nexthopIpv6Ll: pulumi.Input<string>;
    /**
     * Configure tracking template (bind tracking template name)
     */
    template?: pulumi.Input<string>;
    /**
     * action triggering threshold
     */
    threshold?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
