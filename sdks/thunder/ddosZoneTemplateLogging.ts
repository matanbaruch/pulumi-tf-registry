// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DdosZoneTemplateLogging extends pulumi.CustomResource {
    /**
     * Get an existing DdosZoneTemplateLogging resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosZoneTemplateLoggingState, opts?: pulumi.CustomResourceOptions): DdosZoneTemplateLogging {
        return new DdosZoneTemplateLogging(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosZoneTemplateLogging:DdosZoneTemplateLogging';

    /**
     * Returns true if the given object is an instance of DdosZoneTemplateLogging.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosZoneTemplateLogging {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosZoneTemplateLogging.__pulumiType;
    }

    /**
     * Log action taken
     */
    public readonly enableActionLogging!: pulumi.Output<number | undefined>;
    /**
     * Log in CEF format
     */
    public readonly logFormatCef!: pulumi.Output<number | undefined>;
    /**
     * Customize log format
     */
    public readonly logFormatCustom!: pulumi.Output<string | undefined>;
    /**
     * DDOS Logging Template Name
     */
    public readonly loggingTmplName!: pulumi.Output<string>;
    /**
     * Show obj name instead of ip in the log
     */
    public readonly useObjName!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DdosZoneTemplateLogging resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosZoneTemplateLoggingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosZoneTemplateLoggingArgs | DdosZoneTemplateLoggingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosZoneTemplateLoggingState | undefined;
            resourceInputs["enableActionLogging"] = state ? state.enableActionLogging : undefined;
            resourceInputs["logFormatCef"] = state ? state.logFormatCef : undefined;
            resourceInputs["logFormatCustom"] = state ? state.logFormatCustom : undefined;
            resourceInputs["loggingTmplName"] = state ? state.loggingTmplName : undefined;
            resourceInputs["useObjName"] = state ? state.useObjName : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DdosZoneTemplateLoggingArgs | undefined;
            if ((!args || args.loggingTmplName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loggingTmplName'");
            }
            resourceInputs["enableActionLogging"] = args ? args.enableActionLogging : undefined;
            resourceInputs["logFormatCef"] = args ? args.logFormatCef : undefined;
            resourceInputs["logFormatCustom"] = args ? args.logFormatCustom : undefined;
            resourceInputs["loggingTmplName"] = args ? args.loggingTmplName : undefined;
            resourceInputs["useObjName"] = args ? args.useObjName : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosZoneTemplateLogging.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosZoneTemplateLogging resources.
 */
export interface DdosZoneTemplateLoggingState {
    /**
     * Log action taken
     */
    enableActionLogging?: pulumi.Input<number>;
    /**
     * Log in CEF format
     */
    logFormatCef?: pulumi.Input<number>;
    /**
     * Customize log format
     */
    logFormatCustom?: pulumi.Input<string>;
    /**
     * DDOS Logging Template Name
     */
    loggingTmplName?: pulumi.Input<string>;
    /**
     * Show obj name instead of ip in the log
     */
    useObjName?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosZoneTemplateLogging resource.
 */
export interface DdosZoneTemplateLoggingArgs {
    /**
     * Log action taken
     */
    enableActionLogging?: pulumi.Input<number>;
    /**
     * Log in CEF format
     */
    logFormatCef?: pulumi.Input<number>;
    /**
     * Customize log format
     */
    logFormatCustom?: pulumi.Input<string>;
    /**
     * DDOS Logging Template Name
     */
    loggingTmplName: pulumi.Input<string>;
    /**
     * Show obj name instead of ip in the log
     */
    useObjName?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
