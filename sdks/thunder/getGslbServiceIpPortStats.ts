// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbServiceIpPortStats(args: GetGslbServiceIpPortStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbServiceIpPortStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbServiceIpPortStats:getGslbServiceIpPortStats", {
        "id": args.id,
        "nodeName": args.nodeName,
        "portNum": args.portNum,
        "portProto": args.portProto,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbServiceIpPortStats.
 */
export interface GetGslbServiceIpPortStatsArgs {
    id?: string;
    nodeName: string;
    portNum: number;
    portProto: string;
    stats?: inputs.GetGslbServiceIpPortStatsStats;
}

/**
 * A collection of values returned by getGslbServiceIpPortStats.
 */
export interface GetGslbServiceIpPortStatsResult {
    readonly id: string;
    readonly nodeName: string;
    readonly portNum: number;
    readonly portProto: string;
    readonly stats?: outputs.GetGslbServiceIpPortStatsStats;
}
export function getGslbServiceIpPortStatsOutput(args: GetGslbServiceIpPortStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbServiceIpPortStatsResult> {
    return pulumi.output(args).apply((a: any) => getGslbServiceIpPortStats(a, opts))
}

/**
 * A collection of arguments for invoking getGslbServiceIpPortStats.
 */
export interface GetGslbServiceIpPortStatsOutputArgs {
    id?: pulumi.Input<string>;
    nodeName: pulumi.Input<string>;
    portNum: pulumi.Input<number>;
    portProto: pulumi.Input<string>;
    stats?: pulumi.Input<inputs.GetGslbServiceIpPortStatsStatsArgs>;
}
