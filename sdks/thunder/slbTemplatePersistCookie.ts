// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SlbTemplatePersistCookie extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplatePersistCookie resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplatePersistCookieState, opts?: pulumi.CustomResourceOptions): SlbTemplatePersistCookie {
        return new SlbTemplatePersistCookie(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplatePersistCookie:SlbTemplatePersistCookie';

    /**
     * Returns true if the given object is an instance of SlbTemplatePersistCookie.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplatePersistCookie {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplatePersistCookie.__pulumiType;
    }

    /**
     * Set cookie name
     */
    public readonly cookieName!: pulumi.Output<string | undefined>;
    /**
     * Set cookie domain
     */
    public readonly domain!: pulumi.Output<string | undefined>;
    /**
     * Do not observe connection rate rules
     */
    public readonly dontHonorConnRules!: pulumi.Output<number | undefined>;
    /**
     * Encryption level for cookie name / value
     */
    public readonly encryptLevel!: pulumi.Output<number | undefined>;
    /**
     * Set cookie expiration time (Expiration in seconds)
     */
    public readonly expire!: pulumi.Output<number | undefined>;
    /**
     * Enable HttpOnly attribute
     */
    public readonly httponly!: pulumi.Output<number | undefined>;
    /**
     * Insert persist cookie to every reponse
     */
    public readonly insertAlways!: pulumi.Output<number | undefined>;
    /**
     * Persist for server, default is port
     */
    public readonly matchType!: pulumi.Output<number | undefined>;
    /**
     * Cookie persistence (Cookie persistence template name)
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Set passphrase for encryption
     */
    public readonly passPhrase!: pulumi.Output<string | undefined>;
    /**
     * Pass thru mode - Server sends the persist cookie
     */
    public readonly passThru!: pulumi.Output<number | undefined>;
    /**
     * Set cookie path (Cookie path, default is "/")
     */
    public readonly path!: pulumi.Output<string | undefined>;
    /**
     * 'host': the cookie will have been set with a Secure attribute, a Path attribute with a value of /, and no Domain
     * attribute; 'secure': the cookie will have been set with a Secure attribute;
     */
    public readonly prefix!: pulumi.Output<string | undefined>;
    /**
     * 'none': none; 'lax': lax; 'strict': strict;
     */
    public readonly samesite!: pulumi.Output<string | undefined>;
    /**
     * Persist within the same server SCAN
     */
    public readonly scanAllMembers!: pulumi.Output<number | undefined>;
    /**
     * Enable secure attribute
     */
    public readonly secure!: pulumi.Output<number | undefined>;
    /**
     * Persist to the same server, default is port
     */
    public readonly server!: pulumi.Output<number | undefined>;
    /**
     * Persist to the same server and within the same service group
     */
    public readonly serverServiceGroup!: pulumi.Output<number | undefined>;
    /**
     * Persist within the same service group
     */
    public readonly serviceGroup!: pulumi.Output<number | undefined>;
    /**
     * 'max-age': Use the Max-Age attribute; 'expires': Use the Expires attribute; 'all': Use all attributes;
     */
    public readonly useAttribute!: pulumi.Output<string | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SlbTemplatePersistCookie resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplatePersistCookieArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplatePersistCookieArgs | SlbTemplatePersistCookieState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplatePersistCookieState | undefined;
            resourceInputs["cookieName"] = state ? state.cookieName : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["dontHonorConnRules"] = state ? state.dontHonorConnRules : undefined;
            resourceInputs["encryptLevel"] = state ? state.encryptLevel : undefined;
            resourceInputs["expire"] = state ? state.expire : undefined;
            resourceInputs["httponly"] = state ? state.httponly : undefined;
            resourceInputs["insertAlways"] = state ? state.insertAlways : undefined;
            resourceInputs["matchType"] = state ? state.matchType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passPhrase"] = state ? state.passPhrase : undefined;
            resourceInputs["passThru"] = state ? state.passThru : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["samesite"] = state ? state.samesite : undefined;
            resourceInputs["scanAllMembers"] = state ? state.scanAllMembers : undefined;
            resourceInputs["secure"] = state ? state.secure : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serverServiceGroup"] = state ? state.serverServiceGroup : undefined;
            resourceInputs["serviceGroup"] = state ? state.serviceGroup : undefined;
            resourceInputs["useAttribute"] = state ? state.useAttribute : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SlbTemplatePersistCookieArgs | undefined;
            resourceInputs["cookieName"] = args ? args.cookieName : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["dontHonorConnRules"] = args ? args.dontHonorConnRules : undefined;
            resourceInputs["encryptLevel"] = args ? args.encryptLevel : undefined;
            resourceInputs["expire"] = args ? args.expire : undefined;
            resourceInputs["httponly"] = args ? args.httponly : undefined;
            resourceInputs["insertAlways"] = args ? args.insertAlways : undefined;
            resourceInputs["matchType"] = args ? args.matchType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passPhrase"] = args ? args.passPhrase : undefined;
            resourceInputs["passThru"] = args ? args.passThru : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["samesite"] = args ? args.samesite : undefined;
            resourceInputs["scanAllMembers"] = args ? args.scanAllMembers : undefined;
            resourceInputs["secure"] = args ? args.secure : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["serverServiceGroup"] = args ? args.serverServiceGroup : undefined;
            resourceInputs["serviceGroup"] = args ? args.serviceGroup : undefined;
            resourceInputs["useAttribute"] = args ? args.useAttribute : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplatePersistCookie.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplatePersistCookie resources.
 */
export interface SlbTemplatePersistCookieState {
    /**
     * Set cookie name
     */
    cookieName?: pulumi.Input<string>;
    /**
     * Set cookie domain
     */
    domain?: pulumi.Input<string>;
    /**
     * Do not observe connection rate rules
     */
    dontHonorConnRules?: pulumi.Input<number>;
    /**
     * Encryption level for cookie name / value
     */
    encryptLevel?: pulumi.Input<number>;
    /**
     * Set cookie expiration time (Expiration in seconds)
     */
    expire?: pulumi.Input<number>;
    /**
     * Enable HttpOnly attribute
     */
    httponly?: pulumi.Input<number>;
    /**
     * Insert persist cookie to every reponse
     */
    insertAlways?: pulumi.Input<number>;
    /**
     * Persist for server, default is port
     */
    matchType?: pulumi.Input<number>;
    /**
     * Cookie persistence (Cookie persistence template name)
     */
    name?: pulumi.Input<string>;
    /**
     * Set passphrase for encryption
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * Pass thru mode - Server sends the persist cookie
     */
    passThru?: pulumi.Input<number>;
    /**
     * Set cookie path (Cookie path, default is "/")
     */
    path?: pulumi.Input<string>;
    /**
     * 'host': the cookie will have been set with a Secure attribute, a Path attribute with a value of /, and no Domain
     * attribute; 'secure': the cookie will have been set with a Secure attribute;
     */
    prefix?: pulumi.Input<string>;
    /**
     * 'none': none; 'lax': lax; 'strict': strict;
     */
    samesite?: pulumi.Input<string>;
    /**
     * Persist within the same server SCAN
     */
    scanAllMembers?: pulumi.Input<number>;
    /**
     * Enable secure attribute
     */
    secure?: pulumi.Input<number>;
    /**
     * Persist to the same server, default is port
     */
    server?: pulumi.Input<number>;
    /**
     * Persist to the same server and within the same service group
     */
    serverServiceGroup?: pulumi.Input<number>;
    /**
     * Persist within the same service group
     */
    serviceGroup?: pulumi.Input<number>;
    /**
     * 'max-age': Use the Max-Age attribute; 'expires': Use the Expires attribute; 'all': Use all attributes;
     */
    useAttribute?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbTemplatePersistCookie resource.
 */
export interface SlbTemplatePersistCookieArgs {
    /**
     * Set cookie name
     */
    cookieName?: pulumi.Input<string>;
    /**
     * Set cookie domain
     */
    domain?: pulumi.Input<string>;
    /**
     * Do not observe connection rate rules
     */
    dontHonorConnRules?: pulumi.Input<number>;
    /**
     * Encryption level for cookie name / value
     */
    encryptLevel?: pulumi.Input<number>;
    /**
     * Set cookie expiration time (Expiration in seconds)
     */
    expire?: pulumi.Input<number>;
    /**
     * Enable HttpOnly attribute
     */
    httponly?: pulumi.Input<number>;
    /**
     * Insert persist cookie to every reponse
     */
    insertAlways?: pulumi.Input<number>;
    /**
     * Persist for server, default is port
     */
    matchType?: pulumi.Input<number>;
    /**
     * Cookie persistence (Cookie persistence template name)
     */
    name?: pulumi.Input<string>;
    /**
     * Set passphrase for encryption
     */
    passPhrase?: pulumi.Input<string>;
    /**
     * Pass thru mode - Server sends the persist cookie
     */
    passThru?: pulumi.Input<number>;
    /**
     * Set cookie path (Cookie path, default is "/")
     */
    path?: pulumi.Input<string>;
    /**
     * 'host': the cookie will have been set with a Secure attribute, a Path attribute with a value of /, and no Domain
     * attribute; 'secure': the cookie will have been set with a Secure attribute;
     */
    prefix?: pulumi.Input<string>;
    /**
     * 'none': none; 'lax': lax; 'strict': strict;
     */
    samesite?: pulumi.Input<string>;
    /**
     * Persist within the same server SCAN
     */
    scanAllMembers?: pulumi.Input<number>;
    /**
     * Enable secure attribute
     */
    secure?: pulumi.Input<number>;
    /**
     * Persist to the same server, default is port
     */
    server?: pulumi.Input<number>;
    /**
     * Persist to the same server and within the same service group
     */
    serverServiceGroup?: pulumi.Input<number>;
    /**
     * Persist within the same service group
     */
    serviceGroup?: pulumi.Input<number>;
    /**
     * 'max-age': Use the Max-Age attribute; 'expires': Use the Expires attribute; 'all': Use all attributes;
     */
    useAttribute?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
