// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDdosDstEntryPortRangeOper(args: GetDdosDstEntryPortRangeOperArgs, opts?: pulumi.InvokeOptions): Promise<GetDdosDstEntryPortRangeOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getDdosDstEntryPortRangeOper:getDdosDstEntryPortRangeOper", {
        "dstEntryName": args.dstEntryName,
        "id": args.id,
        "ipFilteringPolicyOper": args.ipFilteringPolicyOper,
        "oper": args.oper,
        "patternRecognition": args.patternRecognition,
        "patternRecognitionPuDetails": args.patternRecognitionPuDetails,
        "portInd": args.portInd,
        "portRangeEnd": args.portRangeEnd,
        "portRangeStart": args.portRangeStart,
        "progressionTracking": args.progressionTracking,
        "protocol": args.protocol,
        "topkSources": args.topkSources,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDdosDstEntryPortRangeOper.
 */
export interface GetDdosDstEntryPortRangeOperArgs {
    dstEntryName: string;
    id?: string;
    ipFilteringPolicyOper?: inputs.GetDdosDstEntryPortRangeOperIpFilteringPolicyOper;
    oper?: inputs.GetDdosDstEntryPortRangeOperOper;
    patternRecognition?: inputs.GetDdosDstEntryPortRangeOperPatternRecognition;
    patternRecognitionPuDetails?: inputs.GetDdosDstEntryPortRangeOperPatternRecognitionPuDetails;
    portInd?: inputs.GetDdosDstEntryPortRangeOperPortInd;
    portRangeEnd: number;
    portRangeStart: number;
    progressionTracking?: inputs.GetDdosDstEntryPortRangeOperProgressionTracking;
    protocol: string;
    topkSources?: inputs.GetDdosDstEntryPortRangeOperTopkSources;
}

/**
 * A collection of values returned by getDdosDstEntryPortRangeOper.
 */
export interface GetDdosDstEntryPortRangeOperResult {
    readonly dstEntryName: string;
    readonly id: string;
    readonly ipFilteringPolicyOper?: outputs.GetDdosDstEntryPortRangeOperIpFilteringPolicyOper;
    readonly oper?: outputs.GetDdosDstEntryPortRangeOperOper;
    readonly patternRecognition?: outputs.GetDdosDstEntryPortRangeOperPatternRecognition;
    readonly patternRecognitionPuDetails?: outputs.GetDdosDstEntryPortRangeOperPatternRecognitionPuDetails;
    readonly portInd?: outputs.GetDdosDstEntryPortRangeOperPortInd;
    readonly portRangeEnd: number;
    readonly portRangeStart: number;
    readonly progressionTracking?: outputs.GetDdosDstEntryPortRangeOperProgressionTracking;
    readonly protocol: string;
    readonly topkSources?: outputs.GetDdosDstEntryPortRangeOperTopkSources;
}
export function getDdosDstEntryPortRangeOperOutput(args: GetDdosDstEntryPortRangeOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDdosDstEntryPortRangeOperResult> {
    return pulumi.output(args).apply((a: any) => getDdosDstEntryPortRangeOper(a, opts))
}

/**
 * A collection of arguments for invoking getDdosDstEntryPortRangeOper.
 */
export interface GetDdosDstEntryPortRangeOperOutputArgs {
    dstEntryName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipFilteringPolicyOper?: pulumi.Input<inputs.GetDdosDstEntryPortRangeOperIpFilteringPolicyOperArgs>;
    oper?: pulumi.Input<inputs.GetDdosDstEntryPortRangeOperOperArgs>;
    patternRecognition?: pulumi.Input<inputs.GetDdosDstEntryPortRangeOperPatternRecognitionArgs>;
    patternRecognitionPuDetails?: pulumi.Input<inputs.GetDdosDstEntryPortRangeOperPatternRecognitionPuDetailsArgs>;
    portInd?: pulumi.Input<inputs.GetDdosDstEntryPortRangeOperPortIndArgs>;
    portRangeEnd: pulumi.Input<number>;
    portRangeStart: pulumi.Input<number>;
    progressionTracking?: pulumi.Input<inputs.GetDdosDstEntryPortRangeOperProgressionTrackingArgs>;
    protocol: pulumi.Input<string>;
    topkSources?: pulumi.Input<inputs.GetDdosDstEntryPortRangeOperTopkSourcesArgs>;
}
