// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GslbZone extends pulumi.CustomResource {
    /**
     * Get an existing GslbZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbZoneState, opts?: pulumi.CustomResourceOptions): GslbZone {
        return new GslbZone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/gslbZone:GslbZone';

    /**
     * Returns true if the given object is an instance of GslbZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbZone.__pulumiType;
    }

    /**
     * Disable all services in the GSLB zone
     */
    public readonly disable!: pulumi.Output<number | undefined>;
    public readonly dnsCaaRecordLists!: pulumi.Output<outputs.GslbZoneDnsCaaRecordList[] | undefined>;
    public readonly dnsMxRecordLists!: pulumi.Output<outputs.GslbZoneDnsMxRecordList[] | undefined>;
    public readonly dnsNsRecordLists!: pulumi.Output<outputs.GslbZoneDnsNsRecordList[] | undefined>;
    public readonly dnsSoaRecord!: pulumi.Output<outputs.GslbZoneDnsSoaRecord | undefined>;
    /**
     * Specify the name for the DNS zone
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify the policy for this zone (Specify policy name)
     */
    public readonly policy!: pulumi.Output<string | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.GslbZoneSamplingEnable[] | undefined>;
    public readonly serviceLists!: pulumi.Output<outputs.GslbZoneServiceList[] | undefined>;
    public readonly template!: pulumi.Output<outputs.GslbZoneTemplate | undefined>;
    /**
     * Specify the zone ttl value (TTL value, unit: second, default is 10)
     */
    public readonly ttl!: pulumi.Output<number | undefined>;
    /**
     * Use DNS Server Response TTL value in GSLB Proxy mode
     */
    public readonly useServerTtl!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a GslbZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GslbZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbZoneArgs | GslbZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbZoneState | undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["dnsCaaRecordLists"] = state ? state.dnsCaaRecordLists : undefined;
            resourceInputs["dnsMxRecordLists"] = state ? state.dnsMxRecordLists : undefined;
            resourceInputs["dnsNsRecordLists"] = state ? state.dnsNsRecordLists : undefined;
            resourceInputs["dnsSoaRecord"] = state ? state.dnsSoaRecord : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policy"] = state ? state.policy : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["serviceLists"] = state ? state.serviceLists : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["useServerTtl"] = state ? state.useServerTtl : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as GslbZoneArgs | undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["dnsCaaRecordLists"] = args ? args.dnsCaaRecordLists : undefined;
            resourceInputs["dnsMxRecordLists"] = args ? args.dnsMxRecordLists : undefined;
            resourceInputs["dnsNsRecordLists"] = args ? args.dnsNsRecordLists : undefined;
            resourceInputs["dnsSoaRecord"] = args ? args.dnsSoaRecord : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policy"] = args ? args.policy : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["serviceLists"] = args ? args.serviceLists : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["useServerTtl"] = args ? args.useServerTtl : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbZone.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbZone resources.
 */
export interface GslbZoneState {
    /**
     * Disable all services in the GSLB zone
     */
    disable?: pulumi.Input<number>;
    dnsCaaRecordLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneDnsCaaRecordList>[]>;
    dnsMxRecordLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneDnsMxRecordList>[]>;
    dnsNsRecordLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneDnsNsRecordList>[]>;
    dnsSoaRecord?: pulumi.Input<inputs.GslbZoneDnsSoaRecord>;
    /**
     * Specify the name for the DNS zone
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the policy for this zone (Specify policy name)
     */
    policy?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.GslbZoneSamplingEnable>[]>;
    serviceLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneServiceList>[]>;
    template?: pulumi.Input<inputs.GslbZoneTemplate>;
    /**
     * Specify the zone ttl value (TTL value, unit: second, default is 10)
     */
    ttl?: pulumi.Input<number>;
    /**
     * Use DNS Server Response TTL value in GSLB Proxy mode
     */
    useServerTtl?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GslbZone resource.
 */
export interface GslbZoneArgs {
    /**
     * Disable all services in the GSLB zone
     */
    disable?: pulumi.Input<number>;
    dnsCaaRecordLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneDnsCaaRecordList>[]>;
    dnsMxRecordLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneDnsMxRecordList>[]>;
    dnsNsRecordLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneDnsNsRecordList>[]>;
    dnsSoaRecord?: pulumi.Input<inputs.GslbZoneDnsSoaRecord>;
    /**
     * Specify the name for the DNS zone
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the policy for this zone (Specify policy name)
     */
    policy?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.GslbZoneSamplingEnable>[]>;
    serviceLists?: pulumi.Input<pulumi.Input<inputs.GslbZoneServiceList>[]>;
    template?: pulumi.Input<inputs.GslbZoneTemplate>;
    /**
     * Specify the zone ttl value (TTL value, unit: second, default is 10)
     */
    ttl?: pulumi.Input<number>;
    /**
     * Use DNS Server Response TTL value in GSLB Proxy mode
     */
    useServerTtl?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
