// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Cgnv6TemplateLogging extends pulumi.CustomResource {
    /**
     * Get an existing Cgnv6TemplateLogging resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Cgnv6TemplateLoggingState, opts?: pulumi.CustomResourceOptions): Cgnv6TemplateLogging {
        return new Cgnv6TemplateLogging(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cgnv6TemplateLogging:Cgnv6TemplateLogging';

    /**
     * Returns true if the given object is an instance of Cgnv6TemplateLogging.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cgnv6TemplateLogging {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cgnv6TemplateLogging.__pulumiType;
    }

    /**
     * Disable multiple logs per packet
     */
    public readonly batchedLoggingDisable!: pulumi.Output<number | undefined>;
    public readonly custom!: pulumi.Output<outputs.Cgnv6TemplateLoggingCustom | undefined>;
    public readonly disableLogByDestination!: pulumi.Output<outputs.Cgnv6TemplateLoggingDisableLogByDestination | undefined>;
    /**
     * 'kernel': 0: Kernel; 'user': 1: User-level; 'mail': 2: Mail; 'daemon': 3: System daemons; 'security-authorization': 4:
     * Security/authorization; 'syslog': 5: Syslog internal; 'line-printer': 6: Line printer; 'news': 7: Network news; 'uucp':
     * 8: UUCP subsystem; 'cron': 9: Time-related; 'security-authorization-private': 10: Private security/authorization; 'ftp':
     * 11: FTP; 'ntp': 12: NTP; 'audit': 13: Audit; 'alert': 14: Alert; 'clock': 15: Clock-related; 'local0': 16: Local use 0;
     * 'local1': 17: Local use 1; 'local2': 18: Local use 2; 'local3': 19: Local use 3; 'local4': 20: Local use 4; 'local5':
     * 21: Local use 5; 'local6': 22: Local use 6; 'local7': 23: Local use 7;
     */
    public readonly facility!: pulumi.Output<string | undefined>;
    /**
     * 'binary': Binary logging format; 'compact': Compact ASCII logging format (Hex format with compact representation);
     * 'custom': Arbitrary custom logging format; 'default': Default A10 logging format (ASCII); 'rfc5424': RFC5424 compliant
     * logging format; 'cef': Common Event Format for logging;
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * Include the destination IP and port in logs
     */
    public readonly includeDestination!: pulumi.Output<number | undefined>;
    public readonly includeHttp!: pulumi.Output<outputs.Cgnv6TemplateLoggingIncludeHttp | undefined>;
    /**
     * Include the inside user MAC address in logs
     */
    public readonly includeInsideUserMac!: pulumi.Output<number | undefined>;
    /**
     * Include partition name in logging events
     */
    public readonly includePartitionName!: pulumi.Output<number | undefined>;
    /**
     * include bytes accounting information in port-batch-v2 port-mapping and fixed-nat user-ports messages
     */
    public readonly includePortBlockAccount!: pulumi.Output<number | undefined>;
    public readonly includeRadiusAttribute!: pulumi.Output<outputs.Cgnv6TemplateLoggingIncludeRadiusAttribute | undefined>;
    /**
     * include byte count in session deletion logs
     */
    public readonly includeSessionByteCount!: pulumi.Output<number | undefined>;
    public readonly log!: pulumi.Output<outputs.Cgnv6TemplateLoggingLog | undefined>;
    public readonly logReceiver!: pulumi.Output<outputs.Cgnv6TemplateLoggingLogReceiver | undefined>;
    /**
     * Logging template name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 'seconds': Logging timestamp resolution in seconds (default); '10-milliseconds': Logging timestamp resolution in 10s of
     * milli-seconds;
     */
    public readonly resolution!: pulumi.Output<string | undefined>;
    public readonly rfcCustom!: pulumi.Output<outputs.Cgnv6TemplateLoggingRfcCustom | undefined>;
    public readonly rule!: pulumi.Output<outputs.Cgnv6TemplateLoggingRule | undefined>;
    /**
     * Set NAT logging service-group
     */
    public readonly serviceGroup!: pulumi.Output<string | undefined>;
    public readonly severity!: pulumi.Output<outputs.Cgnv6TemplateLoggingSeverity | undefined>;
    /**
     * Service group is in shared patition
     */
    public readonly shared!: pulumi.Output<number | undefined>;
    public readonly sourceAddress!: pulumi.Output<outputs.Cgnv6TemplateLoggingSourceAddress | undefined>;
    public readonly sourcePort!: pulumi.Output<outputs.Cgnv6TemplateLoggingSourcePort | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Cgnv6TemplateLogging resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Cgnv6TemplateLoggingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Cgnv6TemplateLoggingArgs | Cgnv6TemplateLoggingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Cgnv6TemplateLoggingState | undefined;
            resourceInputs["batchedLoggingDisable"] = state ? state.batchedLoggingDisable : undefined;
            resourceInputs["custom"] = state ? state.custom : undefined;
            resourceInputs["disableLogByDestination"] = state ? state.disableLogByDestination : undefined;
            resourceInputs["facility"] = state ? state.facility : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["includeDestination"] = state ? state.includeDestination : undefined;
            resourceInputs["includeHttp"] = state ? state.includeHttp : undefined;
            resourceInputs["includeInsideUserMac"] = state ? state.includeInsideUserMac : undefined;
            resourceInputs["includePartitionName"] = state ? state.includePartitionName : undefined;
            resourceInputs["includePortBlockAccount"] = state ? state.includePortBlockAccount : undefined;
            resourceInputs["includeRadiusAttribute"] = state ? state.includeRadiusAttribute : undefined;
            resourceInputs["includeSessionByteCount"] = state ? state.includeSessionByteCount : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["logReceiver"] = state ? state.logReceiver : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resolution"] = state ? state.resolution : undefined;
            resourceInputs["rfcCustom"] = state ? state.rfcCustom : undefined;
            resourceInputs["rule"] = state ? state.rule : undefined;
            resourceInputs["serviceGroup"] = state ? state.serviceGroup : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["shared"] = state ? state.shared : undefined;
            resourceInputs["sourceAddress"] = state ? state.sourceAddress : undefined;
            resourceInputs["sourcePort"] = state ? state.sourcePort : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as Cgnv6TemplateLoggingArgs | undefined;
            resourceInputs["batchedLoggingDisable"] = args ? args.batchedLoggingDisable : undefined;
            resourceInputs["custom"] = args ? args.custom : undefined;
            resourceInputs["disableLogByDestination"] = args ? args.disableLogByDestination : undefined;
            resourceInputs["facility"] = args ? args.facility : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["includeDestination"] = args ? args.includeDestination : undefined;
            resourceInputs["includeHttp"] = args ? args.includeHttp : undefined;
            resourceInputs["includeInsideUserMac"] = args ? args.includeInsideUserMac : undefined;
            resourceInputs["includePartitionName"] = args ? args.includePartitionName : undefined;
            resourceInputs["includePortBlockAccount"] = args ? args.includePortBlockAccount : undefined;
            resourceInputs["includeRadiusAttribute"] = args ? args.includeRadiusAttribute : undefined;
            resourceInputs["includeSessionByteCount"] = args ? args.includeSessionByteCount : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["logReceiver"] = args ? args.logReceiver : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolution"] = args ? args.resolution : undefined;
            resourceInputs["rfcCustom"] = args ? args.rfcCustom : undefined;
            resourceInputs["rule"] = args ? args.rule : undefined;
            resourceInputs["serviceGroup"] = args ? args.serviceGroup : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["shared"] = args ? args.shared : undefined;
            resourceInputs["sourceAddress"] = args ? args.sourceAddress : undefined;
            resourceInputs["sourcePort"] = args ? args.sourcePort : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cgnv6TemplateLogging.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cgnv6TemplateLogging resources.
 */
export interface Cgnv6TemplateLoggingState {
    /**
     * Disable multiple logs per packet
     */
    batchedLoggingDisable?: pulumi.Input<number>;
    custom?: pulumi.Input<inputs.Cgnv6TemplateLoggingCustom>;
    disableLogByDestination?: pulumi.Input<inputs.Cgnv6TemplateLoggingDisableLogByDestination>;
    /**
     * 'kernel': 0: Kernel; 'user': 1: User-level; 'mail': 2: Mail; 'daemon': 3: System daemons; 'security-authorization': 4:
     * Security/authorization; 'syslog': 5: Syslog internal; 'line-printer': 6: Line printer; 'news': 7: Network news; 'uucp':
     * 8: UUCP subsystem; 'cron': 9: Time-related; 'security-authorization-private': 10: Private security/authorization; 'ftp':
     * 11: FTP; 'ntp': 12: NTP; 'audit': 13: Audit; 'alert': 14: Alert; 'clock': 15: Clock-related; 'local0': 16: Local use 0;
     * 'local1': 17: Local use 1; 'local2': 18: Local use 2; 'local3': 19: Local use 3; 'local4': 20: Local use 4; 'local5':
     * 21: Local use 5; 'local6': 22: Local use 6; 'local7': 23: Local use 7;
     */
    facility?: pulumi.Input<string>;
    /**
     * 'binary': Binary logging format; 'compact': Compact ASCII logging format (Hex format with compact representation);
     * 'custom': Arbitrary custom logging format; 'default': Default A10 logging format (ASCII); 'rfc5424': RFC5424 compliant
     * logging format; 'cef': Common Event Format for logging;
     */
    format?: pulumi.Input<string>;
    /**
     * Include the destination IP and port in logs
     */
    includeDestination?: pulumi.Input<number>;
    includeHttp?: pulumi.Input<inputs.Cgnv6TemplateLoggingIncludeHttp>;
    /**
     * Include the inside user MAC address in logs
     */
    includeInsideUserMac?: pulumi.Input<number>;
    /**
     * Include partition name in logging events
     */
    includePartitionName?: pulumi.Input<number>;
    /**
     * include bytes accounting information in port-batch-v2 port-mapping and fixed-nat user-ports messages
     */
    includePortBlockAccount?: pulumi.Input<number>;
    includeRadiusAttribute?: pulumi.Input<inputs.Cgnv6TemplateLoggingIncludeRadiusAttribute>;
    /**
     * include byte count in session deletion logs
     */
    includeSessionByteCount?: pulumi.Input<number>;
    log?: pulumi.Input<inputs.Cgnv6TemplateLoggingLog>;
    logReceiver?: pulumi.Input<inputs.Cgnv6TemplateLoggingLogReceiver>;
    /**
     * Logging template name
     */
    name?: pulumi.Input<string>;
    /**
     * 'seconds': Logging timestamp resolution in seconds (default); '10-milliseconds': Logging timestamp resolution in 10s of
     * milli-seconds;
     */
    resolution?: pulumi.Input<string>;
    rfcCustom?: pulumi.Input<inputs.Cgnv6TemplateLoggingRfcCustom>;
    rule?: pulumi.Input<inputs.Cgnv6TemplateLoggingRule>;
    /**
     * Set NAT logging service-group
     */
    serviceGroup?: pulumi.Input<string>;
    severity?: pulumi.Input<inputs.Cgnv6TemplateLoggingSeverity>;
    /**
     * Service group is in shared patition
     */
    shared?: pulumi.Input<number>;
    sourceAddress?: pulumi.Input<inputs.Cgnv6TemplateLoggingSourceAddress>;
    sourcePort?: pulumi.Input<inputs.Cgnv6TemplateLoggingSourcePort>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cgnv6TemplateLogging resource.
 */
export interface Cgnv6TemplateLoggingArgs {
    /**
     * Disable multiple logs per packet
     */
    batchedLoggingDisable?: pulumi.Input<number>;
    custom?: pulumi.Input<inputs.Cgnv6TemplateLoggingCustom>;
    disableLogByDestination?: pulumi.Input<inputs.Cgnv6TemplateLoggingDisableLogByDestination>;
    /**
     * 'kernel': 0: Kernel; 'user': 1: User-level; 'mail': 2: Mail; 'daemon': 3: System daemons; 'security-authorization': 4:
     * Security/authorization; 'syslog': 5: Syslog internal; 'line-printer': 6: Line printer; 'news': 7: Network news; 'uucp':
     * 8: UUCP subsystem; 'cron': 9: Time-related; 'security-authorization-private': 10: Private security/authorization; 'ftp':
     * 11: FTP; 'ntp': 12: NTP; 'audit': 13: Audit; 'alert': 14: Alert; 'clock': 15: Clock-related; 'local0': 16: Local use 0;
     * 'local1': 17: Local use 1; 'local2': 18: Local use 2; 'local3': 19: Local use 3; 'local4': 20: Local use 4; 'local5':
     * 21: Local use 5; 'local6': 22: Local use 6; 'local7': 23: Local use 7;
     */
    facility?: pulumi.Input<string>;
    /**
     * 'binary': Binary logging format; 'compact': Compact ASCII logging format (Hex format with compact representation);
     * 'custom': Arbitrary custom logging format; 'default': Default A10 logging format (ASCII); 'rfc5424': RFC5424 compliant
     * logging format; 'cef': Common Event Format for logging;
     */
    format?: pulumi.Input<string>;
    /**
     * Include the destination IP and port in logs
     */
    includeDestination?: pulumi.Input<number>;
    includeHttp?: pulumi.Input<inputs.Cgnv6TemplateLoggingIncludeHttp>;
    /**
     * Include the inside user MAC address in logs
     */
    includeInsideUserMac?: pulumi.Input<number>;
    /**
     * Include partition name in logging events
     */
    includePartitionName?: pulumi.Input<number>;
    /**
     * include bytes accounting information in port-batch-v2 port-mapping and fixed-nat user-ports messages
     */
    includePortBlockAccount?: pulumi.Input<number>;
    includeRadiusAttribute?: pulumi.Input<inputs.Cgnv6TemplateLoggingIncludeRadiusAttribute>;
    /**
     * include byte count in session deletion logs
     */
    includeSessionByteCount?: pulumi.Input<number>;
    log?: pulumi.Input<inputs.Cgnv6TemplateLoggingLog>;
    logReceiver?: pulumi.Input<inputs.Cgnv6TemplateLoggingLogReceiver>;
    /**
     * Logging template name
     */
    name?: pulumi.Input<string>;
    /**
     * 'seconds': Logging timestamp resolution in seconds (default); '10-milliseconds': Logging timestamp resolution in 10s of
     * milli-seconds;
     */
    resolution?: pulumi.Input<string>;
    rfcCustom?: pulumi.Input<inputs.Cgnv6TemplateLoggingRfcCustom>;
    rule?: pulumi.Input<inputs.Cgnv6TemplateLoggingRule>;
    /**
     * Set NAT logging service-group
     */
    serviceGroup?: pulumi.Input<string>;
    severity?: pulumi.Input<inputs.Cgnv6TemplateLoggingSeverity>;
    /**
     * Service group is in shared patition
     */
    shared?: pulumi.Input<number>;
    sourceAddress?: pulumi.Input<inputs.Cgnv6TemplateLoggingSourceAddress>;
    sourcePort?: pulumi.Input<inputs.Cgnv6TemplateLoggingSourcePort>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
