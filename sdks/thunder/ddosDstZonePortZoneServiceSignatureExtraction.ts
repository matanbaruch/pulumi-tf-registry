// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DdosDstZonePortZoneServiceSignatureExtraction extends pulumi.CustomResource {
    /**
     * Get an existing DdosDstZonePortZoneServiceSignatureExtraction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosDstZonePortZoneServiceSignatureExtractionState, opts?: pulumi.CustomResourceOptions): DdosDstZonePortZoneServiceSignatureExtraction {
        return new DdosDstZonePortZoneServiceSignatureExtraction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosDstZonePortZoneServiceSignatureExtraction:DdosDstZonePortZoneServiceSignatureExtraction';

    /**
     * Returns true if the given object is an instance of DdosDstZonePortZoneServiceSignatureExtraction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosDstZonePortZoneServiceSignatureExtraction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosDstZonePortZoneServiceSignatureExtraction.__pulumiType;
    }

    /**
     * 'heuristic': heuristic algorithm;
     */
    public readonly algorithm!: pulumi.Output<string>;
    /**
     * Enable manual mode
     */
    public readonly manualMode!: pulumi.Output<number | undefined>;
    /**
     * PortNum
     */
    public readonly portNum!: pulumi.Output<string>;
    /**
     * Protocol
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * ZoneName
     */
    public readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a DdosDstZonePortZoneServiceSignatureExtraction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosDstZonePortZoneServiceSignatureExtractionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosDstZonePortZoneServiceSignatureExtractionArgs | DdosDstZonePortZoneServiceSignatureExtractionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosDstZonePortZoneServiceSignatureExtractionState | undefined;
            resourceInputs["algorithm"] = state ? state.algorithm : undefined;
            resourceInputs["manualMode"] = state ? state.manualMode : undefined;
            resourceInputs["portNum"] = state ? state.portNum : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as DdosDstZonePortZoneServiceSignatureExtractionArgs | undefined;
            if ((!args || args.algorithm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'algorithm'");
            }
            if ((!args || args.portNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portNum'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.zoneName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneName'");
            }
            resourceInputs["algorithm"] = args ? args.algorithm : undefined;
            resourceInputs["manualMode"] = args ? args.manualMode : undefined;
            resourceInputs["portNum"] = args ? args.portNum : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["zoneName"] = args ? args.zoneName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosDstZonePortZoneServiceSignatureExtraction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosDstZonePortZoneServiceSignatureExtraction resources.
 */
export interface DdosDstZonePortZoneServiceSignatureExtractionState {
    /**
     * 'heuristic': heuristic algorithm;
     */
    algorithm?: pulumi.Input<string>;
    /**
     * Enable manual mode
     */
    manualMode?: pulumi.Input<number>;
    /**
     * PortNum
     */
    portNum?: pulumi.Input<string>;
    /**
     * Protocol
     */
    protocol?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * ZoneName
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosDstZonePortZoneServiceSignatureExtraction resource.
 */
export interface DdosDstZonePortZoneServiceSignatureExtractionArgs {
    /**
     * 'heuristic': heuristic algorithm;
     */
    algorithm: pulumi.Input<string>;
    /**
     * Enable manual mode
     */
    manualMode?: pulumi.Input<number>;
    /**
     * PortNum
     */
    portNum: pulumi.Input<string>;
    /**
     * Protocol
     */
    protocol: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * ZoneName
     */
    zoneName: pulumi.Input<string>;
}
