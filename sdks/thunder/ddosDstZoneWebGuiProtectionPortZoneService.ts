// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DdosDstZoneWebGuiProtectionPortZoneService extends pulumi.CustomResource {
    /**
     * Get an existing DdosDstZoneWebGuiProtectionPortZoneService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosDstZoneWebGuiProtectionPortZoneServiceState, opts?: pulumi.CustomResourceOptions): DdosDstZoneWebGuiProtectionPortZoneService {
        return new DdosDstZoneWebGuiProtectionPortZoneService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosDstZoneWebGuiProtectionPortZoneService:DdosDstZoneWebGuiProtectionPortZoneService';

    /**
     * Returns true if the given object is an instance of DdosDstZoneWebGuiProtectionPortZoneService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosDstZoneWebGuiProtectionPortZoneService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosDstZoneWebGuiProtectionPortZoneService.__pulumiType;
    }

    /**
     * Peak Bandwidth Expected
     */
    public readonly pbe!: pulumi.Output<string | undefined>;
    /**
     * Port Number
     */
    public readonly portNum!: pulumi.Output<number>;
    /**
     * 'dns-tcp': DNS-TCP Port; 'dns-udp': DNS-UDP Port; 'http': HTTP Port; 'tcp': TCP Port; 'udp': UDP Port; 'ssl-l4': SSL-L4
     * Port;
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * ZoneName
     */
    public readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a DdosDstZoneWebGuiProtectionPortZoneService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosDstZoneWebGuiProtectionPortZoneServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosDstZoneWebGuiProtectionPortZoneServiceArgs | DdosDstZoneWebGuiProtectionPortZoneServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosDstZoneWebGuiProtectionPortZoneServiceState | undefined;
            resourceInputs["pbe"] = state ? state.pbe : undefined;
            resourceInputs["portNum"] = state ? state.portNum : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as DdosDstZoneWebGuiProtectionPortZoneServiceArgs | undefined;
            if ((!args || args.portNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portNum'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.zoneName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneName'");
            }
            resourceInputs["pbe"] = args ? args.pbe : undefined;
            resourceInputs["portNum"] = args ? args.portNum : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["zoneName"] = args ? args.zoneName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosDstZoneWebGuiProtectionPortZoneService.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosDstZoneWebGuiProtectionPortZoneService resources.
 */
export interface DdosDstZoneWebGuiProtectionPortZoneServiceState {
    /**
     * Peak Bandwidth Expected
     */
    pbe?: pulumi.Input<string>;
    /**
     * Port Number
     */
    portNum?: pulumi.Input<number>;
    /**
     * 'dns-tcp': DNS-TCP Port; 'dns-udp': DNS-UDP Port; 'http': HTTP Port; 'tcp': TCP Port; 'udp': UDP Port; 'ssl-l4': SSL-L4
     * Port;
     */
    protocol?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * ZoneName
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosDstZoneWebGuiProtectionPortZoneService resource.
 */
export interface DdosDstZoneWebGuiProtectionPortZoneServiceArgs {
    /**
     * Peak Bandwidth Expected
     */
    pbe?: pulumi.Input<string>;
    /**
     * Port Number
     */
    portNum: pulumi.Input<number>;
    /**
     * 'dns-tcp': DNS-TCP Port; 'dns-udp': DNS-UDP Port; 'http': HTTP Port; 'tcp': TCP Port; 'udp': UDP Port; 'ssl-l4': SSL-L4
     * Port;
     */
    protocol: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * ZoneName
     */
    zoneName: pulumi.Input<string>;
}
