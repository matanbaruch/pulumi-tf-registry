// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GslbZoneServiceDnsCnameRecord extends pulumi.CustomResource {
    /**
     * Get an existing GslbZoneServiceDnsCnameRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbZoneServiceDnsCnameRecordState, opts?: pulumi.CustomResourceOptions): GslbZoneServiceDnsCnameRecord {
        return new GslbZoneServiceDnsCnameRecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/gslbZoneServiceDnsCnameRecord:GslbZoneServiceDnsCnameRecord';

    /**
     * Returns true if the given object is an instance of GslbZoneServiceDnsCnameRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbZoneServiceDnsCnameRecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbZoneServiceDnsCnameRecord.__pulumiType;
    }

    /**
     * Specify Administrative Preference, default is 100
     */
    public readonly adminPreference!: pulumi.Output<number | undefined>;
    /**
     * Specify the alias name
     */
    public readonly aliasName!: pulumi.Output<string>;
    /**
     * As backup when fail
     */
    public readonly asBackup!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly samplingEnables!: pulumi.Output<outputs.GslbZoneServiceDnsCnameRecordSamplingEnable[] | undefined>;
    /**
     * ServiceName
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * ServicePort
     */
    public readonly servicePort!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Specify Weight, default is 1
     */
    public readonly weight!: pulumi.Output<number | undefined>;

    /**
     * Create a GslbZoneServiceDnsCnameRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GslbZoneServiceDnsCnameRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbZoneServiceDnsCnameRecordArgs | GslbZoneServiceDnsCnameRecordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbZoneServiceDnsCnameRecordState | undefined;
            resourceInputs["adminPreference"] = state ? state.adminPreference : undefined;
            resourceInputs["aliasName"] = state ? state.aliasName : undefined;
            resourceInputs["asBackup"] = state ? state.asBackup : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["servicePort"] = state ? state.servicePort : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as GslbZoneServiceDnsCnameRecordArgs | undefined;
            if ((!args || args.aliasName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aliasName'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.servicePort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servicePort'");
            }
            resourceInputs["adminPreference"] = args ? args.adminPreference : undefined;
            resourceInputs["aliasName"] = args ? args.aliasName : undefined;
            resourceInputs["asBackup"] = args ? args.asBackup : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["servicePort"] = args ? args.servicePort : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbZoneServiceDnsCnameRecord.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbZoneServiceDnsCnameRecord resources.
 */
export interface GslbZoneServiceDnsCnameRecordState {
    /**
     * Specify Administrative Preference, default is 100
     */
    adminPreference?: pulumi.Input<number>;
    /**
     * Specify the alias name
     */
    aliasName?: pulumi.Input<string>;
    /**
     * As backup when fail
     */
    asBackup?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.GslbZoneServiceDnsCnameRecordSamplingEnable>[]>;
    /**
     * ServiceName
     */
    serviceName?: pulumi.Input<string>;
    /**
     * ServicePort
     */
    servicePort?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specify Weight, default is 1
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GslbZoneServiceDnsCnameRecord resource.
 */
export interface GslbZoneServiceDnsCnameRecordArgs {
    /**
     * Specify Administrative Preference, default is 100
     */
    adminPreference?: pulumi.Input<number>;
    /**
     * Specify the alias name
     */
    aliasName: pulumi.Input<string>;
    /**
     * As backup when fail
     */
    asBackup?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.GslbZoneServiceDnsCnameRecordSamplingEnable>[]>;
    /**
     * ServiceName
     */
    serviceName: pulumi.Input<string>;
    /**
     * ServicePort
     */
    servicePort: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specify Weight, default is 1
     */
    weight?: pulumi.Input<number>;
}
