// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc extends pulumi.CustomResource {
    /**
     * Get an existing VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncState, opts?: pulumi.CustomResourceOptions): VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc {
        return new VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/visibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc:VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc';

    /**
     * Returns true if the given object is an instance of VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc.__pulumiType;
    }

    /**
     * Enable automatic packet-capture for Bad IP Flags Drop
     */
    public readonly badIpFlg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Bad IP Fragment Offset Drop
     */
    public readonly badIpFrgOffset!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Bad IP Header Len Drop
     */
    public readonly badIpHdrlen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Bad IP Payload Len Drop
     */
    public readonly badIpPayloadLen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Bad IP TTL Drop
     */
    public readonly badIpTtl!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Bad Urgent Offset Drop
     */
    public readonly badTcpUrgOffset!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Bad IP Checksum Drop
     */
    public readonly csum!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Empty Fragment Drop
     */
    public readonly empFrg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Micro Fragment Drop
     */
    public readonly empMicFrg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv4 Fragment Drop
     */
    public readonly frg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for GRE PPTP Error Drop
     */
    public readonly grePptpErr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IP-over-IP Tunnel Error Drop
     */
    public readonly ipipTnlErr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IP-over-IP Tunnel Mismatch Drop
     */
    public readonly ipipTnlMsmtch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Authentication Header Drop
     */
    public readonly ipv6EhAh!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Destination Header Drop
     */
    public readonly ipv6EhDest!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 ESP Header Drop
     */
    public readonly ipv6EhEsp!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Fragmentation Header Drop
     */
    public readonly ipv6EhFrag!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Hop by Hop Header Drop
     */
    public readonly ipv6EhHbh!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Malformed Extension Header Drop
     */
    public readonly ipv6EhMalformed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Mobility Header Drop
     */
    public readonly ipv6EhMobility!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 No Next Header Drop
     */
    public readonly ipv6EhNone!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Unknown Extension Header Drop
     */
    public readonly ipv6EhOther!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv6 Routing Header Drop
     */
    public readonly ipv6EhRouting!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Land Attack Drop
     */
    public readonly land!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable automatic packet-capture for No IP Payload drop
     */
    public readonly noIpPayload!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for GRE Tunnel Error Drop
     */
    public readonly nvgreErr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for IPv4 Options Drop
     */
    public readonly opt!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Oversize IP Payload Drop
     */
    public readonly overIpPayload!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ICMP Ping of Death Drop
     */
    public readonly pod!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Runt IP Header Drop
     */
    public readonly runtIpHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Runt TCP/UDP Header Drop
     */
    public readonly runtTcpUdpHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Bad Checksum Drop
     */
    public readonly tcpBadCsum!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Bad IP Length Drop
     */
    public readonly tcpBadIplen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Fragmented Header Drop
     */
    public readonly tcpFrgHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Null Flags Drop
     */
    public readonly tcpNullFrg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Null Scan Drop
     */
    public readonly tcpNullScan!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Option Error Drop
     */
    public readonly tcpOptErr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Short Header Drop
     */
    public readonly tcpShtHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Syn and Fin Drop
     */
    public readonly tcpSynFin!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP Syn Fragment Drop
     */
    public readonly tcpSynFrg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP XMAS Flags Drop
     */
    public readonly tcpXmas!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP XMAS Scan Drop
     */
    public readonly tcpXmasScan!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for UDP Bad Checksum Drop
     */
    public readonly udpBadCsum!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for UDP Bad Length Drop
     */
    public readonly udpBadLen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for UDP Kerberos Fragment Drop
     */
    public readonly udpKerbFrg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for UDP Port Loopback Drop
     */
    public readonly udpPortLb!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for UDP Short Header Drop
     */
    public readonly udpSrtHdr!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Enable automatic packet-capture for VXLAN Tunnel Error Drop
     */
    public readonly vxlanErr!: pulumi.Output<number | undefined>;

    /**
     * Create a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncArgs | VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncState | undefined;
            resourceInputs["badIpFlg"] = state ? state.badIpFlg : undefined;
            resourceInputs["badIpFrgOffset"] = state ? state.badIpFrgOffset : undefined;
            resourceInputs["badIpHdrlen"] = state ? state.badIpHdrlen : undefined;
            resourceInputs["badIpPayloadLen"] = state ? state.badIpPayloadLen : undefined;
            resourceInputs["badIpTtl"] = state ? state.badIpTtl : undefined;
            resourceInputs["badTcpUrgOffset"] = state ? state.badTcpUrgOffset : undefined;
            resourceInputs["csum"] = state ? state.csum : undefined;
            resourceInputs["empFrg"] = state ? state.empFrg : undefined;
            resourceInputs["empMicFrg"] = state ? state.empMicFrg : undefined;
            resourceInputs["frg"] = state ? state.frg : undefined;
            resourceInputs["grePptpErr"] = state ? state.grePptpErr : undefined;
            resourceInputs["ipipTnlErr"] = state ? state.ipipTnlErr : undefined;
            resourceInputs["ipipTnlMsmtch"] = state ? state.ipipTnlMsmtch : undefined;
            resourceInputs["ipv6EhAh"] = state ? state.ipv6EhAh : undefined;
            resourceInputs["ipv6EhDest"] = state ? state.ipv6EhDest : undefined;
            resourceInputs["ipv6EhEsp"] = state ? state.ipv6EhEsp : undefined;
            resourceInputs["ipv6EhFrag"] = state ? state.ipv6EhFrag : undefined;
            resourceInputs["ipv6EhHbh"] = state ? state.ipv6EhHbh : undefined;
            resourceInputs["ipv6EhMalformed"] = state ? state.ipv6EhMalformed : undefined;
            resourceInputs["ipv6EhMobility"] = state ? state.ipv6EhMobility : undefined;
            resourceInputs["ipv6EhNone"] = state ? state.ipv6EhNone : undefined;
            resourceInputs["ipv6EhOther"] = state ? state.ipv6EhOther : undefined;
            resourceInputs["ipv6EhRouting"] = state ? state.ipv6EhRouting : undefined;
            resourceInputs["land"] = state ? state.land : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noIpPayload"] = state ? state.noIpPayload : undefined;
            resourceInputs["nvgreErr"] = state ? state.nvgreErr : undefined;
            resourceInputs["opt"] = state ? state.opt : undefined;
            resourceInputs["overIpPayload"] = state ? state.overIpPayload : undefined;
            resourceInputs["pod"] = state ? state.pod : undefined;
            resourceInputs["runtIpHdr"] = state ? state.runtIpHdr : undefined;
            resourceInputs["runtTcpUdpHdr"] = state ? state.runtTcpUdpHdr : undefined;
            resourceInputs["tcpBadCsum"] = state ? state.tcpBadCsum : undefined;
            resourceInputs["tcpBadIplen"] = state ? state.tcpBadIplen : undefined;
            resourceInputs["tcpFrgHdr"] = state ? state.tcpFrgHdr : undefined;
            resourceInputs["tcpNullFrg"] = state ? state.tcpNullFrg : undefined;
            resourceInputs["tcpNullScan"] = state ? state.tcpNullScan : undefined;
            resourceInputs["tcpOptErr"] = state ? state.tcpOptErr : undefined;
            resourceInputs["tcpShtHdr"] = state ? state.tcpShtHdr : undefined;
            resourceInputs["tcpSynFin"] = state ? state.tcpSynFin : undefined;
            resourceInputs["tcpSynFrg"] = state ? state.tcpSynFrg : undefined;
            resourceInputs["tcpXmas"] = state ? state.tcpXmas : undefined;
            resourceInputs["tcpXmasScan"] = state ? state.tcpXmasScan : undefined;
            resourceInputs["udpBadCsum"] = state ? state.udpBadCsum : undefined;
            resourceInputs["udpBadLen"] = state ? state.udpBadLen : undefined;
            resourceInputs["udpKerbFrg"] = state ? state.udpKerbFrg : undefined;
            resourceInputs["udpPortLb"] = state ? state.udpPortLb : undefined;
            resourceInputs["udpSrtHdr"] = state ? state.udpSrtHdr : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vxlanErr"] = state ? state.vxlanErr : undefined;
        } else {
            const args = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncArgs | undefined;
            resourceInputs["badIpFlg"] = args ? args.badIpFlg : undefined;
            resourceInputs["badIpFrgOffset"] = args ? args.badIpFrgOffset : undefined;
            resourceInputs["badIpHdrlen"] = args ? args.badIpHdrlen : undefined;
            resourceInputs["badIpPayloadLen"] = args ? args.badIpPayloadLen : undefined;
            resourceInputs["badIpTtl"] = args ? args.badIpTtl : undefined;
            resourceInputs["badTcpUrgOffset"] = args ? args.badTcpUrgOffset : undefined;
            resourceInputs["csum"] = args ? args.csum : undefined;
            resourceInputs["empFrg"] = args ? args.empFrg : undefined;
            resourceInputs["empMicFrg"] = args ? args.empMicFrg : undefined;
            resourceInputs["frg"] = args ? args.frg : undefined;
            resourceInputs["grePptpErr"] = args ? args.grePptpErr : undefined;
            resourceInputs["ipipTnlErr"] = args ? args.ipipTnlErr : undefined;
            resourceInputs["ipipTnlMsmtch"] = args ? args.ipipTnlMsmtch : undefined;
            resourceInputs["ipv6EhAh"] = args ? args.ipv6EhAh : undefined;
            resourceInputs["ipv6EhDest"] = args ? args.ipv6EhDest : undefined;
            resourceInputs["ipv6EhEsp"] = args ? args.ipv6EhEsp : undefined;
            resourceInputs["ipv6EhFrag"] = args ? args.ipv6EhFrag : undefined;
            resourceInputs["ipv6EhHbh"] = args ? args.ipv6EhHbh : undefined;
            resourceInputs["ipv6EhMalformed"] = args ? args.ipv6EhMalformed : undefined;
            resourceInputs["ipv6EhMobility"] = args ? args.ipv6EhMobility : undefined;
            resourceInputs["ipv6EhNone"] = args ? args.ipv6EhNone : undefined;
            resourceInputs["ipv6EhOther"] = args ? args.ipv6EhOther : undefined;
            resourceInputs["ipv6EhRouting"] = args ? args.ipv6EhRouting : undefined;
            resourceInputs["land"] = args ? args.land : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noIpPayload"] = args ? args.noIpPayload : undefined;
            resourceInputs["nvgreErr"] = args ? args.nvgreErr : undefined;
            resourceInputs["opt"] = args ? args.opt : undefined;
            resourceInputs["overIpPayload"] = args ? args.overIpPayload : undefined;
            resourceInputs["pod"] = args ? args.pod : undefined;
            resourceInputs["runtIpHdr"] = args ? args.runtIpHdr : undefined;
            resourceInputs["runtTcpUdpHdr"] = args ? args.runtTcpUdpHdr : undefined;
            resourceInputs["tcpBadCsum"] = args ? args.tcpBadCsum : undefined;
            resourceInputs["tcpBadIplen"] = args ? args.tcpBadIplen : undefined;
            resourceInputs["tcpFrgHdr"] = args ? args.tcpFrgHdr : undefined;
            resourceInputs["tcpNullFrg"] = args ? args.tcpNullFrg : undefined;
            resourceInputs["tcpNullScan"] = args ? args.tcpNullScan : undefined;
            resourceInputs["tcpOptErr"] = args ? args.tcpOptErr : undefined;
            resourceInputs["tcpShtHdr"] = args ? args.tcpShtHdr : undefined;
            resourceInputs["tcpSynFin"] = args ? args.tcpSynFin : undefined;
            resourceInputs["tcpSynFrg"] = args ? args.tcpSynFrg : undefined;
            resourceInputs["tcpXmas"] = args ? args.tcpXmas : undefined;
            resourceInputs["tcpXmasScan"] = args ? args.tcpXmasScan : undefined;
            resourceInputs["udpBadCsum"] = args ? args.udpBadCsum : undefined;
            resourceInputs["udpBadLen"] = args ? args.udpBadLen : undefined;
            resourceInputs["udpKerbFrg"] = args ? args.udpKerbFrg : undefined;
            resourceInputs["udpPortLb"] = args ? args.udpPortLb : undefined;
            resourceInputs["udpSrtHdr"] = args ? args.udpSrtHdr : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vxlanErr"] = args ? args.vxlanErr : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc resources.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncState {
    /**
     * Enable automatic packet-capture for Bad IP Flags Drop
     */
    badIpFlg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Fragment Offset Drop
     */
    badIpFrgOffset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Header Len Drop
     */
    badIpHdrlen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Payload Len Drop
     */
    badIpPayloadLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP TTL Drop
     */
    badIpTtl?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Bad Urgent Offset Drop
     */
    badTcpUrgOffset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Checksum Drop
     */
    csum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Empty Fragment Drop
     */
    empFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Micro Fragment Drop
     */
    empMicFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv4 Fragment Drop
     */
    frg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for GRE PPTP Error Drop
     */
    grePptpErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IP-over-IP Tunnel Error Drop
     */
    ipipTnlErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IP-over-IP Tunnel Mismatch Drop
     */
    ipipTnlMsmtch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Authentication Header Drop
     */
    ipv6EhAh?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Destination Header Drop
     */
    ipv6EhDest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 ESP Header Drop
     */
    ipv6EhEsp?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Fragmentation Header Drop
     */
    ipv6EhFrag?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Hop by Hop Header Drop
     */
    ipv6EhHbh?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Malformed Extension Header Drop
     */
    ipv6EhMalformed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Mobility Header Drop
     */
    ipv6EhMobility?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 No Next Header Drop
     */
    ipv6EhNone?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Unknown Extension Header Drop
     */
    ipv6EhOther?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Routing Header Drop
     */
    ipv6EhRouting?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Land Attack Drop
     */
    land?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for No IP Payload drop
     */
    noIpPayload?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for GRE Tunnel Error Drop
     */
    nvgreErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv4 Options Drop
     */
    opt?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Oversize IP Payload Drop
     */
    overIpPayload?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ICMP Ping of Death Drop
     */
    pod?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Runt IP Header Drop
     */
    runtIpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Runt TCP/UDP Header Drop
     */
    runtTcpUdpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Bad Checksum Drop
     */
    tcpBadCsum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Bad IP Length Drop
     */
    tcpBadIplen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Fragmented Header Drop
     */
    tcpFrgHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Null Flags Drop
     */
    tcpNullFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Null Scan Drop
     */
    tcpNullScan?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Option Error Drop
     */
    tcpOptErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Short Header Drop
     */
    tcpShtHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Syn and Fin Drop
     */
    tcpSynFin?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Syn Fragment Drop
     */
    tcpSynFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP XMAS Flags Drop
     */
    tcpXmas?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP XMAS Scan Drop
     */
    tcpXmasScan?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Bad Checksum Drop
     */
    udpBadCsum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Bad Length Drop
     */
    udpBadLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Kerberos Fragment Drop
     */
    udpKerbFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Port Loopback Drop
     */
    udpPortLb?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Short Header Drop
     */
    udpSrtHdr?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for VXLAN Tunnel Error Drop
     */
    vxlanErr?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsInc resource.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeIpAnomalyDropTriggerStatsIncArgs {
    /**
     * Enable automatic packet-capture for Bad IP Flags Drop
     */
    badIpFlg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Fragment Offset Drop
     */
    badIpFrgOffset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Header Len Drop
     */
    badIpHdrlen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Payload Len Drop
     */
    badIpPayloadLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP TTL Drop
     */
    badIpTtl?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Bad Urgent Offset Drop
     */
    badTcpUrgOffset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Bad IP Checksum Drop
     */
    csum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Empty Fragment Drop
     */
    empFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Micro Fragment Drop
     */
    empMicFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv4 Fragment Drop
     */
    frg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for GRE PPTP Error Drop
     */
    grePptpErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IP-over-IP Tunnel Error Drop
     */
    ipipTnlErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IP-over-IP Tunnel Mismatch Drop
     */
    ipipTnlMsmtch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Authentication Header Drop
     */
    ipv6EhAh?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Destination Header Drop
     */
    ipv6EhDest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 ESP Header Drop
     */
    ipv6EhEsp?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Fragmentation Header Drop
     */
    ipv6EhFrag?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Hop by Hop Header Drop
     */
    ipv6EhHbh?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Malformed Extension Header Drop
     */
    ipv6EhMalformed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Mobility Header Drop
     */
    ipv6EhMobility?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 No Next Header Drop
     */
    ipv6EhNone?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Unknown Extension Header Drop
     */
    ipv6EhOther?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv6 Routing Header Drop
     */
    ipv6EhRouting?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Land Attack Drop
     */
    land?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for No IP Payload drop
     */
    noIpPayload?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for GRE Tunnel Error Drop
     */
    nvgreErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for IPv4 Options Drop
     */
    opt?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Oversize IP Payload Drop
     */
    overIpPayload?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ICMP Ping of Death Drop
     */
    pod?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Runt IP Header Drop
     */
    runtIpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Runt TCP/UDP Header Drop
     */
    runtTcpUdpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Bad Checksum Drop
     */
    tcpBadCsum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Bad IP Length Drop
     */
    tcpBadIplen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Fragmented Header Drop
     */
    tcpFrgHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Null Flags Drop
     */
    tcpNullFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Null Scan Drop
     */
    tcpNullScan?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Option Error Drop
     */
    tcpOptErr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Short Header Drop
     */
    tcpShtHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Syn and Fin Drop
     */
    tcpSynFin?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP Syn Fragment Drop
     */
    tcpSynFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP XMAS Flags Drop
     */
    tcpXmas?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP XMAS Scan Drop
     */
    tcpXmasScan?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Bad Checksum Drop
     */
    udpBadCsum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Bad Length Drop
     */
    udpBadLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Kerberos Fragment Drop
     */
    udpKerbFrg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Port Loopback Drop
     */
    udpPortLb?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for UDP Short Header Drop
     */
    udpSrtHdr?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for VXLAN Tunnel Error Drop
     */
    vxlanErr?: pulumi.Input<number>;
}
