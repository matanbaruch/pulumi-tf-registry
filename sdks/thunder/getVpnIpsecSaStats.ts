// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpnIpsecSaStats(args: GetVpnIpsecSaStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnIpsecSaStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getVpnIpsecSaStats:getVpnIpsecSaStats", {
        "id": args.id,
        "samplingEnables": args.samplingEnables,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpnIpsecSaStats.
 */
export interface GetVpnIpsecSaStatsArgs {
    id?: string;
    samplingEnables: inputs.GetVpnIpsecSaStatsSamplingEnable[];
}

/**
 * A collection of values returned by getVpnIpsecSaStats.
 */
export interface GetVpnIpsecSaStatsResult {
    readonly id: string;
    readonly samplingEnables: outputs.GetVpnIpsecSaStatsSamplingEnable[];
}
export function getVpnIpsecSaStatsOutput(args: GetVpnIpsecSaStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpnIpsecSaStatsResult> {
    return pulumi.output(args).apply((a: any) => getVpnIpsecSaStats(a, opts))
}

/**
 * A collection of arguments for invoking getVpnIpsecSaStats.
 */
export interface GetVpnIpsecSaStatsOutputArgs {
    id?: pulumi.Input<string>;
    samplingEnables: pulumi.Input<pulumi.Input<inputs.GetVpnIpsecSaStatsSamplingEnableArgs>[]>;
}
