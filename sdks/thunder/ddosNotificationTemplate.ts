// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DdosNotificationTemplate extends pulumi.CustomResource {
    /**
     * Get an existing DdosNotificationTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosNotificationTemplateState, opts?: pulumi.CustomResourceOptions): DdosNotificationTemplate {
        return new DdosNotificationTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosNotificationTemplate:DdosNotificationTemplate';

    /**
     * Returns true if the given object is an instance of DdosNotificationTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosNotificationTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosNotificationTemplate.__pulumiType;
    }

    public readonly api!: pulumi.Output<outputs.DdosNotificationTemplateApi | undefined>;
    /**
     * Enable debug mode
     */
    public readonly debugMode!: pulumi.Output<number | undefined>;
    /**
     * Disable the notification template (Disable notification temaplate)
     */
    public readonly disable!: pulumi.Output<number | undefined>;
    /**
     * DDOS nofitication template name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Test connectivity to notification receiver
     */
    public readonly testConnectivity!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Dump zone IPs to the payload
     */
    public readonly verbose!: pulumi.Output<number | undefined>;

    /**
     * Create a DdosNotificationTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DdosNotificationTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosNotificationTemplateArgs | DdosNotificationTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosNotificationTemplateState | undefined;
            resourceInputs["api"] = state ? state.api : undefined;
            resourceInputs["debugMode"] = state ? state.debugMode : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["testConnectivity"] = state ? state.testConnectivity : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["verbose"] = state ? state.verbose : undefined;
        } else {
            const args = argsOrState as DdosNotificationTemplateArgs | undefined;
            resourceInputs["api"] = args ? args.api : undefined;
            resourceInputs["debugMode"] = args ? args.debugMode : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["testConnectivity"] = args ? args.testConnectivity : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["verbose"] = args ? args.verbose : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosNotificationTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosNotificationTemplate resources.
 */
export interface DdosNotificationTemplateState {
    api?: pulumi.Input<inputs.DdosNotificationTemplateApi>;
    /**
     * Enable debug mode
     */
    debugMode?: pulumi.Input<number>;
    /**
     * Disable the notification template (Disable notification temaplate)
     */
    disable?: pulumi.Input<number>;
    /**
     * DDOS nofitication template name
     */
    name?: pulumi.Input<string>;
    /**
     * Test connectivity to notification receiver
     */
    testConnectivity?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Dump zone IPs to the payload
     */
    verbose?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DdosNotificationTemplate resource.
 */
export interface DdosNotificationTemplateArgs {
    api?: pulumi.Input<inputs.DdosNotificationTemplateApi>;
    /**
     * Enable debug mode
     */
    debugMode?: pulumi.Input<number>;
    /**
     * Disable the notification template (Disable notification temaplate)
     */
    disable?: pulumi.Input<number>;
    /**
     * DDOS nofitication template name
     */
    name?: pulumi.Input<string>;
    /**
     * Test connectivity to notification receiver
     */
    testConnectivity?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Dump zone IPs to the payload
     */
    verbose?: pulumi.Input<number>;
}
