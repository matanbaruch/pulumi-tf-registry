// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInterfaceTrunkStats(args: GetInterfaceTrunkStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceTrunkStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getInterfaceTrunkStats:getInterfaceTrunkStats", {
        "id": args.id,
        "ifnum": args.ifnum,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfaceTrunkStats.
 */
export interface GetInterfaceTrunkStatsArgs {
    id?: string;
    ifnum: number;
    stats?: inputs.GetInterfaceTrunkStatsStats;
}

/**
 * A collection of values returned by getInterfaceTrunkStats.
 */
export interface GetInterfaceTrunkStatsResult {
    readonly id: string;
    readonly ifnum: number;
    readonly stats?: outputs.GetInterfaceTrunkStatsStats;
}
export function getInterfaceTrunkStatsOutput(args: GetInterfaceTrunkStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceTrunkStatsResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceTrunkStats(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceTrunkStats.
 */
export interface GetInterfaceTrunkStatsOutputArgs {
    id?: pulumi.Input<string>;
    ifnum: pulumi.Input<number>;
    stats?: pulumi.Input<inputs.GetInterfaceTrunkStatsStatsArgs>;
}
