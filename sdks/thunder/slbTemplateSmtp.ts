// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbTemplateSmtp extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplateSmtp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplateSmtpState, opts?: pulumi.CustomResourceOptions): SlbTemplateSmtp {
        return new SlbTemplateSmtp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplateSmtp:SlbTemplateSmtp';

    /**
     * Returns true if the given object is an instance of SlbTemplateSmtp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplateSmtp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplateSmtp.__pulumiType;
    }

    public readonly clientDomainSwitchings!: pulumi.Output<outputs.SlbTemplateSmtpClientDomainSwitching[] | undefined>;
    /**
     * 'optional': STARTTLS is optional requirement; 'enforced': Must issue STARTTLS command before mail transaction;
     */
    public readonly clientStarttlsType!: pulumi.Output<string | undefined>;
    public readonly commandDisables!: pulumi.Output<outputs.SlbTemplateSmtpCommandDisable[] | undefined>;
    /**
     * Would transfer error code(554) to client, when getting it from connection establishing with real-server
     */
    public readonly errorCodeToClient!: pulumi.Output<number | undefined>;
    /**
     * Change the LF to CRLF for smtp end of line
     */
    public readonly lfToCrlf!: pulumi.Output<number | undefined>;
    /**
     * SMTP Template Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Config the domain of the email servers (Server's domain, default is "mail-server-domain")
     */
    public readonly serverDomain!: pulumi.Output<string | undefined>;
    /**
     * 'optional': STARTTLS is optional requirement; 'enforced': Must issue STARTTLS command before mail transaction;
     */
    public readonly serverStarttlsType!: pulumi.Output<string | undefined>;
    /**
     * Set SMTP service ready message (SMTP service ready message, default is "ESMTP mail service ready")
     */
    public readonly serviceReadyMsg!: pulumi.Output<string | undefined>;
    public readonly template!: pulumi.Output<outputs.SlbTemplateSmtpTemplate | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SlbTemplateSmtp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplateSmtpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplateSmtpArgs | SlbTemplateSmtpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplateSmtpState | undefined;
            resourceInputs["clientDomainSwitchings"] = state ? state.clientDomainSwitchings : undefined;
            resourceInputs["clientStarttlsType"] = state ? state.clientStarttlsType : undefined;
            resourceInputs["commandDisables"] = state ? state.commandDisables : undefined;
            resourceInputs["errorCodeToClient"] = state ? state.errorCodeToClient : undefined;
            resourceInputs["lfToCrlf"] = state ? state.lfToCrlf : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverDomain"] = state ? state.serverDomain : undefined;
            resourceInputs["serverStarttlsType"] = state ? state.serverStarttlsType : undefined;
            resourceInputs["serviceReadyMsg"] = state ? state.serviceReadyMsg : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SlbTemplateSmtpArgs | undefined;
            resourceInputs["clientDomainSwitchings"] = args ? args.clientDomainSwitchings : undefined;
            resourceInputs["clientStarttlsType"] = args ? args.clientStarttlsType : undefined;
            resourceInputs["commandDisables"] = args ? args.commandDisables : undefined;
            resourceInputs["errorCodeToClient"] = args ? args.errorCodeToClient : undefined;
            resourceInputs["lfToCrlf"] = args ? args.lfToCrlf : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverDomain"] = args ? args.serverDomain : undefined;
            resourceInputs["serverStarttlsType"] = args ? args.serverStarttlsType : undefined;
            resourceInputs["serviceReadyMsg"] = args ? args.serviceReadyMsg : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplateSmtp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplateSmtp resources.
 */
export interface SlbTemplateSmtpState {
    clientDomainSwitchings?: pulumi.Input<pulumi.Input<inputs.SlbTemplateSmtpClientDomainSwitching>[]>;
    /**
     * 'optional': STARTTLS is optional requirement; 'enforced': Must issue STARTTLS command before mail transaction;
     */
    clientStarttlsType?: pulumi.Input<string>;
    commandDisables?: pulumi.Input<pulumi.Input<inputs.SlbTemplateSmtpCommandDisable>[]>;
    /**
     * Would transfer error code(554) to client, when getting it from connection establishing with real-server
     */
    errorCodeToClient?: pulumi.Input<number>;
    /**
     * Change the LF to CRLF for smtp end of line
     */
    lfToCrlf?: pulumi.Input<number>;
    /**
     * SMTP Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Config the domain of the email servers (Server's domain, default is "mail-server-domain")
     */
    serverDomain?: pulumi.Input<string>;
    /**
     * 'optional': STARTTLS is optional requirement; 'enforced': Must issue STARTTLS command before mail transaction;
     */
    serverStarttlsType?: pulumi.Input<string>;
    /**
     * Set SMTP service ready message (SMTP service ready message, default is "ESMTP mail service ready")
     */
    serviceReadyMsg?: pulumi.Input<string>;
    template?: pulumi.Input<inputs.SlbTemplateSmtpTemplate>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbTemplateSmtp resource.
 */
export interface SlbTemplateSmtpArgs {
    clientDomainSwitchings?: pulumi.Input<pulumi.Input<inputs.SlbTemplateSmtpClientDomainSwitching>[]>;
    /**
     * 'optional': STARTTLS is optional requirement; 'enforced': Must issue STARTTLS command before mail transaction;
     */
    clientStarttlsType?: pulumi.Input<string>;
    commandDisables?: pulumi.Input<pulumi.Input<inputs.SlbTemplateSmtpCommandDisable>[]>;
    /**
     * Would transfer error code(554) to client, when getting it from connection establishing with real-server
     */
    errorCodeToClient?: pulumi.Input<number>;
    /**
     * Change the LF to CRLF for smtp end of line
     */
    lfToCrlf?: pulumi.Input<number>;
    /**
     * SMTP Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Config the domain of the email servers (Server's domain, default is "mail-server-domain")
     */
    serverDomain?: pulumi.Input<string>;
    /**
     * 'optional': STARTTLS is optional requirement; 'enforced': Must issue STARTTLS command before mail transaction;
     */
    serverStarttlsType?: pulumi.Input<string>;
    /**
     * Set SMTP service ready message (SMTP service ready message, default is "ESMTP mail service ready")
     */
    serviceReadyMsg?: pulumi.Input<string>;
    template?: pulumi.Input<inputs.SlbTemplateSmtpTemplate>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
