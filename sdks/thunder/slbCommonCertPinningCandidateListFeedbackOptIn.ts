// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SlbCommonCertPinningCandidateListFeedbackOptIn extends pulumi.CustomResource {
    /**
     * Get an existing SlbCommonCertPinningCandidateListFeedbackOptIn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbCommonCertPinningCandidateListFeedbackOptInState, opts?: pulumi.CustomResourceOptions): SlbCommonCertPinningCandidateListFeedbackOptIn {
        return new SlbCommonCertPinningCandidateListFeedbackOptIn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbCommonCertPinningCandidateListFeedbackOptIn:SlbCommonCertPinningCandidateListFeedbackOptIn';

    /**
     * Returns true if the given object is an instance of SlbCommonCertPinningCandidateListFeedbackOptIn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbCommonCertPinningCandidateListFeedbackOptIn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbCommonCertPinningCandidateListFeedbackOptIn.__pulumiType;
    }

    /**
     * Every day
     */
    public readonly daily!: pulumi.Output<number | undefined>;
    /**
     * Time of day to update (hh:mm) in 24 hour local time
     */
    public readonly dayTime!: pulumi.Output<string | undefined>;
    /**
     * Enable the feedback function
     */
    public readonly enable!: pulumi.Output<number | undefined>;
    /**
     * schedule the uploading time, default is daily 00:00
     */
    public readonly schedule!: pulumi.Output<number | undefined>;
    /**
     * Use management port to connect
     */
    public readonly useMgmtPort!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * 'Monday': Monday; 'Tuesday': Tuesday; 'Wednesday': Wednesday; 'Thursday': Thursday; 'Friday': Friday; 'Saturday':
     * Saturday; 'Sunday': Sunday;
     */
    public readonly weekDay!: pulumi.Output<string | undefined>;
    /**
     * Time of day to update (hh:mm) in 24 hour local time
     */
    public readonly weekTime!: pulumi.Output<string | undefined>;
    /**
     * Every week
     */
    public readonly weekly!: pulumi.Output<number | undefined>;

    /**
     * Create a SlbCommonCertPinningCandidateListFeedbackOptIn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbCommonCertPinningCandidateListFeedbackOptInArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbCommonCertPinningCandidateListFeedbackOptInArgs | SlbCommonCertPinningCandidateListFeedbackOptInState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbCommonCertPinningCandidateListFeedbackOptInState | undefined;
            resourceInputs["daily"] = state ? state.daily : undefined;
            resourceInputs["dayTime"] = state ? state.dayTime : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["useMgmtPort"] = state ? state.useMgmtPort : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["weekDay"] = state ? state.weekDay : undefined;
            resourceInputs["weekTime"] = state ? state.weekTime : undefined;
            resourceInputs["weekly"] = state ? state.weekly : undefined;
        } else {
            const args = argsOrState as SlbCommonCertPinningCandidateListFeedbackOptInArgs | undefined;
            resourceInputs["daily"] = args ? args.daily : undefined;
            resourceInputs["dayTime"] = args ? args.dayTime : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["useMgmtPort"] = args ? args.useMgmtPort : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["weekDay"] = args ? args.weekDay : undefined;
            resourceInputs["weekTime"] = args ? args.weekTime : undefined;
            resourceInputs["weekly"] = args ? args.weekly : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbCommonCertPinningCandidateListFeedbackOptIn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbCommonCertPinningCandidateListFeedbackOptIn resources.
 */
export interface SlbCommonCertPinningCandidateListFeedbackOptInState {
    /**
     * Every day
     */
    daily?: pulumi.Input<number>;
    /**
     * Time of day to update (hh:mm) in 24 hour local time
     */
    dayTime?: pulumi.Input<string>;
    /**
     * Enable the feedback function
     */
    enable?: pulumi.Input<number>;
    /**
     * schedule the uploading time, default is daily 00:00
     */
    schedule?: pulumi.Input<number>;
    /**
     * Use management port to connect
     */
    useMgmtPort?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 'Monday': Monday; 'Tuesday': Tuesday; 'Wednesday': Wednesday; 'Thursday': Thursday; 'Friday': Friday; 'Saturday':
     * Saturday; 'Sunday': Sunday;
     */
    weekDay?: pulumi.Input<string>;
    /**
     * Time of day to update (hh:mm) in 24 hour local time
     */
    weekTime?: pulumi.Input<string>;
    /**
     * Every week
     */
    weekly?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SlbCommonCertPinningCandidateListFeedbackOptIn resource.
 */
export interface SlbCommonCertPinningCandidateListFeedbackOptInArgs {
    /**
     * Every day
     */
    daily?: pulumi.Input<number>;
    /**
     * Time of day to update (hh:mm) in 24 hour local time
     */
    dayTime?: pulumi.Input<string>;
    /**
     * Enable the feedback function
     */
    enable?: pulumi.Input<number>;
    /**
     * schedule the uploading time, default is daily 00:00
     */
    schedule?: pulumi.Input<number>;
    /**
     * Use management port to connect
     */
    useMgmtPort?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 'Monday': Monday; 'Tuesday': Tuesday; 'Wednesday': Wednesday; 'Thursday': Thursday; 'Friday': Friday; 'Saturday':
     * Saturday; 'Sunday': Sunday;
     */
    weekDay?: pulumi.Input<string>;
    /**
     * Time of day to update (hh:mm) in 24 hour local time
     */
    weekTime?: pulumi.Input<string>;
    /**
     * Every week
     */
    weekly?: pulumi.Input<number>;
}
