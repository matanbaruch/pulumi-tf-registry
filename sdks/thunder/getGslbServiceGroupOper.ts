// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbServiceGroupOper(args: GetGslbServiceGroupOperArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbServiceGroupOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbServiceGroupOper:getGslbServiceGroupOper", {
        "id": args.id,
        "oper": args.oper,
        "serviceGroupName": args.serviceGroupName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbServiceGroupOper.
 */
export interface GetGslbServiceGroupOperArgs {
    id?: string;
    oper?: inputs.GetGslbServiceGroupOperOper;
    serviceGroupName: string;
}

/**
 * A collection of values returned by getGslbServiceGroupOper.
 */
export interface GetGslbServiceGroupOperResult {
    readonly id: string;
    readonly oper?: outputs.GetGslbServiceGroupOperOper;
    readonly serviceGroupName: string;
}
export function getGslbServiceGroupOperOutput(args: GetGslbServiceGroupOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbServiceGroupOperResult> {
    return pulumi.output(args).apply((a: any) => getGslbServiceGroupOper(a, opts))
}

/**
 * A collection of arguments for invoking getGslbServiceGroupOper.
 */
export interface GetGslbServiceGroupOperOutputArgs {
    id?: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetGslbServiceGroupOperOperArgs>;
    serviceGroupName: pulumi.Input<string>;
}
