// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AcosCloudIntegrationEcosystemOracle extends pulumi.CustomResource {
    /**
     * Get an existing AcosCloudIntegrationEcosystemOracle resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AcosCloudIntegrationEcosystemOracleState, opts?: pulumi.CustomResourceOptions): AcosCloudIntegrationEcosystemOracle {
        return new AcosCloudIntegrationEcosystemOracle(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/acosCloudIntegrationEcosystemOracle:AcosCloudIntegrationEcosystemOracle';

    /**
     * Returns true if the given object is an instance of AcosCloudIntegrationEcosystemOracle.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AcosCloudIntegrationEcosystemOracle {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AcosCloudIntegrationEcosystemOracle.__pulumiType;
    }

    /**
     * 'enable': Enable Configuration; 'disable': Disable Configuration;
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * OCI compartment id
     */
    public readonly compartmentId!: pulumi.Output<string | undefined>;
    public readonly fingerprint!: pulumi.Output<string | undefined>;
    /**
     * '5': 5 seconds; '10': 10 seconds; '15': 15 seconds; '20': 20 seconds;
     */
    public readonly healthCheckInterval!: pulumi.Output<string | undefined>;
    /**
     * Configure the host name for bootstrap server(e.g www.a10networks.com)
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * Configure the bootstrap server's IPv4 address (the host IPv4 address)
     */
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    /**
     * Configure the bootstrap server's IPv6 address (the host IPv6 address)
     */
    public readonly ipv6Address!: pulumi.Output<string | undefined>;
    /**
     * Configure the http port to use (port 8500)
     */
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly privateKeyPath!: pulumi.Output<string | undefined>;
    public readonly serviceLabels!: pulumi.Output<outputs.AcosCloudIntegrationEcosystemOracleServiceLabel[] | undefined>;
    /**
     * OCI tenancy id
     */
    public readonly tenancyId!: pulumi.Output<string | undefined>;
    /**
     * OCI user id
     */
    public readonly userId!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a AcosCloudIntegrationEcosystemOracle resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AcosCloudIntegrationEcosystemOracleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AcosCloudIntegrationEcosystemOracleArgs | AcosCloudIntegrationEcosystemOracleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AcosCloudIntegrationEcosystemOracleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["healthCheckInterval"] = state ? state.healthCheckInterval : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["privateKeyPath"] = state ? state.privateKeyPath : undefined;
            resourceInputs["serviceLabels"] = state ? state.serviceLabels : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AcosCloudIntegrationEcosystemOracleArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["fingerprint"] = args ? args.fingerprint : undefined;
            resourceInputs["healthCheckInterval"] = args ? args.healthCheckInterval : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["privateKeyPath"] = args ? args.privateKeyPath : undefined;
            resourceInputs["serviceLabels"] = args ? args.serviceLabels : undefined;
            resourceInputs["tenancyId"] = args ? args.tenancyId : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AcosCloudIntegrationEcosystemOracle.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AcosCloudIntegrationEcosystemOracle resources.
 */
export interface AcosCloudIntegrationEcosystemOracleState {
    /**
     * 'enable': Enable Configuration; 'disable': Disable Configuration;
     */
    action?: pulumi.Input<string>;
    /**
     * OCI compartment id
     */
    compartmentId?: pulumi.Input<string>;
    fingerprint?: pulumi.Input<string>;
    /**
     * '5': 5 seconds; '10': 10 seconds; '15': 15 seconds; '20': 20 seconds;
     */
    healthCheckInterval?: pulumi.Input<string>;
    /**
     * Configure the host name for bootstrap server(e.g www.a10networks.com)
     */
    hostName?: pulumi.Input<string>;
    /**
     * Configure the bootstrap server's IPv4 address (the host IPv4 address)
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Configure the bootstrap server's IPv6 address (the host IPv6 address)
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Configure the http port to use (port 8500)
     */
    port?: pulumi.Input<number>;
    privateKeyPath?: pulumi.Input<string>;
    serviceLabels?: pulumi.Input<pulumi.Input<inputs.AcosCloudIntegrationEcosystemOracleServiceLabel>[]>;
    /**
     * OCI tenancy id
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * OCI user id
     */
    userId?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AcosCloudIntegrationEcosystemOracle resource.
 */
export interface AcosCloudIntegrationEcosystemOracleArgs {
    /**
     * 'enable': Enable Configuration; 'disable': Disable Configuration;
     */
    action?: pulumi.Input<string>;
    /**
     * OCI compartment id
     */
    compartmentId?: pulumi.Input<string>;
    fingerprint?: pulumi.Input<string>;
    /**
     * '5': 5 seconds; '10': 10 seconds; '15': 15 seconds; '20': 20 seconds;
     */
    healthCheckInterval?: pulumi.Input<string>;
    /**
     * Configure the host name for bootstrap server(e.g www.a10networks.com)
     */
    hostName?: pulumi.Input<string>;
    /**
     * Configure the bootstrap server's IPv4 address (the host IPv4 address)
     */
    ipv4Address?: pulumi.Input<string>;
    /**
     * Configure the bootstrap server's IPv6 address (the host IPv6 address)
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Configure the http port to use (port 8500)
     */
    port?: pulumi.Input<number>;
    privateKeyPath?: pulumi.Input<string>;
    serviceLabels?: pulumi.Input<pulumi.Input<inputs.AcosCloudIntegrationEcosystemOracleServiceLabel>[]>;
    /**
     * OCI tenancy id
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * OCI user id
     */
    userId?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
