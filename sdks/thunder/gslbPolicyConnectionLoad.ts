// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GslbPolicyConnectionLoad extends pulumi.CustomResource {
    /**
     * Get an existing GslbPolicyConnectionLoad resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbPolicyConnectionLoadState, opts?: pulumi.CustomResourceOptions): GslbPolicyConnectionLoad {
        return new GslbPolicyConnectionLoad(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/gslbPolicyConnectionLoad:GslbPolicyConnectionLoad';

    /**
     * Returns true if the given object is an instance of GslbPolicyConnectionLoad.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbPolicyConnectionLoad {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbPolicyConnectionLoad.__pulumiType;
    }

    /**
     * Enable connection-load
     */
    public readonly connectionLoadEnable!: pulumi.Output<number | undefined>;
    /**
     * Break when exceed limit
     */
    public readonly connectionLoadFailBreak!: pulumi.Output<number | undefined>;
    /**
     * Interval between two samples, Unit: second (Interval value,default is 5)
     */
    public readonly connectionLoadInterval!: pulumi.Output<number | undefined>;
    /**
     * The value of the connection-load limit, default is unlimited
     */
    public readonly connectionLoadLimit!: pulumi.Output<number | undefined>;
    /**
     * Specify samples for connection-load (Number of samples used to calculate the connection load, default is 5)
     */
    public readonly connectionLoadSamples!: pulumi.Output<number | undefined>;
    /**
     * Limit of maxinum connection load, default is unlimited
     */
    public readonly limit!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a GslbPolicyConnectionLoad resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GslbPolicyConnectionLoadArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbPolicyConnectionLoadArgs | GslbPolicyConnectionLoadState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbPolicyConnectionLoadState | undefined;
            resourceInputs["connectionLoadEnable"] = state ? state.connectionLoadEnable : undefined;
            resourceInputs["connectionLoadFailBreak"] = state ? state.connectionLoadFailBreak : undefined;
            resourceInputs["connectionLoadInterval"] = state ? state.connectionLoadInterval : undefined;
            resourceInputs["connectionLoadLimit"] = state ? state.connectionLoadLimit : undefined;
            resourceInputs["connectionLoadSamples"] = state ? state.connectionLoadSamples : undefined;
            resourceInputs["limit"] = state ? state.limit : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as GslbPolicyConnectionLoadArgs | undefined;
            resourceInputs["connectionLoadEnable"] = args ? args.connectionLoadEnable : undefined;
            resourceInputs["connectionLoadFailBreak"] = args ? args.connectionLoadFailBreak : undefined;
            resourceInputs["connectionLoadInterval"] = args ? args.connectionLoadInterval : undefined;
            resourceInputs["connectionLoadLimit"] = args ? args.connectionLoadLimit : undefined;
            resourceInputs["connectionLoadSamples"] = args ? args.connectionLoadSamples : undefined;
            resourceInputs["limit"] = args ? args.limit : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbPolicyConnectionLoad.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbPolicyConnectionLoad resources.
 */
export interface GslbPolicyConnectionLoadState {
    /**
     * Enable connection-load
     */
    connectionLoadEnable?: pulumi.Input<number>;
    /**
     * Break when exceed limit
     */
    connectionLoadFailBreak?: pulumi.Input<number>;
    /**
     * Interval between two samples, Unit: second (Interval value,default is 5)
     */
    connectionLoadInterval?: pulumi.Input<number>;
    /**
     * The value of the connection-load limit, default is unlimited
     */
    connectionLoadLimit?: pulumi.Input<number>;
    /**
     * Specify samples for connection-load (Number of samples used to calculate the connection load, default is 5)
     */
    connectionLoadSamples?: pulumi.Input<number>;
    /**
     * Limit of maxinum connection load, default is unlimited
     */
    limit?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GslbPolicyConnectionLoad resource.
 */
export interface GslbPolicyConnectionLoadArgs {
    /**
     * Enable connection-load
     */
    connectionLoadEnable?: pulumi.Input<number>;
    /**
     * Break when exceed limit
     */
    connectionLoadFailBreak?: pulumi.Input<number>;
    /**
     * Interval between two samples, Unit: second (Interval value,default is 5)
     */
    connectionLoadInterval?: pulumi.Input<number>;
    /**
     * The value of the connection-load limit, default is unlimited
     */
    connectionLoadLimit?: pulumi.Input<number>;
    /**
     * Specify samples for connection-load (Number of samples used to calculate the connection load, default is 5)
     */
    connectionLoadSamples?: pulumi.Input<number>;
    /**
     * Limit of maxinum connection load, default is unlimited
     */
    limit?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
