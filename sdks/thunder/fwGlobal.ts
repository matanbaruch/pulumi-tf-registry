// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FwGlobal extends pulumi.CustomResource {
    /**
     * Get an existing FwGlobal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FwGlobalState, opts?: pulumi.CustomResourceOptions): FwGlobal {
        return new FwGlobal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/fwGlobal:FwGlobal';

    /**
     * Returns true if the given object is an instance of FwGlobal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FwGlobal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FwGlobal.__pulumiType;
    }

    /**
     * 'honor-rule-set': Honors firewall rule-sets (Default); 'override-rule-set': Override firewall rule-sets;
     */
    public readonly algProcessing!: pulumi.Output<string | undefined>;
    /**
     * Allow TCP non-syn packets to trigger session creation
     */
    public readonly allowNonSynSessionCreate!: pulumi.Output<number | undefined>;
    public readonly disableAppLists!: pulumi.Output<outputs.FwGlobalDisableAppList[] | undefined>;
    /**
     * Disable exporting application protocol/category statistics to Harmony Controller
     */
    public readonly disableApplicationMetrics!: pulumi.Output<number | undefined>;
    /**
     * disable create sessions for non TCP/UDP/ICMP
     */
    public readonly disableIpFwSessions!: pulumi.Output<number | undefined>;
    /**
     * disable logs with undetermined rules
     */
    public readonly disableUndeterminedRuleLogs!: pulumi.Output<number | undefined>;
    /**
     * 'ipv4': support dsr for ipv4 traffic; 'ipv6': support dsr for ipv6 traffic; 'all': support dsr for both ipv4 and ipv6;
     */
    public readonly dsrModeSupport!: pulumi.Output<string | undefined>;
    /**
     * 'disable': Disable extended matching;
     */
    public readonly extendedMatching!: pulumi.Output<string | undefined>;
    /**
     * 'enable': enable; 'disable': disable;
     */
    public readonly inboundRefresh!: pulumi.Output<string | undefined>;
    /**
     * 'enable': enable; 'disable': disable;
     */
    public readonly inboundRefreshFullCone!: pulumi.Output<string | undefined>;
    /**
     * STUN timeout (default: 2 minutes)
     */
    public readonly listenOnPortTimeout!: pulumi.Output<number | undefined>;
    /**
     * 'enable': Enable; 'disable': Disable;
     */
    public readonly natipDdosProtection!: pulumi.Output<string | undefined>;
    /**
     * 'forward': Forward; 'next-service-mode': Service to be applied chosen based on configuration;
     */
    public readonly permitDefaultAction!: pulumi.Output<string | undefined>;
    /**
     * Use the user's source MAC for the next hop rather than the routing table (default: off)
     */
    public readonly respondToUserMac!: pulumi.Output<number | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.FwGlobalSamplingEnable[] | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a FwGlobal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FwGlobalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FwGlobalArgs | FwGlobalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FwGlobalState | undefined;
            resourceInputs["algProcessing"] = state ? state.algProcessing : undefined;
            resourceInputs["allowNonSynSessionCreate"] = state ? state.allowNonSynSessionCreate : undefined;
            resourceInputs["disableAppLists"] = state ? state.disableAppLists : undefined;
            resourceInputs["disableApplicationMetrics"] = state ? state.disableApplicationMetrics : undefined;
            resourceInputs["disableIpFwSessions"] = state ? state.disableIpFwSessions : undefined;
            resourceInputs["disableUndeterminedRuleLogs"] = state ? state.disableUndeterminedRuleLogs : undefined;
            resourceInputs["dsrModeSupport"] = state ? state.dsrModeSupport : undefined;
            resourceInputs["extendedMatching"] = state ? state.extendedMatching : undefined;
            resourceInputs["inboundRefresh"] = state ? state.inboundRefresh : undefined;
            resourceInputs["inboundRefreshFullCone"] = state ? state.inboundRefreshFullCone : undefined;
            resourceInputs["listenOnPortTimeout"] = state ? state.listenOnPortTimeout : undefined;
            resourceInputs["natipDdosProtection"] = state ? state.natipDdosProtection : undefined;
            resourceInputs["permitDefaultAction"] = state ? state.permitDefaultAction : undefined;
            resourceInputs["respondToUserMac"] = state ? state.respondToUserMac : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as FwGlobalArgs | undefined;
            resourceInputs["algProcessing"] = args ? args.algProcessing : undefined;
            resourceInputs["allowNonSynSessionCreate"] = args ? args.allowNonSynSessionCreate : undefined;
            resourceInputs["disableAppLists"] = args ? args.disableAppLists : undefined;
            resourceInputs["disableApplicationMetrics"] = args ? args.disableApplicationMetrics : undefined;
            resourceInputs["disableIpFwSessions"] = args ? args.disableIpFwSessions : undefined;
            resourceInputs["disableUndeterminedRuleLogs"] = args ? args.disableUndeterminedRuleLogs : undefined;
            resourceInputs["dsrModeSupport"] = args ? args.dsrModeSupport : undefined;
            resourceInputs["extendedMatching"] = args ? args.extendedMatching : undefined;
            resourceInputs["inboundRefresh"] = args ? args.inboundRefresh : undefined;
            resourceInputs["inboundRefreshFullCone"] = args ? args.inboundRefreshFullCone : undefined;
            resourceInputs["listenOnPortTimeout"] = args ? args.listenOnPortTimeout : undefined;
            resourceInputs["natipDdosProtection"] = args ? args.natipDdosProtection : undefined;
            resourceInputs["permitDefaultAction"] = args ? args.permitDefaultAction : undefined;
            resourceInputs["respondToUserMac"] = args ? args.respondToUserMac : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FwGlobal.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FwGlobal resources.
 */
export interface FwGlobalState {
    /**
     * 'honor-rule-set': Honors firewall rule-sets (Default); 'override-rule-set': Override firewall rule-sets;
     */
    algProcessing?: pulumi.Input<string>;
    /**
     * Allow TCP non-syn packets to trigger session creation
     */
    allowNonSynSessionCreate?: pulumi.Input<number>;
    disableAppLists?: pulumi.Input<pulumi.Input<inputs.FwGlobalDisableAppList>[]>;
    /**
     * Disable exporting application protocol/category statistics to Harmony Controller
     */
    disableApplicationMetrics?: pulumi.Input<number>;
    /**
     * disable create sessions for non TCP/UDP/ICMP
     */
    disableIpFwSessions?: pulumi.Input<number>;
    /**
     * disable logs with undetermined rules
     */
    disableUndeterminedRuleLogs?: pulumi.Input<number>;
    /**
     * 'ipv4': support dsr for ipv4 traffic; 'ipv6': support dsr for ipv6 traffic; 'all': support dsr for both ipv4 and ipv6;
     */
    dsrModeSupport?: pulumi.Input<string>;
    /**
     * 'disable': Disable extended matching;
     */
    extendedMatching?: pulumi.Input<string>;
    /**
     * 'enable': enable; 'disable': disable;
     */
    inboundRefresh?: pulumi.Input<string>;
    /**
     * 'enable': enable; 'disable': disable;
     */
    inboundRefreshFullCone?: pulumi.Input<string>;
    /**
     * STUN timeout (default: 2 minutes)
     */
    listenOnPortTimeout?: pulumi.Input<number>;
    /**
     * 'enable': Enable; 'disable': Disable;
     */
    natipDdosProtection?: pulumi.Input<string>;
    /**
     * 'forward': Forward; 'next-service-mode': Service to be applied chosen based on configuration;
     */
    permitDefaultAction?: pulumi.Input<string>;
    /**
     * Use the user's source MAC for the next hop rather than the routing table (default: off)
     */
    respondToUserMac?: pulumi.Input<number>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.FwGlobalSamplingEnable>[]>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FwGlobal resource.
 */
export interface FwGlobalArgs {
    /**
     * 'honor-rule-set': Honors firewall rule-sets (Default); 'override-rule-set': Override firewall rule-sets;
     */
    algProcessing?: pulumi.Input<string>;
    /**
     * Allow TCP non-syn packets to trigger session creation
     */
    allowNonSynSessionCreate?: pulumi.Input<number>;
    disableAppLists?: pulumi.Input<pulumi.Input<inputs.FwGlobalDisableAppList>[]>;
    /**
     * Disable exporting application protocol/category statistics to Harmony Controller
     */
    disableApplicationMetrics?: pulumi.Input<number>;
    /**
     * disable create sessions for non TCP/UDP/ICMP
     */
    disableIpFwSessions?: pulumi.Input<number>;
    /**
     * disable logs with undetermined rules
     */
    disableUndeterminedRuleLogs?: pulumi.Input<number>;
    /**
     * 'ipv4': support dsr for ipv4 traffic; 'ipv6': support dsr for ipv6 traffic; 'all': support dsr for both ipv4 and ipv6;
     */
    dsrModeSupport?: pulumi.Input<string>;
    /**
     * 'disable': Disable extended matching;
     */
    extendedMatching?: pulumi.Input<string>;
    /**
     * 'enable': enable; 'disable': disable;
     */
    inboundRefresh?: pulumi.Input<string>;
    /**
     * 'enable': enable; 'disable': disable;
     */
    inboundRefreshFullCone?: pulumi.Input<string>;
    /**
     * STUN timeout (default: 2 minutes)
     */
    listenOnPortTimeout?: pulumi.Input<number>;
    /**
     * 'enable': Enable; 'disable': Disable;
     */
    natipDdosProtection?: pulumi.Input<string>;
    /**
     * 'forward': Forward; 'next-service-mode': Service to be applied chosen based on configuration;
     */
    permitDefaultAction?: pulumi.Input<string>;
    /**
     * Use the user's source MAC for the next hop rather than the routing table (default: off)
     */
    respondToUserMac?: pulumi.Input<number>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.FwGlobalSamplingEnable>[]>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
