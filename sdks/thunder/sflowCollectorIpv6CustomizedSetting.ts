// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SflowCollectorIpv6CustomizedSetting extends pulumi.CustomResource {
    /**
     * Get an existing SflowCollectorIpv6CustomizedSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SflowCollectorIpv6CustomizedSettingState, opts?: pulumi.CustomResourceOptions): SflowCollectorIpv6CustomizedSetting {
        return new SflowCollectorIpv6CustomizedSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/sflowCollectorIpv6CustomizedSetting:SflowCollectorIpv6CustomizedSetting';

    /**
     * Returns true if the given object is an instance of SflowCollectorIpv6CustomizedSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SflowCollectorIpv6CustomizedSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SflowCollectorIpv6CustomizedSetting.__pulumiType;
    }

    /**
     * Enable counters for ACOS control blocks
     */
    public readonly a10ProprietaryPolling!: pulumi.Output<number | undefined>;
    /**
     * Addr
     */
    public readonly addr!: pulumi.Output<string>;
    /**
     * Enable counter polling
     */
    public readonly counterPolling!: pulumi.Output<number | undefined>;
    /**
     * Enable event notification
     */
    public readonly eventNotification!: pulumi.Output<number | undefined>;
    /**
     * 'export': Customizes export settings for collector;
     */
    public readonly exportEnable!: pulumi.Output<string>;
    /**
     * Enable packet sampling
     */
    public readonly packetSampling!: pulumi.Output<number | undefined>;
    /**
     * Port
     */
    public readonly port!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SflowCollectorIpv6CustomizedSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SflowCollectorIpv6CustomizedSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SflowCollectorIpv6CustomizedSettingArgs | SflowCollectorIpv6CustomizedSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SflowCollectorIpv6CustomizedSettingState | undefined;
            resourceInputs["a10ProprietaryPolling"] = state ? state.a10ProprietaryPolling : undefined;
            resourceInputs["addr"] = state ? state.addr : undefined;
            resourceInputs["counterPolling"] = state ? state.counterPolling : undefined;
            resourceInputs["eventNotification"] = state ? state.eventNotification : undefined;
            resourceInputs["exportEnable"] = state ? state.exportEnable : undefined;
            resourceInputs["packetSampling"] = state ? state.packetSampling : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SflowCollectorIpv6CustomizedSettingArgs | undefined;
            if ((!args || args.addr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addr'");
            }
            if ((!args || args.exportEnable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'exportEnable'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            resourceInputs["a10ProprietaryPolling"] = args ? args.a10ProprietaryPolling : undefined;
            resourceInputs["addr"] = args ? args.addr : undefined;
            resourceInputs["counterPolling"] = args ? args.counterPolling : undefined;
            resourceInputs["eventNotification"] = args ? args.eventNotification : undefined;
            resourceInputs["exportEnable"] = args ? args.exportEnable : undefined;
            resourceInputs["packetSampling"] = args ? args.packetSampling : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SflowCollectorIpv6CustomizedSetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SflowCollectorIpv6CustomizedSetting resources.
 */
export interface SflowCollectorIpv6CustomizedSettingState {
    /**
     * Enable counters for ACOS control blocks
     */
    a10ProprietaryPolling?: pulumi.Input<number>;
    /**
     * Addr
     */
    addr?: pulumi.Input<string>;
    /**
     * Enable counter polling
     */
    counterPolling?: pulumi.Input<number>;
    /**
     * Enable event notification
     */
    eventNotification?: pulumi.Input<number>;
    /**
     * 'export': Customizes export settings for collector;
     */
    exportEnable?: pulumi.Input<string>;
    /**
     * Enable packet sampling
     */
    packetSampling?: pulumi.Input<number>;
    /**
     * Port
     */
    port?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SflowCollectorIpv6CustomizedSetting resource.
 */
export interface SflowCollectorIpv6CustomizedSettingArgs {
    /**
     * Enable counters for ACOS control blocks
     */
    a10ProprietaryPolling?: pulumi.Input<number>;
    /**
     * Addr
     */
    addr: pulumi.Input<string>;
    /**
     * Enable counter polling
     */
    counterPolling?: pulumi.Input<number>;
    /**
     * Enable event notification
     */
    eventNotification?: pulumi.Input<number>;
    /**
     * 'export': Customizes export settings for collector;
     */
    exportEnable: pulumi.Input<string>;
    /**
     * Enable packet sampling
     */
    packetSampling?: pulumi.Input<number>;
    /**
     * Port
     */
    port: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
