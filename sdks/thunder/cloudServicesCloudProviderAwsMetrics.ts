// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudServicesCloudProviderAwsMetrics extends pulumi.CustomResource {
    /**
     * Get an existing CloudServicesCloudProviderAwsMetrics resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudServicesCloudProviderAwsMetricsState, opts?: pulumi.CustomResourceOptions): CloudServicesCloudProviderAwsMetrics {
        return new CloudServicesCloudProviderAwsMetrics(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cloudServicesCloudProviderAwsMetrics:CloudServicesCloudProviderAwsMetrics';

    /**
     * Returns true if the given object is an instance of CloudServicesCloudProviderAwsMetrics.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudServicesCloudProviderAwsMetrics {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudServicesCloudProviderAwsMetrics.__pulumiType;
    }

    /**
     * 'enable': Enable AWS CloudWatch; 'disable': Disable AWS CloudWatch (default);
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * Specifies the thunder active partition name separated by a comma for multiple values
     */
    public readonly activePartitions!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable CPS Metrics; 'disable': Disable CPS Metrics;
     */
    public readonly cps!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable CPU Metrics; 'disable': Disable CPU Metrics;
     */
    public readonly cpu!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Disk Metrics; 'disable': Disable Disk Metrics;
     */
    public readonly disk!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Interfaces Metrics; 'disable': Disable Interfaces Metrics;
     */
    public readonly interfaces!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Memory Metrics; 'disable': Disable Memory Metrics;
     */
    public readonly memory!: pulumi.Output<string | undefined>;
    /**
     * Specifies the AWS namespace where all the metrics must be published
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Packet Drop Metrics; 'disable': Disable Packet Drop Metrics;
     */
    public readonly packetDrop!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Packet Rate Metrics; 'disable': Disable Packet Rate Metrics;
     */
    public readonly packetRate!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Server Down Count Metrics; 'disable': Disable Server Down Count Metrics;
     */
    public readonly serverDownCount!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Server Down Percentage Metrics; 'disable': Disable Server Down Percentage Metrics;
     */
    public readonly serverDownPercentage!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Server Error Metrics; 'disable': Disable Server Error Metrics;
     */
    public readonly serverError!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Sessions Metrics; 'disable': Disable Sessions Metrics;
     */
    public readonly sessions!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable SSL Cert Metrics; 'disable': Disable SSL Cert Metrics;
     */
    public readonly sslCert!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Throughput Metrics; 'disable': Disable Throughput Metrics;
     */
    public readonly throughput!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable TPS Metrics; 'disable': Disable TPS Metrics;
     */
    public readonly tps!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a CloudServicesCloudProviderAwsMetrics resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudServicesCloudProviderAwsMetricsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudServicesCloudProviderAwsMetricsArgs | CloudServicesCloudProviderAwsMetricsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudServicesCloudProviderAwsMetricsState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["activePartitions"] = state ? state.activePartitions : undefined;
            resourceInputs["cps"] = state ? state.cps : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["disk"] = state ? state.disk : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["packetDrop"] = state ? state.packetDrop : undefined;
            resourceInputs["packetRate"] = state ? state.packetRate : undefined;
            resourceInputs["serverDownCount"] = state ? state.serverDownCount : undefined;
            resourceInputs["serverDownPercentage"] = state ? state.serverDownPercentage : undefined;
            resourceInputs["serverError"] = state ? state.serverError : undefined;
            resourceInputs["sessions"] = state ? state.sessions : undefined;
            resourceInputs["sslCert"] = state ? state.sslCert : undefined;
            resourceInputs["throughput"] = state ? state.throughput : undefined;
            resourceInputs["tps"] = state ? state.tps : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as CloudServicesCloudProviderAwsMetricsArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["activePartitions"] = args ? args.activePartitions : undefined;
            resourceInputs["cps"] = args ? args.cps : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["disk"] = args ? args.disk : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["packetDrop"] = args ? args.packetDrop : undefined;
            resourceInputs["packetRate"] = args ? args.packetRate : undefined;
            resourceInputs["serverDownCount"] = args ? args.serverDownCount : undefined;
            resourceInputs["serverDownPercentage"] = args ? args.serverDownPercentage : undefined;
            resourceInputs["serverError"] = args ? args.serverError : undefined;
            resourceInputs["sessions"] = args ? args.sessions : undefined;
            resourceInputs["sslCert"] = args ? args.sslCert : undefined;
            resourceInputs["throughput"] = args ? args.throughput : undefined;
            resourceInputs["tps"] = args ? args.tps : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudServicesCloudProviderAwsMetrics.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudServicesCloudProviderAwsMetrics resources.
 */
export interface CloudServicesCloudProviderAwsMetricsState {
    /**
     * 'enable': Enable AWS CloudWatch; 'disable': Disable AWS CloudWatch (default);
     */
    action?: pulumi.Input<string>;
    /**
     * Specifies the thunder active partition name separated by a comma for multiple values
     */
    activePartitions?: pulumi.Input<string>;
    /**
     * 'enable': Enable CPS Metrics; 'disable': Disable CPS Metrics;
     */
    cps?: pulumi.Input<string>;
    /**
     * 'enable': Enable CPU Metrics; 'disable': Disable CPU Metrics;
     */
    cpu?: pulumi.Input<string>;
    /**
     * 'enable': Enable Disk Metrics; 'disable': Disable Disk Metrics;
     */
    disk?: pulumi.Input<string>;
    /**
     * 'enable': Enable Interfaces Metrics; 'disable': Disable Interfaces Metrics;
     */
    interfaces?: pulumi.Input<string>;
    /**
     * 'enable': Enable Memory Metrics; 'disable': Disable Memory Metrics;
     */
    memory?: pulumi.Input<string>;
    /**
     * Specifies the AWS namespace where all the metrics must be published
     */
    namespace?: pulumi.Input<string>;
    /**
     * 'enable': Enable Packet Drop Metrics; 'disable': Disable Packet Drop Metrics;
     */
    packetDrop?: pulumi.Input<string>;
    /**
     * 'enable': Enable Packet Rate Metrics; 'disable': Disable Packet Rate Metrics;
     */
    packetRate?: pulumi.Input<string>;
    /**
     * 'enable': Enable Server Down Count Metrics; 'disable': Disable Server Down Count Metrics;
     */
    serverDownCount?: pulumi.Input<string>;
    /**
     * 'enable': Enable Server Down Percentage Metrics; 'disable': Disable Server Down Percentage Metrics;
     */
    serverDownPercentage?: pulumi.Input<string>;
    /**
     * 'enable': Enable Server Error Metrics; 'disable': Disable Server Error Metrics;
     */
    serverError?: pulumi.Input<string>;
    /**
     * 'enable': Enable Sessions Metrics; 'disable': Disable Sessions Metrics;
     */
    sessions?: pulumi.Input<string>;
    /**
     * 'enable': Enable SSL Cert Metrics; 'disable': Disable SSL Cert Metrics;
     */
    sslCert?: pulumi.Input<string>;
    /**
     * 'enable': Enable Throughput Metrics; 'disable': Disable Throughput Metrics;
     */
    throughput?: pulumi.Input<string>;
    /**
     * 'enable': Enable TPS Metrics; 'disable': Disable TPS Metrics;
     */
    tps?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudServicesCloudProviderAwsMetrics resource.
 */
export interface CloudServicesCloudProviderAwsMetricsArgs {
    /**
     * 'enable': Enable AWS CloudWatch; 'disable': Disable AWS CloudWatch (default);
     */
    action?: pulumi.Input<string>;
    /**
     * Specifies the thunder active partition name separated by a comma for multiple values
     */
    activePartitions?: pulumi.Input<string>;
    /**
     * 'enable': Enable CPS Metrics; 'disable': Disable CPS Metrics;
     */
    cps?: pulumi.Input<string>;
    /**
     * 'enable': Enable CPU Metrics; 'disable': Disable CPU Metrics;
     */
    cpu?: pulumi.Input<string>;
    /**
     * 'enable': Enable Disk Metrics; 'disable': Disable Disk Metrics;
     */
    disk?: pulumi.Input<string>;
    /**
     * 'enable': Enable Interfaces Metrics; 'disable': Disable Interfaces Metrics;
     */
    interfaces?: pulumi.Input<string>;
    /**
     * 'enable': Enable Memory Metrics; 'disable': Disable Memory Metrics;
     */
    memory?: pulumi.Input<string>;
    /**
     * Specifies the AWS namespace where all the metrics must be published
     */
    namespace?: pulumi.Input<string>;
    /**
     * 'enable': Enable Packet Drop Metrics; 'disable': Disable Packet Drop Metrics;
     */
    packetDrop?: pulumi.Input<string>;
    /**
     * 'enable': Enable Packet Rate Metrics; 'disable': Disable Packet Rate Metrics;
     */
    packetRate?: pulumi.Input<string>;
    /**
     * 'enable': Enable Server Down Count Metrics; 'disable': Disable Server Down Count Metrics;
     */
    serverDownCount?: pulumi.Input<string>;
    /**
     * 'enable': Enable Server Down Percentage Metrics; 'disable': Disable Server Down Percentage Metrics;
     */
    serverDownPercentage?: pulumi.Input<string>;
    /**
     * 'enable': Enable Server Error Metrics; 'disable': Disable Server Error Metrics;
     */
    serverError?: pulumi.Input<string>;
    /**
     * 'enable': Enable Sessions Metrics; 'disable': Disable Sessions Metrics;
     */
    sessions?: pulumi.Input<string>;
    /**
     * 'enable': Enable SSL Cert Metrics; 'disable': Disable SSL Cert Metrics;
     */
    sslCert?: pulumi.Input<string>;
    /**
     * 'enable': Enable Throughput Metrics; 'disable': Disable Throughput Metrics;
     */
    throughput?: pulumi.Input<string>;
    /**
     * 'enable': Enable TPS Metrics; 'disable': Disable TPS Metrics;
     */
    tps?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
