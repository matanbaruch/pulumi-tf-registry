// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbServiceIpStats(args: GetGslbServiceIpStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbServiceIpStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbServiceIpStats:getGslbServiceIpStats", {
        "id": args.id,
        "nodeName": args.nodeName,
        "portLists": args.portLists,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbServiceIpStats.
 */
export interface GetGslbServiceIpStatsArgs {
    id?: string;
    nodeName: string;
    portLists?: inputs.GetGslbServiceIpStatsPortList[];
    stats?: inputs.GetGslbServiceIpStatsStats;
}

/**
 * A collection of values returned by getGslbServiceIpStats.
 */
export interface GetGslbServiceIpStatsResult {
    readonly id: string;
    readonly nodeName: string;
    readonly portLists?: outputs.GetGslbServiceIpStatsPortList[];
    readonly stats?: outputs.GetGslbServiceIpStatsStats;
}
export function getGslbServiceIpStatsOutput(args: GetGslbServiceIpStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbServiceIpStatsResult> {
    return pulumi.output(args).apply((a: any) => getGslbServiceIpStats(a, opts))
}

/**
 * A collection of arguments for invoking getGslbServiceIpStats.
 */
export interface GetGslbServiceIpStatsOutputArgs {
    id?: pulumi.Input<string>;
    nodeName: pulumi.Input<string>;
    portLists?: pulumi.Input<pulumi.Input<inputs.GetGslbServiceIpStatsPortListArgs>[]>;
    stats?: pulumi.Input<inputs.GetGslbServiceIpStatsStatsArgs>;
}
