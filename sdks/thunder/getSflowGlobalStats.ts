// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSflowGlobalStats(args?: GetSflowGlobalStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetSflowGlobalStatsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getSflowGlobalStats:getSflowGlobalStats", {
        "id": args.id,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSflowGlobalStats.
 */
export interface GetSflowGlobalStatsArgs {
    id?: string;
    stats?: inputs.GetSflowGlobalStatsStats;
}

/**
 * A collection of values returned by getSflowGlobalStats.
 */
export interface GetSflowGlobalStatsResult {
    readonly id: string;
    readonly stats?: outputs.GetSflowGlobalStatsStats;
}
export function getSflowGlobalStatsOutput(args?: GetSflowGlobalStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSflowGlobalStatsResult> {
    return pulumi.output(args).apply((a: any) => getSflowGlobalStats(a, opts))
}

/**
 * A collection of arguments for invoking getSflowGlobalStats.
 */
export interface GetSflowGlobalStatsOutputArgs {
    id?: pulumi.Input<string>;
    stats?: pulumi.Input<inputs.GetSflowGlobalStatsStatsArgs>;
}
