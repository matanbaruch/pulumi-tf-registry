// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVisibilityStats(args?: GetVisibilityStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetVisibilityStatsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getVisibilityStats:getVisibilityStats", {
        "id": args.id,
        "monEntityTelemetryData": args.monEntityTelemetryData,
        "packetCapture": args.packetCapture,
        "reporting": args.reporting,
        "stats": args.stats,
        "topn": args.topn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVisibilityStats.
 */
export interface GetVisibilityStatsArgs {
    id?: string;
    monEntityTelemetryData?: inputs.GetVisibilityStatsMonEntityTelemetryData;
    packetCapture?: inputs.GetVisibilityStatsPacketCapture;
    reporting?: inputs.GetVisibilityStatsReporting;
    stats?: inputs.GetVisibilityStatsStats;
    topn?: inputs.GetVisibilityStatsTopn;
}

/**
 * A collection of values returned by getVisibilityStats.
 */
export interface GetVisibilityStatsResult {
    readonly id: string;
    readonly monEntityTelemetryData?: outputs.GetVisibilityStatsMonEntityTelemetryData;
    readonly packetCapture?: outputs.GetVisibilityStatsPacketCapture;
    readonly reporting?: outputs.GetVisibilityStatsReporting;
    readonly stats?: outputs.GetVisibilityStatsStats;
    readonly topn?: outputs.GetVisibilityStatsTopn;
}
export function getVisibilityStatsOutput(args?: GetVisibilityStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVisibilityStatsResult> {
    return pulumi.output(args).apply((a: any) => getVisibilityStats(a, opts))
}

/**
 * A collection of arguments for invoking getVisibilityStats.
 */
export interface GetVisibilityStatsOutputArgs {
    id?: pulumi.Input<string>;
    monEntityTelemetryData?: pulumi.Input<inputs.GetVisibilityStatsMonEntityTelemetryDataArgs>;
    packetCapture?: pulumi.Input<inputs.GetVisibilityStatsPacketCaptureArgs>;
    reporting?: pulumi.Input<inputs.GetVisibilityStatsReportingArgs>;
    stats?: pulumi.Input<inputs.GetVisibilityStatsStatsArgs>;
    topn?: pulumi.Input<inputs.GetVisibilityStatsTopnArgs>;
}
