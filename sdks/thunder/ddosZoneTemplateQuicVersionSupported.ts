// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DdosZoneTemplateQuicVersionSupported extends pulumi.CustomResource {
    /**
     * Get an existing DdosZoneTemplateQuicVersionSupported resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosZoneTemplateQuicVersionSupportedState, opts?: pulumi.CustomResourceOptions): DdosZoneTemplateQuicVersionSupported {
        return new DdosZoneTemplateQuicVersionSupported(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosZoneTemplateQuicVersionSupported:DdosZoneTemplateQuicVersionSupported';

    /**
     * Returns true if the given object is an instance of DdosZoneTemplateQuicVersionSupported.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosZoneTemplateQuicVersionSupported {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosZoneTemplateQuicVersionSupported.__pulumiType;
    }

    public readonly malformedCheck!: pulumi.Output<outputs.DdosZoneTemplateQuicVersionSupportedMalformedCheck | undefined>;
    /**
     * QuicTmplName
     */
    public readonly quicTmplName!: pulumi.Output<string>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * 'drop': Drop packets; 'blacklist-src': Blacklist-src;
     */
    public readonly versionAction!: pulumi.Output<string | undefined>;
    /**
     * Configure action-list to take
     */
    public readonly versionActionListName!: pulumi.Output<string | undefined>;
    /**
     * Version supported range end
     */
    public readonly versionEnd!: pulumi.Output<string>;
    /**
     * Configure versions supported
     */
    public readonly versionStart!: pulumi.Output<string>;

    /**
     * Create a DdosZoneTemplateQuicVersionSupported resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosZoneTemplateQuicVersionSupportedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosZoneTemplateQuicVersionSupportedArgs | DdosZoneTemplateQuicVersionSupportedState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosZoneTemplateQuicVersionSupportedState | undefined;
            resourceInputs["malformedCheck"] = state ? state.malformedCheck : undefined;
            resourceInputs["quicTmplName"] = state ? state.quicTmplName : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["versionAction"] = state ? state.versionAction : undefined;
            resourceInputs["versionActionListName"] = state ? state.versionActionListName : undefined;
            resourceInputs["versionEnd"] = state ? state.versionEnd : undefined;
            resourceInputs["versionStart"] = state ? state.versionStart : undefined;
        } else {
            const args = argsOrState as DdosZoneTemplateQuicVersionSupportedArgs | undefined;
            if ((!args || args.quicTmplName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'quicTmplName'");
            }
            if ((!args || args.versionEnd === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionEnd'");
            }
            if ((!args || args.versionStart === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versionStart'");
            }
            resourceInputs["malformedCheck"] = args ? args.malformedCheck : undefined;
            resourceInputs["quicTmplName"] = args ? args.quicTmplName : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["versionAction"] = args ? args.versionAction : undefined;
            resourceInputs["versionActionListName"] = args ? args.versionActionListName : undefined;
            resourceInputs["versionEnd"] = args ? args.versionEnd : undefined;
            resourceInputs["versionStart"] = args ? args.versionStart : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosZoneTemplateQuicVersionSupported.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosZoneTemplateQuicVersionSupported resources.
 */
export interface DdosZoneTemplateQuicVersionSupportedState {
    malformedCheck?: pulumi.Input<inputs.DdosZoneTemplateQuicVersionSupportedMalformedCheck>;
    /**
     * QuicTmplName
     */
    quicTmplName?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 'drop': Drop packets; 'blacklist-src': Blacklist-src;
     */
    versionAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take
     */
    versionActionListName?: pulumi.Input<string>;
    /**
     * Version supported range end
     */
    versionEnd?: pulumi.Input<string>;
    /**
     * Configure versions supported
     */
    versionStart?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosZoneTemplateQuicVersionSupported resource.
 */
export interface DdosZoneTemplateQuicVersionSupportedArgs {
    malformedCheck?: pulumi.Input<inputs.DdosZoneTemplateQuicVersionSupportedMalformedCheck>;
    /**
     * QuicTmplName
     */
    quicTmplName: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 'drop': Drop packets; 'blacklist-src': Blacklist-src;
     */
    versionAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take
     */
    versionActionListName?: pulumi.Input<string>;
    /**
     * Version supported range end
     */
    versionEnd: pulumi.Input<string>;
    /**
     * Configure versions supported
     */
    versionStart: pulumi.Input<string>;
}
