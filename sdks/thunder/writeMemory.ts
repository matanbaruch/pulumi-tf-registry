// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WriteMemory extends pulumi.CustomResource {
    /**
     * Get an existing WriteMemory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WriteMemoryState, opts?: pulumi.CustomResourceOptions): WriteMemory {
        return new WriteMemory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/writeMemory:WriteMemory';

    /**
     * Returns true if the given object is an instance of WriteMemory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WriteMemory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WriteMemory.__pulumiType;
    }

    /**
     * 'primary': Write to default Primary Configuration; 'secondary': Write to default Secondary Configuration; 'local': Local
     * Configuration Profile Name;
     */
    public readonly destination!: pulumi.Output<string | undefined>;
    /**
     * 'all': All partition configurations; 'shared': Shared partition; 'specified': Specified partition;
     */
    public readonly partition!: pulumi.Output<string | undefined>;
    /**
     * Local Configuration Profile Name
     */
    public readonly profile!: pulumi.Output<string | undefined>;
    /**
     * Specified partition
     */
    public readonly specifiedPartition!: pulumi.Output<string | undefined>;

    /**
     * Create a WriteMemory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WriteMemoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WriteMemoryArgs | WriteMemoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WriteMemoryState | undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["partition"] = state ? state.partition : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["specifiedPartition"] = state ? state.specifiedPartition : undefined;
        } else {
            const args = argsOrState as WriteMemoryArgs | undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["partition"] = args ? args.partition : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["specifiedPartition"] = args ? args.specifiedPartition : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WriteMemory.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WriteMemory resources.
 */
export interface WriteMemoryState {
    /**
     * 'primary': Write to default Primary Configuration; 'secondary': Write to default Secondary Configuration; 'local': Local
     * Configuration Profile Name;
     */
    destination?: pulumi.Input<string>;
    /**
     * 'all': All partition configurations; 'shared': Shared partition; 'specified': Specified partition;
     */
    partition?: pulumi.Input<string>;
    /**
     * Local Configuration Profile Name
     */
    profile?: pulumi.Input<string>;
    /**
     * Specified partition
     */
    specifiedPartition?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WriteMemory resource.
 */
export interface WriteMemoryArgs {
    /**
     * 'primary': Write to default Primary Configuration; 'secondary': Write to default Secondary Configuration; 'local': Local
     * Configuration Profile Name;
     */
    destination?: pulumi.Input<string>;
    /**
     * 'all': All partition configurations; 'shared': Shared partition; 'specified': Specified partition;
     */
    partition?: pulumi.Input<string>;
    /**
     * Local Configuration Profile Name
     */
    profile?: pulumi.Input<string>;
    /**
     * Specified partition
     */
    specifiedPartition?: pulumi.Input<string>;
}
