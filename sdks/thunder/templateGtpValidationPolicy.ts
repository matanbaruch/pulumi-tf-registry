// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TemplateGtpValidationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing TemplateGtpValidationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateGtpValidationPolicyState, opts?: pulumi.CustomResourceOptions): TemplateGtpValidationPolicy {
        return new TemplateGtpValidationPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/templateGtpValidationPolicy:TemplateGtpValidationPolicy';

    /**
     * Returns true if the given object is an instance of TemplateGtpValidationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateGtpValidationPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateGtpValidationPolicy.__pulumiType;
    }

    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly anomalyAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Anomaly Checks for GTP Messages; 'disable': Disable Anomaly Checks for GTP Messages;
     */
    public readonly anomalyChecks!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly antiSpoofingAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Spoofed IP Address Check for GTP-U Messages; 'disable': Disable Spoofed IP Address Check for GTP
     * Messages;
     */
    public readonly antiSpoofingCheck!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly crosslayerCorrAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Cross Layer Correlation for GTP Messages; 'disable': Disable Cross Layer Correlation for GTP Messages;
     */
    public readonly crosslayerCorrelation!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly mandatoryIeAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Mandatory IE Check for GTP Messages; 'disable': Disable Mandatory IE Check for GTP Messages;
     */
    public readonly mandatoryIeCheck!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly msisdnImsiCorrAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Country Code Correlation in MSISDN and IMSI for GTP Messages; 'disable': Disable Country Code
     * Correlation in MSISDN and IMSI for GTP Messages;
     */
    public readonly msisdnImsiCorrelation!: pulumi.Output<string | undefined>;
    /**
     * Specify name of the GTP Validation Policy
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly outOfOrderIeAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Out of Order IE Check for GTP Messages; 'disable': Disable Out of Order IE Check for GTP Messages;
     */
    public readonly outOfOrderIeCheck!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly outOfStateIeAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Out of State IE Check for GTP Messages; 'disable': Disable Out of State IE Check for GTP Messages;
     */
    public readonly outOfStateIeCheck!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly reservedIeAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Reserved IE Check for GTP Messages; 'disable': Disable Reserved IE Check for GTP Messages;
     */
    public readonly reservedIeCheck!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    public readonly sequenceNumCorrAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable Sequence number correlation between GTP Request and Responses; 'disable': Disable Sequence number
     * correlation between GTP Request and Responses;
     */
    public readonly sequenceNumCorrelation!: pulumi.Output<string | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a TemplateGtpValidationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TemplateGtpValidationPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateGtpValidationPolicyArgs | TemplateGtpValidationPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateGtpValidationPolicyState | undefined;
            resourceInputs["anomalyAction"] = state ? state.anomalyAction : undefined;
            resourceInputs["anomalyChecks"] = state ? state.anomalyChecks : undefined;
            resourceInputs["antiSpoofingAction"] = state ? state.antiSpoofingAction : undefined;
            resourceInputs["antiSpoofingCheck"] = state ? state.antiSpoofingCheck : undefined;
            resourceInputs["crosslayerCorrAction"] = state ? state.crosslayerCorrAction : undefined;
            resourceInputs["crosslayerCorrelation"] = state ? state.crosslayerCorrelation : undefined;
            resourceInputs["mandatoryIeAction"] = state ? state.mandatoryIeAction : undefined;
            resourceInputs["mandatoryIeCheck"] = state ? state.mandatoryIeCheck : undefined;
            resourceInputs["msisdnImsiCorrAction"] = state ? state.msisdnImsiCorrAction : undefined;
            resourceInputs["msisdnImsiCorrelation"] = state ? state.msisdnImsiCorrelation : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outOfOrderIeAction"] = state ? state.outOfOrderIeAction : undefined;
            resourceInputs["outOfOrderIeCheck"] = state ? state.outOfOrderIeCheck : undefined;
            resourceInputs["outOfStateIeAction"] = state ? state.outOfStateIeAction : undefined;
            resourceInputs["outOfStateIeCheck"] = state ? state.outOfStateIeCheck : undefined;
            resourceInputs["reservedIeAction"] = state ? state.reservedIeAction : undefined;
            resourceInputs["reservedIeCheck"] = state ? state.reservedIeCheck : undefined;
            resourceInputs["sequenceNumCorrAction"] = state ? state.sequenceNumCorrAction : undefined;
            resourceInputs["sequenceNumCorrelation"] = state ? state.sequenceNumCorrelation : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as TemplateGtpValidationPolicyArgs | undefined;
            resourceInputs["anomalyAction"] = args ? args.anomalyAction : undefined;
            resourceInputs["anomalyChecks"] = args ? args.anomalyChecks : undefined;
            resourceInputs["antiSpoofingAction"] = args ? args.antiSpoofingAction : undefined;
            resourceInputs["antiSpoofingCheck"] = args ? args.antiSpoofingCheck : undefined;
            resourceInputs["crosslayerCorrAction"] = args ? args.crosslayerCorrAction : undefined;
            resourceInputs["crosslayerCorrelation"] = args ? args.crosslayerCorrelation : undefined;
            resourceInputs["mandatoryIeAction"] = args ? args.mandatoryIeAction : undefined;
            resourceInputs["mandatoryIeCheck"] = args ? args.mandatoryIeCheck : undefined;
            resourceInputs["msisdnImsiCorrAction"] = args ? args.msisdnImsiCorrAction : undefined;
            resourceInputs["msisdnImsiCorrelation"] = args ? args.msisdnImsiCorrelation : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outOfOrderIeAction"] = args ? args.outOfOrderIeAction : undefined;
            resourceInputs["outOfOrderIeCheck"] = args ? args.outOfOrderIeCheck : undefined;
            resourceInputs["outOfStateIeAction"] = args ? args.outOfStateIeAction : undefined;
            resourceInputs["outOfStateIeCheck"] = args ? args.outOfStateIeCheck : undefined;
            resourceInputs["reservedIeAction"] = args ? args.reservedIeAction : undefined;
            resourceInputs["reservedIeCheck"] = args ? args.reservedIeCheck : undefined;
            resourceInputs["sequenceNumCorrAction"] = args ? args.sequenceNumCorrAction : undefined;
            resourceInputs["sequenceNumCorrelation"] = args ? args.sequenceNumCorrelation : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateGtpValidationPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TemplateGtpValidationPolicy resources.
 */
export interface TemplateGtpValidationPolicyState {
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    anomalyAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Anomaly Checks for GTP Messages; 'disable': Disable Anomaly Checks for GTP Messages;
     */
    anomalyChecks?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    antiSpoofingAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Spoofed IP Address Check for GTP-U Messages; 'disable': Disable Spoofed IP Address Check for GTP
     * Messages;
     */
    antiSpoofingCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    crosslayerCorrAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Cross Layer Correlation for GTP Messages; 'disable': Disable Cross Layer Correlation for GTP Messages;
     */
    crosslayerCorrelation?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    mandatoryIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Mandatory IE Check for GTP Messages; 'disable': Disable Mandatory IE Check for GTP Messages;
     */
    mandatoryIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    msisdnImsiCorrAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Country Code Correlation in MSISDN and IMSI for GTP Messages; 'disable': Disable Country Code
     * Correlation in MSISDN and IMSI for GTP Messages;
     */
    msisdnImsiCorrelation?: pulumi.Input<string>;
    /**
     * Specify name of the GTP Validation Policy
     */
    name?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    outOfOrderIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Out of Order IE Check for GTP Messages; 'disable': Disable Out of Order IE Check for GTP Messages;
     */
    outOfOrderIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    outOfStateIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Out of State IE Check for GTP Messages; 'disable': Disable Out of State IE Check for GTP Messages;
     */
    outOfStateIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    reservedIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Reserved IE Check for GTP Messages; 'disable': Disable Reserved IE Check for GTP Messages;
     */
    reservedIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    sequenceNumCorrAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Sequence number correlation between GTP Request and Responses; 'disable': Disable Sequence number
     * correlation between GTP Request and Responses;
     */
    sequenceNumCorrelation?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TemplateGtpValidationPolicy resource.
 */
export interface TemplateGtpValidationPolicyArgs {
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    anomalyAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Anomaly Checks for GTP Messages; 'disable': Disable Anomaly Checks for GTP Messages;
     */
    anomalyChecks?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    antiSpoofingAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Spoofed IP Address Check for GTP-U Messages; 'disable': Disable Spoofed IP Address Check for GTP
     * Messages;
     */
    antiSpoofingCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    crosslayerCorrAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Cross Layer Correlation for GTP Messages; 'disable': Disable Cross Layer Correlation for GTP Messages;
     */
    crosslayerCorrelation?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    mandatoryIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Mandatory IE Check for GTP Messages; 'disable': Disable Mandatory IE Check for GTP Messages;
     */
    mandatoryIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    msisdnImsiCorrAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Country Code Correlation in MSISDN and IMSI for GTP Messages; 'disable': Disable Country Code
     * Correlation in MSISDN and IMSI for GTP Messages;
     */
    msisdnImsiCorrelation?: pulumi.Input<string>;
    /**
     * Specify name of the GTP Validation Policy
     */
    name?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    outOfOrderIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Out of Order IE Check for GTP Messages; 'disable': Disable Out of Order IE Check for GTP Messages;
     */
    outOfOrderIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    outOfStateIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Out of State IE Check for GTP Messages; 'disable': Disable Out of State IE Check for GTP Messages;
     */
    outOfStateIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    reservedIeAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Reserved IE Check for GTP Messages; 'disable': Disable Reserved IE Check for GTP Messages;
     */
    reservedIeCheck?: pulumi.Input<string>;
    /**
     * 'monitor': Forward failed packet; 'drop': drop check failed packet(default);
     */
    sequenceNumCorrAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable Sequence number correlation between GTP Request and Responses; 'disable': Disable Sequence number
     * correlation between GTP Request and Responses;
     */
    sequenceNumCorrelation?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
