// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DebugLayer2 extends pulumi.CustomResource {
    /**
     * Get an existing DebugLayer2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DebugLayer2State, opts?: pulumi.CustomResourceOptions): DebugLayer2 {
        return new DebugLayer2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/debugLayer2:DebugLayer2';

    /**
     * Returns true if the given object is an instance of DebugLayer2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DebugLayer2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DebugLayer2.__pulumiType;
    }

    /**
     * Layer2 all debug switch
     */
    public readonly all!: pulumi.Output<number | undefined>;
    /**
     * Layer2 debug arp switch
     */
    public readonly arp!: pulumi.Output<number | undefined>;
    /**
     * Layer2 debug interface switch
     */
    public readonly interface!: pulumi.Output<number | undefined>;
    /**
     * Layer2 debug misc switch
     */
    public readonly misc!: pulumi.Output<number | undefined>;
    /**
     * Layer2 debug trace switch
     */
    public readonly trace!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Layer2 debug vlan switch
     */
    public readonly vlan!: pulumi.Output<number | undefined>;

    /**
     * Create a DebugLayer2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DebugLayer2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DebugLayer2Args | DebugLayer2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DebugLayer2State | undefined;
            resourceInputs["all"] = state ? state.all : undefined;
            resourceInputs["arp"] = state ? state.arp : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["misc"] = state ? state.misc : undefined;
            resourceInputs["trace"] = state ? state.trace : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as DebugLayer2Args | undefined;
            resourceInputs["all"] = args ? args.all : undefined;
            resourceInputs["arp"] = args ? args.arp : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["misc"] = args ? args.misc : undefined;
            resourceInputs["trace"] = args ? args.trace : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DebugLayer2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DebugLayer2 resources.
 */
export interface DebugLayer2State {
    /**
     * Layer2 all debug switch
     */
    all?: pulumi.Input<number>;
    /**
     * Layer2 debug arp switch
     */
    arp?: pulumi.Input<number>;
    /**
     * Layer2 debug interface switch
     */
    interface?: pulumi.Input<number>;
    /**
     * Layer2 debug misc switch
     */
    misc?: pulumi.Input<number>;
    /**
     * Layer2 debug trace switch
     */
    trace?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Layer2 debug vlan switch
     */
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DebugLayer2 resource.
 */
export interface DebugLayer2Args {
    /**
     * Layer2 all debug switch
     */
    all?: pulumi.Input<number>;
    /**
     * Layer2 debug arp switch
     */
    arp?: pulumi.Input<number>;
    /**
     * Layer2 debug interface switch
     */
    interface?: pulumi.Input<number>;
    /**
     * Layer2 debug misc switch
     */
    misc?: pulumi.Input<number>;
    /**
     * Layer2 debug trace switch
     */
    trace?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Layer2 debug vlan switch
     */
    vlan?: pulumi.Input<number>;
}
