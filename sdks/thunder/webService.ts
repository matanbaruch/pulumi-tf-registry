// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WebService extends pulumi.CustomResource {
    /**
     * Get an existing WebService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebServiceState, opts?: pulumi.CustomResourceOptions): WebService {
        return new WebService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/webService:WebService';

    /**
     * Returns true if the given object is an instance of WebService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebService.__pulumiType;
    }

    /**
     * Diable
     */
    public readonly autoRedirtDisable!: pulumi.Output<number | undefined>;
    /**
     * Idle timeout of a xml service connection in minutes (Connection idle timeout value in minutes, default 10, 0 means never
     * timeout)
     */
    public readonly axapiIdle!: pulumi.Output<number | undefined>;
    /**
     * Set the max allowed aXAPI sessions (Session limit (default 30))
     */
    public readonly axapiSessionLimit!: pulumi.Output<number | undefined>;
    /**
     * Idle timeout of a connection in minutes (Connection idle timeout value in minutes, default 10, 0 means never timeout)
     */
    public readonly guiIdle!: pulumi.Output<number | undefined>;
    /**
     * Set the max allowed GUI sessions (Session limit (default 30))
     */
    public readonly guiSessionLimit!: pulumi.Output<number | undefined>;
    /**
     * Set KeepAliveTimeout in seconds (KeepAliveTimeout in seconds (default 30))
     */
    public readonly keepAliveTimeout!: pulumi.Output<number | undefined>;
    /**
     * Set GUI login message
     */
    public readonly loginMessage!: pulumi.Output<string | undefined>;
    /**
     * Set MaxKeepAliveRequests (MaxKeepAliveRequests (default 100))
     */
    public readonly maxKeepAliveRequests!: pulumi.Output<number | undefined>;
    /**
     * Set Max Connections of MPM
     */
    public readonly mpmMaxConn!: pulumi.Output<number | undefined>;
    /**
     * Set Max Connections Per Child of MPM
     */
    public readonly mpmMaxConnPerChild!: pulumi.Output<number | undefined>;
    /**
     * Set Min Spare Connections of MPM
     */
    public readonly mpmMinSpareConn!: pulumi.Output<number | undefined>;
    /**
     * Set Web Server Port (Port number(default 80))
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * Set Pre GUI login message
     */
    public readonly preLoginMessage!: pulumi.Output<string | undefined>;
    public readonly publicApis!: pulumi.Output<outputs.WebServicePublicApi[] | undefined>;
    public readonly secure!: pulumi.Output<outputs.WebServiceSecure | undefined>;
    /**
     * Set web secure server port number for listening (Secure Port Number(default 443))
     */
    public readonly securePort!: pulumi.Output<number | undefined>;
    /**
     * Disable
     */
    public readonly secureServerDisable!: pulumi.Output<number | undefined>;
    /**
     * Disable
     */
    public readonly serverDisable!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a WebService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WebServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebServiceArgs | WebServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebServiceState | undefined;
            resourceInputs["autoRedirtDisable"] = state ? state.autoRedirtDisable : undefined;
            resourceInputs["axapiIdle"] = state ? state.axapiIdle : undefined;
            resourceInputs["axapiSessionLimit"] = state ? state.axapiSessionLimit : undefined;
            resourceInputs["guiIdle"] = state ? state.guiIdle : undefined;
            resourceInputs["guiSessionLimit"] = state ? state.guiSessionLimit : undefined;
            resourceInputs["keepAliveTimeout"] = state ? state.keepAliveTimeout : undefined;
            resourceInputs["loginMessage"] = state ? state.loginMessage : undefined;
            resourceInputs["maxKeepAliveRequests"] = state ? state.maxKeepAliveRequests : undefined;
            resourceInputs["mpmMaxConn"] = state ? state.mpmMaxConn : undefined;
            resourceInputs["mpmMaxConnPerChild"] = state ? state.mpmMaxConnPerChild : undefined;
            resourceInputs["mpmMinSpareConn"] = state ? state.mpmMinSpareConn : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["preLoginMessage"] = state ? state.preLoginMessage : undefined;
            resourceInputs["publicApis"] = state ? state.publicApis : undefined;
            resourceInputs["secure"] = state ? state.secure : undefined;
            resourceInputs["securePort"] = state ? state.securePort : undefined;
            resourceInputs["secureServerDisable"] = state ? state.secureServerDisable : undefined;
            resourceInputs["serverDisable"] = state ? state.serverDisable : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as WebServiceArgs | undefined;
            resourceInputs["autoRedirtDisable"] = args ? args.autoRedirtDisable : undefined;
            resourceInputs["axapiIdle"] = args ? args.axapiIdle : undefined;
            resourceInputs["axapiSessionLimit"] = args ? args.axapiSessionLimit : undefined;
            resourceInputs["guiIdle"] = args ? args.guiIdle : undefined;
            resourceInputs["guiSessionLimit"] = args ? args.guiSessionLimit : undefined;
            resourceInputs["keepAliveTimeout"] = args ? args.keepAliveTimeout : undefined;
            resourceInputs["loginMessage"] = args ? args.loginMessage : undefined;
            resourceInputs["maxKeepAliveRequests"] = args ? args.maxKeepAliveRequests : undefined;
            resourceInputs["mpmMaxConn"] = args ? args.mpmMaxConn : undefined;
            resourceInputs["mpmMaxConnPerChild"] = args ? args.mpmMaxConnPerChild : undefined;
            resourceInputs["mpmMinSpareConn"] = args ? args.mpmMinSpareConn : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["preLoginMessage"] = args ? args.preLoginMessage : undefined;
            resourceInputs["publicApis"] = args ? args.publicApis : undefined;
            resourceInputs["secure"] = args ? args.secure : undefined;
            resourceInputs["securePort"] = args ? args.securePort : undefined;
            resourceInputs["secureServerDisable"] = args ? args.secureServerDisable : undefined;
            resourceInputs["serverDisable"] = args ? args.serverDisable : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebService.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WebService resources.
 */
export interface WebServiceState {
    /**
     * Diable
     */
    autoRedirtDisable?: pulumi.Input<number>;
    /**
     * Idle timeout of a xml service connection in minutes (Connection idle timeout value in minutes, default 10, 0 means never
     * timeout)
     */
    axapiIdle?: pulumi.Input<number>;
    /**
     * Set the max allowed aXAPI sessions (Session limit (default 30))
     */
    axapiSessionLimit?: pulumi.Input<number>;
    /**
     * Idle timeout of a connection in minutes (Connection idle timeout value in minutes, default 10, 0 means never timeout)
     */
    guiIdle?: pulumi.Input<number>;
    /**
     * Set the max allowed GUI sessions (Session limit (default 30))
     */
    guiSessionLimit?: pulumi.Input<number>;
    /**
     * Set KeepAliveTimeout in seconds (KeepAliveTimeout in seconds (default 30))
     */
    keepAliveTimeout?: pulumi.Input<number>;
    /**
     * Set GUI login message
     */
    loginMessage?: pulumi.Input<string>;
    /**
     * Set MaxKeepAliveRequests (MaxKeepAliveRequests (default 100))
     */
    maxKeepAliveRequests?: pulumi.Input<number>;
    /**
     * Set Max Connections of MPM
     */
    mpmMaxConn?: pulumi.Input<number>;
    /**
     * Set Max Connections Per Child of MPM
     */
    mpmMaxConnPerChild?: pulumi.Input<number>;
    /**
     * Set Min Spare Connections of MPM
     */
    mpmMinSpareConn?: pulumi.Input<number>;
    /**
     * Set Web Server Port (Port number(default 80))
     */
    port?: pulumi.Input<number>;
    /**
     * Set Pre GUI login message
     */
    preLoginMessage?: pulumi.Input<string>;
    publicApis?: pulumi.Input<pulumi.Input<inputs.WebServicePublicApi>[]>;
    secure?: pulumi.Input<inputs.WebServiceSecure>;
    /**
     * Set web secure server port number for listening (Secure Port Number(default 443))
     */
    securePort?: pulumi.Input<number>;
    /**
     * Disable
     */
    secureServerDisable?: pulumi.Input<number>;
    /**
     * Disable
     */
    serverDisable?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebService resource.
 */
export interface WebServiceArgs {
    /**
     * Diable
     */
    autoRedirtDisable?: pulumi.Input<number>;
    /**
     * Idle timeout of a xml service connection in minutes (Connection idle timeout value in minutes, default 10, 0 means never
     * timeout)
     */
    axapiIdle?: pulumi.Input<number>;
    /**
     * Set the max allowed aXAPI sessions (Session limit (default 30))
     */
    axapiSessionLimit?: pulumi.Input<number>;
    /**
     * Idle timeout of a connection in minutes (Connection idle timeout value in minutes, default 10, 0 means never timeout)
     */
    guiIdle?: pulumi.Input<number>;
    /**
     * Set the max allowed GUI sessions (Session limit (default 30))
     */
    guiSessionLimit?: pulumi.Input<number>;
    /**
     * Set KeepAliveTimeout in seconds (KeepAliveTimeout in seconds (default 30))
     */
    keepAliveTimeout?: pulumi.Input<number>;
    /**
     * Set GUI login message
     */
    loginMessage?: pulumi.Input<string>;
    /**
     * Set MaxKeepAliveRequests (MaxKeepAliveRequests (default 100))
     */
    maxKeepAliveRequests?: pulumi.Input<number>;
    /**
     * Set Max Connections of MPM
     */
    mpmMaxConn?: pulumi.Input<number>;
    /**
     * Set Max Connections Per Child of MPM
     */
    mpmMaxConnPerChild?: pulumi.Input<number>;
    /**
     * Set Min Spare Connections of MPM
     */
    mpmMinSpareConn?: pulumi.Input<number>;
    /**
     * Set Web Server Port (Port number(default 80))
     */
    port?: pulumi.Input<number>;
    /**
     * Set Pre GUI login message
     */
    preLoginMessage?: pulumi.Input<string>;
    publicApis?: pulumi.Input<pulumi.Input<inputs.WebServicePublicApi>[]>;
    secure?: pulumi.Input<inputs.WebServiceSecure>;
    /**
     * Set web secure server port number for listening (Secure Port Number(default 443))
     */
    securePort?: pulumi.Input<number>;
    /**
     * Disable
     */
    secureServerDisable?: pulumi.Input<number>;
    /**
     * Disable
     */
    serverDisable?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
