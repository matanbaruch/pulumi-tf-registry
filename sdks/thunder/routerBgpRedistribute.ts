// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterBgpRedistribute extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgpRedistribute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpRedistributeState, opts?: pulumi.CustomResourceOptions): RouterBgpRedistribute {
        return new RouterBgpRedistribute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/routerBgpRedistribute:RouterBgpRedistribute';

    /**
     * Returns true if the given object is an instance of RouterBgpRedistribute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgpRedistribute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgpRedistribute.__pulumiType;
    }

    /**
     * AsNumber
     */
    public readonly asNumber!: pulumi.Output<string>;
    public readonly connectedCfg!: pulumi.Output<outputs.RouterBgpRedistributeConnectedCfg | undefined>;
    public readonly floatingIpCfg!: pulumi.Output<outputs.RouterBgpRedistributeFloatingIpCfg | undefined>;
    public readonly ipNatCfg!: pulumi.Output<outputs.RouterBgpRedistributeIpNatCfg | undefined>;
    public readonly ipNatListCfg!: pulumi.Output<outputs.RouterBgpRedistributeIpNatListCfg | undefined>;
    public readonly isisCfg!: pulumi.Output<outputs.RouterBgpRedistributeIsisCfg | undefined>;
    public readonly lw4o6Cfg!: pulumi.Output<outputs.RouterBgpRedistributeLw4o6Cfg | undefined>;
    public readonly natMapCfg!: pulumi.Output<outputs.RouterBgpRedistributeNatMapCfg | undefined>;
    public readonly ospfCfg!: pulumi.Output<outputs.RouterBgpRedistributeOspfCfg | undefined>;
    public readonly ripCfg!: pulumi.Output<outputs.RouterBgpRedistributeRipCfg | undefined>;
    public readonly staticCfg!: pulumi.Output<outputs.RouterBgpRedistributeStaticCfg | undefined>;
    public readonly staticNatCfg!: pulumi.Output<outputs.RouterBgpRedistributeStaticNatCfg | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    public readonly vip!: pulumi.Output<outputs.RouterBgpRedistributeVip | undefined>;

    /**
     * Create a RouterBgpRedistribute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterBgpRedistributeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpRedistributeArgs | RouterBgpRedistributeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpRedistributeState | undefined;
            resourceInputs["asNumber"] = state ? state.asNumber : undefined;
            resourceInputs["connectedCfg"] = state ? state.connectedCfg : undefined;
            resourceInputs["floatingIpCfg"] = state ? state.floatingIpCfg : undefined;
            resourceInputs["ipNatCfg"] = state ? state.ipNatCfg : undefined;
            resourceInputs["ipNatListCfg"] = state ? state.ipNatListCfg : undefined;
            resourceInputs["isisCfg"] = state ? state.isisCfg : undefined;
            resourceInputs["lw4o6Cfg"] = state ? state.lw4o6Cfg : undefined;
            resourceInputs["natMapCfg"] = state ? state.natMapCfg : undefined;
            resourceInputs["ospfCfg"] = state ? state.ospfCfg : undefined;
            resourceInputs["ripCfg"] = state ? state.ripCfg : undefined;
            resourceInputs["staticCfg"] = state ? state.staticCfg : undefined;
            resourceInputs["staticNatCfg"] = state ? state.staticNatCfg : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vip"] = state ? state.vip : undefined;
        } else {
            const args = argsOrState as RouterBgpRedistributeArgs | undefined;
            if ((!args || args.asNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asNumber'");
            }
            resourceInputs["asNumber"] = args ? args.asNumber : undefined;
            resourceInputs["connectedCfg"] = args ? args.connectedCfg : undefined;
            resourceInputs["floatingIpCfg"] = args ? args.floatingIpCfg : undefined;
            resourceInputs["ipNatCfg"] = args ? args.ipNatCfg : undefined;
            resourceInputs["ipNatListCfg"] = args ? args.ipNatListCfg : undefined;
            resourceInputs["isisCfg"] = args ? args.isisCfg : undefined;
            resourceInputs["lw4o6Cfg"] = args ? args.lw4o6Cfg : undefined;
            resourceInputs["natMapCfg"] = args ? args.natMapCfg : undefined;
            resourceInputs["ospfCfg"] = args ? args.ospfCfg : undefined;
            resourceInputs["ripCfg"] = args ? args.ripCfg : undefined;
            resourceInputs["staticCfg"] = args ? args.staticCfg : undefined;
            resourceInputs["staticNatCfg"] = args ? args.staticNatCfg : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vip"] = args ? args.vip : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgpRedistribute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgpRedistribute resources.
 */
export interface RouterBgpRedistributeState {
    /**
     * AsNumber
     */
    asNumber?: pulumi.Input<string>;
    connectedCfg?: pulumi.Input<inputs.RouterBgpRedistributeConnectedCfg>;
    floatingIpCfg?: pulumi.Input<inputs.RouterBgpRedistributeFloatingIpCfg>;
    ipNatCfg?: pulumi.Input<inputs.RouterBgpRedistributeIpNatCfg>;
    ipNatListCfg?: pulumi.Input<inputs.RouterBgpRedistributeIpNatListCfg>;
    isisCfg?: pulumi.Input<inputs.RouterBgpRedistributeIsisCfg>;
    lw4o6Cfg?: pulumi.Input<inputs.RouterBgpRedistributeLw4o6Cfg>;
    natMapCfg?: pulumi.Input<inputs.RouterBgpRedistributeNatMapCfg>;
    ospfCfg?: pulumi.Input<inputs.RouterBgpRedistributeOspfCfg>;
    ripCfg?: pulumi.Input<inputs.RouterBgpRedistributeRipCfg>;
    staticCfg?: pulumi.Input<inputs.RouterBgpRedistributeStaticCfg>;
    staticNatCfg?: pulumi.Input<inputs.RouterBgpRedistributeStaticNatCfg>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vip?: pulumi.Input<inputs.RouterBgpRedistributeVip>;
}

/**
 * The set of arguments for constructing a RouterBgpRedistribute resource.
 */
export interface RouterBgpRedistributeArgs {
    /**
     * AsNumber
     */
    asNumber: pulumi.Input<string>;
    connectedCfg?: pulumi.Input<inputs.RouterBgpRedistributeConnectedCfg>;
    floatingIpCfg?: pulumi.Input<inputs.RouterBgpRedistributeFloatingIpCfg>;
    ipNatCfg?: pulumi.Input<inputs.RouterBgpRedistributeIpNatCfg>;
    ipNatListCfg?: pulumi.Input<inputs.RouterBgpRedistributeIpNatListCfg>;
    isisCfg?: pulumi.Input<inputs.RouterBgpRedistributeIsisCfg>;
    lw4o6Cfg?: pulumi.Input<inputs.RouterBgpRedistributeLw4o6Cfg>;
    natMapCfg?: pulumi.Input<inputs.RouterBgpRedistributeNatMapCfg>;
    ospfCfg?: pulumi.Input<inputs.RouterBgpRedistributeOspfCfg>;
    ripCfg?: pulumi.Input<inputs.RouterBgpRedistributeRipCfg>;
    staticCfg?: pulumi.Input<inputs.RouterBgpRedistributeStaticCfg>;
    staticNatCfg?: pulumi.Input<inputs.RouterBgpRedistributeStaticNatCfg>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vip?: pulumi.Input<inputs.RouterBgpRedistributeVip>;
}
