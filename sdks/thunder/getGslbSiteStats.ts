// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbSiteStats(args: GetGslbSiteStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbSiteStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbSiteStats:getGslbSiteStats", {
        "id": args.id,
        "ipServerLists": args.ipServerLists,
        "siteName": args.siteName,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbSiteStats.
 */
export interface GetGslbSiteStatsArgs {
    id?: string;
    ipServerLists?: inputs.GetGslbSiteStatsIpServerList[];
    siteName: string;
    stats?: inputs.GetGslbSiteStatsStats;
}

/**
 * A collection of values returned by getGslbSiteStats.
 */
export interface GetGslbSiteStatsResult {
    readonly id: string;
    readonly ipServerLists?: outputs.GetGslbSiteStatsIpServerList[];
    readonly siteName: string;
    readonly stats?: outputs.GetGslbSiteStatsStats;
}
export function getGslbSiteStatsOutput(args: GetGslbSiteStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbSiteStatsResult> {
    return pulumi.output(args).apply((a: any) => getGslbSiteStats(a, opts))
}

/**
 * A collection of arguments for invoking getGslbSiteStats.
 */
export interface GetGslbSiteStatsOutputArgs {
    id?: pulumi.Input<string>;
    ipServerLists?: pulumi.Input<pulumi.Input<inputs.GetGslbSiteStatsIpServerListArgs>[]>;
    siteName: pulumi.Input<string>;
    stats?: pulumi.Input<inputs.GetGslbSiteStatsStatsArgs>;
}
