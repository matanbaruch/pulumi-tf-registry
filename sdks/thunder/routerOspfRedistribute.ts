// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterOspfRedistribute extends pulumi.CustomResource {
    /**
     * Get an existing RouterOspfRedistribute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterOspfRedistributeState, opts?: pulumi.CustomResourceOptions): RouterOspfRedistribute {
        return new RouterOspfRedistribute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/routerOspfRedistribute:RouterOspfRedistribute';

    /**
     * Returns true if the given object is an instance of RouterOspfRedistribute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterOspfRedistribute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterOspfRedistribute.__pulumiType;
    }

    /**
     * IP-NAT
     */
    public readonly ipNat!: pulumi.Output<number | undefined>;
    public readonly ipNatFloatingLists!: pulumi.Output<outputs.RouterOspfRedistributeIpNatFloatingList[] | undefined>;
    /**
     * OSPF default metric (OSPF metric)
     */
    public readonly metricIpNat!: pulumi.Output<number | undefined>;
    /**
     * '1': Set OSPF External Type 1 metrics; '2': Set OSPF External Type 2 metrics;
     */
    public readonly metricTypeIpNat!: pulumi.Output<string | undefined>;
    public readonly ospfLists!: pulumi.Output<outputs.RouterOspfRedistributeOspfList[] | undefined>;
    /**
     * ProcessId
     */
    public readonly processId!: pulumi.Output<string>;
    public readonly redistLists!: pulumi.Output<outputs.RouterOspfRedistributeRedistList[] | undefined>;
    /**
     * Route map reference (Pointer to route-map entries)
     */
    public readonly routeMapIpNat!: pulumi.Output<string | undefined>;
    /**
     * Set tag for routes redistributed into OSPF (32-bit tag value)
     */
    public readonly tagIpNat!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    public readonly vipFloatingLists!: pulumi.Output<outputs.RouterOspfRedistributeVipFloatingList[] | undefined>;
    public readonly vipLists!: pulumi.Output<outputs.RouterOspfRedistributeVipList[] | undefined>;

    /**
     * Create a RouterOspfRedistribute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterOspfRedistributeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterOspfRedistributeArgs | RouterOspfRedistributeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterOspfRedistributeState | undefined;
            resourceInputs["ipNat"] = state ? state.ipNat : undefined;
            resourceInputs["ipNatFloatingLists"] = state ? state.ipNatFloatingLists : undefined;
            resourceInputs["metricIpNat"] = state ? state.metricIpNat : undefined;
            resourceInputs["metricTypeIpNat"] = state ? state.metricTypeIpNat : undefined;
            resourceInputs["ospfLists"] = state ? state.ospfLists : undefined;
            resourceInputs["processId"] = state ? state.processId : undefined;
            resourceInputs["redistLists"] = state ? state.redistLists : undefined;
            resourceInputs["routeMapIpNat"] = state ? state.routeMapIpNat : undefined;
            resourceInputs["tagIpNat"] = state ? state.tagIpNat : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vipFloatingLists"] = state ? state.vipFloatingLists : undefined;
            resourceInputs["vipLists"] = state ? state.vipLists : undefined;
        } else {
            const args = argsOrState as RouterOspfRedistributeArgs | undefined;
            if ((!args || args.processId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'processId'");
            }
            resourceInputs["ipNat"] = args ? args.ipNat : undefined;
            resourceInputs["ipNatFloatingLists"] = args ? args.ipNatFloatingLists : undefined;
            resourceInputs["metricIpNat"] = args ? args.metricIpNat : undefined;
            resourceInputs["metricTypeIpNat"] = args ? args.metricTypeIpNat : undefined;
            resourceInputs["ospfLists"] = args ? args.ospfLists : undefined;
            resourceInputs["processId"] = args ? args.processId : undefined;
            resourceInputs["redistLists"] = args ? args.redistLists : undefined;
            resourceInputs["routeMapIpNat"] = args ? args.routeMapIpNat : undefined;
            resourceInputs["tagIpNat"] = args ? args.tagIpNat : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vipFloatingLists"] = args ? args.vipFloatingLists : undefined;
            resourceInputs["vipLists"] = args ? args.vipLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterOspfRedistribute.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterOspfRedistribute resources.
 */
export interface RouterOspfRedistributeState {
    /**
     * IP-NAT
     */
    ipNat?: pulumi.Input<number>;
    ipNatFloatingLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeIpNatFloatingList>[]>;
    /**
     * OSPF default metric (OSPF metric)
     */
    metricIpNat?: pulumi.Input<number>;
    /**
     * '1': Set OSPF External Type 1 metrics; '2': Set OSPF External Type 2 metrics;
     */
    metricTypeIpNat?: pulumi.Input<string>;
    ospfLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeOspfList>[]>;
    /**
     * ProcessId
     */
    processId?: pulumi.Input<string>;
    redistLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeRedistList>[]>;
    /**
     * Route map reference (Pointer to route-map entries)
     */
    routeMapIpNat?: pulumi.Input<string>;
    /**
     * Set tag for routes redistributed into OSPF (32-bit tag value)
     */
    tagIpNat?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vipFloatingLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeVipFloatingList>[]>;
    vipLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeVipList>[]>;
}

/**
 * The set of arguments for constructing a RouterOspfRedistribute resource.
 */
export interface RouterOspfRedistributeArgs {
    /**
     * IP-NAT
     */
    ipNat?: pulumi.Input<number>;
    ipNatFloatingLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeIpNatFloatingList>[]>;
    /**
     * OSPF default metric (OSPF metric)
     */
    metricIpNat?: pulumi.Input<number>;
    /**
     * '1': Set OSPF External Type 1 metrics; '2': Set OSPF External Type 2 metrics;
     */
    metricTypeIpNat?: pulumi.Input<string>;
    ospfLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeOspfList>[]>;
    /**
     * ProcessId
     */
    processId: pulumi.Input<string>;
    redistLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeRedistList>[]>;
    /**
     * Route map reference (Pointer to route-map entries)
     */
    routeMapIpNat?: pulumi.Input<string>;
    /**
     * Set tag for routes redistributed into OSPF (32-bit tag value)
     */
    tagIpNat?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vipFloatingLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeVipFloatingList>[]>;
    vipLists?: pulumi.Input<pulumi.Input<inputs.RouterOspfRedistributeVipList>[]>;
}
