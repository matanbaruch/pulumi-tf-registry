// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpnIpsec extends pulumi.CustomResource {
    /**
     * Get an existing VpnIpsec resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnIpsecState, opts?: pulumi.CustomResourceOptions): VpnIpsec {
        return new VpnIpsec(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/vpnIpsec:VpnIpsec';

    /**
     * Returns true if the given object is an instance of VpnIpsec.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnIpsec {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnIpsec.__pulumiType;
    }

    /**
     * '0': Disable Anti-Replay Window Check; '32': Window size of 32; '64': Window size of 64; '128': Window size of 128;
     * '256': Window size of 256; '512': Window size of 512; '1024': Window size of 1024; '2048': Window size of 2048; '3072':
     * Window size of 3072; '4096': Window size of 4096; '8192': Window size of 8192;
     */
    public readonly antiReplayWindow!: pulumi.Output<string | undefined>;
    public readonly bindTunnel!: pulumi.Output<outputs.VpnIpsecBindTunnel | undefined>;
    /**
     * '0': Diffie-Hellman group 0 (Default); '1': Diffie-Hellman group 1 - 768-bits; '2': Diffie-Hellman group 2 - 1024-bits;
     * '5': Diffie-Hellman group 5 - 1536-bits; '14': Diffie-Hellman group 14 - 2048-bits; '15': Diffie-Hellman group 15 -
     * 3072-bits; '16': Diffie-Hellman group 16 - 4096-bits; '18': Diffie-Hellman group 18 - 8192-bits; '19': Diffie-Hellman
     * group 19 - 256-bit Elliptic Curve; '20': Diffie-Hellman group 20 - 384-bit Elliptic Curve;
     */
    public readonly dhGroup!: pulumi.Output<string | undefined>;
    /**
     * 'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21
     * (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33
     * (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000);
     * 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF
     * (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8':
     * 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000;
     * '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25':
     * 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001;
     * '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42':
     * 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010;
     * '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59':
     * 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111;
     */
    public readonly dscp!: pulumi.Output<string | undefined>;
    public readonly encCfgs!: pulumi.Output<outputs.VpnIpsecEncCfg[] | undefined>;
    /**
     * Enforce Traffic Selector
     */
    public readonly enforceTrafficSelector!: pulumi.Output<number | undefined>;
    public readonly ipsecGateway!: pulumi.Output<outputs.VpnIpsecIpsecGateway | undefined>;
    /**
     * IPsec SA age in megabytes (0 indicates unlimited bytes)
     */
    public readonly lifebytes!: pulumi.Output<number | undefined>;
    /**
     * IPsec SA age in seconds
     */
    public readonly lifetime!: pulumi.Output<number | undefined>;
    /**
     * 'tunnel': Encapsulating the packet in IPsec tunnel mode (Default);
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * IPsec name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 'esp': Encapsulating security protocol (Default);
     */
    public readonly proto!: pulumi.Output<string | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.VpnIpsecSamplingEnable[] | undefined>;
    /**
     * Do not use incremental sequence number in the ESP header
     */
    public readonly sequenceNumberDisable!: pulumi.Output<number | undefined>;
    public readonly trafficSelector!: pulumi.Output<outputs.VpnIpsecTrafficSelector | undefined>;
    /**
     * Initiates SA negotiation to bring the IPsec connection up
     */
    public readonly up!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a VpnIpsec resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpnIpsecArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnIpsecArgs | VpnIpsecState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnIpsecState | undefined;
            resourceInputs["antiReplayWindow"] = state ? state.antiReplayWindow : undefined;
            resourceInputs["bindTunnel"] = state ? state.bindTunnel : undefined;
            resourceInputs["dhGroup"] = state ? state.dhGroup : undefined;
            resourceInputs["dscp"] = state ? state.dscp : undefined;
            resourceInputs["encCfgs"] = state ? state.encCfgs : undefined;
            resourceInputs["enforceTrafficSelector"] = state ? state.enforceTrafficSelector : undefined;
            resourceInputs["ipsecGateway"] = state ? state.ipsecGateway : undefined;
            resourceInputs["lifebytes"] = state ? state.lifebytes : undefined;
            resourceInputs["lifetime"] = state ? state.lifetime : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["proto"] = state ? state.proto : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["sequenceNumberDisable"] = state ? state.sequenceNumberDisable : undefined;
            resourceInputs["trafficSelector"] = state ? state.trafficSelector : undefined;
            resourceInputs["up"] = state ? state.up : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as VpnIpsecArgs | undefined;
            resourceInputs["antiReplayWindow"] = args ? args.antiReplayWindow : undefined;
            resourceInputs["bindTunnel"] = args ? args.bindTunnel : undefined;
            resourceInputs["dhGroup"] = args ? args.dhGroup : undefined;
            resourceInputs["dscp"] = args ? args.dscp : undefined;
            resourceInputs["encCfgs"] = args ? args.encCfgs : undefined;
            resourceInputs["enforceTrafficSelector"] = args ? args.enforceTrafficSelector : undefined;
            resourceInputs["ipsecGateway"] = args ? args.ipsecGateway : undefined;
            resourceInputs["lifebytes"] = args ? args.lifebytes : undefined;
            resourceInputs["lifetime"] = args ? args.lifetime : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["proto"] = args ? args.proto : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["sequenceNumberDisable"] = args ? args.sequenceNumberDisable : undefined;
            resourceInputs["trafficSelector"] = args ? args.trafficSelector : undefined;
            resourceInputs["up"] = args ? args.up : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpnIpsec.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpnIpsec resources.
 */
export interface VpnIpsecState {
    /**
     * '0': Disable Anti-Replay Window Check; '32': Window size of 32; '64': Window size of 64; '128': Window size of 128;
     * '256': Window size of 256; '512': Window size of 512; '1024': Window size of 1024; '2048': Window size of 2048; '3072':
     * Window size of 3072; '4096': Window size of 4096; '8192': Window size of 8192;
     */
    antiReplayWindow?: pulumi.Input<string>;
    bindTunnel?: pulumi.Input<inputs.VpnIpsecBindTunnel>;
    /**
     * '0': Diffie-Hellman group 0 (Default); '1': Diffie-Hellman group 1 - 768-bits; '2': Diffie-Hellman group 2 - 1024-bits;
     * '5': Diffie-Hellman group 5 - 1536-bits; '14': Diffie-Hellman group 14 - 2048-bits; '15': Diffie-Hellman group 15 -
     * 3072-bits; '16': Diffie-Hellman group 16 - 4096-bits; '18': Diffie-Hellman group 18 - 8192-bits; '19': Diffie-Hellman
     * group 19 - 256-bit Elliptic Curve; '20': Diffie-Hellman group 20 - 384-bit Elliptic Curve;
     */
    dhGroup?: pulumi.Input<string>;
    /**
     * 'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21
     * (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33
     * (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000);
     * 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF
     * (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8':
     * 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000;
     * '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25':
     * 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001;
     * '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42':
     * 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010;
     * '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59':
     * 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111;
     */
    dscp?: pulumi.Input<string>;
    encCfgs?: pulumi.Input<pulumi.Input<inputs.VpnIpsecEncCfg>[]>;
    /**
     * Enforce Traffic Selector
     */
    enforceTrafficSelector?: pulumi.Input<number>;
    ipsecGateway?: pulumi.Input<inputs.VpnIpsecIpsecGateway>;
    /**
     * IPsec SA age in megabytes (0 indicates unlimited bytes)
     */
    lifebytes?: pulumi.Input<number>;
    /**
     * IPsec SA age in seconds
     */
    lifetime?: pulumi.Input<number>;
    /**
     * 'tunnel': Encapsulating the packet in IPsec tunnel mode (Default);
     */
    mode?: pulumi.Input<string>;
    /**
     * IPsec name
     */
    name?: pulumi.Input<string>;
    /**
     * 'esp': Encapsulating security protocol (Default);
     */
    proto?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.VpnIpsecSamplingEnable>[]>;
    /**
     * Do not use incremental sequence number in the ESP header
     */
    sequenceNumberDisable?: pulumi.Input<number>;
    trafficSelector?: pulumi.Input<inputs.VpnIpsecTrafficSelector>;
    /**
     * Initiates SA negotiation to bring the IPsec connection up
     */
    up?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnIpsec resource.
 */
export interface VpnIpsecArgs {
    /**
     * '0': Disable Anti-Replay Window Check; '32': Window size of 32; '64': Window size of 64; '128': Window size of 128;
     * '256': Window size of 256; '512': Window size of 512; '1024': Window size of 1024; '2048': Window size of 2048; '3072':
     * Window size of 3072; '4096': Window size of 4096; '8192': Window size of 8192;
     */
    antiReplayWindow?: pulumi.Input<string>;
    bindTunnel?: pulumi.Input<inputs.VpnIpsecBindTunnel>;
    /**
     * '0': Diffie-Hellman group 0 (Default); '1': Diffie-Hellman group 1 - 768-bits; '2': Diffie-Hellman group 2 - 1024-bits;
     * '5': Diffie-Hellman group 5 - 1536-bits; '14': Diffie-Hellman group 14 - 2048-bits; '15': Diffie-Hellman group 15 -
     * 3072-bits; '16': Diffie-Hellman group 16 - 4096-bits; '18': Diffie-Hellman group 18 - 8192-bits; '19': Diffie-Hellman
     * group 19 - 256-bit Elliptic Curve; '20': Diffie-Hellman group 20 - 384-bit Elliptic Curve;
     */
    dhGroup?: pulumi.Input<string>;
    /**
     * 'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21
     * (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33
     * (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000);
     * 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF
     * (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8':
     * 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000;
     * '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25':
     * 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001;
     * '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42':
     * 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010;
     * '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59':
     * 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111;
     */
    dscp?: pulumi.Input<string>;
    encCfgs?: pulumi.Input<pulumi.Input<inputs.VpnIpsecEncCfg>[]>;
    /**
     * Enforce Traffic Selector
     */
    enforceTrafficSelector?: pulumi.Input<number>;
    ipsecGateway?: pulumi.Input<inputs.VpnIpsecIpsecGateway>;
    /**
     * IPsec SA age in megabytes (0 indicates unlimited bytes)
     */
    lifebytes?: pulumi.Input<number>;
    /**
     * IPsec SA age in seconds
     */
    lifetime?: pulumi.Input<number>;
    /**
     * 'tunnel': Encapsulating the packet in IPsec tunnel mode (Default);
     */
    mode?: pulumi.Input<string>;
    /**
     * IPsec name
     */
    name?: pulumi.Input<string>;
    /**
     * 'esp': Encapsulating security protocol (Default);
     */
    proto?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.VpnIpsecSamplingEnable>[]>;
    /**
     * Do not use incremental sequence number in the ESP header
     */
    sequenceNumberDisable?: pulumi.Input<number>;
    trafficSelector?: pulumi.Input<inputs.VpnIpsecTrafficSelector>;
    /**
     * Initiates SA negotiation to bring the IPsec connection up
     */
    up?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
