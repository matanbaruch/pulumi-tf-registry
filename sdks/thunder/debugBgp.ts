// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DebugBgp extends pulumi.CustomResource {
    /**
     * Get an existing DebugBgp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DebugBgpState, opts?: pulumi.CustomResourceOptions): DebugBgp {
        return new DebugBgp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/debugBgp:DebugBgp';

    /**
     * Returns true if the given object is an instance of DebugBgp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DebugBgp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DebugBgp.__pulumiType;
    }

    /**
     * all debugging
     */
    public readonly all!: pulumi.Output<number | undefined>;
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    public readonly bfd!: pulumi.Output<number | undefined>;
    /**
     * BGP Dampening
     */
    public readonly dampening!: pulumi.Output<number | undefined>;
    /**
     * BGP events
     */
    public readonly events!: pulumi.Output<number | undefined>;
    /**
     * BGP filters
     */
    public readonly filters!: pulumi.Output<number | undefined>;
    /**
     * BGP Finite State Machine
     */
    public readonly fsm!: pulumi.Output<number | undefined>;
    /**
     * Inbound updates
     */
    public readonly in!: pulumi.Output<number | undefined>;
    /**
     * BGP keepalives
     */
    public readonly keepalives!: pulumi.Output<number | undefined>;
    /**
     * NHT message
     */
    public readonly nht!: pulumi.Output<number | undefined>;
    /**
     * NSM message
     */
    public readonly nsm!: pulumi.Output<number | undefined>;
    /**
     * Outbound updates
     */
    public readonly out!: pulumi.Output<number | undefined>;
    /**
     * BGP updates
     */
    public readonly updates!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DebugBgp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DebugBgpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DebugBgpArgs | DebugBgpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DebugBgpState | undefined;
            resourceInputs["all"] = state ? state.all : undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["dampening"] = state ? state.dampening : undefined;
            resourceInputs["events"] = state ? state.events : undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["fsm"] = state ? state.fsm : undefined;
            resourceInputs["in"] = state ? state.in : undefined;
            resourceInputs["keepalives"] = state ? state.keepalives : undefined;
            resourceInputs["nht"] = state ? state.nht : undefined;
            resourceInputs["nsm"] = state ? state.nsm : undefined;
            resourceInputs["out"] = state ? state.out : undefined;
            resourceInputs["updates"] = state ? state.updates : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DebugBgpArgs | undefined;
            resourceInputs["all"] = args ? args.all : undefined;
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["dampening"] = args ? args.dampening : undefined;
            resourceInputs["events"] = args ? args.events : undefined;
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["fsm"] = args ? args.fsm : undefined;
            resourceInputs["in"] = args ? args.in : undefined;
            resourceInputs["keepalives"] = args ? args.keepalives : undefined;
            resourceInputs["nht"] = args ? args.nht : undefined;
            resourceInputs["nsm"] = args ? args.nsm : undefined;
            resourceInputs["out"] = args ? args.out : undefined;
            resourceInputs["updates"] = args ? args.updates : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DebugBgp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DebugBgp resources.
 */
export interface DebugBgpState {
    /**
     * all debugging
     */
    all?: pulumi.Input<number>;
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    bfd?: pulumi.Input<number>;
    /**
     * BGP Dampening
     */
    dampening?: pulumi.Input<number>;
    /**
     * BGP events
     */
    events?: pulumi.Input<number>;
    /**
     * BGP filters
     */
    filters?: pulumi.Input<number>;
    /**
     * BGP Finite State Machine
     */
    fsm?: pulumi.Input<number>;
    /**
     * Inbound updates
     */
    in?: pulumi.Input<number>;
    /**
     * BGP keepalives
     */
    keepalives?: pulumi.Input<number>;
    /**
     * NHT message
     */
    nht?: pulumi.Input<number>;
    /**
     * NSM message
     */
    nsm?: pulumi.Input<number>;
    /**
     * Outbound updates
     */
    out?: pulumi.Input<number>;
    /**
     * BGP updates
     */
    updates?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DebugBgp resource.
 */
export interface DebugBgpArgs {
    /**
     * all debugging
     */
    all?: pulumi.Input<number>;
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    bfd?: pulumi.Input<number>;
    /**
     * BGP Dampening
     */
    dampening?: pulumi.Input<number>;
    /**
     * BGP events
     */
    events?: pulumi.Input<number>;
    /**
     * BGP filters
     */
    filters?: pulumi.Input<number>;
    /**
     * BGP Finite State Machine
     */
    fsm?: pulumi.Input<number>;
    /**
     * Inbound updates
     */
    in?: pulumi.Input<number>;
    /**
     * BGP keepalives
     */
    keepalives?: pulumi.Input<number>;
    /**
     * NHT message
     */
    nht?: pulumi.Input<number>;
    /**
     * NSM message
     */
    nsm?: pulumi.Input<number>;
    /**
     * Outbound updates
     */
    out?: pulumi.Input<number>;
    /**
     * BGP updates
     */
    updates?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
