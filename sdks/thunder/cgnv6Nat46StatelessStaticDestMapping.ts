// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Cgnv6Nat46StatelessStaticDestMapping extends pulumi.CustomResource {
    /**
     * Get an existing Cgnv6Nat46StatelessStaticDestMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Cgnv6Nat46StatelessStaticDestMappingState, opts?: pulumi.CustomResourceOptions): Cgnv6Nat46StatelessStaticDestMapping {
        return new Cgnv6Nat46StatelessStaticDestMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cgnv6Nat46StatelessStaticDestMapping:Cgnv6Nat46StatelessStaticDestMapping';

    /**
     * Returns true if the given object is an instance of Cgnv6Nat46StatelessStaticDestMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cgnv6Nat46StatelessStaticDestMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cgnv6Nat46StatelessStaticDestMapping.__pulumiType;
    }

    /**
     * Set number of consecutive mappings (Number of mappings)
     */
    public readonly count1!: pulumi.Output<number | undefined>;
    /**
     * Share/Expose this mapping with other partitions
     */
    public readonly shared!: pulumi.Output<number | undefined>;
    /**
     * Send NATed traffic through shared partition
     */
    public readonly toShared!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * IPv4 address
     */
    public readonly v4Address!: pulumi.Output<string>;
    /**
     * IPv6 address
     */
    public readonly v6Address!: pulumi.Output<string>;
    /**
     * VRRP-A vrid (Specify ha VRRP-A vrid)
     */
    public readonly vrid!: pulumi.Output<number | undefined>;

    /**
     * Create a Cgnv6Nat46StatelessStaticDestMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Cgnv6Nat46StatelessStaticDestMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Cgnv6Nat46StatelessStaticDestMappingArgs | Cgnv6Nat46StatelessStaticDestMappingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Cgnv6Nat46StatelessStaticDestMappingState | undefined;
            resourceInputs["count1"] = state ? state.count1 : undefined;
            resourceInputs["shared"] = state ? state.shared : undefined;
            resourceInputs["toShared"] = state ? state.toShared : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["v4Address"] = state ? state.v4Address : undefined;
            resourceInputs["v6Address"] = state ? state.v6Address : undefined;
            resourceInputs["vrid"] = state ? state.vrid : undefined;
        } else {
            const args = argsOrState as Cgnv6Nat46StatelessStaticDestMappingArgs | undefined;
            if ((!args || args.v4Address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'v4Address'");
            }
            if ((!args || args.v6Address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'v6Address'");
            }
            resourceInputs["count1"] = args ? args.count1 : undefined;
            resourceInputs["shared"] = args ? args.shared : undefined;
            resourceInputs["toShared"] = args ? args.toShared : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["v4Address"] = args ? args.v4Address : undefined;
            resourceInputs["v6Address"] = args ? args.v6Address : undefined;
            resourceInputs["vrid"] = args ? args.vrid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cgnv6Nat46StatelessStaticDestMapping.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cgnv6Nat46StatelessStaticDestMapping resources.
 */
export interface Cgnv6Nat46StatelessStaticDestMappingState {
    /**
     * Set number of consecutive mappings (Number of mappings)
     */
    count1?: pulumi.Input<number>;
    /**
     * Share/Expose this mapping with other partitions
     */
    shared?: pulumi.Input<number>;
    /**
     * Send NATed traffic through shared partition
     */
    toShared?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * IPv4 address
     */
    v4Address?: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    v6Address?: pulumi.Input<string>;
    /**
     * VRRP-A vrid (Specify ha VRRP-A vrid)
     */
    vrid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Cgnv6Nat46StatelessStaticDestMapping resource.
 */
export interface Cgnv6Nat46StatelessStaticDestMappingArgs {
    /**
     * Set number of consecutive mappings (Number of mappings)
     */
    count1?: pulumi.Input<number>;
    /**
     * Share/Expose this mapping with other partitions
     */
    shared?: pulumi.Input<number>;
    /**
     * Send NATed traffic through shared partition
     */
    toShared?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * IPv4 address
     */
    v4Address: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    v6Address: pulumi.Input<string>;
    /**
     * VRRP-A vrid (Specify ha VRRP-A vrid)
     */
    vrid?: pulumi.Input<number>;
}
