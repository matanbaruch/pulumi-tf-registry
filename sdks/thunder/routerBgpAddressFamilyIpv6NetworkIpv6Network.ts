// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RouterBgpAddressFamilyIpv6NetworkIpv6Network extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgpAddressFamilyIpv6NetworkIpv6Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpAddressFamilyIpv6NetworkIpv6NetworkState, opts?: pulumi.CustomResourceOptions): RouterBgpAddressFamilyIpv6NetworkIpv6Network {
        return new RouterBgpAddressFamilyIpv6NetworkIpv6Network(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/routerBgpAddressFamilyIpv6NetworkIpv6Network:RouterBgpAddressFamilyIpv6NetworkIpv6Network';

    /**
     * Returns true if the given object is an instance of RouterBgpAddressFamilyIpv6NetworkIpv6Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgpAddressFamilyIpv6NetworkIpv6Network {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgpAddressFamilyIpv6NetworkIpv6Network.__pulumiType;
    }

    /**
     * AsNumber
     */
    public readonly asNumber!: pulumi.Output<string>;
    /**
     * Specify a BGP backdoor route
     */
    public readonly backdoor!: pulumi.Output<number | undefined>;
    /**
     * community value in the format 1-4294967295|AA:NN|internet|local-AS|no-advertise|no-export
     */
    public readonly commValue!: pulumi.Output<string | undefined>;
    /**
     * Network specific description (Up to 80 characters describing this network)
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Large community value in the format XX:YY:ZZ
     */
    public readonly lcommValue!: pulumi.Output<string | undefined>;
    /**
     * Specify a network to announce via BGP
     */
    public readonly networkIpv6!: pulumi.Output<string>;
    /**
     * Route-map to modify the attributes (Name of the route map)
     */
    public readonly routeMap!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a RouterBgpAddressFamilyIpv6NetworkIpv6Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterBgpAddressFamilyIpv6NetworkIpv6NetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpAddressFamilyIpv6NetworkIpv6NetworkArgs | RouterBgpAddressFamilyIpv6NetworkIpv6NetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpAddressFamilyIpv6NetworkIpv6NetworkState | undefined;
            resourceInputs["asNumber"] = state ? state.asNumber : undefined;
            resourceInputs["backdoor"] = state ? state.backdoor : undefined;
            resourceInputs["commValue"] = state ? state.commValue : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lcommValue"] = state ? state.lcommValue : undefined;
            resourceInputs["networkIpv6"] = state ? state.networkIpv6 : undefined;
            resourceInputs["routeMap"] = state ? state.routeMap : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as RouterBgpAddressFamilyIpv6NetworkIpv6NetworkArgs | undefined;
            if ((!args || args.asNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asNumber'");
            }
            if ((!args || args.networkIpv6 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkIpv6'");
            }
            resourceInputs["asNumber"] = args ? args.asNumber : undefined;
            resourceInputs["backdoor"] = args ? args.backdoor : undefined;
            resourceInputs["commValue"] = args ? args.commValue : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["lcommValue"] = args ? args.lcommValue : undefined;
            resourceInputs["networkIpv6"] = args ? args.networkIpv6 : undefined;
            resourceInputs["routeMap"] = args ? args.routeMap : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgpAddressFamilyIpv6NetworkIpv6Network.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgpAddressFamilyIpv6NetworkIpv6Network resources.
 */
export interface RouterBgpAddressFamilyIpv6NetworkIpv6NetworkState {
    /**
     * AsNumber
     */
    asNumber?: pulumi.Input<string>;
    /**
     * Specify a BGP backdoor route
     */
    backdoor?: pulumi.Input<number>;
    /**
     * community value in the format 1-4294967295|AA:NN|internet|local-AS|no-advertise|no-export
     */
    commValue?: pulumi.Input<string>;
    /**
     * Network specific description (Up to 80 characters describing this network)
     */
    description?: pulumi.Input<string>;
    /**
     * Large community value in the format XX:YY:ZZ
     */
    lcommValue?: pulumi.Input<string>;
    /**
     * Specify a network to announce via BGP
     */
    networkIpv6?: pulumi.Input<string>;
    /**
     * Route-map to modify the attributes (Name of the route map)
     */
    routeMap?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterBgpAddressFamilyIpv6NetworkIpv6Network resource.
 */
export interface RouterBgpAddressFamilyIpv6NetworkIpv6NetworkArgs {
    /**
     * AsNumber
     */
    asNumber: pulumi.Input<string>;
    /**
     * Specify a BGP backdoor route
     */
    backdoor?: pulumi.Input<number>;
    /**
     * community value in the format 1-4294967295|AA:NN|internet|local-AS|no-advertise|no-export
     */
    commValue?: pulumi.Input<string>;
    /**
     * Network specific description (Up to 80 characters describing this network)
     */
    description?: pulumi.Input<string>;
    /**
     * Large community value in the format XX:YY:ZZ
     */
    lcommValue?: pulumi.Input<string>;
    /**
     * Specify a network to announce via BGP
     */
    networkIpv6: pulumi.Input<string>;
    /**
     * Route-map to modify the attributes (Name of the route map)
     */
    routeMap?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
