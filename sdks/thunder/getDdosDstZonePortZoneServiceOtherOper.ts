// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDdosDstZonePortZoneServiceOtherOper(args: GetDdosDstZonePortZoneServiceOtherOperArgs, opts?: pulumi.InvokeOptions): Promise<GetDdosDstZonePortZoneServiceOtherOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getDdosDstZonePortZoneServiceOtherOper:getDdosDstZonePortZoneServiceOtherOper", {
        "id": args.id,
        "ipFilteringPolicyOper": args.ipFilteringPolicyOper,
        "oper": args.oper,
        "patternRecognition": args.patternRecognition,
        "patternRecognitionPuDetails": args.patternRecognitionPuDetails,
        "portInd": args.portInd,
        "portOther": args.portOther,
        "progressionTracking": args.progressionTracking,
        "protocol": args.protocol,
        "topkDestinations": args.topkDestinations,
        "topkSources": args.topkSources,
        "zoneName": args.zoneName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDdosDstZonePortZoneServiceOtherOper.
 */
export interface GetDdosDstZonePortZoneServiceOtherOperArgs {
    id?: string;
    ipFilteringPolicyOper?: inputs.GetDdosDstZonePortZoneServiceOtherOperIpFilteringPolicyOper;
    oper?: inputs.GetDdosDstZonePortZoneServiceOtherOperOper;
    patternRecognition?: inputs.GetDdosDstZonePortZoneServiceOtherOperPatternRecognition;
    patternRecognitionPuDetails?: inputs.GetDdosDstZonePortZoneServiceOtherOperPatternRecognitionPuDetails;
    portInd?: inputs.GetDdosDstZonePortZoneServiceOtherOperPortInd;
    portOther: string;
    progressionTracking?: inputs.GetDdosDstZonePortZoneServiceOtherOperProgressionTracking;
    protocol: string;
    topkDestinations?: inputs.GetDdosDstZonePortZoneServiceOtherOperTopkDestinations;
    topkSources?: inputs.GetDdosDstZonePortZoneServiceOtherOperTopkSources;
    zoneName: string;
}

/**
 * A collection of values returned by getDdosDstZonePortZoneServiceOtherOper.
 */
export interface GetDdosDstZonePortZoneServiceOtherOperResult {
    readonly id: string;
    readonly ipFilteringPolicyOper?: outputs.GetDdosDstZonePortZoneServiceOtherOperIpFilteringPolicyOper;
    readonly oper?: outputs.GetDdosDstZonePortZoneServiceOtherOperOper;
    readonly patternRecognition?: outputs.GetDdosDstZonePortZoneServiceOtherOperPatternRecognition;
    readonly patternRecognitionPuDetails?: outputs.GetDdosDstZonePortZoneServiceOtherOperPatternRecognitionPuDetails;
    readonly portInd?: outputs.GetDdosDstZonePortZoneServiceOtherOperPortInd;
    readonly portOther: string;
    readonly progressionTracking?: outputs.GetDdosDstZonePortZoneServiceOtherOperProgressionTracking;
    readonly protocol: string;
    readonly topkDestinations?: outputs.GetDdosDstZonePortZoneServiceOtherOperTopkDestinations;
    readonly topkSources?: outputs.GetDdosDstZonePortZoneServiceOtherOperTopkSources;
    readonly zoneName: string;
}
export function getDdosDstZonePortZoneServiceOtherOperOutput(args: GetDdosDstZonePortZoneServiceOtherOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDdosDstZonePortZoneServiceOtherOperResult> {
    return pulumi.output(args).apply((a: any) => getDdosDstZonePortZoneServiceOtherOper(a, opts))
}

/**
 * A collection of arguments for invoking getDdosDstZonePortZoneServiceOtherOper.
 */
export interface GetDdosDstZonePortZoneServiceOtherOperOutputArgs {
    id?: pulumi.Input<string>;
    ipFilteringPolicyOper?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperIpFilteringPolicyOperArgs>;
    oper?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperOperArgs>;
    patternRecognition?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperPatternRecognitionArgs>;
    patternRecognitionPuDetails?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperPatternRecognitionPuDetailsArgs>;
    portInd?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperPortIndArgs>;
    portOther: pulumi.Input<string>;
    progressionTracking?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperProgressionTrackingArgs>;
    protocol: pulumi.Input<string>;
    topkDestinations?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperTopkDestinationsArgs>;
    topkSources?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOtherOperTopkSourcesArgs>;
    zoneName: pulumi.Input<string>;
}
