// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TemplateGtpFilteringPolicy extends pulumi.CustomResource {
    /**
     * Get an existing TemplateGtpFilteringPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateGtpFilteringPolicyState, opts?: pulumi.CustomResourceOptions): TemplateGtpFilteringPolicy {
        return new TemplateGtpFilteringPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/templateGtpFilteringPolicy:TemplateGtpFilteringPolicy';

    /**
     * Returns true if the given object is an instance of TemplateGtpFilteringPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateGtpFilteringPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateGtpFilteringPolicy.__pulumiType;
    }

    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    public readonly apnImsiFiltAction!: pulumi.Output<string | undefined>;
    /**
     * Specify the APN IMSI Inspection Policy
     */
    public readonly apnImsiFiltering!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    public readonly gtpInGtpFiltAction!: pulumi.Output<string | undefined>;
    /**
     * 'enable': Enable GTP-in-GTP Filtering; 'disable': Disable GTP-in-GTP Filtering;
     */
    public readonly gtpInGtpFiltering!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    public readonly messageFiltAction!: pulumi.Output<string | undefined>;
    /**
     * Specify the Message Filtering Policy
     */
    public readonly messageFilteringPolicyName!: pulumi.Output<string | undefined>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    public readonly msisdnFiltAction!: pulumi.Output<string | undefined>;
    /**
     * Specify the MSISDN Inspection Policy
     */
    public readonly msisdnFiltering!: pulumi.Output<string | undefined>;
    /**
     * Specify name of the GTP Filtering Policy
     */
    public readonly name!: pulumi.Output<string>;
    public readonly ratTypeFilterings!: pulumi.Output<outputs.TemplateGtpFilteringPolicyRatTypeFiltering[] | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a TemplateGtpFilteringPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TemplateGtpFilteringPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateGtpFilteringPolicyArgs | TemplateGtpFilteringPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateGtpFilteringPolicyState | undefined;
            resourceInputs["apnImsiFiltAction"] = state ? state.apnImsiFiltAction : undefined;
            resourceInputs["apnImsiFiltering"] = state ? state.apnImsiFiltering : undefined;
            resourceInputs["gtpInGtpFiltAction"] = state ? state.gtpInGtpFiltAction : undefined;
            resourceInputs["gtpInGtpFiltering"] = state ? state.gtpInGtpFiltering : undefined;
            resourceInputs["messageFiltAction"] = state ? state.messageFiltAction : undefined;
            resourceInputs["messageFilteringPolicyName"] = state ? state.messageFilteringPolicyName : undefined;
            resourceInputs["msisdnFiltAction"] = state ? state.msisdnFiltAction : undefined;
            resourceInputs["msisdnFiltering"] = state ? state.msisdnFiltering : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ratTypeFilterings"] = state ? state.ratTypeFilterings : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as TemplateGtpFilteringPolicyArgs | undefined;
            resourceInputs["apnImsiFiltAction"] = args ? args.apnImsiFiltAction : undefined;
            resourceInputs["apnImsiFiltering"] = args ? args.apnImsiFiltering : undefined;
            resourceInputs["gtpInGtpFiltAction"] = args ? args.gtpInGtpFiltAction : undefined;
            resourceInputs["gtpInGtpFiltering"] = args ? args.gtpInGtpFiltering : undefined;
            resourceInputs["messageFiltAction"] = args ? args.messageFiltAction : undefined;
            resourceInputs["messageFilteringPolicyName"] = args ? args.messageFilteringPolicyName : undefined;
            resourceInputs["msisdnFiltAction"] = args ? args.msisdnFiltAction : undefined;
            resourceInputs["msisdnFiltering"] = args ? args.msisdnFiltering : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ratTypeFilterings"] = args ? args.ratTypeFilterings : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateGtpFilteringPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TemplateGtpFilteringPolicy resources.
 */
export interface TemplateGtpFilteringPolicyState {
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    apnImsiFiltAction?: pulumi.Input<string>;
    /**
     * Specify the APN IMSI Inspection Policy
     */
    apnImsiFiltering?: pulumi.Input<string>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    gtpInGtpFiltAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable GTP-in-GTP Filtering; 'disable': Disable GTP-in-GTP Filtering;
     */
    gtpInGtpFiltering?: pulumi.Input<string>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    messageFiltAction?: pulumi.Input<string>;
    /**
     * Specify the Message Filtering Policy
     */
    messageFilteringPolicyName?: pulumi.Input<string>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    msisdnFiltAction?: pulumi.Input<string>;
    /**
     * Specify the MSISDN Inspection Policy
     */
    msisdnFiltering?: pulumi.Input<string>;
    /**
     * Specify name of the GTP Filtering Policy
     */
    name?: pulumi.Input<string>;
    ratTypeFilterings?: pulumi.Input<pulumi.Input<inputs.TemplateGtpFilteringPolicyRatTypeFiltering>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TemplateGtpFilteringPolicy resource.
 */
export interface TemplateGtpFilteringPolicyArgs {
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    apnImsiFiltAction?: pulumi.Input<string>;
    /**
     * Specify the APN IMSI Inspection Policy
     */
    apnImsiFiltering?: pulumi.Input<string>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    gtpInGtpFiltAction?: pulumi.Input<string>;
    /**
     * 'enable': Enable GTP-in-GTP Filtering; 'disable': Disable GTP-in-GTP Filtering;
     */
    gtpInGtpFiltering?: pulumi.Input<string>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    messageFiltAction?: pulumi.Input<string>;
    /**
     * Specify the Message Filtering Policy
     */
    messageFilteringPolicyName?: pulumi.Input<string>;
    /**
     * 'monitor': Forward packet; 'drop': drop packet (default);
     */
    msisdnFiltAction?: pulumi.Input<string>;
    /**
     * Specify the MSISDN Inspection Policy
     */
    msisdnFiltering?: pulumi.Input<string>;
    /**
     * Specify name of the GTP Filtering Policy
     */
    name?: pulumi.Input<string>;
    ratTypeFilterings?: pulumi.Input<pulumi.Input<inputs.TemplateGtpFilteringPolicyRatTypeFiltering>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
