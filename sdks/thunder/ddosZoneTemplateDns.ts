// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DdosZoneTemplateDns extends pulumi.CustomResource {
    /**
     * Get an existing DdosZoneTemplateDns resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosZoneTemplateDnsState, opts?: pulumi.CustomResourceOptions): DdosZoneTemplateDns {
        return new DdosZoneTemplateDns(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosZoneTemplateDns:DdosZoneTemplateDns';

    /**
     * Returns true if the given object is an instance of DdosZoneTemplateDns.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosZoneTemplateDns {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosZoneTemplateDns.__pulumiType;
    }

    public readonly allowQueryClass!: pulumi.Output<outputs.DdosZoneTemplateDnsAllowQueryClass | undefined>;
    public readonly allowRecordType!: pulumi.Output<outputs.DdosZoneTemplateDnsAllowRecordType | undefined>;
    /**
     * Drop DNS queries of Type ANY
     */
    public readonly dnsAnyCheck!: pulumi.Output<number | undefined>;
    /**
     * 'drop': Drop packets (Default); 'ignore': Take no action; 'blacklist-src': Blacklist-src; 'reset': Reset client
     * connection;
     */
    public readonly dnsAnyCheckAction!: pulumi.Output<string | undefined>;
    /**
     * Configure action-list to take
     */
    public readonly dnsAnyCheckActionListName!: pulumi.Output<string | undefined>;
    public readonly dnsUdpAuthentication!: pulumi.Output<outputs.DdosZoneTemplateDnsDnsUdpAuthentication | undefined>;
    /**
     * Apply a domain-group to the DNS template
     */
    public readonly domainGroupName!: pulumi.Output<string | undefined>;
    public readonly dst!: pulumi.Output<outputs.DdosZoneTemplateDnsDst | undefined>;
    public readonly fqdnLabelCountCfg!: pulumi.Output<outputs.DdosZoneTemplateDnsFqdnLabelCountCfg | undefined>;
    public readonly fqdnLabelLenCfgs!: pulumi.Output<outputs.DdosZoneTemplateDnsFqdnLabelLenCfg[] | undefined>;
    public readonly malformedQueryCheck!: pulumi.Output<outputs.DdosZoneTemplateDnsMalformedQueryCheck | undefined>;
    public readonly multiPuThresholdDistribution!: pulumi.Output<outputs.DdosZoneTemplateDnsMultiPuThresholdDistribution | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * 'permit': permit; 'deny': deny (default);
     */
    public readonly onNoMatch!: pulumi.Output<string | undefined>;
    public readonly src!: pulumi.Output<outputs.DdosZoneTemplateDnsSrc | undefined>;
    public readonly symtimeoutCfg!: pulumi.Output<outputs.DdosZoneTemplateDnsSymtimeoutCfg | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DdosZoneTemplateDns resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DdosZoneTemplateDnsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosZoneTemplateDnsArgs | DdosZoneTemplateDnsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosZoneTemplateDnsState | undefined;
            resourceInputs["allowQueryClass"] = state ? state.allowQueryClass : undefined;
            resourceInputs["allowRecordType"] = state ? state.allowRecordType : undefined;
            resourceInputs["dnsAnyCheck"] = state ? state.dnsAnyCheck : undefined;
            resourceInputs["dnsAnyCheckAction"] = state ? state.dnsAnyCheckAction : undefined;
            resourceInputs["dnsAnyCheckActionListName"] = state ? state.dnsAnyCheckActionListName : undefined;
            resourceInputs["dnsUdpAuthentication"] = state ? state.dnsUdpAuthentication : undefined;
            resourceInputs["domainGroupName"] = state ? state.domainGroupName : undefined;
            resourceInputs["dst"] = state ? state.dst : undefined;
            resourceInputs["fqdnLabelCountCfg"] = state ? state.fqdnLabelCountCfg : undefined;
            resourceInputs["fqdnLabelLenCfgs"] = state ? state.fqdnLabelLenCfgs : undefined;
            resourceInputs["malformedQueryCheck"] = state ? state.malformedQueryCheck : undefined;
            resourceInputs["multiPuThresholdDistribution"] = state ? state.multiPuThresholdDistribution : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onNoMatch"] = state ? state.onNoMatch : undefined;
            resourceInputs["src"] = state ? state.src : undefined;
            resourceInputs["symtimeoutCfg"] = state ? state.symtimeoutCfg : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DdosZoneTemplateDnsArgs | undefined;
            resourceInputs["allowQueryClass"] = args ? args.allowQueryClass : undefined;
            resourceInputs["allowRecordType"] = args ? args.allowRecordType : undefined;
            resourceInputs["dnsAnyCheck"] = args ? args.dnsAnyCheck : undefined;
            resourceInputs["dnsAnyCheckAction"] = args ? args.dnsAnyCheckAction : undefined;
            resourceInputs["dnsAnyCheckActionListName"] = args ? args.dnsAnyCheckActionListName : undefined;
            resourceInputs["dnsUdpAuthentication"] = args ? args.dnsUdpAuthentication : undefined;
            resourceInputs["domainGroupName"] = args ? args.domainGroupName : undefined;
            resourceInputs["dst"] = args ? args.dst : undefined;
            resourceInputs["fqdnLabelCountCfg"] = args ? args.fqdnLabelCountCfg : undefined;
            resourceInputs["fqdnLabelLenCfgs"] = args ? args.fqdnLabelLenCfgs : undefined;
            resourceInputs["malformedQueryCheck"] = args ? args.malformedQueryCheck : undefined;
            resourceInputs["multiPuThresholdDistribution"] = args ? args.multiPuThresholdDistribution : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onNoMatch"] = args ? args.onNoMatch : undefined;
            resourceInputs["src"] = args ? args.src : undefined;
            resourceInputs["symtimeoutCfg"] = args ? args.symtimeoutCfg : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosZoneTemplateDns.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosZoneTemplateDns resources.
 */
export interface DdosZoneTemplateDnsState {
    allowQueryClass?: pulumi.Input<inputs.DdosZoneTemplateDnsAllowQueryClass>;
    allowRecordType?: pulumi.Input<inputs.DdosZoneTemplateDnsAllowRecordType>;
    /**
     * Drop DNS queries of Type ANY
     */
    dnsAnyCheck?: pulumi.Input<number>;
    /**
     * 'drop': Drop packets (Default); 'ignore': Take no action; 'blacklist-src': Blacklist-src; 'reset': Reset client
     * connection;
     */
    dnsAnyCheckAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take
     */
    dnsAnyCheckActionListName?: pulumi.Input<string>;
    dnsUdpAuthentication?: pulumi.Input<inputs.DdosZoneTemplateDnsDnsUdpAuthentication>;
    /**
     * Apply a domain-group to the DNS template
     */
    domainGroupName?: pulumi.Input<string>;
    dst?: pulumi.Input<inputs.DdosZoneTemplateDnsDst>;
    fqdnLabelCountCfg?: pulumi.Input<inputs.DdosZoneTemplateDnsFqdnLabelCountCfg>;
    fqdnLabelLenCfgs?: pulumi.Input<pulumi.Input<inputs.DdosZoneTemplateDnsFqdnLabelLenCfg>[]>;
    malformedQueryCheck?: pulumi.Input<inputs.DdosZoneTemplateDnsMalformedQueryCheck>;
    multiPuThresholdDistribution?: pulumi.Input<inputs.DdosZoneTemplateDnsMultiPuThresholdDistribution>;
    name?: pulumi.Input<string>;
    /**
     * 'permit': permit; 'deny': deny (default);
     */
    onNoMatch?: pulumi.Input<string>;
    src?: pulumi.Input<inputs.DdosZoneTemplateDnsSrc>;
    symtimeoutCfg?: pulumi.Input<inputs.DdosZoneTemplateDnsSymtimeoutCfg>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosZoneTemplateDns resource.
 */
export interface DdosZoneTemplateDnsArgs {
    allowQueryClass?: pulumi.Input<inputs.DdosZoneTemplateDnsAllowQueryClass>;
    allowRecordType?: pulumi.Input<inputs.DdosZoneTemplateDnsAllowRecordType>;
    /**
     * Drop DNS queries of Type ANY
     */
    dnsAnyCheck?: pulumi.Input<number>;
    /**
     * 'drop': Drop packets (Default); 'ignore': Take no action; 'blacklist-src': Blacklist-src; 'reset': Reset client
     * connection;
     */
    dnsAnyCheckAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take
     */
    dnsAnyCheckActionListName?: pulumi.Input<string>;
    dnsUdpAuthentication?: pulumi.Input<inputs.DdosZoneTemplateDnsDnsUdpAuthentication>;
    /**
     * Apply a domain-group to the DNS template
     */
    domainGroupName?: pulumi.Input<string>;
    dst?: pulumi.Input<inputs.DdosZoneTemplateDnsDst>;
    fqdnLabelCountCfg?: pulumi.Input<inputs.DdosZoneTemplateDnsFqdnLabelCountCfg>;
    fqdnLabelLenCfgs?: pulumi.Input<pulumi.Input<inputs.DdosZoneTemplateDnsFqdnLabelLenCfg>[]>;
    malformedQueryCheck?: pulumi.Input<inputs.DdosZoneTemplateDnsMalformedQueryCheck>;
    multiPuThresholdDistribution?: pulumi.Input<inputs.DdosZoneTemplateDnsMultiPuThresholdDistribution>;
    name?: pulumi.Input<string>;
    /**
     * 'permit': permit; 'deny': deny (default);
     */
    onNoMatch?: pulumi.Input<string>;
    src?: pulumi.Input<inputs.DdosZoneTemplateDnsSrc>;
    symtimeoutCfg?: pulumi.Input<inputs.DdosZoneTemplateDnsSymtimeoutCfg>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
