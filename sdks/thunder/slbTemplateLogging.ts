// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SlbTemplateLogging extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplateLogging resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplateLoggingState, opts?: pulumi.CustomResourceOptions): SlbTemplateLogging {
        return new SlbTemplateLogging(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplateLogging:SlbTemplateLogging';

    /**
     * Returns true if the given object is an instance of SlbTemplateLogging.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplateLogging {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplateLogging.__pulumiType;
    }

    /**
     * 'auto': Configure auto NAT for logging, default is auto enabled;
     */
    public readonly auto!: pulumi.Output<string | undefined>;
    /**
     * Specify a format string for web logging (format string(less than 250 characters) for web logging)
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * Number of unmasked characters at the end (default: 0)
     */
    public readonly keepEnd!: pulumi.Output<number | undefined>;
    /**
     * Number of unmasked characters at the beginning (default: 0)
     */
    public readonly keepStart!: pulumi.Output<number | undefined>;
    /**
     * 1 to enable local logging (1 to enable local logging, default 0)
     */
    public readonly localLogging!: pulumi.Output<number | undefined>;
    /**
     * Character to mask the matched pattern (default: X)
     */
    public readonly mask!: pulumi.Output<string | undefined>;
    /**
     * Logging Template Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Mask matched PCRE pattern in the log
     */
    public readonly pcreMask!: pulumi.Output<string | undefined>;
    /**
     * Specify NAT pool or pool group
     */
    public readonly pool!: pulumi.Output<string | undefined>;
    /**
     * Specify NAT pool or pool group
     */
    public readonly poolShared!: pulumi.Output<string | undefined>;
    /**
     * Bind a Service Group to the logging template (Service Group Name)
     */
    public readonly serviceGroup!: pulumi.Output<string | undefined>;
    /**
     * Reference a NAT pool or pool group from shared partition
     */
    public readonly sharedPartitionPool!: pulumi.Output<number | undefined>;
    /**
     * Reference a TCP Proxy template from shared partition
     */
    public readonly sharedPartitionTcpProxyTemplate!: pulumi.Output<number | undefined>;
    /**
     * TCP Proxy Template Name
     */
    public readonly tcpProxy!: pulumi.Output<string | undefined>;
    /**
     * TCP Proxy Template name
     */
    public readonly templateTcpProxyShared!: pulumi.Output<string | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SlbTemplateLogging resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplateLoggingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplateLoggingArgs | SlbTemplateLoggingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplateLoggingState | undefined;
            resourceInputs["auto"] = state ? state.auto : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["keepEnd"] = state ? state.keepEnd : undefined;
            resourceInputs["keepStart"] = state ? state.keepStart : undefined;
            resourceInputs["localLogging"] = state ? state.localLogging : undefined;
            resourceInputs["mask"] = state ? state.mask : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pcreMask"] = state ? state.pcreMask : undefined;
            resourceInputs["pool"] = state ? state.pool : undefined;
            resourceInputs["poolShared"] = state ? state.poolShared : undefined;
            resourceInputs["serviceGroup"] = state ? state.serviceGroup : undefined;
            resourceInputs["sharedPartitionPool"] = state ? state.sharedPartitionPool : undefined;
            resourceInputs["sharedPartitionTcpProxyTemplate"] = state ? state.sharedPartitionTcpProxyTemplate : undefined;
            resourceInputs["tcpProxy"] = state ? state.tcpProxy : undefined;
            resourceInputs["templateTcpProxyShared"] = state ? state.templateTcpProxyShared : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SlbTemplateLoggingArgs | undefined;
            resourceInputs["auto"] = args ? args.auto : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["keepEnd"] = args ? args.keepEnd : undefined;
            resourceInputs["keepStart"] = args ? args.keepStart : undefined;
            resourceInputs["localLogging"] = args ? args.localLogging : undefined;
            resourceInputs["mask"] = args ? args.mask : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pcreMask"] = args ? args.pcreMask : undefined;
            resourceInputs["pool"] = args ? args.pool : undefined;
            resourceInputs["poolShared"] = args ? args.poolShared : undefined;
            resourceInputs["serviceGroup"] = args ? args.serviceGroup : undefined;
            resourceInputs["sharedPartitionPool"] = args ? args.sharedPartitionPool : undefined;
            resourceInputs["sharedPartitionTcpProxyTemplate"] = args ? args.sharedPartitionTcpProxyTemplate : undefined;
            resourceInputs["tcpProxy"] = args ? args.tcpProxy : undefined;
            resourceInputs["templateTcpProxyShared"] = args ? args.templateTcpProxyShared : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplateLogging.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplateLogging resources.
 */
export interface SlbTemplateLoggingState {
    /**
     * 'auto': Configure auto NAT for logging, default is auto enabled;
     */
    auto?: pulumi.Input<string>;
    /**
     * Specify a format string for web logging (format string(less than 250 characters) for web logging)
     */
    format?: pulumi.Input<string>;
    /**
     * Number of unmasked characters at the end (default: 0)
     */
    keepEnd?: pulumi.Input<number>;
    /**
     * Number of unmasked characters at the beginning (default: 0)
     */
    keepStart?: pulumi.Input<number>;
    /**
     * 1 to enable local logging (1 to enable local logging, default 0)
     */
    localLogging?: pulumi.Input<number>;
    /**
     * Character to mask the matched pattern (default: X)
     */
    mask?: pulumi.Input<string>;
    /**
     * Logging Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Mask matched PCRE pattern in the log
     */
    pcreMask?: pulumi.Input<string>;
    /**
     * Specify NAT pool or pool group
     */
    pool?: pulumi.Input<string>;
    /**
     * Specify NAT pool or pool group
     */
    poolShared?: pulumi.Input<string>;
    /**
     * Bind a Service Group to the logging template (Service Group Name)
     */
    serviceGroup?: pulumi.Input<string>;
    /**
     * Reference a NAT pool or pool group from shared partition
     */
    sharedPartitionPool?: pulumi.Input<number>;
    /**
     * Reference a TCP Proxy template from shared partition
     */
    sharedPartitionTcpProxyTemplate?: pulumi.Input<number>;
    /**
     * TCP Proxy Template Name
     */
    tcpProxy?: pulumi.Input<string>;
    /**
     * TCP Proxy Template name
     */
    templateTcpProxyShared?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbTemplateLogging resource.
 */
export interface SlbTemplateLoggingArgs {
    /**
     * 'auto': Configure auto NAT for logging, default is auto enabled;
     */
    auto?: pulumi.Input<string>;
    /**
     * Specify a format string for web logging (format string(less than 250 characters) for web logging)
     */
    format?: pulumi.Input<string>;
    /**
     * Number of unmasked characters at the end (default: 0)
     */
    keepEnd?: pulumi.Input<number>;
    /**
     * Number of unmasked characters at the beginning (default: 0)
     */
    keepStart?: pulumi.Input<number>;
    /**
     * 1 to enable local logging (1 to enable local logging, default 0)
     */
    localLogging?: pulumi.Input<number>;
    /**
     * Character to mask the matched pattern (default: X)
     */
    mask?: pulumi.Input<string>;
    /**
     * Logging Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Mask matched PCRE pattern in the log
     */
    pcreMask?: pulumi.Input<string>;
    /**
     * Specify NAT pool or pool group
     */
    pool?: pulumi.Input<string>;
    /**
     * Specify NAT pool or pool group
     */
    poolShared?: pulumi.Input<string>;
    /**
     * Bind a Service Group to the logging template (Service Group Name)
     */
    serviceGroup?: pulumi.Input<string>;
    /**
     * Reference a NAT pool or pool group from shared partition
     */
    sharedPartitionPool?: pulumi.Input<number>;
    /**
     * Reference a TCP Proxy template from shared partition
     */
    sharedPartitionTcpProxyTemplate?: pulumi.Input<number>;
    /**
     * TCP Proxy Template Name
     */
    tcpProxy?: pulumi.Input<string>;
    /**
     * TCP Proxy Template name
     */
    templateTcpProxyShared?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
