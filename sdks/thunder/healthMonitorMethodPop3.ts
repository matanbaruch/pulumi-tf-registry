// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class HealthMonitorMethodPop3 extends pulumi.CustomResource {
    /**
     * Get an existing HealthMonitorMethodPop3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HealthMonitorMethodPop3State, opts?: pulumi.CustomResourceOptions): HealthMonitorMethodPop3 {
        return new HealthMonitorMethodPop3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/healthMonitorMethodPop3:HealthMonitorMethodPop3';

    /**
     * Returns true if the given object is an instance of HealthMonitorMethodPop3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HealthMonitorMethodPop3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HealthMonitorMethodPop3.__pulumiType;
    }

    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * POP3 type
     */
    public readonly pop3!: pulumi.Output<number | undefined>;
    /**
     * Specify the user password
     */
    public readonly pop3Password!: pulumi.Output<number | undefined>;
    /**
     * Specify the user password, '' means empty password
     */
    public readonly pop3PasswordString!: pulumi.Output<string | undefined>;
    /**
     * Specify the POP3 port, default is 110 (Port Number (default 110))
     */
    public readonly pop3Port!: pulumi.Output<number | undefined>;
    /**
     * Specify the username
     */
    public readonly pop3Username!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a HealthMonitorMethodPop3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HealthMonitorMethodPop3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HealthMonitorMethodPop3Args | HealthMonitorMethodPop3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HealthMonitorMethodPop3State | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pop3"] = state ? state.pop3 : undefined;
            resourceInputs["pop3Password"] = state ? state.pop3Password : undefined;
            resourceInputs["pop3PasswordString"] = state ? state.pop3PasswordString : undefined;
            resourceInputs["pop3Port"] = state ? state.pop3Port : undefined;
            resourceInputs["pop3Username"] = state ? state.pop3Username : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as HealthMonitorMethodPop3Args | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pop3"] = args ? args.pop3 : undefined;
            resourceInputs["pop3Password"] = args ? args.pop3Password : undefined;
            resourceInputs["pop3PasswordString"] = args ? args.pop3PasswordString : undefined;
            resourceInputs["pop3Port"] = args ? args.pop3Port : undefined;
            resourceInputs["pop3Username"] = args ? args.pop3Username : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HealthMonitorMethodPop3.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HealthMonitorMethodPop3 resources.
 */
export interface HealthMonitorMethodPop3State {
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * POP3 type
     */
    pop3?: pulumi.Input<number>;
    /**
     * Specify the user password
     */
    pop3Password?: pulumi.Input<number>;
    /**
     * Specify the user password, '' means empty password
     */
    pop3PasswordString?: pulumi.Input<string>;
    /**
     * Specify the POP3 port, default is 110 (Port Number (default 110))
     */
    pop3Port?: pulumi.Input<number>;
    /**
     * Specify the username
     */
    pop3Username?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HealthMonitorMethodPop3 resource.
 */
export interface HealthMonitorMethodPop3Args {
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * POP3 type
     */
    pop3?: pulumi.Input<number>;
    /**
     * Specify the user password
     */
    pop3Password?: pulumi.Input<number>;
    /**
     * Specify the user password, '' means empty password
     */
    pop3PasswordString?: pulumi.Input<string>;
    /**
     * Specify the POP3 port, default is 110 (Port Number (default 110))
     */
    pop3Port?: pulumi.Input<number>;
    /**
     * Specify the username
     */
    pop3Username?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
