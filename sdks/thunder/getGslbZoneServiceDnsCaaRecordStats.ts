// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbZoneServiceDnsCaaRecordStats(args: GetGslbZoneServiceDnsCaaRecordStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbZoneServiceDnsCaaRecordStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbZoneServiceDnsCaaRecordStats:getGslbZoneServiceDnsCaaRecordStats", {
        "criticalFlag": args.criticalFlag,
        "id": args.id,
        "name": args.name,
        "propertyTag": args.propertyTag,
        "rdata": args.rdata,
        "serviceName": args.serviceName,
        "servicePort": args.servicePort,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbZoneServiceDnsCaaRecordStats.
 */
export interface GetGslbZoneServiceDnsCaaRecordStatsArgs {
    criticalFlag: number;
    id?: string;
    name: string;
    propertyTag: string;
    rdata: string;
    serviceName: string;
    servicePort: string;
    stats?: inputs.GetGslbZoneServiceDnsCaaRecordStatsStats;
}

/**
 * A collection of values returned by getGslbZoneServiceDnsCaaRecordStats.
 */
export interface GetGslbZoneServiceDnsCaaRecordStatsResult {
    readonly criticalFlag: number;
    readonly id: string;
    readonly name: string;
    readonly propertyTag: string;
    readonly rdata: string;
    readonly serviceName: string;
    readonly servicePort: string;
    readonly stats?: outputs.GetGslbZoneServiceDnsCaaRecordStatsStats;
}
export function getGslbZoneServiceDnsCaaRecordStatsOutput(args: GetGslbZoneServiceDnsCaaRecordStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbZoneServiceDnsCaaRecordStatsResult> {
    return pulumi.output(args).apply((a: any) => getGslbZoneServiceDnsCaaRecordStats(a, opts))
}

/**
 * A collection of arguments for invoking getGslbZoneServiceDnsCaaRecordStats.
 */
export interface GetGslbZoneServiceDnsCaaRecordStatsOutputArgs {
    criticalFlag: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    propertyTag: pulumi.Input<string>;
    rdata: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    servicePort: pulumi.Input<string>;
    stats?: pulumi.Input<inputs.GetGslbZoneServiceDnsCaaRecordStatsStatsArgs>;
}
