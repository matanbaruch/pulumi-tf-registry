// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SlbTemplateDnsLoggingResponseTypeType extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplateDnsLoggingResponseTypeType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplateDnsLoggingResponseTypeTypeState, opts?: pulumi.CustomResourceOptions): SlbTemplateDnsLoggingResponseTypeType {
        return new SlbTemplateDnsLoggingResponseTypeType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplateDnsLoggingResponseTypeType:SlbTemplateDnsLoggingResponseTypeType';

    /**
     * Returns true if the given object is an instance of SlbTemplateDnsLoggingResponseTypeType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplateDnsLoggingResponseTypeType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplateDnsLoggingResponseTypeType.__pulumiType;
    }

    /**
     * Limit the field length
     */
    public readonly caaTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly caaTypeNoLimit!: pulumi.Output<number | undefined>;
    public readonly digest!: pulumi.Output<number | undefined>;
    /**
     * Limit the field length
     */
    public readonly dnskeyTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly dnskeyTypeNoLimit!: pulumi.Output<number | undefined>;
    /**
     * Limit the field length
     */
    public readonly dsTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly dsTypeNoLimit!: pulumi.Output<number | undefined>;
    public readonly lengthLimitFlag!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Limit the field length
     */
    public readonly naptrTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly naptrTypeNoLimit!: pulumi.Output<number | undefined>;
    /**
     * Limit the field length
     */
    public readonly optTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly optTypeNoLimit!: pulumi.Output<number | undefined>;
    public readonly otherData!: pulumi.Output<number | undefined>;
    public readonly publicKey!: pulumi.Output<number | undefined>;
    public readonly rdataField!: pulumi.Output<number | undefined>;
    /**
     * 'TXT': TXT; 'RRSIG': RRSIG; 'TSIG': TSIG; 'DNSKEY': DNSKEY; 'DS': DS; 'CAA': CAA; 'NAPTR': NAPTR; 'OPT': OPT;
     */
    public readonly responseTypeName!: pulumi.Output<string>;
    /**
     * Limit the field length
     */
    public readonly rrsigTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly rrsigTypeNoLimit!: pulumi.Output<number | undefined>;
    public readonly serviceField!: pulumi.Output<number | undefined>;
    public readonly signature!: pulumi.Output<number | undefined>;
    /**
     * Limit the field length
     */
    public readonly tsigTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly tsigTypeNoLimit!: pulumi.Output<number | undefined>;
    public readonly txtData!: pulumi.Output<number | undefined>;
    /**
     * Limit the field length
     */
    public readonly txtTypeLimitNum!: pulumi.Output<number | undefined>;
    /**
     * Print the field as much as possible
     */
    public readonly txtTypeNoLimit!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    public readonly valueField!: pulumi.Output<number | undefined>;

    /**
     * Create a SlbTemplateDnsLoggingResponseTypeType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SlbTemplateDnsLoggingResponseTypeTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplateDnsLoggingResponseTypeTypeArgs | SlbTemplateDnsLoggingResponseTypeTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplateDnsLoggingResponseTypeTypeState | undefined;
            resourceInputs["caaTypeLimitNum"] = state ? state.caaTypeLimitNum : undefined;
            resourceInputs["caaTypeNoLimit"] = state ? state.caaTypeNoLimit : undefined;
            resourceInputs["digest"] = state ? state.digest : undefined;
            resourceInputs["dnskeyTypeLimitNum"] = state ? state.dnskeyTypeLimitNum : undefined;
            resourceInputs["dnskeyTypeNoLimit"] = state ? state.dnskeyTypeNoLimit : undefined;
            resourceInputs["dsTypeLimitNum"] = state ? state.dsTypeLimitNum : undefined;
            resourceInputs["dsTypeNoLimit"] = state ? state.dsTypeNoLimit : undefined;
            resourceInputs["lengthLimitFlag"] = state ? state.lengthLimitFlag : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["naptrTypeLimitNum"] = state ? state.naptrTypeLimitNum : undefined;
            resourceInputs["naptrTypeNoLimit"] = state ? state.naptrTypeNoLimit : undefined;
            resourceInputs["optTypeLimitNum"] = state ? state.optTypeLimitNum : undefined;
            resourceInputs["optTypeNoLimit"] = state ? state.optTypeNoLimit : undefined;
            resourceInputs["otherData"] = state ? state.otherData : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["rdataField"] = state ? state.rdataField : undefined;
            resourceInputs["responseTypeName"] = state ? state.responseTypeName : undefined;
            resourceInputs["rrsigTypeLimitNum"] = state ? state.rrsigTypeLimitNum : undefined;
            resourceInputs["rrsigTypeNoLimit"] = state ? state.rrsigTypeNoLimit : undefined;
            resourceInputs["serviceField"] = state ? state.serviceField : undefined;
            resourceInputs["signature"] = state ? state.signature : undefined;
            resourceInputs["tsigTypeLimitNum"] = state ? state.tsigTypeLimitNum : undefined;
            resourceInputs["tsigTypeNoLimit"] = state ? state.tsigTypeNoLimit : undefined;
            resourceInputs["txtData"] = state ? state.txtData : undefined;
            resourceInputs["txtTypeLimitNum"] = state ? state.txtTypeLimitNum : undefined;
            resourceInputs["txtTypeNoLimit"] = state ? state.txtTypeNoLimit : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["valueField"] = state ? state.valueField : undefined;
        } else {
            const args = argsOrState as SlbTemplateDnsLoggingResponseTypeTypeArgs | undefined;
            if ((!args || args.responseTypeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'responseTypeName'");
            }
            resourceInputs["caaTypeLimitNum"] = args ? args.caaTypeLimitNum : undefined;
            resourceInputs["caaTypeNoLimit"] = args ? args.caaTypeNoLimit : undefined;
            resourceInputs["digest"] = args ? args.digest : undefined;
            resourceInputs["dnskeyTypeLimitNum"] = args ? args.dnskeyTypeLimitNum : undefined;
            resourceInputs["dnskeyTypeNoLimit"] = args ? args.dnskeyTypeNoLimit : undefined;
            resourceInputs["dsTypeLimitNum"] = args ? args.dsTypeLimitNum : undefined;
            resourceInputs["dsTypeNoLimit"] = args ? args.dsTypeNoLimit : undefined;
            resourceInputs["lengthLimitFlag"] = args ? args.lengthLimitFlag : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["naptrTypeLimitNum"] = args ? args.naptrTypeLimitNum : undefined;
            resourceInputs["naptrTypeNoLimit"] = args ? args.naptrTypeNoLimit : undefined;
            resourceInputs["optTypeLimitNum"] = args ? args.optTypeLimitNum : undefined;
            resourceInputs["optTypeNoLimit"] = args ? args.optTypeNoLimit : undefined;
            resourceInputs["otherData"] = args ? args.otherData : undefined;
            resourceInputs["publicKey"] = args ? args.publicKey : undefined;
            resourceInputs["rdataField"] = args ? args.rdataField : undefined;
            resourceInputs["responseTypeName"] = args ? args.responseTypeName : undefined;
            resourceInputs["rrsigTypeLimitNum"] = args ? args.rrsigTypeLimitNum : undefined;
            resourceInputs["rrsigTypeNoLimit"] = args ? args.rrsigTypeNoLimit : undefined;
            resourceInputs["serviceField"] = args ? args.serviceField : undefined;
            resourceInputs["signature"] = args ? args.signature : undefined;
            resourceInputs["tsigTypeLimitNum"] = args ? args.tsigTypeLimitNum : undefined;
            resourceInputs["tsigTypeNoLimit"] = args ? args.tsigTypeNoLimit : undefined;
            resourceInputs["txtData"] = args ? args.txtData : undefined;
            resourceInputs["txtTypeLimitNum"] = args ? args.txtTypeLimitNum : undefined;
            resourceInputs["txtTypeNoLimit"] = args ? args.txtTypeNoLimit : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["valueField"] = args ? args.valueField : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplateDnsLoggingResponseTypeType.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplateDnsLoggingResponseTypeType resources.
 */
export interface SlbTemplateDnsLoggingResponseTypeTypeState {
    /**
     * Limit the field length
     */
    caaTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    caaTypeNoLimit?: pulumi.Input<number>;
    digest?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    dnskeyTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    dnskeyTypeNoLimit?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    dsTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    dsTypeNoLimit?: pulumi.Input<number>;
    lengthLimitFlag?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Limit the field length
     */
    naptrTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    naptrTypeNoLimit?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    optTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    optTypeNoLimit?: pulumi.Input<number>;
    otherData?: pulumi.Input<number>;
    publicKey?: pulumi.Input<number>;
    rdataField?: pulumi.Input<number>;
    /**
     * 'TXT': TXT; 'RRSIG': RRSIG; 'TSIG': TSIG; 'DNSKEY': DNSKEY; 'DS': DS; 'CAA': CAA; 'NAPTR': NAPTR; 'OPT': OPT;
     */
    responseTypeName?: pulumi.Input<string>;
    /**
     * Limit the field length
     */
    rrsigTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    rrsigTypeNoLimit?: pulumi.Input<number>;
    serviceField?: pulumi.Input<number>;
    signature?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    tsigTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    tsigTypeNoLimit?: pulumi.Input<number>;
    txtData?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    txtTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    txtTypeNoLimit?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    valueField?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SlbTemplateDnsLoggingResponseTypeType resource.
 */
export interface SlbTemplateDnsLoggingResponseTypeTypeArgs {
    /**
     * Limit the field length
     */
    caaTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    caaTypeNoLimit?: pulumi.Input<number>;
    digest?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    dnskeyTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    dnskeyTypeNoLimit?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    dsTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    dsTypeNoLimit?: pulumi.Input<number>;
    lengthLimitFlag?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Limit the field length
     */
    naptrTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    naptrTypeNoLimit?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    optTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    optTypeNoLimit?: pulumi.Input<number>;
    otherData?: pulumi.Input<number>;
    publicKey?: pulumi.Input<number>;
    rdataField?: pulumi.Input<number>;
    /**
     * 'TXT': TXT; 'RRSIG': RRSIG; 'TSIG': TSIG; 'DNSKEY': DNSKEY; 'DS': DS; 'CAA': CAA; 'NAPTR': NAPTR; 'OPT': OPT;
     */
    responseTypeName: pulumi.Input<string>;
    /**
     * Limit the field length
     */
    rrsigTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    rrsigTypeNoLimit?: pulumi.Input<number>;
    serviceField?: pulumi.Input<number>;
    signature?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    tsigTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    tsigTypeNoLimit?: pulumi.Input<number>;
    txtData?: pulumi.Input<number>;
    /**
     * Limit the field length
     */
    txtTypeLimitNum?: pulumi.Input<number>;
    /**
     * Print the field as much as possible
     */
    txtTypeNoLimit?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    valueField?: pulumi.Input<number>;
}
