// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Bgp extends pulumi.CustomResource {
    /**
     * Get an existing Bgp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpState, opts?: pulumi.CustomResourceOptions): Bgp {
        return new Bgp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/bgp:Bgp';

    /**
     * Returns true if the given object is an instance of Bgp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bgp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bgp.__pulumiType;
    }

    /**
     * Enable ASDot notation
     */
    public readonly asdot!: pulumi.Output<number | undefined>;
    /**
     * Enable ASDot+ notation
     */
    public readonly asdotPlus!: pulumi.Output<number | undefined>;
    public readonly disableAdvertisement!: pulumi.Output<outputs.BgpDisableAdvertisement | undefined>;
    /**
     * Enable the router to send 4-octet ASN capabilities
     */
    public readonly extendedAsnCap!: pulumi.Output<number | undefined>;
    public readonly nexthopTrigger!: pulumi.Output<outputs.BgpNexthopTrigger | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Bgp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BgpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpArgs | BgpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpState | undefined;
            resourceInputs["asdot"] = state ? state.asdot : undefined;
            resourceInputs["asdotPlus"] = state ? state.asdotPlus : undefined;
            resourceInputs["disableAdvertisement"] = state ? state.disableAdvertisement : undefined;
            resourceInputs["extendedAsnCap"] = state ? state.extendedAsnCap : undefined;
            resourceInputs["nexthopTrigger"] = state ? state.nexthopTrigger : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as BgpArgs | undefined;
            resourceInputs["asdot"] = args ? args.asdot : undefined;
            resourceInputs["asdotPlus"] = args ? args.asdotPlus : undefined;
            resourceInputs["disableAdvertisement"] = args ? args.disableAdvertisement : undefined;
            resourceInputs["extendedAsnCap"] = args ? args.extendedAsnCap : undefined;
            resourceInputs["nexthopTrigger"] = args ? args.nexthopTrigger : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bgp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Bgp resources.
 */
export interface BgpState {
    /**
     * Enable ASDot notation
     */
    asdot?: pulumi.Input<number>;
    /**
     * Enable ASDot+ notation
     */
    asdotPlus?: pulumi.Input<number>;
    disableAdvertisement?: pulumi.Input<inputs.BgpDisableAdvertisement>;
    /**
     * Enable the router to send 4-octet ASN capabilities
     */
    extendedAsnCap?: pulumi.Input<number>;
    nexthopTrigger?: pulumi.Input<inputs.BgpNexthopTrigger>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Bgp resource.
 */
export interface BgpArgs {
    /**
     * Enable ASDot notation
     */
    asdot?: pulumi.Input<number>;
    /**
     * Enable ASDot+ notation
     */
    asdotPlus?: pulumi.Input<number>;
    disableAdvertisement?: pulumi.Input<inputs.BgpDisableAdvertisement>;
    /**
     * Enable the router to send 4-octet ASN capabilities
     */
    extendedAsnCap?: pulumi.Input<number>;
    nexthopTrigger?: pulumi.Input<inputs.BgpNexthopTrigger>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
