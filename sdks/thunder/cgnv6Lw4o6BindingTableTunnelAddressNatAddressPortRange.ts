// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange extends pulumi.CustomResource {
    /**
     * Get an existing Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeState, opts?: pulumi.CustomResourceOptions): Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange {
        return new Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange:Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange';

    /**
     * Returns true if the given object is an instance of Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange.__pulumiType;
    }

    /**
     * Ipv4NatAddr
     */
    public readonly ipv4NatAddr!: pulumi.Output<string>;
    /**
     * Ipv6TunnelAddr
     */
    public readonly ipv6TunnelAddr!: pulumi.Output<string>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Port Range End
     */
    public readonly portEnd!: pulumi.Output<number>;
    /**
     * Single Port or Port Range Start
     */
    public readonly portStart!: pulumi.Output<number>;
    /**
     * Configure LW-4over6 IPIP Tunnel Endpoint Address (LW-4over6 Tunnel Endpoint Address)
     */
    public readonly tunnelEndpointAddress!: pulumi.Output<string>;

    /**
     * Create a Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeArgs | Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeState | undefined;
            resourceInputs["ipv4NatAddr"] = state ? state.ipv4NatAddr : undefined;
            resourceInputs["ipv6TunnelAddr"] = state ? state.ipv6TunnelAddr : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["portEnd"] = state ? state.portEnd : undefined;
            resourceInputs["portStart"] = state ? state.portStart : undefined;
            resourceInputs["tunnelEndpointAddress"] = state ? state.tunnelEndpointAddress : undefined;
        } else {
            const args = argsOrState as Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeArgs | undefined;
            if ((!args || args.ipv4NatAddr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv4NatAddr'");
            }
            if ((!args || args.ipv6TunnelAddr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipv6TunnelAddr'");
            }
            if ((!args || args.portEnd === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portEnd'");
            }
            if ((!args || args.portStart === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portStart'");
            }
            if ((!args || args.tunnelEndpointAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tunnelEndpointAddress'");
            }
            resourceInputs["ipv4NatAddr"] = args ? args.ipv4NatAddr : undefined;
            resourceInputs["ipv6TunnelAddr"] = args ? args.ipv6TunnelAddr : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["portEnd"] = args ? args.portEnd : undefined;
            resourceInputs["portStart"] = args ? args.portStart : undefined;
            resourceInputs["tunnelEndpointAddress"] = args ? args.tunnelEndpointAddress : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange resources.
 */
export interface Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeState {
    /**
     * Ipv4NatAddr
     */
    ipv4NatAddr?: pulumi.Input<string>;
    /**
     * Ipv6TunnelAddr
     */
    ipv6TunnelAddr?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Port Range End
     */
    portEnd?: pulumi.Input<number>;
    /**
     * Single Port or Port Range Start
     */
    portStart?: pulumi.Input<number>;
    /**
     * Configure LW-4over6 IPIP Tunnel Endpoint Address (LW-4over6 Tunnel Endpoint Address)
     */
    tunnelEndpointAddress?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRange resource.
 */
export interface Cgnv6Lw4o6BindingTableTunnelAddressNatAddressPortRangeArgs {
    /**
     * Ipv4NatAddr
     */
    ipv4NatAddr: pulumi.Input<string>;
    /**
     * Ipv6TunnelAddr
     */
    ipv6TunnelAddr: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Port Range End
     */
    portEnd: pulumi.Input<number>;
    /**
     * Single Port or Port Range Start
     */
    portStart: pulumi.Input<number>;
    /**
     * Configure LW-4over6 IPIP Tunnel Endpoint Address (LW-4over6 Tunnel Endpoint Address)
     */
    tunnelEndpointAddress: pulumi.Input<string>;
}
