// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InterfaceTrunkIpv6 extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceTrunkIpv6 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceTrunkIpv6State, opts?: pulumi.CustomResourceOptions): InterfaceTrunkIpv6 {
        return new InterfaceTrunkIpv6(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/interfaceTrunkIpv6:InterfaceTrunkIpv6';

    /**
     * Returns true if the given object is an instance of InterfaceTrunkIpv6.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceTrunkIpv6 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceTrunkIpv6.__pulumiType;
    }

    public readonly accessListCfg!: pulumi.Output<outputs.InterfaceTrunkIpv6AccessListCfg | undefined>;
    public readonly addressLists!: pulumi.Output<outputs.InterfaceTrunkIpv6AddressList[] | undefined>;
    /**
     * Ifnum
     */
    public readonly ifnum!: pulumi.Output<string>;
    /**
     * Enable IPv6 processing
     */
    public readonly ipv6Enable!: pulumi.Output<number | undefined>;
    public readonly nat!: pulumi.Output<outputs.InterfaceTrunkIpv6Nat | undefined>;
    public readonly ospf!: pulumi.Output<outputs.InterfaceTrunkIpv6Ospf | undefined>;
    public readonly rip!: pulumi.Output<outputs.InterfaceTrunkIpv6Rip | undefined>;
    public readonly router!: pulumi.Output<outputs.InterfaceTrunkIpv6Router | undefined>;
    public readonly routerAdver!: pulumi.Output<outputs.InterfaceTrunkIpv6RouterAdver | undefined>;
    public readonly statefulFirewall!: pulumi.Output<outputs.InterfaceTrunkIpv6StatefulFirewall | undefined>;
    /**
     * Ignore TTL decrement for a received packet
     */
    public readonly ttlIgnore!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a InterfaceTrunkIpv6 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceTrunkIpv6Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceTrunkIpv6Args | InterfaceTrunkIpv6State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceTrunkIpv6State | undefined;
            resourceInputs["accessListCfg"] = state ? state.accessListCfg : undefined;
            resourceInputs["addressLists"] = state ? state.addressLists : undefined;
            resourceInputs["ifnum"] = state ? state.ifnum : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["nat"] = state ? state.nat : undefined;
            resourceInputs["ospf"] = state ? state.ospf : undefined;
            resourceInputs["rip"] = state ? state.rip : undefined;
            resourceInputs["router"] = state ? state.router : undefined;
            resourceInputs["routerAdver"] = state ? state.routerAdver : undefined;
            resourceInputs["statefulFirewall"] = state ? state.statefulFirewall : undefined;
            resourceInputs["ttlIgnore"] = state ? state.ttlIgnore : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as InterfaceTrunkIpv6Args | undefined;
            if ((!args || args.ifnum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ifnum'");
            }
            resourceInputs["accessListCfg"] = args ? args.accessListCfg : undefined;
            resourceInputs["addressLists"] = args ? args.addressLists : undefined;
            resourceInputs["ifnum"] = args ? args.ifnum : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["nat"] = args ? args.nat : undefined;
            resourceInputs["ospf"] = args ? args.ospf : undefined;
            resourceInputs["rip"] = args ? args.rip : undefined;
            resourceInputs["router"] = args ? args.router : undefined;
            resourceInputs["routerAdver"] = args ? args.routerAdver : undefined;
            resourceInputs["statefulFirewall"] = args ? args.statefulFirewall : undefined;
            resourceInputs["ttlIgnore"] = args ? args.ttlIgnore : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceTrunkIpv6.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceTrunkIpv6 resources.
 */
export interface InterfaceTrunkIpv6State {
    accessListCfg?: pulumi.Input<inputs.InterfaceTrunkIpv6AccessListCfg>;
    addressLists?: pulumi.Input<pulumi.Input<inputs.InterfaceTrunkIpv6AddressList>[]>;
    /**
     * Ifnum
     */
    ifnum?: pulumi.Input<string>;
    /**
     * Enable IPv6 processing
     */
    ipv6Enable?: pulumi.Input<number>;
    nat?: pulumi.Input<inputs.InterfaceTrunkIpv6Nat>;
    ospf?: pulumi.Input<inputs.InterfaceTrunkIpv6Ospf>;
    rip?: pulumi.Input<inputs.InterfaceTrunkIpv6Rip>;
    router?: pulumi.Input<inputs.InterfaceTrunkIpv6Router>;
    routerAdver?: pulumi.Input<inputs.InterfaceTrunkIpv6RouterAdver>;
    statefulFirewall?: pulumi.Input<inputs.InterfaceTrunkIpv6StatefulFirewall>;
    /**
     * Ignore TTL decrement for a received packet
     */
    ttlIgnore?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterfaceTrunkIpv6 resource.
 */
export interface InterfaceTrunkIpv6Args {
    accessListCfg?: pulumi.Input<inputs.InterfaceTrunkIpv6AccessListCfg>;
    addressLists?: pulumi.Input<pulumi.Input<inputs.InterfaceTrunkIpv6AddressList>[]>;
    /**
     * Ifnum
     */
    ifnum: pulumi.Input<string>;
    /**
     * Enable IPv6 processing
     */
    ipv6Enable?: pulumi.Input<number>;
    nat?: pulumi.Input<inputs.InterfaceTrunkIpv6Nat>;
    ospf?: pulumi.Input<inputs.InterfaceTrunkIpv6Ospf>;
    rip?: pulumi.Input<inputs.InterfaceTrunkIpv6Rip>;
    router?: pulumi.Input<inputs.InterfaceTrunkIpv6Router>;
    routerAdver?: pulumi.Input<inputs.InterfaceTrunkIpv6RouterAdver>;
    statefulFirewall?: pulumi.Input<inputs.InterfaceTrunkIpv6StatefulFirewall>;
    /**
     * Ignore TTL decrement for a received packet
     */
    ttlIgnore?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
