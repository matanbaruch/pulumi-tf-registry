// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InterfaceEthernetLldp extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceEthernetLldp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceEthernetLldpState, opts?: pulumi.CustomResourceOptions): InterfaceEthernetLldp {
        return new InterfaceEthernetLldp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/interfaceEthernetLldp:InterfaceEthernetLldp';

    /**
     * Returns true if the given object is an instance of InterfaceEthernetLldp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceEthernetLldp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceEthernetLldp.__pulumiType;
    }

    public readonly enableCfg!: pulumi.Output<outputs.InterfaceEthernetLldpEnableCfg | undefined>;
    /**
     * Ifnum
     */
    public readonly ifnum!: pulumi.Output<string>;
    public readonly notificationCfg!: pulumi.Output<outputs.InterfaceEthernetLldpNotificationCfg | undefined>;
    public readonly txDot1Cfg!: pulumi.Output<outputs.InterfaceEthernetLldpTxDot1Cfg | undefined>;
    public readonly txTlvsCfg!: pulumi.Output<outputs.InterfaceEthernetLldpTxTlvsCfg | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a InterfaceEthernetLldp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceEthernetLldpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceEthernetLldpArgs | InterfaceEthernetLldpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceEthernetLldpState | undefined;
            resourceInputs["enableCfg"] = state ? state.enableCfg : undefined;
            resourceInputs["ifnum"] = state ? state.ifnum : undefined;
            resourceInputs["notificationCfg"] = state ? state.notificationCfg : undefined;
            resourceInputs["txDot1Cfg"] = state ? state.txDot1Cfg : undefined;
            resourceInputs["txTlvsCfg"] = state ? state.txTlvsCfg : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as InterfaceEthernetLldpArgs | undefined;
            if ((!args || args.ifnum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ifnum'");
            }
            resourceInputs["enableCfg"] = args ? args.enableCfg : undefined;
            resourceInputs["ifnum"] = args ? args.ifnum : undefined;
            resourceInputs["notificationCfg"] = args ? args.notificationCfg : undefined;
            resourceInputs["txDot1Cfg"] = args ? args.txDot1Cfg : undefined;
            resourceInputs["txTlvsCfg"] = args ? args.txTlvsCfg : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceEthernetLldp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceEthernetLldp resources.
 */
export interface InterfaceEthernetLldpState {
    enableCfg?: pulumi.Input<inputs.InterfaceEthernetLldpEnableCfg>;
    /**
     * Ifnum
     */
    ifnum?: pulumi.Input<string>;
    notificationCfg?: pulumi.Input<inputs.InterfaceEthernetLldpNotificationCfg>;
    txDot1Cfg?: pulumi.Input<inputs.InterfaceEthernetLldpTxDot1Cfg>;
    txTlvsCfg?: pulumi.Input<inputs.InterfaceEthernetLldpTxTlvsCfg>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterfaceEthernetLldp resource.
 */
export interface InterfaceEthernetLldpArgs {
    enableCfg?: pulumi.Input<inputs.InterfaceEthernetLldpEnableCfg>;
    /**
     * Ifnum
     */
    ifnum: pulumi.Input<string>;
    notificationCfg?: pulumi.Input<inputs.InterfaceEthernetLldpNotificationCfg>;
    txDot1Cfg?: pulumi.Input<inputs.InterfaceEthernetLldpTxDot1Cfg>;
    txTlvsCfg?: pulumi.Input<inputs.InterfaceEthernetLldpTxTlvsCfg>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
