// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbTemplateHttpHttpProtocolCheck extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplateHttpHttpProtocolCheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplateHttpHttpProtocolCheckState, opts?: pulumi.CustomResourceOptions): SlbTemplateHttpHttpProtocolCheck {
        return new SlbTemplateHttpHttpProtocolCheck(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplateHttpHttpProtocolCheck:SlbTemplateHttpHttpProtocolCheck';

    /**
     * Returns true if the given object is an instance of SlbTemplateHttpHttpProtocolCheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplateHttpHttpProtocolCheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplateHttpHttpProtocolCheck.__pulumiType;
    }

    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly getAndPayload!: pulumi.Output<string | undefined>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly h2upContentLengthAlias!: pulumi.Output<string | undefined>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly h2upWithHostAndAuth!: pulumi.Output<string | undefined>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly h2upWithTransferEncoding!: pulumi.Output<string | undefined>;
    public readonly headerFilterRuleLists!: pulumi.Output<outputs.SlbTemplateHttpHttpProtocolCheckHeaderFilterRuleList[] | undefined>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly malformedH2upHeaderValue!: pulumi.Output<string | undefined>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly malformedH2upSchemeValue!: pulumi.Output<string | undefined>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly multipleContentLength!: pulumi.Output<string | undefined>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    public readonly multipleTransferEncoding!: pulumi.Output<string | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 'drop': Drop the request and Send 400 to the client side;
     */
    public readonly transferEncodingAndContentLength!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SlbTemplateHttpHttpProtocolCheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplateHttpHttpProtocolCheckArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplateHttpHttpProtocolCheckArgs | SlbTemplateHttpHttpProtocolCheckState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplateHttpHttpProtocolCheckState | undefined;
            resourceInputs["getAndPayload"] = state ? state.getAndPayload : undefined;
            resourceInputs["h2upContentLengthAlias"] = state ? state.h2upContentLengthAlias : undefined;
            resourceInputs["h2upWithHostAndAuth"] = state ? state.h2upWithHostAndAuth : undefined;
            resourceInputs["h2upWithTransferEncoding"] = state ? state.h2upWithTransferEncoding : undefined;
            resourceInputs["headerFilterRuleLists"] = state ? state.headerFilterRuleLists : undefined;
            resourceInputs["malformedH2upHeaderValue"] = state ? state.malformedH2upHeaderValue : undefined;
            resourceInputs["malformedH2upSchemeValue"] = state ? state.malformedH2upSchemeValue : undefined;
            resourceInputs["multipleContentLength"] = state ? state.multipleContentLength : undefined;
            resourceInputs["multipleTransferEncoding"] = state ? state.multipleTransferEncoding : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["transferEncodingAndContentLength"] = state ? state.transferEncodingAndContentLength : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SlbTemplateHttpHttpProtocolCheckArgs | undefined;
            resourceInputs["getAndPayload"] = args ? args.getAndPayload : undefined;
            resourceInputs["h2upContentLengthAlias"] = args ? args.h2upContentLengthAlias : undefined;
            resourceInputs["h2upWithHostAndAuth"] = args ? args.h2upWithHostAndAuth : undefined;
            resourceInputs["h2upWithTransferEncoding"] = args ? args.h2upWithTransferEncoding : undefined;
            resourceInputs["headerFilterRuleLists"] = args ? args.headerFilterRuleLists : undefined;
            resourceInputs["malformedH2upHeaderValue"] = args ? args.malformedH2upHeaderValue : undefined;
            resourceInputs["malformedH2upSchemeValue"] = args ? args.malformedH2upSchemeValue : undefined;
            resourceInputs["multipleContentLength"] = args ? args.multipleContentLength : undefined;
            resourceInputs["multipleTransferEncoding"] = args ? args.multipleTransferEncoding : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["transferEncodingAndContentLength"] = args ? args.transferEncodingAndContentLength : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplateHttpHttpProtocolCheck.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplateHttpHttpProtocolCheck resources.
 */
export interface SlbTemplateHttpHttpProtocolCheckState {
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    getAndPayload?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    h2upContentLengthAlias?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    h2upWithHostAndAuth?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    h2upWithTransferEncoding?: pulumi.Input<string>;
    headerFilterRuleLists?: pulumi.Input<pulumi.Input<inputs.SlbTemplateHttpHttpProtocolCheckHeaderFilterRuleList>[]>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    malformedH2upHeaderValue?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    malformedH2upSchemeValue?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    multipleContentLength?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    multipleTransferEncoding?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and Send 400 to the client side;
     */
    transferEncodingAndContentLength?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbTemplateHttpHttpProtocolCheck resource.
 */
export interface SlbTemplateHttpHttpProtocolCheckArgs {
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    getAndPayload?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    h2upContentLengthAlias?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    h2upWithHostAndAuth?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    h2upWithTransferEncoding?: pulumi.Input<string>;
    headerFilterRuleLists?: pulumi.Input<pulumi.Input<inputs.SlbTemplateHttpHttpProtocolCheckHeaderFilterRuleList>[]>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    malformedH2upHeaderValue?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    malformedH2upSchemeValue?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    multipleContentLength?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and send 400 to the client side;
     */
    multipleTransferEncoding?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * 'drop': Drop the request and Send 400 to the client side;
     */
    transferEncodingAndContentLength?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
