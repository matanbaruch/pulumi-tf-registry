// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TemplateGtpApnImsiList extends pulumi.CustomResource {
    /**
     * Get an existing TemplateGtpApnImsiList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TemplateGtpApnImsiListState, opts?: pulumi.CustomResourceOptions): TemplateGtpApnImsiList {
        return new TemplateGtpApnImsiList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/templateGtpApnImsiList:TemplateGtpApnImsiList';

    /**
     * Returns true if the given object is an instance of TemplateGtpApnImsiList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TemplateGtpApnImsiList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TemplateGtpApnImsiList.__pulumiType;
    }

    /**
     * 'permit': Create a whitelist to permit the packets that match APN IMSI filters; 'deny': Create a blacklist to deny the
     * packets that match APN IMSI filters (default);
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * Specify name of the GTP APN IMSI list
     */
    public readonly name!: pulumi.Output<string>;
    public readonly strLists!: pulumi.Output<outputs.TemplateGtpApnImsiListStrList[] | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a TemplateGtpApnImsiList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TemplateGtpApnImsiListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TemplateGtpApnImsiListArgs | TemplateGtpApnImsiListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TemplateGtpApnImsiListState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["strLists"] = state ? state.strLists : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as TemplateGtpApnImsiListArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["strLists"] = args ? args.strLists : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TemplateGtpApnImsiList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TemplateGtpApnImsiList resources.
 */
export interface TemplateGtpApnImsiListState {
    /**
     * 'permit': Create a whitelist to permit the packets that match APN IMSI filters; 'deny': Create a blacklist to deny the
     * packets that match APN IMSI filters (default);
     */
    action?: pulumi.Input<string>;
    /**
     * Specify name of the GTP APN IMSI list
     */
    name?: pulumi.Input<string>;
    strLists?: pulumi.Input<pulumi.Input<inputs.TemplateGtpApnImsiListStrList>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TemplateGtpApnImsiList resource.
 */
export interface TemplateGtpApnImsiListArgs {
    /**
     * 'permit': Create a whitelist to permit the packets that match APN IMSI filters; 'deny': Create a blacklist to deny the
     * packets that match APN IMSI filters (default);
     */
    action?: pulumi.Input<string>;
    /**
     * Specify name of the GTP APN IMSI list
     */
    name?: pulumi.Input<string>;
    strLists?: pulumi.Input<pulumi.Input<inputs.TemplateGtpApnImsiListStrList>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
