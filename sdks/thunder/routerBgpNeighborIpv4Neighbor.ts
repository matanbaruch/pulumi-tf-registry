// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterBgpNeighborIpv4Neighbor extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgpNeighborIpv4Neighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpNeighborIpv4NeighborState, opts?: pulumi.CustomResourceOptions): RouterBgpNeighborIpv4Neighbor {
        return new RouterBgpNeighborIpv4Neighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/routerBgpNeighborIpv4Neighbor:RouterBgpNeighborIpv4Neighbor';

    /**
     * Returns true if the given object is an instance of RouterBgpNeighborIpv4Neighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgpNeighborIpv4Neighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgpNeighborIpv4Neighbor.__pulumiType;
    }

    /**
     * Send BGP update to ACOS application
     */
    public readonly acosApplicationOnly!: pulumi.Output<number | undefined>;
    /**
     * Enable the Address Family for this Neighbor
     */
    public readonly activate!: pulumi.Output<number | undefined>;
    /**
     * Minimum interval between sending BGP routing updates (time in seconds)
     */
    public readonly advertisementInterval!: pulumi.Output<number | undefined>;
    /**
     * Accept as-path with my AS present in it
     */
    public readonly allowasIn!: pulumi.Output<number | undefined>;
    /**
     * Number of occurrences of AS number
     */
    public readonly allowasInCount!: pulumi.Output<number | undefined>;
    /**
     * AsNumber
     */
    public readonly asNumber!: pulumi.Output<string>;
    /**
     * Minimum interval between sending AS-origination routing updates (time in seconds)
     */
    public readonly asOriginationInterval!: pulumi.Output<number | undefined>;
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    public readonly bfd!: pulumi.Output<number | undefined>;
    /**
     * Key String
     */
    public readonly bfdValue!: pulumi.Output<string | undefined>;
    /**
     * Include Neighbor in Established State for Collision Detection
     */
    public readonly collideEstablished!: pulumi.Output<number | undefined>;
    /**
     * BGP connect timer
     */
    public readonly connect!: pulumi.Output<number | undefined>;
    /**
     * Originate default route to this neighbor
     */
    public readonly defaultOriginate!: pulumi.Output<number | undefined>;
    /**
     * Neighbor specific description (Up to 80 characters describing this neighbor)
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * BGP per neighbor disallow-infinite-holdtime
     */
    public readonly disallowInfiniteHoldtime!: pulumi.Output<number | undefined>;
    public readonly distributeLists!: pulumi.Output<outputs.RouterBgpNeighborIpv4NeighborDistributeList[] | undefined>;
    /**
     * Do not perform capability negotiation
     */
    public readonly dontCapabilityNegotiate!: pulumi.Output<number | undefined>;
    /**
     * Advertise dynamic capability to this neighbor
     */
    public readonly dynamic!: pulumi.Output<number | undefined>;
    /**
     * Allow EBGP neighbors not on directly connected networks
     */
    public readonly ebgpMultihop!: pulumi.Output<number | undefined>;
    /**
     * maximum hop count
     */
    public readonly ebgpMultihopHopCount!: pulumi.Output<number | undefined>;
    /**
     * Enforce EBGP neighbors to perform multihop
     */
    public readonly enforceMultihop!: pulumi.Output<number | undefined>;
    /**
     * Ethernet interface (Port number)
     */
    public readonly ethernet!: pulumi.Output<number | undefined>;
    /**
     * enable graceful-restart helper for this neighbor
     */
    public readonly gracefulRestart!: pulumi.Output<number | undefined>;
    /**
     * Allow inbound soft reconfiguration for this neighbor
     */
    public readonly inbound!: pulumi.Output<number | undefined>;
    /**
     * Key ID
     */
    public readonly keyId!: pulumi.Output<number | undefined>;
    /**
     * 'md5': md5; 'meticulous-md5': meticulous-md5; 'meticulous-sha1': meticulous-sha1; 'sha1': sha1; 'simple': simple; (Keyed
     * MD5/Meticulous Keyed MD5/Meticulous Keyed SHA1/Keyed SHA1/Simple Password)
     */
    public readonly keyType!: pulumi.Output<string | undefined>;
    /**
     * Logical interface (Lif interface name)
     */
    public readonly lif!: pulumi.Output<string | undefined>;
    /**
     * Loopback interface (Port number)
     */
    public readonly loopback!: pulumi.Output<number | undefined>;
    /**
     * Maximum number of prefix accept from this peer (maximum no. of prefix limit (various depends on model))
     */
    public readonly maximumPrefix!: pulumi.Output<number | undefined>;
    /**
     * threshold-value, 1 to 100 percent
     */
    public readonly maximumPrefixThres!: pulumi.Output<number | undefined>;
    /**
     * Enable multihop
     */
    public readonly multihop!: pulumi.Output<number | undefined>;
    /**
     * Specify AS number of BGP neighbor
     */
    public readonly nbrRemoteAs!: pulumi.Output<string | undefined>;
    public readonly neighborFilterLists!: pulumi.Output<outputs.RouterBgpNeighborIpv4NeighborNeighborFilterList[] | undefined>;
    /**
     * Neighbor address
     */
    public readonly neighborIpv4!: pulumi.Output<string>;
    public readonly neighborPrefixLists!: pulumi.Output<outputs.RouterBgpNeighborIpv4NeighborNeighborPrefixList[] | undefined>;
    public readonly neighborRouteMapLists!: pulumi.Output<outputs.RouterBgpNeighborIpv4NeighborNeighborRouteMapList[] | undefined>;
    /**
     * Disable the next hop calculation for this neighbor
     */
    public readonly nextHopSelf!: pulumi.Output<number | undefined>;
    /**
     * Override capability negotiation result
     */
    public readonly overrideCapability!: pulumi.Output<number | undefined>;
    /**
     * Key String
     */
    public readonly passValue!: pulumi.Output<string | undefined>;
    /**
     * Don't send open messages to this neighbor
     */
    public readonly passive!: pulumi.Output<number | undefined>;
    /**
     * Configure peer-group (peer-group name)
     */
    public readonly peerGroupName!: pulumi.Output<string | undefined>;
    /**
     * 'both': both; 'receive': receive; 'send': send;
     */
    public readonly prefixListDirection!: pulumi.Output<string | undefined>;
    /**
     * Remove private AS number from outbound updates
     */
    public readonly removePrivateAs!: pulumi.Output<number | undefined>;
    /**
     * restart value, 1 to 1440 minutes
     */
    public readonly restartMin!: pulumi.Output<number | undefined>;
    /**
     * Route-map to specify criteria to originate default (route-map name)
     */
    public readonly routeMap!: pulumi.Output<string | undefined>;
    /**
     * Advertise route-refresh capability to this neighbor
     */
    public readonly routeRefresh!: pulumi.Output<number | undefined>;
    /**
     * 'all': Send Standard, Extended, and Large Community attributes; 'both': Send Standard and Extended Community attributes;
     * 'none': Disable Sending Community attributes; 'standard': Send Standard Community attributes; 'extended': Send Extended
     * Community attributes; 'large': Send Large Community attributes;
     */
    public readonly sendCommunityVal!: pulumi.Output<string | undefined>;
    /**
     * Administratively shut down this neighbor
     */
    public readonly shutdown!: pulumi.Output<number | undefined>;
    /**
     * Strict capability negotiation match
     */
    public readonly strictCapabilityMatch!: pulumi.Output<number | undefined>;
    /**
     * Send BGP update to telemetry db
     */
    public readonly telemetry!: pulumi.Output<number | undefined>;
    /**
     * Holdtime
     */
    public readonly timersHoldtime!: pulumi.Output<number | undefined>;
    /**
     * Keepalive interval
     */
    public readonly timersKeepalive!: pulumi.Output<number | undefined>;
    /**
     * Trunk interface (Trunk interface number)
     */
    public readonly trunk!: pulumi.Output<number | undefined>;
    /**
     * Tunnel interface (Tunnel interface number)
     */
    public readonly tunnel!: pulumi.Output<number | undefined>;
    /**
     * Route-map to selectively unsuppress suppressed routes (Name of route map)
     */
    public readonly unsuppressMap!: pulumi.Output<string | undefined>;
    /**
     * IP address
     */
    public readonly updateSourceIp!: pulumi.Output<string | undefined>;
    /**
     * IPv6 address
     */
    public readonly updateSourceIpv6!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Virtual ethernet interface (Virtual ethernet interface number)
     */
    public readonly ve!: pulumi.Output<number | undefined>;
    /**
     * Set default weight for routes from this neighbor
     */
    public readonly weight!: pulumi.Output<number | undefined>;

    /**
     * Create a RouterBgpNeighborIpv4Neighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterBgpNeighborIpv4NeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpNeighborIpv4NeighborArgs | RouterBgpNeighborIpv4NeighborState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpNeighborIpv4NeighborState | undefined;
            resourceInputs["acosApplicationOnly"] = state ? state.acosApplicationOnly : undefined;
            resourceInputs["activate"] = state ? state.activate : undefined;
            resourceInputs["advertisementInterval"] = state ? state.advertisementInterval : undefined;
            resourceInputs["allowasIn"] = state ? state.allowasIn : undefined;
            resourceInputs["allowasInCount"] = state ? state.allowasInCount : undefined;
            resourceInputs["asNumber"] = state ? state.asNumber : undefined;
            resourceInputs["asOriginationInterval"] = state ? state.asOriginationInterval : undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["bfdValue"] = state ? state.bfdValue : undefined;
            resourceInputs["collideEstablished"] = state ? state.collideEstablished : undefined;
            resourceInputs["connect"] = state ? state.connect : undefined;
            resourceInputs["defaultOriginate"] = state ? state.defaultOriginate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disallowInfiniteHoldtime"] = state ? state.disallowInfiniteHoldtime : undefined;
            resourceInputs["distributeLists"] = state ? state.distributeLists : undefined;
            resourceInputs["dontCapabilityNegotiate"] = state ? state.dontCapabilityNegotiate : undefined;
            resourceInputs["dynamic"] = state ? state.dynamic : undefined;
            resourceInputs["ebgpMultihop"] = state ? state.ebgpMultihop : undefined;
            resourceInputs["ebgpMultihopHopCount"] = state ? state.ebgpMultihopHopCount : undefined;
            resourceInputs["enforceMultihop"] = state ? state.enforceMultihop : undefined;
            resourceInputs["ethernet"] = state ? state.ethernet : undefined;
            resourceInputs["gracefulRestart"] = state ? state.gracefulRestart : undefined;
            resourceInputs["inbound"] = state ? state.inbound : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["keyType"] = state ? state.keyType : undefined;
            resourceInputs["lif"] = state ? state.lif : undefined;
            resourceInputs["loopback"] = state ? state.loopback : undefined;
            resourceInputs["maximumPrefix"] = state ? state.maximumPrefix : undefined;
            resourceInputs["maximumPrefixThres"] = state ? state.maximumPrefixThres : undefined;
            resourceInputs["multihop"] = state ? state.multihop : undefined;
            resourceInputs["nbrRemoteAs"] = state ? state.nbrRemoteAs : undefined;
            resourceInputs["neighborFilterLists"] = state ? state.neighborFilterLists : undefined;
            resourceInputs["neighborIpv4"] = state ? state.neighborIpv4 : undefined;
            resourceInputs["neighborPrefixLists"] = state ? state.neighborPrefixLists : undefined;
            resourceInputs["neighborRouteMapLists"] = state ? state.neighborRouteMapLists : undefined;
            resourceInputs["nextHopSelf"] = state ? state.nextHopSelf : undefined;
            resourceInputs["overrideCapability"] = state ? state.overrideCapability : undefined;
            resourceInputs["passValue"] = state ? state.passValue : undefined;
            resourceInputs["passive"] = state ? state.passive : undefined;
            resourceInputs["peerGroupName"] = state ? state.peerGroupName : undefined;
            resourceInputs["prefixListDirection"] = state ? state.prefixListDirection : undefined;
            resourceInputs["removePrivateAs"] = state ? state.removePrivateAs : undefined;
            resourceInputs["restartMin"] = state ? state.restartMin : undefined;
            resourceInputs["routeMap"] = state ? state.routeMap : undefined;
            resourceInputs["routeRefresh"] = state ? state.routeRefresh : undefined;
            resourceInputs["sendCommunityVal"] = state ? state.sendCommunityVal : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["strictCapabilityMatch"] = state ? state.strictCapabilityMatch : undefined;
            resourceInputs["telemetry"] = state ? state.telemetry : undefined;
            resourceInputs["timersHoldtime"] = state ? state.timersHoldtime : undefined;
            resourceInputs["timersKeepalive"] = state ? state.timersKeepalive : undefined;
            resourceInputs["trunk"] = state ? state.trunk : undefined;
            resourceInputs["tunnel"] = state ? state.tunnel : undefined;
            resourceInputs["unsuppressMap"] = state ? state.unsuppressMap : undefined;
            resourceInputs["updateSourceIp"] = state ? state.updateSourceIp : undefined;
            resourceInputs["updateSourceIpv6"] = state ? state.updateSourceIpv6 : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["ve"] = state ? state.ve : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as RouterBgpNeighborIpv4NeighborArgs | undefined;
            if ((!args || args.asNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asNumber'");
            }
            if ((!args || args.neighborIpv4 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'neighborIpv4'");
            }
            resourceInputs["acosApplicationOnly"] = args ? args.acosApplicationOnly : undefined;
            resourceInputs["activate"] = args ? args.activate : undefined;
            resourceInputs["advertisementInterval"] = args ? args.advertisementInterval : undefined;
            resourceInputs["allowasIn"] = args ? args.allowasIn : undefined;
            resourceInputs["allowasInCount"] = args ? args.allowasInCount : undefined;
            resourceInputs["asNumber"] = args ? args.asNumber : undefined;
            resourceInputs["asOriginationInterval"] = args ? args.asOriginationInterval : undefined;
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["bfdValue"] = args ? args.bfdValue : undefined;
            resourceInputs["collideEstablished"] = args ? args.collideEstablished : undefined;
            resourceInputs["connect"] = args ? args.connect : undefined;
            resourceInputs["defaultOriginate"] = args ? args.defaultOriginate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disallowInfiniteHoldtime"] = args ? args.disallowInfiniteHoldtime : undefined;
            resourceInputs["distributeLists"] = args ? args.distributeLists : undefined;
            resourceInputs["dontCapabilityNegotiate"] = args ? args.dontCapabilityNegotiate : undefined;
            resourceInputs["dynamic"] = args ? args.dynamic : undefined;
            resourceInputs["ebgpMultihop"] = args ? args.ebgpMultihop : undefined;
            resourceInputs["ebgpMultihopHopCount"] = args ? args.ebgpMultihopHopCount : undefined;
            resourceInputs["enforceMultihop"] = args ? args.enforceMultihop : undefined;
            resourceInputs["ethernet"] = args ? args.ethernet : undefined;
            resourceInputs["gracefulRestart"] = args ? args.gracefulRestart : undefined;
            resourceInputs["inbound"] = args ? args.inbound : undefined;
            resourceInputs["keyId"] = args ? args.keyId : undefined;
            resourceInputs["keyType"] = args ? args.keyType : undefined;
            resourceInputs["lif"] = args ? args.lif : undefined;
            resourceInputs["loopback"] = args ? args.loopback : undefined;
            resourceInputs["maximumPrefix"] = args ? args.maximumPrefix : undefined;
            resourceInputs["maximumPrefixThres"] = args ? args.maximumPrefixThres : undefined;
            resourceInputs["multihop"] = args ? args.multihop : undefined;
            resourceInputs["nbrRemoteAs"] = args ? args.nbrRemoteAs : undefined;
            resourceInputs["neighborFilterLists"] = args ? args.neighborFilterLists : undefined;
            resourceInputs["neighborIpv4"] = args ? args.neighborIpv4 : undefined;
            resourceInputs["neighborPrefixLists"] = args ? args.neighborPrefixLists : undefined;
            resourceInputs["neighborRouteMapLists"] = args ? args.neighborRouteMapLists : undefined;
            resourceInputs["nextHopSelf"] = args ? args.nextHopSelf : undefined;
            resourceInputs["overrideCapability"] = args ? args.overrideCapability : undefined;
            resourceInputs["passValue"] = args ? args.passValue : undefined;
            resourceInputs["passive"] = args ? args.passive : undefined;
            resourceInputs["peerGroupName"] = args ? args.peerGroupName : undefined;
            resourceInputs["prefixListDirection"] = args ? args.prefixListDirection : undefined;
            resourceInputs["removePrivateAs"] = args ? args.removePrivateAs : undefined;
            resourceInputs["restartMin"] = args ? args.restartMin : undefined;
            resourceInputs["routeMap"] = args ? args.routeMap : undefined;
            resourceInputs["routeRefresh"] = args ? args.routeRefresh : undefined;
            resourceInputs["sendCommunityVal"] = args ? args.sendCommunityVal : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["strictCapabilityMatch"] = args ? args.strictCapabilityMatch : undefined;
            resourceInputs["telemetry"] = args ? args.telemetry : undefined;
            resourceInputs["timersHoldtime"] = args ? args.timersHoldtime : undefined;
            resourceInputs["timersKeepalive"] = args ? args.timersKeepalive : undefined;
            resourceInputs["trunk"] = args ? args.trunk : undefined;
            resourceInputs["tunnel"] = args ? args.tunnel : undefined;
            resourceInputs["unsuppressMap"] = args ? args.unsuppressMap : undefined;
            resourceInputs["updateSourceIp"] = args ? args.updateSourceIp : undefined;
            resourceInputs["updateSourceIpv6"] = args ? args.updateSourceIpv6 : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["ve"] = args ? args.ve : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgpNeighborIpv4Neighbor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgpNeighborIpv4Neighbor resources.
 */
export interface RouterBgpNeighborIpv4NeighborState {
    /**
     * Send BGP update to ACOS application
     */
    acosApplicationOnly?: pulumi.Input<number>;
    /**
     * Enable the Address Family for this Neighbor
     */
    activate?: pulumi.Input<number>;
    /**
     * Minimum interval between sending BGP routing updates (time in seconds)
     */
    advertisementInterval?: pulumi.Input<number>;
    /**
     * Accept as-path with my AS present in it
     */
    allowasIn?: pulumi.Input<number>;
    /**
     * Number of occurrences of AS number
     */
    allowasInCount?: pulumi.Input<number>;
    /**
     * AsNumber
     */
    asNumber?: pulumi.Input<string>;
    /**
     * Minimum interval between sending AS-origination routing updates (time in seconds)
     */
    asOriginationInterval?: pulumi.Input<number>;
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    bfd?: pulumi.Input<number>;
    /**
     * Key String
     */
    bfdValue?: pulumi.Input<string>;
    /**
     * Include Neighbor in Established State for Collision Detection
     */
    collideEstablished?: pulumi.Input<number>;
    /**
     * BGP connect timer
     */
    connect?: pulumi.Input<number>;
    /**
     * Originate default route to this neighbor
     */
    defaultOriginate?: pulumi.Input<number>;
    /**
     * Neighbor specific description (Up to 80 characters describing this neighbor)
     */
    description?: pulumi.Input<string>;
    /**
     * BGP per neighbor disallow-infinite-holdtime
     */
    disallowInfiniteHoldtime?: pulumi.Input<number>;
    distributeLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborDistributeList>[]>;
    /**
     * Do not perform capability negotiation
     */
    dontCapabilityNegotiate?: pulumi.Input<number>;
    /**
     * Advertise dynamic capability to this neighbor
     */
    dynamic?: pulumi.Input<number>;
    /**
     * Allow EBGP neighbors not on directly connected networks
     */
    ebgpMultihop?: pulumi.Input<number>;
    /**
     * maximum hop count
     */
    ebgpMultihopHopCount?: pulumi.Input<number>;
    /**
     * Enforce EBGP neighbors to perform multihop
     */
    enforceMultihop?: pulumi.Input<number>;
    /**
     * Ethernet interface (Port number)
     */
    ethernet?: pulumi.Input<number>;
    /**
     * enable graceful-restart helper for this neighbor
     */
    gracefulRestart?: pulumi.Input<number>;
    /**
     * Allow inbound soft reconfiguration for this neighbor
     */
    inbound?: pulumi.Input<number>;
    /**
     * Key ID
     */
    keyId?: pulumi.Input<number>;
    /**
     * 'md5': md5; 'meticulous-md5': meticulous-md5; 'meticulous-sha1': meticulous-sha1; 'sha1': sha1; 'simple': simple; (Keyed
     * MD5/Meticulous Keyed MD5/Meticulous Keyed SHA1/Keyed SHA1/Simple Password)
     */
    keyType?: pulumi.Input<string>;
    /**
     * Logical interface (Lif interface name)
     */
    lif?: pulumi.Input<string>;
    /**
     * Loopback interface (Port number)
     */
    loopback?: pulumi.Input<number>;
    /**
     * Maximum number of prefix accept from this peer (maximum no. of prefix limit (various depends on model))
     */
    maximumPrefix?: pulumi.Input<number>;
    /**
     * threshold-value, 1 to 100 percent
     */
    maximumPrefixThres?: pulumi.Input<number>;
    /**
     * Enable multihop
     */
    multihop?: pulumi.Input<number>;
    /**
     * Specify AS number of BGP neighbor
     */
    nbrRemoteAs?: pulumi.Input<string>;
    neighborFilterLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborNeighborFilterList>[]>;
    /**
     * Neighbor address
     */
    neighborIpv4?: pulumi.Input<string>;
    neighborPrefixLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborNeighborPrefixList>[]>;
    neighborRouteMapLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborNeighborRouteMapList>[]>;
    /**
     * Disable the next hop calculation for this neighbor
     */
    nextHopSelf?: pulumi.Input<number>;
    /**
     * Override capability negotiation result
     */
    overrideCapability?: pulumi.Input<number>;
    /**
     * Key String
     */
    passValue?: pulumi.Input<string>;
    /**
     * Don't send open messages to this neighbor
     */
    passive?: pulumi.Input<number>;
    /**
     * Configure peer-group (peer-group name)
     */
    peerGroupName?: pulumi.Input<string>;
    /**
     * 'both': both; 'receive': receive; 'send': send;
     */
    prefixListDirection?: pulumi.Input<string>;
    /**
     * Remove private AS number from outbound updates
     */
    removePrivateAs?: pulumi.Input<number>;
    /**
     * restart value, 1 to 1440 minutes
     */
    restartMin?: pulumi.Input<number>;
    /**
     * Route-map to specify criteria to originate default (route-map name)
     */
    routeMap?: pulumi.Input<string>;
    /**
     * Advertise route-refresh capability to this neighbor
     */
    routeRefresh?: pulumi.Input<number>;
    /**
     * 'all': Send Standard, Extended, and Large Community attributes; 'both': Send Standard and Extended Community attributes;
     * 'none': Disable Sending Community attributes; 'standard': Send Standard Community attributes; 'extended': Send Extended
     * Community attributes; 'large': Send Large Community attributes;
     */
    sendCommunityVal?: pulumi.Input<string>;
    /**
     * Administratively shut down this neighbor
     */
    shutdown?: pulumi.Input<number>;
    /**
     * Strict capability negotiation match
     */
    strictCapabilityMatch?: pulumi.Input<number>;
    /**
     * Send BGP update to telemetry db
     */
    telemetry?: pulumi.Input<number>;
    /**
     * Holdtime
     */
    timersHoldtime?: pulumi.Input<number>;
    /**
     * Keepalive interval
     */
    timersKeepalive?: pulumi.Input<number>;
    /**
     * Trunk interface (Trunk interface number)
     */
    trunk?: pulumi.Input<number>;
    /**
     * Tunnel interface (Tunnel interface number)
     */
    tunnel?: pulumi.Input<number>;
    /**
     * Route-map to selectively unsuppress suppressed routes (Name of route map)
     */
    unsuppressMap?: pulumi.Input<string>;
    /**
     * IP address
     */
    updateSourceIp?: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    updateSourceIpv6?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Virtual ethernet interface (Virtual ethernet interface number)
     */
    ve?: pulumi.Input<number>;
    /**
     * Set default weight for routes from this neighbor
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RouterBgpNeighborIpv4Neighbor resource.
 */
export interface RouterBgpNeighborIpv4NeighborArgs {
    /**
     * Send BGP update to ACOS application
     */
    acosApplicationOnly?: pulumi.Input<number>;
    /**
     * Enable the Address Family for this Neighbor
     */
    activate?: pulumi.Input<number>;
    /**
     * Minimum interval between sending BGP routing updates (time in seconds)
     */
    advertisementInterval?: pulumi.Input<number>;
    /**
     * Accept as-path with my AS present in it
     */
    allowasIn?: pulumi.Input<number>;
    /**
     * Number of occurrences of AS number
     */
    allowasInCount?: pulumi.Input<number>;
    /**
     * AsNumber
     */
    asNumber: pulumi.Input<string>;
    /**
     * Minimum interval between sending AS-origination routing updates (time in seconds)
     */
    asOriginationInterval?: pulumi.Input<number>;
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    bfd?: pulumi.Input<number>;
    /**
     * Key String
     */
    bfdValue?: pulumi.Input<string>;
    /**
     * Include Neighbor in Established State for Collision Detection
     */
    collideEstablished?: pulumi.Input<number>;
    /**
     * BGP connect timer
     */
    connect?: pulumi.Input<number>;
    /**
     * Originate default route to this neighbor
     */
    defaultOriginate?: pulumi.Input<number>;
    /**
     * Neighbor specific description (Up to 80 characters describing this neighbor)
     */
    description?: pulumi.Input<string>;
    /**
     * BGP per neighbor disallow-infinite-holdtime
     */
    disallowInfiniteHoldtime?: pulumi.Input<number>;
    distributeLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborDistributeList>[]>;
    /**
     * Do not perform capability negotiation
     */
    dontCapabilityNegotiate?: pulumi.Input<number>;
    /**
     * Advertise dynamic capability to this neighbor
     */
    dynamic?: pulumi.Input<number>;
    /**
     * Allow EBGP neighbors not on directly connected networks
     */
    ebgpMultihop?: pulumi.Input<number>;
    /**
     * maximum hop count
     */
    ebgpMultihopHopCount?: pulumi.Input<number>;
    /**
     * Enforce EBGP neighbors to perform multihop
     */
    enforceMultihop?: pulumi.Input<number>;
    /**
     * Ethernet interface (Port number)
     */
    ethernet?: pulumi.Input<number>;
    /**
     * enable graceful-restart helper for this neighbor
     */
    gracefulRestart?: pulumi.Input<number>;
    /**
     * Allow inbound soft reconfiguration for this neighbor
     */
    inbound?: pulumi.Input<number>;
    /**
     * Key ID
     */
    keyId?: pulumi.Input<number>;
    /**
     * 'md5': md5; 'meticulous-md5': meticulous-md5; 'meticulous-sha1': meticulous-sha1; 'sha1': sha1; 'simple': simple; (Keyed
     * MD5/Meticulous Keyed MD5/Meticulous Keyed SHA1/Keyed SHA1/Simple Password)
     */
    keyType?: pulumi.Input<string>;
    /**
     * Logical interface (Lif interface name)
     */
    lif?: pulumi.Input<string>;
    /**
     * Loopback interface (Port number)
     */
    loopback?: pulumi.Input<number>;
    /**
     * Maximum number of prefix accept from this peer (maximum no. of prefix limit (various depends on model))
     */
    maximumPrefix?: pulumi.Input<number>;
    /**
     * threshold-value, 1 to 100 percent
     */
    maximumPrefixThres?: pulumi.Input<number>;
    /**
     * Enable multihop
     */
    multihop?: pulumi.Input<number>;
    /**
     * Specify AS number of BGP neighbor
     */
    nbrRemoteAs?: pulumi.Input<string>;
    neighborFilterLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborNeighborFilterList>[]>;
    /**
     * Neighbor address
     */
    neighborIpv4: pulumi.Input<string>;
    neighborPrefixLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborNeighborPrefixList>[]>;
    neighborRouteMapLists?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborIpv4NeighborNeighborRouteMapList>[]>;
    /**
     * Disable the next hop calculation for this neighbor
     */
    nextHopSelf?: pulumi.Input<number>;
    /**
     * Override capability negotiation result
     */
    overrideCapability?: pulumi.Input<number>;
    /**
     * Key String
     */
    passValue?: pulumi.Input<string>;
    /**
     * Don't send open messages to this neighbor
     */
    passive?: pulumi.Input<number>;
    /**
     * Configure peer-group (peer-group name)
     */
    peerGroupName?: pulumi.Input<string>;
    /**
     * 'both': both; 'receive': receive; 'send': send;
     */
    prefixListDirection?: pulumi.Input<string>;
    /**
     * Remove private AS number from outbound updates
     */
    removePrivateAs?: pulumi.Input<number>;
    /**
     * restart value, 1 to 1440 minutes
     */
    restartMin?: pulumi.Input<number>;
    /**
     * Route-map to specify criteria to originate default (route-map name)
     */
    routeMap?: pulumi.Input<string>;
    /**
     * Advertise route-refresh capability to this neighbor
     */
    routeRefresh?: pulumi.Input<number>;
    /**
     * 'all': Send Standard, Extended, and Large Community attributes; 'both': Send Standard and Extended Community attributes;
     * 'none': Disable Sending Community attributes; 'standard': Send Standard Community attributes; 'extended': Send Extended
     * Community attributes; 'large': Send Large Community attributes;
     */
    sendCommunityVal?: pulumi.Input<string>;
    /**
     * Administratively shut down this neighbor
     */
    shutdown?: pulumi.Input<number>;
    /**
     * Strict capability negotiation match
     */
    strictCapabilityMatch?: pulumi.Input<number>;
    /**
     * Send BGP update to telemetry db
     */
    telemetry?: pulumi.Input<number>;
    /**
     * Holdtime
     */
    timersHoldtime?: pulumi.Input<number>;
    /**
     * Keepalive interval
     */
    timersKeepalive?: pulumi.Input<number>;
    /**
     * Trunk interface (Trunk interface number)
     */
    trunk?: pulumi.Input<number>;
    /**
     * Tunnel interface (Tunnel interface number)
     */
    tunnel?: pulumi.Input<number>;
    /**
     * Route-map to selectively unsuppress suppressed routes (Name of route map)
     */
    unsuppressMap?: pulumi.Input<string>;
    /**
     * IP address
     */
    updateSourceIp?: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    updateSourceIpv6?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Virtual ethernet interface (Virtual ethernet interface number)
     */
    ve?: pulumi.Input<number>;
    /**
     * Set default weight for routes from this neighbor
     */
    weight?: pulumi.Input<number>;
}
