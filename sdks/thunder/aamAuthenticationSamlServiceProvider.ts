// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AamAuthenticationSamlServiceProvider extends pulumi.CustomResource {
    /**
     * Get an existing AamAuthenticationSamlServiceProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AamAuthenticationSamlServiceProviderState, opts?: pulumi.CustomResourceOptions): AamAuthenticationSamlServiceProvider {
        return new AamAuthenticationSamlServiceProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/aamAuthenticationSamlServiceProvider:AamAuthenticationSamlServiceProvider';

    /**
     * Returns true if the given object is an instance of AamAuthenticationSamlServiceProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AamAuthenticationSamlServiceProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AamAuthenticationSamlServiceProvider.__pulumiType;
    }

    /**
     * After user authenticated, bypass requests with assertion-consuming-service location URI
     */
    public readonly acsUriBypass!: pulumi.Output<number | undefined>;
    public readonly adfsWsFederation!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderAdfsWsFederation | undefined>;
    public readonly artifactResolutionServices!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderArtifactResolutionService[] | undefined>;
    public readonly assertionConsumingServices!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderAssertionConsumingService[] | undefined>;
    /**
     * Specify URL to redirect
     */
    public readonly badRequestRedirectUrl!: pulumi.Output<string | undefined>;
    /**
     * SAML service provider certificate file (PFX format is required.)
     */
    public readonly certificate!: pulumi.Output<string | undefined>;
    /**
     * SAML service provider entity ID
     */
    public readonly entityId!: pulumi.Output<string | undefined>;
    public readonly metadataExportService!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderMetadataExportService | undefined>;
    /**
     * Specify SAML authentication service provider name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    public readonly packetCaptureTemplate!: pulumi.Output<string | undefined>;
    public readonly requireAssertionSigned!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderRequireAssertionSigned | undefined>;
    public readonly samlRequestSigned!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderSamlRequestSigned | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderSamplingEnable[] | undefined>;
    /**
     * SAML service provider service URL (ex. https://www.a10networks.com/saml.sso)
     */
    public readonly serviceUrl!: pulumi.Output<string | undefined>;
    /**
     * 'SHA1': use SHA1 as signature algorithm (default); 'SHA256': use SHA256 as signature algorithm;
     */
    public readonly signatureAlgorithm!: pulumi.Output<string | undefined>;
    public readonly singleLogoutServices!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderSingleLogoutService[] | undefined>;
    public readonly soapTlsCertificateValidate!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderSoapTlsCertificateValidate | undefined>;
    public readonly spInitiatedSingleLogoutServices!: pulumi.Output<outputs.AamAuthenticationSamlServiceProviderSpInitiatedSingleLogoutService[] | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a AamAuthenticationSamlServiceProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AamAuthenticationSamlServiceProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AamAuthenticationSamlServiceProviderArgs | AamAuthenticationSamlServiceProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AamAuthenticationSamlServiceProviderState | undefined;
            resourceInputs["acsUriBypass"] = state ? state.acsUriBypass : undefined;
            resourceInputs["adfsWsFederation"] = state ? state.adfsWsFederation : undefined;
            resourceInputs["artifactResolutionServices"] = state ? state.artifactResolutionServices : undefined;
            resourceInputs["assertionConsumingServices"] = state ? state.assertionConsumingServices : undefined;
            resourceInputs["badRequestRedirectUrl"] = state ? state.badRequestRedirectUrl : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["entityId"] = state ? state.entityId : undefined;
            resourceInputs["metadataExportService"] = state ? state.metadataExportService : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packetCaptureTemplate"] = state ? state.packetCaptureTemplate : undefined;
            resourceInputs["requireAssertionSigned"] = state ? state.requireAssertionSigned : undefined;
            resourceInputs["samlRequestSigned"] = state ? state.samlRequestSigned : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["serviceUrl"] = state ? state.serviceUrl : undefined;
            resourceInputs["signatureAlgorithm"] = state ? state.signatureAlgorithm : undefined;
            resourceInputs["singleLogoutServices"] = state ? state.singleLogoutServices : undefined;
            resourceInputs["soapTlsCertificateValidate"] = state ? state.soapTlsCertificateValidate : undefined;
            resourceInputs["spInitiatedSingleLogoutServices"] = state ? state.spInitiatedSingleLogoutServices : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AamAuthenticationSamlServiceProviderArgs | undefined;
            resourceInputs["acsUriBypass"] = args ? args.acsUriBypass : undefined;
            resourceInputs["adfsWsFederation"] = args ? args.adfsWsFederation : undefined;
            resourceInputs["artifactResolutionServices"] = args ? args.artifactResolutionServices : undefined;
            resourceInputs["assertionConsumingServices"] = args ? args.assertionConsumingServices : undefined;
            resourceInputs["badRequestRedirectUrl"] = args ? args.badRequestRedirectUrl : undefined;
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["entityId"] = args ? args.entityId : undefined;
            resourceInputs["metadataExportService"] = args ? args.metadataExportService : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packetCaptureTemplate"] = args ? args.packetCaptureTemplate : undefined;
            resourceInputs["requireAssertionSigned"] = args ? args.requireAssertionSigned : undefined;
            resourceInputs["samlRequestSigned"] = args ? args.samlRequestSigned : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["serviceUrl"] = args ? args.serviceUrl : undefined;
            resourceInputs["signatureAlgorithm"] = args ? args.signatureAlgorithm : undefined;
            resourceInputs["singleLogoutServices"] = args ? args.singleLogoutServices : undefined;
            resourceInputs["soapTlsCertificateValidate"] = args ? args.soapTlsCertificateValidate : undefined;
            resourceInputs["spInitiatedSingleLogoutServices"] = args ? args.spInitiatedSingleLogoutServices : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AamAuthenticationSamlServiceProvider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AamAuthenticationSamlServiceProvider resources.
 */
export interface AamAuthenticationSamlServiceProviderState {
    /**
     * After user authenticated, bypass requests with assertion-consuming-service location URI
     */
    acsUriBypass?: pulumi.Input<number>;
    adfsWsFederation?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderAdfsWsFederation>;
    artifactResolutionServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderArtifactResolutionService>[]>;
    assertionConsumingServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderAssertionConsumingService>[]>;
    /**
     * Specify URL to redirect
     */
    badRequestRedirectUrl?: pulumi.Input<string>;
    /**
     * SAML service provider certificate file (PFX format is required.)
     */
    certificate?: pulumi.Input<string>;
    /**
     * SAML service provider entity ID
     */
    entityId?: pulumi.Input<string>;
    metadataExportService?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderMetadataExportService>;
    /**
     * Specify SAML authentication service provider name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    requireAssertionSigned?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderRequireAssertionSigned>;
    samlRequestSigned?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSamlRequestSigned>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSamplingEnable>[]>;
    /**
     * SAML service provider service URL (ex. https://www.a10networks.com/saml.sso)
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * 'SHA1': use SHA1 as signature algorithm (default); 'SHA256': use SHA256 as signature algorithm;
     */
    signatureAlgorithm?: pulumi.Input<string>;
    singleLogoutServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSingleLogoutService>[]>;
    soapTlsCertificateValidate?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSoapTlsCertificateValidate>;
    spInitiatedSingleLogoutServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSpInitiatedSingleLogoutService>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AamAuthenticationSamlServiceProvider resource.
 */
export interface AamAuthenticationSamlServiceProviderArgs {
    /**
     * After user authenticated, bypass requests with assertion-consuming-service location URI
     */
    acsUriBypass?: pulumi.Input<number>;
    adfsWsFederation?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderAdfsWsFederation>;
    artifactResolutionServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderArtifactResolutionService>[]>;
    assertionConsumingServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderAssertionConsumingService>[]>;
    /**
     * Specify URL to redirect
     */
    badRequestRedirectUrl?: pulumi.Input<string>;
    /**
     * SAML service provider certificate file (PFX format is required.)
     */
    certificate?: pulumi.Input<string>;
    /**
     * SAML service provider entity ID
     */
    entityId?: pulumi.Input<string>;
    metadataExportService?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderMetadataExportService>;
    /**
     * Specify SAML authentication service provider name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    requireAssertionSigned?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderRequireAssertionSigned>;
    samlRequestSigned?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSamlRequestSigned>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSamplingEnable>[]>;
    /**
     * SAML service provider service URL (ex. https://www.a10networks.com/saml.sso)
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * 'SHA1': use SHA1 as signature algorithm (default); 'SHA256': use SHA256 as signature algorithm;
     */
    signatureAlgorithm?: pulumi.Input<string>;
    singleLogoutServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSingleLogoutService>[]>;
    soapTlsCertificateValidate?: pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSoapTlsCertificateValidate>;
    spInitiatedSingleLogoutServices?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationSamlServiceProviderSpInitiatedSingleLogoutService>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
