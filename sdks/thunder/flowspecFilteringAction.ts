// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FlowspecFilteringAction extends pulumi.CustomResource {
    /**
     * Get an existing FlowspecFilteringAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlowspecFilteringActionState, opts?: pulumi.CustomResourceOptions): FlowspecFilteringAction {
        return new FlowspecFilteringAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/flowspecFilteringAction:FlowspecFilteringAction';

    /**
     * Returns true if the given object is an instance of FlowspecFilteringAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlowspecFilteringAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlowspecFilteringAction.__pulumiType;
    }

    /**
     * Copy bit
     */
    public readonly copyIpHost!: pulumi.Output<number | undefined>;
    /**
     * Copy bit
     */
    public readonly copyIpHostNlri!: pulumi.Output<number | undefined>;
    /**
     * Copy bit
     */
    public readonly copyIpv6Host!: pulumi.Output<number | undefined>;
    /**
     * Copy bit
     */
    public readonly copyIpv6HostNlri!: pulumi.Output<number | undefined>;
    /**
     * Set DSCP value
     */
    public readonly dscpVal!: pulumi.Output<number | undefined>;
    /**
     * Custom Extended Community in Hex
     */
    public readonly ecommCustomHex!: pulumi.Output<string | undefined>;
    /**
     * IPv4 host address
     */
    public readonly ipHost!: pulumi.Output<string | undefined>;
    /**
     * IPv4 host address
     */
    public readonly ipHostNlri!: pulumi.Output<string | undefined>;
    /**
     * Type 0x8108 - Route Target IPv4
     */
    public readonly ipHostRt!: pulumi.Output<string | undefined>;
    /**
     * IPv6 host address
     */
    public readonly ipv6Host!: pulumi.Output<string | undefined>;
    /**
     * IPv6 host address
     */
    public readonly ipv6HostNlri!: pulumi.Output<string | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 'ip': Type 0x0800 - IPv4 Address; 'ipv6': Type 0x0800 - IPv6 Address;
     */
    public readonly nextHopNlriType!: pulumi.Output<string | undefined>;
    /**
     * 'ip': Type 0x0800 - IPv4 Address; 'ipv6': Type 0x0800 - IPv6 Address;
     */
    public readonly nextHopType!: pulumi.Output<string | undefined>;
    /**
     * 'next-hop-nlri': Type 0x0800 - IP encoded in MP_REACH_NLRI Next-hop network; 'next-hop': Type 0x0800 - Extended
     * community Next-hop (Per v2 dated Feb 2015); 'vrf-route-target': Type 0x8008 - Redirect to VRF Route Target;
     */
    public readonly redirect!: pulumi.Output<string | undefined>;
    /**
     * Enable traffic sampling and logging
     */
    public readonly sampleLog!: pulumi.Output<number | undefined>;
    /**
     * Evaluation stops after this rule if not set
     */
    public readonly terminalAction!: pulumi.Output<number | undefined>;
    /**
     * Set IPv6 Traffic Class value
     */
    public readonly trafficClass!: pulumi.Output<number | undefined>;
    /**
     * 'dscp': IPv4 DSCP; 'ipv6-traffic-class': IPv6 Traffic Class;
     */
    public readonly trafficMarking!: pulumi.Output<string | undefined>;
    /**
     * Type 0x8006 - Apply rate (in Bytes per second) for this class of traffic
     */
    public readonly trafficRate!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * 2-byte decimal value(local-administrator)
     */
    public readonly valueIpHost!: pulumi.Output<number | undefined>;
    /**
     * 'ip': Type 0x8108 - Redirect to route-target IP;
     */
    public readonly vrfTargetIp!: pulumi.Output<string | undefined>;
    /**
     * Type 0x8008(ASN-2:Index), 0x8208(ASN-4:Index) - Route Target AS
     */
    public readonly vrfTargetString!: pulumi.Output<string | undefined>;

    /**
     * Create a FlowspecFilteringAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FlowspecFilteringActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlowspecFilteringActionArgs | FlowspecFilteringActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlowspecFilteringActionState | undefined;
            resourceInputs["copyIpHost"] = state ? state.copyIpHost : undefined;
            resourceInputs["copyIpHostNlri"] = state ? state.copyIpHostNlri : undefined;
            resourceInputs["copyIpv6Host"] = state ? state.copyIpv6Host : undefined;
            resourceInputs["copyIpv6HostNlri"] = state ? state.copyIpv6HostNlri : undefined;
            resourceInputs["dscpVal"] = state ? state.dscpVal : undefined;
            resourceInputs["ecommCustomHex"] = state ? state.ecommCustomHex : undefined;
            resourceInputs["ipHost"] = state ? state.ipHost : undefined;
            resourceInputs["ipHostNlri"] = state ? state.ipHostNlri : undefined;
            resourceInputs["ipHostRt"] = state ? state.ipHostRt : undefined;
            resourceInputs["ipv6Host"] = state ? state.ipv6Host : undefined;
            resourceInputs["ipv6HostNlri"] = state ? state.ipv6HostNlri : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nextHopNlriType"] = state ? state.nextHopNlriType : undefined;
            resourceInputs["nextHopType"] = state ? state.nextHopType : undefined;
            resourceInputs["redirect"] = state ? state.redirect : undefined;
            resourceInputs["sampleLog"] = state ? state.sampleLog : undefined;
            resourceInputs["terminalAction"] = state ? state.terminalAction : undefined;
            resourceInputs["trafficClass"] = state ? state.trafficClass : undefined;
            resourceInputs["trafficMarking"] = state ? state.trafficMarking : undefined;
            resourceInputs["trafficRate"] = state ? state.trafficRate : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["valueIpHost"] = state ? state.valueIpHost : undefined;
            resourceInputs["vrfTargetIp"] = state ? state.vrfTargetIp : undefined;
            resourceInputs["vrfTargetString"] = state ? state.vrfTargetString : undefined;
        } else {
            const args = argsOrState as FlowspecFilteringActionArgs | undefined;
            resourceInputs["copyIpHost"] = args ? args.copyIpHost : undefined;
            resourceInputs["copyIpHostNlri"] = args ? args.copyIpHostNlri : undefined;
            resourceInputs["copyIpv6Host"] = args ? args.copyIpv6Host : undefined;
            resourceInputs["copyIpv6HostNlri"] = args ? args.copyIpv6HostNlri : undefined;
            resourceInputs["dscpVal"] = args ? args.dscpVal : undefined;
            resourceInputs["ecommCustomHex"] = args ? args.ecommCustomHex : undefined;
            resourceInputs["ipHost"] = args ? args.ipHost : undefined;
            resourceInputs["ipHostNlri"] = args ? args.ipHostNlri : undefined;
            resourceInputs["ipHostRt"] = args ? args.ipHostRt : undefined;
            resourceInputs["ipv6Host"] = args ? args.ipv6Host : undefined;
            resourceInputs["ipv6HostNlri"] = args ? args.ipv6HostNlri : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nextHopNlriType"] = args ? args.nextHopNlriType : undefined;
            resourceInputs["nextHopType"] = args ? args.nextHopType : undefined;
            resourceInputs["redirect"] = args ? args.redirect : undefined;
            resourceInputs["sampleLog"] = args ? args.sampleLog : undefined;
            resourceInputs["terminalAction"] = args ? args.terminalAction : undefined;
            resourceInputs["trafficClass"] = args ? args.trafficClass : undefined;
            resourceInputs["trafficMarking"] = args ? args.trafficMarking : undefined;
            resourceInputs["trafficRate"] = args ? args.trafficRate : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["valueIpHost"] = args ? args.valueIpHost : undefined;
            resourceInputs["vrfTargetIp"] = args ? args.vrfTargetIp : undefined;
            resourceInputs["vrfTargetString"] = args ? args.vrfTargetString : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlowspecFilteringAction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FlowspecFilteringAction resources.
 */
export interface FlowspecFilteringActionState {
    /**
     * Copy bit
     */
    copyIpHost?: pulumi.Input<number>;
    /**
     * Copy bit
     */
    copyIpHostNlri?: pulumi.Input<number>;
    /**
     * Copy bit
     */
    copyIpv6Host?: pulumi.Input<number>;
    /**
     * Copy bit
     */
    copyIpv6HostNlri?: pulumi.Input<number>;
    /**
     * Set DSCP value
     */
    dscpVal?: pulumi.Input<number>;
    /**
     * Custom Extended Community in Hex
     */
    ecommCustomHex?: pulumi.Input<string>;
    /**
     * IPv4 host address
     */
    ipHost?: pulumi.Input<string>;
    /**
     * IPv4 host address
     */
    ipHostNlri?: pulumi.Input<string>;
    /**
     * Type 0x8108 - Route Target IPv4
     */
    ipHostRt?: pulumi.Input<string>;
    /**
     * IPv6 host address
     */
    ipv6Host?: pulumi.Input<string>;
    /**
     * IPv6 host address
     */
    ipv6HostNlri?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * 'ip': Type 0x0800 - IPv4 Address; 'ipv6': Type 0x0800 - IPv6 Address;
     */
    nextHopNlriType?: pulumi.Input<string>;
    /**
     * 'ip': Type 0x0800 - IPv4 Address; 'ipv6': Type 0x0800 - IPv6 Address;
     */
    nextHopType?: pulumi.Input<string>;
    /**
     * 'next-hop-nlri': Type 0x0800 - IP encoded in MP_REACH_NLRI Next-hop network; 'next-hop': Type 0x0800 - Extended
     * community Next-hop (Per v2 dated Feb 2015); 'vrf-route-target': Type 0x8008 - Redirect to VRF Route Target;
     */
    redirect?: pulumi.Input<string>;
    /**
     * Enable traffic sampling and logging
     */
    sampleLog?: pulumi.Input<number>;
    /**
     * Evaluation stops after this rule if not set
     */
    terminalAction?: pulumi.Input<number>;
    /**
     * Set IPv6 Traffic Class value
     */
    trafficClass?: pulumi.Input<number>;
    /**
     * 'dscp': IPv4 DSCP; 'ipv6-traffic-class': IPv6 Traffic Class;
     */
    trafficMarking?: pulumi.Input<string>;
    /**
     * Type 0x8006 - Apply rate (in Bytes per second) for this class of traffic
     */
    trafficRate?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 2-byte decimal value(local-administrator)
     */
    valueIpHost?: pulumi.Input<number>;
    /**
     * 'ip': Type 0x8108 - Redirect to route-target IP;
     */
    vrfTargetIp?: pulumi.Input<string>;
    /**
     * Type 0x8008(ASN-2:Index), 0x8208(ASN-4:Index) - Route Target AS
     */
    vrfTargetString?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlowspecFilteringAction resource.
 */
export interface FlowspecFilteringActionArgs {
    /**
     * Copy bit
     */
    copyIpHost?: pulumi.Input<number>;
    /**
     * Copy bit
     */
    copyIpHostNlri?: pulumi.Input<number>;
    /**
     * Copy bit
     */
    copyIpv6Host?: pulumi.Input<number>;
    /**
     * Copy bit
     */
    copyIpv6HostNlri?: pulumi.Input<number>;
    /**
     * Set DSCP value
     */
    dscpVal?: pulumi.Input<number>;
    /**
     * Custom Extended Community in Hex
     */
    ecommCustomHex?: pulumi.Input<string>;
    /**
     * IPv4 host address
     */
    ipHost?: pulumi.Input<string>;
    /**
     * IPv4 host address
     */
    ipHostNlri?: pulumi.Input<string>;
    /**
     * Type 0x8108 - Route Target IPv4
     */
    ipHostRt?: pulumi.Input<string>;
    /**
     * IPv6 host address
     */
    ipv6Host?: pulumi.Input<string>;
    /**
     * IPv6 host address
     */
    ipv6HostNlri?: pulumi.Input<string>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * 'ip': Type 0x0800 - IPv4 Address; 'ipv6': Type 0x0800 - IPv6 Address;
     */
    nextHopNlriType?: pulumi.Input<string>;
    /**
     * 'ip': Type 0x0800 - IPv4 Address; 'ipv6': Type 0x0800 - IPv6 Address;
     */
    nextHopType?: pulumi.Input<string>;
    /**
     * 'next-hop-nlri': Type 0x0800 - IP encoded in MP_REACH_NLRI Next-hop network; 'next-hop': Type 0x0800 - Extended
     * community Next-hop (Per v2 dated Feb 2015); 'vrf-route-target': Type 0x8008 - Redirect to VRF Route Target;
     */
    redirect?: pulumi.Input<string>;
    /**
     * Enable traffic sampling and logging
     */
    sampleLog?: pulumi.Input<number>;
    /**
     * Evaluation stops after this rule if not set
     */
    terminalAction?: pulumi.Input<number>;
    /**
     * Set IPv6 Traffic Class value
     */
    trafficClass?: pulumi.Input<number>;
    /**
     * 'dscp': IPv4 DSCP; 'ipv6-traffic-class': IPv6 Traffic Class;
     */
    trafficMarking?: pulumi.Input<string>;
    /**
     * Type 0x8006 - Apply rate (in Bytes per second) for this class of traffic
     */
    trafficRate?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * 2-byte decimal value(local-administrator)
     */
    valueIpHost?: pulumi.Input<number>;
    /**
     * 'ip': Type 0x8108 - Redirect to route-target IP;
     */
    vrfTargetIp?: pulumi.Input<string>;
    /**
     * Type 0x8008(ASN-2:Index), 0x8208(ASN-4:Index) - Route Target AS
     */
    vrfTargetString?: pulumi.Input<string>;
}
