// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSlbSslAcmeCertStatusOper(args?: GetSlbSslAcmeCertStatusOperArgs, opts?: pulumi.InvokeOptions): Promise<GetSlbSslAcmeCertStatusOperResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getSlbSslAcmeCertStatusOper:getSlbSslAcmeCertStatusOper", {
        "id": args.id,
        "oper": args.oper,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSlbSslAcmeCertStatusOper.
 */
export interface GetSlbSslAcmeCertStatusOperArgs {
    id?: string;
    oper?: inputs.GetSlbSslAcmeCertStatusOperOper;
}

/**
 * A collection of values returned by getSlbSslAcmeCertStatusOper.
 */
export interface GetSlbSslAcmeCertStatusOperResult {
    readonly id: string;
    readonly oper?: outputs.GetSlbSslAcmeCertStatusOperOper;
}
export function getSlbSslAcmeCertStatusOperOutput(args?: GetSlbSslAcmeCertStatusOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSlbSslAcmeCertStatusOperResult> {
    return pulumi.output(args).apply((a: any) => getSlbSslAcmeCertStatusOper(a, opts))
}

/**
 * A collection of arguments for invoking getSlbSslAcmeCertStatusOper.
 */
export interface GetSlbSslAcmeCertStatusOperOutputArgs {
    id?: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetSlbSslAcmeCertStatusOperOperArgs>;
}
