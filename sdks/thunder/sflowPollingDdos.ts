// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SflowPollingDdos extends pulumi.CustomResource {
    /**
     * Get an existing SflowPollingDdos resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SflowPollingDdosState, opts?: pulumi.CustomResourceOptions): SflowPollingDdos {
        return new SflowPollingDdos(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/sflowPollingDdos:SflowPollingDdos';

    /**
     * Returns true if the given object is an instance of SflowPollingDdos.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SflowPollingDdos {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SflowPollingDdos.__pulumiType;
    }

    /**
     * Export sflow address field in host byte order
     */
    public readonly addressByteOrderHost!: pulumi.Output<number | undefined>;
    /**
     * Enable DDOS sflow polling 2.9 compatibility mode
     */
    public readonly compatibility29!: pulumi.Output<number | undefined>;
    /**
     * Enable DDOS sflow polling 3.0/3.1 compatibility mode
     */
    public readonly compatibility30!: pulumi.Output<number | undefined>;
    /**
     * Enable polling for dns cache per instance and per zone statistics
     */
    public readonly dnsCacheZoneStats!: pulumi.Output<number | undefined>;
    /**
     * Enable polling for dynamic entry statistics
     */
    public readonly dynEntryStats!: pulumi.Output<number | undefined>;
    /**
     * Enable Polling for system wide anomaly statistics
     */
    public readonly enableAnomalyStats!: pulumi.Output<number | undefined>;
    /**
     * 'enable': Enable sflow polling for DDOS statistics; 'disable': Disable sflow polling for DDOS statistics;
     */
    public readonly toggle!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SflowPollingDdos resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SflowPollingDdosArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SflowPollingDdosArgs | SflowPollingDdosState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SflowPollingDdosState | undefined;
            resourceInputs["addressByteOrderHost"] = state ? state.addressByteOrderHost : undefined;
            resourceInputs["compatibility29"] = state ? state.compatibility29 : undefined;
            resourceInputs["compatibility30"] = state ? state.compatibility30 : undefined;
            resourceInputs["dnsCacheZoneStats"] = state ? state.dnsCacheZoneStats : undefined;
            resourceInputs["dynEntryStats"] = state ? state.dynEntryStats : undefined;
            resourceInputs["enableAnomalyStats"] = state ? state.enableAnomalyStats : undefined;
            resourceInputs["toggle"] = state ? state.toggle : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SflowPollingDdosArgs | undefined;
            resourceInputs["addressByteOrderHost"] = args ? args.addressByteOrderHost : undefined;
            resourceInputs["compatibility29"] = args ? args.compatibility29 : undefined;
            resourceInputs["compatibility30"] = args ? args.compatibility30 : undefined;
            resourceInputs["dnsCacheZoneStats"] = args ? args.dnsCacheZoneStats : undefined;
            resourceInputs["dynEntryStats"] = args ? args.dynEntryStats : undefined;
            resourceInputs["enableAnomalyStats"] = args ? args.enableAnomalyStats : undefined;
            resourceInputs["toggle"] = args ? args.toggle : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SflowPollingDdos.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SflowPollingDdos resources.
 */
export interface SflowPollingDdosState {
    /**
     * Export sflow address field in host byte order
     */
    addressByteOrderHost?: pulumi.Input<number>;
    /**
     * Enable DDOS sflow polling 2.9 compatibility mode
     */
    compatibility29?: pulumi.Input<number>;
    /**
     * Enable DDOS sflow polling 3.0/3.1 compatibility mode
     */
    compatibility30?: pulumi.Input<number>;
    /**
     * Enable polling for dns cache per instance and per zone statistics
     */
    dnsCacheZoneStats?: pulumi.Input<number>;
    /**
     * Enable polling for dynamic entry statistics
     */
    dynEntryStats?: pulumi.Input<number>;
    /**
     * Enable Polling for system wide anomaly statistics
     */
    enableAnomalyStats?: pulumi.Input<number>;
    /**
     * 'enable': Enable sflow polling for DDOS statistics; 'disable': Disable sflow polling for DDOS statistics;
     */
    toggle?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SflowPollingDdos resource.
 */
export interface SflowPollingDdosArgs {
    /**
     * Export sflow address field in host byte order
     */
    addressByteOrderHost?: pulumi.Input<number>;
    /**
     * Enable DDOS sflow polling 2.9 compatibility mode
     */
    compatibility29?: pulumi.Input<number>;
    /**
     * Enable DDOS sflow polling 3.0/3.1 compatibility mode
     */
    compatibility30?: pulumi.Input<number>;
    /**
     * Enable polling for dns cache per instance and per zone statistics
     */
    dnsCacheZoneStats?: pulumi.Input<number>;
    /**
     * Enable polling for dynamic entry statistics
     */
    dynEntryStats?: pulumi.Input<number>;
    /**
     * Enable Polling for system wide anomaly statistics
     */
    enableAnomalyStats?: pulumi.Input<number>;
    /**
     * 'enable': Enable sflow polling for DDOS statistics; 'disable': Disable sflow polling for DDOS statistics;
     */
    toggle?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
