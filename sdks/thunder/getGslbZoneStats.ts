// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbZoneStats(args: GetGslbZoneStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbZoneStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbZoneStats:getGslbZoneStats", {
        "dnsCaaRecordLists": args.dnsCaaRecordLists,
        "dnsMxRecordLists": args.dnsMxRecordLists,
        "dnsNsRecordLists": args.dnsNsRecordLists,
        "id": args.id,
        "name": args.name,
        "serviceLists": args.serviceLists,
        "stats": args.stats,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbZoneStats.
 */
export interface GetGslbZoneStatsArgs {
    dnsCaaRecordLists?: inputs.GetGslbZoneStatsDnsCaaRecordList[];
    dnsMxRecordLists?: inputs.GetGslbZoneStatsDnsMxRecordList[];
    dnsNsRecordLists?: inputs.GetGslbZoneStatsDnsNsRecordList[];
    id?: string;
    name: string;
    serviceLists?: inputs.GetGslbZoneStatsServiceList[];
    stats?: inputs.GetGslbZoneStatsStats;
}

/**
 * A collection of values returned by getGslbZoneStats.
 */
export interface GetGslbZoneStatsResult {
    readonly dnsCaaRecordLists?: outputs.GetGslbZoneStatsDnsCaaRecordList[];
    readonly dnsMxRecordLists?: outputs.GetGslbZoneStatsDnsMxRecordList[];
    readonly dnsNsRecordLists?: outputs.GetGslbZoneStatsDnsNsRecordList[];
    readonly id: string;
    readonly name: string;
    readonly serviceLists?: outputs.GetGslbZoneStatsServiceList[];
    readonly stats?: outputs.GetGslbZoneStatsStats;
}
export function getGslbZoneStatsOutput(args: GetGslbZoneStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbZoneStatsResult> {
    return pulumi.output(args).apply((a: any) => getGslbZoneStats(a, opts))
}

/**
 * A collection of arguments for invoking getGslbZoneStats.
 */
export interface GetGslbZoneStatsOutputArgs {
    dnsCaaRecordLists?: pulumi.Input<pulumi.Input<inputs.GetGslbZoneStatsDnsCaaRecordListArgs>[]>;
    dnsMxRecordLists?: pulumi.Input<pulumi.Input<inputs.GetGslbZoneStatsDnsMxRecordListArgs>[]>;
    dnsNsRecordLists?: pulumi.Input<pulumi.Input<inputs.GetGslbZoneStatsDnsNsRecordListArgs>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    serviceLists?: pulumi.Input<pulumi.Input<inputs.GetGslbZoneStatsServiceListArgs>[]>;
    stats?: pulumi.Input<inputs.GetGslbZoneStatsStatsArgs>;
}
