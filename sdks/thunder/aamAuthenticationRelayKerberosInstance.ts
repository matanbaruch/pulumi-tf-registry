// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AamAuthenticationRelayKerberosInstance extends pulumi.CustomResource {
    /**
     * Get an existing AamAuthenticationRelayKerberosInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AamAuthenticationRelayKerberosInstanceState, opts?: pulumi.CustomResourceOptions): AamAuthenticationRelayKerberosInstance {
        return new AamAuthenticationRelayKerberosInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/aamAuthenticationRelayKerberosInstance:AamAuthenticationRelayKerberosInstance';

    /**
     * Returns true if the given object is an instance of AamAuthenticationRelayKerberosInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AamAuthenticationRelayKerberosInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AamAuthenticationRelayKerberosInstance.__pulumiType;
    }

    /**
     * Specify the kerberos account name
     */
    public readonly kerberosAccount!: pulumi.Output<string | undefined>;
    /**
     * Specify the kerberos kdc ip or host name
     */
    public readonly kerberosKdc!: pulumi.Output<string | undefined>;
    /**
     * Specify an authentication service group as multiple KDCs
     */
    public readonly kerberosKdcServiceGroup!: pulumi.Output<string | undefined>;
    /**
     * Specify the kerberos realm
     */
    public readonly kerberosRealm!: pulumi.Output<string | undefined>;
    /**
     * Specify Kerberos authentication relay name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify password of Kerberos password
     */
    public readonly password!: pulumi.Output<number | undefined>;
    /**
     * Specify The KDC port, default is 88
     */
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.AamAuthenticationRelayKerberosInstanceSamplingEnable[] | undefined>;
    /**
     * The kerberos client password
     */
    public readonly secretString!: pulumi.Output<string | undefined>;
    /**
     * Specify timeout for kerberos transport, default is 10 seconds (The timeout, default is 10 seconds)
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a AamAuthenticationRelayKerberosInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AamAuthenticationRelayKerberosInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AamAuthenticationRelayKerberosInstanceArgs | AamAuthenticationRelayKerberosInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AamAuthenticationRelayKerberosInstanceState | undefined;
            resourceInputs["kerberosAccount"] = state ? state.kerberosAccount : undefined;
            resourceInputs["kerberosKdc"] = state ? state.kerberosKdc : undefined;
            resourceInputs["kerberosKdcServiceGroup"] = state ? state.kerberosKdcServiceGroup : undefined;
            resourceInputs["kerberosRealm"] = state ? state.kerberosRealm : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["secretString"] = state ? state.secretString : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AamAuthenticationRelayKerberosInstanceArgs | undefined;
            resourceInputs["kerberosAccount"] = args ? args.kerberosAccount : undefined;
            resourceInputs["kerberosKdc"] = args ? args.kerberosKdc : undefined;
            resourceInputs["kerberosKdcServiceGroup"] = args ? args.kerberosKdcServiceGroup : undefined;
            resourceInputs["kerberosRealm"] = args ? args.kerberosRealm : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["secretString"] = args ? args.secretString : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AamAuthenticationRelayKerberosInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AamAuthenticationRelayKerberosInstance resources.
 */
export interface AamAuthenticationRelayKerberosInstanceState {
    /**
     * Specify the kerberos account name
     */
    kerberosAccount?: pulumi.Input<string>;
    /**
     * Specify the kerberos kdc ip or host name
     */
    kerberosKdc?: pulumi.Input<string>;
    /**
     * Specify an authentication service group as multiple KDCs
     */
    kerberosKdcServiceGroup?: pulumi.Input<string>;
    /**
     * Specify the kerberos realm
     */
    kerberosRealm?: pulumi.Input<string>;
    /**
     * Specify Kerberos authentication relay name
     */
    name?: pulumi.Input<string>;
    /**
     * Specify password of Kerberos password
     */
    password?: pulumi.Input<number>;
    /**
     * Specify The KDC port, default is 88
     */
    port?: pulumi.Input<number>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationRelayKerberosInstanceSamplingEnable>[]>;
    /**
     * The kerberos client password
     */
    secretString?: pulumi.Input<string>;
    /**
     * Specify timeout for kerberos transport, default is 10 seconds (The timeout, default is 10 seconds)
     */
    timeout?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AamAuthenticationRelayKerberosInstance resource.
 */
export interface AamAuthenticationRelayKerberosInstanceArgs {
    /**
     * Specify the kerberos account name
     */
    kerberosAccount?: pulumi.Input<string>;
    /**
     * Specify the kerberos kdc ip or host name
     */
    kerberosKdc?: pulumi.Input<string>;
    /**
     * Specify an authentication service group as multiple KDCs
     */
    kerberosKdcServiceGroup?: pulumi.Input<string>;
    /**
     * Specify the kerberos realm
     */
    kerberosRealm?: pulumi.Input<string>;
    /**
     * Specify Kerberos authentication relay name
     */
    name?: pulumi.Input<string>;
    /**
     * Specify password of Kerberos password
     */
    password?: pulumi.Input<number>;
    /**
     * Specify The KDC port, default is 88
     */
    port?: pulumi.Input<number>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationRelayKerberosInstanceSamplingEnable>[]>;
    /**
     * The kerberos client password
     */
    secretString?: pulumi.Input<string>;
    /**
     * Specify timeout for kerberos transport, default is 10 seconds (The timeout, default is 10 seconds)
     */
    timeout?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
