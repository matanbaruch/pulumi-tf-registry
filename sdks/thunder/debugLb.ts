// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DebugLb extends pulumi.CustomResource {
    /**
     * Get an existing DebugLb resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DebugLbState, opts?: pulumi.CustomResourceOptions): DebugLb {
        return new DebugLb(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/debugLb:DebugLb';

    /**
     * Returns true if the given object is an instance of DebugLb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DebugLb {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DebugLb.__pulumiType;
    }

    /**
     * Load Balancing debug all switch
     */
    public readonly all!: pulumi.Output<number | undefined>;
    /**
     * Load Balancing configuration debug switch
     */
    public readonly cfg!: pulumi.Output<number | undefined>;
    /**
     * Cache Load Balancing debug switch
     */
    public readonly clb!: pulumi.Output<number | undefined>;
    /**
     * Packet flow debug switch
     */
    public readonly flow!: pulumi.Output<number | undefined>;
    /**
     * Firewall Load Balancing debug switch
     */
    public readonly fwlb!: pulumi.Output<number | undefined>;
    /**
     * Link Load Balancing debug switch
     */
    public readonly llb!: pulumi.Output<number | undefined>;
    /**
     * Server Load Balancing debug switch
     */
    public readonly slb!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DebugLb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DebugLbArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DebugLbArgs | DebugLbState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DebugLbState | undefined;
            resourceInputs["all"] = state ? state.all : undefined;
            resourceInputs["cfg"] = state ? state.cfg : undefined;
            resourceInputs["clb"] = state ? state.clb : undefined;
            resourceInputs["flow"] = state ? state.flow : undefined;
            resourceInputs["fwlb"] = state ? state.fwlb : undefined;
            resourceInputs["llb"] = state ? state.llb : undefined;
            resourceInputs["slb"] = state ? state.slb : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DebugLbArgs | undefined;
            resourceInputs["all"] = args ? args.all : undefined;
            resourceInputs["cfg"] = args ? args.cfg : undefined;
            resourceInputs["clb"] = args ? args.clb : undefined;
            resourceInputs["flow"] = args ? args.flow : undefined;
            resourceInputs["fwlb"] = args ? args.fwlb : undefined;
            resourceInputs["llb"] = args ? args.llb : undefined;
            resourceInputs["slb"] = args ? args.slb : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DebugLb.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DebugLb resources.
 */
export interface DebugLbState {
    /**
     * Load Balancing debug all switch
     */
    all?: pulumi.Input<number>;
    /**
     * Load Balancing configuration debug switch
     */
    cfg?: pulumi.Input<number>;
    /**
     * Cache Load Balancing debug switch
     */
    clb?: pulumi.Input<number>;
    /**
     * Packet flow debug switch
     */
    flow?: pulumi.Input<number>;
    /**
     * Firewall Load Balancing debug switch
     */
    fwlb?: pulumi.Input<number>;
    /**
     * Link Load Balancing debug switch
     */
    llb?: pulumi.Input<number>;
    /**
     * Server Load Balancing debug switch
     */
    slb?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DebugLb resource.
 */
export interface DebugLbArgs {
    /**
     * Load Balancing debug all switch
     */
    all?: pulumi.Input<number>;
    /**
     * Load Balancing configuration debug switch
     */
    cfg?: pulumi.Input<number>;
    /**
     * Cache Load Balancing debug switch
     */
    clb?: pulumi.Input<number>;
    /**
     * Packet flow debug switch
     */
    flow?: pulumi.Input<number>;
    /**
     * Firewall Load Balancing debug switch
     */
    fwlb?: pulumi.Input<number>;
    /**
     * Link Load Balancing debug switch
     */
    llb?: pulumi.Input<number>;
    /**
     * Server Load Balancing debug switch
     */
    slb?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
