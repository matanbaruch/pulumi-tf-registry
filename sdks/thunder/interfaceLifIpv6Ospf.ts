// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InterfaceLifIpv6Ospf extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceLifIpv6Ospf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceLifIpv6OspfState, opts?: pulumi.CustomResourceOptions): InterfaceLifIpv6Ospf {
        return new InterfaceLifIpv6Ospf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/interfaceLifIpv6Ospf:InterfaceLifIpv6Ospf';

    /**
     * Returns true if the given object is an instance of InterfaceLifIpv6Ospf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceLifIpv6Ospf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceLifIpv6Ospf.__pulumiType;
    }

    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    public readonly bfd!: pulumi.Output<number | undefined>;
    public readonly costCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfCostCfg[] | undefined>;
    public readonly deadIntervalCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfDeadIntervalCfg[] | undefined>;
    /**
     * Disable BFD
     */
    public readonly disable!: pulumi.Output<number | undefined>;
    public readonly helloIntervalCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfHelloIntervalCfg[] | undefined>;
    /**
     * Ifname
     */
    public readonly ifname!: pulumi.Output<string>;
    public readonly mtuIgnoreCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfMtuIgnoreCfg[] | undefined>;
    public readonly neighborCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfNeighborCfg[] | undefined>;
    public readonly networkLists!: pulumi.Output<outputs.InterfaceLifIpv6OspfNetworkList[] | undefined>;
    public readonly priorityCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfPriorityCfg[] | undefined>;
    public readonly retransmitIntervalCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfRetransmitIntervalCfg[] | undefined>;
    public readonly transmitDelayCfgs!: pulumi.Output<outputs.InterfaceLifIpv6OspfTransmitDelayCfg[] | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a InterfaceLifIpv6Ospf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceLifIpv6OspfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceLifIpv6OspfArgs | InterfaceLifIpv6OspfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceLifIpv6OspfState | undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["costCfgs"] = state ? state.costCfgs : undefined;
            resourceInputs["deadIntervalCfgs"] = state ? state.deadIntervalCfgs : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["helloIntervalCfgs"] = state ? state.helloIntervalCfgs : undefined;
            resourceInputs["ifname"] = state ? state.ifname : undefined;
            resourceInputs["mtuIgnoreCfgs"] = state ? state.mtuIgnoreCfgs : undefined;
            resourceInputs["neighborCfgs"] = state ? state.neighborCfgs : undefined;
            resourceInputs["networkLists"] = state ? state.networkLists : undefined;
            resourceInputs["priorityCfgs"] = state ? state.priorityCfgs : undefined;
            resourceInputs["retransmitIntervalCfgs"] = state ? state.retransmitIntervalCfgs : undefined;
            resourceInputs["transmitDelayCfgs"] = state ? state.transmitDelayCfgs : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as InterfaceLifIpv6OspfArgs | undefined;
            if ((!args || args.ifname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ifname'");
            }
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["costCfgs"] = args ? args.costCfgs : undefined;
            resourceInputs["deadIntervalCfgs"] = args ? args.deadIntervalCfgs : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["helloIntervalCfgs"] = args ? args.helloIntervalCfgs : undefined;
            resourceInputs["ifname"] = args ? args.ifname : undefined;
            resourceInputs["mtuIgnoreCfgs"] = args ? args.mtuIgnoreCfgs : undefined;
            resourceInputs["neighborCfgs"] = args ? args.neighborCfgs : undefined;
            resourceInputs["networkLists"] = args ? args.networkLists : undefined;
            resourceInputs["priorityCfgs"] = args ? args.priorityCfgs : undefined;
            resourceInputs["retransmitIntervalCfgs"] = args ? args.retransmitIntervalCfgs : undefined;
            resourceInputs["transmitDelayCfgs"] = args ? args.transmitDelayCfgs : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceLifIpv6Ospf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceLifIpv6Ospf resources.
 */
export interface InterfaceLifIpv6OspfState {
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    bfd?: pulumi.Input<number>;
    costCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfCostCfg>[]>;
    deadIntervalCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfDeadIntervalCfg>[]>;
    /**
     * Disable BFD
     */
    disable?: pulumi.Input<number>;
    helloIntervalCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfHelloIntervalCfg>[]>;
    /**
     * Ifname
     */
    ifname?: pulumi.Input<string>;
    mtuIgnoreCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfMtuIgnoreCfg>[]>;
    neighborCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfNeighborCfg>[]>;
    networkLists?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfNetworkList>[]>;
    priorityCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfPriorityCfg>[]>;
    retransmitIntervalCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfRetransmitIntervalCfg>[]>;
    transmitDelayCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfTransmitDelayCfg>[]>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterfaceLifIpv6Ospf resource.
 */
export interface InterfaceLifIpv6OspfArgs {
    /**
     * Bidirectional Forwarding Detection (BFD)
     */
    bfd?: pulumi.Input<number>;
    costCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfCostCfg>[]>;
    deadIntervalCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfDeadIntervalCfg>[]>;
    /**
     * Disable BFD
     */
    disable?: pulumi.Input<number>;
    helloIntervalCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfHelloIntervalCfg>[]>;
    /**
     * Ifname
     */
    ifname: pulumi.Input<string>;
    mtuIgnoreCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfMtuIgnoreCfg>[]>;
    neighborCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfNeighborCfg>[]>;
    networkLists?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfNetworkList>[]>;
    priorityCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfPriorityCfg>[]>;
    retransmitIntervalCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfRetransmitIntervalCfg>[]>;
    transmitDelayCfgs?: pulumi.Input<pulumi.Input<inputs.InterfaceLifIpv6OspfTransmitDelayCfg>[]>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
