// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSystemGeolocationFileOper(args?: GetSystemGeolocationFileOperArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemGeolocationFileOperResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getSystemGeolocationFileOper:getSystemGeolocationFileOper", {
        "errorInfo": args.errorInfo,
        "id": args.id,
        "oper": args.oper,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystemGeolocationFileOper.
 */
export interface GetSystemGeolocationFileOperArgs {
    errorInfo?: inputs.GetSystemGeolocationFileOperErrorInfo;
    id?: string;
    oper?: inputs.GetSystemGeolocationFileOperOper;
}

/**
 * A collection of values returned by getSystemGeolocationFileOper.
 */
export interface GetSystemGeolocationFileOperResult {
    readonly errorInfo?: outputs.GetSystemGeolocationFileOperErrorInfo;
    readonly id: string;
    readonly oper?: outputs.GetSystemGeolocationFileOperOper;
}
export function getSystemGeolocationFileOperOutput(args?: GetSystemGeolocationFileOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemGeolocationFileOperResult> {
    return pulumi.output(args).apply((a: any) => getSystemGeolocationFileOper(a, opts))
}

/**
 * A collection of arguments for invoking getSystemGeolocationFileOper.
 */
export interface GetSystemGeolocationFileOperOutputArgs {
    errorInfo?: pulumi.Input<inputs.GetSystemGeolocationFileOperErrorInfoArgs>;
    id?: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetSystemGeolocationFileOperOperArgs>;
}
