// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ScaleoutClusterDbConfig extends pulumi.CustomResource {
    /**
     * Get an existing ScaleoutClusterDbConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScaleoutClusterDbConfigState, opts?: pulumi.CustomResourceOptions): ScaleoutClusterDbConfig {
        return new ScaleoutClusterDbConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/scaleoutClusterDbConfig:ScaleoutClusterDbConfig';

    /**
     * Returns true if the given object is an instance of ScaleoutClusterDbConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScaleoutClusterDbConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScaleoutClusterDbConfig.__pulumiType;
    }

    /**
     * database connection broken detection timeout (mseconds) (12000 mseconds for default)
     */
    public readonly brokenDetectTimeout!: pulumi.Output<number | undefined>;
    public readonly clientRecvTimeout!: pulumi.Output<number | undefined>;
    /**
     * client session port
     */
    public readonly clientport!: pulumi.Output<number | undefined>;
    /**
     * ClusterId
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * election connection timeout (mseconds) (1200 for default)
     */
    public readonly electConnTimeout!: pulumi.Output<number | undefined>;
    public readonly initlimit!: pulumi.Output<number | undefined>;
    /**
     * support loopback interface for scaleout database (enabled by default)
     */
    public readonly loopbackIntfSupport!: pulumi.Output<number | undefined>;
    public readonly maxsessiontimeout!: pulumi.Output<number | undefined>;
    public readonly minsessiontimeout!: pulumi.Output<number | undefined>;
    /**
     * send more election packet in election period (enabled by default)
     */
    public readonly moreElectionPacket!: pulumi.Output<number | undefined>;
    public readonly synclimit!: pulumi.Output<number | undefined>;
    public readonly ticktime!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a ScaleoutClusterDbConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScaleoutClusterDbConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScaleoutClusterDbConfigArgs | ScaleoutClusterDbConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScaleoutClusterDbConfigState | undefined;
            resourceInputs["brokenDetectTimeout"] = state ? state.brokenDetectTimeout : undefined;
            resourceInputs["clientRecvTimeout"] = state ? state.clientRecvTimeout : undefined;
            resourceInputs["clientport"] = state ? state.clientport : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["electConnTimeout"] = state ? state.electConnTimeout : undefined;
            resourceInputs["initlimit"] = state ? state.initlimit : undefined;
            resourceInputs["loopbackIntfSupport"] = state ? state.loopbackIntfSupport : undefined;
            resourceInputs["maxsessiontimeout"] = state ? state.maxsessiontimeout : undefined;
            resourceInputs["minsessiontimeout"] = state ? state.minsessiontimeout : undefined;
            resourceInputs["moreElectionPacket"] = state ? state.moreElectionPacket : undefined;
            resourceInputs["synclimit"] = state ? state.synclimit : undefined;
            resourceInputs["ticktime"] = state ? state.ticktime : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as ScaleoutClusterDbConfigArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            resourceInputs["brokenDetectTimeout"] = args ? args.brokenDetectTimeout : undefined;
            resourceInputs["clientRecvTimeout"] = args ? args.clientRecvTimeout : undefined;
            resourceInputs["clientport"] = args ? args.clientport : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["electConnTimeout"] = args ? args.electConnTimeout : undefined;
            resourceInputs["initlimit"] = args ? args.initlimit : undefined;
            resourceInputs["loopbackIntfSupport"] = args ? args.loopbackIntfSupport : undefined;
            resourceInputs["maxsessiontimeout"] = args ? args.maxsessiontimeout : undefined;
            resourceInputs["minsessiontimeout"] = args ? args.minsessiontimeout : undefined;
            resourceInputs["moreElectionPacket"] = args ? args.moreElectionPacket : undefined;
            resourceInputs["synclimit"] = args ? args.synclimit : undefined;
            resourceInputs["ticktime"] = args ? args.ticktime : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScaleoutClusterDbConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ScaleoutClusterDbConfig resources.
 */
export interface ScaleoutClusterDbConfigState {
    /**
     * database connection broken detection timeout (mseconds) (12000 mseconds for default)
     */
    brokenDetectTimeout?: pulumi.Input<number>;
    clientRecvTimeout?: pulumi.Input<number>;
    /**
     * client session port
     */
    clientport?: pulumi.Input<number>;
    /**
     * ClusterId
     */
    clusterId?: pulumi.Input<string>;
    /**
     * election connection timeout (mseconds) (1200 for default)
     */
    electConnTimeout?: pulumi.Input<number>;
    initlimit?: pulumi.Input<number>;
    /**
     * support loopback interface for scaleout database (enabled by default)
     */
    loopbackIntfSupport?: pulumi.Input<number>;
    maxsessiontimeout?: pulumi.Input<number>;
    minsessiontimeout?: pulumi.Input<number>;
    /**
     * send more election packet in election period (enabled by default)
     */
    moreElectionPacket?: pulumi.Input<number>;
    synclimit?: pulumi.Input<number>;
    ticktime?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScaleoutClusterDbConfig resource.
 */
export interface ScaleoutClusterDbConfigArgs {
    /**
     * database connection broken detection timeout (mseconds) (12000 mseconds for default)
     */
    brokenDetectTimeout?: pulumi.Input<number>;
    clientRecvTimeout?: pulumi.Input<number>;
    /**
     * client session port
     */
    clientport?: pulumi.Input<number>;
    /**
     * ClusterId
     */
    clusterId: pulumi.Input<string>;
    /**
     * election connection timeout (mseconds) (1200 for default)
     */
    electConnTimeout?: pulumi.Input<number>;
    initlimit?: pulumi.Input<number>;
    /**
     * support loopback interface for scaleout database (enabled by default)
     */
    loopbackIntfSupport?: pulumi.Input<number>;
    maxsessiontimeout?: pulumi.Input<number>;
    minsessiontimeout?: pulumi.Input<number>;
    /**
     * send more election packet in election period (enabled by default)
     */
    moreElectionPacket?: pulumi.Input<number>;
    synclimit?: pulumi.Input<number>;
    ticktime?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
