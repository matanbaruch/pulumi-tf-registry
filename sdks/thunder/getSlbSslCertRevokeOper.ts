// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSlbSslCertRevokeOper(args?: GetSlbSslCertRevokeOperArgs, opts?: pulumi.InvokeOptions): Promise<GetSlbSslCertRevokeOperResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getSlbSslCertRevokeOper:getSlbSslCertRevokeOper", {
        "id": args.id,
        "oper": args.oper,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSlbSslCertRevokeOper.
 */
export interface GetSlbSslCertRevokeOperArgs {
    id?: string;
    oper?: inputs.GetSlbSslCertRevokeOperOper;
}

/**
 * A collection of values returned by getSlbSslCertRevokeOper.
 */
export interface GetSlbSslCertRevokeOperResult {
    readonly id: string;
    readonly oper?: outputs.GetSlbSslCertRevokeOperOper;
}
export function getSlbSslCertRevokeOperOutput(args?: GetSlbSslCertRevokeOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSlbSslCertRevokeOperResult> {
    return pulumi.output(args).apply((a: any) => getSlbSslCertRevokeOper(a, opts))
}

/**
 * A collection of arguments for invoking getSlbSslCertRevokeOper.
 */
export interface GetSlbSslCertRevokeOperOutputArgs {
    id?: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetSlbSslCertRevokeOperOperArgs>;
}
