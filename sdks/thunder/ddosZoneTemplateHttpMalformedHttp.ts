// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DdosZoneTemplateHttpMalformedHttp extends pulumi.CustomResource {
    /**
     * Get an existing DdosZoneTemplateHttpMalformedHttp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosZoneTemplateHttpMalformedHttpState, opts?: pulumi.CustomResourceOptions): DdosZoneTemplateHttpMalformedHttp {
        return new DdosZoneTemplateHttpMalformedHttp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosZoneTemplateHttpMalformedHttp:DdosZoneTemplateHttpMalformedHttp';

    /**
     * Returns true if the given object is an instance of DdosZoneTemplateHttpMalformedHttp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosZoneTemplateHttpMalformedHttp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosZoneTemplateHttpMalformedHttp.__pulumiType;
    }

    /**
     * HttpTmplName
     */
    public readonly httpTmplName!: pulumi.Output<string>;
    /**
     * 'check': Configure malformed HTTP parameters;
     */
    public readonly malformedHttp!: pulumi.Output<string>;
    /**
     * 'drop': Drop packets (Default); 'reset': Reset client connection; 'blacklist-src': Blacklist-src;
     */
    public readonly malformedHttpAction!: pulumi.Output<string | undefined>;
    /**
     * Configure action-list to take
     */
    public readonly malformedHttpActionListName!: pulumi.Output<string | undefined>;
    /**
     * Enabling bad chunk monitoring. Default is disabled
     */
    public readonly malformedHttpBadChunkMonEnabled!: pulumi.Output<number | undefined>;
    /**
     * Set the maxinum content-length header. Default value is 4294967295 bytes
     */
    public readonly malformedHttpMaxContentLength!: pulumi.Output<number | undefined>;
    /**
     * Set the maxinum header name length. Default value is 64.
     */
    public readonly malformedHttpMaxHeaderNameSize!: pulumi.Output<number | undefined>;
    /**
     * Set the maximum line size. Default value is 32512
     */
    public readonly malformedHttpMaxLineSize!: pulumi.Output<number | undefined>;
    /**
     * Set the maximum number of headers. Default value is 90
     */
    public readonly malformedHttpMaxNumHeaders!: pulumi.Output<number | undefined>;
    /**
     * Set the maximum request line size. Default value is 32512
     */
    public readonly malformedHttpMaxReqLineSize!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DdosZoneTemplateHttpMalformedHttp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosZoneTemplateHttpMalformedHttpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosZoneTemplateHttpMalformedHttpArgs | DdosZoneTemplateHttpMalformedHttpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosZoneTemplateHttpMalformedHttpState | undefined;
            resourceInputs["httpTmplName"] = state ? state.httpTmplName : undefined;
            resourceInputs["malformedHttp"] = state ? state.malformedHttp : undefined;
            resourceInputs["malformedHttpAction"] = state ? state.malformedHttpAction : undefined;
            resourceInputs["malformedHttpActionListName"] = state ? state.malformedHttpActionListName : undefined;
            resourceInputs["malformedHttpBadChunkMonEnabled"] = state ? state.malformedHttpBadChunkMonEnabled : undefined;
            resourceInputs["malformedHttpMaxContentLength"] = state ? state.malformedHttpMaxContentLength : undefined;
            resourceInputs["malformedHttpMaxHeaderNameSize"] = state ? state.malformedHttpMaxHeaderNameSize : undefined;
            resourceInputs["malformedHttpMaxLineSize"] = state ? state.malformedHttpMaxLineSize : undefined;
            resourceInputs["malformedHttpMaxNumHeaders"] = state ? state.malformedHttpMaxNumHeaders : undefined;
            resourceInputs["malformedHttpMaxReqLineSize"] = state ? state.malformedHttpMaxReqLineSize : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DdosZoneTemplateHttpMalformedHttpArgs | undefined;
            if ((!args || args.httpTmplName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'httpTmplName'");
            }
            if ((!args || args.malformedHttp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'malformedHttp'");
            }
            resourceInputs["httpTmplName"] = args ? args.httpTmplName : undefined;
            resourceInputs["malformedHttp"] = args ? args.malformedHttp : undefined;
            resourceInputs["malformedHttpAction"] = args ? args.malformedHttpAction : undefined;
            resourceInputs["malformedHttpActionListName"] = args ? args.malformedHttpActionListName : undefined;
            resourceInputs["malformedHttpBadChunkMonEnabled"] = args ? args.malformedHttpBadChunkMonEnabled : undefined;
            resourceInputs["malformedHttpMaxContentLength"] = args ? args.malformedHttpMaxContentLength : undefined;
            resourceInputs["malformedHttpMaxHeaderNameSize"] = args ? args.malformedHttpMaxHeaderNameSize : undefined;
            resourceInputs["malformedHttpMaxLineSize"] = args ? args.malformedHttpMaxLineSize : undefined;
            resourceInputs["malformedHttpMaxNumHeaders"] = args ? args.malformedHttpMaxNumHeaders : undefined;
            resourceInputs["malformedHttpMaxReqLineSize"] = args ? args.malformedHttpMaxReqLineSize : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosZoneTemplateHttpMalformedHttp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosZoneTemplateHttpMalformedHttp resources.
 */
export interface DdosZoneTemplateHttpMalformedHttpState {
    /**
     * HttpTmplName
     */
    httpTmplName?: pulumi.Input<string>;
    /**
     * 'check': Configure malformed HTTP parameters;
     */
    malformedHttp?: pulumi.Input<string>;
    /**
     * 'drop': Drop packets (Default); 'reset': Reset client connection; 'blacklist-src': Blacklist-src;
     */
    malformedHttpAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take
     */
    malformedHttpActionListName?: pulumi.Input<string>;
    /**
     * Enabling bad chunk monitoring. Default is disabled
     */
    malformedHttpBadChunkMonEnabled?: pulumi.Input<number>;
    /**
     * Set the maxinum content-length header. Default value is 4294967295 bytes
     */
    malformedHttpMaxContentLength?: pulumi.Input<number>;
    /**
     * Set the maxinum header name length. Default value is 64.
     */
    malformedHttpMaxHeaderNameSize?: pulumi.Input<number>;
    /**
     * Set the maximum line size. Default value is 32512
     */
    malformedHttpMaxLineSize?: pulumi.Input<number>;
    /**
     * Set the maximum number of headers. Default value is 90
     */
    malformedHttpMaxNumHeaders?: pulumi.Input<number>;
    /**
     * Set the maximum request line size. Default value is 32512
     */
    malformedHttpMaxReqLineSize?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosZoneTemplateHttpMalformedHttp resource.
 */
export interface DdosZoneTemplateHttpMalformedHttpArgs {
    /**
     * HttpTmplName
     */
    httpTmplName: pulumi.Input<string>;
    /**
     * 'check': Configure malformed HTTP parameters;
     */
    malformedHttp: pulumi.Input<string>;
    /**
     * 'drop': Drop packets (Default); 'reset': Reset client connection; 'blacklist-src': Blacklist-src;
     */
    malformedHttpAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take
     */
    malformedHttpActionListName?: pulumi.Input<string>;
    /**
     * Enabling bad chunk monitoring. Default is disabled
     */
    malformedHttpBadChunkMonEnabled?: pulumi.Input<number>;
    /**
     * Set the maxinum content-length header. Default value is 4294967295 bytes
     */
    malformedHttpMaxContentLength?: pulumi.Input<number>;
    /**
     * Set the maxinum header name length. Default value is 64.
     */
    malformedHttpMaxHeaderNameSize?: pulumi.Input<number>;
    /**
     * Set the maximum line size. Default value is 32512
     */
    malformedHttpMaxLineSize?: pulumi.Input<number>;
    /**
     * Set the maximum number of headers. Default value is 90
     */
    malformedHttpMaxNumHeaders?: pulumi.Input<number>;
    /**
     * Set the maximum request line size. Default value is 32512
     */
    malformedHttpMaxReqLineSize?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
