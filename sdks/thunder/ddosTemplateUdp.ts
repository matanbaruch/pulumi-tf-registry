// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DdosTemplateUdp extends pulumi.CustomResource {
    /**
     * Get an existing DdosTemplateUdp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosTemplateUdpState, opts?: pulumi.CustomResourceOptions): DdosTemplateUdp {
        return new DdosTemplateUdp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosTemplateUdp:DdosTemplateUdp';

    /**
     * Returns true if the given object is an instance of DdosTemplateUdp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosTemplateUdp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosTemplateUdp.__pulumiType;
    }

    /**
     * Configure session age(in minutes) for UDP sessions
     */
    public readonly age!: pulumi.Output<number | undefined>;
    public readonly dropKnownRespSrcPortCfg!: pulumi.Output<outputs.DdosTemplateUdpDropKnownRespSrcPortCfg | undefined>;
    /**
     * Drop NTP monlist request/response
     */
    public readonly dropNtpMonlist!: pulumi.Output<number | undefined>;
    public readonly filterLists!: pulumi.Output<outputs.DdosTemplateUdpFilterList[] | undefined>;
    /**
     * Maximum UDP payload size for each single packet
     */
    public readonly maxPayloadSize!: pulumi.Output<number | undefined>;
    /**
     * Minimum UDP payload size for each single packet
     */
    public readonly minPayloadSize!: pulumi.Output<number | undefined>;
    /**
     * DDOS UDP Template Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Packet rate limit per connection per rate-interval
     */
    public readonly perConnPktRateLimit!: pulumi.Output<number | undefined>;
    /**
     * '100ms': 100ms; '1sec': 1sec;
     */
    public readonly perConnRateInterval!: pulumi.Output<string | undefined>;
    /**
     * Token-Authentication previous salt-prefix timeout in minutes, default is 1 min
     */
    public readonly previousSaltTimeout!: pulumi.Output<number | undefined>;
    /**
     * IP address
     */
    public readonly publicIpv4Addr!: pulumi.Output<string | undefined>;
    /**
     * IPV6 address
     */
    public readonly publicIpv6Addr!: pulumi.Output<string | undefined>;
    public readonly spoofDetectCfg!: pulumi.Output<outputs.DdosTemplateUdpSpoofDetectCfg | undefined>;
    /**
     * Enable Token Authentication
     */
    public readonly tokenAuthentication!: pulumi.Output<number | undefined>;
    /**
     * 'md5_Salt-SrcIp-SrcPort-DstIp-DstPort': md5 of Salt-SrcIp-SrcPort-DstIp-DstPort; 'md5_Salt-DstIp-DstPort': md5 of
     * Salt-DstIp-DstPort; 'md5_Salt-SrcIp-DstIp': md5 of Salt-SrcIp-DstIp; 'md5_Salt-SrcPort-DstPort': md5 of
     * Salt-SrcPort-DstPort; 'md5_Salt-UintDstIp-DstPort': Using the uint value of IP for md5 of Salt-DstIp-DstPort;
     * 'sha1_Salt-SrcIp-SrcPort-DstIp-DstPort': sha1 of Salt-SrcIp-SrcPort-DstIp-DstPort; 'sha1_Salt-DstIp-DstPort': sha1 of
     * Salt-DstIp-DstPort; 'sha1_Salt-SrcIp-DstIp': sha1 of Salt-SrcIp-DstIp; 'sha1_Salt-SrcPort-DstPort': sha1 of
     * Salt-SrcPort-DstPort; 'sha1_Salt-UintDstIp-DstPort': Using the uint value of IP for sha1 of Salt-DstIp-DstPort;
     */
    public readonly tokenAuthenticationFormula!: pulumi.Output<string | undefined>;
    /**
     * token-authentication disable hardware assistance
     */
    public readonly tokenAuthenticationHwAssistDisable!: pulumi.Output<number | undefined>;
    /**
     * The server public IP address
     */
    public readonly tokenAuthenticationPublicAddress!: pulumi.Output<number | undefined>;
    /**
     * token-authentication salt-prefix
     */
    public readonly tokenAuthenticationSaltPrefix!: pulumi.Output<number | undefined>;
    public readonly tokenAuthenticationSaltPrefixCurr!: pulumi.Output<number | undefined>;
    public readonly tokenAuthenticationSaltPrefixPrev!: pulumi.Output<number | undefined>;
    public readonly tunnelEncap!: pulumi.Output<outputs.DdosTemplateUdpTunnelEncap | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DdosTemplateUdp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DdosTemplateUdpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosTemplateUdpArgs | DdosTemplateUdpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosTemplateUdpState | undefined;
            resourceInputs["age"] = state ? state.age : undefined;
            resourceInputs["dropKnownRespSrcPortCfg"] = state ? state.dropKnownRespSrcPortCfg : undefined;
            resourceInputs["dropNtpMonlist"] = state ? state.dropNtpMonlist : undefined;
            resourceInputs["filterLists"] = state ? state.filterLists : undefined;
            resourceInputs["maxPayloadSize"] = state ? state.maxPayloadSize : undefined;
            resourceInputs["minPayloadSize"] = state ? state.minPayloadSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["perConnPktRateLimit"] = state ? state.perConnPktRateLimit : undefined;
            resourceInputs["perConnRateInterval"] = state ? state.perConnRateInterval : undefined;
            resourceInputs["previousSaltTimeout"] = state ? state.previousSaltTimeout : undefined;
            resourceInputs["publicIpv4Addr"] = state ? state.publicIpv4Addr : undefined;
            resourceInputs["publicIpv6Addr"] = state ? state.publicIpv6Addr : undefined;
            resourceInputs["spoofDetectCfg"] = state ? state.spoofDetectCfg : undefined;
            resourceInputs["tokenAuthentication"] = state ? state.tokenAuthentication : undefined;
            resourceInputs["tokenAuthenticationFormula"] = state ? state.tokenAuthenticationFormula : undefined;
            resourceInputs["tokenAuthenticationHwAssistDisable"] = state ? state.tokenAuthenticationHwAssistDisable : undefined;
            resourceInputs["tokenAuthenticationPublicAddress"] = state ? state.tokenAuthenticationPublicAddress : undefined;
            resourceInputs["tokenAuthenticationSaltPrefix"] = state ? state.tokenAuthenticationSaltPrefix : undefined;
            resourceInputs["tokenAuthenticationSaltPrefixCurr"] = state ? state.tokenAuthenticationSaltPrefixCurr : undefined;
            resourceInputs["tokenAuthenticationSaltPrefixPrev"] = state ? state.tokenAuthenticationSaltPrefixPrev : undefined;
            resourceInputs["tunnelEncap"] = state ? state.tunnelEncap : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DdosTemplateUdpArgs | undefined;
            resourceInputs["age"] = args ? args.age : undefined;
            resourceInputs["dropKnownRespSrcPortCfg"] = args ? args.dropKnownRespSrcPortCfg : undefined;
            resourceInputs["dropNtpMonlist"] = args ? args.dropNtpMonlist : undefined;
            resourceInputs["filterLists"] = args ? args.filterLists : undefined;
            resourceInputs["maxPayloadSize"] = args ? args.maxPayloadSize : undefined;
            resourceInputs["minPayloadSize"] = args ? args.minPayloadSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["perConnPktRateLimit"] = args ? args.perConnPktRateLimit : undefined;
            resourceInputs["perConnRateInterval"] = args ? args.perConnRateInterval : undefined;
            resourceInputs["previousSaltTimeout"] = args ? args.previousSaltTimeout : undefined;
            resourceInputs["publicIpv4Addr"] = args ? args.publicIpv4Addr : undefined;
            resourceInputs["publicIpv6Addr"] = args ? args.publicIpv6Addr : undefined;
            resourceInputs["spoofDetectCfg"] = args ? args.spoofDetectCfg : undefined;
            resourceInputs["tokenAuthentication"] = args ? args.tokenAuthentication : undefined;
            resourceInputs["tokenAuthenticationFormula"] = args ? args.tokenAuthenticationFormula : undefined;
            resourceInputs["tokenAuthenticationHwAssistDisable"] = args ? args.tokenAuthenticationHwAssistDisable : undefined;
            resourceInputs["tokenAuthenticationPublicAddress"] = args ? args.tokenAuthenticationPublicAddress : undefined;
            resourceInputs["tokenAuthenticationSaltPrefix"] = args ? args.tokenAuthenticationSaltPrefix : undefined;
            resourceInputs["tokenAuthenticationSaltPrefixCurr"] = args ? args.tokenAuthenticationSaltPrefixCurr : undefined;
            resourceInputs["tokenAuthenticationSaltPrefixPrev"] = args ? args.tokenAuthenticationSaltPrefixPrev : undefined;
            resourceInputs["tunnelEncap"] = args ? args.tunnelEncap : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosTemplateUdp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosTemplateUdp resources.
 */
export interface DdosTemplateUdpState {
    /**
     * Configure session age(in minutes) for UDP sessions
     */
    age?: pulumi.Input<number>;
    dropKnownRespSrcPortCfg?: pulumi.Input<inputs.DdosTemplateUdpDropKnownRespSrcPortCfg>;
    /**
     * Drop NTP monlist request/response
     */
    dropNtpMonlist?: pulumi.Input<number>;
    filterLists?: pulumi.Input<pulumi.Input<inputs.DdosTemplateUdpFilterList>[]>;
    /**
     * Maximum UDP payload size for each single packet
     */
    maxPayloadSize?: pulumi.Input<number>;
    /**
     * Minimum UDP payload size for each single packet
     */
    minPayloadSize?: pulumi.Input<number>;
    /**
     * DDOS UDP Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Packet rate limit per connection per rate-interval
     */
    perConnPktRateLimit?: pulumi.Input<number>;
    /**
     * '100ms': 100ms; '1sec': 1sec;
     */
    perConnRateInterval?: pulumi.Input<string>;
    /**
     * Token-Authentication previous salt-prefix timeout in minutes, default is 1 min
     */
    previousSaltTimeout?: pulumi.Input<number>;
    /**
     * IP address
     */
    publicIpv4Addr?: pulumi.Input<string>;
    /**
     * IPV6 address
     */
    publicIpv6Addr?: pulumi.Input<string>;
    spoofDetectCfg?: pulumi.Input<inputs.DdosTemplateUdpSpoofDetectCfg>;
    /**
     * Enable Token Authentication
     */
    tokenAuthentication?: pulumi.Input<number>;
    /**
     * 'md5_Salt-SrcIp-SrcPort-DstIp-DstPort': md5 of Salt-SrcIp-SrcPort-DstIp-DstPort; 'md5_Salt-DstIp-DstPort': md5 of
     * Salt-DstIp-DstPort; 'md5_Salt-SrcIp-DstIp': md5 of Salt-SrcIp-DstIp; 'md5_Salt-SrcPort-DstPort': md5 of
     * Salt-SrcPort-DstPort; 'md5_Salt-UintDstIp-DstPort': Using the uint value of IP for md5 of Salt-DstIp-DstPort;
     * 'sha1_Salt-SrcIp-SrcPort-DstIp-DstPort': sha1 of Salt-SrcIp-SrcPort-DstIp-DstPort; 'sha1_Salt-DstIp-DstPort': sha1 of
     * Salt-DstIp-DstPort; 'sha1_Salt-SrcIp-DstIp': sha1 of Salt-SrcIp-DstIp; 'sha1_Salt-SrcPort-DstPort': sha1 of
     * Salt-SrcPort-DstPort; 'sha1_Salt-UintDstIp-DstPort': Using the uint value of IP for sha1 of Salt-DstIp-DstPort;
     */
    tokenAuthenticationFormula?: pulumi.Input<string>;
    /**
     * token-authentication disable hardware assistance
     */
    tokenAuthenticationHwAssistDisable?: pulumi.Input<number>;
    /**
     * The server public IP address
     */
    tokenAuthenticationPublicAddress?: pulumi.Input<number>;
    /**
     * token-authentication salt-prefix
     */
    tokenAuthenticationSaltPrefix?: pulumi.Input<number>;
    tokenAuthenticationSaltPrefixCurr?: pulumi.Input<number>;
    tokenAuthenticationSaltPrefixPrev?: pulumi.Input<number>;
    tunnelEncap?: pulumi.Input<inputs.DdosTemplateUdpTunnelEncap>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosTemplateUdp resource.
 */
export interface DdosTemplateUdpArgs {
    /**
     * Configure session age(in minutes) for UDP sessions
     */
    age?: pulumi.Input<number>;
    dropKnownRespSrcPortCfg?: pulumi.Input<inputs.DdosTemplateUdpDropKnownRespSrcPortCfg>;
    /**
     * Drop NTP monlist request/response
     */
    dropNtpMonlist?: pulumi.Input<number>;
    filterLists?: pulumi.Input<pulumi.Input<inputs.DdosTemplateUdpFilterList>[]>;
    /**
     * Maximum UDP payload size for each single packet
     */
    maxPayloadSize?: pulumi.Input<number>;
    /**
     * Minimum UDP payload size for each single packet
     */
    minPayloadSize?: pulumi.Input<number>;
    /**
     * DDOS UDP Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Packet rate limit per connection per rate-interval
     */
    perConnPktRateLimit?: pulumi.Input<number>;
    /**
     * '100ms': 100ms; '1sec': 1sec;
     */
    perConnRateInterval?: pulumi.Input<string>;
    /**
     * Token-Authentication previous salt-prefix timeout in minutes, default is 1 min
     */
    previousSaltTimeout?: pulumi.Input<number>;
    /**
     * IP address
     */
    publicIpv4Addr?: pulumi.Input<string>;
    /**
     * IPV6 address
     */
    publicIpv6Addr?: pulumi.Input<string>;
    spoofDetectCfg?: pulumi.Input<inputs.DdosTemplateUdpSpoofDetectCfg>;
    /**
     * Enable Token Authentication
     */
    tokenAuthentication?: pulumi.Input<number>;
    /**
     * 'md5_Salt-SrcIp-SrcPort-DstIp-DstPort': md5 of Salt-SrcIp-SrcPort-DstIp-DstPort; 'md5_Salt-DstIp-DstPort': md5 of
     * Salt-DstIp-DstPort; 'md5_Salt-SrcIp-DstIp': md5 of Salt-SrcIp-DstIp; 'md5_Salt-SrcPort-DstPort': md5 of
     * Salt-SrcPort-DstPort; 'md5_Salt-UintDstIp-DstPort': Using the uint value of IP for md5 of Salt-DstIp-DstPort;
     * 'sha1_Salt-SrcIp-SrcPort-DstIp-DstPort': sha1 of Salt-SrcIp-SrcPort-DstIp-DstPort; 'sha1_Salt-DstIp-DstPort': sha1 of
     * Salt-DstIp-DstPort; 'sha1_Salt-SrcIp-DstIp': sha1 of Salt-SrcIp-DstIp; 'sha1_Salt-SrcPort-DstPort': sha1 of
     * Salt-SrcPort-DstPort; 'sha1_Salt-UintDstIp-DstPort': Using the uint value of IP for sha1 of Salt-DstIp-DstPort;
     */
    tokenAuthenticationFormula?: pulumi.Input<string>;
    /**
     * token-authentication disable hardware assistance
     */
    tokenAuthenticationHwAssistDisable?: pulumi.Input<number>;
    /**
     * The server public IP address
     */
    tokenAuthenticationPublicAddress?: pulumi.Input<number>;
    /**
     * token-authentication salt-prefix
     */
    tokenAuthenticationSaltPrefix?: pulumi.Input<number>;
    tokenAuthenticationSaltPrefixCurr?: pulumi.Input<number>;
    tokenAuthenticationSaltPrefixPrev?: pulumi.Input<number>;
    tunnelEncap?: pulumi.Input<inputs.DdosTemplateUdpTunnelEncap>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
