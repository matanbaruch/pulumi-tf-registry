// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GslbSite extends pulumi.CustomResource {
    /**
     * Get an existing GslbSite resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbSiteState, opts?: pulumi.CustomResourceOptions): GslbSite {
        return new GslbSite(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/gslbSite:GslbSite';

    /**
     * Returns true if the given object is an instance of GslbSite.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbSite {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbSite.__pulumiType;
    }

    public readonly activeRdt!: pulumi.Output<outputs.GslbSiteActiveRdt | undefined>;
    /**
     * Enable DNS Auto Mapping
     */
    public readonly autoMap!: pulumi.Output<number | undefined>;
    /**
     * Specify cost of band-width
     */
    public readonly bwCost!: pulumi.Output<number | undefined>;
    /**
     * Specify the local controller for the GSLB site (Specify the hostname of the local controller)
     */
    public readonly controller!: pulumi.Output<string | undefined>;
    /**
     * Disable all servers in the GSLB site
     */
    public readonly disable!: pulumi.Output<number | undefined>;
    public readonly easyRdt!: pulumi.Output<outputs.GslbSiteEasyRdt | undefined>;
    public readonly ipServerLists!: pulumi.Output<outputs.GslbSiteIpServerList[] | undefined>;
    /**
     * Specify the limit for bandwidth, default is unlimited
     */
    public readonly limit!: pulumi.Output<number | undefined>;
    public readonly multipleGeoLocations!: pulumi.Output<outputs.GslbSiteMultipleGeoLocation[] | undefined>;
    /**
     * Fast GSLB Protocol aging
     */
    public readonly protoAgingFast!: pulumi.Output<number | undefined>;
    /**
     * Specify GSLB Protocol aging time
     */
    public readonly protoAgingTime!: pulumi.Output<number | undefined>;
    /**
     * Specify GSLB site name
     */
    public readonly siteName!: pulumi.Output<string>;
    public readonly slbDevLists!: pulumi.Output<outputs.GslbSiteSlbDevList[] | undefined>;
    /**
     * Specify template to collect site information (Specify GSLB SNMP template name)
     */
    public readonly template!: pulumi.Output<string | undefined>;
    /**
     * Specify the threshold for limit
     */
    public readonly threshold!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Specify a weight for the GSLB site (Weight, default is 1)
     */
    public readonly weight!: pulumi.Output<number | undefined>;

    /**
     * Create a GslbSite resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GslbSiteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbSiteArgs | GslbSiteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbSiteState | undefined;
            resourceInputs["activeRdt"] = state ? state.activeRdt : undefined;
            resourceInputs["autoMap"] = state ? state.autoMap : undefined;
            resourceInputs["bwCost"] = state ? state.bwCost : undefined;
            resourceInputs["controller"] = state ? state.controller : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["easyRdt"] = state ? state.easyRdt : undefined;
            resourceInputs["ipServerLists"] = state ? state.ipServerLists : undefined;
            resourceInputs["limit"] = state ? state.limit : undefined;
            resourceInputs["multipleGeoLocations"] = state ? state.multipleGeoLocations : undefined;
            resourceInputs["protoAgingFast"] = state ? state.protoAgingFast : undefined;
            resourceInputs["protoAgingTime"] = state ? state.protoAgingTime : undefined;
            resourceInputs["siteName"] = state ? state.siteName : undefined;
            resourceInputs["slbDevLists"] = state ? state.slbDevLists : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as GslbSiteArgs | undefined;
            if ((!args || args.siteName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteName'");
            }
            resourceInputs["activeRdt"] = args ? args.activeRdt : undefined;
            resourceInputs["autoMap"] = args ? args.autoMap : undefined;
            resourceInputs["bwCost"] = args ? args.bwCost : undefined;
            resourceInputs["controller"] = args ? args.controller : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["easyRdt"] = args ? args.easyRdt : undefined;
            resourceInputs["ipServerLists"] = args ? args.ipServerLists : undefined;
            resourceInputs["limit"] = args ? args.limit : undefined;
            resourceInputs["multipleGeoLocations"] = args ? args.multipleGeoLocations : undefined;
            resourceInputs["protoAgingFast"] = args ? args.protoAgingFast : undefined;
            resourceInputs["protoAgingTime"] = args ? args.protoAgingTime : undefined;
            resourceInputs["siteName"] = args ? args.siteName : undefined;
            resourceInputs["slbDevLists"] = args ? args.slbDevLists : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbSite.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbSite resources.
 */
export interface GslbSiteState {
    activeRdt?: pulumi.Input<inputs.GslbSiteActiveRdt>;
    /**
     * Enable DNS Auto Mapping
     */
    autoMap?: pulumi.Input<number>;
    /**
     * Specify cost of band-width
     */
    bwCost?: pulumi.Input<number>;
    /**
     * Specify the local controller for the GSLB site (Specify the hostname of the local controller)
     */
    controller?: pulumi.Input<string>;
    /**
     * Disable all servers in the GSLB site
     */
    disable?: pulumi.Input<number>;
    easyRdt?: pulumi.Input<inputs.GslbSiteEasyRdt>;
    ipServerLists?: pulumi.Input<pulumi.Input<inputs.GslbSiteIpServerList>[]>;
    /**
     * Specify the limit for bandwidth, default is unlimited
     */
    limit?: pulumi.Input<number>;
    multipleGeoLocations?: pulumi.Input<pulumi.Input<inputs.GslbSiteMultipleGeoLocation>[]>;
    /**
     * Fast GSLB Protocol aging
     */
    protoAgingFast?: pulumi.Input<number>;
    /**
     * Specify GSLB Protocol aging time
     */
    protoAgingTime?: pulumi.Input<number>;
    /**
     * Specify GSLB site name
     */
    siteName?: pulumi.Input<string>;
    slbDevLists?: pulumi.Input<pulumi.Input<inputs.GslbSiteSlbDevList>[]>;
    /**
     * Specify template to collect site information (Specify GSLB SNMP template name)
     */
    template?: pulumi.Input<string>;
    /**
     * Specify the threshold for limit
     */
    threshold?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specify a weight for the GSLB site (Weight, default is 1)
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GslbSite resource.
 */
export interface GslbSiteArgs {
    activeRdt?: pulumi.Input<inputs.GslbSiteActiveRdt>;
    /**
     * Enable DNS Auto Mapping
     */
    autoMap?: pulumi.Input<number>;
    /**
     * Specify cost of band-width
     */
    bwCost?: pulumi.Input<number>;
    /**
     * Specify the local controller for the GSLB site (Specify the hostname of the local controller)
     */
    controller?: pulumi.Input<string>;
    /**
     * Disable all servers in the GSLB site
     */
    disable?: pulumi.Input<number>;
    easyRdt?: pulumi.Input<inputs.GslbSiteEasyRdt>;
    ipServerLists?: pulumi.Input<pulumi.Input<inputs.GslbSiteIpServerList>[]>;
    /**
     * Specify the limit for bandwidth, default is unlimited
     */
    limit?: pulumi.Input<number>;
    multipleGeoLocations?: pulumi.Input<pulumi.Input<inputs.GslbSiteMultipleGeoLocation>[]>;
    /**
     * Fast GSLB Protocol aging
     */
    protoAgingFast?: pulumi.Input<number>;
    /**
     * Specify GSLB Protocol aging time
     */
    protoAgingTime?: pulumi.Input<number>;
    /**
     * Specify GSLB site name
     */
    siteName: pulumi.Input<string>;
    slbDevLists?: pulumi.Input<pulumi.Input<inputs.GslbSiteSlbDevList>[]>;
    /**
     * Specify template to collect site information (Specify GSLB SNMP template name)
     */
    template?: pulumi.Input<string>;
    /**
     * Specify the threshold for limit
     */
    threshold?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Specify a weight for the GSLB site (Weight, default is 1)
     */
    weight?: pulumi.Input<number>;
}
