// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVisibilityResourceUsageOper(args?: GetVisibilityResourceUsageOperArgs, opts?: pulumi.InvokeOptions): Promise<GetVisibilityResourceUsageOperResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getVisibilityResourceUsageOper:getVisibilityResourceUsageOper", {
        "id": args.id,
        "oper": args.oper,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVisibilityResourceUsageOper.
 */
export interface GetVisibilityResourceUsageOperArgs {
    id?: string;
    oper?: inputs.GetVisibilityResourceUsageOperOper;
}

/**
 * A collection of values returned by getVisibilityResourceUsageOper.
 */
export interface GetVisibilityResourceUsageOperResult {
    readonly id: string;
    readonly oper?: outputs.GetVisibilityResourceUsageOperOper;
}
export function getVisibilityResourceUsageOperOutput(args?: GetVisibilityResourceUsageOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVisibilityResourceUsageOperResult> {
    return pulumi.output(args).apply((a: any) => getVisibilityResourceUsageOper(a, opts))
}

/**
 * A collection of arguments for invoking getVisibilityResourceUsageOper.
 */
export interface GetVisibilityResourceUsageOperOutputArgs {
    id?: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetVisibilityResourceUsageOperOperArgs>;
}
