// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkBridgeVlanGroup extends pulumi.CustomResource {
    /**
     * Get an existing NetworkBridgeVlanGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkBridgeVlanGroupState, opts?: pulumi.CustomResourceOptions): NetworkBridgeVlanGroup {
        return new NetworkBridgeVlanGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/networkBridgeVlanGroup:NetworkBridgeVlanGroup';

    /**
     * Returns true if the given object is an instance of NetworkBridgeVlanGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkBridgeVlanGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkBridgeVlanGroup.__pulumiType;
    }

    /**
     * Bridge VLAN Group Number
     */
    public readonly bridgeVlanGroupNumber!: pulumi.Output<number>;
    /**
     * 'forward-all-traffic': Forward all traffic between bridge members; 'forward-ip-traffic': Forward only IP traffic between
     * bridge members (default);
     */
    public readonly forwardTraffic!: pulumi.Output<string | undefined>;
    /**
     * Bridge Group Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Virtual Ethernet Port (Virtual Ethernet Port number)
     */
    public readonly ve!: pulumi.Output<number | undefined>;
    public readonly vlanLists!: pulumi.Output<outputs.NetworkBridgeVlanGroupVlanList[] | undefined>;

    /**
     * Create a NetworkBridgeVlanGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkBridgeVlanGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkBridgeVlanGroupArgs | NetworkBridgeVlanGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkBridgeVlanGroupState | undefined;
            resourceInputs["bridgeVlanGroupNumber"] = state ? state.bridgeVlanGroupNumber : undefined;
            resourceInputs["forwardTraffic"] = state ? state.forwardTraffic : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["ve"] = state ? state.ve : undefined;
            resourceInputs["vlanLists"] = state ? state.vlanLists : undefined;
        } else {
            const args = argsOrState as NetworkBridgeVlanGroupArgs | undefined;
            if ((!args || args.bridgeVlanGroupNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bridgeVlanGroupNumber'");
            }
            resourceInputs["bridgeVlanGroupNumber"] = args ? args.bridgeVlanGroupNumber : undefined;
            resourceInputs["forwardTraffic"] = args ? args.forwardTraffic : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["ve"] = args ? args.ve : undefined;
            resourceInputs["vlanLists"] = args ? args.vlanLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkBridgeVlanGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkBridgeVlanGroup resources.
 */
export interface NetworkBridgeVlanGroupState {
    /**
     * Bridge VLAN Group Number
     */
    bridgeVlanGroupNumber?: pulumi.Input<number>;
    /**
     * 'forward-all-traffic': Forward all traffic between bridge members; 'forward-ip-traffic': Forward only IP traffic between
     * bridge members (default);
     */
    forwardTraffic?: pulumi.Input<string>;
    /**
     * Bridge Group Name
     */
    name?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Virtual Ethernet Port (Virtual Ethernet Port number)
     */
    ve?: pulumi.Input<number>;
    vlanLists?: pulumi.Input<pulumi.Input<inputs.NetworkBridgeVlanGroupVlanList>[]>;
}

/**
 * The set of arguments for constructing a NetworkBridgeVlanGroup resource.
 */
export interface NetworkBridgeVlanGroupArgs {
    /**
     * Bridge VLAN Group Number
     */
    bridgeVlanGroupNumber: pulumi.Input<number>;
    /**
     * 'forward-all-traffic': Forward all traffic between bridge members; 'forward-ip-traffic': Forward only IP traffic between
     * bridge members (default);
     */
    forwardTraffic?: pulumi.Input<string>;
    /**
     * Bridge Group Name
     */
    name?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Virtual Ethernet Port (Virtual Ethernet Port number)
     */
    ve?: pulumi.Input<number>;
    vlanLists?: pulumi.Input<pulumi.Input<inputs.NetworkBridgeVlanGroupVlanList>[]>;
}
