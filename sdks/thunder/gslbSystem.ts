// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GslbSystem extends pulumi.CustomResource {
    /**
     * Get an existing GslbSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbSystemState, opts?: pulumi.CustomResourceOptions): GslbSystem {
        return new GslbSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/gslbSystem:GslbSystem';

    /**
     * Returns true if the given object is an instance of GslbSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbSystem.__pulumiType;
    }

    /**
     * Interval to age runtime statistics. 0: never age, default is 10 (Time, unit: sec, default is 10)
     */
    public readonly ageInterval!: pulumi.Output<number | undefined>;
    /**
     * Load built-in IANA table
     */
    public readonly geoLocationIana!: pulumi.Output<number | undefined>;
    /**
     * GSLB Group
     */
    public readonly gslbGroup!: pulumi.Output<number | undefined>;
    public readonly gslbLoadFileLists!: pulumi.Output<outputs.GslbSystemGslbLoadFileList[] | undefined>;
    /**
     * GSLB Service-IP
     */
    public readonly gslbServiceIp!: pulumi.Output<number | undefined>;
    /**
     * GSLB Site
     */
    public readonly gslbSite!: pulumi.Output<number | undefined>;
    /**
     * System's Network Name
     */
    public readonly hostname!: pulumi.Output<number | undefined>;
    /**
     * TTL of IP packets, default is 0 (IP TTL value, default is 0)
     */
    public readonly ipTtl!: pulumi.Output<number | undefined>;
    /**
     * Specify Auto Map Module
     */
    public readonly module!: pulumi.Output<number | undefined>;
    /**
     * SLB Device
     */
    public readonly slbDevice!: pulumi.Output<number | undefined>;
    /**
     * SLB Server
     */
    public readonly slbServer!: pulumi.Output<number | undefined>;
    /**
     * SLB Virtual Server
     */
    public readonly slbVirtualServer!: pulumi.Output<number | undefined>;
    /**
     * Specify Auto Map TTL (TTL, default is 300)
     */
    public readonly ttl!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Disable GSLB until timeout if system is not ready (Time, unit: sec, default is 0)
     */
    public readonly wait!: pulumi.Output<number | undefined>;

    /**
     * Create a GslbSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GslbSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbSystemArgs | GslbSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbSystemState | undefined;
            resourceInputs["ageInterval"] = state ? state.ageInterval : undefined;
            resourceInputs["geoLocationIana"] = state ? state.geoLocationIana : undefined;
            resourceInputs["gslbGroup"] = state ? state.gslbGroup : undefined;
            resourceInputs["gslbLoadFileLists"] = state ? state.gslbLoadFileLists : undefined;
            resourceInputs["gslbServiceIp"] = state ? state.gslbServiceIp : undefined;
            resourceInputs["gslbSite"] = state ? state.gslbSite : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["ipTtl"] = state ? state.ipTtl : undefined;
            resourceInputs["module"] = state ? state.module : undefined;
            resourceInputs["slbDevice"] = state ? state.slbDevice : undefined;
            resourceInputs["slbServer"] = state ? state.slbServer : undefined;
            resourceInputs["slbVirtualServer"] = state ? state.slbVirtualServer : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["wait"] = state ? state.wait : undefined;
        } else {
            const args = argsOrState as GslbSystemArgs | undefined;
            resourceInputs["ageInterval"] = args ? args.ageInterval : undefined;
            resourceInputs["geoLocationIana"] = args ? args.geoLocationIana : undefined;
            resourceInputs["gslbGroup"] = args ? args.gslbGroup : undefined;
            resourceInputs["gslbLoadFileLists"] = args ? args.gslbLoadFileLists : undefined;
            resourceInputs["gslbServiceIp"] = args ? args.gslbServiceIp : undefined;
            resourceInputs["gslbSite"] = args ? args.gslbSite : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["ipTtl"] = args ? args.ipTtl : undefined;
            resourceInputs["module"] = args ? args.module : undefined;
            resourceInputs["slbDevice"] = args ? args.slbDevice : undefined;
            resourceInputs["slbServer"] = args ? args.slbServer : undefined;
            resourceInputs["slbVirtualServer"] = args ? args.slbVirtualServer : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["wait"] = args ? args.wait : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbSystem.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbSystem resources.
 */
export interface GslbSystemState {
    /**
     * Interval to age runtime statistics. 0: never age, default is 10 (Time, unit: sec, default is 10)
     */
    ageInterval?: pulumi.Input<number>;
    /**
     * Load built-in IANA table
     */
    geoLocationIana?: pulumi.Input<number>;
    /**
     * GSLB Group
     */
    gslbGroup?: pulumi.Input<number>;
    gslbLoadFileLists?: pulumi.Input<pulumi.Input<inputs.GslbSystemGslbLoadFileList>[]>;
    /**
     * GSLB Service-IP
     */
    gslbServiceIp?: pulumi.Input<number>;
    /**
     * GSLB Site
     */
    gslbSite?: pulumi.Input<number>;
    /**
     * System's Network Name
     */
    hostname?: pulumi.Input<number>;
    /**
     * TTL of IP packets, default is 0 (IP TTL value, default is 0)
     */
    ipTtl?: pulumi.Input<number>;
    /**
     * Specify Auto Map Module
     */
    module?: pulumi.Input<number>;
    /**
     * SLB Device
     */
    slbDevice?: pulumi.Input<number>;
    /**
     * SLB Server
     */
    slbServer?: pulumi.Input<number>;
    /**
     * SLB Virtual Server
     */
    slbVirtualServer?: pulumi.Input<number>;
    /**
     * Specify Auto Map TTL (TTL, default is 300)
     */
    ttl?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Disable GSLB until timeout if system is not ready (Time, unit: sec, default is 0)
     */
    wait?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GslbSystem resource.
 */
export interface GslbSystemArgs {
    /**
     * Interval to age runtime statistics. 0: never age, default is 10 (Time, unit: sec, default is 10)
     */
    ageInterval?: pulumi.Input<number>;
    /**
     * Load built-in IANA table
     */
    geoLocationIana?: pulumi.Input<number>;
    /**
     * GSLB Group
     */
    gslbGroup?: pulumi.Input<number>;
    gslbLoadFileLists?: pulumi.Input<pulumi.Input<inputs.GslbSystemGslbLoadFileList>[]>;
    /**
     * GSLB Service-IP
     */
    gslbServiceIp?: pulumi.Input<number>;
    /**
     * GSLB Site
     */
    gslbSite?: pulumi.Input<number>;
    /**
     * System's Network Name
     */
    hostname?: pulumi.Input<number>;
    /**
     * TTL of IP packets, default is 0 (IP TTL value, default is 0)
     */
    ipTtl?: pulumi.Input<number>;
    /**
     * Specify Auto Map Module
     */
    module?: pulumi.Input<number>;
    /**
     * SLB Device
     */
    slbDevice?: pulumi.Input<number>;
    /**
     * SLB Server
     */
    slbServer?: pulumi.Input<number>;
    /**
     * SLB Virtual Server
     */
    slbVirtualServer?: pulumi.Input<number>;
    /**
     * Specify Auto Map TTL (TTL, default is 300)
     */
    ttl?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Disable GSLB until timeout if system is not ready (Time, unit: sec, default is 0)
     */
    wait?: pulumi.Input<number>;
}
