// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Cgnv6LsnPortReservation extends pulumi.CustomResource {
    /**
     * Get an existing Cgnv6LsnPortReservation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Cgnv6LsnPortReservationState, opts?: pulumi.CustomResourceOptions): Cgnv6LsnPortReservation {
        return new Cgnv6LsnPortReservation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cgnv6LsnPortReservation:Cgnv6LsnPortReservation';

    /**
     * Returns true if the given object is an instance of Cgnv6LsnPortReservation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cgnv6LsnPortReservation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cgnv6LsnPortReservation.__pulumiType;
    }

    /**
     * Inside User Address and Port Range (Inside User IP address)
     */
    public readonly inside!: pulumi.Output<string>;
    /**
     * Inside End Port
     */
    public readonly insidePortEnd!: pulumi.Output<number>;
    /**
     * Inside Start Port
     */
    public readonly insidePortStart!: pulumi.Output<number>;
    /**
     * NAT IP address
     */
    public readonly nat!: pulumi.Output<string>;
    /**
     * NAT End Port
     */
    public readonly natPortEnd!: pulumi.Output<number>;
    /**
     * NAT Start Port
     */
    public readonly natPortStart!: pulumi.Output<number>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Cgnv6LsnPortReservation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Cgnv6LsnPortReservationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Cgnv6LsnPortReservationArgs | Cgnv6LsnPortReservationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Cgnv6LsnPortReservationState | undefined;
            resourceInputs["inside"] = state ? state.inside : undefined;
            resourceInputs["insidePortEnd"] = state ? state.insidePortEnd : undefined;
            resourceInputs["insidePortStart"] = state ? state.insidePortStart : undefined;
            resourceInputs["nat"] = state ? state.nat : undefined;
            resourceInputs["natPortEnd"] = state ? state.natPortEnd : undefined;
            resourceInputs["natPortStart"] = state ? state.natPortStart : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as Cgnv6LsnPortReservationArgs | undefined;
            if ((!args || args.inside === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inside'");
            }
            if ((!args || args.insidePortEnd === undefined) && !opts.urn) {
                throw new Error("Missing required property 'insidePortEnd'");
            }
            if ((!args || args.insidePortStart === undefined) && !opts.urn) {
                throw new Error("Missing required property 'insidePortStart'");
            }
            if ((!args || args.nat === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nat'");
            }
            if ((!args || args.natPortEnd === undefined) && !opts.urn) {
                throw new Error("Missing required property 'natPortEnd'");
            }
            if ((!args || args.natPortStart === undefined) && !opts.urn) {
                throw new Error("Missing required property 'natPortStart'");
            }
            resourceInputs["inside"] = args ? args.inside : undefined;
            resourceInputs["insidePortEnd"] = args ? args.insidePortEnd : undefined;
            resourceInputs["insidePortStart"] = args ? args.insidePortStart : undefined;
            resourceInputs["nat"] = args ? args.nat : undefined;
            resourceInputs["natPortEnd"] = args ? args.natPortEnd : undefined;
            resourceInputs["natPortStart"] = args ? args.natPortStart : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cgnv6LsnPortReservation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cgnv6LsnPortReservation resources.
 */
export interface Cgnv6LsnPortReservationState {
    /**
     * Inside User Address and Port Range (Inside User IP address)
     */
    inside?: pulumi.Input<string>;
    /**
     * Inside End Port
     */
    insidePortEnd?: pulumi.Input<number>;
    /**
     * Inside Start Port
     */
    insidePortStart?: pulumi.Input<number>;
    /**
     * NAT IP address
     */
    nat?: pulumi.Input<string>;
    /**
     * NAT End Port
     */
    natPortEnd?: pulumi.Input<number>;
    /**
     * NAT Start Port
     */
    natPortStart?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cgnv6LsnPortReservation resource.
 */
export interface Cgnv6LsnPortReservationArgs {
    /**
     * Inside User Address and Port Range (Inside User IP address)
     */
    inside: pulumi.Input<string>;
    /**
     * Inside End Port
     */
    insidePortEnd: pulumi.Input<number>;
    /**
     * Inside Start Port
     */
    insidePortStart: pulumi.Input<number>;
    /**
     * NAT IP address
     */
    nat: pulumi.Input<string>;
    /**
     * NAT End Port
     */
    natPortEnd: pulumi.Input<number>;
    /**
     * NAT Start Port
     */
    natPortStart: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
