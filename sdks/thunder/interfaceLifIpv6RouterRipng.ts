// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class InterfaceLifIpv6RouterRipng extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceLifIpv6RouterRipng resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceLifIpv6RouterRipngState, opts?: pulumi.CustomResourceOptions): InterfaceLifIpv6RouterRipng {
        return new InterfaceLifIpv6RouterRipng(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/interfaceLifIpv6RouterRipng:InterfaceLifIpv6RouterRipng';

    /**
     * Returns true if the given object is an instance of InterfaceLifIpv6RouterRipng.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceLifIpv6RouterRipng {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceLifIpv6RouterRipng.__pulumiType;
    }

    /**
     * Ifname
     */
    public readonly ifname!: pulumi.Output<string>;
    /**
     * RIP Routing for IPv6
     */
    public readonly rip!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a InterfaceLifIpv6RouterRipng resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceLifIpv6RouterRipngArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceLifIpv6RouterRipngArgs | InterfaceLifIpv6RouterRipngState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceLifIpv6RouterRipngState | undefined;
            resourceInputs["ifname"] = state ? state.ifname : undefined;
            resourceInputs["rip"] = state ? state.rip : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as InterfaceLifIpv6RouterRipngArgs | undefined;
            if ((!args || args.ifname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ifname'");
            }
            resourceInputs["ifname"] = args ? args.ifname : undefined;
            resourceInputs["rip"] = args ? args.rip : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceLifIpv6RouterRipng.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceLifIpv6RouterRipng resources.
 */
export interface InterfaceLifIpv6RouterRipngState {
    /**
     * Ifname
     */
    ifname?: pulumi.Input<string>;
    /**
     * RIP Routing for IPv6
     */
    rip?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterfaceLifIpv6RouterRipng resource.
 */
export interface InterfaceLifIpv6RouterRipngArgs {
    /**
     * Ifname
     */
    ifname: pulumi.Input<string>;
    /**
     * RIP Routing for IPv6
     */
    rip?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
