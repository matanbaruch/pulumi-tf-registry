// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbTemplateRespmodIcap extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplateRespmodIcap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplateRespmodIcapState, opts?: pulumi.CustomResourceOptions): SlbTemplateRespmodIcap {
        return new SlbTemplateRespmodIcap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplateRespmodIcap:SlbTemplateRespmodIcap';

    /**
     * Returns true if the given object is an instance of SlbTemplateRespmodIcap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplateRespmodIcap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplateRespmodIcap.__pulumiType;
    }

    /**
     * 'continue': Continue; 'drop': Drop; 'reset': Reset;
     */
    public readonly action!: pulumi.Output<string | undefined>;
    public readonly bypassIpCfgs!: pulumi.Output<outputs.SlbTemplateRespmodIcapBypassIpCfg[] | undefined>;
    /**
     * Don't reset http server
     */
    public readonly disableHttpServerReset!: pulumi.Output<number | undefined>;
    /**
     * When template sg is down mark vport down
     */
    public readonly failClose!: pulumi.Output<number | undefined>;
    /**
     * 'continue': Continue; 'drop': Drop; 'reset': Reset;
     */
    public readonly failureAction!: pulumi.Output<string | undefined>;
    /**
     * Include protocol and port in HTTP URI
     */
    public readonly includeProtocolInUri!: pulumi.Output<number | undefined>;
    /**
     * Only log allowed HTTP method
     */
    public readonly logOnlyAllowedMethod!: pulumi.Output<number | undefined>;
    /**
     * logging template (Logging template name)
     */
    public readonly logging!: pulumi.Output<string | undefined>;
    /**
     * min-payload-size value 0 - 65535, default is 0
     */
    public readonly minPayloadSize!: pulumi.Output<number | undefined>;
    /**
     * Reqmod ICAP Template Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Preview value 1 - 32768, default is 32768
     */
    public readonly preview!: pulumi.Output<number | undefined>;
    /**
     * Server SSL template (Server SSL template name)
     */
    public readonly serverSsl!: pulumi.Output<string | undefined>;
    /**
     * Bind a Service Group to the template (Service Group Name)
     */
    public readonly serviceGroup!: pulumi.Output<string | undefined>;
    /**
     * URL to send to ICAP server (Service URL Name)
     */
    public readonly serviceUrl!: pulumi.Output<string | undefined>;
    /**
     * Reference a persist source ip template from shared partition
     */
    public readonly sharedPartitionPersistSourceIpTemplate!: pulumi.Output<number | undefined>;
    /**
     * Reference a TCP Proxy template from shared partition
     */
    public readonly sharedPartitionTcpProxyTemplate!: pulumi.Output<number | undefined>;
    /**
     * Source IP persistence template (Source IP persistence template name)
     */
    public readonly sourceIp!: pulumi.Output<string | undefined>;
    /**
     * TCP Proxy Template Name
     */
    public readonly tcpProxy!: pulumi.Output<string | undefined>;
    /**
     * Source IP Persistence Template Name
     */
    public readonly templatePersistSourceIpShared!: pulumi.Output<string | undefined>;
    /**
     * TCP Proxy Template name
     */
    public readonly templateTcpProxyShared!: pulumi.Output<string | undefined>;
    /**
     * Timeout value 1 - 200 in units of 200ms, default is 5 (default is 1000ms) (1 - 200 in units of 200ms, default is 5
     * (1000ms))
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Use URL format for authentication
     */
    public readonly xAuthUrl!: pulumi.Output<number | undefined>;

    /**
     * Create a SlbTemplateRespmodIcap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplateRespmodIcapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplateRespmodIcapArgs | SlbTemplateRespmodIcapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplateRespmodIcapState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["bypassIpCfgs"] = state ? state.bypassIpCfgs : undefined;
            resourceInputs["disableHttpServerReset"] = state ? state.disableHttpServerReset : undefined;
            resourceInputs["failClose"] = state ? state.failClose : undefined;
            resourceInputs["failureAction"] = state ? state.failureAction : undefined;
            resourceInputs["includeProtocolInUri"] = state ? state.includeProtocolInUri : undefined;
            resourceInputs["logOnlyAllowedMethod"] = state ? state.logOnlyAllowedMethod : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["minPayloadSize"] = state ? state.minPayloadSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["preview"] = state ? state.preview : undefined;
            resourceInputs["serverSsl"] = state ? state.serverSsl : undefined;
            resourceInputs["serviceGroup"] = state ? state.serviceGroup : undefined;
            resourceInputs["serviceUrl"] = state ? state.serviceUrl : undefined;
            resourceInputs["sharedPartitionPersistSourceIpTemplate"] = state ? state.sharedPartitionPersistSourceIpTemplate : undefined;
            resourceInputs["sharedPartitionTcpProxyTemplate"] = state ? state.sharedPartitionTcpProxyTemplate : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["tcpProxy"] = state ? state.tcpProxy : undefined;
            resourceInputs["templatePersistSourceIpShared"] = state ? state.templatePersistSourceIpShared : undefined;
            resourceInputs["templateTcpProxyShared"] = state ? state.templateTcpProxyShared : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["xAuthUrl"] = state ? state.xAuthUrl : undefined;
        } else {
            const args = argsOrState as SlbTemplateRespmodIcapArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["bypassIpCfgs"] = args ? args.bypassIpCfgs : undefined;
            resourceInputs["disableHttpServerReset"] = args ? args.disableHttpServerReset : undefined;
            resourceInputs["failClose"] = args ? args.failClose : undefined;
            resourceInputs["failureAction"] = args ? args.failureAction : undefined;
            resourceInputs["includeProtocolInUri"] = args ? args.includeProtocolInUri : undefined;
            resourceInputs["logOnlyAllowedMethod"] = args ? args.logOnlyAllowedMethod : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["minPayloadSize"] = args ? args.minPayloadSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["preview"] = args ? args.preview : undefined;
            resourceInputs["serverSsl"] = args ? args.serverSsl : undefined;
            resourceInputs["serviceGroup"] = args ? args.serviceGroup : undefined;
            resourceInputs["serviceUrl"] = args ? args.serviceUrl : undefined;
            resourceInputs["sharedPartitionPersistSourceIpTemplate"] = args ? args.sharedPartitionPersistSourceIpTemplate : undefined;
            resourceInputs["sharedPartitionTcpProxyTemplate"] = args ? args.sharedPartitionTcpProxyTemplate : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["tcpProxy"] = args ? args.tcpProxy : undefined;
            resourceInputs["templatePersistSourceIpShared"] = args ? args.templatePersistSourceIpShared : undefined;
            resourceInputs["templateTcpProxyShared"] = args ? args.templateTcpProxyShared : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["xAuthUrl"] = args ? args.xAuthUrl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplateRespmodIcap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplateRespmodIcap resources.
 */
export interface SlbTemplateRespmodIcapState {
    /**
     * 'continue': Continue; 'drop': Drop; 'reset': Reset;
     */
    action?: pulumi.Input<string>;
    bypassIpCfgs?: pulumi.Input<pulumi.Input<inputs.SlbTemplateRespmodIcapBypassIpCfg>[]>;
    /**
     * Don't reset http server
     */
    disableHttpServerReset?: pulumi.Input<number>;
    /**
     * When template sg is down mark vport down
     */
    failClose?: pulumi.Input<number>;
    /**
     * 'continue': Continue; 'drop': Drop; 'reset': Reset;
     */
    failureAction?: pulumi.Input<string>;
    /**
     * Include protocol and port in HTTP URI
     */
    includeProtocolInUri?: pulumi.Input<number>;
    /**
     * Only log allowed HTTP method
     */
    logOnlyAllowedMethod?: pulumi.Input<number>;
    /**
     * logging template (Logging template name)
     */
    logging?: pulumi.Input<string>;
    /**
     * min-payload-size value 0 - 65535, default is 0
     */
    minPayloadSize?: pulumi.Input<number>;
    /**
     * Reqmod ICAP Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Preview value 1 - 32768, default is 32768
     */
    preview?: pulumi.Input<number>;
    /**
     * Server SSL template (Server SSL template name)
     */
    serverSsl?: pulumi.Input<string>;
    /**
     * Bind a Service Group to the template (Service Group Name)
     */
    serviceGroup?: pulumi.Input<string>;
    /**
     * URL to send to ICAP server (Service URL Name)
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * Reference a persist source ip template from shared partition
     */
    sharedPartitionPersistSourceIpTemplate?: pulumi.Input<number>;
    /**
     * Reference a TCP Proxy template from shared partition
     */
    sharedPartitionTcpProxyTemplate?: pulumi.Input<number>;
    /**
     * Source IP persistence template (Source IP persistence template name)
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * TCP Proxy Template Name
     */
    tcpProxy?: pulumi.Input<string>;
    /**
     * Source IP Persistence Template Name
     */
    templatePersistSourceIpShared?: pulumi.Input<string>;
    /**
     * TCP Proxy Template name
     */
    templateTcpProxyShared?: pulumi.Input<string>;
    /**
     * Timeout value 1 - 200 in units of 200ms, default is 5 (default is 1000ms) (1 - 200 in units of 200ms, default is 5
     * (1000ms))
     */
    timeout?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Use URL format for authentication
     */
    xAuthUrl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SlbTemplateRespmodIcap resource.
 */
export interface SlbTemplateRespmodIcapArgs {
    /**
     * 'continue': Continue; 'drop': Drop; 'reset': Reset;
     */
    action?: pulumi.Input<string>;
    bypassIpCfgs?: pulumi.Input<pulumi.Input<inputs.SlbTemplateRespmodIcapBypassIpCfg>[]>;
    /**
     * Don't reset http server
     */
    disableHttpServerReset?: pulumi.Input<number>;
    /**
     * When template sg is down mark vport down
     */
    failClose?: pulumi.Input<number>;
    /**
     * 'continue': Continue; 'drop': Drop; 'reset': Reset;
     */
    failureAction?: pulumi.Input<string>;
    /**
     * Include protocol and port in HTTP URI
     */
    includeProtocolInUri?: pulumi.Input<number>;
    /**
     * Only log allowed HTTP method
     */
    logOnlyAllowedMethod?: pulumi.Input<number>;
    /**
     * logging template (Logging template name)
     */
    logging?: pulumi.Input<string>;
    /**
     * min-payload-size value 0 - 65535, default is 0
     */
    minPayloadSize?: pulumi.Input<number>;
    /**
     * Reqmod ICAP Template Name
     */
    name?: pulumi.Input<string>;
    /**
     * Preview value 1 - 32768, default is 32768
     */
    preview?: pulumi.Input<number>;
    /**
     * Server SSL template (Server SSL template name)
     */
    serverSsl?: pulumi.Input<string>;
    /**
     * Bind a Service Group to the template (Service Group Name)
     */
    serviceGroup?: pulumi.Input<string>;
    /**
     * URL to send to ICAP server (Service URL Name)
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * Reference a persist source ip template from shared partition
     */
    sharedPartitionPersistSourceIpTemplate?: pulumi.Input<number>;
    /**
     * Reference a TCP Proxy template from shared partition
     */
    sharedPartitionTcpProxyTemplate?: pulumi.Input<number>;
    /**
     * Source IP persistence template (Source IP persistence template name)
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * TCP Proxy Template Name
     */
    tcpProxy?: pulumi.Input<string>;
    /**
     * Source IP Persistence Template Name
     */
    templatePersistSourceIpShared?: pulumi.Input<string>;
    /**
     * TCP Proxy Template name
     */
    templateTcpProxyShared?: pulumi.Input<string>;
    /**
     * Timeout value 1 - 200 in units of 200ms, default is 5 (default is 1000ms) (1 - 200 in units of 200ms, default is 5
     * (1000ms))
     */
    timeout?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Use URL format for authentication
     */
    xAuthUrl?: pulumi.Input<number>;
}
