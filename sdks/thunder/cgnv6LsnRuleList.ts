// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Cgnv6LsnRuleList extends pulumi.CustomResource {
    /**
     * Get an existing Cgnv6LsnRuleList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Cgnv6LsnRuleListState, opts?: pulumi.CustomResourceOptions): Cgnv6LsnRuleList {
        return new Cgnv6LsnRuleList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cgnv6LsnRuleList:Cgnv6LsnRuleList';

    /**
     * Returns true if the given object is an instance of Cgnv6LsnRuleList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cgnv6LsnRuleList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cgnv6LsnRuleList.__pulumiType;
    }

    public readonly default!: pulumi.Output<outputs.Cgnv6LsnRuleListDefault | undefined>;
    public readonly domainIp!: pulumi.Output<outputs.Cgnv6LsnRuleListDomainIp | undefined>;
    public readonly domainListNameLists!: pulumi.Output<outputs.Cgnv6LsnRuleListDomainListNameList[] | undefined>;
    public readonly domainNameLists!: pulumi.Output<outputs.Cgnv6LsnRuleListDomainNameList[] | undefined>;
    /**
     * Enable match domain name in http request
     */
    public readonly httpMatchDomainName!: pulumi.Output<number | undefined>;
    public readonly ipLists!: pulumi.Output<outputs.Cgnv6LsnRuleListIpList[] | undefined>;
    /**
     * LSN Rule-List Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Cgnv6LsnRuleList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Cgnv6LsnRuleListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Cgnv6LsnRuleListArgs | Cgnv6LsnRuleListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Cgnv6LsnRuleListState | undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["domainIp"] = state ? state.domainIp : undefined;
            resourceInputs["domainListNameLists"] = state ? state.domainListNameLists : undefined;
            resourceInputs["domainNameLists"] = state ? state.domainNameLists : undefined;
            resourceInputs["httpMatchDomainName"] = state ? state.httpMatchDomainName : undefined;
            resourceInputs["ipLists"] = state ? state.ipLists : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as Cgnv6LsnRuleListArgs | undefined;
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["domainIp"] = args ? args.domainIp : undefined;
            resourceInputs["domainListNameLists"] = args ? args.domainListNameLists : undefined;
            resourceInputs["domainNameLists"] = args ? args.domainNameLists : undefined;
            resourceInputs["httpMatchDomainName"] = args ? args.httpMatchDomainName : undefined;
            resourceInputs["ipLists"] = args ? args.ipLists : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cgnv6LsnRuleList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cgnv6LsnRuleList resources.
 */
export interface Cgnv6LsnRuleListState {
    default?: pulumi.Input<inputs.Cgnv6LsnRuleListDefault>;
    domainIp?: pulumi.Input<inputs.Cgnv6LsnRuleListDomainIp>;
    domainListNameLists?: pulumi.Input<pulumi.Input<inputs.Cgnv6LsnRuleListDomainListNameList>[]>;
    domainNameLists?: pulumi.Input<pulumi.Input<inputs.Cgnv6LsnRuleListDomainNameList>[]>;
    /**
     * Enable match domain name in http request
     */
    httpMatchDomainName?: pulumi.Input<number>;
    ipLists?: pulumi.Input<pulumi.Input<inputs.Cgnv6LsnRuleListIpList>[]>;
    /**
     * LSN Rule-List Name
     */
    name?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cgnv6LsnRuleList resource.
 */
export interface Cgnv6LsnRuleListArgs {
    default?: pulumi.Input<inputs.Cgnv6LsnRuleListDefault>;
    domainIp?: pulumi.Input<inputs.Cgnv6LsnRuleListDomainIp>;
    domainListNameLists?: pulumi.Input<pulumi.Input<inputs.Cgnv6LsnRuleListDomainListNameList>[]>;
    domainNameLists?: pulumi.Input<pulumi.Input<inputs.Cgnv6LsnRuleListDomainNameList>[]>;
    /**
     * Enable match domain name in http request
     */
    httpMatchDomainName?: pulumi.Input<number>;
    ipLists?: pulumi.Input<pulumi.Input<inputs.Cgnv6LsnRuleListIpList>[]>;
    /**
     * LSN Rule-List Name
     */
    name?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
