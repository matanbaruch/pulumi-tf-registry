// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RouterOspfDefaultInformation extends pulumi.CustomResource {
    /**
     * Get an existing RouterOspfDefaultInformation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterOspfDefaultInformationState, opts?: pulumi.CustomResourceOptions): RouterOspfDefaultInformation {
        return new RouterOspfDefaultInformation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/routerOspfDefaultInformation:RouterOspfDefaultInformation';

    /**
     * Returns true if the given object is an instance of RouterOspfDefaultInformation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterOspfDefaultInformation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterOspfDefaultInformation.__pulumiType;
    }

    /**
     * Always advertise default route
     */
    public readonly always!: pulumi.Output<number | undefined>;
    /**
     * OSPF default metric (OSPF metric)
     */
    public readonly metric!: pulumi.Output<number | undefined>;
    /**
     * OSPF metric type for default routes
     */
    public readonly metricType!: pulumi.Output<number | undefined>;
    /**
     * Distribute a default route
     */
    public readonly originate!: pulumi.Output<number | undefined>;
    /**
     * ProcessId
     */
    public readonly processId!: pulumi.Output<string>;
    /**
     * Route map reference (Pointer to route-map entries)
     */
    public readonly routeMap!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a RouterOspfDefaultInformation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterOspfDefaultInformationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterOspfDefaultInformationArgs | RouterOspfDefaultInformationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterOspfDefaultInformationState | undefined;
            resourceInputs["always"] = state ? state.always : undefined;
            resourceInputs["metric"] = state ? state.metric : undefined;
            resourceInputs["metricType"] = state ? state.metricType : undefined;
            resourceInputs["originate"] = state ? state.originate : undefined;
            resourceInputs["processId"] = state ? state.processId : undefined;
            resourceInputs["routeMap"] = state ? state.routeMap : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as RouterOspfDefaultInformationArgs | undefined;
            if ((!args || args.processId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'processId'");
            }
            resourceInputs["always"] = args ? args.always : undefined;
            resourceInputs["metric"] = args ? args.metric : undefined;
            resourceInputs["metricType"] = args ? args.metricType : undefined;
            resourceInputs["originate"] = args ? args.originate : undefined;
            resourceInputs["processId"] = args ? args.processId : undefined;
            resourceInputs["routeMap"] = args ? args.routeMap : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterOspfDefaultInformation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterOspfDefaultInformation resources.
 */
export interface RouterOspfDefaultInformationState {
    /**
     * Always advertise default route
     */
    always?: pulumi.Input<number>;
    /**
     * OSPF default metric (OSPF metric)
     */
    metric?: pulumi.Input<number>;
    /**
     * OSPF metric type for default routes
     */
    metricType?: pulumi.Input<number>;
    /**
     * Distribute a default route
     */
    originate?: pulumi.Input<number>;
    /**
     * ProcessId
     */
    processId?: pulumi.Input<string>;
    /**
     * Route map reference (Pointer to route-map entries)
     */
    routeMap?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterOspfDefaultInformation resource.
 */
export interface RouterOspfDefaultInformationArgs {
    /**
     * Always advertise default route
     */
    always?: pulumi.Input<number>;
    /**
     * OSPF default metric (OSPF metric)
     */
    metric?: pulumi.Input<number>;
    /**
     * OSPF metric type for default routes
     */
    metricType?: pulumi.Input<number>;
    /**
     * Distribute a default route
     */
    originate?: pulumi.Input<number>;
    /**
     * ProcessId
     */
    processId: pulumi.Input<string>;
    /**
     * Route map reference (Pointer to route-map entries)
     */
    routeMap?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
