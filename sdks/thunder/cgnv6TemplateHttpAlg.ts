// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Cgnv6TemplateHttpAlg extends pulumi.CustomResource {
    /**
     * Get an existing Cgnv6TemplateHttpAlg resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Cgnv6TemplateHttpAlgState, opts?: pulumi.CustomResourceOptions): Cgnv6TemplateHttpAlg {
        return new Cgnv6TemplateHttpAlg(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cgnv6TemplateHttpAlg:Cgnv6TemplateHttpAlg';

    /**
     * Returns true if the given object is an instance of Cgnv6TemplateHttpAlg.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cgnv6TemplateHttpAlg {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cgnv6TemplateHttpAlg.__pulumiType;
    }

    /**
     * Header name (default: X-Forwarded-For)
     */
    public readonly headerNameClientIp!: pulumi.Output<string | undefined>;
    /**
     * Header name (default: X-MSISDN)
     */
    public readonly headerNameMsisdn!: pulumi.Output<string | undefined>;
    /**
     * Include the tunnel IP (applies to DS-Lite and 6RD-NAT64 sessions)
     */
    public readonly includeTunnelIp!: pulumi.Output<number | undefined>;
    /**
     * 'append': Append if there is already a header (default); 'replace': Replace if there is already a header;
     */
    public readonly method!: pulumi.Output<string | undefined>;
    /**
     * HTTP-ALG template name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Insert Client IP into HTTP request
     */
    public readonly requestInsertClientIp!: pulumi.Output<number | undefined>;
    /**
     * Insert MSISDN into HTTP request
     */
    public readonly requestInsertMsisdn!: pulumi.Output<number | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Cgnv6TemplateHttpAlg resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Cgnv6TemplateHttpAlgArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Cgnv6TemplateHttpAlgArgs | Cgnv6TemplateHttpAlgState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Cgnv6TemplateHttpAlgState | undefined;
            resourceInputs["headerNameClientIp"] = state ? state.headerNameClientIp : undefined;
            resourceInputs["headerNameMsisdn"] = state ? state.headerNameMsisdn : undefined;
            resourceInputs["includeTunnelIp"] = state ? state.includeTunnelIp : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["requestInsertClientIp"] = state ? state.requestInsertClientIp : undefined;
            resourceInputs["requestInsertMsisdn"] = state ? state.requestInsertMsisdn : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as Cgnv6TemplateHttpAlgArgs | undefined;
            resourceInputs["headerNameClientIp"] = args ? args.headerNameClientIp : undefined;
            resourceInputs["headerNameMsisdn"] = args ? args.headerNameMsisdn : undefined;
            resourceInputs["includeTunnelIp"] = args ? args.includeTunnelIp : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["requestInsertClientIp"] = args ? args.requestInsertClientIp : undefined;
            resourceInputs["requestInsertMsisdn"] = args ? args.requestInsertMsisdn : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cgnv6TemplateHttpAlg.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cgnv6TemplateHttpAlg resources.
 */
export interface Cgnv6TemplateHttpAlgState {
    /**
     * Header name (default: X-Forwarded-For)
     */
    headerNameClientIp?: pulumi.Input<string>;
    /**
     * Header name (default: X-MSISDN)
     */
    headerNameMsisdn?: pulumi.Input<string>;
    /**
     * Include the tunnel IP (applies to DS-Lite and 6RD-NAT64 sessions)
     */
    includeTunnelIp?: pulumi.Input<number>;
    /**
     * 'append': Append if there is already a header (default); 'replace': Replace if there is already a header;
     */
    method?: pulumi.Input<string>;
    /**
     * HTTP-ALG template name
     */
    name?: pulumi.Input<string>;
    /**
     * Insert Client IP into HTTP request
     */
    requestInsertClientIp?: pulumi.Input<number>;
    /**
     * Insert MSISDN into HTTP request
     */
    requestInsertMsisdn?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cgnv6TemplateHttpAlg resource.
 */
export interface Cgnv6TemplateHttpAlgArgs {
    /**
     * Header name (default: X-Forwarded-For)
     */
    headerNameClientIp?: pulumi.Input<string>;
    /**
     * Header name (default: X-MSISDN)
     */
    headerNameMsisdn?: pulumi.Input<string>;
    /**
     * Include the tunnel IP (applies to DS-Lite and 6RD-NAT64 sessions)
     */
    includeTunnelIp?: pulumi.Input<number>;
    /**
     * 'append': Append if there is already a header (default); 'replace': Replace if there is already a header;
     */
    method?: pulumi.Input<string>;
    /**
     * HTTP-ALG template name
     */
    name?: pulumi.Input<string>;
    /**
     * Insert Client IP into HTTP request
     */
    requestInsertClientIp?: pulumi.Input<number>;
    /**
     * Insert MSISDN into HTTP request
     */
    requestInsertMsisdn?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
