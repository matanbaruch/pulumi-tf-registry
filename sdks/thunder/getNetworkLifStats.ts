// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkLifStats(args?: GetNetworkLifStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkLifStatsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getNetworkLifStats:getNetworkLifStats", {
        "enable": args.enable,
        "id": args.id,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkLifStats.
 */
export interface GetNetworkLifStatsArgs {
    enable?: number;
    id?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getNetworkLifStats.
 */
export interface GetNetworkLifStatsResult {
    readonly enable?: number;
    readonly id: string;
    readonly uuid: string;
}
export function getNetworkLifStatsOutput(args?: GetNetworkLifStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkLifStatsResult> {
    return pulumi.output(args).apply((a: any) => getNetworkLifStats(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkLifStats.
 */
export interface GetNetworkLifStatsOutputArgs {
    enable?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
