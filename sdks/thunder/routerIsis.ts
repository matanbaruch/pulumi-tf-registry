// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterIsis extends pulumi.CustomResource {
    /**
     * Get an existing RouterIsis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterIsisState, opts?: pulumi.CustomResourceOptions): RouterIsis {
        return new RouterIsis(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/routerIsis:RouterIsis';

    /**
     * Returns true if the given object is an instance of RouterIsis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterIsis {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterIsis.__pulumiType;
    }

    public readonly addressFamily!: pulumi.Output<outputs.RouterIsisAddressFamily | undefined>;
    /**
     * Check ISIS neighbor protocol support
     */
    public readonly adjacencyCheck!: pulumi.Output<number | undefined>;
    public readonly areaPasswordCfg!: pulumi.Output<outputs.RouterIsisAreaPasswordCfg | undefined>;
    public readonly authentication!: pulumi.Output<outputs.RouterIsisAuthentication | undefined>;
    /**
     * 'all-interfaces': Enable BFD on all interfaces;
     */
    public readonly bfd!: pulumi.Output<string | undefined>;
    /**
     * 'originate': Distribute a default route;
     */
    public readonly defaultInformation!: pulumi.Output<string | undefined>;
    public readonly distanceLists!: pulumi.Output<outputs.RouterIsisDistanceList[] | undefined>;
    public readonly domainPasswordCfg!: pulumi.Output<outputs.RouterIsisDomainPasswordCfg | undefined>;
    public readonly haStandbyExtraCosts!: pulumi.Output<outputs.RouterIsisHaStandbyExtraCost[] | undefined>;
    /**
     * Ignore LSPs with bad checksums
     */
    public readonly ignoreLspErrors!: pulumi.Output<number | undefined>;
    /**
     * 'level-1': Act as a station router only; 'level-1-2': Act as both a station router and an area router; 'level-2-only':
     * Act as an area router only;
     */
    public readonly isType!: pulumi.Output<string | undefined>;
    public readonly logAdjacencyChangesCfg!: pulumi.Output<outputs.RouterIsisLogAdjacencyChangesCfg | undefined>;
    public readonly lspGenIntervalLists!: pulumi.Output<outputs.RouterIsisLspGenIntervalList[] | undefined>;
    /**
     * Set LSP refresh interval (LSP refresh time in seconds)
     */
    public readonly lspRefreshInterval!: pulumi.Output<number | undefined>;
    /**
     * Set maximum LSP lifetime (Maximum LSP lifetime in seconds)
     */
    public readonly maxLspLifetime!: pulumi.Output<number | undefined>;
    public readonly metricStyleLists!: pulumi.Output<outputs.RouterIsisMetricStyleList[] | undefined>;
    public readonly netLists!: pulumi.Output<outputs.RouterIsisNetList[] | undefined>;
    public readonly passiveInterfaceLists!: pulumi.Output<outputs.RouterIsisPassiveInterfaceList[] | undefined>;
    public readonly protocolLists!: pulumi.Output<outputs.RouterIsisProtocolList[] | undefined>;
    public readonly redistribute!: pulumi.Output<outputs.RouterIsisRedistribute | undefined>;
    public readonly setOverloadBitCfg!: pulumi.Output<outputs.RouterIsisSetOverloadBitCfg | undefined>;
    public readonly spfIntervalExpLists!: pulumi.Output<outputs.RouterIsisSpfIntervalExpList[] | undefined>;
    public readonly summaryAddressLists!: pulumi.Output<outputs.RouterIsisSummaryAddressList[] | undefined>;
    /**
     * ISO routing area tag
     */
    public readonly tag!: pulumi.Output<string>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a RouterIsis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterIsisArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterIsisArgs | RouterIsisState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterIsisState | undefined;
            resourceInputs["addressFamily"] = state ? state.addressFamily : undefined;
            resourceInputs["adjacencyCheck"] = state ? state.adjacencyCheck : undefined;
            resourceInputs["areaPasswordCfg"] = state ? state.areaPasswordCfg : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["bfd"] = state ? state.bfd : undefined;
            resourceInputs["defaultInformation"] = state ? state.defaultInformation : undefined;
            resourceInputs["distanceLists"] = state ? state.distanceLists : undefined;
            resourceInputs["domainPasswordCfg"] = state ? state.domainPasswordCfg : undefined;
            resourceInputs["haStandbyExtraCosts"] = state ? state.haStandbyExtraCosts : undefined;
            resourceInputs["ignoreLspErrors"] = state ? state.ignoreLspErrors : undefined;
            resourceInputs["isType"] = state ? state.isType : undefined;
            resourceInputs["logAdjacencyChangesCfg"] = state ? state.logAdjacencyChangesCfg : undefined;
            resourceInputs["lspGenIntervalLists"] = state ? state.lspGenIntervalLists : undefined;
            resourceInputs["lspRefreshInterval"] = state ? state.lspRefreshInterval : undefined;
            resourceInputs["maxLspLifetime"] = state ? state.maxLspLifetime : undefined;
            resourceInputs["metricStyleLists"] = state ? state.metricStyleLists : undefined;
            resourceInputs["netLists"] = state ? state.netLists : undefined;
            resourceInputs["passiveInterfaceLists"] = state ? state.passiveInterfaceLists : undefined;
            resourceInputs["protocolLists"] = state ? state.protocolLists : undefined;
            resourceInputs["redistribute"] = state ? state.redistribute : undefined;
            resourceInputs["setOverloadBitCfg"] = state ? state.setOverloadBitCfg : undefined;
            resourceInputs["spfIntervalExpLists"] = state ? state.spfIntervalExpLists : undefined;
            resourceInputs["summaryAddressLists"] = state ? state.summaryAddressLists : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as RouterIsisArgs | undefined;
            if ((!args || args.tag === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tag'");
            }
            resourceInputs["addressFamily"] = args ? args.addressFamily : undefined;
            resourceInputs["adjacencyCheck"] = args ? args.adjacencyCheck : undefined;
            resourceInputs["areaPasswordCfg"] = args ? args.areaPasswordCfg : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["bfd"] = args ? args.bfd : undefined;
            resourceInputs["defaultInformation"] = args ? args.defaultInformation : undefined;
            resourceInputs["distanceLists"] = args ? args.distanceLists : undefined;
            resourceInputs["domainPasswordCfg"] = args ? args.domainPasswordCfg : undefined;
            resourceInputs["haStandbyExtraCosts"] = args ? args.haStandbyExtraCosts : undefined;
            resourceInputs["ignoreLspErrors"] = args ? args.ignoreLspErrors : undefined;
            resourceInputs["isType"] = args ? args.isType : undefined;
            resourceInputs["logAdjacencyChangesCfg"] = args ? args.logAdjacencyChangesCfg : undefined;
            resourceInputs["lspGenIntervalLists"] = args ? args.lspGenIntervalLists : undefined;
            resourceInputs["lspRefreshInterval"] = args ? args.lspRefreshInterval : undefined;
            resourceInputs["maxLspLifetime"] = args ? args.maxLspLifetime : undefined;
            resourceInputs["metricStyleLists"] = args ? args.metricStyleLists : undefined;
            resourceInputs["netLists"] = args ? args.netLists : undefined;
            resourceInputs["passiveInterfaceLists"] = args ? args.passiveInterfaceLists : undefined;
            resourceInputs["protocolLists"] = args ? args.protocolLists : undefined;
            resourceInputs["redistribute"] = args ? args.redistribute : undefined;
            resourceInputs["setOverloadBitCfg"] = args ? args.setOverloadBitCfg : undefined;
            resourceInputs["spfIntervalExpLists"] = args ? args.spfIntervalExpLists : undefined;
            resourceInputs["summaryAddressLists"] = args ? args.summaryAddressLists : undefined;
            resourceInputs["tag"] = args ? args.tag : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterIsis.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterIsis resources.
 */
export interface RouterIsisState {
    addressFamily?: pulumi.Input<inputs.RouterIsisAddressFamily>;
    /**
     * Check ISIS neighbor protocol support
     */
    adjacencyCheck?: pulumi.Input<number>;
    areaPasswordCfg?: pulumi.Input<inputs.RouterIsisAreaPasswordCfg>;
    authentication?: pulumi.Input<inputs.RouterIsisAuthentication>;
    /**
     * 'all-interfaces': Enable BFD on all interfaces;
     */
    bfd?: pulumi.Input<string>;
    /**
     * 'originate': Distribute a default route;
     */
    defaultInformation?: pulumi.Input<string>;
    distanceLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisDistanceList>[]>;
    domainPasswordCfg?: pulumi.Input<inputs.RouterIsisDomainPasswordCfg>;
    haStandbyExtraCosts?: pulumi.Input<pulumi.Input<inputs.RouterIsisHaStandbyExtraCost>[]>;
    /**
     * Ignore LSPs with bad checksums
     */
    ignoreLspErrors?: pulumi.Input<number>;
    /**
     * 'level-1': Act as a station router only; 'level-1-2': Act as both a station router and an area router; 'level-2-only':
     * Act as an area router only;
     */
    isType?: pulumi.Input<string>;
    logAdjacencyChangesCfg?: pulumi.Input<inputs.RouterIsisLogAdjacencyChangesCfg>;
    lspGenIntervalLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisLspGenIntervalList>[]>;
    /**
     * Set LSP refresh interval (LSP refresh time in seconds)
     */
    lspRefreshInterval?: pulumi.Input<number>;
    /**
     * Set maximum LSP lifetime (Maximum LSP lifetime in seconds)
     */
    maxLspLifetime?: pulumi.Input<number>;
    metricStyleLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisMetricStyleList>[]>;
    netLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisNetList>[]>;
    passiveInterfaceLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisPassiveInterfaceList>[]>;
    protocolLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisProtocolList>[]>;
    redistribute?: pulumi.Input<inputs.RouterIsisRedistribute>;
    setOverloadBitCfg?: pulumi.Input<inputs.RouterIsisSetOverloadBitCfg>;
    spfIntervalExpLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisSpfIntervalExpList>[]>;
    summaryAddressLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddressList>[]>;
    /**
     * ISO routing area tag
     */
    tag?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterIsis resource.
 */
export interface RouterIsisArgs {
    addressFamily?: pulumi.Input<inputs.RouterIsisAddressFamily>;
    /**
     * Check ISIS neighbor protocol support
     */
    adjacencyCheck?: pulumi.Input<number>;
    areaPasswordCfg?: pulumi.Input<inputs.RouterIsisAreaPasswordCfg>;
    authentication?: pulumi.Input<inputs.RouterIsisAuthentication>;
    /**
     * 'all-interfaces': Enable BFD on all interfaces;
     */
    bfd?: pulumi.Input<string>;
    /**
     * 'originate': Distribute a default route;
     */
    defaultInformation?: pulumi.Input<string>;
    distanceLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisDistanceList>[]>;
    domainPasswordCfg?: pulumi.Input<inputs.RouterIsisDomainPasswordCfg>;
    haStandbyExtraCosts?: pulumi.Input<pulumi.Input<inputs.RouterIsisHaStandbyExtraCost>[]>;
    /**
     * Ignore LSPs with bad checksums
     */
    ignoreLspErrors?: pulumi.Input<number>;
    /**
     * 'level-1': Act as a station router only; 'level-1-2': Act as both a station router and an area router; 'level-2-only':
     * Act as an area router only;
     */
    isType?: pulumi.Input<string>;
    logAdjacencyChangesCfg?: pulumi.Input<inputs.RouterIsisLogAdjacencyChangesCfg>;
    lspGenIntervalLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisLspGenIntervalList>[]>;
    /**
     * Set LSP refresh interval (LSP refresh time in seconds)
     */
    lspRefreshInterval?: pulumi.Input<number>;
    /**
     * Set maximum LSP lifetime (Maximum LSP lifetime in seconds)
     */
    maxLspLifetime?: pulumi.Input<number>;
    metricStyleLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisMetricStyleList>[]>;
    netLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisNetList>[]>;
    passiveInterfaceLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisPassiveInterfaceList>[]>;
    protocolLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisProtocolList>[]>;
    redistribute?: pulumi.Input<inputs.RouterIsisRedistribute>;
    setOverloadBitCfg?: pulumi.Input<inputs.RouterIsisSetOverloadBitCfg>;
    spfIntervalExpLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisSpfIntervalExpList>[]>;
    summaryAddressLists?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddressList>[]>;
    /**
     * ISO routing area tag
     */
    tag: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
