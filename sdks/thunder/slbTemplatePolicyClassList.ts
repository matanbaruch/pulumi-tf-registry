// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbTemplatePolicyClassList extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplatePolicyClassList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplatePolicyClassListState, opts?: pulumi.CustomResourceOptions): SlbTemplatePolicyClassList {
        return new SlbTemplatePolicyClassList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplatePolicyClassList:SlbTemplatePolicyClassList';

    /**
     * Returns true if the given object is an instance of SlbTemplatePolicyClassList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplatePolicyClassList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplatePolicyClassList.__pulumiType;
    }

    /**
     * Use destination IP as client IP address
     */
    public readonly clientIpL3Dest!: pulumi.Output<number | undefined>;
    /**
     * Use extract client IP address from L7 header
     */
    public readonly clientIpL7Header!: pulumi.Output<number | undefined>;
    /**
     * Specify L7 header name
     */
    public readonly headerName!: pulumi.Output<string | undefined>;
    public readonly lidLists!: pulumi.Output<outputs.SlbTemplatePolicyClassListLidList[] | undefined>;
    /**
     * Class list name or geo-location-class-list name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SlbTemplatePolicyClassList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplatePolicyClassListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplatePolicyClassListArgs | SlbTemplatePolicyClassListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplatePolicyClassListState | undefined;
            resourceInputs["clientIpL3Dest"] = state ? state.clientIpL3Dest : undefined;
            resourceInputs["clientIpL7Header"] = state ? state.clientIpL7Header : undefined;
            resourceInputs["headerName"] = state ? state.headerName : undefined;
            resourceInputs["lidLists"] = state ? state.lidLists : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SlbTemplatePolicyClassListArgs | undefined;
            resourceInputs["clientIpL3Dest"] = args ? args.clientIpL3Dest : undefined;
            resourceInputs["clientIpL7Header"] = args ? args.clientIpL7Header : undefined;
            resourceInputs["headerName"] = args ? args.headerName : undefined;
            resourceInputs["lidLists"] = args ? args.lidLists : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplatePolicyClassList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplatePolicyClassList resources.
 */
export interface SlbTemplatePolicyClassListState {
    /**
     * Use destination IP as client IP address
     */
    clientIpL3Dest?: pulumi.Input<number>;
    /**
     * Use extract client IP address from L7 header
     */
    clientIpL7Header?: pulumi.Input<number>;
    /**
     * Specify L7 header name
     */
    headerName?: pulumi.Input<string>;
    lidLists?: pulumi.Input<pulumi.Input<inputs.SlbTemplatePolicyClassListLidList>[]>;
    /**
     * Class list name or geo-location-class-list name
     */
    name?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbTemplatePolicyClassList resource.
 */
export interface SlbTemplatePolicyClassListArgs {
    /**
     * Use destination IP as client IP address
     */
    clientIpL3Dest?: pulumi.Input<number>;
    /**
     * Use extract client IP address from L7 header
     */
    clientIpL7Header?: pulumi.Input<number>;
    /**
     * Specify L7 header name
     */
    headerName?: pulumi.Input<string>;
    lidLists?: pulumi.Input<pulumi.Input<inputs.SlbTemplatePolicyClassListLidList>[]>;
    /**
     * Class list name or geo-location-class-list name
     */
    name?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
