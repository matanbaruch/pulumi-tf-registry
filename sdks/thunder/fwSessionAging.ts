// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FwSessionAging extends pulumi.CustomResource {
    /**
     * Get an existing FwSessionAging resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FwSessionAgingState, opts?: pulumi.CustomResourceOptions): FwSessionAging {
        return new FwSessionAging(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/fwSessionAging:FwSessionAging';

    /**
     * Returns true if the given object is an instance of FwSessionAging.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FwSessionAging {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FwSessionAging.__pulumiType;
    }

    /**
     * Idle Timeout time (default 2 seconds) (Second, default 2)
     */
    public readonly icmpIdleTimeout!: pulumi.Output<number | undefined>;
    /**
     * Idle Timeout time(sec), default is 30 (Second)
     */
    public readonly ipIdleTimeout!: pulumi.Output<number | undefined>;
    /**
     * session-aging Template (session-aging Template name)
     */
    public readonly name!: pulumi.Output<string>;
    public readonly tcp!: pulumi.Output<outputs.FwSessionAgingTcp | undefined>;
    public readonly udp!: pulumi.Output<outputs.FwSessionAgingUdp | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a FwSessionAging resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FwSessionAgingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FwSessionAgingArgs | FwSessionAgingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FwSessionAgingState | undefined;
            resourceInputs["icmpIdleTimeout"] = state ? state.icmpIdleTimeout : undefined;
            resourceInputs["ipIdleTimeout"] = state ? state.ipIdleTimeout : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tcp"] = state ? state.tcp : undefined;
            resourceInputs["udp"] = state ? state.udp : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as FwSessionAgingArgs | undefined;
            resourceInputs["icmpIdleTimeout"] = args ? args.icmpIdleTimeout : undefined;
            resourceInputs["ipIdleTimeout"] = args ? args.ipIdleTimeout : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tcp"] = args ? args.tcp : undefined;
            resourceInputs["udp"] = args ? args.udp : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FwSessionAging.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FwSessionAging resources.
 */
export interface FwSessionAgingState {
    /**
     * Idle Timeout time (default 2 seconds) (Second, default 2)
     */
    icmpIdleTimeout?: pulumi.Input<number>;
    /**
     * Idle Timeout time(sec), default is 30 (Second)
     */
    ipIdleTimeout?: pulumi.Input<number>;
    /**
     * session-aging Template (session-aging Template name)
     */
    name?: pulumi.Input<string>;
    tcp?: pulumi.Input<inputs.FwSessionAgingTcp>;
    udp?: pulumi.Input<inputs.FwSessionAgingUdp>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FwSessionAging resource.
 */
export interface FwSessionAgingArgs {
    /**
     * Idle Timeout time (default 2 seconds) (Second, default 2)
     */
    icmpIdleTimeout?: pulumi.Input<number>;
    /**
     * Idle Timeout time(sec), default is 30 (Second)
     */
    ipIdleTimeout?: pulumi.Input<number>;
    /**
     * session-aging Template (session-aging Template name)
     */
    name?: pulumi.Input<string>;
    tcp?: pulumi.Input<inputs.FwSessionAgingTcp>;
    udp?: pulumi.Input<inputs.FwSessionAgingUdp>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
