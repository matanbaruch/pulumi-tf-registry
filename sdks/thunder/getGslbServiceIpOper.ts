// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGslbServiceIpOper(args: GetGslbServiceIpOperArgs, opts?: pulumi.InvokeOptions): Promise<GetGslbServiceIpOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getGslbServiceIpOper:getGslbServiceIpOper", {
        "id": args.id,
        "nodeName": args.nodeName,
        "oper": args.oper,
        "portLists": args.portLists,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGslbServiceIpOper.
 */
export interface GetGslbServiceIpOperArgs {
    id?: string;
    nodeName: string;
    oper?: inputs.GetGslbServiceIpOperOper;
    portLists?: inputs.GetGslbServiceIpOperPortList[];
}

/**
 * A collection of values returned by getGslbServiceIpOper.
 */
export interface GetGslbServiceIpOperResult {
    readonly id: string;
    readonly nodeName: string;
    readonly oper?: outputs.GetGslbServiceIpOperOper;
    readonly portLists?: outputs.GetGslbServiceIpOperPortList[];
}
export function getGslbServiceIpOperOutput(args: GetGslbServiceIpOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGslbServiceIpOperResult> {
    return pulumi.output(args).apply((a: any) => getGslbServiceIpOper(a, opts))
}

/**
 * A collection of arguments for invoking getGslbServiceIpOper.
 */
export interface GetGslbServiceIpOperOutputArgs {
    id?: pulumi.Input<string>;
    nodeName: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetGslbServiceIpOperOperArgs>;
    portLists?: pulumi.Input<pulumi.Input<inputs.GetGslbServiceIpOperPortListArgs>[]>;
}
