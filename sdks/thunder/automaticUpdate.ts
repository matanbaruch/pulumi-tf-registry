// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AutomaticUpdate extends pulumi.CustomResource {
    /**
     * Get an existing AutomaticUpdate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutomaticUpdateState, opts?: pulumi.CustomResourceOptions): AutomaticUpdate {
        return new AutomaticUpdate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/automaticUpdate:AutomaticUpdate';

    /**
     * Returns true if the given object is an instance of AutomaticUpdate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomaticUpdate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomaticUpdate.__pulumiType;
    }

    public readonly checkNow!: pulumi.Output<outputs.AutomaticUpdateCheckNow | undefined>;
    public readonly checknow!: pulumi.Output<outputs.AutomaticUpdateChecknow | undefined>;
    public readonly configLists!: pulumi.Output<outputs.AutomaticUpdateConfigList[] | undefined>;
    /**
     * Change GLM source url
     */
    public readonly glmSourceUrl!: pulumi.Output<string | undefined>;
    public readonly info!: pulumi.Output<outputs.AutomaticUpdateInfo | undefined>;
    public readonly proxyServer!: pulumi.Output<outputs.AutomaticUpdateProxyServer | undefined>;
    public readonly reset!: pulumi.Output<outputs.AutomaticUpdateReset | undefined>;
    public readonly revert!: pulumi.Output<outputs.AutomaticUpdateRevert | undefined>;
    /**
     * Use management port to connect
     */
    public readonly useMgmtPort!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a AutomaticUpdate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AutomaticUpdateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutomaticUpdateArgs | AutomaticUpdateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutomaticUpdateState | undefined;
            resourceInputs["checkNow"] = state ? state.checkNow : undefined;
            resourceInputs["checknow"] = state ? state.checknow : undefined;
            resourceInputs["configLists"] = state ? state.configLists : undefined;
            resourceInputs["glmSourceUrl"] = state ? state.glmSourceUrl : undefined;
            resourceInputs["info"] = state ? state.info : undefined;
            resourceInputs["proxyServer"] = state ? state.proxyServer : undefined;
            resourceInputs["reset"] = state ? state.reset : undefined;
            resourceInputs["revert"] = state ? state.revert : undefined;
            resourceInputs["useMgmtPort"] = state ? state.useMgmtPort : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AutomaticUpdateArgs | undefined;
            resourceInputs["checkNow"] = args ? args.checkNow : undefined;
            resourceInputs["checknow"] = args ? args.checknow : undefined;
            resourceInputs["configLists"] = args ? args.configLists : undefined;
            resourceInputs["glmSourceUrl"] = args ? args.glmSourceUrl : undefined;
            resourceInputs["info"] = args ? args.info : undefined;
            resourceInputs["proxyServer"] = args ? args.proxyServer : undefined;
            resourceInputs["reset"] = args ? args.reset : undefined;
            resourceInputs["revert"] = args ? args.revert : undefined;
            resourceInputs["useMgmtPort"] = args ? args.useMgmtPort : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutomaticUpdate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutomaticUpdate resources.
 */
export interface AutomaticUpdateState {
    checkNow?: pulumi.Input<inputs.AutomaticUpdateCheckNow>;
    checknow?: pulumi.Input<inputs.AutomaticUpdateChecknow>;
    configLists?: pulumi.Input<pulumi.Input<inputs.AutomaticUpdateConfigList>[]>;
    /**
     * Change GLM source url
     */
    glmSourceUrl?: pulumi.Input<string>;
    info?: pulumi.Input<inputs.AutomaticUpdateInfo>;
    proxyServer?: pulumi.Input<inputs.AutomaticUpdateProxyServer>;
    reset?: pulumi.Input<inputs.AutomaticUpdateReset>;
    revert?: pulumi.Input<inputs.AutomaticUpdateRevert>;
    /**
     * Use management port to connect
     */
    useMgmtPort?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutomaticUpdate resource.
 */
export interface AutomaticUpdateArgs {
    checkNow?: pulumi.Input<inputs.AutomaticUpdateCheckNow>;
    checknow?: pulumi.Input<inputs.AutomaticUpdateChecknow>;
    configLists?: pulumi.Input<pulumi.Input<inputs.AutomaticUpdateConfigList>[]>;
    /**
     * Change GLM source url
     */
    glmSourceUrl?: pulumi.Input<string>;
    info?: pulumi.Input<inputs.AutomaticUpdateInfo>;
    proxyServer?: pulumi.Input<inputs.AutomaticUpdateProxyServer>;
    reset?: pulumi.Input<inputs.AutomaticUpdateReset>;
    revert?: pulumi.Input<inputs.AutomaticUpdateRevert>;
    /**
     * Use management port to connect
     */
    useMgmtPort?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
