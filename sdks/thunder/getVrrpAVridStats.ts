// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVrrpAVridStats(args: GetVrrpAVridStatsArgs, opts?: pulumi.InvokeOptions): Promise<GetVrrpAVridStatsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getVrrpAVridStats:getVrrpAVridStats", {
        "id": args.id,
        "stats": args.stats,
        "vridVal": args.vridVal,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVrrpAVridStats.
 */
export interface GetVrrpAVridStatsArgs {
    id?: string;
    stats?: inputs.GetVrrpAVridStatsStats;
    vridVal: number;
}

/**
 * A collection of values returned by getVrrpAVridStats.
 */
export interface GetVrrpAVridStatsResult {
    readonly id: string;
    readonly stats?: outputs.GetVrrpAVridStatsStats;
    readonly vridVal: number;
}
export function getVrrpAVridStatsOutput(args: GetVrrpAVridStatsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVrrpAVridStatsResult> {
    return pulumi.output(args).apply((a: any) => getVrrpAVridStats(a, opts))
}

/**
 * A collection of arguments for invoking getVrrpAVridStats.
 */
export interface GetVrrpAVridStatsOutputArgs {
    id?: pulumi.Input<string>;
    stats?: pulumi.Input<inputs.GetVrrpAVridStatsStatsArgs>;
    vridVal: pulumi.Input<number>;
}
