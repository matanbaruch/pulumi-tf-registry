// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DdosZoneTemplateIcmpV4Type extends pulumi.CustomResource {
    /**
     * Get an existing DdosZoneTemplateIcmpV4Type resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosZoneTemplateIcmpV4TypeState, opts?: pulumi.CustomResourceOptions): DdosZoneTemplateIcmpV4Type {
        return new DdosZoneTemplateIcmpV4Type(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ddosZoneTemplateIcmpV4Type:DdosZoneTemplateIcmpV4Type';

    /**
     * Returns true if the given object is an instance of DdosZoneTemplateIcmpV4Type.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosZoneTemplateIcmpV4Type {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosZoneTemplateIcmpV4Type.__pulumiType;
    }

    /**
     * Specify the rate with other code
     */
    public readonly dstCodeOtherRate!: pulumi.Output<number | undefined>;
    /**
     * 'drop': Drop packets for rate exceed (Default); 'blacklist-src': Blacklist-src for rate exceed; 'ignore': Do nothing for
     * rate exceed;
     */
    public readonly dstCodeOtherRateAction!: pulumi.Output<string | undefined>;
    /**
     * Configure action-list to take for rate exceed
     */
    public readonly dstCodeOtherRateActionListName!: pulumi.Output<string | undefined>;
    /**
     * IcmpTmplName
     */
    public readonly icmpTmplName!: pulumi.Output<string>;
    /**
     * 'drop': Reject this ICMP type; 'blacklist-src': Blacklist-src this ICMP type; 'ignore': Ignore this ICMP type;
     */
    public readonly icmpTypeAction!: pulumi.Output<string | undefined>;
    /**
     * Configure action-list to take for this ICMP type
     */
    public readonly icmpTypeActionListName!: pulumi.Output<string | undefined>;
    /**
     * Specify the rate with other code
     */
    public readonly srcCodeOtherRate!: pulumi.Output<number | undefined>;
    /**
     * 'drop': Drop packets for rate exceed (Default); 'blacklist-src': Blacklist-src for rate exceed; 'ignore': Do nothing for
     * rate exceed;
     */
    public readonly srcCodeOtherRateAction!: pulumi.Output<string | undefined>;
    /**
     * Configure action-list to take for rate exceed
     */
    public readonly srcCodeOtherRateActionListName!: pulumi.Output<string | undefined>;
    /**
     * Specify ICMP type number
     */
    public readonly typeNumber!: pulumi.Output<number>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    public readonly v4DstCodeCfgs!: pulumi.Output<outputs.DdosZoneTemplateIcmpV4TypeV4DstCodeCfg[] | undefined>;
    public readonly v4DstRateCfg!: pulumi.Output<outputs.DdosZoneTemplateIcmpV4TypeV4DstRateCfg | undefined>;
    public readonly v4SrcCodeCfgs!: pulumi.Output<outputs.DdosZoneTemplateIcmpV4TypeV4SrcCodeCfg[] | undefined>;
    public readonly v4SrcRateCfg!: pulumi.Output<outputs.DdosZoneTemplateIcmpV4TypeV4SrcRateCfg | undefined>;

    /**
     * Create a DdosZoneTemplateIcmpV4Type resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosZoneTemplateIcmpV4TypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosZoneTemplateIcmpV4TypeArgs | DdosZoneTemplateIcmpV4TypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosZoneTemplateIcmpV4TypeState | undefined;
            resourceInputs["dstCodeOtherRate"] = state ? state.dstCodeOtherRate : undefined;
            resourceInputs["dstCodeOtherRateAction"] = state ? state.dstCodeOtherRateAction : undefined;
            resourceInputs["dstCodeOtherRateActionListName"] = state ? state.dstCodeOtherRateActionListName : undefined;
            resourceInputs["icmpTmplName"] = state ? state.icmpTmplName : undefined;
            resourceInputs["icmpTypeAction"] = state ? state.icmpTypeAction : undefined;
            resourceInputs["icmpTypeActionListName"] = state ? state.icmpTypeActionListName : undefined;
            resourceInputs["srcCodeOtherRate"] = state ? state.srcCodeOtherRate : undefined;
            resourceInputs["srcCodeOtherRateAction"] = state ? state.srcCodeOtherRateAction : undefined;
            resourceInputs["srcCodeOtherRateActionListName"] = state ? state.srcCodeOtherRateActionListName : undefined;
            resourceInputs["typeNumber"] = state ? state.typeNumber : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["v4DstCodeCfgs"] = state ? state.v4DstCodeCfgs : undefined;
            resourceInputs["v4DstRateCfg"] = state ? state.v4DstRateCfg : undefined;
            resourceInputs["v4SrcCodeCfgs"] = state ? state.v4SrcCodeCfgs : undefined;
            resourceInputs["v4SrcRateCfg"] = state ? state.v4SrcRateCfg : undefined;
        } else {
            const args = argsOrState as DdosZoneTemplateIcmpV4TypeArgs | undefined;
            if ((!args || args.icmpTmplName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'icmpTmplName'");
            }
            if ((!args || args.typeNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'typeNumber'");
            }
            resourceInputs["dstCodeOtherRate"] = args ? args.dstCodeOtherRate : undefined;
            resourceInputs["dstCodeOtherRateAction"] = args ? args.dstCodeOtherRateAction : undefined;
            resourceInputs["dstCodeOtherRateActionListName"] = args ? args.dstCodeOtherRateActionListName : undefined;
            resourceInputs["icmpTmplName"] = args ? args.icmpTmplName : undefined;
            resourceInputs["icmpTypeAction"] = args ? args.icmpTypeAction : undefined;
            resourceInputs["icmpTypeActionListName"] = args ? args.icmpTypeActionListName : undefined;
            resourceInputs["srcCodeOtherRate"] = args ? args.srcCodeOtherRate : undefined;
            resourceInputs["srcCodeOtherRateAction"] = args ? args.srcCodeOtherRateAction : undefined;
            resourceInputs["srcCodeOtherRateActionListName"] = args ? args.srcCodeOtherRateActionListName : undefined;
            resourceInputs["typeNumber"] = args ? args.typeNumber : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["v4DstCodeCfgs"] = args ? args.v4DstCodeCfgs : undefined;
            resourceInputs["v4DstRateCfg"] = args ? args.v4DstRateCfg : undefined;
            resourceInputs["v4SrcCodeCfgs"] = args ? args.v4SrcCodeCfgs : undefined;
            resourceInputs["v4SrcRateCfg"] = args ? args.v4SrcRateCfg : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosZoneTemplateIcmpV4Type.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DdosZoneTemplateIcmpV4Type resources.
 */
export interface DdosZoneTemplateIcmpV4TypeState {
    /**
     * Specify the rate with other code
     */
    dstCodeOtherRate?: pulumi.Input<number>;
    /**
     * 'drop': Drop packets for rate exceed (Default); 'blacklist-src': Blacklist-src for rate exceed; 'ignore': Do nothing for
     * rate exceed;
     */
    dstCodeOtherRateAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take for rate exceed
     */
    dstCodeOtherRateActionListName?: pulumi.Input<string>;
    /**
     * IcmpTmplName
     */
    icmpTmplName?: pulumi.Input<string>;
    /**
     * 'drop': Reject this ICMP type; 'blacklist-src': Blacklist-src this ICMP type; 'ignore': Ignore this ICMP type;
     */
    icmpTypeAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take for this ICMP type
     */
    icmpTypeActionListName?: pulumi.Input<string>;
    /**
     * Specify the rate with other code
     */
    srcCodeOtherRate?: pulumi.Input<number>;
    /**
     * 'drop': Drop packets for rate exceed (Default); 'blacklist-src': Blacklist-src for rate exceed; 'ignore': Do nothing for
     * rate exceed;
     */
    srcCodeOtherRateAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take for rate exceed
     */
    srcCodeOtherRateActionListName?: pulumi.Input<string>;
    /**
     * Specify ICMP type number
     */
    typeNumber?: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    v4DstCodeCfgs?: pulumi.Input<pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4DstCodeCfg>[]>;
    v4DstRateCfg?: pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4DstRateCfg>;
    v4SrcCodeCfgs?: pulumi.Input<pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4SrcCodeCfg>[]>;
    v4SrcRateCfg?: pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4SrcRateCfg>;
}

/**
 * The set of arguments for constructing a DdosZoneTemplateIcmpV4Type resource.
 */
export interface DdosZoneTemplateIcmpV4TypeArgs {
    /**
     * Specify the rate with other code
     */
    dstCodeOtherRate?: pulumi.Input<number>;
    /**
     * 'drop': Drop packets for rate exceed (Default); 'blacklist-src': Blacklist-src for rate exceed; 'ignore': Do nothing for
     * rate exceed;
     */
    dstCodeOtherRateAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take for rate exceed
     */
    dstCodeOtherRateActionListName?: pulumi.Input<string>;
    /**
     * IcmpTmplName
     */
    icmpTmplName: pulumi.Input<string>;
    /**
     * 'drop': Reject this ICMP type; 'blacklist-src': Blacklist-src this ICMP type; 'ignore': Ignore this ICMP type;
     */
    icmpTypeAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take for this ICMP type
     */
    icmpTypeActionListName?: pulumi.Input<string>;
    /**
     * Specify the rate with other code
     */
    srcCodeOtherRate?: pulumi.Input<number>;
    /**
     * 'drop': Drop packets for rate exceed (Default); 'blacklist-src': Blacklist-src for rate exceed; 'ignore': Do nothing for
     * rate exceed;
     */
    srcCodeOtherRateAction?: pulumi.Input<string>;
    /**
     * Configure action-list to take for rate exceed
     */
    srcCodeOtherRateActionListName?: pulumi.Input<string>;
    /**
     * Specify ICMP type number
     */
    typeNumber: pulumi.Input<number>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    v4DstCodeCfgs?: pulumi.Input<pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4DstCodeCfg>[]>;
    v4DstRateCfg?: pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4DstRateCfg>;
    v4SrcCodeCfgs?: pulumi.Input<pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4SrcCodeCfg>[]>;
    v4SrcRateCfg?: pulumi.Input<inputs.DdosZoneTemplateIcmpV4TypeV4SrcRateCfg>;
}
