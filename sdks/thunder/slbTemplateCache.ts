// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbTemplateCache extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplateCache resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplateCacheState, opts?: pulumi.CustomResourceOptions): SlbTemplateCache {
        return new SlbTemplateCache(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplateCache:SlbTemplateCache';

    /**
     * Returns true if the given object is an instance of SlbTemplateCache.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplateCache {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplateCache.__pulumiType;
    }

    /**
     * Accept reload requests via cache-control directives in HTTP headers
     */
    public readonly acceptReloadReq!: pulumi.Output<number | undefined>;
    /**
     * Specify duration in seconds cached content valid, default is 3600 seconds (seconds that the cached content is valid
     * (default 3600 seconds))
     */
    public readonly age!: pulumi.Output<number | undefined>;
    /**
     * Specify default policy to be to not cache
     */
    public readonly defaultPolicyNocache!: pulumi.Output<number | undefined>;
    /**
     * Disable insertion of age header in response served from RAM cache
     */
    public readonly disableInsertAge!: pulumi.Output<number | undefined>;
    /**
     * Disable insertion of via header in response served from RAM cache
     */
    public readonly disableInsertVia!: pulumi.Output<number | undefined>;
    public readonly localUriPolicies!: pulumi.Output<outputs.SlbTemplateCacheLocalUriPolicy[] | undefined>;
    /**
     * Specify logging template (Logging Config name)
     */
    public readonly logging!: pulumi.Output<string | undefined>;
    /**
     * Specify maximum cache size in megabytes, default is 80MB (RAM cache size in megabytes (default 80MB))
     */
    public readonly maxCacheSize!: pulumi.Output<number | undefined>;
    /**
     * Maximum size (bytes) of response that can be cached - default 81920 (80KB)
     */
    public readonly maxContentSize!: pulumi.Output<number | undefined>;
    /**
     * Minimum size (bytes) of response that can be cached - default 512
     */
    public readonly minContentSize!: pulumi.Output<number | undefined>;
    /**
     * Specify cache template name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    public readonly packetCaptureTemplate!: pulumi.Output<string | undefined>;
    /**
     * Remove cookies in response and cache
     */
    public readonly removeCookies!: pulumi.Output<number | undefined>;
    /**
     * 'LFU': LFU;
     */
    public readonly replacementPolicy!: pulumi.Output<string | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.SlbTemplateCacheSamplingEnable[] | undefined>;
    public readonly uriPolicies!: pulumi.Output<outputs.SlbTemplateCacheUriPolicy[] | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Verify request using host before sending response from RAM cache
     */
    public readonly verifyHost!: pulumi.Output<number | undefined>;

    /**
     * Create a SlbTemplateCache resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplateCacheArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplateCacheArgs | SlbTemplateCacheState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplateCacheState | undefined;
            resourceInputs["acceptReloadReq"] = state ? state.acceptReloadReq : undefined;
            resourceInputs["age"] = state ? state.age : undefined;
            resourceInputs["defaultPolicyNocache"] = state ? state.defaultPolicyNocache : undefined;
            resourceInputs["disableInsertAge"] = state ? state.disableInsertAge : undefined;
            resourceInputs["disableInsertVia"] = state ? state.disableInsertVia : undefined;
            resourceInputs["localUriPolicies"] = state ? state.localUriPolicies : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["maxCacheSize"] = state ? state.maxCacheSize : undefined;
            resourceInputs["maxContentSize"] = state ? state.maxContentSize : undefined;
            resourceInputs["minContentSize"] = state ? state.minContentSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packetCaptureTemplate"] = state ? state.packetCaptureTemplate : undefined;
            resourceInputs["removeCookies"] = state ? state.removeCookies : undefined;
            resourceInputs["replacementPolicy"] = state ? state.replacementPolicy : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["uriPolicies"] = state ? state.uriPolicies : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["verifyHost"] = state ? state.verifyHost : undefined;
        } else {
            const args = argsOrState as SlbTemplateCacheArgs | undefined;
            resourceInputs["acceptReloadReq"] = args ? args.acceptReloadReq : undefined;
            resourceInputs["age"] = args ? args.age : undefined;
            resourceInputs["defaultPolicyNocache"] = args ? args.defaultPolicyNocache : undefined;
            resourceInputs["disableInsertAge"] = args ? args.disableInsertAge : undefined;
            resourceInputs["disableInsertVia"] = args ? args.disableInsertVia : undefined;
            resourceInputs["localUriPolicies"] = args ? args.localUriPolicies : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["maxCacheSize"] = args ? args.maxCacheSize : undefined;
            resourceInputs["maxContentSize"] = args ? args.maxContentSize : undefined;
            resourceInputs["minContentSize"] = args ? args.minContentSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packetCaptureTemplate"] = args ? args.packetCaptureTemplate : undefined;
            resourceInputs["removeCookies"] = args ? args.removeCookies : undefined;
            resourceInputs["replacementPolicy"] = args ? args.replacementPolicy : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["uriPolicies"] = args ? args.uriPolicies : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["verifyHost"] = args ? args.verifyHost : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplateCache.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplateCache resources.
 */
export interface SlbTemplateCacheState {
    /**
     * Accept reload requests via cache-control directives in HTTP headers
     */
    acceptReloadReq?: pulumi.Input<number>;
    /**
     * Specify duration in seconds cached content valid, default is 3600 seconds (seconds that the cached content is valid
     * (default 3600 seconds))
     */
    age?: pulumi.Input<number>;
    /**
     * Specify default policy to be to not cache
     */
    defaultPolicyNocache?: pulumi.Input<number>;
    /**
     * Disable insertion of age header in response served from RAM cache
     */
    disableInsertAge?: pulumi.Input<number>;
    /**
     * Disable insertion of via header in response served from RAM cache
     */
    disableInsertVia?: pulumi.Input<number>;
    localUriPolicies?: pulumi.Input<pulumi.Input<inputs.SlbTemplateCacheLocalUriPolicy>[]>;
    /**
     * Specify logging template (Logging Config name)
     */
    logging?: pulumi.Input<string>;
    /**
     * Specify maximum cache size in megabytes, default is 80MB (RAM cache size in megabytes (default 80MB))
     */
    maxCacheSize?: pulumi.Input<number>;
    /**
     * Maximum size (bytes) of response that can be cached - default 81920 (80KB)
     */
    maxContentSize?: pulumi.Input<number>;
    /**
     * Minimum size (bytes) of response that can be cached - default 512
     */
    minContentSize?: pulumi.Input<number>;
    /**
     * Specify cache template name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    /**
     * Remove cookies in response and cache
     */
    removeCookies?: pulumi.Input<number>;
    /**
     * 'LFU': LFU;
     */
    replacementPolicy?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.SlbTemplateCacheSamplingEnable>[]>;
    uriPolicies?: pulumi.Input<pulumi.Input<inputs.SlbTemplateCacheUriPolicy>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Verify request using host before sending response from RAM cache
     */
    verifyHost?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SlbTemplateCache resource.
 */
export interface SlbTemplateCacheArgs {
    /**
     * Accept reload requests via cache-control directives in HTTP headers
     */
    acceptReloadReq?: pulumi.Input<number>;
    /**
     * Specify duration in seconds cached content valid, default is 3600 seconds (seconds that the cached content is valid
     * (default 3600 seconds))
     */
    age?: pulumi.Input<number>;
    /**
     * Specify default policy to be to not cache
     */
    defaultPolicyNocache?: pulumi.Input<number>;
    /**
     * Disable insertion of age header in response served from RAM cache
     */
    disableInsertAge?: pulumi.Input<number>;
    /**
     * Disable insertion of via header in response served from RAM cache
     */
    disableInsertVia?: pulumi.Input<number>;
    localUriPolicies?: pulumi.Input<pulumi.Input<inputs.SlbTemplateCacheLocalUriPolicy>[]>;
    /**
     * Specify logging template (Logging Config name)
     */
    logging?: pulumi.Input<string>;
    /**
     * Specify maximum cache size in megabytes, default is 80MB (RAM cache size in megabytes (default 80MB))
     */
    maxCacheSize?: pulumi.Input<number>;
    /**
     * Maximum size (bytes) of response that can be cached - default 81920 (80KB)
     */
    maxContentSize?: pulumi.Input<number>;
    /**
     * Minimum size (bytes) of response that can be cached - default 512
     */
    minContentSize?: pulumi.Input<number>;
    /**
     * Specify cache template name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    /**
     * Remove cookies in response and cache
     */
    removeCookies?: pulumi.Input<number>;
    /**
     * 'LFU': LFU;
     */
    replacementPolicy?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.SlbTemplateCacheSamplingEnable>[]>;
    uriPolicies?: pulumi.Input<pulumi.Input<inputs.SlbTemplateCacheUriPolicy>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Verify request using host before sending response from RAM cache
     */
    verifyHost?: pulumi.Input<number>;
}
