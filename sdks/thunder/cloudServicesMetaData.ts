// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudServicesMetaData extends pulumi.CustomResource {
    /**
     * Get an existing CloudServicesMetaData resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudServicesMetaDataState, opts?: pulumi.CustomResourceOptions): CloudServicesMetaData {
        return new CloudServicesMetaData(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cloudServicesMetaData:CloudServicesMetaData';

    /**
     * Returns true if the given object is an instance of CloudServicesMetaData.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudServicesMetaData {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudServicesMetaData.__pulumiType;
    }

    /**
     * 'enable': enable; 'disable': disable;
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * Prevents admin password from being changed if in YAML config
     */
    public readonly preventAdminPasswd!: pulumi.Output<number | undefined>;
    /**
     * Prevents admin ssh-key from being added if in YAML config
     */
    public readonly preventAdminSshKey!: pulumi.Output<number | undefined>;
    /**
     * prevents use of meta-data to complete user_data configuration
     */
    public readonly preventAutofill!: pulumi.Output<number | undefined>;
    /**
     * Prevents a10_blob from loading in YAML config
     */
    public readonly preventBlob!: pulumi.Output<number | undefined>;
    /**
     * Prevents cloud-service configuration in YAML config
     */
    public readonly preventCloudService!: pulumi.Output<number | undefined>;
    /**
     * Prevents a10_license configuration in YAML config
     */
    public readonly preventLicense!: pulumi.Output<number | undefined>;
    /**
     * Prevents user from being added command is in user-data
     */
    public readonly preventUserOps!: pulumi.Output<number | undefined>;
    /**
     * Prevents a10_license configuration in YAML config
     */
    public readonly preventWebservice!: pulumi.Output<number | undefined>;
    /**
     * 'openstack': OpenStack user-data services;
     */
    public readonly provider1!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a CloudServicesMetaData resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudServicesMetaDataArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudServicesMetaDataArgs | CloudServicesMetaDataState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudServicesMetaDataState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["preventAdminPasswd"] = state ? state.preventAdminPasswd : undefined;
            resourceInputs["preventAdminSshKey"] = state ? state.preventAdminSshKey : undefined;
            resourceInputs["preventAutofill"] = state ? state.preventAutofill : undefined;
            resourceInputs["preventBlob"] = state ? state.preventBlob : undefined;
            resourceInputs["preventCloudService"] = state ? state.preventCloudService : undefined;
            resourceInputs["preventLicense"] = state ? state.preventLicense : undefined;
            resourceInputs["preventUserOps"] = state ? state.preventUserOps : undefined;
            resourceInputs["preventWebservice"] = state ? state.preventWebservice : undefined;
            resourceInputs["provider1"] = state ? state.provider1 : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as CloudServicesMetaDataArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["preventAdminPasswd"] = args ? args.preventAdminPasswd : undefined;
            resourceInputs["preventAdminSshKey"] = args ? args.preventAdminSshKey : undefined;
            resourceInputs["preventAutofill"] = args ? args.preventAutofill : undefined;
            resourceInputs["preventBlob"] = args ? args.preventBlob : undefined;
            resourceInputs["preventCloudService"] = args ? args.preventCloudService : undefined;
            resourceInputs["preventLicense"] = args ? args.preventLicense : undefined;
            resourceInputs["preventUserOps"] = args ? args.preventUserOps : undefined;
            resourceInputs["preventWebservice"] = args ? args.preventWebservice : undefined;
            resourceInputs["provider1"] = args ? args.provider1 : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudServicesMetaData.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudServicesMetaData resources.
 */
export interface CloudServicesMetaDataState {
    /**
     * 'enable': enable; 'disable': disable;
     */
    action?: pulumi.Input<string>;
    /**
     * Prevents admin password from being changed if in YAML config
     */
    preventAdminPasswd?: pulumi.Input<number>;
    /**
     * Prevents admin ssh-key from being added if in YAML config
     */
    preventAdminSshKey?: pulumi.Input<number>;
    /**
     * prevents use of meta-data to complete user_data configuration
     */
    preventAutofill?: pulumi.Input<number>;
    /**
     * Prevents a10_blob from loading in YAML config
     */
    preventBlob?: pulumi.Input<number>;
    /**
     * Prevents cloud-service configuration in YAML config
     */
    preventCloudService?: pulumi.Input<number>;
    /**
     * Prevents a10_license configuration in YAML config
     */
    preventLicense?: pulumi.Input<number>;
    /**
     * Prevents user from being added command is in user-data
     */
    preventUserOps?: pulumi.Input<number>;
    /**
     * Prevents a10_license configuration in YAML config
     */
    preventWebservice?: pulumi.Input<number>;
    /**
     * 'openstack': OpenStack user-data services;
     */
    provider1?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudServicesMetaData resource.
 */
export interface CloudServicesMetaDataArgs {
    /**
     * 'enable': enable; 'disable': disable;
     */
    action?: pulumi.Input<string>;
    /**
     * Prevents admin password from being changed if in YAML config
     */
    preventAdminPasswd?: pulumi.Input<number>;
    /**
     * Prevents admin ssh-key from being added if in YAML config
     */
    preventAdminSshKey?: pulumi.Input<number>;
    /**
     * prevents use of meta-data to complete user_data configuration
     */
    preventAutofill?: pulumi.Input<number>;
    /**
     * Prevents a10_blob from loading in YAML config
     */
    preventBlob?: pulumi.Input<number>;
    /**
     * Prevents cloud-service configuration in YAML config
     */
    preventCloudService?: pulumi.Input<number>;
    /**
     * Prevents a10_license configuration in YAML config
     */
    preventLicense?: pulumi.Input<number>;
    /**
     * Prevents user from being added command is in user-data
     */
    preventUserOps?: pulumi.Input<number>;
    /**
     * Prevents a10_license configuration in YAML config
     */
    preventWebservice?: pulumi.Input<number>;
    /**
     * 'openstack': OpenStack user-data services;
     */
    provider1?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
