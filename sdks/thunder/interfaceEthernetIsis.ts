// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InterfaceEthernetIsis extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceEthernetIsis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceEthernetIsisState, opts?: pulumi.CustomResourceOptions): InterfaceEthernetIsis {
        return new InterfaceEthernetIsis(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/interfaceEthernetIsis:InterfaceEthernetIsis';

    /**
     * Returns true if the given object is an instance of InterfaceEthernetIsis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceEthernetIsis {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceEthernetIsis.__pulumiType;
    }

    public readonly authentication!: pulumi.Output<outputs.InterfaceEthernetIsisAuthentication | undefined>;
    public readonly bfdCfg!: pulumi.Output<outputs.InterfaceEthernetIsisBfdCfg | undefined>;
    /**
     * 'level-1': Level-1 only adjacencies are formed; 'level-1-2': Level-1-2 adjacencies are formed; 'level-2-only': Level-2
     * only adjacencies are formed;
     */
    public readonly circuitType!: pulumi.Output<string | undefined>;
    public readonly csnpIntervalLists!: pulumi.Output<outputs.InterfaceEthernetIsisCsnpIntervalList[] | undefined>;
    public readonly helloIntervalLists!: pulumi.Output<outputs.InterfaceEthernetIsisHelloIntervalList[] | undefined>;
    public readonly helloIntervalMinimalLists!: pulumi.Output<outputs.InterfaceEthernetIsisHelloIntervalMinimalList[] | undefined>;
    public readonly helloMultiplierLists!: pulumi.Output<outputs.InterfaceEthernetIsisHelloMultiplierList[] | undefined>;
    /**
     * Ifnum
     */
    public readonly ifnum!: pulumi.Output<string>;
    /**
     * Set LSP transmission interval (LSP transmission interval (milliseconds))
     */
    public readonly lspInterval!: pulumi.Output<number | undefined>;
    public readonly meshGroup!: pulumi.Output<outputs.InterfaceEthernetIsisMeshGroup | undefined>;
    public readonly metricLists!: pulumi.Output<outputs.InterfaceEthernetIsisMetricList[] | undefined>;
    /**
     * 'broadcast': Specify IS-IS broadcast multi-access network; 'point-to-point': Specify IS-IS point-to-point network;
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * Add padding to IS-IS hello packets
     */
    public readonly padding!: pulumi.Output<number | undefined>;
    public readonly passwordLists!: pulumi.Output<outputs.InterfaceEthernetIsisPasswordList[] | undefined>;
    public readonly priorityLists!: pulumi.Output<outputs.InterfaceEthernetIsisPriorityList[] | undefined>;
    /**
     * Set per-LSP retransmission interval (Interval between retransmissions of the same LSP (seconds))
     */
    public readonly retransmitInterval!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    public readonly wideMetricLists!: pulumi.Output<outputs.InterfaceEthernetIsisWideMetricList[] | undefined>;

    /**
     * Create a InterfaceEthernetIsis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceEthernetIsisArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceEthernetIsisArgs | InterfaceEthernetIsisState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceEthernetIsisState | undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["bfdCfg"] = state ? state.bfdCfg : undefined;
            resourceInputs["circuitType"] = state ? state.circuitType : undefined;
            resourceInputs["csnpIntervalLists"] = state ? state.csnpIntervalLists : undefined;
            resourceInputs["helloIntervalLists"] = state ? state.helloIntervalLists : undefined;
            resourceInputs["helloIntervalMinimalLists"] = state ? state.helloIntervalMinimalLists : undefined;
            resourceInputs["helloMultiplierLists"] = state ? state.helloMultiplierLists : undefined;
            resourceInputs["ifnum"] = state ? state.ifnum : undefined;
            resourceInputs["lspInterval"] = state ? state.lspInterval : undefined;
            resourceInputs["meshGroup"] = state ? state.meshGroup : undefined;
            resourceInputs["metricLists"] = state ? state.metricLists : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["padding"] = state ? state.padding : undefined;
            resourceInputs["passwordLists"] = state ? state.passwordLists : undefined;
            resourceInputs["priorityLists"] = state ? state.priorityLists : undefined;
            resourceInputs["retransmitInterval"] = state ? state.retransmitInterval : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["wideMetricLists"] = state ? state.wideMetricLists : undefined;
        } else {
            const args = argsOrState as InterfaceEthernetIsisArgs | undefined;
            if ((!args || args.ifnum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ifnum'");
            }
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["bfdCfg"] = args ? args.bfdCfg : undefined;
            resourceInputs["circuitType"] = args ? args.circuitType : undefined;
            resourceInputs["csnpIntervalLists"] = args ? args.csnpIntervalLists : undefined;
            resourceInputs["helloIntervalLists"] = args ? args.helloIntervalLists : undefined;
            resourceInputs["helloIntervalMinimalLists"] = args ? args.helloIntervalMinimalLists : undefined;
            resourceInputs["helloMultiplierLists"] = args ? args.helloMultiplierLists : undefined;
            resourceInputs["ifnum"] = args ? args.ifnum : undefined;
            resourceInputs["lspInterval"] = args ? args.lspInterval : undefined;
            resourceInputs["meshGroup"] = args ? args.meshGroup : undefined;
            resourceInputs["metricLists"] = args ? args.metricLists : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["padding"] = args ? args.padding : undefined;
            resourceInputs["passwordLists"] = args ? args.passwordLists : undefined;
            resourceInputs["priorityLists"] = args ? args.priorityLists : undefined;
            resourceInputs["retransmitInterval"] = args ? args.retransmitInterval : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["wideMetricLists"] = args ? args.wideMetricLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceEthernetIsis.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceEthernetIsis resources.
 */
export interface InterfaceEthernetIsisState {
    authentication?: pulumi.Input<inputs.InterfaceEthernetIsisAuthentication>;
    bfdCfg?: pulumi.Input<inputs.InterfaceEthernetIsisBfdCfg>;
    /**
     * 'level-1': Level-1 only adjacencies are formed; 'level-1-2': Level-1-2 adjacencies are formed; 'level-2-only': Level-2
     * only adjacencies are formed;
     */
    circuitType?: pulumi.Input<string>;
    csnpIntervalLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisCsnpIntervalList>[]>;
    helloIntervalLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisHelloIntervalList>[]>;
    helloIntervalMinimalLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisHelloIntervalMinimalList>[]>;
    helloMultiplierLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisHelloMultiplierList>[]>;
    /**
     * Ifnum
     */
    ifnum?: pulumi.Input<string>;
    /**
     * Set LSP transmission interval (LSP transmission interval (milliseconds))
     */
    lspInterval?: pulumi.Input<number>;
    meshGroup?: pulumi.Input<inputs.InterfaceEthernetIsisMeshGroup>;
    metricLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisMetricList>[]>;
    /**
     * 'broadcast': Specify IS-IS broadcast multi-access network; 'point-to-point': Specify IS-IS point-to-point network;
     */
    network?: pulumi.Input<string>;
    /**
     * Add padding to IS-IS hello packets
     */
    padding?: pulumi.Input<number>;
    passwordLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisPasswordList>[]>;
    priorityLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisPriorityList>[]>;
    /**
     * Set per-LSP retransmission interval (Interval between retransmissions of the same LSP (seconds))
     */
    retransmitInterval?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    wideMetricLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisWideMetricList>[]>;
}

/**
 * The set of arguments for constructing a InterfaceEthernetIsis resource.
 */
export interface InterfaceEthernetIsisArgs {
    authentication?: pulumi.Input<inputs.InterfaceEthernetIsisAuthentication>;
    bfdCfg?: pulumi.Input<inputs.InterfaceEthernetIsisBfdCfg>;
    /**
     * 'level-1': Level-1 only adjacencies are formed; 'level-1-2': Level-1-2 adjacencies are formed; 'level-2-only': Level-2
     * only adjacencies are formed;
     */
    circuitType?: pulumi.Input<string>;
    csnpIntervalLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisCsnpIntervalList>[]>;
    helloIntervalLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisHelloIntervalList>[]>;
    helloIntervalMinimalLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisHelloIntervalMinimalList>[]>;
    helloMultiplierLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisHelloMultiplierList>[]>;
    /**
     * Ifnum
     */
    ifnum: pulumi.Input<string>;
    /**
     * Set LSP transmission interval (LSP transmission interval (milliseconds))
     */
    lspInterval?: pulumi.Input<number>;
    meshGroup?: pulumi.Input<inputs.InterfaceEthernetIsisMeshGroup>;
    metricLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisMetricList>[]>;
    /**
     * 'broadcast': Specify IS-IS broadcast multi-access network; 'point-to-point': Specify IS-IS point-to-point network;
     */
    network?: pulumi.Input<string>;
    /**
     * Add padding to IS-IS hello packets
     */
    padding?: pulumi.Input<number>;
    passwordLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisPasswordList>[]>;
    priorityLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisPriorityList>[]>;
    /**
     * Set per-LSP retransmission interval (Interval between retransmissions of the same LSP (seconds))
     */
    retransmitInterval?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    wideMetricLists?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIsisWideMetricList>[]>;
}
