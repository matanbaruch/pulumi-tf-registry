// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate extends pulumi.CustomResource {
    /**
     * Get an existing VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateState, opts?: pulumi.CustomResourceOptions): VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate {
        return new VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/visibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate:VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate';

    /**
     * Returns true if the given object is an instance of VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate.__pulumiType;
    }

    /**
     * Enable automatic packet-capture for Total Bad IP csum Drop
     */
    public readonly badIpChksumDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Bad IP Flags Drop
     */
    public readonly badIpFlagsDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Bad IP frag off Drop
     */
    public readonly badIpFragOffset!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Bad IP hdr len Drop
     */
    public readonly badIpHdrLen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Bad IP PL len Drop
     */
    public readonly badIpPayloadLen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Bad IP TTL Drop
     */
    public readonly badIpTtlDrop!: pulumi.Output<number | undefined>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    public readonly duration!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Empty frag Drop
     */
    public readonly emptyFragDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total FCS Drop
     */
    public readonly fcsDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total HRX Drop
     */
    public readonly hrxDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total ICMP POD Drop
     */
    public readonly icmpPodDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total IP frag Drop
     */
    public readonly ipv4Frag!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total IPv4 opt Drop
     */
    public readonly ipv4OptDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total LAND Attack Drop
     */
    public readonly landDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Micro frag Drop
     */
    public readonly micFragDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total MRX Drop
     */
    public readonly mrxDrop!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable automatic packet-capture for Total No IP Payload Drop
     */
    public readonly noIpPayloadDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Oversize IP PL Drop
     */
    public readonly oversizeIpPayload!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Runt IP hdr Drop
     */
    public readonly runtIpHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Runt TCPUDP hdr Drop
     */
    public readonly runtTcpudpHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Size Drop
     */
    public readonly sizDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP bad csum Drop
     */
    public readonly tcpBadChksum!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP Bad IP Len Drop
     */
    public readonly tcpBadIpLen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP bad urg off Drop
     */
    public readonly tcpBadUrgOffet!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP SYN&FIN Drop
     */
    public readonly tcpFinSin!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP frag header Drop
     */
    public readonly tcpFragHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP null flags Drop
     */
    public readonly tcpNullFlags!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP null scan Drop
     */
    public readonly tcpNullScan!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP short hdr Drop
     */
    public readonly tcpShortHdr!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP SYN frag Drop
     */
    public readonly tcpSynFrag!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP XMAS FLAGS Drop
     */
    public readonly tcpXmasFlags!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total TCP XMAS scan Drop
     */
    public readonly tcpXmasScan!: pulumi.Output<number | undefined>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    public readonly thresholdExceededBy!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total Tun mismatch Drop
     */
    public readonly tunMismatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total UDP bad csum Drop
     */
    public readonly udpBadChksum!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total UDP bad leng Drop
     */
    public readonly udpBadIpLen!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total UDP KB frag Drop
     */
    public readonly udpKbFrags!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total UDP port LB Drop
     */
    public readonly udpPortLb!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Total UDP short hdr Drop
     */
    public readonly udpShortHdr!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateArgs | VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateState | undefined;
            resourceInputs["badIpChksumDrop"] = state ? state.badIpChksumDrop : undefined;
            resourceInputs["badIpFlagsDrop"] = state ? state.badIpFlagsDrop : undefined;
            resourceInputs["badIpFragOffset"] = state ? state.badIpFragOffset : undefined;
            resourceInputs["badIpHdrLen"] = state ? state.badIpHdrLen : undefined;
            resourceInputs["badIpPayloadLen"] = state ? state.badIpPayloadLen : undefined;
            resourceInputs["badIpTtlDrop"] = state ? state.badIpTtlDrop : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["emptyFragDrop"] = state ? state.emptyFragDrop : undefined;
            resourceInputs["fcsDrop"] = state ? state.fcsDrop : undefined;
            resourceInputs["hrxDrop"] = state ? state.hrxDrop : undefined;
            resourceInputs["icmpPodDrop"] = state ? state.icmpPodDrop : undefined;
            resourceInputs["ipv4Frag"] = state ? state.ipv4Frag : undefined;
            resourceInputs["ipv4OptDrop"] = state ? state.ipv4OptDrop : undefined;
            resourceInputs["landDrop"] = state ? state.landDrop : undefined;
            resourceInputs["micFragDrop"] = state ? state.micFragDrop : undefined;
            resourceInputs["mrxDrop"] = state ? state.mrxDrop : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noIpPayloadDrop"] = state ? state.noIpPayloadDrop : undefined;
            resourceInputs["oversizeIpPayload"] = state ? state.oversizeIpPayload : undefined;
            resourceInputs["runtIpHdr"] = state ? state.runtIpHdr : undefined;
            resourceInputs["runtTcpudpHdr"] = state ? state.runtTcpudpHdr : undefined;
            resourceInputs["sizDrop"] = state ? state.sizDrop : undefined;
            resourceInputs["tcpBadChksum"] = state ? state.tcpBadChksum : undefined;
            resourceInputs["tcpBadIpLen"] = state ? state.tcpBadIpLen : undefined;
            resourceInputs["tcpBadUrgOffet"] = state ? state.tcpBadUrgOffet : undefined;
            resourceInputs["tcpFinSin"] = state ? state.tcpFinSin : undefined;
            resourceInputs["tcpFragHdr"] = state ? state.tcpFragHdr : undefined;
            resourceInputs["tcpNullFlags"] = state ? state.tcpNullFlags : undefined;
            resourceInputs["tcpNullScan"] = state ? state.tcpNullScan : undefined;
            resourceInputs["tcpShortHdr"] = state ? state.tcpShortHdr : undefined;
            resourceInputs["tcpSynFrag"] = state ? state.tcpSynFrag : undefined;
            resourceInputs["tcpXmasFlags"] = state ? state.tcpXmasFlags : undefined;
            resourceInputs["tcpXmasScan"] = state ? state.tcpXmasScan : undefined;
            resourceInputs["thresholdExceededBy"] = state ? state.thresholdExceededBy : undefined;
            resourceInputs["tunMismatch"] = state ? state.tunMismatch : undefined;
            resourceInputs["udpBadChksum"] = state ? state.udpBadChksum : undefined;
            resourceInputs["udpBadIpLen"] = state ? state.udpBadIpLen : undefined;
            resourceInputs["udpKbFrags"] = state ? state.udpKbFrags : undefined;
            resourceInputs["udpPortLb"] = state ? state.udpPortLb : undefined;
            resourceInputs["udpShortHdr"] = state ? state.udpShortHdr : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateArgs | undefined;
            resourceInputs["badIpChksumDrop"] = args ? args.badIpChksumDrop : undefined;
            resourceInputs["badIpFlagsDrop"] = args ? args.badIpFlagsDrop : undefined;
            resourceInputs["badIpFragOffset"] = args ? args.badIpFragOffset : undefined;
            resourceInputs["badIpHdrLen"] = args ? args.badIpHdrLen : undefined;
            resourceInputs["badIpPayloadLen"] = args ? args.badIpPayloadLen : undefined;
            resourceInputs["badIpTtlDrop"] = args ? args.badIpTtlDrop : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["emptyFragDrop"] = args ? args.emptyFragDrop : undefined;
            resourceInputs["fcsDrop"] = args ? args.fcsDrop : undefined;
            resourceInputs["hrxDrop"] = args ? args.hrxDrop : undefined;
            resourceInputs["icmpPodDrop"] = args ? args.icmpPodDrop : undefined;
            resourceInputs["ipv4Frag"] = args ? args.ipv4Frag : undefined;
            resourceInputs["ipv4OptDrop"] = args ? args.ipv4OptDrop : undefined;
            resourceInputs["landDrop"] = args ? args.landDrop : undefined;
            resourceInputs["micFragDrop"] = args ? args.micFragDrop : undefined;
            resourceInputs["mrxDrop"] = args ? args.mrxDrop : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noIpPayloadDrop"] = args ? args.noIpPayloadDrop : undefined;
            resourceInputs["oversizeIpPayload"] = args ? args.oversizeIpPayload : undefined;
            resourceInputs["runtIpHdr"] = args ? args.runtIpHdr : undefined;
            resourceInputs["runtTcpudpHdr"] = args ? args.runtTcpudpHdr : undefined;
            resourceInputs["sizDrop"] = args ? args.sizDrop : undefined;
            resourceInputs["tcpBadChksum"] = args ? args.tcpBadChksum : undefined;
            resourceInputs["tcpBadIpLen"] = args ? args.tcpBadIpLen : undefined;
            resourceInputs["tcpBadUrgOffet"] = args ? args.tcpBadUrgOffet : undefined;
            resourceInputs["tcpFinSin"] = args ? args.tcpFinSin : undefined;
            resourceInputs["tcpFragHdr"] = args ? args.tcpFragHdr : undefined;
            resourceInputs["tcpNullFlags"] = args ? args.tcpNullFlags : undefined;
            resourceInputs["tcpNullScan"] = args ? args.tcpNullScan : undefined;
            resourceInputs["tcpShortHdr"] = args ? args.tcpShortHdr : undefined;
            resourceInputs["tcpSynFrag"] = args ? args.tcpSynFrag : undefined;
            resourceInputs["tcpXmasFlags"] = args ? args.tcpXmasFlags : undefined;
            resourceInputs["tcpXmasScan"] = args ? args.tcpXmasScan : undefined;
            resourceInputs["thresholdExceededBy"] = args ? args.thresholdExceededBy : undefined;
            resourceInputs["tunMismatch"] = args ? args.tunMismatch : undefined;
            resourceInputs["udpBadChksum"] = args ? args.udpBadChksum : undefined;
            resourceInputs["udpBadIpLen"] = args ? args.udpBadIpLen : undefined;
            resourceInputs["udpKbFrags"] = args ? args.udpKbFrags : undefined;
            resourceInputs["udpPortLb"] = args ? args.udpPortLb : undefined;
            resourceInputs["udpShortHdr"] = args ? args.udpShortHdr : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate resources.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateState {
    /**
     * Enable automatic packet-capture for Total Bad IP csum Drop
     */
    badIpChksumDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP Flags Drop
     */
    badIpFlagsDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP frag off Drop
     */
    badIpFragOffset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP hdr len Drop
     */
    badIpHdrLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP PL len Drop
     */
    badIpPayloadLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP TTL Drop
     */
    badIpTtlDrop?: pulumi.Input<number>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    duration?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Empty frag Drop
     */
    emptyFragDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total FCS Drop
     */
    fcsDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total HRX Drop
     */
    hrxDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total ICMP POD Drop
     */
    icmpPodDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total IP frag Drop
     */
    ipv4Frag?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total IPv4 opt Drop
     */
    ipv4OptDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total LAND Attack Drop
     */
    landDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Micro frag Drop
     */
    micFragDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total MRX Drop
     */
    mrxDrop?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for Total No IP Payload Drop
     */
    noIpPayloadDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Oversize IP PL Drop
     */
    oversizeIpPayload?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Runt IP hdr Drop
     */
    runtIpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Runt TCPUDP hdr Drop
     */
    runtTcpudpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Size Drop
     */
    sizDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP bad csum Drop
     */
    tcpBadChksum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP Bad IP Len Drop
     */
    tcpBadIpLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP bad urg off Drop
     */
    tcpBadUrgOffet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP SYN&FIN Drop
     */
    tcpFinSin?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP frag header Drop
     */
    tcpFragHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP null flags Drop
     */
    tcpNullFlags?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP null scan Drop
     */
    tcpNullScan?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP short hdr Drop
     */
    tcpShortHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP SYN frag Drop
     */
    tcpSynFrag?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP XMAS FLAGS Drop
     */
    tcpXmasFlags?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP XMAS scan Drop
     */
    tcpXmasScan?: pulumi.Input<number>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    thresholdExceededBy?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Tun mismatch Drop
     */
    tunMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP bad csum Drop
     */
    udpBadChksum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP bad leng Drop
     */
    udpBadIpLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP KB frag Drop
     */
    udpKbFrags?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP port LB Drop
     */
    udpPortLb?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP short hdr Drop
     */
    udpShortHdr?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRate resource.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSystemFpgaDropTriggerStatsRateArgs {
    /**
     * Enable automatic packet-capture for Total Bad IP csum Drop
     */
    badIpChksumDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP Flags Drop
     */
    badIpFlagsDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP frag off Drop
     */
    badIpFragOffset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP hdr len Drop
     */
    badIpHdrLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP PL len Drop
     */
    badIpPayloadLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Bad IP TTL Drop
     */
    badIpTtlDrop?: pulumi.Input<number>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    duration?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Empty frag Drop
     */
    emptyFragDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total FCS Drop
     */
    fcsDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total HRX Drop
     */
    hrxDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total ICMP POD Drop
     */
    icmpPodDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total IP frag Drop
     */
    ipv4Frag?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total IPv4 opt Drop
     */
    ipv4OptDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total LAND Attack Drop
     */
    landDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Micro frag Drop
     */
    micFragDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total MRX Drop
     */
    mrxDrop?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for Total No IP Payload Drop
     */
    noIpPayloadDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Oversize IP PL Drop
     */
    oversizeIpPayload?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Runt IP hdr Drop
     */
    runtIpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Runt TCPUDP hdr Drop
     */
    runtTcpudpHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Size Drop
     */
    sizDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP bad csum Drop
     */
    tcpBadChksum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP Bad IP Len Drop
     */
    tcpBadIpLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP bad urg off Drop
     */
    tcpBadUrgOffet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP SYN&FIN Drop
     */
    tcpFinSin?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP frag header Drop
     */
    tcpFragHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP null flags Drop
     */
    tcpNullFlags?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP null scan Drop
     */
    tcpNullScan?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP short hdr Drop
     */
    tcpShortHdr?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP SYN frag Drop
     */
    tcpSynFrag?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP XMAS FLAGS Drop
     */
    tcpXmasFlags?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total TCP XMAS scan Drop
     */
    tcpXmasScan?: pulumi.Input<number>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    thresholdExceededBy?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total Tun mismatch Drop
     */
    tunMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP bad csum Drop
     */
    udpBadChksum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP bad leng Drop
     */
    udpBadIpLen?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP KB frag Drop
     */
    udpKbFrags?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP port LB Drop
     */
    udpPortLb?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Total UDP short hdr Drop
     */
    udpShortHdr?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
