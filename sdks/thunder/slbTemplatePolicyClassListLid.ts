// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbTemplatePolicyClassListLid extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplatePolicyClassListLid resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplatePolicyClassListLidState, opts?: pulumi.CustomResourceOptions): SlbTemplatePolicyClassListLid {
        return new SlbTemplatePolicyClassListLid(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplatePolicyClassListLid:SlbTemplatePolicyClassListLid';

    /**
     * Returns true if the given object is an instance of SlbTemplatePolicyClassListLid.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplatePolicyClassListLid {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplatePolicyClassListLid.__pulumiType;
    }

    /**
     * 'forward': Forward the traffic even it exceeds limit; 'reset': Reset the connection when it exceeds limit;
     */
    public readonly actionValue!: pulumi.Output<string | undefined>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    public readonly bwPer!: pulumi.Output<number | undefined>;
    /**
     * Specify bandwidth rate limit (Bandwidth rate limit in bytes)
     */
    public readonly bwRateLimit!: pulumi.Output<number | undefined>;
    /**
     * Connection limit
     */
    public readonly connLimit!: pulumi.Output<number | undefined>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    public readonly connPer!: pulumi.Output<number | undefined>;
    /**
     * Specify connection rate limit
     */
    public readonly connRateLimit!: pulumi.Output<number | undefined>;
    /**
     * Set action when match the lid
     */
    public readonly directAction!: pulumi.Output<number | undefined>;
    /**
     * Specify logging interval in minute (default is 3)
     */
    public readonly directActionInterval!: pulumi.Output<number | undefined>;
    /**
     * 'drop': drop the packet; 'reset': Send reset back;
     */
    public readonly directActionValue!: pulumi.Output<string | undefined>;
    /**
     * Only log unsuccessful connections
     */
    public readonly directFail!: pulumi.Output<number | undefined>;
    /**
     * Configure PBSLB logging
     */
    public readonly directLoggingDrpRst!: pulumi.Output<number | undefined>;
    /**
     * Specify logging interval in minutes(default is 3)
     */
    public readonly directPbslbInterval!: pulumi.Output<number | undefined>;
    /**
     * Configure PBSLB logging
     */
    public readonly directPbslbLogging!: pulumi.Output<number | undefined>;
    /**
     * Specify a service group (Specify the service group name)
     */
    public readonly directServiceGroup!: pulumi.Output<string | undefined>;
    public readonly dns64!: pulumi.Output<outputs.SlbTemplatePolicyClassListLidDns64 | undefined>;
    /**
     * Specify log interval in minutes, by default system will log every over limit instance
     */
    public readonly interval!: pulumi.Output<number | undefined>;
    /**
     * Specify a limit ID
     */
    public readonly lidnum!: pulumi.Output<number>;
    /**
     * Don't accept any new connection for certain time (Lockout duration in minutes)
     */
    public readonly lockout!: pulumi.Output<number | undefined>;
    /**
     * Log a message
     */
    public readonly log!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Set action when exceeds limit
     */
    public readonly overLimitAction!: pulumi.Output<number | undefined>;
    /**
     * Request limit (Specify request limit)
     */
    public readonly requestLimit!: pulumi.Output<number | undefined>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    public readonly requestPer!: pulumi.Output<number | undefined>;
    /**
     * Request rate limit (Specify request rate limit)
     */
    public readonly requestRateLimit!: pulumi.Output<number | undefined>;
    public readonly responseCodeRateLimits!: pulumi.Output<outputs.SlbTemplatePolicyClassListLidResponseCodeRateLimit[] | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SlbTemplatePolicyClassListLid resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SlbTemplatePolicyClassListLidArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplatePolicyClassListLidArgs | SlbTemplatePolicyClassListLidState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplatePolicyClassListLidState | undefined;
            resourceInputs["actionValue"] = state ? state.actionValue : undefined;
            resourceInputs["bwPer"] = state ? state.bwPer : undefined;
            resourceInputs["bwRateLimit"] = state ? state.bwRateLimit : undefined;
            resourceInputs["connLimit"] = state ? state.connLimit : undefined;
            resourceInputs["connPer"] = state ? state.connPer : undefined;
            resourceInputs["connRateLimit"] = state ? state.connRateLimit : undefined;
            resourceInputs["directAction"] = state ? state.directAction : undefined;
            resourceInputs["directActionInterval"] = state ? state.directActionInterval : undefined;
            resourceInputs["directActionValue"] = state ? state.directActionValue : undefined;
            resourceInputs["directFail"] = state ? state.directFail : undefined;
            resourceInputs["directLoggingDrpRst"] = state ? state.directLoggingDrpRst : undefined;
            resourceInputs["directPbslbInterval"] = state ? state.directPbslbInterval : undefined;
            resourceInputs["directPbslbLogging"] = state ? state.directPbslbLogging : undefined;
            resourceInputs["directServiceGroup"] = state ? state.directServiceGroup : undefined;
            resourceInputs["dns64"] = state ? state.dns64 : undefined;
            resourceInputs["interval"] = state ? state.interval : undefined;
            resourceInputs["lidnum"] = state ? state.lidnum : undefined;
            resourceInputs["lockout"] = state ? state.lockout : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overLimitAction"] = state ? state.overLimitAction : undefined;
            resourceInputs["requestLimit"] = state ? state.requestLimit : undefined;
            resourceInputs["requestPer"] = state ? state.requestPer : undefined;
            resourceInputs["requestRateLimit"] = state ? state.requestRateLimit : undefined;
            resourceInputs["responseCodeRateLimits"] = state ? state.responseCodeRateLimits : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SlbTemplatePolicyClassListLidArgs | undefined;
            if ((!args || args.lidnum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lidnum'");
            }
            resourceInputs["actionValue"] = args ? args.actionValue : undefined;
            resourceInputs["bwPer"] = args ? args.bwPer : undefined;
            resourceInputs["bwRateLimit"] = args ? args.bwRateLimit : undefined;
            resourceInputs["connLimit"] = args ? args.connLimit : undefined;
            resourceInputs["connPer"] = args ? args.connPer : undefined;
            resourceInputs["connRateLimit"] = args ? args.connRateLimit : undefined;
            resourceInputs["directAction"] = args ? args.directAction : undefined;
            resourceInputs["directActionInterval"] = args ? args.directActionInterval : undefined;
            resourceInputs["directActionValue"] = args ? args.directActionValue : undefined;
            resourceInputs["directFail"] = args ? args.directFail : undefined;
            resourceInputs["directLoggingDrpRst"] = args ? args.directLoggingDrpRst : undefined;
            resourceInputs["directPbslbInterval"] = args ? args.directPbslbInterval : undefined;
            resourceInputs["directPbslbLogging"] = args ? args.directPbslbLogging : undefined;
            resourceInputs["directServiceGroup"] = args ? args.directServiceGroup : undefined;
            resourceInputs["dns64"] = args ? args.dns64 : undefined;
            resourceInputs["interval"] = args ? args.interval : undefined;
            resourceInputs["lidnum"] = args ? args.lidnum : undefined;
            resourceInputs["lockout"] = args ? args.lockout : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overLimitAction"] = args ? args.overLimitAction : undefined;
            resourceInputs["requestLimit"] = args ? args.requestLimit : undefined;
            resourceInputs["requestPer"] = args ? args.requestPer : undefined;
            resourceInputs["requestRateLimit"] = args ? args.requestRateLimit : undefined;
            resourceInputs["responseCodeRateLimits"] = args ? args.responseCodeRateLimits : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplatePolicyClassListLid.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplatePolicyClassListLid resources.
 */
export interface SlbTemplatePolicyClassListLidState {
    /**
     * 'forward': Forward the traffic even it exceeds limit; 'reset': Reset the connection when it exceeds limit;
     */
    actionValue?: pulumi.Input<string>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    bwPer?: pulumi.Input<number>;
    /**
     * Specify bandwidth rate limit (Bandwidth rate limit in bytes)
     */
    bwRateLimit?: pulumi.Input<number>;
    /**
     * Connection limit
     */
    connLimit?: pulumi.Input<number>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    connPer?: pulumi.Input<number>;
    /**
     * Specify connection rate limit
     */
    connRateLimit?: pulumi.Input<number>;
    /**
     * Set action when match the lid
     */
    directAction?: pulumi.Input<number>;
    /**
     * Specify logging interval in minute (default is 3)
     */
    directActionInterval?: pulumi.Input<number>;
    /**
     * 'drop': drop the packet; 'reset': Send reset back;
     */
    directActionValue?: pulumi.Input<string>;
    /**
     * Only log unsuccessful connections
     */
    directFail?: pulumi.Input<number>;
    /**
     * Configure PBSLB logging
     */
    directLoggingDrpRst?: pulumi.Input<number>;
    /**
     * Specify logging interval in minutes(default is 3)
     */
    directPbslbInterval?: pulumi.Input<number>;
    /**
     * Configure PBSLB logging
     */
    directPbslbLogging?: pulumi.Input<number>;
    /**
     * Specify a service group (Specify the service group name)
     */
    directServiceGroup?: pulumi.Input<string>;
    dns64?: pulumi.Input<inputs.SlbTemplatePolicyClassListLidDns64>;
    /**
     * Specify log interval in minutes, by default system will log every over limit instance
     */
    interval?: pulumi.Input<number>;
    /**
     * Specify a limit ID
     */
    lidnum?: pulumi.Input<number>;
    /**
     * Don't accept any new connection for certain time (Lockout duration in minutes)
     */
    lockout?: pulumi.Input<number>;
    /**
     * Log a message
     */
    log?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Set action when exceeds limit
     */
    overLimitAction?: pulumi.Input<number>;
    /**
     * Request limit (Specify request limit)
     */
    requestLimit?: pulumi.Input<number>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    requestPer?: pulumi.Input<number>;
    /**
     * Request rate limit (Specify request rate limit)
     */
    requestRateLimit?: pulumi.Input<number>;
    responseCodeRateLimits?: pulumi.Input<pulumi.Input<inputs.SlbTemplatePolicyClassListLidResponseCodeRateLimit>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbTemplatePolicyClassListLid resource.
 */
export interface SlbTemplatePolicyClassListLidArgs {
    /**
     * 'forward': Forward the traffic even it exceeds limit; 'reset': Reset the connection when it exceeds limit;
     */
    actionValue?: pulumi.Input<string>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    bwPer?: pulumi.Input<number>;
    /**
     * Specify bandwidth rate limit (Bandwidth rate limit in bytes)
     */
    bwRateLimit?: pulumi.Input<number>;
    /**
     * Connection limit
     */
    connLimit?: pulumi.Input<number>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    connPer?: pulumi.Input<number>;
    /**
     * Specify connection rate limit
     */
    connRateLimit?: pulumi.Input<number>;
    /**
     * Set action when match the lid
     */
    directAction?: pulumi.Input<number>;
    /**
     * Specify logging interval in minute (default is 3)
     */
    directActionInterval?: pulumi.Input<number>;
    /**
     * 'drop': drop the packet; 'reset': Send reset back;
     */
    directActionValue?: pulumi.Input<string>;
    /**
     * Only log unsuccessful connections
     */
    directFail?: pulumi.Input<number>;
    /**
     * Configure PBSLB logging
     */
    directLoggingDrpRst?: pulumi.Input<number>;
    /**
     * Specify logging interval in minutes(default is 3)
     */
    directPbslbInterval?: pulumi.Input<number>;
    /**
     * Configure PBSLB logging
     */
    directPbslbLogging?: pulumi.Input<number>;
    /**
     * Specify a service group (Specify the service group name)
     */
    directServiceGroup?: pulumi.Input<string>;
    dns64?: pulumi.Input<inputs.SlbTemplatePolicyClassListLidDns64>;
    /**
     * Specify log interval in minutes, by default system will log every over limit instance
     */
    interval?: pulumi.Input<number>;
    /**
     * Specify a limit ID
     */
    lidnum: pulumi.Input<number>;
    /**
     * Don't accept any new connection for certain time (Lockout duration in minutes)
     */
    lockout?: pulumi.Input<number>;
    /**
     * Log a message
     */
    log?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Set action when exceeds limit
     */
    overLimitAction?: pulumi.Input<number>;
    /**
     * Request limit (Specify request limit)
     */
    requestLimit?: pulumi.Input<number>;
    /**
     * Per (Specify interval in number of 100ms)
     */
    requestPer?: pulumi.Input<number>;
    /**
     * Request rate limit (Specify request rate limit)
     */
    requestRateLimit?: pulumi.Input<number>;
    responseCodeRateLimits?: pulumi.Input<pulumi.Input<inputs.SlbTemplatePolicyClassListLidResponseCodeRateLimit>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
