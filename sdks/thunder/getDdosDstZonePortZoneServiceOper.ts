// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDdosDstZonePortZoneServiceOper(args: GetDdosDstZonePortZoneServiceOperArgs, opts?: pulumi.InvokeOptions): Promise<GetDdosDstZonePortZoneServiceOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getDdosDstZonePortZoneServiceOper:getDdosDstZonePortZoneServiceOper", {
        "id": args.id,
        "ipFilteringPolicyOper": args.ipFilteringPolicyOper,
        "ips": args.ips,
        "oper": args.oper,
        "patternRecognition": args.patternRecognition,
        "patternRecognitionPuDetails": args.patternRecognitionPuDetails,
        "portInd": args.portInd,
        "portNum": args.portNum,
        "progressionTracking": args.progressionTracking,
        "protocol": args.protocol,
        "topkDestinations": args.topkDestinations,
        "topkSources": args.topkSources,
        "zoneName": args.zoneName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDdosDstZonePortZoneServiceOper.
 */
export interface GetDdosDstZonePortZoneServiceOperArgs {
    id?: string;
    ipFilteringPolicyOper?: inputs.GetDdosDstZonePortZoneServiceOperIpFilteringPolicyOper;
    ips?: inputs.GetDdosDstZonePortZoneServiceOperIps;
    oper?: inputs.GetDdosDstZonePortZoneServiceOperOper;
    patternRecognition?: inputs.GetDdosDstZonePortZoneServiceOperPatternRecognition;
    patternRecognitionPuDetails?: inputs.GetDdosDstZonePortZoneServiceOperPatternRecognitionPuDetails;
    portInd?: inputs.GetDdosDstZonePortZoneServiceOperPortInd;
    portNum: number;
    progressionTracking?: inputs.GetDdosDstZonePortZoneServiceOperProgressionTracking;
    protocol: string;
    topkDestinations?: inputs.GetDdosDstZonePortZoneServiceOperTopkDestinations;
    topkSources?: inputs.GetDdosDstZonePortZoneServiceOperTopkSources;
    zoneName: string;
}

/**
 * A collection of values returned by getDdosDstZonePortZoneServiceOper.
 */
export interface GetDdosDstZonePortZoneServiceOperResult {
    readonly id: string;
    readonly ipFilteringPolicyOper?: outputs.GetDdosDstZonePortZoneServiceOperIpFilteringPolicyOper;
    readonly ips?: outputs.GetDdosDstZonePortZoneServiceOperIps;
    readonly oper?: outputs.GetDdosDstZonePortZoneServiceOperOper;
    readonly patternRecognition?: outputs.GetDdosDstZonePortZoneServiceOperPatternRecognition;
    readonly patternRecognitionPuDetails?: outputs.GetDdosDstZonePortZoneServiceOperPatternRecognitionPuDetails;
    readonly portInd?: outputs.GetDdosDstZonePortZoneServiceOperPortInd;
    readonly portNum: number;
    readonly progressionTracking?: outputs.GetDdosDstZonePortZoneServiceOperProgressionTracking;
    readonly protocol: string;
    readonly topkDestinations?: outputs.GetDdosDstZonePortZoneServiceOperTopkDestinations;
    readonly topkSources?: outputs.GetDdosDstZonePortZoneServiceOperTopkSources;
    readonly zoneName: string;
}
export function getDdosDstZonePortZoneServiceOperOutput(args: GetDdosDstZonePortZoneServiceOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDdosDstZonePortZoneServiceOperResult> {
    return pulumi.output(args).apply((a: any) => getDdosDstZonePortZoneServiceOper(a, opts))
}

/**
 * A collection of arguments for invoking getDdosDstZonePortZoneServiceOper.
 */
export interface GetDdosDstZonePortZoneServiceOperOutputArgs {
    id?: pulumi.Input<string>;
    ipFilteringPolicyOper?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperIpFilteringPolicyOperArgs>;
    ips?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperIpsArgs>;
    oper?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperOperArgs>;
    patternRecognition?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperPatternRecognitionArgs>;
    patternRecognitionPuDetails?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperPatternRecognitionPuDetailsArgs>;
    portInd?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperPortIndArgs>;
    portNum: pulumi.Input<number>;
    progressionTracking?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperProgressionTrackingArgs>;
    protocol: pulumi.Input<string>;
    topkDestinations?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperTopkDestinationsArgs>;
    topkSources?: pulumi.Input<inputs.GetDdosDstZonePortZoneServiceOperTopkSourcesArgs>;
    zoneName: pulumi.Input<string>;
}
