// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Cgnv6TemplatePcp extends pulumi.CustomResource {
    /**
     * Get an existing Cgnv6TemplatePcp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Cgnv6TemplatePcpState, opts?: pulumi.CustomResourceOptions): Cgnv6TemplatePcp {
        return new Cgnv6TemplatePcp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/cgnv6TemplatePcp:Cgnv6TemplatePcp';

    /**
     * Returns true if the given object is an instance of Cgnv6TemplatePcp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cgnv6TemplatePcp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cgnv6TemplatePcp.__pulumiType;
    }

    /**
     * Allow third party request coming from LAN (default is disabled)
     */
    public readonly allowThirdPartyFromLan!: pulumi.Output<number | undefined>;
    /**
     * Allow third party request coming from WAN (default is disabled)
     */
    public readonly allowThirdPartyFromWan!: pulumi.Output<number | undefined>;
    /**
     * PCP ANNOUNCE Opcode (default is enabled)
     */
    public readonly announce!: pulumi.Output<number | undefined>;
    /**
     * To validate NONCE value in PCP request (default: disabled)
     */
    public readonly checkClientNonce!: pulumi.Output<number | undefined>;
    /**
     * To disable processing of FILTER options in MAP request
     */
    public readonly disableMapFilter!: pulumi.Output<number | undefined>;
    /**
     * PCP MAP Opcode (default is enabled)
     */
    public readonly map!: pulumi.Output<number | undefined>;
    /**
     * To set maximum lifetime of PCP mappings (default 1440 minutes)
     */
    public readonly maximum!: pulumi.Output<number | undefined>;
    /**
     * To set minimum lifetime of PCP mappings (default 2 minutes)
     */
    public readonly minimum!: pulumi.Output<number | undefined>;
    /**
     * PCP Template name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * PCP server listening port (default 5351) (PCP UDP destination port)
     */
    public readonly pcpServerPort!: pulumi.Output<number | undefined>;
    /**
     * PCP PEER Opcode (default is enabled)
     */
    public readonly peer!: pulumi.Output<number | undefined>;
    /**
     * Specify source IP address for IPv4 ANNOUNCE message
     */
    public readonly sourceIp!: pulumi.Output<string | undefined>;
    /**
     * Specify source IPv6 address for IPv6 ANNOUNCE message
     */
    public readonly sourceIpv6!: pulumi.Output<string | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Cgnv6TemplatePcp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Cgnv6TemplatePcpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Cgnv6TemplatePcpArgs | Cgnv6TemplatePcpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Cgnv6TemplatePcpState | undefined;
            resourceInputs["allowThirdPartyFromLan"] = state ? state.allowThirdPartyFromLan : undefined;
            resourceInputs["allowThirdPartyFromWan"] = state ? state.allowThirdPartyFromWan : undefined;
            resourceInputs["announce"] = state ? state.announce : undefined;
            resourceInputs["checkClientNonce"] = state ? state.checkClientNonce : undefined;
            resourceInputs["disableMapFilter"] = state ? state.disableMapFilter : undefined;
            resourceInputs["map"] = state ? state.map : undefined;
            resourceInputs["maximum"] = state ? state.maximum : undefined;
            resourceInputs["minimum"] = state ? state.minimum : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pcpServerPort"] = state ? state.pcpServerPort : undefined;
            resourceInputs["peer"] = state ? state.peer : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["sourceIpv6"] = state ? state.sourceIpv6 : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as Cgnv6TemplatePcpArgs | undefined;
            resourceInputs["allowThirdPartyFromLan"] = args ? args.allowThirdPartyFromLan : undefined;
            resourceInputs["allowThirdPartyFromWan"] = args ? args.allowThirdPartyFromWan : undefined;
            resourceInputs["announce"] = args ? args.announce : undefined;
            resourceInputs["checkClientNonce"] = args ? args.checkClientNonce : undefined;
            resourceInputs["disableMapFilter"] = args ? args.disableMapFilter : undefined;
            resourceInputs["map"] = args ? args.map : undefined;
            resourceInputs["maximum"] = args ? args.maximum : undefined;
            resourceInputs["minimum"] = args ? args.minimum : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pcpServerPort"] = args ? args.pcpServerPort : undefined;
            resourceInputs["peer"] = args ? args.peer : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["sourceIpv6"] = args ? args.sourceIpv6 : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cgnv6TemplatePcp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cgnv6TemplatePcp resources.
 */
export interface Cgnv6TemplatePcpState {
    /**
     * Allow third party request coming from LAN (default is disabled)
     */
    allowThirdPartyFromLan?: pulumi.Input<number>;
    /**
     * Allow third party request coming from WAN (default is disabled)
     */
    allowThirdPartyFromWan?: pulumi.Input<number>;
    /**
     * PCP ANNOUNCE Opcode (default is enabled)
     */
    announce?: pulumi.Input<number>;
    /**
     * To validate NONCE value in PCP request (default: disabled)
     */
    checkClientNonce?: pulumi.Input<number>;
    /**
     * To disable processing of FILTER options in MAP request
     */
    disableMapFilter?: pulumi.Input<number>;
    /**
     * PCP MAP Opcode (default is enabled)
     */
    map?: pulumi.Input<number>;
    /**
     * To set maximum lifetime of PCP mappings (default 1440 minutes)
     */
    maximum?: pulumi.Input<number>;
    /**
     * To set minimum lifetime of PCP mappings (default 2 minutes)
     */
    minimum?: pulumi.Input<number>;
    /**
     * PCP Template name
     */
    name?: pulumi.Input<string>;
    /**
     * PCP server listening port (default 5351) (PCP UDP destination port)
     */
    pcpServerPort?: pulumi.Input<number>;
    /**
     * PCP PEER Opcode (default is enabled)
     */
    peer?: pulumi.Input<number>;
    /**
     * Specify source IP address for IPv4 ANNOUNCE message
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Specify source IPv6 address for IPv6 ANNOUNCE message
     */
    sourceIpv6?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cgnv6TemplatePcp resource.
 */
export interface Cgnv6TemplatePcpArgs {
    /**
     * Allow third party request coming from LAN (default is disabled)
     */
    allowThirdPartyFromLan?: pulumi.Input<number>;
    /**
     * Allow third party request coming from WAN (default is disabled)
     */
    allowThirdPartyFromWan?: pulumi.Input<number>;
    /**
     * PCP ANNOUNCE Opcode (default is enabled)
     */
    announce?: pulumi.Input<number>;
    /**
     * To validate NONCE value in PCP request (default: disabled)
     */
    checkClientNonce?: pulumi.Input<number>;
    /**
     * To disable processing of FILTER options in MAP request
     */
    disableMapFilter?: pulumi.Input<number>;
    /**
     * PCP MAP Opcode (default is enabled)
     */
    map?: pulumi.Input<number>;
    /**
     * To set maximum lifetime of PCP mappings (default 1440 minutes)
     */
    maximum?: pulumi.Input<number>;
    /**
     * To set minimum lifetime of PCP mappings (default 2 minutes)
     */
    minimum?: pulumi.Input<number>;
    /**
     * PCP Template name
     */
    name?: pulumi.Input<string>;
    /**
     * PCP server listening port (default 5351) (PCP UDP destination port)
     */
    pcpServerPort?: pulumi.Input<number>;
    /**
     * PCP PEER Opcode (default is enabled)
     */
    peer?: pulumi.Input<number>;
    /**
     * Specify source IP address for IPv4 ANNOUNCE message
     */
    sourceIp?: pulumi.Input<string>;
    /**
     * Specify source IPv6 address for IPv6 ANNOUNCE message
     */
    sourceIpv6?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
