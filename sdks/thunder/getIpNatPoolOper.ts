// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpNatPoolOper(args: GetIpNatPoolOperArgs, opts?: pulumi.InvokeOptions): Promise<GetIpNatPoolOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getIpNatPoolOper:getIpNatPoolOper", {
        "id": args.id,
        "oper": args.oper,
        "poolName": args.poolName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpNatPoolOper.
 */
export interface GetIpNatPoolOperArgs {
    id?: string;
    oper?: inputs.GetIpNatPoolOperOper;
    poolName: string;
}

/**
 * A collection of values returned by getIpNatPoolOper.
 */
export interface GetIpNatPoolOperResult {
    readonly id: string;
    readonly oper?: outputs.GetIpNatPoolOperOper;
    readonly poolName: string;
}
export function getIpNatPoolOperOutput(args: GetIpNatPoolOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpNatPoolOperResult> {
    return pulumi.output(args).apply((a: any) => getIpNatPoolOper(a, opts))
}

/**
 * A collection of arguments for invoking getIpNatPoolOper.
 */
export interface GetIpNatPoolOperOutputArgs {
    id?: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetIpNatPoolOperOperArgs>;
    poolName: pulumi.Input<string>;
}
