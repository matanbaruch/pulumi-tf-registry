// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RouterBgpNeighborTrunkNeighbor extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgpNeighborTrunkNeighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpNeighborTrunkNeighborState, opts?: pulumi.CustomResourceOptions): RouterBgpNeighborTrunkNeighbor {
        return new RouterBgpNeighborTrunkNeighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/routerBgpNeighborTrunkNeighbor:RouterBgpNeighborTrunkNeighbor';

    /**
     * Returns true if the given object is an instance of RouterBgpNeighborTrunkNeighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgpNeighborTrunkNeighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgpNeighborTrunkNeighbor.__pulumiType;
    }

    /**
     * AsNumber
     */
    public readonly asNumber!: pulumi.Output<string>;
    public readonly peerGroupName!: pulumi.Output<string | undefined>;
    /**
     * Trunk interface number
     */
    public readonly trunk!: pulumi.Output<number>;
    public readonly unnumbered!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a RouterBgpNeighborTrunkNeighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterBgpNeighborTrunkNeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpNeighborTrunkNeighborArgs | RouterBgpNeighborTrunkNeighborState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpNeighborTrunkNeighborState | undefined;
            resourceInputs["asNumber"] = state ? state.asNumber : undefined;
            resourceInputs["peerGroupName"] = state ? state.peerGroupName : undefined;
            resourceInputs["trunk"] = state ? state.trunk : undefined;
            resourceInputs["unnumbered"] = state ? state.unnumbered : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as RouterBgpNeighborTrunkNeighborArgs | undefined;
            if ((!args || args.asNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asNumber'");
            }
            if ((!args || args.trunk === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trunk'");
            }
            resourceInputs["asNumber"] = args ? args.asNumber : undefined;
            resourceInputs["peerGroupName"] = args ? args.peerGroupName : undefined;
            resourceInputs["trunk"] = args ? args.trunk : undefined;
            resourceInputs["unnumbered"] = args ? args.unnumbered : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgpNeighborTrunkNeighbor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgpNeighborTrunkNeighbor resources.
 */
export interface RouterBgpNeighborTrunkNeighborState {
    /**
     * AsNumber
     */
    asNumber?: pulumi.Input<string>;
    peerGroupName?: pulumi.Input<string>;
    /**
     * Trunk interface number
     */
    trunk?: pulumi.Input<number>;
    unnumbered?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterBgpNeighborTrunkNeighbor resource.
 */
export interface RouterBgpNeighborTrunkNeighborArgs {
    /**
     * AsNumber
     */
    asNumber: pulumi.Input<string>;
    peerGroupName?: pulumi.Input<string>;
    /**
     * Trunk interface number
     */
    trunk: pulumi.Input<number>;
    unnumbered?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
