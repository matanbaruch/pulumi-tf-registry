// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SlbTemplateDblb extends pulumi.CustomResource {
    /**
     * Get an existing SlbTemplateDblb resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlbTemplateDblbState, opts?: pulumi.CustomResourceOptions): SlbTemplateDblb {
        return new SlbTemplateDblb(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/slbTemplateDblb:SlbTemplateDblb';

    /**
     * Returns true if the given object is an instance of SlbTemplateDblb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlbTemplateDblb {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlbTemplateDblb.__pulumiType;
    }

    public readonly calcSha1!: pulumi.Output<outputs.SlbTemplateDblbCalcSha1 | undefined>;
    /**
     * Specify user/password string class list (Class list name)
     */
    public readonly classList!: pulumi.Output<string | undefined>;
    /**
     * DBLB template name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 'MSSQL2008': MSSQL server 2008 or 2008 R2; 'MSSQL2012': MSSQL server 2012; 'MySQL': MySQL server (any version);
     */
    public readonly serverVersion!: pulumi.Output<string | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a SlbTemplateDblb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SlbTemplateDblbArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlbTemplateDblbArgs | SlbTemplateDblbState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlbTemplateDblbState | undefined;
            resourceInputs["calcSha1"] = state ? state.calcSha1 : undefined;
            resourceInputs["classList"] = state ? state.classList : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverVersion"] = state ? state.serverVersion : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as SlbTemplateDblbArgs | undefined;
            resourceInputs["calcSha1"] = args ? args.calcSha1 : undefined;
            resourceInputs["classList"] = args ? args.classList : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverVersion"] = args ? args.serverVersion : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlbTemplateDblb.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SlbTemplateDblb resources.
 */
export interface SlbTemplateDblbState {
    calcSha1?: pulumi.Input<inputs.SlbTemplateDblbCalcSha1>;
    /**
     * Specify user/password string class list (Class list name)
     */
    classList?: pulumi.Input<string>;
    /**
     * DBLB template name
     */
    name?: pulumi.Input<string>;
    /**
     * 'MSSQL2008': MSSQL server 2008 or 2008 R2; 'MSSQL2012': MSSQL server 2012; 'MySQL': MySQL server (any version);
     */
    serverVersion?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlbTemplateDblb resource.
 */
export interface SlbTemplateDblbArgs {
    calcSha1?: pulumi.Input<inputs.SlbTemplateDblbCalcSha1>;
    /**
     * Specify user/password string class list (Class list name)
     */
    classList?: pulumi.Input<string>;
    /**
     * DBLB template name
     */
    name?: pulumi.Input<string>;
    /**
     * 'MSSQL2008': MSSQL server 2008 or 2008 R2; 'MSSQL2012': MSSQL server 2012; 'MySQL': MySQL server (any version);
     */
    serverVersion?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
