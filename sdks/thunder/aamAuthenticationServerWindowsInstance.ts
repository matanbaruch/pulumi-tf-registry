// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AamAuthenticationServerWindowsInstance extends pulumi.CustomResource {
    /**
     * Get an existing AamAuthenticationServerWindowsInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AamAuthenticationServerWindowsInstanceState, opts?: pulumi.CustomResourceOptions): AamAuthenticationServerWindowsInstance {
        return new AamAuthenticationServerWindowsInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/aamAuthenticationServerWindowsInstance:AamAuthenticationServerWindowsInstance';

    /**
     * Returns true if the given object is an instance of AamAuthenticationServerWindowsInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AamAuthenticationServerWindowsInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AamAuthenticationServerWindowsInstance.__pulumiType;
    }

    public readonly authProtocol!: pulumi.Output<outputs.AamAuthenticationServerWindowsInstanceAuthProtocol | undefined>;
    /**
     * Check server's health status
     */
    public readonly healthCheck!: pulumi.Output<number | undefined>;
    /**
     * Disable configured health check configuration
     */
    public readonly healthCheckDisable!: pulumi.Output<number | undefined>;
    /**
     * Health monitor name
     */
    public readonly healthCheckString!: pulumi.Output<string | undefined>;
    public readonly host!: pulumi.Output<outputs.AamAuthenticationServerWindowsInstanceHost | undefined>;
    /**
     * Specify Windows authentication server name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    public readonly packetCaptureTemplate!: pulumi.Output<string | undefined>;
    /**
     * Specify realm of Windows server
     */
    public readonly realm!: pulumi.Output<string | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.AamAuthenticationServerWindowsInstanceSamplingEnable[] | undefined>;
    /**
     * Enable weak cipher (DES CRC/MD5/MD4) and merge AS-REQ in single packet
     */
    public readonly supportApachedsKdc!: pulumi.Output<number | undefined>;
    /**
     * Specify connection timeout to server, default is 10 seconds
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a AamAuthenticationServerWindowsInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AamAuthenticationServerWindowsInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AamAuthenticationServerWindowsInstanceArgs | AamAuthenticationServerWindowsInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AamAuthenticationServerWindowsInstanceState | undefined;
            resourceInputs["authProtocol"] = state ? state.authProtocol : undefined;
            resourceInputs["healthCheck"] = state ? state.healthCheck : undefined;
            resourceInputs["healthCheckDisable"] = state ? state.healthCheckDisable : undefined;
            resourceInputs["healthCheckString"] = state ? state.healthCheckString : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packetCaptureTemplate"] = state ? state.packetCaptureTemplate : undefined;
            resourceInputs["realm"] = state ? state.realm : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["supportApachedsKdc"] = state ? state.supportApachedsKdc : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AamAuthenticationServerWindowsInstanceArgs | undefined;
            resourceInputs["authProtocol"] = args ? args.authProtocol : undefined;
            resourceInputs["healthCheck"] = args ? args.healthCheck : undefined;
            resourceInputs["healthCheckDisable"] = args ? args.healthCheckDisable : undefined;
            resourceInputs["healthCheckString"] = args ? args.healthCheckString : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packetCaptureTemplate"] = args ? args.packetCaptureTemplate : undefined;
            resourceInputs["realm"] = args ? args.realm : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["supportApachedsKdc"] = args ? args.supportApachedsKdc : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AamAuthenticationServerWindowsInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AamAuthenticationServerWindowsInstance resources.
 */
export interface AamAuthenticationServerWindowsInstanceState {
    authProtocol?: pulumi.Input<inputs.AamAuthenticationServerWindowsInstanceAuthProtocol>;
    /**
     * Check server's health status
     */
    healthCheck?: pulumi.Input<number>;
    /**
     * Disable configured health check configuration
     */
    healthCheckDisable?: pulumi.Input<number>;
    /**
     * Health monitor name
     */
    healthCheckString?: pulumi.Input<string>;
    host?: pulumi.Input<inputs.AamAuthenticationServerWindowsInstanceHost>;
    /**
     * Specify Windows authentication server name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    /**
     * Specify realm of Windows server
     */
    realm?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationServerWindowsInstanceSamplingEnable>[]>;
    /**
     * Enable weak cipher (DES CRC/MD5/MD4) and merge AS-REQ in single packet
     */
    supportApachedsKdc?: pulumi.Input<number>;
    /**
     * Specify connection timeout to server, default is 10 seconds
     */
    timeout?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AamAuthenticationServerWindowsInstance resource.
 */
export interface AamAuthenticationServerWindowsInstanceArgs {
    authProtocol?: pulumi.Input<inputs.AamAuthenticationServerWindowsInstanceAuthProtocol>;
    /**
     * Check server's health status
     */
    healthCheck?: pulumi.Input<number>;
    /**
     * Disable configured health check configuration
     */
    healthCheckDisable?: pulumi.Input<number>;
    /**
     * Health monitor name
     */
    healthCheckString?: pulumi.Input<string>;
    host?: pulumi.Input<inputs.AamAuthenticationServerWindowsInstanceHost>;
    /**
     * Specify Windows authentication server name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    /**
     * Specify realm of Windows server
     */
    realm?: pulumi.Input<string>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.AamAuthenticationServerWindowsInstanceSamplingEnable>[]>;
    /**
     * Enable weak cipher (DES CRC/MD5/MD4) and merge AS-REQ in single packet
     */
    supportApachedsKdc?: pulumi.Input<number>;
    /**
     * Specify connection timeout to server, default is 10 seconds
     */
    timeout?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
