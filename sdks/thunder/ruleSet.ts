// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RuleSet extends pulumi.CustomResource {
    /**
     * Get an existing RuleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RuleSetState, opts?: pulumi.CustomResourceOptions): RuleSet {
        return new RuleSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/ruleSet:RuleSet';

    /**
     * Returns true if the given object is an instance of RuleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RuleSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RuleSet.__pulumiType;
    }

    public readonly app!: pulumi.Output<outputs.RuleSetApp | undefined>;
    public readonly application!: pulumi.Output<outputs.RuleSetApplication | undefined>;
    /**
     * Rule set name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    public readonly packetCaptureTemplate!: pulumi.Output<string | undefined>;
    /**
     * Rule set entry comment (Notes for this rule set)
     */
    public readonly remark!: pulumi.Output<string | undefined>;
    public readonly ruleLists!: pulumi.Output<outputs.RuleSetRuleList[] | undefined>;
    public readonly rulesByZone!: pulumi.Output<outputs.RuleSetRulesByZone | undefined>;
    public readonly samplingEnables!: pulumi.Output<outputs.RuleSetSamplingEnable[] | undefined>;
    /**
     * 'enable': Enable session based statistic (Default); 'disable': Disable session based statistic;
     */
    public readonly sessionStatistic!: pulumi.Output<string | undefined>;
    public readonly tag!: pulumi.Output<outputs.RuleSetTag | undefined>;
    public readonly trackAppRuleList!: pulumi.Output<outputs.RuleSetTrackAppRuleList | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a RuleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RuleSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RuleSetArgs | RuleSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RuleSetState | undefined;
            resourceInputs["app"] = state ? state.app : undefined;
            resourceInputs["application"] = state ? state.application : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packetCaptureTemplate"] = state ? state.packetCaptureTemplate : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["ruleLists"] = state ? state.ruleLists : undefined;
            resourceInputs["rulesByZone"] = state ? state.rulesByZone : undefined;
            resourceInputs["samplingEnables"] = state ? state.samplingEnables : undefined;
            resourceInputs["sessionStatistic"] = state ? state.sessionStatistic : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
            resourceInputs["trackAppRuleList"] = state ? state.trackAppRuleList : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as RuleSetArgs | undefined;
            resourceInputs["app"] = args ? args.app : undefined;
            resourceInputs["application"] = args ? args.application : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packetCaptureTemplate"] = args ? args.packetCaptureTemplate : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["ruleLists"] = args ? args.ruleLists : undefined;
            resourceInputs["rulesByZone"] = args ? args.rulesByZone : undefined;
            resourceInputs["samplingEnables"] = args ? args.samplingEnables : undefined;
            resourceInputs["sessionStatistic"] = args ? args.sessionStatistic : undefined;
            resourceInputs["tag"] = args ? args.tag : undefined;
            resourceInputs["trackAppRuleList"] = args ? args.trackAppRuleList : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RuleSet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RuleSet resources.
 */
export interface RuleSetState {
    app?: pulumi.Input<inputs.RuleSetApp>;
    application?: pulumi.Input<inputs.RuleSetApplication>;
    /**
     * Rule set name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    /**
     * Rule set entry comment (Notes for this rule set)
     */
    remark?: pulumi.Input<string>;
    ruleLists?: pulumi.Input<pulumi.Input<inputs.RuleSetRuleList>[]>;
    rulesByZone?: pulumi.Input<inputs.RuleSetRulesByZone>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.RuleSetSamplingEnable>[]>;
    /**
     * 'enable': Enable session based statistic (Default); 'disable': Disable session based statistic;
     */
    sessionStatistic?: pulumi.Input<string>;
    tag?: pulumi.Input<inputs.RuleSetTag>;
    trackAppRuleList?: pulumi.Input<inputs.RuleSetTrackAppRuleList>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RuleSet resource.
 */
export interface RuleSetArgs {
    app?: pulumi.Input<inputs.RuleSetApp>;
    application?: pulumi.Input<inputs.RuleSetApplication>;
    /**
     * Rule set name
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the packet capture template to be bind with this object
     */
    packetCaptureTemplate?: pulumi.Input<string>;
    /**
     * Rule set entry comment (Notes for this rule set)
     */
    remark?: pulumi.Input<string>;
    ruleLists?: pulumi.Input<pulumi.Input<inputs.RuleSetRuleList>[]>;
    rulesByZone?: pulumi.Input<inputs.RuleSetRulesByZone>;
    samplingEnables?: pulumi.Input<pulumi.Input<inputs.RuleSetSamplingEnable>[]>;
    /**
     * 'enable': Enable session based statistic (Default); 'disable': Disable session based statistic;
     */
    sessionStatistic?: pulumi.Input<string>;
    tag?: pulumi.Input<inputs.RuleSetTag>;
    trackAppRuleList?: pulumi.Input<inputs.RuleSetTrackAppRuleList>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
