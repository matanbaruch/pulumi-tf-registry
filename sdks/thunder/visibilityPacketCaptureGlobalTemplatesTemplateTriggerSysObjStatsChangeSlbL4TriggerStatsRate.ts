// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate extends pulumi.CustomResource {
    /**
     * Get an existing VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateState, opts?: pulumi.CustomResourceOptions): VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate {
        return new VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/visibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate:VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate';

    /**
     * Returns true if the given object is an instance of VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate.__pulumiType;
    }

    /**
     * Enable automatic packet-capture for BW-Limit Exceed drop
     */
    public readonly bwRateLimitExceed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for L3V Conn Limit Drop
     */
    public readonly concurrentConnExceed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Conn rate limit drops
     */
    public readonly connRateLimitDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Conn rate limit resets
     */
    public readonly connRateLimitReset!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Conn Limit drops
     */
    public readonly connlimitDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for DNS Policy Drop
     */
    public readonly dnsPolicyDrop!: pulumi.Output<number | undefined>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    public readonly duration!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for L4 CPS exceed drop
     */
    public readonly l4CpsExceed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for L7 CPS exceed drop
     */
    public readonly l7CpsExceed!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable automatic packet-capture for NAT CPS exceed drop
     */
    public readonly natCpsExceed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for No resource drop
     */
    public readonly noResourseDrop!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Auto NAT id mismatch
     */
    public readonly smartNatIdMismatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Source NAT failure
     */
    public readonly snatFail!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Source NAT ICMP Process
     */
    public readonly snatIcmpErrorProcess!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Source NAT ICMP No Match
     */
    public readonly snatIcmpNoMatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Source NAT no fwd route
     */
    public readonly snatNoFwdRoute!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Source NAT no rev route
     */
    public readonly snatNoRevRoute!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for SSL CPS exceed drop
     */
    public readonly sslCpsExceed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for SSL TPT exceed drop
     */
    public readonly sslTptExceed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for L4 server handshake fail
     */
    public readonly svrSynHandshakeFail!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for Server sel failure
     */
    public readonly svrselfail!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for L4 SYN attack
     */
    public readonly synattack!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP SYN cookie failed
     */
    public readonly syncookiescheckfailed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for TCP SYN cookie snt fail
     */
    public readonly syncookiessentfailed!: pulumi.Output<number | undefined>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    public readonly thresholdExceededBy!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateArgs | VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateState | undefined;
            resourceInputs["bwRateLimitExceed"] = state ? state.bwRateLimitExceed : undefined;
            resourceInputs["concurrentConnExceed"] = state ? state.concurrentConnExceed : undefined;
            resourceInputs["connRateLimitDrop"] = state ? state.connRateLimitDrop : undefined;
            resourceInputs["connRateLimitReset"] = state ? state.connRateLimitReset : undefined;
            resourceInputs["connlimitDrop"] = state ? state.connlimitDrop : undefined;
            resourceInputs["dnsPolicyDrop"] = state ? state.dnsPolicyDrop : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["l4CpsExceed"] = state ? state.l4CpsExceed : undefined;
            resourceInputs["l7CpsExceed"] = state ? state.l7CpsExceed : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["natCpsExceed"] = state ? state.natCpsExceed : undefined;
            resourceInputs["noResourseDrop"] = state ? state.noResourseDrop : undefined;
            resourceInputs["smartNatIdMismatch"] = state ? state.smartNatIdMismatch : undefined;
            resourceInputs["snatFail"] = state ? state.snatFail : undefined;
            resourceInputs["snatIcmpErrorProcess"] = state ? state.snatIcmpErrorProcess : undefined;
            resourceInputs["snatIcmpNoMatch"] = state ? state.snatIcmpNoMatch : undefined;
            resourceInputs["snatNoFwdRoute"] = state ? state.snatNoFwdRoute : undefined;
            resourceInputs["snatNoRevRoute"] = state ? state.snatNoRevRoute : undefined;
            resourceInputs["sslCpsExceed"] = state ? state.sslCpsExceed : undefined;
            resourceInputs["sslTptExceed"] = state ? state.sslTptExceed : undefined;
            resourceInputs["svrSynHandshakeFail"] = state ? state.svrSynHandshakeFail : undefined;
            resourceInputs["svrselfail"] = state ? state.svrselfail : undefined;
            resourceInputs["synattack"] = state ? state.synattack : undefined;
            resourceInputs["syncookiescheckfailed"] = state ? state.syncookiescheckfailed : undefined;
            resourceInputs["syncookiessentfailed"] = state ? state.syncookiessentfailed : undefined;
            resourceInputs["thresholdExceededBy"] = state ? state.thresholdExceededBy : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateArgs | undefined;
            resourceInputs["bwRateLimitExceed"] = args ? args.bwRateLimitExceed : undefined;
            resourceInputs["concurrentConnExceed"] = args ? args.concurrentConnExceed : undefined;
            resourceInputs["connRateLimitDrop"] = args ? args.connRateLimitDrop : undefined;
            resourceInputs["connRateLimitReset"] = args ? args.connRateLimitReset : undefined;
            resourceInputs["connlimitDrop"] = args ? args.connlimitDrop : undefined;
            resourceInputs["dnsPolicyDrop"] = args ? args.dnsPolicyDrop : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["l4CpsExceed"] = args ? args.l4CpsExceed : undefined;
            resourceInputs["l7CpsExceed"] = args ? args.l7CpsExceed : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["natCpsExceed"] = args ? args.natCpsExceed : undefined;
            resourceInputs["noResourseDrop"] = args ? args.noResourseDrop : undefined;
            resourceInputs["smartNatIdMismatch"] = args ? args.smartNatIdMismatch : undefined;
            resourceInputs["snatFail"] = args ? args.snatFail : undefined;
            resourceInputs["snatIcmpErrorProcess"] = args ? args.snatIcmpErrorProcess : undefined;
            resourceInputs["snatIcmpNoMatch"] = args ? args.snatIcmpNoMatch : undefined;
            resourceInputs["snatNoFwdRoute"] = args ? args.snatNoFwdRoute : undefined;
            resourceInputs["snatNoRevRoute"] = args ? args.snatNoRevRoute : undefined;
            resourceInputs["sslCpsExceed"] = args ? args.sslCpsExceed : undefined;
            resourceInputs["sslTptExceed"] = args ? args.sslTptExceed : undefined;
            resourceInputs["svrSynHandshakeFail"] = args ? args.svrSynHandshakeFail : undefined;
            resourceInputs["svrselfail"] = args ? args.svrselfail : undefined;
            resourceInputs["synattack"] = args ? args.synattack : undefined;
            resourceInputs["syncookiescheckfailed"] = args ? args.syncookiescheckfailed : undefined;
            resourceInputs["syncookiessentfailed"] = args ? args.syncookiessentfailed : undefined;
            resourceInputs["thresholdExceededBy"] = args ? args.thresholdExceededBy : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate resources.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateState {
    /**
     * Enable automatic packet-capture for BW-Limit Exceed drop
     */
    bwRateLimitExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L3V Conn Limit Drop
     */
    concurrentConnExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Conn rate limit drops
     */
    connRateLimitDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Conn rate limit resets
     */
    connRateLimitReset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Conn Limit drops
     */
    connlimitDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for DNS Policy Drop
     */
    dnsPolicyDrop?: pulumi.Input<number>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    duration?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L4 CPS exceed drop
     */
    l4CpsExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L7 CPS exceed drop
     */
    l7CpsExceed?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for NAT CPS exceed drop
     */
    natCpsExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for No resource drop
     */
    noResourseDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Auto NAT id mismatch
     */
    smartNatIdMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT failure
     */
    snatFail?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT ICMP Process
     */
    snatIcmpErrorProcess?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT ICMP No Match
     */
    snatIcmpNoMatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT no fwd route
     */
    snatNoFwdRoute?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT no rev route
     */
    snatNoRevRoute?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for SSL CPS exceed drop
     */
    sslCpsExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for SSL TPT exceed drop
     */
    sslTptExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L4 server handshake fail
     */
    svrSynHandshakeFail?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Server sel failure
     */
    svrselfail?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L4 SYN attack
     */
    synattack?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP SYN cookie failed
     */
    syncookiescheckfailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP SYN cookie snt fail
     */
    syncookiessentfailed?: pulumi.Input<number>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    thresholdExceededBy?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRate resource.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbL4TriggerStatsRateArgs {
    /**
     * Enable automatic packet-capture for BW-Limit Exceed drop
     */
    bwRateLimitExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L3V Conn Limit Drop
     */
    concurrentConnExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Conn rate limit drops
     */
    connRateLimitDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Conn rate limit resets
     */
    connRateLimitReset?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Conn Limit drops
     */
    connlimitDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for DNS Policy Drop
     */
    dnsPolicyDrop?: pulumi.Input<number>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    duration?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L4 CPS exceed drop
     */
    l4CpsExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L7 CPS exceed drop
     */
    l7CpsExceed?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for NAT CPS exceed drop
     */
    natCpsExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for No resource drop
     */
    noResourseDrop?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Auto NAT id mismatch
     */
    smartNatIdMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT failure
     */
    snatFail?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT ICMP Process
     */
    snatIcmpErrorProcess?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT ICMP No Match
     */
    snatIcmpNoMatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT no fwd route
     */
    snatNoFwdRoute?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Source NAT no rev route
     */
    snatNoRevRoute?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for SSL CPS exceed drop
     */
    sslCpsExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for SSL TPT exceed drop
     */
    sslTptExceed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L4 server handshake fail
     */
    svrSynHandshakeFail?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for Server sel failure
     */
    svrselfail?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for L4 SYN attack
     */
    synattack?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP SYN cookie failed
     */
    syncookiescheckfailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for TCP SYN cookie snt fail
     */
    syncookiessentfailed?: pulumi.Input<number>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    thresholdExceededBy?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
