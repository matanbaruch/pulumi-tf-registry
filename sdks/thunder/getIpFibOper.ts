// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpFibOper(args?: GetIpFibOperArgs, opts?: pulumi.InvokeOptions): Promise<GetIpFibOperResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getIpFibOper:getIpFibOper", {
        "id": args.id,
        "oper": args.oper,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpFibOper.
 */
export interface GetIpFibOperArgs {
    id?: string;
    oper?: inputs.GetIpFibOperOper;
}

/**
 * A collection of values returned by getIpFibOper.
 */
export interface GetIpFibOperResult {
    readonly id: string;
    readonly oper?: outputs.GetIpFibOperOper;
}
export function getIpFibOperOutput(args?: GetIpFibOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpFibOperResult> {
    return pulumi.output(args).apply((a: any) => getIpFibOper(a, opts))
}

/**
 * A collection of arguments for invoking getIpFibOper.
 */
export interface GetIpFibOperOutputArgs {
    id?: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetIpFibOperOperArgs>;
}
