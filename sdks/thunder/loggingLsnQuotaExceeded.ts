// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LoggingLsnQuotaExceeded extends pulumi.CustomResource {
    /**
     * Get an existing LoggingLsnQuotaExceeded resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoggingLsnQuotaExceededState, opts?: pulumi.CustomResourceOptions): LoggingLsnQuotaExceeded {
        return new LoggingLsnQuotaExceeded(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/loggingLsnQuotaExceeded:LoggingLsnQuotaExceeded';

    /**
     * Returns true if the given object is an instance of LoggingLsnQuotaExceeded.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoggingLsnQuotaExceeded {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoggingLsnQuotaExceeded.__pulumiType;
    }

    /**
     * Customized attribute No.1
     */
    public readonly custom1!: pulumi.Output<number | undefined>;
    /**
     * Customized attribute No.2
     */
    public readonly custom2!: pulumi.Output<number | undefined>;
    /**
     * Customized attribute No.3
     */
    public readonly custom3!: pulumi.Output<number | undefined>;
    /**
     * Customized attribute No.4
     */
    public readonly custom4!: pulumi.Output<number | undefined>;
    /**
     * Customized attribute No.5
     */
    public readonly custom5!: pulumi.Output<number | undefined>;
    /**
     * Customized attribute No.6
     */
    public readonly custom6!: pulumi.Output<number | undefined>;
    /**
     * Disable log LSN user quota exceeded based on LSN pool(Default: enabled)
     */
    public readonly disablePoolBased!: pulumi.Output<number | undefined>;
    /**
     * International Mobile Equipment Identity (IMEI)
     */
    public readonly imei!: pulumi.Output<number | undefined>;
    /**
     * International Mobile Subscriber Identity (IMSI)
     */
    public readonly imsi!: pulumi.Output<number | undefined>;
    /**
     * Log LSN user quota exceeded based on private IP(Default: disabled)
     */
    public readonly ipBased!: pulumi.Output<number | undefined>;
    /**
     * Mobile Subscriber Integrated Services Digital Netwrok-Number (MSISDN)
     */
    public readonly msisdn!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Log with radius attribute
     */
    public readonly withRadiusAttribute!: pulumi.Output<number | undefined>;

    /**
     * Create a LoggingLsnQuotaExceeded resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LoggingLsnQuotaExceededArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoggingLsnQuotaExceededArgs | LoggingLsnQuotaExceededState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoggingLsnQuotaExceededState | undefined;
            resourceInputs["custom1"] = state ? state.custom1 : undefined;
            resourceInputs["custom2"] = state ? state.custom2 : undefined;
            resourceInputs["custom3"] = state ? state.custom3 : undefined;
            resourceInputs["custom4"] = state ? state.custom4 : undefined;
            resourceInputs["custom5"] = state ? state.custom5 : undefined;
            resourceInputs["custom6"] = state ? state.custom6 : undefined;
            resourceInputs["disablePoolBased"] = state ? state.disablePoolBased : undefined;
            resourceInputs["imei"] = state ? state.imei : undefined;
            resourceInputs["imsi"] = state ? state.imsi : undefined;
            resourceInputs["ipBased"] = state ? state.ipBased : undefined;
            resourceInputs["msisdn"] = state ? state.msisdn : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["withRadiusAttribute"] = state ? state.withRadiusAttribute : undefined;
        } else {
            const args = argsOrState as LoggingLsnQuotaExceededArgs | undefined;
            resourceInputs["custom1"] = args ? args.custom1 : undefined;
            resourceInputs["custom2"] = args ? args.custom2 : undefined;
            resourceInputs["custom3"] = args ? args.custom3 : undefined;
            resourceInputs["custom4"] = args ? args.custom4 : undefined;
            resourceInputs["custom5"] = args ? args.custom5 : undefined;
            resourceInputs["custom6"] = args ? args.custom6 : undefined;
            resourceInputs["disablePoolBased"] = args ? args.disablePoolBased : undefined;
            resourceInputs["imei"] = args ? args.imei : undefined;
            resourceInputs["imsi"] = args ? args.imsi : undefined;
            resourceInputs["ipBased"] = args ? args.ipBased : undefined;
            resourceInputs["msisdn"] = args ? args.msisdn : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["withRadiusAttribute"] = args ? args.withRadiusAttribute : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoggingLsnQuotaExceeded.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LoggingLsnQuotaExceeded resources.
 */
export interface LoggingLsnQuotaExceededState {
    /**
     * Customized attribute No.1
     */
    custom1?: pulumi.Input<number>;
    /**
     * Customized attribute No.2
     */
    custom2?: pulumi.Input<number>;
    /**
     * Customized attribute No.3
     */
    custom3?: pulumi.Input<number>;
    /**
     * Customized attribute No.4
     */
    custom4?: pulumi.Input<number>;
    /**
     * Customized attribute No.5
     */
    custom5?: pulumi.Input<number>;
    /**
     * Customized attribute No.6
     */
    custom6?: pulumi.Input<number>;
    /**
     * Disable log LSN user quota exceeded based on LSN pool(Default: enabled)
     */
    disablePoolBased?: pulumi.Input<number>;
    /**
     * International Mobile Equipment Identity (IMEI)
     */
    imei?: pulumi.Input<number>;
    /**
     * International Mobile Subscriber Identity (IMSI)
     */
    imsi?: pulumi.Input<number>;
    /**
     * Log LSN user quota exceeded based on private IP(Default: disabled)
     */
    ipBased?: pulumi.Input<number>;
    /**
     * Mobile Subscriber Integrated Services Digital Netwrok-Number (MSISDN)
     */
    msisdn?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Log with radius attribute
     */
    withRadiusAttribute?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a LoggingLsnQuotaExceeded resource.
 */
export interface LoggingLsnQuotaExceededArgs {
    /**
     * Customized attribute No.1
     */
    custom1?: pulumi.Input<number>;
    /**
     * Customized attribute No.2
     */
    custom2?: pulumi.Input<number>;
    /**
     * Customized attribute No.3
     */
    custom3?: pulumi.Input<number>;
    /**
     * Customized attribute No.4
     */
    custom4?: pulumi.Input<number>;
    /**
     * Customized attribute No.5
     */
    custom5?: pulumi.Input<number>;
    /**
     * Customized attribute No.6
     */
    custom6?: pulumi.Input<number>;
    /**
     * Disable log LSN user quota exceeded based on LSN pool(Default: enabled)
     */
    disablePoolBased?: pulumi.Input<number>;
    /**
     * International Mobile Equipment Identity (IMEI)
     */
    imei?: pulumi.Input<number>;
    /**
     * International Mobile Subscriber Identity (IMSI)
     */
    imsi?: pulumi.Input<number>;
    /**
     * Log LSN user quota exceeded based on private IP(Default: disabled)
     */
    ipBased?: pulumi.Input<number>;
    /**
     * Mobile Subscriber Integrated Services Digital Netwrok-Number (MSISDN)
     */
    msisdn?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Log with radius attribute
     */
    withRadiusAttribute?: pulumi.Input<number>;
}
