// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRuleSetRulesByZoneOper(args: GetRuleSetRulesByZoneOperArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleSetRulesByZoneOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getRuleSetRulesByZoneOper:getRuleSetRulesByZoneOper", {
        "id": args.id,
        "name": args.name,
        "oper": args.oper,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRuleSetRulesByZoneOper.
 */
export interface GetRuleSetRulesByZoneOperArgs {
    id?: string;
    name: string;
    oper?: inputs.GetRuleSetRulesByZoneOperOper;
}

/**
 * A collection of values returned by getRuleSetRulesByZoneOper.
 */
export interface GetRuleSetRulesByZoneOperResult {
    readonly id: string;
    readonly name: string;
    readonly oper?: outputs.GetRuleSetRulesByZoneOperOper;
}
export function getRuleSetRulesByZoneOperOutput(args: GetRuleSetRulesByZoneOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuleSetRulesByZoneOperResult> {
    return pulumi.output(args).apply((a: any) => getRuleSetRulesByZoneOper(a, opts))
}

/**
 * A collection of arguments for invoking getRuleSetRulesByZoneOper.
 */
export interface GetRuleSetRulesByZoneOperOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    oper?: pulumi.Input<inputs.GetRuleSetRulesByZoneOperOperArgs>;
}
