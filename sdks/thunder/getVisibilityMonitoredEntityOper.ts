// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVisibilityMonitoredEntityOper(args?: GetVisibilityMonitoredEntityOperArgs, opts?: pulumi.InvokeOptions): Promise<GetVisibilityMonitoredEntityOperResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getVisibilityMonitoredEntityOper:getVisibilityMonitoredEntityOper", {
        "detail": args.detail,
        "id": args.id,
        "monTopk": args.monTopk,
        "oper": args.oper,
        "secondary": args.secondary,
        "sessions": args.sessions,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVisibilityMonitoredEntityOper.
 */
export interface GetVisibilityMonitoredEntityOperArgs {
    detail?: inputs.GetVisibilityMonitoredEntityOperDetail;
    id?: string;
    monTopk?: inputs.GetVisibilityMonitoredEntityOperMonTopk;
    oper?: inputs.GetVisibilityMonitoredEntityOperOper;
    secondary?: inputs.GetVisibilityMonitoredEntityOperSecondary;
    sessions?: inputs.GetVisibilityMonitoredEntityOperSessions;
}

/**
 * A collection of values returned by getVisibilityMonitoredEntityOper.
 */
export interface GetVisibilityMonitoredEntityOperResult {
    readonly detail?: outputs.GetVisibilityMonitoredEntityOperDetail;
    readonly id: string;
    readonly monTopk?: outputs.GetVisibilityMonitoredEntityOperMonTopk;
    readonly oper?: outputs.GetVisibilityMonitoredEntityOperOper;
    readonly secondary?: outputs.GetVisibilityMonitoredEntityOperSecondary;
    readonly sessions?: outputs.GetVisibilityMonitoredEntityOperSessions;
}
export function getVisibilityMonitoredEntityOperOutput(args?: GetVisibilityMonitoredEntityOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVisibilityMonitoredEntityOperResult> {
    return pulumi.output(args).apply((a: any) => getVisibilityMonitoredEntityOper(a, opts))
}

/**
 * A collection of arguments for invoking getVisibilityMonitoredEntityOper.
 */
export interface GetVisibilityMonitoredEntityOperOutputArgs {
    detail?: pulumi.Input<inputs.GetVisibilityMonitoredEntityOperDetailArgs>;
    id?: pulumi.Input<string>;
    monTopk?: pulumi.Input<inputs.GetVisibilityMonitoredEntityOperMonTopkArgs>;
    oper?: pulumi.Input<inputs.GetVisibilityMonitoredEntityOperOperArgs>;
    secondary?: pulumi.Input<inputs.GetVisibilityMonitoredEntityOperSecondaryArgs>;
    sessions?: pulumi.Input<inputs.GetVisibilityMonitoredEntityOperSessionsArgs>;
}
