// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AamAuthenticationPortalLogon extends pulumi.CustomResource {
    /**
     * Get an existing AamAuthenticationPortalLogon resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AamAuthenticationPortalLogonState, opts?: pulumi.CustomResourceOptions): AamAuthenticationPortalLogon {
        return new AamAuthenticationPortalLogon(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/aamAuthenticationPortalLogon:AamAuthenticationPortalLogon';

    /**
     * Returns true if the given object is an instance of AamAuthenticationPortalLogon.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AamAuthenticationPortalLogon {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AamAuthenticationPortalLogon.__pulumiType;
    }

    /**
     * Specify form action URL in default logon page (Default: /logon.fo)
     */
    public readonly actionUrl!: pulumi.Output<string | undefined>;
    public readonly background!: pulumi.Output<outputs.AamAuthenticationPortalLogonBackground | undefined>;
    /**
     * 'reCAPTCHAv2-checkbox': Google reCAPTCHAv2 Checkbox; 'reCAPTCHAv2-invisible': Google reCAPTCHAv2 Invisible;
     * 'reCAPTCHAv3': Google reCAPTCHAv3;
     */
    public readonly captchaType!: pulumi.Output<string | undefined>;
    /**
     * Enable CAPTCHA in deafult logon page
     */
    public readonly enableCaptcha!: pulumi.Output<number | undefined>;
    /**
     * Enable passcode field in default logon page
     */
    public readonly enablePasscode!: pulumi.Output<number | undefined>;
    public readonly failMsgCfg!: pulumi.Output<outputs.AamAuthenticationPortalLogonFailMsgCfg | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly passcodeCfg!: pulumi.Output<outputs.AamAuthenticationPortalLogonPasscodeCfg | undefined>;
    /**
     * Specify passcode variable name in default logon page (Default: passcode)
     */
    public readonly passcodeVar!: pulumi.Output<string | undefined>;
    public readonly passwordCfg!: pulumi.Output<outputs.AamAuthenticationPortalLogonPasswordCfg | undefined>;
    /**
     * Specify password variable name in default logon page (Default: pwd)
     */
    public readonly passwordVar!: pulumi.Output<string | undefined>;
    public readonly recaptchaCfg!: pulumi.Output<outputs.AamAuthenticationPortalLogonRecaptchaCfg | undefined>;
    /**
     * Site key string
     */
    public readonly siteKeyString!: pulumi.Output<string | undefined>;
    /**
     * Specify submit button text in default logon page (Default: Log In)
     */
    public readonly submitText!: pulumi.Output<string | undefined>;
    public readonly usernameCfg!: pulumi.Output<outputs.AamAuthenticationPortalLogonUsernameCfg | undefined>;
    /**
     * Specify username variable name in default logon page (Default: user)
     */
    public readonly usernameVar!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a AamAuthenticationPortalLogon resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AamAuthenticationPortalLogonArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AamAuthenticationPortalLogonArgs | AamAuthenticationPortalLogonState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AamAuthenticationPortalLogonState | undefined;
            resourceInputs["actionUrl"] = state ? state.actionUrl : undefined;
            resourceInputs["background"] = state ? state.background : undefined;
            resourceInputs["captchaType"] = state ? state.captchaType : undefined;
            resourceInputs["enableCaptcha"] = state ? state.enableCaptcha : undefined;
            resourceInputs["enablePasscode"] = state ? state.enablePasscode : undefined;
            resourceInputs["failMsgCfg"] = state ? state.failMsgCfg : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passcodeCfg"] = state ? state.passcodeCfg : undefined;
            resourceInputs["passcodeVar"] = state ? state.passcodeVar : undefined;
            resourceInputs["passwordCfg"] = state ? state.passwordCfg : undefined;
            resourceInputs["passwordVar"] = state ? state.passwordVar : undefined;
            resourceInputs["recaptchaCfg"] = state ? state.recaptchaCfg : undefined;
            resourceInputs["siteKeyString"] = state ? state.siteKeyString : undefined;
            resourceInputs["submitText"] = state ? state.submitText : undefined;
            resourceInputs["usernameCfg"] = state ? state.usernameCfg : undefined;
            resourceInputs["usernameVar"] = state ? state.usernameVar : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as AamAuthenticationPortalLogonArgs | undefined;
            resourceInputs["actionUrl"] = args ? args.actionUrl : undefined;
            resourceInputs["background"] = args ? args.background : undefined;
            resourceInputs["captchaType"] = args ? args.captchaType : undefined;
            resourceInputs["enableCaptcha"] = args ? args.enableCaptcha : undefined;
            resourceInputs["enablePasscode"] = args ? args.enablePasscode : undefined;
            resourceInputs["failMsgCfg"] = args ? args.failMsgCfg : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passcodeCfg"] = args ? args.passcodeCfg : undefined;
            resourceInputs["passcodeVar"] = args ? args.passcodeVar : undefined;
            resourceInputs["passwordCfg"] = args ? args.passwordCfg : undefined;
            resourceInputs["passwordVar"] = args ? args.passwordVar : undefined;
            resourceInputs["recaptchaCfg"] = args ? args.recaptchaCfg : undefined;
            resourceInputs["siteKeyString"] = args ? args.siteKeyString : undefined;
            resourceInputs["submitText"] = args ? args.submitText : undefined;
            resourceInputs["usernameCfg"] = args ? args.usernameCfg : undefined;
            resourceInputs["usernameVar"] = args ? args.usernameVar : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AamAuthenticationPortalLogon.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AamAuthenticationPortalLogon resources.
 */
export interface AamAuthenticationPortalLogonState {
    /**
     * Specify form action URL in default logon page (Default: /logon.fo)
     */
    actionUrl?: pulumi.Input<string>;
    background?: pulumi.Input<inputs.AamAuthenticationPortalLogonBackground>;
    /**
     * 'reCAPTCHAv2-checkbox': Google reCAPTCHAv2 Checkbox; 'reCAPTCHAv2-invisible': Google reCAPTCHAv2 Invisible;
     * 'reCAPTCHAv3': Google reCAPTCHAv3;
     */
    captchaType?: pulumi.Input<string>;
    /**
     * Enable CAPTCHA in deafult logon page
     */
    enableCaptcha?: pulumi.Input<number>;
    /**
     * Enable passcode field in default logon page
     */
    enablePasscode?: pulumi.Input<number>;
    failMsgCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonFailMsgCfg>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    passcodeCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonPasscodeCfg>;
    /**
     * Specify passcode variable name in default logon page (Default: passcode)
     */
    passcodeVar?: pulumi.Input<string>;
    passwordCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonPasswordCfg>;
    /**
     * Specify password variable name in default logon page (Default: pwd)
     */
    passwordVar?: pulumi.Input<string>;
    recaptchaCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonRecaptchaCfg>;
    /**
     * Site key string
     */
    siteKeyString?: pulumi.Input<string>;
    /**
     * Specify submit button text in default logon page (Default: Log In)
     */
    submitText?: pulumi.Input<string>;
    usernameCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonUsernameCfg>;
    /**
     * Specify username variable name in default logon page (Default: user)
     */
    usernameVar?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AamAuthenticationPortalLogon resource.
 */
export interface AamAuthenticationPortalLogonArgs {
    /**
     * Specify form action URL in default logon page (Default: /logon.fo)
     */
    actionUrl?: pulumi.Input<string>;
    background?: pulumi.Input<inputs.AamAuthenticationPortalLogonBackground>;
    /**
     * 'reCAPTCHAv2-checkbox': Google reCAPTCHAv2 Checkbox; 'reCAPTCHAv2-invisible': Google reCAPTCHAv2 Invisible;
     * 'reCAPTCHAv3': Google reCAPTCHAv3;
     */
    captchaType?: pulumi.Input<string>;
    /**
     * Enable CAPTCHA in deafult logon page
     */
    enableCaptcha?: pulumi.Input<number>;
    /**
     * Enable passcode field in default logon page
     */
    enablePasscode?: pulumi.Input<number>;
    failMsgCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonFailMsgCfg>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    passcodeCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonPasscodeCfg>;
    /**
     * Specify passcode variable name in default logon page (Default: passcode)
     */
    passcodeVar?: pulumi.Input<string>;
    passwordCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonPasswordCfg>;
    /**
     * Specify password variable name in default logon page (Default: pwd)
     */
    passwordVar?: pulumi.Input<string>;
    recaptchaCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonRecaptchaCfg>;
    /**
     * Site key string
     */
    siteKeyString?: pulumi.Input<string>;
    /**
     * Specify submit button text in default logon page (Default: Log In)
     */
    submitText?: pulumi.Input<string>;
    usernameCfg?: pulumi.Input<inputs.AamAuthenticationPortalLogonUsernameCfg>;
    /**
     * Specify username variable name in default logon page (Default: user)
     */
    usernameVar?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
