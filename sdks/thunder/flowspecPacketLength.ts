// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FlowspecPacketLength extends pulumi.CustomResource {
    /**
     * Get an existing FlowspecPacketLength resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlowspecPacketLengthState, opts?: pulumi.CustomResourceOptions): FlowspecPacketLength {
        return new FlowspecPacketLength(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/flowspecPacketLength:FlowspecPacketLength';

    /**
     * Returns true if the given object is an instance of FlowspecPacketLength.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlowspecPacketLength {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlowspecPacketLength.__pulumiType;
    }

    /**
     * Specify the Packet Length
     */
    public readonly length!: pulumi.Output<number>;
    /**
     * Specify the Packet Length
     */
    public readonly lengthEnd!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 'eq': Match only packets on a given Packet Length; 'gt': Match only packets with a greater Packet Length; 'lt': Match
     * only packets with a lower Packet Length; 'range': match only packets in the range of Packet Lengths;
     */
    public readonly packetLengthAttribute!: pulumi.Output<string>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a FlowspecPacketLength resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowspecPacketLengthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlowspecPacketLengthArgs | FlowspecPacketLengthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlowspecPacketLengthState | undefined;
            resourceInputs["length"] = state ? state.length : undefined;
            resourceInputs["lengthEnd"] = state ? state.lengthEnd : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["packetLengthAttribute"] = state ? state.packetLengthAttribute : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as FlowspecPacketLengthArgs | undefined;
            if ((!args || args.length === undefined) && !opts.urn) {
                throw new Error("Missing required property 'length'");
            }
            if ((!args || args.packetLengthAttribute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'packetLengthAttribute'");
            }
            resourceInputs["length"] = args ? args.length : undefined;
            resourceInputs["lengthEnd"] = args ? args.lengthEnd : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["packetLengthAttribute"] = args ? args.packetLengthAttribute : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlowspecPacketLength.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FlowspecPacketLength resources.
 */
export interface FlowspecPacketLengthState {
    /**
     * Specify the Packet Length
     */
    length?: pulumi.Input<number>;
    /**
     * Specify the Packet Length
     */
    lengthEnd?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * 'eq': Match only packets on a given Packet Length; 'gt': Match only packets with a greater Packet Length; 'lt': Match
     * only packets with a lower Packet Length; 'range': match only packets in the range of Packet Lengths;
     */
    packetLengthAttribute?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlowspecPacketLength resource.
 */
export interface FlowspecPacketLengthArgs {
    /**
     * Specify the Packet Length
     */
    length: pulumi.Input<number>;
    /**
     * Specify the Packet Length
     */
    lengthEnd?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * 'eq': Match only packets on a given Packet Length; 'gt': Match only packets with a greater Packet Length; 'lt': Match
     * only packets with a lower Packet Length; 'range': match only packets in the range of Packet Lengths;
     */
    packetLengthAttribute: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
