// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GslbSiteSlbDev extends pulumi.CustomResource {
    /**
     * Get an existing GslbSiteSlbDev resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbSiteSlbDevState, opts?: pulumi.CustomResourceOptions): GslbSiteSlbDev {
        return new GslbSiteSlbDev(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/gslbSiteSlbDev:GslbSiteSlbDev';

    /**
     * Returns true if the given object is an instance of GslbSiteSlbDev.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbSiteSlbDev {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbSiteSlbDev.__pulumiType;
    }

    /**
     * Specify administrative preference (Specify admin-preference value,default is 100)
     */
    public readonly adminPreference!: pulumi.Output<number | undefined>;
    /**
     * 'ip': Service IP only; 'port': Service Port only; 'ip-and-port': Both service IP and service port; 'disabled': disable
     * auto-detect;
     */
    public readonly autoDetect!: pulumi.Output<string | undefined>;
    /**
     * Enable DNS Auto Mapping
     */
    public readonly autoMap!: pulumi.Output<number | undefined>;
    /**
     * Specify client IP address
     */
    public readonly clientIp!: pulumi.Output<string | undefined>;
    /**
     * 'resolve-to-ipv4': Use A Query only to resolve FQDN (Default Query type); 'resolve-to-ipv6': Use AAAA Query only to
     * resolve FQDN; 'resolve-to-ipv4-and-ipv6': Use A as well as AAAA Query to resolve FQDN;
     */
    public readonly devResolveAs!: pulumi.Output<string | undefined>;
    /**
     * Specify SLB device name
     */
    public readonly deviceName!: pulumi.Output<string>;
    /**
     * Device hostname
     */
    public readonly domain!: pulumi.Output<string | undefined>;
    /**
     * IP address
     */
    public readonly gatewayIpAddr!: pulumi.Output<string | undefined>;
    /**
     * 'health-check': Enable health Check; 'health-check-disable': Disable health check;
     */
    public readonly healthCheckAction!: pulumi.Output<string | undefined>;
    /**
     * IP address
     */
    public readonly ipAddress!: pulumi.Output<string | undefined>;
    /**
     * IPv6 address
     */
    public readonly ipv6Address!: pulumi.Output<string | undefined>;
    /**
     * Specify maximum number of clients, default is 32768
     */
    public readonly maxClient!: pulumi.Output<number | undefined>;
    /**
     * Run GSLB Protocol in compatible mode with a ACOS 2.x GSLB peer
     */
    public readonly msgFormatAcos2x!: pulumi.Output<number | undefined>;
    public readonly probeTimer!: pulumi.Output<number | undefined>;
    /**
     * Fast GSLB Protocol aging
     */
    public readonly protoAgingFast!: pulumi.Output<number | undefined>;
    /**
     * Specify GSLB Protocol aging time, default is 60
     */
    public readonly protoAgingTime!: pulumi.Output<number | undefined>;
    /**
     * Run GSLB Protocol in compatible mode
     */
    public readonly protoCompatible!: pulumi.Output<number | undefined>;
    /**
     * 'rdt': rdt; 'site-rdt': site-rdt;
     */
    public readonly rdtType!: pulumi.Output<string | undefined>;
    /**
     * Specify Round-delay-time
     */
    public readonly rdtValue!: pulumi.Output<number | undefined>;
    public readonly sessionNumber!: pulumi.Output<number | undefined>;
    public readonly sessionUtilization!: pulumi.Output<number | undefined>;
    /**
     * SiteName
     */
    public readonly siteName!: pulumi.Output<string>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    public readonly vipServer!: pulumi.Output<outputs.GslbSiteSlbDevVipServer | undefined>;

    /**
     * Create a GslbSiteSlbDev resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GslbSiteSlbDevArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbSiteSlbDevArgs | GslbSiteSlbDevState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbSiteSlbDevState | undefined;
            resourceInputs["adminPreference"] = state ? state.adminPreference : undefined;
            resourceInputs["autoDetect"] = state ? state.autoDetect : undefined;
            resourceInputs["autoMap"] = state ? state.autoMap : undefined;
            resourceInputs["clientIp"] = state ? state.clientIp : undefined;
            resourceInputs["devResolveAs"] = state ? state.devResolveAs : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["gatewayIpAddr"] = state ? state.gatewayIpAddr : undefined;
            resourceInputs["healthCheckAction"] = state ? state.healthCheckAction : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["maxClient"] = state ? state.maxClient : undefined;
            resourceInputs["msgFormatAcos2x"] = state ? state.msgFormatAcos2x : undefined;
            resourceInputs["probeTimer"] = state ? state.probeTimer : undefined;
            resourceInputs["protoAgingFast"] = state ? state.protoAgingFast : undefined;
            resourceInputs["protoAgingTime"] = state ? state.protoAgingTime : undefined;
            resourceInputs["protoCompatible"] = state ? state.protoCompatible : undefined;
            resourceInputs["rdtType"] = state ? state.rdtType : undefined;
            resourceInputs["rdtValue"] = state ? state.rdtValue : undefined;
            resourceInputs["sessionNumber"] = state ? state.sessionNumber : undefined;
            resourceInputs["sessionUtilization"] = state ? state.sessionUtilization : undefined;
            resourceInputs["siteName"] = state ? state.siteName : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vipServer"] = state ? state.vipServer : undefined;
        } else {
            const args = argsOrState as GslbSiteSlbDevArgs | undefined;
            if ((!args || args.deviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceName'");
            }
            if ((!args || args.siteName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteName'");
            }
            resourceInputs["adminPreference"] = args ? args.adminPreference : undefined;
            resourceInputs["autoDetect"] = args ? args.autoDetect : undefined;
            resourceInputs["autoMap"] = args ? args.autoMap : undefined;
            resourceInputs["clientIp"] = args ? args.clientIp : undefined;
            resourceInputs["devResolveAs"] = args ? args.devResolveAs : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["gatewayIpAddr"] = args ? args.gatewayIpAddr : undefined;
            resourceInputs["healthCheckAction"] = args ? args.healthCheckAction : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["ipv6Address"] = args ? args.ipv6Address : undefined;
            resourceInputs["maxClient"] = args ? args.maxClient : undefined;
            resourceInputs["msgFormatAcos2x"] = args ? args.msgFormatAcos2x : undefined;
            resourceInputs["probeTimer"] = args ? args.probeTimer : undefined;
            resourceInputs["protoAgingFast"] = args ? args.protoAgingFast : undefined;
            resourceInputs["protoAgingTime"] = args ? args.protoAgingTime : undefined;
            resourceInputs["protoCompatible"] = args ? args.protoCompatible : undefined;
            resourceInputs["rdtType"] = args ? args.rdtType : undefined;
            resourceInputs["rdtValue"] = args ? args.rdtValue : undefined;
            resourceInputs["sessionNumber"] = args ? args.sessionNumber : undefined;
            resourceInputs["sessionUtilization"] = args ? args.sessionUtilization : undefined;
            resourceInputs["siteName"] = args ? args.siteName : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vipServer"] = args ? args.vipServer : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbSiteSlbDev.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbSiteSlbDev resources.
 */
export interface GslbSiteSlbDevState {
    /**
     * Specify administrative preference (Specify admin-preference value,default is 100)
     */
    adminPreference?: pulumi.Input<number>;
    /**
     * 'ip': Service IP only; 'port': Service Port only; 'ip-and-port': Both service IP and service port; 'disabled': disable
     * auto-detect;
     */
    autoDetect?: pulumi.Input<string>;
    /**
     * Enable DNS Auto Mapping
     */
    autoMap?: pulumi.Input<number>;
    /**
     * Specify client IP address
     */
    clientIp?: pulumi.Input<string>;
    /**
     * 'resolve-to-ipv4': Use A Query only to resolve FQDN (Default Query type); 'resolve-to-ipv6': Use AAAA Query only to
     * resolve FQDN; 'resolve-to-ipv4-and-ipv6': Use A as well as AAAA Query to resolve FQDN;
     */
    devResolveAs?: pulumi.Input<string>;
    /**
     * Specify SLB device name
     */
    deviceName?: pulumi.Input<string>;
    /**
     * Device hostname
     */
    domain?: pulumi.Input<string>;
    /**
     * IP address
     */
    gatewayIpAddr?: pulumi.Input<string>;
    /**
     * 'health-check': Enable health Check; 'health-check-disable': Disable health check;
     */
    healthCheckAction?: pulumi.Input<string>;
    /**
     * IP address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Specify maximum number of clients, default is 32768
     */
    maxClient?: pulumi.Input<number>;
    /**
     * Run GSLB Protocol in compatible mode with a ACOS 2.x GSLB peer
     */
    msgFormatAcos2x?: pulumi.Input<number>;
    probeTimer?: pulumi.Input<number>;
    /**
     * Fast GSLB Protocol aging
     */
    protoAgingFast?: pulumi.Input<number>;
    /**
     * Specify GSLB Protocol aging time, default is 60
     */
    protoAgingTime?: pulumi.Input<number>;
    /**
     * Run GSLB Protocol in compatible mode
     */
    protoCompatible?: pulumi.Input<number>;
    /**
     * 'rdt': rdt; 'site-rdt': site-rdt;
     */
    rdtType?: pulumi.Input<string>;
    /**
     * Specify Round-delay-time
     */
    rdtValue?: pulumi.Input<number>;
    sessionNumber?: pulumi.Input<number>;
    sessionUtilization?: pulumi.Input<number>;
    /**
     * SiteName
     */
    siteName?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vipServer?: pulumi.Input<inputs.GslbSiteSlbDevVipServer>;
}

/**
 * The set of arguments for constructing a GslbSiteSlbDev resource.
 */
export interface GslbSiteSlbDevArgs {
    /**
     * Specify administrative preference (Specify admin-preference value,default is 100)
     */
    adminPreference?: pulumi.Input<number>;
    /**
     * 'ip': Service IP only; 'port': Service Port only; 'ip-and-port': Both service IP and service port; 'disabled': disable
     * auto-detect;
     */
    autoDetect?: pulumi.Input<string>;
    /**
     * Enable DNS Auto Mapping
     */
    autoMap?: pulumi.Input<number>;
    /**
     * Specify client IP address
     */
    clientIp?: pulumi.Input<string>;
    /**
     * 'resolve-to-ipv4': Use A Query only to resolve FQDN (Default Query type); 'resolve-to-ipv6': Use AAAA Query only to
     * resolve FQDN; 'resolve-to-ipv4-and-ipv6': Use A as well as AAAA Query to resolve FQDN;
     */
    devResolveAs?: pulumi.Input<string>;
    /**
     * Specify SLB device name
     */
    deviceName: pulumi.Input<string>;
    /**
     * Device hostname
     */
    domain?: pulumi.Input<string>;
    /**
     * IP address
     */
    gatewayIpAddr?: pulumi.Input<string>;
    /**
     * 'health-check': Enable health Check; 'health-check-disable': Disable health check;
     */
    healthCheckAction?: pulumi.Input<string>;
    /**
     * IP address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Specify maximum number of clients, default is 32768
     */
    maxClient?: pulumi.Input<number>;
    /**
     * Run GSLB Protocol in compatible mode with a ACOS 2.x GSLB peer
     */
    msgFormatAcos2x?: pulumi.Input<number>;
    probeTimer?: pulumi.Input<number>;
    /**
     * Fast GSLB Protocol aging
     */
    protoAgingFast?: pulumi.Input<number>;
    /**
     * Specify GSLB Protocol aging time, default is 60
     */
    protoAgingTime?: pulumi.Input<number>;
    /**
     * Run GSLB Protocol in compatible mode
     */
    protoCompatible?: pulumi.Input<number>;
    /**
     * 'rdt': rdt; 'site-rdt': site-rdt;
     */
    rdtType?: pulumi.Input<string>;
    /**
     * Specify Round-delay-time
     */
    rdtValue?: pulumi.Input<number>;
    sessionNumber?: pulumi.Input<number>;
    sessionUtilization?: pulumi.Input<number>;
    /**
     * SiteName
     */
    siteName: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vipServer?: pulumi.Input<inputs.GslbSiteSlbDevVipServer>;
}
