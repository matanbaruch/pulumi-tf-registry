// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VrrpAFailOverPolicyTemplate extends pulumi.CustomResource {
    /**
     * Get an existing VrrpAFailOverPolicyTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VrrpAFailOverPolicyTemplateState, opts?: pulumi.CustomResourceOptions): VrrpAFailOverPolicyTemplate {
        return new VrrpAFailOverPolicyTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/vrrpAFailOverPolicyTemplate:VrrpAFailOverPolicyTemplate';

    /**
     * Returns true if the given object is an instance of VrrpAFailOverPolicyTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VrrpAFailOverPolicyTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VrrpAFailOverPolicyTemplate.__pulumiType;
    }

    public readonly bgp!: pulumi.Output<outputs.VrrpAFailOverPolicyTemplateBgp | undefined>;
    public readonly gateway!: pulumi.Output<outputs.VrrpAFailOverPolicyTemplateGateway | undefined>;
    public readonly interfaces!: pulumi.Output<outputs.VrrpAFailOverPolicyTemplateInterface[] | undefined>;
    /**
     * VRRP-A fail over policy template name
     */
    public readonly name!: pulumi.Output<string>;
    public readonly route!: pulumi.Output<outputs.VrrpAFailOverPolicyTemplateRoute | undefined>;
    public readonly trunkCfgs!: pulumi.Output<outputs.VrrpAFailOverPolicyTemplateTrunkCfg[] | undefined>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    public readonly vlanCfgs!: pulumi.Output<outputs.VrrpAFailOverPolicyTemplateVlanCfg[] | undefined>;

    /**
     * Create a VrrpAFailOverPolicyTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VrrpAFailOverPolicyTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VrrpAFailOverPolicyTemplateArgs | VrrpAFailOverPolicyTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VrrpAFailOverPolicyTemplateState | undefined;
            resourceInputs["bgp"] = state ? state.bgp : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["route"] = state ? state.route : undefined;
            resourceInputs["trunkCfgs"] = state ? state.trunkCfgs : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["vlanCfgs"] = state ? state.vlanCfgs : undefined;
        } else {
            const args = argsOrState as VrrpAFailOverPolicyTemplateArgs | undefined;
            resourceInputs["bgp"] = args ? args.bgp : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["route"] = args ? args.route : undefined;
            resourceInputs["trunkCfgs"] = args ? args.trunkCfgs : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["vlanCfgs"] = args ? args.vlanCfgs : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VrrpAFailOverPolicyTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VrrpAFailOverPolicyTemplate resources.
 */
export interface VrrpAFailOverPolicyTemplateState {
    bgp?: pulumi.Input<inputs.VrrpAFailOverPolicyTemplateBgp>;
    gateway?: pulumi.Input<inputs.VrrpAFailOverPolicyTemplateGateway>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.VrrpAFailOverPolicyTemplateInterface>[]>;
    /**
     * VRRP-A fail over policy template name
     */
    name?: pulumi.Input<string>;
    route?: pulumi.Input<inputs.VrrpAFailOverPolicyTemplateRoute>;
    trunkCfgs?: pulumi.Input<pulumi.Input<inputs.VrrpAFailOverPolicyTemplateTrunkCfg>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vlanCfgs?: pulumi.Input<pulumi.Input<inputs.VrrpAFailOverPolicyTemplateVlanCfg>[]>;
}

/**
 * The set of arguments for constructing a VrrpAFailOverPolicyTemplate resource.
 */
export interface VrrpAFailOverPolicyTemplateArgs {
    bgp?: pulumi.Input<inputs.VrrpAFailOverPolicyTemplateBgp>;
    gateway?: pulumi.Input<inputs.VrrpAFailOverPolicyTemplateGateway>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.VrrpAFailOverPolicyTemplateInterface>[]>;
    /**
     * VRRP-A fail over policy template name
     */
    name?: pulumi.Input<string>;
    route?: pulumi.Input<inputs.VrrpAFailOverPolicyTemplateRoute>;
    trunkCfgs?: pulumi.Input<pulumi.Input<inputs.VrrpAFailOverPolicyTemplateTrunkCfg>[]>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    vlanCfgs?: pulumi.Input<pulumi.Input<inputs.VrrpAFailOverPolicyTemplateVlanCfg>[]>;
}
