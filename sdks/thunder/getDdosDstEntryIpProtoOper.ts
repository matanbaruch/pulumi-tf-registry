// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDdosDstEntryIpProtoOper(args: GetDdosDstEntryIpProtoOperArgs, opts?: pulumi.InvokeOptions): Promise<GetDdosDstEntryIpProtoOperResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thunder:index/getDdosDstEntryIpProtoOper:getDdosDstEntryIpProtoOper", {
        "dstEntryName": args.dstEntryName,
        "id": args.id,
        "ipFilteringPolicyOper": args.ipFilteringPolicyOper,
        "oper": args.oper,
        "portNum": args.portNum,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDdosDstEntryIpProtoOper.
 */
export interface GetDdosDstEntryIpProtoOperArgs {
    dstEntryName: string;
    id?: string;
    ipFilteringPolicyOper?: inputs.GetDdosDstEntryIpProtoOperIpFilteringPolicyOper;
    oper?: inputs.GetDdosDstEntryIpProtoOperOper;
    portNum: number;
}

/**
 * A collection of values returned by getDdosDstEntryIpProtoOper.
 */
export interface GetDdosDstEntryIpProtoOperResult {
    readonly dstEntryName: string;
    readonly id: string;
    readonly ipFilteringPolicyOper?: outputs.GetDdosDstEntryIpProtoOperIpFilteringPolicyOper;
    readonly oper?: outputs.GetDdosDstEntryIpProtoOperOper;
    readonly portNum: number;
}
export function getDdosDstEntryIpProtoOperOutput(args: GetDdosDstEntryIpProtoOperOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDdosDstEntryIpProtoOperResult> {
    return pulumi.output(args).apply((a: any) => getDdosDstEntryIpProtoOper(a, opts))
}

/**
 * A collection of arguments for invoking getDdosDstEntryIpProtoOper.
 */
export interface GetDdosDstEntryIpProtoOperOutputArgs {
    dstEntryName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipFilteringPolicyOper?: pulumi.Input<inputs.GetDdosDstEntryIpProtoOperIpFilteringPolicyOperArgs>;
    oper?: pulumi.Input<inputs.GetDdosDstEntryIpProtoOperOperArgs>;
    portNum: pulumi.Input<number>;
}
