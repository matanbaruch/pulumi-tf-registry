// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class GslbServiceGroup extends pulumi.CustomResource {
    /**
     * Get an existing GslbServiceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbServiceGroupState, opts?: pulumi.CustomResourceOptions): GslbServiceGroup {
        return new GslbServiceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/gslbServiceGroup:GslbServiceGroup';

    /**
     * Returns true if the given object is an instance of GslbServiceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbServiceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbServiceGroup.__pulumiType;
    }

    /**
     * Dependency on site
     */
    public readonly dependencySite!: pulumi.Output<number | undefined>;
    /**
     * Disable all members
     */
    public readonly disable!: pulumi.Output<number | undefined>;
    public readonly disableSiteLists!: pulumi.Output<outputs.GslbServiceGroupDisableSiteList[] | undefined>;
    public readonly members!: pulumi.Output<outputs.GslbServiceGroupMember[] | undefined>;
    /**
     * Specify aging-time, unit: min, default is 5 (Aging time)
     */
    public readonly persistentAgingTime!: pulumi.Output<number | undefined>;
    /**
     * Specify IPv6 mask length, default is 128
     */
    public readonly persistentIpv6Mask!: pulumi.Output<number | undefined>;
    /**
     * Specify IP mask, default is /32
     */
    public readonly persistentMask!: pulumi.Output<string | undefined>;
    /**
     * Persistent based on site
     */
    public readonly persistentSite!: pulumi.Output<number | undefined>;
    /**
     * Specify Service Group name
     */
    public readonly serviceGroupName!: pulumi.Output<string>;
    /**
     * Customized tag
     */
    public readonly userTag!: pulumi.Output<string | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a GslbServiceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GslbServiceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbServiceGroupArgs | GslbServiceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbServiceGroupState | undefined;
            resourceInputs["dependencySite"] = state ? state.dependencySite : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["disableSiteLists"] = state ? state.disableSiteLists : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["persistentAgingTime"] = state ? state.persistentAgingTime : undefined;
            resourceInputs["persistentIpv6Mask"] = state ? state.persistentIpv6Mask : undefined;
            resourceInputs["persistentMask"] = state ? state.persistentMask : undefined;
            resourceInputs["persistentSite"] = state ? state.persistentSite : undefined;
            resourceInputs["serviceGroupName"] = state ? state.serviceGroupName : undefined;
            resourceInputs["userTag"] = state ? state.userTag : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as GslbServiceGroupArgs | undefined;
            if ((!args || args.serviceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceGroupName'");
            }
            resourceInputs["dependencySite"] = args ? args.dependencySite : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["disableSiteLists"] = args ? args.disableSiteLists : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["persistentAgingTime"] = args ? args.persistentAgingTime : undefined;
            resourceInputs["persistentIpv6Mask"] = args ? args.persistentIpv6Mask : undefined;
            resourceInputs["persistentMask"] = args ? args.persistentMask : undefined;
            resourceInputs["persistentSite"] = args ? args.persistentSite : undefined;
            resourceInputs["serviceGroupName"] = args ? args.serviceGroupName : undefined;
            resourceInputs["userTag"] = args ? args.userTag : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbServiceGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbServiceGroup resources.
 */
export interface GslbServiceGroupState {
    /**
     * Dependency on site
     */
    dependencySite?: pulumi.Input<number>;
    /**
     * Disable all members
     */
    disable?: pulumi.Input<number>;
    disableSiteLists?: pulumi.Input<pulumi.Input<inputs.GslbServiceGroupDisableSiteList>[]>;
    members?: pulumi.Input<pulumi.Input<inputs.GslbServiceGroupMember>[]>;
    /**
     * Specify aging-time, unit: min, default is 5 (Aging time)
     */
    persistentAgingTime?: pulumi.Input<number>;
    /**
     * Specify IPv6 mask length, default is 128
     */
    persistentIpv6Mask?: pulumi.Input<number>;
    /**
     * Specify IP mask, default is /32
     */
    persistentMask?: pulumi.Input<string>;
    /**
     * Persistent based on site
     */
    persistentSite?: pulumi.Input<number>;
    /**
     * Specify Service Group name
     */
    serviceGroupName?: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GslbServiceGroup resource.
 */
export interface GslbServiceGroupArgs {
    /**
     * Dependency on site
     */
    dependencySite?: pulumi.Input<number>;
    /**
     * Disable all members
     */
    disable?: pulumi.Input<number>;
    disableSiteLists?: pulumi.Input<pulumi.Input<inputs.GslbServiceGroupDisableSiteList>[]>;
    members?: pulumi.Input<pulumi.Input<inputs.GslbServiceGroupMember>[]>;
    /**
     * Specify aging-time, unit: min, default is 5 (Aging time)
     */
    persistentAgingTime?: pulumi.Input<number>;
    /**
     * Specify IPv6 mask length, default is 128
     */
    persistentIpv6Mask?: pulumi.Input<number>;
    /**
     * Specify IP mask, default is /32
     */
    persistentMask?: pulumi.Input<string>;
    /**
     * Persistent based on site
     */
    persistentSite?: pulumi.Input<number>;
    /**
     * Specify Service Group name
     */
    serviceGroupName: pulumi.Input<string>;
    /**
     * Customized tag
     */
    userTag?: pulumi.Input<string>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
