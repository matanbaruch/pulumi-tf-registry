// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate extends pulumi.CustomResource {
    /**
     * Get an existing VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateState, opts?: pulumi.CustomResourceOptions): VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate {
        return new VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/visibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate:VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate';

    /**
     * Returns true if the given object is an instance of VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate.__pulumiType;
    }

    /**
     * Enable automatic packet-capture for app data in handshake
     */
    public readonly appDataInHandshake!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for attempt to reuse sess in diff context
     */
    public readonly attemptToReuseSessInDiffContext!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad alert record
     */
    public readonly badAlertRecord!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad authentication type
     */
    public readonly badAuthenticationType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad change cipher spec
     */
    public readonly badChangeCipherSpec!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad checksum
     */
    public readonly badChecksum!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad data returned by callback
     */
    public readonly badDataReturnedByCallback!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad decompression
     */
    public readonly badDecompression!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad dh g length
     */
    public readonly badDhGLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad dh p length
     */
    public readonly badDhPLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad dh pub key length
     */
    public readonly badDhPubKeyLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad digest length
     */
    public readonly badDigestLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad dsa signature
     */
    public readonly badDsaSignature!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad ecc cert
     */
    public readonly badEccCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad ecdsa sig
     */
    public readonly badEcdsaSig!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad ecpoint
     */
    public readonly badEcpoint!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad handshake length
     */
    public readonly badHandshakeLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad hello request
     */
    public readonly badHelloRequest!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad length
     */
    public readonly badLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad mac decode
     */
    public readonly badMacDecode!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad message type
     */
    public readonly badMessageType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad packet length
     */
    public readonly badPacketLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad protocol version counter
     */
    public readonly badProtocolVersionCounter!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad response argument
     */
    public readonly badResponseArgument!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad rsa decrypt
     */
    public readonly badRsaDecrypt!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad rsa e length
     */
    public readonly badRsaELength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad rsa encrypt
     */
    public readonly badRsaEncrypt!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad rsa modulus length
     */
    public readonly badRsaModulusLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad rsa signature
     */
    public readonly badRsaSignature!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad signature
     */
    public readonly badSignature!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad ssl filetype
     */
    public readonly badSslFiletype!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad ssl session id length
     */
    public readonly badSslSessionIdLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad state
     */
    public readonly badState!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bad write retry
     */
    public readonly badWriteRetry!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bio not set
     */
    public readonly bioNotSet!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for block cipher pad is wrong
     */
    public readonly blockCipherPadIsWrong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for bn lib
     */
    public readonly bnLib!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ca dn length mismatch
     */
    public readonly caDnLengthMismatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ca dn too long
     */
    public readonly caDnTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ccs received early
     */
    public readonly ccsReceivedEarly!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for cert length mismatch
     */
    public readonly certLengthMismatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for certificate verify failed
     */
    public readonly certificateVerifyFailed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for challenge is different
     */
    public readonly challengeIsDifferent!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for cipher code wrong length
     */
    public readonly cipherCodeWrongLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for cipher or hash unavailable
     */
    public readonly cipherOrHashUnavailable!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for cipher table src error
     */
    public readonly cipherTableSrcError!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for clienthello tlsext
     */
    public readonly clienthelloTlsext!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for compressed length too long
     */
    public readonly compressedLengthTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for compression failure
     */
    public readonly compressionFailure!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for compression library error
     */
    public readonly compressionLibraryError!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for connection id is different
     */
    public readonly connectionIdIsDifferent!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for connection type not set
     */
    public readonly connectionTypeNotSet!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for cookie mismatch
     */
    public readonly cookieMismatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for data between ccs and finished
     */
    public readonly dataBetweenCcsAndFinished!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for data length too long
     */
    public readonly dataLengthTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for decryption failed
     */
    public readonly decryptionFailed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for decryption failed or bad record mac
     */
    public readonly decryptionFailedOrBadRecordMac!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for dh public value length is wrong
     */
    public readonly dhPublicValueLengthIsWrong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for digest check failed
     */
    public readonly digestCheckFailed!: pulumi.Output<number | undefined>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    public readonly duration!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for encrypted length too long
     */
    public readonly encryptedLengthTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for error generating tmp rsa key
     */
    public readonly errorGeneratingTmpRsaKey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for error in received cipher list
     */
    public readonly errorInReceivedCipherList!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for excessive message size
     */
    public readonly excessiveMessageSize!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for extra data in message
     */
    public readonly extraDataInMessage!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for got a fin before a ccs
     */
    public readonly gotAFinBeforeACcs!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for http request
     */
    public readonly httpRequest!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for https proxy request
     */
    public readonly httpsProxyRequest!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for illegal padding
     */
    public readonly illegalPadding!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for inappropriate fallback
     */
    public readonly inappropriateFallback!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for invalid challenge length
     */
    public readonly invalidChallengeLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for invalid command
     */
    public readonly invalidCommand!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for invalid purpose
     */
    public readonly invalidPurpose!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for invalid status response
     */
    public readonly invalidStatusResponse!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for invalid trust
     */
    public readonly invalidTrust!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for key arg too long
     */
    public readonly keyArgTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5
     */
    public readonly krb5!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 client cc principal
     */
    public readonly krb5ClientCcPrincipal!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 client get cred
     */
    public readonly krb5ClientGetCred!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 client init
     */
    public readonly krb5ClientInit!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 client mk_req
     */
    public readonly krb5ClientMkReq!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 server bad ticket
     */
    public readonly krb5ServerBadTicket!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 server init
     */
    public readonly krb5ServerInit!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 server rd_req
     */
    public readonly krb5ServerRdReq!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 server tkt expired
     */
    public readonly krb5ServerTktExpired!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 server tkt not yet valid
     */
    public readonly krb5ServerTktNotYetValid!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for krb5 server tkt skew
     */
    public readonly krb5ServerTktSkew!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for length mismatch
     */
    public readonly lengthMismatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for length too short
     */
    public readonly lengthTooShort!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for library bug
     */
    public readonly libraryBug!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for library has no ciphers
     */
    public readonly libraryHasNoCiphers!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for mast key too long
     */
    public readonly mastKeyTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for message too long
     */
    public readonly messageTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing dh dsa cert
     */
    public readonly missingDhDsaCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing dh key
     */
    public readonly missingDhKey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing dh rsa cert
     */
    public readonly missingDhRsaCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing dsa signing cert
     */
    public readonly missingDsaSigningCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing export tmp dh key
     */
    public readonly missingExportTmpDhKey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing export tmp rsa key
     */
    public readonly missingExportTmpRsaKey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing rsa certificate
     */
    public readonly missingRsaCertificate!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing rsa encrypting cert
     */
    public readonly missingRsaEncryptingCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing rsa signing cert
     */
    public readonly missingRsaSigningCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing tmp dh key
     */
    public readonly missingTmpDhKey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing tmp rsa key
     */
    public readonly missingTmpRsaKey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing tmp rsa pkey
     */
    public readonly missingTmpRsaPkey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for missing verify message
     */
    public readonly missingVerifyMessage!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for multiple sgc restarts
     */
    public readonly multipleSgcRestarts!: pulumi.Output<number | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable automatic packet-capture for no certificate assigned
     */
    public readonly noCertificateAssigned!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no certificate returned
     */
    public readonly noCertificateReturned!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no certificate set
     */
    public readonly noCertificateSet!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no certificate specified
     */
    public readonly noCertificateSpecified!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no certificates returned
     */
    public readonly noCertificatesReturned!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no cipher list
     */
    public readonly noCipherList!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no cipher match
     */
    public readonly noCipherMatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no ciphers available
     */
    public readonly noCiphersAvailable!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no ciphers passed
     */
    public readonly noCiphersPassed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no ciphers specified
     */
    public readonly noCiphersSpecified!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no client cert received
     */
    public readonly noClientCertReceived!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no compression specified
     */
    public readonly noCompressionSpecified!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no method specified
     */
    public readonly noMethodSpecified!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no private key assigned
     */
    public readonly noPrivateKeyAssigned!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no privatekey
     */
    public readonly noPrivatekey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no protocols available
     */
    public readonly noProtocolsAvailable!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no publickey
     */
    public readonly noPublickey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no required digest
     */
    public readonly noRequiredDigest!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no shared cipher
     */
    public readonly noSharedCipher!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for no verify callback
     */
    public readonly noVerifyCallback!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for non sslv2 initial packet
     */
    public readonly nonSslv2InitialPacket!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for null ssl ctx
     */
    public readonly nullSslCtx!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for null ssl method passed
     */
    public readonly nullSslMethodPassed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for old session cipher not returned
     */
    public readonly oldSessionCipherNotReturned!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for packet length too long
     */
    public readonly packetLengthTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for parse tlsext
     */
    public readonly parseTlsext!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for path too long
     */
    public readonly pathTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for peer did not return a certificate
     */
    public readonly peerDidNotReturnACertificate!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for peer error
     */
    public readonly peerError!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for peer error certificate
     */
    public readonly peerErrorCertificate!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for peer error no certificate
     */
    public readonly peerErrorNoCertificate!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for peer error no cipher
     */
    public readonly peerErrorNoCipher!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for peer error unsupported certificate type
     */
    public readonly peerErrorUnsupportedCertificateType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for pre mac length too long
     */
    public readonly preMacLengthTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for problems mapping cipher functions
     */
    public readonly problemsMappingCipherFunctions!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for protocol is shutdown
     */
    public readonly protocolIsShutdown!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for public key encrypt error
     */
    public readonly publicKeyEncryptError!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for public key is not rsa
     */
    public readonly publicKeyIsNotRsa!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for public key not rsa
     */
    public readonly publicKeyNotRsa!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for read bio not set
     */
    public readonly readBioNotSet!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for read wrong packet type
     */
    public readonly readWrongPacketType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for record length mismatch
     */
    public readonly recordLengthMismatch!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for record too large
     */
    public readonly recordTooLarge!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for record too small
     */
    public readonly recordTooSmall!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for required cipher missing
     */
    public readonly requiredCipherMissing!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for reuse cert length not zero
     */
    public readonly reuseCertLengthNotZero!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for reuse cert type not zero
     */
    public readonly reuseCertTypeNotZero!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for reuse cipher list not zero
     */
    public readonly reuseCipherListNotZero!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for scsv received when renegotiating
     */
    public readonly scsvReceivedWhenRenegotiating!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for serverhello tlsext
     */
    public readonly serverhelloTlsext!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for session id context uninitialized
     */
    public readonly sessionIdContextUninitialized!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for short read
     */
    public readonly shortRead!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for signature for non signing certificate
     */
    public readonly signatureForNonSigningCertificate!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl23 doing session id reuse
     */
    public readonly ssl23DoingSessionIdReuse!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl2 connection id too long
     */
    public readonly ssl2ConnectionIdTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl3 ext invalid servername
     */
    public readonly ssl3ExtInvalidServername!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl3 ext invalid servername type
     */
    public readonly ssl3ExtInvalidServernameType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl3 session id too long
     */
    public readonly ssl3SessionIdTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl3 session id too short
     */
    public readonly ssl3SessionIdTooShort!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl ctx has no default ssl version
     */
    public readonly sslCtxHasNoDefaultSslVersion!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl handshake failure
     */
    public readonly sslHandshakeFailure!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl library has no ciphers
     */
    public readonly sslLibraryHasNoCiphers!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl session id callback failed
     */
    public readonly sslSessionIdCallbackFailed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl session id conflict
     */
    public readonly sslSessionIdConflict!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl session id context too long
     */
    public readonly sslSessionIdContextTooLong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl session id has bad length
     */
    public readonly sslSessionIdHasBadLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for ssl session id is different
     */
    public readonly sslSessionIdIsDifferent!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert bad certificate
     */
    public readonly sslv3AlertBadCertificate!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert bad record mac
     */
    public readonly sslv3AlertBadRecordMac!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate expired
     */
    public readonly sslv3AlertCertificateExpired!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate revoked
     */
    public readonly sslv3AlertCertificateRevoked!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate unknown
     */
    public readonly sslv3AlertCertificateUnknown!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert decompression failure
     */
    public readonly sslv3AlertDecompressionFailure!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert handshake failure
     */
    public readonly sslv3AlertHandshakeFailure!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert illegal parameter
     */
    public readonly sslv3AlertIllegalParameter!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert no certificate
     */
    public readonly sslv3AlertNoCertificate!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error cert
     */
    public readonly sslv3AlertPeerErrorCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error no cert
     */
    public readonly sslv3AlertPeerErrorNoCert!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error no cipher
     */
    public readonly sslv3AlertPeerErrorNoCipher!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error unsupp cert type
     */
    public readonly sslv3AlertPeerErrorUnsuppCertType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert unexpected msg
     */
    public readonly sslv3AlertUnexpectedMsg!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert unknown remote err type
     */
    public readonly sslv3AlertUnknownRemoteErrType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for sslv3 alert unspported cert
     */
    public readonly sslv3AlertUnspportedCert!: pulumi.Output<number | undefined>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    public readonly thresholdExceededBy!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tls client cert req with anon cipher
     */
    public readonly tlsClientCertReqWithAnonCipher!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tls invalid ecpointformat list
     */
    public readonly tlsInvalidEcpointformatList!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tls peer did not respond with cert list
     */
    public readonly tlsPeerDidNotRespondWithCertList!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tls rsa encrypted value length is wrong
     */
    public readonly tlsRsaEncryptedValueLengthIsWrong!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert access denied
     */
    public readonly tlsv1AlertAccessDenied!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decode error
     */
    public readonly tlsv1AlertDecodeError!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decrypt error
     */
    public readonly tlsv1AlertDecryptError!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decryption failed
     */
    public readonly tlsv1AlertDecryptionFailed!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert export restriction
     */
    public readonly tlsv1AlertExportRestriction!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert insufficient security
     */
    public readonly tlsv1AlertInsufficientSecurity!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert internal error
     */
    public readonly tlsv1AlertInternalError!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert no renegotiation
     */
    public readonly tlsv1AlertNoRenegotiation!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert protocol version
     */
    public readonly tlsv1AlertProtocolVersion!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert record overflow
     */
    public readonly tlsv1AlertRecordOverflow!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert unknown ca
     */
    public readonly tlsv1AlertUnknownCa!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tlsv1 alert user cancelled
     */
    public readonly tlsv1AlertUserCancelled!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for tried to use unsupported cipher
     */
    public readonly triedToUseUnsupportedCipher!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to decode dh certs
     */
    public readonly unableToDecodeDhCerts!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to extract public key
     */
    public readonly unableToExtractPublicKey!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to find dh parameters
     */
    public readonly unableToFindDhParameters!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to find public key parameters
     */
    public readonly unableToFindPublicKeyParameters!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to find ssl method
     */
    public readonly unableToFindSslMethod!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to load ssl2 md5 routines
     */
    public readonly unableToLoadSsl2Md5Routines!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to load ssl3 md5 routines
     */
    public readonly unableToLoadSsl3Md5Routines!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unable to load ssl3 sha1 routines
     */
    public readonly unableToLoadSsl3Sha1Routines!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unexpected message
     */
    public readonly unexpectedMessage!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unexpected record
     */
    public readonly unexpectedRecord!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for uninitialized
     */
    public readonly uninitialized!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown alert type
     */
    public readonly unknownAlertType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown certificate type
     */
    public readonly unknownCertificateType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown cipher returned
     */
    public readonly unknownCipherReturned!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown cipher type
     */
    public readonly unknownCipherType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown key exchange type
     */
    public readonly unknownKeyExchangeType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown pkey type
     */
    public readonly unknownPkeyType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown protocol
     */
    public readonly unknownProtocol!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown remote error type
     */
    public readonly unknownRemoteErrorType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown ssl version
     */
    public readonly unknownSslVersion!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unknown state
     */
    public readonly unknownState!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported cipher
     */
    public readonly unsupportedCipher!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported compression algorithm
     */
    public readonly unsupportedCompressionAlgorithm!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported digest type
     */
    public readonly unsupportedDigestType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported elliptic curve
     */
    public readonly unsupportedEllipticCurve!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported option
     */
    public readonly unsupportedOption!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported protocol
     */
    public readonly unsupportedProtocol!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported ssl version
     */
    public readonly unsupportedSslVersion!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for unsupported status type
     */
    public readonly unsupportedStatusType!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;
    /**
     * Enable automatic packet-capture for write bio not set
     */
    public readonly writeBioNotSet!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for wrong cipher returned
     */
    public readonly wrongCipherReturned!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for wrong counter of key bits
     */
    public readonly wrongCounterOfKeyBits!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for wrong message type
     */
    public readonly wrongMessageType!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for wrong signature length
     */
    public readonly wrongSignatureLength!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for wrong signature size
     */
    public readonly wrongSignatureSize!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for wrong ssl version
     */
    public readonly wrongSslVersion!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for wrong version counter
     */
    public readonly wrongVersionCounter!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for x509 lib
     */
    public readonly x509Lib!: pulumi.Output<number | undefined>;
    /**
     * Enable automatic packet-capture for x509 verification setup problems
     */
    public readonly x509VerificationSetupProblems!: pulumi.Output<number | undefined>;

    /**
     * Create a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateArgs | VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateState | undefined;
            resourceInputs["appDataInHandshake"] = state ? state.appDataInHandshake : undefined;
            resourceInputs["attemptToReuseSessInDiffContext"] = state ? state.attemptToReuseSessInDiffContext : undefined;
            resourceInputs["badAlertRecord"] = state ? state.badAlertRecord : undefined;
            resourceInputs["badAuthenticationType"] = state ? state.badAuthenticationType : undefined;
            resourceInputs["badChangeCipherSpec"] = state ? state.badChangeCipherSpec : undefined;
            resourceInputs["badChecksum"] = state ? state.badChecksum : undefined;
            resourceInputs["badDataReturnedByCallback"] = state ? state.badDataReturnedByCallback : undefined;
            resourceInputs["badDecompression"] = state ? state.badDecompression : undefined;
            resourceInputs["badDhGLength"] = state ? state.badDhGLength : undefined;
            resourceInputs["badDhPLength"] = state ? state.badDhPLength : undefined;
            resourceInputs["badDhPubKeyLength"] = state ? state.badDhPubKeyLength : undefined;
            resourceInputs["badDigestLength"] = state ? state.badDigestLength : undefined;
            resourceInputs["badDsaSignature"] = state ? state.badDsaSignature : undefined;
            resourceInputs["badEccCert"] = state ? state.badEccCert : undefined;
            resourceInputs["badEcdsaSig"] = state ? state.badEcdsaSig : undefined;
            resourceInputs["badEcpoint"] = state ? state.badEcpoint : undefined;
            resourceInputs["badHandshakeLength"] = state ? state.badHandshakeLength : undefined;
            resourceInputs["badHelloRequest"] = state ? state.badHelloRequest : undefined;
            resourceInputs["badLength"] = state ? state.badLength : undefined;
            resourceInputs["badMacDecode"] = state ? state.badMacDecode : undefined;
            resourceInputs["badMessageType"] = state ? state.badMessageType : undefined;
            resourceInputs["badPacketLength"] = state ? state.badPacketLength : undefined;
            resourceInputs["badProtocolVersionCounter"] = state ? state.badProtocolVersionCounter : undefined;
            resourceInputs["badResponseArgument"] = state ? state.badResponseArgument : undefined;
            resourceInputs["badRsaDecrypt"] = state ? state.badRsaDecrypt : undefined;
            resourceInputs["badRsaELength"] = state ? state.badRsaELength : undefined;
            resourceInputs["badRsaEncrypt"] = state ? state.badRsaEncrypt : undefined;
            resourceInputs["badRsaModulusLength"] = state ? state.badRsaModulusLength : undefined;
            resourceInputs["badRsaSignature"] = state ? state.badRsaSignature : undefined;
            resourceInputs["badSignature"] = state ? state.badSignature : undefined;
            resourceInputs["badSslFiletype"] = state ? state.badSslFiletype : undefined;
            resourceInputs["badSslSessionIdLength"] = state ? state.badSslSessionIdLength : undefined;
            resourceInputs["badState"] = state ? state.badState : undefined;
            resourceInputs["badWriteRetry"] = state ? state.badWriteRetry : undefined;
            resourceInputs["bioNotSet"] = state ? state.bioNotSet : undefined;
            resourceInputs["blockCipherPadIsWrong"] = state ? state.blockCipherPadIsWrong : undefined;
            resourceInputs["bnLib"] = state ? state.bnLib : undefined;
            resourceInputs["caDnLengthMismatch"] = state ? state.caDnLengthMismatch : undefined;
            resourceInputs["caDnTooLong"] = state ? state.caDnTooLong : undefined;
            resourceInputs["ccsReceivedEarly"] = state ? state.ccsReceivedEarly : undefined;
            resourceInputs["certLengthMismatch"] = state ? state.certLengthMismatch : undefined;
            resourceInputs["certificateVerifyFailed"] = state ? state.certificateVerifyFailed : undefined;
            resourceInputs["challengeIsDifferent"] = state ? state.challengeIsDifferent : undefined;
            resourceInputs["cipherCodeWrongLength"] = state ? state.cipherCodeWrongLength : undefined;
            resourceInputs["cipherOrHashUnavailable"] = state ? state.cipherOrHashUnavailable : undefined;
            resourceInputs["cipherTableSrcError"] = state ? state.cipherTableSrcError : undefined;
            resourceInputs["clienthelloTlsext"] = state ? state.clienthelloTlsext : undefined;
            resourceInputs["compressedLengthTooLong"] = state ? state.compressedLengthTooLong : undefined;
            resourceInputs["compressionFailure"] = state ? state.compressionFailure : undefined;
            resourceInputs["compressionLibraryError"] = state ? state.compressionLibraryError : undefined;
            resourceInputs["connectionIdIsDifferent"] = state ? state.connectionIdIsDifferent : undefined;
            resourceInputs["connectionTypeNotSet"] = state ? state.connectionTypeNotSet : undefined;
            resourceInputs["cookieMismatch"] = state ? state.cookieMismatch : undefined;
            resourceInputs["dataBetweenCcsAndFinished"] = state ? state.dataBetweenCcsAndFinished : undefined;
            resourceInputs["dataLengthTooLong"] = state ? state.dataLengthTooLong : undefined;
            resourceInputs["decryptionFailed"] = state ? state.decryptionFailed : undefined;
            resourceInputs["decryptionFailedOrBadRecordMac"] = state ? state.decryptionFailedOrBadRecordMac : undefined;
            resourceInputs["dhPublicValueLengthIsWrong"] = state ? state.dhPublicValueLengthIsWrong : undefined;
            resourceInputs["digestCheckFailed"] = state ? state.digestCheckFailed : undefined;
            resourceInputs["duration"] = state ? state.duration : undefined;
            resourceInputs["encryptedLengthTooLong"] = state ? state.encryptedLengthTooLong : undefined;
            resourceInputs["errorGeneratingTmpRsaKey"] = state ? state.errorGeneratingTmpRsaKey : undefined;
            resourceInputs["errorInReceivedCipherList"] = state ? state.errorInReceivedCipherList : undefined;
            resourceInputs["excessiveMessageSize"] = state ? state.excessiveMessageSize : undefined;
            resourceInputs["extraDataInMessage"] = state ? state.extraDataInMessage : undefined;
            resourceInputs["gotAFinBeforeACcs"] = state ? state.gotAFinBeforeACcs : undefined;
            resourceInputs["httpRequest"] = state ? state.httpRequest : undefined;
            resourceInputs["httpsProxyRequest"] = state ? state.httpsProxyRequest : undefined;
            resourceInputs["illegalPadding"] = state ? state.illegalPadding : undefined;
            resourceInputs["inappropriateFallback"] = state ? state.inappropriateFallback : undefined;
            resourceInputs["invalidChallengeLength"] = state ? state.invalidChallengeLength : undefined;
            resourceInputs["invalidCommand"] = state ? state.invalidCommand : undefined;
            resourceInputs["invalidPurpose"] = state ? state.invalidPurpose : undefined;
            resourceInputs["invalidStatusResponse"] = state ? state.invalidStatusResponse : undefined;
            resourceInputs["invalidTrust"] = state ? state.invalidTrust : undefined;
            resourceInputs["keyArgTooLong"] = state ? state.keyArgTooLong : undefined;
            resourceInputs["krb5"] = state ? state.krb5 : undefined;
            resourceInputs["krb5ClientCcPrincipal"] = state ? state.krb5ClientCcPrincipal : undefined;
            resourceInputs["krb5ClientGetCred"] = state ? state.krb5ClientGetCred : undefined;
            resourceInputs["krb5ClientInit"] = state ? state.krb5ClientInit : undefined;
            resourceInputs["krb5ClientMkReq"] = state ? state.krb5ClientMkReq : undefined;
            resourceInputs["krb5ServerBadTicket"] = state ? state.krb5ServerBadTicket : undefined;
            resourceInputs["krb5ServerInit"] = state ? state.krb5ServerInit : undefined;
            resourceInputs["krb5ServerRdReq"] = state ? state.krb5ServerRdReq : undefined;
            resourceInputs["krb5ServerTktExpired"] = state ? state.krb5ServerTktExpired : undefined;
            resourceInputs["krb5ServerTktNotYetValid"] = state ? state.krb5ServerTktNotYetValid : undefined;
            resourceInputs["krb5ServerTktSkew"] = state ? state.krb5ServerTktSkew : undefined;
            resourceInputs["lengthMismatch"] = state ? state.lengthMismatch : undefined;
            resourceInputs["lengthTooShort"] = state ? state.lengthTooShort : undefined;
            resourceInputs["libraryBug"] = state ? state.libraryBug : undefined;
            resourceInputs["libraryHasNoCiphers"] = state ? state.libraryHasNoCiphers : undefined;
            resourceInputs["mastKeyTooLong"] = state ? state.mastKeyTooLong : undefined;
            resourceInputs["messageTooLong"] = state ? state.messageTooLong : undefined;
            resourceInputs["missingDhDsaCert"] = state ? state.missingDhDsaCert : undefined;
            resourceInputs["missingDhKey"] = state ? state.missingDhKey : undefined;
            resourceInputs["missingDhRsaCert"] = state ? state.missingDhRsaCert : undefined;
            resourceInputs["missingDsaSigningCert"] = state ? state.missingDsaSigningCert : undefined;
            resourceInputs["missingExportTmpDhKey"] = state ? state.missingExportTmpDhKey : undefined;
            resourceInputs["missingExportTmpRsaKey"] = state ? state.missingExportTmpRsaKey : undefined;
            resourceInputs["missingRsaCertificate"] = state ? state.missingRsaCertificate : undefined;
            resourceInputs["missingRsaEncryptingCert"] = state ? state.missingRsaEncryptingCert : undefined;
            resourceInputs["missingRsaSigningCert"] = state ? state.missingRsaSigningCert : undefined;
            resourceInputs["missingTmpDhKey"] = state ? state.missingTmpDhKey : undefined;
            resourceInputs["missingTmpRsaKey"] = state ? state.missingTmpRsaKey : undefined;
            resourceInputs["missingTmpRsaPkey"] = state ? state.missingTmpRsaPkey : undefined;
            resourceInputs["missingVerifyMessage"] = state ? state.missingVerifyMessage : undefined;
            resourceInputs["multipleSgcRestarts"] = state ? state.multipleSgcRestarts : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noCertificateAssigned"] = state ? state.noCertificateAssigned : undefined;
            resourceInputs["noCertificateReturned"] = state ? state.noCertificateReturned : undefined;
            resourceInputs["noCertificateSet"] = state ? state.noCertificateSet : undefined;
            resourceInputs["noCertificateSpecified"] = state ? state.noCertificateSpecified : undefined;
            resourceInputs["noCertificatesReturned"] = state ? state.noCertificatesReturned : undefined;
            resourceInputs["noCipherList"] = state ? state.noCipherList : undefined;
            resourceInputs["noCipherMatch"] = state ? state.noCipherMatch : undefined;
            resourceInputs["noCiphersAvailable"] = state ? state.noCiphersAvailable : undefined;
            resourceInputs["noCiphersPassed"] = state ? state.noCiphersPassed : undefined;
            resourceInputs["noCiphersSpecified"] = state ? state.noCiphersSpecified : undefined;
            resourceInputs["noClientCertReceived"] = state ? state.noClientCertReceived : undefined;
            resourceInputs["noCompressionSpecified"] = state ? state.noCompressionSpecified : undefined;
            resourceInputs["noMethodSpecified"] = state ? state.noMethodSpecified : undefined;
            resourceInputs["noPrivateKeyAssigned"] = state ? state.noPrivateKeyAssigned : undefined;
            resourceInputs["noPrivatekey"] = state ? state.noPrivatekey : undefined;
            resourceInputs["noProtocolsAvailable"] = state ? state.noProtocolsAvailable : undefined;
            resourceInputs["noPublickey"] = state ? state.noPublickey : undefined;
            resourceInputs["noRequiredDigest"] = state ? state.noRequiredDigest : undefined;
            resourceInputs["noSharedCipher"] = state ? state.noSharedCipher : undefined;
            resourceInputs["noVerifyCallback"] = state ? state.noVerifyCallback : undefined;
            resourceInputs["nonSslv2InitialPacket"] = state ? state.nonSslv2InitialPacket : undefined;
            resourceInputs["nullSslCtx"] = state ? state.nullSslCtx : undefined;
            resourceInputs["nullSslMethodPassed"] = state ? state.nullSslMethodPassed : undefined;
            resourceInputs["oldSessionCipherNotReturned"] = state ? state.oldSessionCipherNotReturned : undefined;
            resourceInputs["packetLengthTooLong"] = state ? state.packetLengthTooLong : undefined;
            resourceInputs["parseTlsext"] = state ? state.parseTlsext : undefined;
            resourceInputs["pathTooLong"] = state ? state.pathTooLong : undefined;
            resourceInputs["peerDidNotReturnACertificate"] = state ? state.peerDidNotReturnACertificate : undefined;
            resourceInputs["peerError"] = state ? state.peerError : undefined;
            resourceInputs["peerErrorCertificate"] = state ? state.peerErrorCertificate : undefined;
            resourceInputs["peerErrorNoCertificate"] = state ? state.peerErrorNoCertificate : undefined;
            resourceInputs["peerErrorNoCipher"] = state ? state.peerErrorNoCipher : undefined;
            resourceInputs["peerErrorUnsupportedCertificateType"] = state ? state.peerErrorUnsupportedCertificateType : undefined;
            resourceInputs["preMacLengthTooLong"] = state ? state.preMacLengthTooLong : undefined;
            resourceInputs["problemsMappingCipherFunctions"] = state ? state.problemsMappingCipherFunctions : undefined;
            resourceInputs["protocolIsShutdown"] = state ? state.protocolIsShutdown : undefined;
            resourceInputs["publicKeyEncryptError"] = state ? state.publicKeyEncryptError : undefined;
            resourceInputs["publicKeyIsNotRsa"] = state ? state.publicKeyIsNotRsa : undefined;
            resourceInputs["publicKeyNotRsa"] = state ? state.publicKeyNotRsa : undefined;
            resourceInputs["readBioNotSet"] = state ? state.readBioNotSet : undefined;
            resourceInputs["readWrongPacketType"] = state ? state.readWrongPacketType : undefined;
            resourceInputs["recordLengthMismatch"] = state ? state.recordLengthMismatch : undefined;
            resourceInputs["recordTooLarge"] = state ? state.recordTooLarge : undefined;
            resourceInputs["recordTooSmall"] = state ? state.recordTooSmall : undefined;
            resourceInputs["requiredCipherMissing"] = state ? state.requiredCipherMissing : undefined;
            resourceInputs["reuseCertLengthNotZero"] = state ? state.reuseCertLengthNotZero : undefined;
            resourceInputs["reuseCertTypeNotZero"] = state ? state.reuseCertTypeNotZero : undefined;
            resourceInputs["reuseCipherListNotZero"] = state ? state.reuseCipherListNotZero : undefined;
            resourceInputs["scsvReceivedWhenRenegotiating"] = state ? state.scsvReceivedWhenRenegotiating : undefined;
            resourceInputs["serverhelloTlsext"] = state ? state.serverhelloTlsext : undefined;
            resourceInputs["sessionIdContextUninitialized"] = state ? state.sessionIdContextUninitialized : undefined;
            resourceInputs["shortRead"] = state ? state.shortRead : undefined;
            resourceInputs["signatureForNonSigningCertificate"] = state ? state.signatureForNonSigningCertificate : undefined;
            resourceInputs["ssl23DoingSessionIdReuse"] = state ? state.ssl23DoingSessionIdReuse : undefined;
            resourceInputs["ssl2ConnectionIdTooLong"] = state ? state.ssl2ConnectionIdTooLong : undefined;
            resourceInputs["ssl3ExtInvalidServername"] = state ? state.ssl3ExtInvalidServername : undefined;
            resourceInputs["ssl3ExtInvalidServernameType"] = state ? state.ssl3ExtInvalidServernameType : undefined;
            resourceInputs["ssl3SessionIdTooLong"] = state ? state.ssl3SessionIdTooLong : undefined;
            resourceInputs["ssl3SessionIdTooShort"] = state ? state.ssl3SessionIdTooShort : undefined;
            resourceInputs["sslCtxHasNoDefaultSslVersion"] = state ? state.sslCtxHasNoDefaultSslVersion : undefined;
            resourceInputs["sslHandshakeFailure"] = state ? state.sslHandshakeFailure : undefined;
            resourceInputs["sslLibraryHasNoCiphers"] = state ? state.sslLibraryHasNoCiphers : undefined;
            resourceInputs["sslSessionIdCallbackFailed"] = state ? state.sslSessionIdCallbackFailed : undefined;
            resourceInputs["sslSessionIdConflict"] = state ? state.sslSessionIdConflict : undefined;
            resourceInputs["sslSessionIdContextTooLong"] = state ? state.sslSessionIdContextTooLong : undefined;
            resourceInputs["sslSessionIdHasBadLength"] = state ? state.sslSessionIdHasBadLength : undefined;
            resourceInputs["sslSessionIdIsDifferent"] = state ? state.sslSessionIdIsDifferent : undefined;
            resourceInputs["sslv3AlertBadCertificate"] = state ? state.sslv3AlertBadCertificate : undefined;
            resourceInputs["sslv3AlertBadRecordMac"] = state ? state.sslv3AlertBadRecordMac : undefined;
            resourceInputs["sslv3AlertCertificateExpired"] = state ? state.sslv3AlertCertificateExpired : undefined;
            resourceInputs["sslv3AlertCertificateRevoked"] = state ? state.sslv3AlertCertificateRevoked : undefined;
            resourceInputs["sslv3AlertCertificateUnknown"] = state ? state.sslv3AlertCertificateUnknown : undefined;
            resourceInputs["sslv3AlertDecompressionFailure"] = state ? state.sslv3AlertDecompressionFailure : undefined;
            resourceInputs["sslv3AlertHandshakeFailure"] = state ? state.sslv3AlertHandshakeFailure : undefined;
            resourceInputs["sslv3AlertIllegalParameter"] = state ? state.sslv3AlertIllegalParameter : undefined;
            resourceInputs["sslv3AlertNoCertificate"] = state ? state.sslv3AlertNoCertificate : undefined;
            resourceInputs["sslv3AlertPeerErrorCert"] = state ? state.sslv3AlertPeerErrorCert : undefined;
            resourceInputs["sslv3AlertPeerErrorNoCert"] = state ? state.sslv3AlertPeerErrorNoCert : undefined;
            resourceInputs["sslv3AlertPeerErrorNoCipher"] = state ? state.sslv3AlertPeerErrorNoCipher : undefined;
            resourceInputs["sslv3AlertPeerErrorUnsuppCertType"] = state ? state.sslv3AlertPeerErrorUnsuppCertType : undefined;
            resourceInputs["sslv3AlertUnexpectedMsg"] = state ? state.sslv3AlertUnexpectedMsg : undefined;
            resourceInputs["sslv3AlertUnknownRemoteErrType"] = state ? state.sslv3AlertUnknownRemoteErrType : undefined;
            resourceInputs["sslv3AlertUnspportedCert"] = state ? state.sslv3AlertUnspportedCert : undefined;
            resourceInputs["thresholdExceededBy"] = state ? state.thresholdExceededBy : undefined;
            resourceInputs["tlsClientCertReqWithAnonCipher"] = state ? state.tlsClientCertReqWithAnonCipher : undefined;
            resourceInputs["tlsInvalidEcpointformatList"] = state ? state.tlsInvalidEcpointformatList : undefined;
            resourceInputs["tlsPeerDidNotRespondWithCertList"] = state ? state.tlsPeerDidNotRespondWithCertList : undefined;
            resourceInputs["tlsRsaEncryptedValueLengthIsWrong"] = state ? state.tlsRsaEncryptedValueLengthIsWrong : undefined;
            resourceInputs["tlsv1AlertAccessDenied"] = state ? state.tlsv1AlertAccessDenied : undefined;
            resourceInputs["tlsv1AlertDecodeError"] = state ? state.tlsv1AlertDecodeError : undefined;
            resourceInputs["tlsv1AlertDecryptError"] = state ? state.tlsv1AlertDecryptError : undefined;
            resourceInputs["tlsv1AlertDecryptionFailed"] = state ? state.tlsv1AlertDecryptionFailed : undefined;
            resourceInputs["tlsv1AlertExportRestriction"] = state ? state.tlsv1AlertExportRestriction : undefined;
            resourceInputs["tlsv1AlertInsufficientSecurity"] = state ? state.tlsv1AlertInsufficientSecurity : undefined;
            resourceInputs["tlsv1AlertInternalError"] = state ? state.tlsv1AlertInternalError : undefined;
            resourceInputs["tlsv1AlertNoRenegotiation"] = state ? state.tlsv1AlertNoRenegotiation : undefined;
            resourceInputs["tlsv1AlertProtocolVersion"] = state ? state.tlsv1AlertProtocolVersion : undefined;
            resourceInputs["tlsv1AlertRecordOverflow"] = state ? state.tlsv1AlertRecordOverflow : undefined;
            resourceInputs["tlsv1AlertUnknownCa"] = state ? state.tlsv1AlertUnknownCa : undefined;
            resourceInputs["tlsv1AlertUserCancelled"] = state ? state.tlsv1AlertUserCancelled : undefined;
            resourceInputs["triedToUseUnsupportedCipher"] = state ? state.triedToUseUnsupportedCipher : undefined;
            resourceInputs["unableToDecodeDhCerts"] = state ? state.unableToDecodeDhCerts : undefined;
            resourceInputs["unableToExtractPublicKey"] = state ? state.unableToExtractPublicKey : undefined;
            resourceInputs["unableToFindDhParameters"] = state ? state.unableToFindDhParameters : undefined;
            resourceInputs["unableToFindPublicKeyParameters"] = state ? state.unableToFindPublicKeyParameters : undefined;
            resourceInputs["unableToFindSslMethod"] = state ? state.unableToFindSslMethod : undefined;
            resourceInputs["unableToLoadSsl2Md5Routines"] = state ? state.unableToLoadSsl2Md5Routines : undefined;
            resourceInputs["unableToLoadSsl3Md5Routines"] = state ? state.unableToLoadSsl3Md5Routines : undefined;
            resourceInputs["unableToLoadSsl3Sha1Routines"] = state ? state.unableToLoadSsl3Sha1Routines : undefined;
            resourceInputs["unexpectedMessage"] = state ? state.unexpectedMessage : undefined;
            resourceInputs["unexpectedRecord"] = state ? state.unexpectedRecord : undefined;
            resourceInputs["uninitialized"] = state ? state.uninitialized : undefined;
            resourceInputs["unknownAlertType"] = state ? state.unknownAlertType : undefined;
            resourceInputs["unknownCertificateType"] = state ? state.unknownCertificateType : undefined;
            resourceInputs["unknownCipherReturned"] = state ? state.unknownCipherReturned : undefined;
            resourceInputs["unknownCipherType"] = state ? state.unknownCipherType : undefined;
            resourceInputs["unknownKeyExchangeType"] = state ? state.unknownKeyExchangeType : undefined;
            resourceInputs["unknownPkeyType"] = state ? state.unknownPkeyType : undefined;
            resourceInputs["unknownProtocol"] = state ? state.unknownProtocol : undefined;
            resourceInputs["unknownRemoteErrorType"] = state ? state.unknownRemoteErrorType : undefined;
            resourceInputs["unknownSslVersion"] = state ? state.unknownSslVersion : undefined;
            resourceInputs["unknownState"] = state ? state.unknownState : undefined;
            resourceInputs["unsupportedCipher"] = state ? state.unsupportedCipher : undefined;
            resourceInputs["unsupportedCompressionAlgorithm"] = state ? state.unsupportedCompressionAlgorithm : undefined;
            resourceInputs["unsupportedDigestType"] = state ? state.unsupportedDigestType : undefined;
            resourceInputs["unsupportedEllipticCurve"] = state ? state.unsupportedEllipticCurve : undefined;
            resourceInputs["unsupportedOption"] = state ? state.unsupportedOption : undefined;
            resourceInputs["unsupportedProtocol"] = state ? state.unsupportedProtocol : undefined;
            resourceInputs["unsupportedSslVersion"] = state ? state.unsupportedSslVersion : undefined;
            resourceInputs["unsupportedStatusType"] = state ? state.unsupportedStatusType : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
            resourceInputs["writeBioNotSet"] = state ? state.writeBioNotSet : undefined;
            resourceInputs["wrongCipherReturned"] = state ? state.wrongCipherReturned : undefined;
            resourceInputs["wrongCounterOfKeyBits"] = state ? state.wrongCounterOfKeyBits : undefined;
            resourceInputs["wrongMessageType"] = state ? state.wrongMessageType : undefined;
            resourceInputs["wrongSignatureLength"] = state ? state.wrongSignatureLength : undefined;
            resourceInputs["wrongSignatureSize"] = state ? state.wrongSignatureSize : undefined;
            resourceInputs["wrongSslVersion"] = state ? state.wrongSslVersion : undefined;
            resourceInputs["wrongVersionCounter"] = state ? state.wrongVersionCounter : undefined;
            resourceInputs["x509Lib"] = state ? state.x509Lib : undefined;
            resourceInputs["x509VerificationSetupProblems"] = state ? state.x509VerificationSetupProblems : undefined;
        } else {
            const args = argsOrState as VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateArgs | undefined;
            resourceInputs["appDataInHandshake"] = args ? args.appDataInHandshake : undefined;
            resourceInputs["attemptToReuseSessInDiffContext"] = args ? args.attemptToReuseSessInDiffContext : undefined;
            resourceInputs["badAlertRecord"] = args ? args.badAlertRecord : undefined;
            resourceInputs["badAuthenticationType"] = args ? args.badAuthenticationType : undefined;
            resourceInputs["badChangeCipherSpec"] = args ? args.badChangeCipherSpec : undefined;
            resourceInputs["badChecksum"] = args ? args.badChecksum : undefined;
            resourceInputs["badDataReturnedByCallback"] = args ? args.badDataReturnedByCallback : undefined;
            resourceInputs["badDecompression"] = args ? args.badDecompression : undefined;
            resourceInputs["badDhGLength"] = args ? args.badDhGLength : undefined;
            resourceInputs["badDhPLength"] = args ? args.badDhPLength : undefined;
            resourceInputs["badDhPubKeyLength"] = args ? args.badDhPubKeyLength : undefined;
            resourceInputs["badDigestLength"] = args ? args.badDigestLength : undefined;
            resourceInputs["badDsaSignature"] = args ? args.badDsaSignature : undefined;
            resourceInputs["badEccCert"] = args ? args.badEccCert : undefined;
            resourceInputs["badEcdsaSig"] = args ? args.badEcdsaSig : undefined;
            resourceInputs["badEcpoint"] = args ? args.badEcpoint : undefined;
            resourceInputs["badHandshakeLength"] = args ? args.badHandshakeLength : undefined;
            resourceInputs["badHelloRequest"] = args ? args.badHelloRequest : undefined;
            resourceInputs["badLength"] = args ? args.badLength : undefined;
            resourceInputs["badMacDecode"] = args ? args.badMacDecode : undefined;
            resourceInputs["badMessageType"] = args ? args.badMessageType : undefined;
            resourceInputs["badPacketLength"] = args ? args.badPacketLength : undefined;
            resourceInputs["badProtocolVersionCounter"] = args ? args.badProtocolVersionCounter : undefined;
            resourceInputs["badResponseArgument"] = args ? args.badResponseArgument : undefined;
            resourceInputs["badRsaDecrypt"] = args ? args.badRsaDecrypt : undefined;
            resourceInputs["badRsaELength"] = args ? args.badRsaELength : undefined;
            resourceInputs["badRsaEncrypt"] = args ? args.badRsaEncrypt : undefined;
            resourceInputs["badRsaModulusLength"] = args ? args.badRsaModulusLength : undefined;
            resourceInputs["badRsaSignature"] = args ? args.badRsaSignature : undefined;
            resourceInputs["badSignature"] = args ? args.badSignature : undefined;
            resourceInputs["badSslFiletype"] = args ? args.badSslFiletype : undefined;
            resourceInputs["badSslSessionIdLength"] = args ? args.badSslSessionIdLength : undefined;
            resourceInputs["badState"] = args ? args.badState : undefined;
            resourceInputs["badWriteRetry"] = args ? args.badWriteRetry : undefined;
            resourceInputs["bioNotSet"] = args ? args.bioNotSet : undefined;
            resourceInputs["blockCipherPadIsWrong"] = args ? args.blockCipherPadIsWrong : undefined;
            resourceInputs["bnLib"] = args ? args.bnLib : undefined;
            resourceInputs["caDnLengthMismatch"] = args ? args.caDnLengthMismatch : undefined;
            resourceInputs["caDnTooLong"] = args ? args.caDnTooLong : undefined;
            resourceInputs["ccsReceivedEarly"] = args ? args.ccsReceivedEarly : undefined;
            resourceInputs["certLengthMismatch"] = args ? args.certLengthMismatch : undefined;
            resourceInputs["certificateVerifyFailed"] = args ? args.certificateVerifyFailed : undefined;
            resourceInputs["challengeIsDifferent"] = args ? args.challengeIsDifferent : undefined;
            resourceInputs["cipherCodeWrongLength"] = args ? args.cipherCodeWrongLength : undefined;
            resourceInputs["cipherOrHashUnavailable"] = args ? args.cipherOrHashUnavailable : undefined;
            resourceInputs["cipherTableSrcError"] = args ? args.cipherTableSrcError : undefined;
            resourceInputs["clienthelloTlsext"] = args ? args.clienthelloTlsext : undefined;
            resourceInputs["compressedLengthTooLong"] = args ? args.compressedLengthTooLong : undefined;
            resourceInputs["compressionFailure"] = args ? args.compressionFailure : undefined;
            resourceInputs["compressionLibraryError"] = args ? args.compressionLibraryError : undefined;
            resourceInputs["connectionIdIsDifferent"] = args ? args.connectionIdIsDifferent : undefined;
            resourceInputs["connectionTypeNotSet"] = args ? args.connectionTypeNotSet : undefined;
            resourceInputs["cookieMismatch"] = args ? args.cookieMismatch : undefined;
            resourceInputs["dataBetweenCcsAndFinished"] = args ? args.dataBetweenCcsAndFinished : undefined;
            resourceInputs["dataLengthTooLong"] = args ? args.dataLengthTooLong : undefined;
            resourceInputs["decryptionFailed"] = args ? args.decryptionFailed : undefined;
            resourceInputs["decryptionFailedOrBadRecordMac"] = args ? args.decryptionFailedOrBadRecordMac : undefined;
            resourceInputs["dhPublicValueLengthIsWrong"] = args ? args.dhPublicValueLengthIsWrong : undefined;
            resourceInputs["digestCheckFailed"] = args ? args.digestCheckFailed : undefined;
            resourceInputs["duration"] = args ? args.duration : undefined;
            resourceInputs["encryptedLengthTooLong"] = args ? args.encryptedLengthTooLong : undefined;
            resourceInputs["errorGeneratingTmpRsaKey"] = args ? args.errorGeneratingTmpRsaKey : undefined;
            resourceInputs["errorInReceivedCipherList"] = args ? args.errorInReceivedCipherList : undefined;
            resourceInputs["excessiveMessageSize"] = args ? args.excessiveMessageSize : undefined;
            resourceInputs["extraDataInMessage"] = args ? args.extraDataInMessage : undefined;
            resourceInputs["gotAFinBeforeACcs"] = args ? args.gotAFinBeforeACcs : undefined;
            resourceInputs["httpRequest"] = args ? args.httpRequest : undefined;
            resourceInputs["httpsProxyRequest"] = args ? args.httpsProxyRequest : undefined;
            resourceInputs["illegalPadding"] = args ? args.illegalPadding : undefined;
            resourceInputs["inappropriateFallback"] = args ? args.inappropriateFallback : undefined;
            resourceInputs["invalidChallengeLength"] = args ? args.invalidChallengeLength : undefined;
            resourceInputs["invalidCommand"] = args ? args.invalidCommand : undefined;
            resourceInputs["invalidPurpose"] = args ? args.invalidPurpose : undefined;
            resourceInputs["invalidStatusResponse"] = args ? args.invalidStatusResponse : undefined;
            resourceInputs["invalidTrust"] = args ? args.invalidTrust : undefined;
            resourceInputs["keyArgTooLong"] = args ? args.keyArgTooLong : undefined;
            resourceInputs["krb5"] = args ? args.krb5 : undefined;
            resourceInputs["krb5ClientCcPrincipal"] = args ? args.krb5ClientCcPrincipal : undefined;
            resourceInputs["krb5ClientGetCred"] = args ? args.krb5ClientGetCred : undefined;
            resourceInputs["krb5ClientInit"] = args ? args.krb5ClientInit : undefined;
            resourceInputs["krb5ClientMkReq"] = args ? args.krb5ClientMkReq : undefined;
            resourceInputs["krb5ServerBadTicket"] = args ? args.krb5ServerBadTicket : undefined;
            resourceInputs["krb5ServerInit"] = args ? args.krb5ServerInit : undefined;
            resourceInputs["krb5ServerRdReq"] = args ? args.krb5ServerRdReq : undefined;
            resourceInputs["krb5ServerTktExpired"] = args ? args.krb5ServerTktExpired : undefined;
            resourceInputs["krb5ServerTktNotYetValid"] = args ? args.krb5ServerTktNotYetValid : undefined;
            resourceInputs["krb5ServerTktSkew"] = args ? args.krb5ServerTktSkew : undefined;
            resourceInputs["lengthMismatch"] = args ? args.lengthMismatch : undefined;
            resourceInputs["lengthTooShort"] = args ? args.lengthTooShort : undefined;
            resourceInputs["libraryBug"] = args ? args.libraryBug : undefined;
            resourceInputs["libraryHasNoCiphers"] = args ? args.libraryHasNoCiphers : undefined;
            resourceInputs["mastKeyTooLong"] = args ? args.mastKeyTooLong : undefined;
            resourceInputs["messageTooLong"] = args ? args.messageTooLong : undefined;
            resourceInputs["missingDhDsaCert"] = args ? args.missingDhDsaCert : undefined;
            resourceInputs["missingDhKey"] = args ? args.missingDhKey : undefined;
            resourceInputs["missingDhRsaCert"] = args ? args.missingDhRsaCert : undefined;
            resourceInputs["missingDsaSigningCert"] = args ? args.missingDsaSigningCert : undefined;
            resourceInputs["missingExportTmpDhKey"] = args ? args.missingExportTmpDhKey : undefined;
            resourceInputs["missingExportTmpRsaKey"] = args ? args.missingExportTmpRsaKey : undefined;
            resourceInputs["missingRsaCertificate"] = args ? args.missingRsaCertificate : undefined;
            resourceInputs["missingRsaEncryptingCert"] = args ? args.missingRsaEncryptingCert : undefined;
            resourceInputs["missingRsaSigningCert"] = args ? args.missingRsaSigningCert : undefined;
            resourceInputs["missingTmpDhKey"] = args ? args.missingTmpDhKey : undefined;
            resourceInputs["missingTmpRsaKey"] = args ? args.missingTmpRsaKey : undefined;
            resourceInputs["missingTmpRsaPkey"] = args ? args.missingTmpRsaPkey : undefined;
            resourceInputs["missingVerifyMessage"] = args ? args.missingVerifyMessage : undefined;
            resourceInputs["multipleSgcRestarts"] = args ? args.multipleSgcRestarts : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noCertificateAssigned"] = args ? args.noCertificateAssigned : undefined;
            resourceInputs["noCertificateReturned"] = args ? args.noCertificateReturned : undefined;
            resourceInputs["noCertificateSet"] = args ? args.noCertificateSet : undefined;
            resourceInputs["noCertificateSpecified"] = args ? args.noCertificateSpecified : undefined;
            resourceInputs["noCertificatesReturned"] = args ? args.noCertificatesReturned : undefined;
            resourceInputs["noCipherList"] = args ? args.noCipherList : undefined;
            resourceInputs["noCipherMatch"] = args ? args.noCipherMatch : undefined;
            resourceInputs["noCiphersAvailable"] = args ? args.noCiphersAvailable : undefined;
            resourceInputs["noCiphersPassed"] = args ? args.noCiphersPassed : undefined;
            resourceInputs["noCiphersSpecified"] = args ? args.noCiphersSpecified : undefined;
            resourceInputs["noClientCertReceived"] = args ? args.noClientCertReceived : undefined;
            resourceInputs["noCompressionSpecified"] = args ? args.noCompressionSpecified : undefined;
            resourceInputs["noMethodSpecified"] = args ? args.noMethodSpecified : undefined;
            resourceInputs["noPrivateKeyAssigned"] = args ? args.noPrivateKeyAssigned : undefined;
            resourceInputs["noPrivatekey"] = args ? args.noPrivatekey : undefined;
            resourceInputs["noProtocolsAvailable"] = args ? args.noProtocolsAvailable : undefined;
            resourceInputs["noPublickey"] = args ? args.noPublickey : undefined;
            resourceInputs["noRequiredDigest"] = args ? args.noRequiredDigest : undefined;
            resourceInputs["noSharedCipher"] = args ? args.noSharedCipher : undefined;
            resourceInputs["noVerifyCallback"] = args ? args.noVerifyCallback : undefined;
            resourceInputs["nonSslv2InitialPacket"] = args ? args.nonSslv2InitialPacket : undefined;
            resourceInputs["nullSslCtx"] = args ? args.nullSslCtx : undefined;
            resourceInputs["nullSslMethodPassed"] = args ? args.nullSslMethodPassed : undefined;
            resourceInputs["oldSessionCipherNotReturned"] = args ? args.oldSessionCipherNotReturned : undefined;
            resourceInputs["packetLengthTooLong"] = args ? args.packetLengthTooLong : undefined;
            resourceInputs["parseTlsext"] = args ? args.parseTlsext : undefined;
            resourceInputs["pathTooLong"] = args ? args.pathTooLong : undefined;
            resourceInputs["peerDidNotReturnACertificate"] = args ? args.peerDidNotReturnACertificate : undefined;
            resourceInputs["peerError"] = args ? args.peerError : undefined;
            resourceInputs["peerErrorCertificate"] = args ? args.peerErrorCertificate : undefined;
            resourceInputs["peerErrorNoCertificate"] = args ? args.peerErrorNoCertificate : undefined;
            resourceInputs["peerErrorNoCipher"] = args ? args.peerErrorNoCipher : undefined;
            resourceInputs["peerErrorUnsupportedCertificateType"] = args ? args.peerErrorUnsupportedCertificateType : undefined;
            resourceInputs["preMacLengthTooLong"] = args ? args.preMacLengthTooLong : undefined;
            resourceInputs["problemsMappingCipherFunctions"] = args ? args.problemsMappingCipherFunctions : undefined;
            resourceInputs["protocolIsShutdown"] = args ? args.protocolIsShutdown : undefined;
            resourceInputs["publicKeyEncryptError"] = args ? args.publicKeyEncryptError : undefined;
            resourceInputs["publicKeyIsNotRsa"] = args ? args.publicKeyIsNotRsa : undefined;
            resourceInputs["publicKeyNotRsa"] = args ? args.publicKeyNotRsa : undefined;
            resourceInputs["readBioNotSet"] = args ? args.readBioNotSet : undefined;
            resourceInputs["readWrongPacketType"] = args ? args.readWrongPacketType : undefined;
            resourceInputs["recordLengthMismatch"] = args ? args.recordLengthMismatch : undefined;
            resourceInputs["recordTooLarge"] = args ? args.recordTooLarge : undefined;
            resourceInputs["recordTooSmall"] = args ? args.recordTooSmall : undefined;
            resourceInputs["requiredCipherMissing"] = args ? args.requiredCipherMissing : undefined;
            resourceInputs["reuseCertLengthNotZero"] = args ? args.reuseCertLengthNotZero : undefined;
            resourceInputs["reuseCertTypeNotZero"] = args ? args.reuseCertTypeNotZero : undefined;
            resourceInputs["reuseCipherListNotZero"] = args ? args.reuseCipherListNotZero : undefined;
            resourceInputs["scsvReceivedWhenRenegotiating"] = args ? args.scsvReceivedWhenRenegotiating : undefined;
            resourceInputs["serverhelloTlsext"] = args ? args.serverhelloTlsext : undefined;
            resourceInputs["sessionIdContextUninitialized"] = args ? args.sessionIdContextUninitialized : undefined;
            resourceInputs["shortRead"] = args ? args.shortRead : undefined;
            resourceInputs["signatureForNonSigningCertificate"] = args ? args.signatureForNonSigningCertificate : undefined;
            resourceInputs["ssl23DoingSessionIdReuse"] = args ? args.ssl23DoingSessionIdReuse : undefined;
            resourceInputs["ssl2ConnectionIdTooLong"] = args ? args.ssl2ConnectionIdTooLong : undefined;
            resourceInputs["ssl3ExtInvalidServername"] = args ? args.ssl3ExtInvalidServername : undefined;
            resourceInputs["ssl3ExtInvalidServernameType"] = args ? args.ssl3ExtInvalidServernameType : undefined;
            resourceInputs["ssl3SessionIdTooLong"] = args ? args.ssl3SessionIdTooLong : undefined;
            resourceInputs["ssl3SessionIdTooShort"] = args ? args.ssl3SessionIdTooShort : undefined;
            resourceInputs["sslCtxHasNoDefaultSslVersion"] = args ? args.sslCtxHasNoDefaultSslVersion : undefined;
            resourceInputs["sslHandshakeFailure"] = args ? args.sslHandshakeFailure : undefined;
            resourceInputs["sslLibraryHasNoCiphers"] = args ? args.sslLibraryHasNoCiphers : undefined;
            resourceInputs["sslSessionIdCallbackFailed"] = args ? args.sslSessionIdCallbackFailed : undefined;
            resourceInputs["sslSessionIdConflict"] = args ? args.sslSessionIdConflict : undefined;
            resourceInputs["sslSessionIdContextTooLong"] = args ? args.sslSessionIdContextTooLong : undefined;
            resourceInputs["sslSessionIdHasBadLength"] = args ? args.sslSessionIdHasBadLength : undefined;
            resourceInputs["sslSessionIdIsDifferent"] = args ? args.sslSessionIdIsDifferent : undefined;
            resourceInputs["sslv3AlertBadCertificate"] = args ? args.sslv3AlertBadCertificate : undefined;
            resourceInputs["sslv3AlertBadRecordMac"] = args ? args.sslv3AlertBadRecordMac : undefined;
            resourceInputs["sslv3AlertCertificateExpired"] = args ? args.sslv3AlertCertificateExpired : undefined;
            resourceInputs["sslv3AlertCertificateRevoked"] = args ? args.sslv3AlertCertificateRevoked : undefined;
            resourceInputs["sslv3AlertCertificateUnknown"] = args ? args.sslv3AlertCertificateUnknown : undefined;
            resourceInputs["sslv3AlertDecompressionFailure"] = args ? args.sslv3AlertDecompressionFailure : undefined;
            resourceInputs["sslv3AlertHandshakeFailure"] = args ? args.sslv3AlertHandshakeFailure : undefined;
            resourceInputs["sslv3AlertIllegalParameter"] = args ? args.sslv3AlertIllegalParameter : undefined;
            resourceInputs["sslv3AlertNoCertificate"] = args ? args.sslv3AlertNoCertificate : undefined;
            resourceInputs["sslv3AlertPeerErrorCert"] = args ? args.sslv3AlertPeerErrorCert : undefined;
            resourceInputs["sslv3AlertPeerErrorNoCert"] = args ? args.sslv3AlertPeerErrorNoCert : undefined;
            resourceInputs["sslv3AlertPeerErrorNoCipher"] = args ? args.sslv3AlertPeerErrorNoCipher : undefined;
            resourceInputs["sslv3AlertPeerErrorUnsuppCertType"] = args ? args.sslv3AlertPeerErrorUnsuppCertType : undefined;
            resourceInputs["sslv3AlertUnexpectedMsg"] = args ? args.sslv3AlertUnexpectedMsg : undefined;
            resourceInputs["sslv3AlertUnknownRemoteErrType"] = args ? args.sslv3AlertUnknownRemoteErrType : undefined;
            resourceInputs["sslv3AlertUnspportedCert"] = args ? args.sslv3AlertUnspportedCert : undefined;
            resourceInputs["thresholdExceededBy"] = args ? args.thresholdExceededBy : undefined;
            resourceInputs["tlsClientCertReqWithAnonCipher"] = args ? args.tlsClientCertReqWithAnonCipher : undefined;
            resourceInputs["tlsInvalidEcpointformatList"] = args ? args.tlsInvalidEcpointformatList : undefined;
            resourceInputs["tlsPeerDidNotRespondWithCertList"] = args ? args.tlsPeerDidNotRespondWithCertList : undefined;
            resourceInputs["tlsRsaEncryptedValueLengthIsWrong"] = args ? args.tlsRsaEncryptedValueLengthIsWrong : undefined;
            resourceInputs["tlsv1AlertAccessDenied"] = args ? args.tlsv1AlertAccessDenied : undefined;
            resourceInputs["tlsv1AlertDecodeError"] = args ? args.tlsv1AlertDecodeError : undefined;
            resourceInputs["tlsv1AlertDecryptError"] = args ? args.tlsv1AlertDecryptError : undefined;
            resourceInputs["tlsv1AlertDecryptionFailed"] = args ? args.tlsv1AlertDecryptionFailed : undefined;
            resourceInputs["tlsv1AlertExportRestriction"] = args ? args.tlsv1AlertExportRestriction : undefined;
            resourceInputs["tlsv1AlertInsufficientSecurity"] = args ? args.tlsv1AlertInsufficientSecurity : undefined;
            resourceInputs["tlsv1AlertInternalError"] = args ? args.tlsv1AlertInternalError : undefined;
            resourceInputs["tlsv1AlertNoRenegotiation"] = args ? args.tlsv1AlertNoRenegotiation : undefined;
            resourceInputs["tlsv1AlertProtocolVersion"] = args ? args.tlsv1AlertProtocolVersion : undefined;
            resourceInputs["tlsv1AlertRecordOverflow"] = args ? args.tlsv1AlertRecordOverflow : undefined;
            resourceInputs["tlsv1AlertUnknownCa"] = args ? args.tlsv1AlertUnknownCa : undefined;
            resourceInputs["tlsv1AlertUserCancelled"] = args ? args.tlsv1AlertUserCancelled : undefined;
            resourceInputs["triedToUseUnsupportedCipher"] = args ? args.triedToUseUnsupportedCipher : undefined;
            resourceInputs["unableToDecodeDhCerts"] = args ? args.unableToDecodeDhCerts : undefined;
            resourceInputs["unableToExtractPublicKey"] = args ? args.unableToExtractPublicKey : undefined;
            resourceInputs["unableToFindDhParameters"] = args ? args.unableToFindDhParameters : undefined;
            resourceInputs["unableToFindPublicKeyParameters"] = args ? args.unableToFindPublicKeyParameters : undefined;
            resourceInputs["unableToFindSslMethod"] = args ? args.unableToFindSslMethod : undefined;
            resourceInputs["unableToLoadSsl2Md5Routines"] = args ? args.unableToLoadSsl2Md5Routines : undefined;
            resourceInputs["unableToLoadSsl3Md5Routines"] = args ? args.unableToLoadSsl3Md5Routines : undefined;
            resourceInputs["unableToLoadSsl3Sha1Routines"] = args ? args.unableToLoadSsl3Sha1Routines : undefined;
            resourceInputs["unexpectedMessage"] = args ? args.unexpectedMessage : undefined;
            resourceInputs["unexpectedRecord"] = args ? args.unexpectedRecord : undefined;
            resourceInputs["uninitialized"] = args ? args.uninitialized : undefined;
            resourceInputs["unknownAlertType"] = args ? args.unknownAlertType : undefined;
            resourceInputs["unknownCertificateType"] = args ? args.unknownCertificateType : undefined;
            resourceInputs["unknownCipherReturned"] = args ? args.unknownCipherReturned : undefined;
            resourceInputs["unknownCipherType"] = args ? args.unknownCipherType : undefined;
            resourceInputs["unknownKeyExchangeType"] = args ? args.unknownKeyExchangeType : undefined;
            resourceInputs["unknownPkeyType"] = args ? args.unknownPkeyType : undefined;
            resourceInputs["unknownProtocol"] = args ? args.unknownProtocol : undefined;
            resourceInputs["unknownRemoteErrorType"] = args ? args.unknownRemoteErrorType : undefined;
            resourceInputs["unknownSslVersion"] = args ? args.unknownSslVersion : undefined;
            resourceInputs["unknownState"] = args ? args.unknownState : undefined;
            resourceInputs["unsupportedCipher"] = args ? args.unsupportedCipher : undefined;
            resourceInputs["unsupportedCompressionAlgorithm"] = args ? args.unsupportedCompressionAlgorithm : undefined;
            resourceInputs["unsupportedDigestType"] = args ? args.unsupportedDigestType : undefined;
            resourceInputs["unsupportedEllipticCurve"] = args ? args.unsupportedEllipticCurve : undefined;
            resourceInputs["unsupportedOption"] = args ? args.unsupportedOption : undefined;
            resourceInputs["unsupportedProtocol"] = args ? args.unsupportedProtocol : undefined;
            resourceInputs["unsupportedSslVersion"] = args ? args.unsupportedSslVersion : undefined;
            resourceInputs["unsupportedStatusType"] = args ? args.unsupportedStatusType : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["writeBioNotSet"] = args ? args.writeBioNotSet : undefined;
            resourceInputs["wrongCipherReturned"] = args ? args.wrongCipherReturned : undefined;
            resourceInputs["wrongCounterOfKeyBits"] = args ? args.wrongCounterOfKeyBits : undefined;
            resourceInputs["wrongMessageType"] = args ? args.wrongMessageType : undefined;
            resourceInputs["wrongSignatureLength"] = args ? args.wrongSignatureLength : undefined;
            resourceInputs["wrongSignatureSize"] = args ? args.wrongSignatureSize : undefined;
            resourceInputs["wrongSslVersion"] = args ? args.wrongSslVersion : undefined;
            resourceInputs["wrongVersionCounter"] = args ? args.wrongVersionCounter : undefined;
            resourceInputs["x509Lib"] = args ? args.x509Lib : undefined;
            resourceInputs["x509VerificationSetupProblems"] = args ? args.x509VerificationSetupProblems : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate resources.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateState {
    /**
     * Enable automatic packet-capture for app data in handshake
     */
    appDataInHandshake?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for attempt to reuse sess in diff context
     */
    attemptToReuseSessInDiffContext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad alert record
     */
    badAlertRecord?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad authentication type
     */
    badAuthenticationType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad change cipher spec
     */
    badChangeCipherSpec?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad checksum
     */
    badChecksum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad data returned by callback
     */
    badDataReturnedByCallback?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad decompression
     */
    badDecompression?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dh g length
     */
    badDhGLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dh p length
     */
    badDhPLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dh pub key length
     */
    badDhPubKeyLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad digest length
     */
    badDigestLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dsa signature
     */
    badDsaSignature?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ecc cert
     */
    badEccCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ecdsa sig
     */
    badEcdsaSig?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ecpoint
     */
    badEcpoint?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad handshake length
     */
    badHandshakeLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad hello request
     */
    badHelloRequest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad length
     */
    badLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad mac decode
     */
    badMacDecode?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad message type
     */
    badMessageType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad packet length
     */
    badPacketLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad protocol version counter
     */
    badProtocolVersionCounter?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad response argument
     */
    badResponseArgument?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa decrypt
     */
    badRsaDecrypt?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa e length
     */
    badRsaELength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa encrypt
     */
    badRsaEncrypt?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa modulus length
     */
    badRsaModulusLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa signature
     */
    badRsaSignature?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad signature
     */
    badSignature?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ssl filetype
     */
    badSslFiletype?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ssl session id length
     */
    badSslSessionIdLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad state
     */
    badState?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad write retry
     */
    badWriteRetry?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bio not set
     */
    bioNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for block cipher pad is wrong
     */
    blockCipherPadIsWrong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bn lib
     */
    bnLib?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ca dn length mismatch
     */
    caDnLengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ca dn too long
     */
    caDnTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ccs received early
     */
    ccsReceivedEarly?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cert length mismatch
     */
    certLengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for certificate verify failed
     */
    certificateVerifyFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for challenge is different
     */
    challengeIsDifferent?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cipher code wrong length
     */
    cipherCodeWrongLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cipher or hash unavailable
     */
    cipherOrHashUnavailable?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cipher table src error
     */
    cipherTableSrcError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for clienthello tlsext
     */
    clienthelloTlsext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for compressed length too long
     */
    compressedLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for compression failure
     */
    compressionFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for compression library error
     */
    compressionLibraryError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for connection id is different
     */
    connectionIdIsDifferent?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for connection type not set
     */
    connectionTypeNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cookie mismatch
     */
    cookieMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for data between ccs and finished
     */
    dataBetweenCcsAndFinished?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for data length too long
     */
    dataLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for decryption failed
     */
    decryptionFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for decryption failed or bad record mac
     */
    decryptionFailedOrBadRecordMac?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for dh public value length is wrong
     */
    dhPublicValueLengthIsWrong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for digest check failed
     */
    digestCheckFailed?: pulumi.Input<number>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    duration?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for encrypted length too long
     */
    encryptedLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for error generating tmp rsa key
     */
    errorGeneratingTmpRsaKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for error in received cipher list
     */
    errorInReceivedCipherList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for excessive message size
     */
    excessiveMessageSize?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for extra data in message
     */
    extraDataInMessage?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for got a fin before a ccs
     */
    gotAFinBeforeACcs?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for http request
     */
    httpRequest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for https proxy request
     */
    httpsProxyRequest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for illegal padding
     */
    illegalPadding?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for inappropriate fallback
     */
    inappropriateFallback?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid challenge length
     */
    invalidChallengeLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid command
     */
    invalidCommand?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid purpose
     */
    invalidPurpose?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid status response
     */
    invalidStatusResponse?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid trust
     */
    invalidTrust?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for key arg too long
     */
    keyArgTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5
     */
    krb5?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client cc principal
     */
    krb5ClientCcPrincipal?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client get cred
     */
    krb5ClientGetCred?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client init
     */
    krb5ClientInit?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client mk_req
     */
    krb5ClientMkReq?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server bad ticket
     */
    krb5ServerBadTicket?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server init
     */
    krb5ServerInit?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server rd_req
     */
    krb5ServerRdReq?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server tkt expired
     */
    krb5ServerTktExpired?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server tkt not yet valid
     */
    krb5ServerTktNotYetValid?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server tkt skew
     */
    krb5ServerTktSkew?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for length mismatch
     */
    lengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for length too short
     */
    lengthTooShort?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for library bug
     */
    libraryBug?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for library has no ciphers
     */
    libraryHasNoCiphers?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for mast key too long
     */
    mastKeyTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for message too long
     */
    messageTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dh dsa cert
     */
    missingDhDsaCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dh key
     */
    missingDhKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dh rsa cert
     */
    missingDhRsaCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dsa signing cert
     */
    missingDsaSigningCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing export tmp dh key
     */
    missingExportTmpDhKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing export tmp rsa key
     */
    missingExportTmpRsaKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing rsa certificate
     */
    missingRsaCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing rsa encrypting cert
     */
    missingRsaEncryptingCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing rsa signing cert
     */
    missingRsaSigningCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing tmp dh key
     */
    missingTmpDhKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing tmp rsa key
     */
    missingTmpRsaKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing tmp rsa pkey
     */
    missingTmpRsaPkey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing verify message
     */
    missingVerifyMessage?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for multiple sgc restarts
     */
    multipleSgcRestarts?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for no certificate assigned
     */
    noCertificateAssigned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificate returned
     */
    noCertificateReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificate set
     */
    noCertificateSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificate specified
     */
    noCertificateSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificates returned
     */
    noCertificatesReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no cipher list
     */
    noCipherList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no cipher match
     */
    noCipherMatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no ciphers available
     */
    noCiphersAvailable?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no ciphers passed
     */
    noCiphersPassed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no ciphers specified
     */
    noCiphersSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no client cert received
     */
    noClientCertReceived?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no compression specified
     */
    noCompressionSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no method specified
     */
    noMethodSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no private key assigned
     */
    noPrivateKeyAssigned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no privatekey
     */
    noPrivatekey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no protocols available
     */
    noProtocolsAvailable?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no publickey
     */
    noPublickey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no required digest
     */
    noRequiredDigest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no shared cipher
     */
    noSharedCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no verify callback
     */
    noVerifyCallback?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for non sslv2 initial packet
     */
    nonSslv2InitialPacket?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for null ssl ctx
     */
    nullSslCtx?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for null ssl method passed
     */
    nullSslMethodPassed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for old session cipher not returned
     */
    oldSessionCipherNotReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for packet length too long
     */
    packetLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for parse tlsext
     */
    parseTlsext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for path too long
     */
    pathTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer did not return a certificate
     */
    peerDidNotReturnACertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error
     */
    peerError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error certificate
     */
    peerErrorCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error no certificate
     */
    peerErrorNoCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error no cipher
     */
    peerErrorNoCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error unsupported certificate type
     */
    peerErrorUnsupportedCertificateType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for pre mac length too long
     */
    preMacLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for problems mapping cipher functions
     */
    problemsMappingCipherFunctions?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for protocol is shutdown
     */
    protocolIsShutdown?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for public key encrypt error
     */
    publicKeyEncryptError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for public key is not rsa
     */
    publicKeyIsNotRsa?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for public key not rsa
     */
    publicKeyNotRsa?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for read bio not set
     */
    readBioNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for read wrong packet type
     */
    readWrongPacketType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for record length mismatch
     */
    recordLengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for record too large
     */
    recordTooLarge?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for record too small
     */
    recordTooSmall?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for required cipher missing
     */
    requiredCipherMissing?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for reuse cert length not zero
     */
    reuseCertLengthNotZero?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for reuse cert type not zero
     */
    reuseCertTypeNotZero?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for reuse cipher list not zero
     */
    reuseCipherListNotZero?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for scsv received when renegotiating
     */
    scsvReceivedWhenRenegotiating?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for serverhello tlsext
     */
    serverhelloTlsext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for session id context uninitialized
     */
    sessionIdContextUninitialized?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for short read
     */
    shortRead?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for signature for non signing certificate
     */
    signatureForNonSigningCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl23 doing session id reuse
     */
    ssl23DoingSessionIdReuse?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl2 connection id too long
     */
    ssl2ConnectionIdTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 ext invalid servername
     */
    ssl3ExtInvalidServername?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 ext invalid servername type
     */
    ssl3ExtInvalidServernameType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 session id too long
     */
    ssl3SessionIdTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 session id too short
     */
    ssl3SessionIdTooShort?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl ctx has no default ssl version
     */
    sslCtxHasNoDefaultSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl handshake failure
     */
    sslHandshakeFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl library has no ciphers
     */
    sslLibraryHasNoCiphers?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id callback failed
     */
    sslSessionIdCallbackFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id conflict
     */
    sslSessionIdConflict?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id context too long
     */
    sslSessionIdContextTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id has bad length
     */
    sslSessionIdHasBadLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id is different
     */
    sslSessionIdIsDifferent?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert bad certificate
     */
    sslv3AlertBadCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert bad record mac
     */
    sslv3AlertBadRecordMac?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate expired
     */
    sslv3AlertCertificateExpired?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate revoked
     */
    sslv3AlertCertificateRevoked?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate unknown
     */
    sslv3AlertCertificateUnknown?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert decompression failure
     */
    sslv3AlertDecompressionFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert handshake failure
     */
    sslv3AlertHandshakeFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert illegal parameter
     */
    sslv3AlertIllegalParameter?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert no certificate
     */
    sslv3AlertNoCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error cert
     */
    sslv3AlertPeerErrorCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error no cert
     */
    sslv3AlertPeerErrorNoCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error no cipher
     */
    sslv3AlertPeerErrorNoCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error unsupp cert type
     */
    sslv3AlertPeerErrorUnsuppCertType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert unexpected msg
     */
    sslv3AlertUnexpectedMsg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert unknown remote err type
     */
    sslv3AlertUnknownRemoteErrType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert unspported cert
     */
    sslv3AlertUnspportedCert?: pulumi.Input<number>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    thresholdExceededBy?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls client cert req with anon cipher
     */
    tlsClientCertReqWithAnonCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls invalid ecpointformat list
     */
    tlsInvalidEcpointformatList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls peer did not respond with cert list
     */
    tlsPeerDidNotRespondWithCertList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls rsa encrypted value length is wrong
     */
    tlsRsaEncryptedValueLengthIsWrong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert access denied
     */
    tlsv1AlertAccessDenied?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decode error
     */
    tlsv1AlertDecodeError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decrypt error
     */
    tlsv1AlertDecryptError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decryption failed
     */
    tlsv1AlertDecryptionFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert export restriction
     */
    tlsv1AlertExportRestriction?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert insufficient security
     */
    tlsv1AlertInsufficientSecurity?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert internal error
     */
    tlsv1AlertInternalError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert no renegotiation
     */
    tlsv1AlertNoRenegotiation?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert protocol version
     */
    tlsv1AlertProtocolVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert record overflow
     */
    tlsv1AlertRecordOverflow?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert unknown ca
     */
    tlsv1AlertUnknownCa?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert user cancelled
     */
    tlsv1AlertUserCancelled?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tried to use unsupported cipher
     */
    triedToUseUnsupportedCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to decode dh certs
     */
    unableToDecodeDhCerts?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to extract public key
     */
    unableToExtractPublicKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to find dh parameters
     */
    unableToFindDhParameters?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to find public key parameters
     */
    unableToFindPublicKeyParameters?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to find ssl method
     */
    unableToFindSslMethod?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to load ssl2 md5 routines
     */
    unableToLoadSsl2Md5Routines?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to load ssl3 md5 routines
     */
    unableToLoadSsl3Md5Routines?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to load ssl3 sha1 routines
     */
    unableToLoadSsl3Sha1Routines?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unexpected message
     */
    unexpectedMessage?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unexpected record
     */
    unexpectedRecord?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for uninitialized
     */
    uninitialized?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown alert type
     */
    unknownAlertType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown certificate type
     */
    unknownCertificateType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown cipher returned
     */
    unknownCipherReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown cipher type
     */
    unknownCipherType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown key exchange type
     */
    unknownKeyExchangeType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown pkey type
     */
    unknownPkeyType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown protocol
     */
    unknownProtocol?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown remote error type
     */
    unknownRemoteErrorType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown ssl version
     */
    unknownSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown state
     */
    unknownState?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported cipher
     */
    unsupportedCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported compression algorithm
     */
    unsupportedCompressionAlgorithm?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported digest type
     */
    unsupportedDigestType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported elliptic curve
     */
    unsupportedEllipticCurve?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported option
     */
    unsupportedOption?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported protocol
     */
    unsupportedProtocol?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported ssl version
     */
    unsupportedSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported status type
     */
    unsupportedStatusType?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for write bio not set
     */
    writeBioNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong cipher returned
     */
    wrongCipherReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong counter of key bits
     */
    wrongCounterOfKeyBits?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong message type
     */
    wrongMessageType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong signature length
     */
    wrongSignatureLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong signature size
     */
    wrongSignatureSize?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong ssl version
     */
    wrongSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong version counter
     */
    wrongVersionCounter?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for x509 lib
     */
    x509Lib?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for x509 verification setup problems
     */
    x509VerificationSetupProblems?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRate resource.
 */
export interface VisibilityPacketCaptureGlobalTemplatesTemplateTriggerSysObjStatsChangeSlbSslErrorTriggerStatsRateArgs {
    /**
     * Enable automatic packet-capture for app data in handshake
     */
    appDataInHandshake?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for attempt to reuse sess in diff context
     */
    attemptToReuseSessInDiffContext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad alert record
     */
    badAlertRecord?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad authentication type
     */
    badAuthenticationType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad change cipher spec
     */
    badChangeCipherSpec?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad checksum
     */
    badChecksum?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad data returned by callback
     */
    badDataReturnedByCallback?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad decompression
     */
    badDecompression?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dh g length
     */
    badDhGLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dh p length
     */
    badDhPLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dh pub key length
     */
    badDhPubKeyLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad digest length
     */
    badDigestLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad dsa signature
     */
    badDsaSignature?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ecc cert
     */
    badEccCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ecdsa sig
     */
    badEcdsaSig?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ecpoint
     */
    badEcpoint?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad handshake length
     */
    badHandshakeLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad hello request
     */
    badHelloRequest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad length
     */
    badLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad mac decode
     */
    badMacDecode?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad message type
     */
    badMessageType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad packet length
     */
    badPacketLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad protocol version counter
     */
    badProtocolVersionCounter?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad response argument
     */
    badResponseArgument?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa decrypt
     */
    badRsaDecrypt?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa e length
     */
    badRsaELength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa encrypt
     */
    badRsaEncrypt?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa modulus length
     */
    badRsaModulusLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad rsa signature
     */
    badRsaSignature?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad signature
     */
    badSignature?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ssl filetype
     */
    badSslFiletype?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad ssl session id length
     */
    badSslSessionIdLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad state
     */
    badState?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bad write retry
     */
    badWriteRetry?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bio not set
     */
    bioNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for block cipher pad is wrong
     */
    blockCipherPadIsWrong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for bn lib
     */
    bnLib?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ca dn length mismatch
     */
    caDnLengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ca dn too long
     */
    caDnTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ccs received early
     */
    ccsReceivedEarly?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cert length mismatch
     */
    certLengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for certificate verify failed
     */
    certificateVerifyFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for challenge is different
     */
    challengeIsDifferent?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cipher code wrong length
     */
    cipherCodeWrongLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cipher or hash unavailable
     */
    cipherOrHashUnavailable?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cipher table src error
     */
    cipherTableSrcError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for clienthello tlsext
     */
    clienthelloTlsext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for compressed length too long
     */
    compressedLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for compression failure
     */
    compressionFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for compression library error
     */
    compressionLibraryError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for connection id is different
     */
    connectionIdIsDifferent?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for connection type not set
     */
    connectionTypeNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for cookie mismatch
     */
    cookieMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for data between ccs and finished
     */
    dataBetweenCcsAndFinished?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for data length too long
     */
    dataLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for decryption failed
     */
    decryptionFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for decryption failed or bad record mac
     */
    decryptionFailedOrBadRecordMac?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for dh public value length is wrong
     */
    dhPublicValueLengthIsWrong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for digest check failed
     */
    digestCheckFailed?: pulumi.Input<number>;
    /**
     * Time in seconds to look for the anomaly, default is 60
     */
    duration?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for encrypted length too long
     */
    encryptedLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for error generating tmp rsa key
     */
    errorGeneratingTmpRsaKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for error in received cipher list
     */
    errorInReceivedCipherList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for excessive message size
     */
    excessiveMessageSize?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for extra data in message
     */
    extraDataInMessage?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for got a fin before a ccs
     */
    gotAFinBeforeACcs?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for http request
     */
    httpRequest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for https proxy request
     */
    httpsProxyRequest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for illegal padding
     */
    illegalPadding?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for inappropriate fallback
     */
    inappropriateFallback?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid challenge length
     */
    invalidChallengeLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid command
     */
    invalidCommand?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid purpose
     */
    invalidPurpose?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid status response
     */
    invalidStatusResponse?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for invalid trust
     */
    invalidTrust?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for key arg too long
     */
    keyArgTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5
     */
    krb5?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client cc principal
     */
    krb5ClientCcPrincipal?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client get cred
     */
    krb5ClientGetCred?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client init
     */
    krb5ClientInit?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 client mk_req
     */
    krb5ClientMkReq?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server bad ticket
     */
    krb5ServerBadTicket?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server init
     */
    krb5ServerInit?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server rd_req
     */
    krb5ServerRdReq?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server tkt expired
     */
    krb5ServerTktExpired?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server tkt not yet valid
     */
    krb5ServerTktNotYetValid?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for krb5 server tkt skew
     */
    krb5ServerTktSkew?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for length mismatch
     */
    lengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for length too short
     */
    lengthTooShort?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for library bug
     */
    libraryBug?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for library has no ciphers
     */
    libraryHasNoCiphers?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for mast key too long
     */
    mastKeyTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for message too long
     */
    messageTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dh dsa cert
     */
    missingDhDsaCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dh key
     */
    missingDhKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dh rsa cert
     */
    missingDhRsaCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing dsa signing cert
     */
    missingDsaSigningCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing export tmp dh key
     */
    missingExportTmpDhKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing export tmp rsa key
     */
    missingExportTmpRsaKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing rsa certificate
     */
    missingRsaCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing rsa encrypting cert
     */
    missingRsaEncryptingCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing rsa signing cert
     */
    missingRsaSigningCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing tmp dh key
     */
    missingTmpDhKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing tmp rsa key
     */
    missingTmpRsaKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing tmp rsa pkey
     */
    missingTmpRsaPkey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for missing verify message
     */
    missingVerifyMessage?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for multiple sgc restarts
     */
    multipleSgcRestarts?: pulumi.Input<number>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for no certificate assigned
     */
    noCertificateAssigned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificate returned
     */
    noCertificateReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificate set
     */
    noCertificateSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificate specified
     */
    noCertificateSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no certificates returned
     */
    noCertificatesReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no cipher list
     */
    noCipherList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no cipher match
     */
    noCipherMatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no ciphers available
     */
    noCiphersAvailable?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no ciphers passed
     */
    noCiphersPassed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no ciphers specified
     */
    noCiphersSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no client cert received
     */
    noClientCertReceived?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no compression specified
     */
    noCompressionSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no method specified
     */
    noMethodSpecified?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no private key assigned
     */
    noPrivateKeyAssigned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no privatekey
     */
    noPrivatekey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no protocols available
     */
    noProtocolsAvailable?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no publickey
     */
    noPublickey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no required digest
     */
    noRequiredDigest?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no shared cipher
     */
    noSharedCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for no verify callback
     */
    noVerifyCallback?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for non sslv2 initial packet
     */
    nonSslv2InitialPacket?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for null ssl ctx
     */
    nullSslCtx?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for null ssl method passed
     */
    nullSslMethodPassed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for old session cipher not returned
     */
    oldSessionCipherNotReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for packet length too long
     */
    packetLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for parse tlsext
     */
    parseTlsext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for path too long
     */
    pathTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer did not return a certificate
     */
    peerDidNotReturnACertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error
     */
    peerError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error certificate
     */
    peerErrorCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error no certificate
     */
    peerErrorNoCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error no cipher
     */
    peerErrorNoCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for peer error unsupported certificate type
     */
    peerErrorUnsupportedCertificateType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for pre mac length too long
     */
    preMacLengthTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for problems mapping cipher functions
     */
    problemsMappingCipherFunctions?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for protocol is shutdown
     */
    protocolIsShutdown?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for public key encrypt error
     */
    publicKeyEncryptError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for public key is not rsa
     */
    publicKeyIsNotRsa?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for public key not rsa
     */
    publicKeyNotRsa?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for read bio not set
     */
    readBioNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for read wrong packet type
     */
    readWrongPacketType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for record length mismatch
     */
    recordLengthMismatch?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for record too large
     */
    recordTooLarge?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for record too small
     */
    recordTooSmall?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for required cipher missing
     */
    requiredCipherMissing?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for reuse cert length not zero
     */
    reuseCertLengthNotZero?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for reuse cert type not zero
     */
    reuseCertTypeNotZero?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for reuse cipher list not zero
     */
    reuseCipherListNotZero?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for scsv received when renegotiating
     */
    scsvReceivedWhenRenegotiating?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for serverhello tlsext
     */
    serverhelloTlsext?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for session id context uninitialized
     */
    sessionIdContextUninitialized?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for short read
     */
    shortRead?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for signature for non signing certificate
     */
    signatureForNonSigningCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl23 doing session id reuse
     */
    ssl23DoingSessionIdReuse?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl2 connection id too long
     */
    ssl2ConnectionIdTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 ext invalid servername
     */
    ssl3ExtInvalidServername?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 ext invalid servername type
     */
    ssl3ExtInvalidServernameType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 session id too long
     */
    ssl3SessionIdTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl3 session id too short
     */
    ssl3SessionIdTooShort?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl ctx has no default ssl version
     */
    sslCtxHasNoDefaultSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl handshake failure
     */
    sslHandshakeFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl library has no ciphers
     */
    sslLibraryHasNoCiphers?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id callback failed
     */
    sslSessionIdCallbackFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id conflict
     */
    sslSessionIdConflict?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id context too long
     */
    sslSessionIdContextTooLong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id has bad length
     */
    sslSessionIdHasBadLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for ssl session id is different
     */
    sslSessionIdIsDifferent?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert bad certificate
     */
    sslv3AlertBadCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert bad record mac
     */
    sslv3AlertBadRecordMac?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate expired
     */
    sslv3AlertCertificateExpired?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate revoked
     */
    sslv3AlertCertificateRevoked?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert certificate unknown
     */
    sslv3AlertCertificateUnknown?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert decompression failure
     */
    sslv3AlertDecompressionFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert handshake failure
     */
    sslv3AlertHandshakeFailure?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert illegal parameter
     */
    sslv3AlertIllegalParameter?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert no certificate
     */
    sslv3AlertNoCertificate?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error cert
     */
    sslv3AlertPeerErrorCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error no cert
     */
    sslv3AlertPeerErrorNoCert?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error no cipher
     */
    sslv3AlertPeerErrorNoCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert peer error unsupp cert type
     */
    sslv3AlertPeerErrorUnsuppCertType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert unexpected msg
     */
    sslv3AlertUnexpectedMsg?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert unknown remote err type
     */
    sslv3AlertUnknownRemoteErrType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for sslv3 alert unspported cert
     */
    sslv3AlertUnspportedCert?: pulumi.Input<number>;
    /**
     * Set the threshold to the number of times greater than the previous duration to start the capture, default is 5
     */
    thresholdExceededBy?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls client cert req with anon cipher
     */
    tlsClientCertReqWithAnonCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls invalid ecpointformat list
     */
    tlsInvalidEcpointformatList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls peer did not respond with cert list
     */
    tlsPeerDidNotRespondWithCertList?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tls rsa encrypted value length is wrong
     */
    tlsRsaEncryptedValueLengthIsWrong?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert access denied
     */
    tlsv1AlertAccessDenied?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decode error
     */
    tlsv1AlertDecodeError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decrypt error
     */
    tlsv1AlertDecryptError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert decryption failed
     */
    tlsv1AlertDecryptionFailed?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert export restriction
     */
    tlsv1AlertExportRestriction?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert insufficient security
     */
    tlsv1AlertInsufficientSecurity?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert internal error
     */
    tlsv1AlertInternalError?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert no renegotiation
     */
    tlsv1AlertNoRenegotiation?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert protocol version
     */
    tlsv1AlertProtocolVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert record overflow
     */
    tlsv1AlertRecordOverflow?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert unknown ca
     */
    tlsv1AlertUnknownCa?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tlsv1 alert user cancelled
     */
    tlsv1AlertUserCancelled?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for tried to use unsupported cipher
     */
    triedToUseUnsupportedCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to decode dh certs
     */
    unableToDecodeDhCerts?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to extract public key
     */
    unableToExtractPublicKey?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to find dh parameters
     */
    unableToFindDhParameters?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to find public key parameters
     */
    unableToFindPublicKeyParameters?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to find ssl method
     */
    unableToFindSslMethod?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to load ssl2 md5 routines
     */
    unableToLoadSsl2Md5Routines?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to load ssl3 md5 routines
     */
    unableToLoadSsl3Md5Routines?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unable to load ssl3 sha1 routines
     */
    unableToLoadSsl3Sha1Routines?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unexpected message
     */
    unexpectedMessage?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unexpected record
     */
    unexpectedRecord?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for uninitialized
     */
    uninitialized?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown alert type
     */
    unknownAlertType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown certificate type
     */
    unknownCertificateType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown cipher returned
     */
    unknownCipherReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown cipher type
     */
    unknownCipherType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown key exchange type
     */
    unknownKeyExchangeType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown pkey type
     */
    unknownPkeyType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown protocol
     */
    unknownProtocol?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown remote error type
     */
    unknownRemoteErrorType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown ssl version
     */
    unknownSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unknown state
     */
    unknownState?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported cipher
     */
    unsupportedCipher?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported compression algorithm
     */
    unsupportedCompressionAlgorithm?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported digest type
     */
    unsupportedDigestType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported elliptic curve
     */
    unsupportedEllipticCurve?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported option
     */
    unsupportedOption?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported protocol
     */
    unsupportedProtocol?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported ssl version
     */
    unsupportedSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for unsupported status type
     */
    unsupportedStatusType?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
    /**
     * Enable automatic packet-capture for write bio not set
     */
    writeBioNotSet?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong cipher returned
     */
    wrongCipherReturned?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong counter of key bits
     */
    wrongCounterOfKeyBits?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong message type
     */
    wrongMessageType?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong signature length
     */
    wrongSignatureLength?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong signature size
     */
    wrongSignatureSize?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong ssl version
     */
    wrongSslVersion?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for wrong version counter
     */
    wrongVersionCounter?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for x509 lib
     */
    x509Lib?: pulumi.Input<number>;
    /**
     * Enable automatic packet-capture for x509 verification setup problems
     */
    x509VerificationSetupProblems?: pulumi.Input<number>;
}
