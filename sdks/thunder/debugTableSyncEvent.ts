// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DebugTableSyncEvent extends pulumi.CustomResource {
    /**
     * Get an existing DebugTableSyncEvent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DebugTableSyncEventState, opts?: pulumi.CustomResourceOptions): DebugTableSyncEvent {
        return new DebugTableSyncEvent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'thunder:index/debugTableSyncEvent:DebugTableSyncEvent';

    /**
     * Returns true if the given object is an instance of DebugTableSyncEvent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DebugTableSyncEvent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DebugTableSyncEvent.__pulumiType;
    }

    /**
     * all Event Information
     */
    public readonly all!: pulumi.Output<number | undefined>;
    /**
     * ARP Event Information
     */
    public readonly arp!: pulumi.Output<number | undefined>;
    /**
     * IPv4 FIB Event Information
     */
    public readonly fibv4!: pulumi.Output<number | undefined>;
    /**
     * IPv6 FIB Event Information
     */
    public readonly fibv6!: pulumi.Output<number | undefined>;
    /**
     * MAC Event Information
     */
    public readonly mac!: pulumi.Output<number | undefined>;
    /**
     * ND6 Event Information
     */
    public readonly nd6!: pulumi.Output<number | undefined>;
    /**
     * uuid of the object
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a DebugTableSyncEvent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DebugTableSyncEventArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DebugTableSyncEventArgs | DebugTableSyncEventState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DebugTableSyncEventState | undefined;
            resourceInputs["all"] = state ? state.all : undefined;
            resourceInputs["arp"] = state ? state.arp : undefined;
            resourceInputs["fibv4"] = state ? state.fibv4 : undefined;
            resourceInputs["fibv6"] = state ? state.fibv6 : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["nd6"] = state ? state.nd6 : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as DebugTableSyncEventArgs | undefined;
            resourceInputs["all"] = args ? args.all : undefined;
            resourceInputs["arp"] = args ? args.arp : undefined;
            resourceInputs["fibv4"] = args ? args.fibv4 : undefined;
            resourceInputs["fibv6"] = args ? args.fibv6 : undefined;
            resourceInputs["mac"] = args ? args.mac : undefined;
            resourceInputs["nd6"] = args ? args.nd6 : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DebugTableSyncEvent.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DebugTableSyncEvent resources.
 */
export interface DebugTableSyncEventState {
    /**
     * all Event Information
     */
    all?: pulumi.Input<number>;
    /**
     * ARP Event Information
     */
    arp?: pulumi.Input<number>;
    /**
     * IPv4 FIB Event Information
     */
    fibv4?: pulumi.Input<number>;
    /**
     * IPv6 FIB Event Information
     */
    fibv6?: pulumi.Input<number>;
    /**
     * MAC Event Information
     */
    mac?: pulumi.Input<number>;
    /**
     * ND6 Event Information
     */
    nd6?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DebugTableSyncEvent resource.
 */
export interface DebugTableSyncEventArgs {
    /**
     * all Event Information
     */
    all?: pulumi.Input<number>;
    /**
     * ARP Event Information
     */
    arp?: pulumi.Input<number>;
    /**
     * IPv4 FIB Event Information
     */
    fibv4?: pulumi.Input<number>;
    /**
     * IPv6 FIB Event Information
     */
    fibv6?: pulumi.Input<number>;
    /**
     * MAC Event Information
     */
    mac?: pulumi.Input<number>;
    /**
     * ND6 Event Information
     */
    nd6?: pulumi.Input<number>;
    /**
     * uuid of the object
     */
    uuid?: pulumi.Input<string>;
}
