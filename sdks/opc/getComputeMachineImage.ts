// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeMachineImage(args: GetComputeMachineImageArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeMachineImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opc:index/getComputeMachineImage:getComputeMachineImage", {
        "account": args.account,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeMachineImage.
 */
export interface GetComputeMachineImageArgs {
    account: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getComputeMachineImage.
 */
export interface GetComputeMachineImageResult {
    readonly account: string;
    readonly attributes: string;
    readonly description: string;
    readonly errorReason: string;
    readonly file: string;
    readonly hypervisor: {[key: string]: string};
    readonly id: string;
    readonly imageFormat: string;
    readonly name: string;
    readonly noUpload: boolean;
    readonly platform: string;
    readonly sizes: {[key: string]: string};
    readonly state: string;
    readonly uri: string;
}
export function getComputeMachineImageOutput(args: GetComputeMachineImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeMachineImageResult> {
    return pulumi.output(args).apply((a: any) => getComputeMachineImage(a, opts))
}

/**
 * A collection of arguments for invoking getComputeMachineImage.
 */
export interface GetComputeMachineImageOutputArgs {
    account: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
