// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StorageObject extends pulumi.CustomResource {
    /**
     * Get an existing StorageObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageObjectState, opts?: pulumi.CustomResourceOptions): StorageObject {
        return new StorageObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opc:index/storageObject:StorageObject';

    /**
     * Returns true if the given object is an instance of StorageObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageObject.__pulumiType;
    }

    /**
     * Type of ranges that the object accepts
     */
    public /*out*/ readonly acceptRanges!: pulumi.Output<string>;
    /**
     * Name of the storage container
     */
    public readonly container!: pulumi.Output<string>;
    /**
     * Raw content in string-form of the data
     */
    public readonly content!: pulumi.Output<string | undefined>;
    /**
     * Overrides the behavior of the browser
     */
    public readonly contentDisposition!: pulumi.Output<string | undefined>;
    /**
     * Set the content-encoding metadata
     */
    public readonly contentEncoding!: pulumi.Output<string | undefined>;
    /**
     * Length of the object in bytes
     */
    public /*out*/ readonly contentLength!: pulumi.Output<number>;
    /**
     * Set the MIME type for the object
     */
    public readonly contentType!: pulumi.Output<string>;
    public readonly copyFrom!: pulumi.Output<string | undefined>;
    /**
     * The date and time in UNIX Epoch time stamp format when the system removes the object
     */
    public readonly deleteAt!: pulumi.Output<number>;
    /**
     * MD5 checksum value of the request body. Unquoted. Strongly Recommended
     */
    public readonly etag!: pulumi.Output<string>;
    /**
     * File path for the content to use for data
     */
    public readonly file!: pulumi.Output<string | undefined>;
    /**
     * Date and Time that the object was created/modified in ISO 8601
     */
    public /*out*/ readonly lastModified!: pulumi.Output<string>;
    /**
     * The object metadata
     */
    public readonly metadata!: pulumi.Output<{[key: string]: string}>;
    /**
     * Name of the storage object
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The dynamic large-object manifest object
     */
    public /*out*/ readonly objectManifest!: pulumi.Output<string>;
    /**
     * Date and Time in UNIX EPOCH when the account, container, or object was initially created at the current version
     */
    public /*out*/ readonly timestamp!: pulumi.Output<string>;
    /**
     * Transaction ID of the request. Used for bug reports
     */
    public /*out*/ readonly transactionId!: pulumi.Output<string>;
    /**
     * Sets the transfer encoding. Can only be 'chunked' or Nil, requires Content-Length to be 0 if set
     */
    public readonly transferEncoding!: pulumi.Output<string | undefined>;

    /**
     * Create a StorageObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageObjectArgs | StorageObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageObjectState | undefined;
            resourceInputs["acceptRanges"] = state ? state.acceptRanges : undefined;
            resourceInputs["container"] = state ? state.container : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["contentDisposition"] = state ? state.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = state ? state.contentEncoding : undefined;
            resourceInputs["contentLength"] = state ? state.contentLength : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["copyFrom"] = state ? state.copyFrom : undefined;
            resourceInputs["deleteAt"] = state ? state.deleteAt : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["file"] = state ? state.file : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectManifest"] = state ? state.objectManifest : undefined;
            resourceInputs["timestamp"] = state ? state.timestamp : undefined;
            resourceInputs["transactionId"] = state ? state.transactionId : undefined;
            resourceInputs["transferEncoding"] = state ? state.transferEncoding : undefined;
        } else {
            const args = argsOrState as StorageObjectArgs | undefined;
            if ((!args || args.container === undefined) && !opts.urn) {
                throw new Error("Missing required property 'container'");
            }
            resourceInputs["container"] = args ? args.container : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["contentDisposition"] = args ? args.contentDisposition : undefined;
            resourceInputs["contentEncoding"] = args ? args.contentEncoding : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["copyFrom"] = args ? args.copyFrom : undefined;
            resourceInputs["deleteAt"] = args ? args.deleteAt : undefined;
            resourceInputs["etag"] = args ? args.etag : undefined;
            resourceInputs["file"] = args ? args.file : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["transferEncoding"] = args ? args.transferEncoding : undefined;
            resourceInputs["acceptRanges"] = undefined /*out*/;
            resourceInputs["contentLength"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["objectManifest"] = undefined /*out*/;
            resourceInputs["timestamp"] = undefined /*out*/;
            resourceInputs["transactionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageObject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageObject resources.
 */
export interface StorageObjectState {
    /**
     * Type of ranges that the object accepts
     */
    acceptRanges?: pulumi.Input<string>;
    /**
     * Name of the storage container
     */
    container?: pulumi.Input<string>;
    /**
     * Raw content in string-form of the data
     */
    content?: pulumi.Input<string>;
    /**
     * Overrides the behavior of the browser
     */
    contentDisposition?: pulumi.Input<string>;
    /**
     * Set the content-encoding metadata
     */
    contentEncoding?: pulumi.Input<string>;
    /**
     * Length of the object in bytes
     */
    contentLength?: pulumi.Input<number>;
    /**
     * Set the MIME type for the object
     */
    contentType?: pulumi.Input<string>;
    copyFrom?: pulumi.Input<string>;
    /**
     * The date and time in UNIX Epoch time stamp format when the system removes the object
     */
    deleteAt?: pulumi.Input<number>;
    /**
     * MD5 checksum value of the request body. Unquoted. Strongly Recommended
     */
    etag?: pulumi.Input<string>;
    /**
     * File path for the content to use for data
     */
    file?: pulumi.Input<string>;
    /**
     * Date and Time that the object was created/modified in ISO 8601
     */
    lastModified?: pulumi.Input<string>;
    /**
     * The object metadata
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the storage object
     */
    name?: pulumi.Input<string>;
    /**
     * The dynamic large-object manifest object
     */
    objectManifest?: pulumi.Input<string>;
    /**
     * Date and Time in UNIX EPOCH when the account, container, or object was initially created at the current version
     */
    timestamp?: pulumi.Input<string>;
    /**
     * Transaction ID of the request. Used for bug reports
     */
    transactionId?: pulumi.Input<string>;
    /**
     * Sets the transfer encoding. Can only be 'chunked' or Nil, requires Content-Length to be 0 if set
     */
    transferEncoding?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StorageObject resource.
 */
export interface StorageObjectArgs {
    /**
     * Name of the storage container
     */
    container: pulumi.Input<string>;
    /**
     * Raw content in string-form of the data
     */
    content?: pulumi.Input<string>;
    /**
     * Overrides the behavior of the browser
     */
    contentDisposition?: pulumi.Input<string>;
    /**
     * Set the content-encoding metadata
     */
    contentEncoding?: pulumi.Input<string>;
    /**
     * Set the MIME type for the object
     */
    contentType?: pulumi.Input<string>;
    copyFrom?: pulumi.Input<string>;
    /**
     * The date and time in UNIX Epoch time stamp format when the system removes the object
     */
    deleteAt?: pulumi.Input<number>;
    /**
     * MD5 checksum value of the request body. Unquoted. Strongly Recommended
     */
    etag?: pulumi.Input<string>;
    /**
     * File path for the content to use for data
     */
    file?: pulumi.Input<string>;
    /**
     * The object metadata
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the storage object
     */
    name?: pulumi.Input<string>;
    /**
     * Sets the transfer encoding. Can only be 'chunked' or Nil, requires Content-Length to be 0 if set
     */
    transferEncoding?: pulumi.Input<string>;
}
