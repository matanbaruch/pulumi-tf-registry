// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ComputeInstanceNetworkingInfo {
    dns: string[];
    index: number;
    ipAddress?: string;
    ipNetwork?: string;
    isDefaultGateway?: boolean;
    macAddress: string;
    nameServers?: string[];
    nats?: string[];
    searchDomains?: string[];
    secLists: string[];
    sharedNetwork?: boolean;
    vnic?: string;
    vnicSets?: string[];
}

export interface ComputeInstanceStorage {
    index: number;
    name: string;
    volume: string;
}

export interface ComputeInstanceTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface ComputeOrchestratedInstanceInstance {
    attributes: string;
    availabilityDomain: string;
    bootOrders?: number[];
    domain: string;
    entry: number;
    fingerprint: string;
    fqdn: string;
    hostname: string;
    id: string;
    imageFormat: string;
    imageList?: string;
    instanceAttributes: string;
    ipAddress: string;
    label: string;
    name: string;
    networkingInfos?: outputs.ComputeOrchestratedInstanceInstanceNetworkingInfo[];
    persistent?: boolean;
    placementRequirements: string[];
    platform: string;
    priority: string;
    quotaReservation: string;
    relationships: string[];
    resolvers: string[];
    reverseDns?: boolean;
    shape: string;
    site: string;
    sshKeys?: string[];
    startTime: string;
    state: string;
    storages?: outputs.ComputeOrchestratedInstanceInstanceStorage[];
    tags?: string[];
    vcable: string;
    virtio: boolean;
    vncAddress: string;
}

export interface ComputeOrchestratedInstanceInstanceNetworkingInfo {
    dns: string[];
    index: number;
    ipAddress?: string;
    ipNetwork?: string;
    isDefaultGateway?: boolean;
    macAddress: string;
    nameServers?: string[];
    nats?: string[];
    searchDomains?: string[];
    secLists: string[];
    sharedNetwork?: boolean;
    vnic?: string;
    vnicSets?: string[];
}

export interface ComputeOrchestratedInstanceInstanceStorage {
    index: number;
    name: string;
    volume: string;
}

export interface ComputeOrchestratedInstanceTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface ComputeSnapshotTimeouts {
    create?: string;
    delete?: string;
}

export interface ComputeStorageAttachmentTimeouts {
    create?: string;
    delete?: string;
}

export interface ComputeStorageVolumeSnapshotTimeouts {
    create?: string;
    delete?: string;
}

export interface ComputeStorageVolumeTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface ComputeVpnEndpointV2PhaseOneSettings {
    dhGroup: string;
    encryption: string;
    hash: string;
    lifetime?: number;
}

export interface ComputeVpnEndpointV2PhaseTwoSettings {
    encryption: string;
    hash: string;
    lifetime?: number;
}

export interface ComputeVpnEndpointV2Timeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface LbaasPolicyApplicationCookieStickinessPolicy {
    cookieName: string;
}

export interface LbaasPolicyCloudgatePolicy {
    cloudgateApplication?: string;
    cloudgatePolicyName?: string;
    identityServiceInstanceGuid?: string;
    virtualHostnameForPolicyAttribution: string;
}

export interface LbaasPolicyLoadBalancerCookieStickinessPolicy {
    cookieExpirationPeriod: number;
}

export interface LbaasPolicyLoadBalancingMechanismPolicy {
    loadBalancingMechanism: string;
}

export interface LbaasPolicyRateLimitingRequestPolicy {
    burstSize: number;
    delayExcessiveRequests: boolean;
    httpErrorCode?: number;
    loggingLevel?: string;
    rateLimitingCriteria?: string;
    requestsPerSecond: number;
    zone: string;
    zoneMemorySize?: number;
}

export interface LbaasPolicyRedirectPolicy {
    redirectUri: string;
    responseCode: number;
}

export interface LbaasPolicyResourceAccessControlPolicy {
    deniedClients?: string[];
    disposition: string;
    permittedClients?: string[];
}

export interface LbaasPolicySetRequestHeaderPolicy {
    actionWhenHeaderExists?: string;
    actionWhenHeaderValueIs?: string[];
    actionWhenHeaderValueIsNots?: string[];
    headerName: string;
    value?: string;
}

export interface LbaasPolicySslNegotiationPolicy {
    port: number;
    serverOrderPreference?: string;
    sslCiphers?: string[];
    sslProtocols: string[];
}

export interface LbaasPolicyTrustedCertificatePolicy {
    trustedCertificate: string;
}

export interface LbaasServerPoolHealthCheck {
    acceptedReturnCodes: string[];
    enabled?: boolean;
    healthyThreshold?: number;
    interval?: number;
    path?: string;
    timeout?: number;
    type?: string;
    unhealthyThreshold?: number;
}

