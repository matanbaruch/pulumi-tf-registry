// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeNetworkInterface(args: GetComputeNetworkInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeNetworkInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opc:index/getComputeNetworkInterface:getComputeNetworkInterface", {
        "id": args.id,
        "instanceId": args.instanceId,
        "instanceName": args.instanceName,
        "interface": args.interface,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeNetworkInterface.
 */
export interface GetComputeNetworkInterfaceArgs {
    id?: string;
    instanceId: string;
    instanceName: string;
    interface: string;
}

/**
 * A collection of values returned by getComputeNetworkInterface.
 */
export interface GetComputeNetworkInterfaceResult {
    readonly dns: string[];
    readonly id: string;
    readonly instanceId: string;
    readonly instanceName: string;
    readonly interface: string;
    readonly ipAddress: string;
    readonly ipNetwork: string;
    readonly isDefaultGateway: boolean;
    readonly macAddress: string;
    readonly model: string;
    readonly nameServers: string[];
    readonly nats: string[];
    readonly searchDomains: string[];
    readonly secLists: string[];
    readonly sharedNetwork: boolean;
    readonly vnic: string;
    readonly vnicSets: string[];
}
export function getComputeNetworkInterfaceOutput(args: GetComputeNetworkInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeNetworkInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getComputeNetworkInterface(a, opts))
}

/**
 * A collection of arguments for invoking getComputeNetworkInterface.
 */
export interface GetComputeNetworkInterfaceOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    instanceName: pulumi.Input<string>;
    interface: pulumi.Input<string>;
}
