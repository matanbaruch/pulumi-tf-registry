// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("opc");

/**
 * The HTTP endpoint for OPC API operations.
 */
export declare const endpoint: string | undefined;
Object.defineProperty(exports, "endpoint", {
    get() {
        return __config.get("endpoint");
    },
    enumerable: true,
});

/**
 * The OPC identity domain for API operations
 */
export declare const identityDomain: string | undefined;
Object.defineProperty(exports, "identityDomain", {
    get() {
        return __config.get("identityDomain");
    },
    enumerable: true,
});

/**
 * Skip TLS Verification for self-signed certificates. Should only be used if absolutely required.
 */
export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

/**
 * The HTTP endpoint for the Load Balancer Classic service.
 */
export declare const lbaasEndpoint: string | undefined;
Object.defineProperty(exports, "lbaasEndpoint", {
    get() {
        return __config.get("lbaasEndpoint");
    },
    enumerable: true,
});

/**
 * Maximum number retries to wait for a successful response when operating on resources within OPC (defaults to 1)
 */
export declare const maxRetries: number | undefined;
Object.defineProperty(exports, "maxRetries", {
    get() {
        return __config.getObject<number>("maxRetries");
    },
    enumerable: true,
});

/**
 * The user password for OPC API operations.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * The HTTP endpoint for Oracle Storage operations.
 */
export declare const storageEndpoint: string | undefined;
Object.defineProperty(exports, "storageEndpoint", {
    get() {
        return __config.get("storageEndpoint");
    },
    enumerable: true,
});

/**
 * The Storage Service ID.
 */
export declare const storageServiceId: string | undefined;
Object.defineProperty(exports, "storageServiceId", {
    get() {
        return __config.get("storageServiceId");
    },
    enumerable: true,
});

/**
 * The user name for OPC API operations.
 */
export declare const user: string | undefined;
Object.defineProperty(exports, "user", {
    get() {
        return __config.get("user");
    },
    enumerable: true,
});

