// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the opc package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'opc';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * The HTTP endpoint for OPC API operations.
     */
    public readonly endpoint!: pulumi.Output<string | undefined>;
    /**
     * The OPC identity domain for API operations
     */
    public readonly identityDomain!: pulumi.Output<string>;
    /**
     * The HTTP endpoint for the Load Balancer Classic service.
     */
    public readonly lbaasEndpoint!: pulumi.Output<string | undefined>;
    /**
     * The user password for OPC API operations.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * The HTTP endpoint for Oracle Storage operations.
     */
    public readonly storageEndpoint!: pulumi.Output<string | undefined>;
    /**
     * The Storage Service ID.
     */
    public readonly storageServiceId!: pulumi.Output<string | undefined>;
    /**
     * The user name for OPC API operations.
     */
    public readonly user!: pulumi.Output<string>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            if ((!args || args.identityDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityDomain'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.user === undefined) && !opts.urn) {
                throw new Error("Missing required property 'user'");
            }
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["identityDomain"] = args ? args.identityDomain : undefined;
            resourceInputs["insecure"] = pulumi.output(args ? args.insecure : undefined).apply(JSON.stringify);
            resourceInputs["lbaasEndpoint"] = args ? args.lbaasEndpoint : undefined;
            resourceInputs["maxRetries"] = pulumi.output(args ? args.maxRetries : undefined).apply(JSON.stringify);
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["storageEndpoint"] = args ? args.storageEndpoint : undefined;
            resourceInputs["storageServiceId"] = args ? args.storageServiceId : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * The HTTP endpoint for OPC API operations.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The OPC identity domain for API operations
     */
    identityDomain: pulumi.Input<string>;
    /**
     * Skip TLS Verification for self-signed certificates. Should only be used if absolutely required.
     */
    insecure?: pulumi.Input<boolean>;
    /**
     * The HTTP endpoint for the Load Balancer Classic service.
     */
    lbaasEndpoint?: pulumi.Input<string>;
    /**
     * Maximum number retries to wait for a successful response when operating on resources within OPC (defaults to 1)
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * The user password for OPC API operations.
     */
    password: pulumi.Input<string>;
    /**
     * The HTTP endpoint for Oracle Storage operations.
     */
    storageEndpoint?: pulumi.Input<string>;
    /**
     * The Storage Service ID.
     */
    storageServiceId?: pulumi.Input<string>;
    /**
     * The user name for OPC API operations.
     */
    user: pulumi.Input<string>;
}
