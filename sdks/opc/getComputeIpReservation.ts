// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeIpReservation(args: GetComputeIpReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeIpReservationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opc:index/getComputeIpReservation:getComputeIpReservation", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeIpReservation.
 */
export interface GetComputeIpReservationArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getComputeIpReservation.
 */
export interface GetComputeIpReservationResult {
    readonly id: string;
    readonly ip: string;
    readonly name: string;
    readonly parentPool: string;
    readonly permanent: boolean;
    readonly tags: string[];
    readonly used: boolean;
}
export function getComputeIpReservationOutput(args: GetComputeIpReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeIpReservationResult> {
    return pulumi.output(args).apply((a: any) => getComputeIpReservation(a, opts))
}

/**
 * A collection of arguments for invoking getComputeIpReservation.
 */
export interface GetComputeIpReservationOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
