// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeVnic(args: GetComputeVnicArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeVnicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opc:index/getComputeVnic:getComputeVnic", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeVnic.
 */
export interface GetComputeVnicArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getComputeVnic.
 */
export interface GetComputeVnicResult {
    readonly description: string;
    readonly id: string;
    readonly macAddress: string;
    readonly name: string;
    readonly tags: string[];
    readonly transitFlag: boolean;
    readonly uri: string;
}
export function getComputeVnicOutput(args: GetComputeVnicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeVnicResult> {
    return pulumi.output(args).apply((a: any) => getComputeVnic(a, opts))
}

/**
 * A collection of arguments for invoking getComputeVnic.
 */
export interface GetComputeVnicOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
