// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ComputeSecurityRule extends pulumi.CustomResource {
    /**
     * Get an existing ComputeSecurityRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeSecurityRuleState, opts?: pulumi.CustomResourceOptions): ComputeSecurityRule {
        return new ComputeSecurityRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opc:index/computeSecurityRule:ComputeSecurityRule';

    /**
     * Returns true if the given object is an instance of ComputeSecurityRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeSecurityRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeSecurityRule.__pulumiType;
    }

    public readonly acl!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly dstIpAddressPrefixes!: pulumi.Output<string[] | undefined>;
    public readonly dstVnicSet!: pulumi.Output<string | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly flowDirection!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly securityProtocols!: pulumi.Output<string[] | undefined>;
    public readonly srcIpAddressPrefixes!: pulumi.Output<string[] | undefined>;
    public readonly srcVnicSet!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly uri!: pulumi.Output<string>;

    /**
     * Create a ComputeSecurityRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeSecurityRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeSecurityRuleArgs | ComputeSecurityRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeSecurityRuleState | undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dstIpAddressPrefixes"] = state ? state.dstIpAddressPrefixes : undefined;
            resourceInputs["dstVnicSet"] = state ? state.dstVnicSet : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["flowDirection"] = state ? state.flowDirection : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["securityProtocols"] = state ? state.securityProtocols : undefined;
            resourceInputs["srcIpAddressPrefixes"] = state ? state.srcIpAddressPrefixes : undefined;
            resourceInputs["srcVnicSet"] = state ? state.srcVnicSet : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as ComputeSecurityRuleArgs | undefined;
            if ((!args || args.flowDirection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flowDirection'");
            }
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dstIpAddressPrefixes"] = args ? args.dstIpAddressPrefixes : undefined;
            resourceInputs["dstVnicSet"] = args ? args.dstVnicSet : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["flowDirection"] = args ? args.flowDirection : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["securityProtocols"] = args ? args.securityProtocols : undefined;
            resourceInputs["srcIpAddressPrefixes"] = args ? args.srcIpAddressPrefixes : undefined;
            resourceInputs["srcVnicSet"] = args ? args.srcVnicSet : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["uri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeSecurityRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeSecurityRule resources.
 */
export interface ComputeSecurityRuleState {
    acl?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dstIpAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    dstVnicSet?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    flowDirection?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    securityProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    srcIpAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    srcVnicSet?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeSecurityRule resource.
 */
export interface ComputeSecurityRuleArgs {
    acl?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dstIpAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    dstVnicSet?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    flowDirection: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    securityProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    srcIpAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    srcVnicSet?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
