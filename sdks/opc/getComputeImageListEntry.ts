// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputeImageListEntry(args: GetComputeImageListEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeImageListEntryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opc:index/getComputeImageListEntry:getComputeImageListEntry", {
        "entry": args.entry,
        "id": args.id,
        "imageList": args.imageList,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputeImageListEntry.
 */
export interface GetComputeImageListEntryArgs {
    entry?: number;
    id?: string;
    imageList: string;
    version: number;
}

/**
 * A collection of values returned by getComputeImageListEntry.
 */
export interface GetComputeImageListEntryResult {
    readonly attributes: string;
    readonly entry?: number;
    readonly id: string;
    readonly imageList: string;
    readonly machineImages: string[];
    readonly uri: string;
    readonly version: number;
}
export function getComputeImageListEntryOutput(args: GetComputeImageListEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputeImageListEntryResult> {
    return pulumi.output(args).apply((a: any) => getComputeImageListEntry(a, opts))
}

/**
 * A collection of arguments for invoking getComputeImageListEntry.
 */
export interface GetComputeImageListEntryOutputArgs {
    entry?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    imageList: pulumi.Input<string>;
    version: pulumi.Input<number>;
}
