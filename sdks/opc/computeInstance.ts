// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComputeInstance extends pulumi.CustomResource {
    /**
     * Get an existing ComputeInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputeInstanceState, opts?: pulumi.CustomResourceOptions): ComputeInstance {
        return new ComputeInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opc:index/computeInstance:ComputeInstance';

    /**
     * Returns true if the given object is an instance of ComputeInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputeInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputeInstance.__pulumiType;
    }

    public /*out*/ readonly attributes!: pulumi.Output<string>;
    public /*out*/ readonly availabilityDomain!: pulumi.Output<string>;
    public readonly bootOrders!: pulumi.Output<number[] | undefined>;
    public readonly desiredState!: pulumi.Output<string | undefined>;
    public /*out*/ readonly domain!: pulumi.Output<string>;
    public /*out*/ readonly entry!: pulumi.Output<number>;
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    public /*out*/ readonly fqdn!: pulumi.Output<string>;
    public readonly hostname!: pulumi.Output<string>;
    public /*out*/ readonly imageFormat!: pulumi.Output<string>;
    public readonly imageList!: pulumi.Output<string | undefined>;
    public readonly instanceAttributes!: pulumi.Output<string | undefined>;
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    public readonly label!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkingInfos!: pulumi.Output<outputs.ComputeInstanceNetworkingInfo[] | undefined>;
    public /*out*/ readonly placementRequirements!: pulumi.Output<string[]>;
    public /*out*/ readonly platform!: pulumi.Output<string>;
    public /*out*/ readonly priority!: pulumi.Output<string>;
    public /*out*/ readonly quotaReservation!: pulumi.Output<string>;
    public /*out*/ readonly relationships!: pulumi.Output<string[]>;
    public /*out*/ readonly resolvers!: pulumi.Output<string[]>;
    public readonly reverseDns!: pulumi.Output<boolean | undefined>;
    public readonly shape!: pulumi.Output<string>;
    public /*out*/ readonly site!: pulumi.Output<string>;
    public readonly sshKeys!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly startTime!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly storages!: pulumi.Output<outputs.ComputeInstanceStorage[] | undefined>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ComputeInstanceTimeouts | undefined>;
    public /*out*/ readonly vcable!: pulumi.Output<string>;
    public /*out*/ readonly virtio!: pulumi.Output<boolean>;
    public /*out*/ readonly vncAddress!: pulumi.Output<string>;

    /**
     * Create a ComputeInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputeInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputeInstanceArgs | ComputeInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputeInstanceState | undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["bootOrders"] = state ? state.bootOrders : undefined;
            resourceInputs["desiredState"] = state ? state.desiredState : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["entry"] = state ? state.entry : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["fqdn"] = state ? state.fqdn : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["imageFormat"] = state ? state.imageFormat : undefined;
            resourceInputs["imageList"] = state ? state.imageList : undefined;
            resourceInputs["instanceAttributes"] = state ? state.instanceAttributes : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkingInfos"] = state ? state.networkingInfos : undefined;
            resourceInputs["placementRequirements"] = state ? state.placementRequirements : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["quotaReservation"] = state ? state.quotaReservation : undefined;
            resourceInputs["relationships"] = state ? state.relationships : undefined;
            resourceInputs["resolvers"] = state ? state.resolvers : undefined;
            resourceInputs["reverseDns"] = state ? state.reverseDns : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["site"] = state ? state.site : undefined;
            resourceInputs["sshKeys"] = state ? state.sshKeys : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storages"] = state ? state.storages : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vcable"] = state ? state.vcable : undefined;
            resourceInputs["virtio"] = state ? state.virtio : undefined;
            resourceInputs["vncAddress"] = state ? state.vncAddress : undefined;
        } else {
            const args = argsOrState as ComputeInstanceArgs | undefined;
            if ((!args || args.shape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shape'");
            }
            resourceInputs["bootOrders"] = args ? args.bootOrders : undefined;
            resourceInputs["desiredState"] = args ? args.desiredState : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["imageList"] = args ? args.imageList : undefined;
            resourceInputs["instanceAttributes"] = args ? args.instanceAttributes : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkingInfos"] = args ? args.networkingInfos : undefined;
            resourceInputs["reverseDns"] = args ? args.reverseDns : undefined;
            resourceInputs["shape"] = args ? args.shape : undefined;
            resourceInputs["sshKeys"] = args ? args.sshKeys : undefined;
            resourceInputs["storages"] = args ? args.storages : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["attributes"] = undefined /*out*/;
            resourceInputs["availabilityDomain"] = undefined /*out*/;
            resourceInputs["domain"] = undefined /*out*/;
            resourceInputs["entry"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["fqdn"] = undefined /*out*/;
            resourceInputs["imageFormat"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["placementRequirements"] = undefined /*out*/;
            resourceInputs["platform"] = undefined /*out*/;
            resourceInputs["priority"] = undefined /*out*/;
            resourceInputs["quotaReservation"] = undefined /*out*/;
            resourceInputs["relationships"] = undefined /*out*/;
            resourceInputs["resolvers"] = undefined /*out*/;
            resourceInputs["site"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["vcable"] = undefined /*out*/;
            resourceInputs["virtio"] = undefined /*out*/;
            resourceInputs["vncAddress"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputeInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComputeInstance resources.
 */
export interface ComputeInstanceState {
    attributes?: pulumi.Input<string>;
    availabilityDomain?: pulumi.Input<string>;
    bootOrders?: pulumi.Input<pulumi.Input<number>[]>;
    desiredState?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    entry?: pulumi.Input<number>;
    fingerprint?: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    imageFormat?: pulumi.Input<string>;
    imageList?: pulumi.Input<string>;
    instanceAttributes?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkingInfos?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceNetworkingInfo>[]>;
    placementRequirements?: pulumi.Input<pulumi.Input<string>[]>;
    platform?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    quotaReservation?: pulumi.Input<string>;
    relationships?: pulumi.Input<pulumi.Input<string>[]>;
    resolvers?: pulumi.Input<pulumi.Input<string>[]>;
    reverseDns?: pulumi.Input<boolean>;
    shape?: pulumi.Input<string>;
    site?: pulumi.Input<string>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    startTime?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storages?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceStorage>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ComputeInstanceTimeouts>;
    vcable?: pulumi.Input<string>;
    virtio?: pulumi.Input<boolean>;
    vncAddress?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ComputeInstance resource.
 */
export interface ComputeInstanceArgs {
    bootOrders?: pulumi.Input<pulumi.Input<number>[]>;
    desiredState?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    imageList?: pulumi.Input<string>;
    instanceAttributes?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkingInfos?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceNetworkingInfo>[]>;
    reverseDns?: pulumi.Input<boolean>;
    shape: pulumi.Input<string>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    storages?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceStorage>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.ComputeInstanceTimeouts>;
}
