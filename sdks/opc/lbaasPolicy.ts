// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LbaasPolicy extends pulumi.CustomResource {
    /**
     * Get an existing LbaasPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbaasPolicyState, opts?: pulumi.CustomResourceOptions): LbaasPolicy {
        return new LbaasPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'opc:index/lbaasPolicy:LbaasPolicy';

    /**
     * Returns true if the given object is an instance of LbaasPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LbaasPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LbaasPolicy.__pulumiType;
    }

    public readonly applicationCookieStickinessPolicy!: pulumi.Output<outputs.LbaasPolicyApplicationCookieStickinessPolicy | undefined>;
    public readonly cloudgatePolicy!: pulumi.Output<outputs.LbaasPolicyCloudgatePolicy | undefined>;
    public readonly loadBalancer!: pulumi.Output<string>;
    public readonly loadBalancerCookieStickinessPolicy!: pulumi.Output<outputs.LbaasPolicyLoadBalancerCookieStickinessPolicy | undefined>;
    public readonly loadBalancingMechanismPolicy!: pulumi.Output<outputs.LbaasPolicyLoadBalancingMechanismPolicy | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly rateLimitingRequestPolicy!: pulumi.Output<outputs.LbaasPolicyRateLimitingRequestPolicy | undefined>;
    public readonly redirectPolicy!: pulumi.Output<outputs.LbaasPolicyRedirectPolicy | undefined>;
    public readonly resourceAccessControlPolicy!: pulumi.Output<outputs.LbaasPolicyResourceAccessControlPolicy | undefined>;
    public readonly setRequestHeaderPolicy!: pulumi.Output<outputs.LbaasPolicySetRequestHeaderPolicy | undefined>;
    public readonly sslNegotiationPolicy!: pulumi.Output<outputs.LbaasPolicySslNegotiationPolicy | undefined>;
    public /*out*/ readonly state!: pulumi.Output<boolean>;
    public readonly trustedCertificatePolicy!: pulumi.Output<outputs.LbaasPolicyTrustedCertificatePolicy | undefined>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    public /*out*/ readonly uri!: pulumi.Output<string>;

    /**
     * Create a LbaasPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbaasPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbaasPolicyArgs | LbaasPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbaasPolicyState | undefined;
            resourceInputs["applicationCookieStickinessPolicy"] = state ? state.applicationCookieStickinessPolicy : undefined;
            resourceInputs["cloudgatePolicy"] = state ? state.cloudgatePolicy : undefined;
            resourceInputs["loadBalancer"] = state ? state.loadBalancer : undefined;
            resourceInputs["loadBalancerCookieStickinessPolicy"] = state ? state.loadBalancerCookieStickinessPolicy : undefined;
            resourceInputs["loadBalancingMechanismPolicy"] = state ? state.loadBalancingMechanismPolicy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rateLimitingRequestPolicy"] = state ? state.rateLimitingRequestPolicy : undefined;
            resourceInputs["redirectPolicy"] = state ? state.redirectPolicy : undefined;
            resourceInputs["resourceAccessControlPolicy"] = state ? state.resourceAccessControlPolicy : undefined;
            resourceInputs["setRequestHeaderPolicy"] = state ? state.setRequestHeaderPolicy : undefined;
            resourceInputs["sslNegotiationPolicy"] = state ? state.sslNegotiationPolicy : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["trustedCertificatePolicy"] = state ? state.trustedCertificatePolicy : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as LbaasPolicyArgs | undefined;
            if ((!args || args.loadBalancer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancer'");
            }
            resourceInputs["applicationCookieStickinessPolicy"] = args ? args.applicationCookieStickinessPolicy : undefined;
            resourceInputs["cloudgatePolicy"] = args ? args.cloudgatePolicy : undefined;
            resourceInputs["loadBalancer"] = args ? args.loadBalancer : undefined;
            resourceInputs["loadBalancerCookieStickinessPolicy"] = args ? args.loadBalancerCookieStickinessPolicy : undefined;
            resourceInputs["loadBalancingMechanismPolicy"] = args ? args.loadBalancingMechanismPolicy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rateLimitingRequestPolicy"] = args ? args.rateLimitingRequestPolicy : undefined;
            resourceInputs["redirectPolicy"] = args ? args.redirectPolicy : undefined;
            resourceInputs["resourceAccessControlPolicy"] = args ? args.resourceAccessControlPolicy : undefined;
            resourceInputs["setRequestHeaderPolicy"] = args ? args.setRequestHeaderPolicy : undefined;
            resourceInputs["sslNegotiationPolicy"] = args ? args.sslNegotiationPolicy : undefined;
            resourceInputs["trustedCertificatePolicy"] = args ? args.trustedCertificatePolicy : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LbaasPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LbaasPolicy resources.
 */
export interface LbaasPolicyState {
    applicationCookieStickinessPolicy?: pulumi.Input<inputs.LbaasPolicyApplicationCookieStickinessPolicy>;
    cloudgatePolicy?: pulumi.Input<inputs.LbaasPolicyCloudgatePolicy>;
    loadBalancer?: pulumi.Input<string>;
    loadBalancerCookieStickinessPolicy?: pulumi.Input<inputs.LbaasPolicyLoadBalancerCookieStickinessPolicy>;
    loadBalancingMechanismPolicy?: pulumi.Input<inputs.LbaasPolicyLoadBalancingMechanismPolicy>;
    name?: pulumi.Input<string>;
    rateLimitingRequestPolicy?: pulumi.Input<inputs.LbaasPolicyRateLimitingRequestPolicy>;
    redirectPolicy?: pulumi.Input<inputs.LbaasPolicyRedirectPolicy>;
    resourceAccessControlPolicy?: pulumi.Input<inputs.LbaasPolicyResourceAccessControlPolicy>;
    setRequestHeaderPolicy?: pulumi.Input<inputs.LbaasPolicySetRequestHeaderPolicy>;
    sslNegotiationPolicy?: pulumi.Input<inputs.LbaasPolicySslNegotiationPolicy>;
    state?: pulumi.Input<boolean>;
    trustedCertificatePolicy?: pulumi.Input<inputs.LbaasPolicyTrustedCertificatePolicy>;
    type?: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LbaasPolicy resource.
 */
export interface LbaasPolicyArgs {
    applicationCookieStickinessPolicy?: pulumi.Input<inputs.LbaasPolicyApplicationCookieStickinessPolicy>;
    cloudgatePolicy?: pulumi.Input<inputs.LbaasPolicyCloudgatePolicy>;
    loadBalancer: pulumi.Input<string>;
    loadBalancerCookieStickinessPolicy?: pulumi.Input<inputs.LbaasPolicyLoadBalancerCookieStickinessPolicy>;
    loadBalancingMechanismPolicy?: pulumi.Input<inputs.LbaasPolicyLoadBalancingMechanismPolicy>;
    name?: pulumi.Input<string>;
    rateLimitingRequestPolicy?: pulumi.Input<inputs.LbaasPolicyRateLimitingRequestPolicy>;
    redirectPolicy?: pulumi.Input<inputs.LbaasPolicyRedirectPolicy>;
    resourceAccessControlPolicy?: pulumi.Input<inputs.LbaasPolicyResourceAccessControlPolicy>;
    setRequestHeaderPolicy?: pulumi.Input<inputs.LbaasPolicySetRequestHeaderPolicy>;
    sslNegotiationPolicy?: pulumi.Input<inputs.LbaasPolicySslNegotiationPolicy>;
    trustedCertificatePolicy?: pulumi.Input<inputs.LbaasPolicyTrustedCertificatePolicy>;
}
