// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface EnvironmentLabel {
    /**
     * Label category that provides contextual meaning
     */
    category: string;
    id: string;
    /**
     * Label valueto be used for reporting
     */
    value: string;
}

export interface EnvironmentTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface IcnrTunnelTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface LabelCategoryTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface NetworkTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface ProjectTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

export interface VmDisk {
    /**
     * The disk controller
     */
    controller: string;
    id: string;
    /**
     * The logical unit number (LUN) of the disk
     */
    lun: string;
    /**
     * A unique name for the disk
     */
    name: string;
    /**
     * The size of the disk specified in MiB. The minimum disk size is 2048 MiB; the maximum is 2,096,128 MiB (1.999 TiB)
     */
    size: number;
    /**
     * The type of disk
     */
    type: string;
}

export interface VmLabel {
    /**
     * Label category that provides contextual meaning
     */
    category: string;
    id: string;
    /**
     * Label value used for reporting
     */
    value: string;
}

export interface VmNetworkInterface {
    /**
     * Hostname of the VM
     */
    hostname: string;
    id: string;
    /**
     * Type of network that this network adapter is attached to
     */
    interfaceType: string;
    /**
     * The IP address (for example, 10.1.0.37). Skytap will not assign the same IP address to multiple interfaces on the same network
     */
    ip: string;
    /**
     * ID of the network that this network adapter is attached to
     */
    networkId: string;
    /**
     * A binding of a port on a network interface to an IP and port that is routable and accessible from the public Internet. This mechanism is used to selectively expose ports on the guest to the public Internet
     */
    publishedServices?: outputs.VmNetworkInterfacePublishedService[];
}

export interface VmNetworkInterfacePublishedService {
    /**
     * The published service's external IP
     */
    externalIp: string;
    /**
     * The published service's external port
     */
    externalPort: number;
    id: string;
    /**
     * The port that is exposed on the interface
     */
    internalPort: number;
    /**
     * A unique name for the published service
     */
    name: string;
}

export interface VmTimeouts {
    create?: string;
    delete?: string;
    update?: string;
}

