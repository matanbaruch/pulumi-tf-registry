// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPortChannelInterface(args: GetPortChannelInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetPortChannelInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getPortChannelInterface:getPortChannelInterface", {
        "device": args.device,
        "interfaceId": args.interfaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPortChannelInterface.
 */
export interface GetPortChannelInterfaceArgs {
    device?: string;
    interfaceId: string;
}

/**
 * A collection of values returned by getPortChannelInterface.
 */
export interface GetPortChannelInterfaceResult {
    readonly accessVlan: string;
    readonly adminState: string;
    readonly autoNegotiation: string;
    readonly bandwidth: number;
    readonly delay: number;
    readonly description: string;
    readonly device?: string;
    readonly duplex: string;
    readonly id: string;
    readonly interfaceId: string;
    readonly layer: string;
    readonly linkLogging: string;
    readonly maximumLinks: number;
    readonly medium: string;
    readonly minimumLinks: number;
    readonly mode: string;
    readonly mtu: number;
    readonly nativeVlan: string;
    readonly portChannelMode: string;
    readonly speed: string;
    readonly suspendIndividual: string;
    readonly trunkVlans: string;
    readonly userConfiguredFlags: string;
}
export function getPortChannelInterfaceOutput(args: GetPortChannelInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPortChannelInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getPortChannelInterface(a, opts))
}

/**
 * A collection of arguments for invoking getPortChannelInterface.
 */
export interface GetPortChannelInterfaceOutputArgs {
    device?: pulumi.Input<string>;
    interfaceId: pulumi.Input<string>;
}
