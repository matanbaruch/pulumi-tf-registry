// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipv4PrefixListRuleEntry extends pulumi.CustomResource {
    /**
     * Get an existing Ipv4PrefixListRuleEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv4PrefixListRuleEntryState, opts?: pulumi.CustomResourceOptions): Ipv4PrefixListRuleEntry {
        return new Ipv4PrefixListRuleEntry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nxos:index/ipv4PrefixListRuleEntry:Ipv4PrefixListRuleEntry';

    /**
     * Returns true if the given object is an instance of Ipv4PrefixListRuleEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv4PrefixListRuleEntry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv4PrefixListRuleEntry.__pulumiType;
    }

    /**
     * IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`
     */
    public readonly criteria!: pulumi.Output<string>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`
     */
    public readonly fromRange!: pulumi.Output<number>;
    /**
     * IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`
     */
    public readonly order!: pulumi.Output<number>;
    /**
     * IPv4 Prefix List Rule Entry prefix.
     */
    public readonly prefix!: pulumi.Output<string | undefined>;
    /**
     * IPv4 Prefix List Rule name.
     */
    public readonly ruleName!: pulumi.Output<string>;
    /**
     * IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`
     */
    public readonly toRange!: pulumi.Output<number>;

    /**
     * Create a Ipv4PrefixListRuleEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv4PrefixListRuleEntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv4PrefixListRuleEntryArgs | Ipv4PrefixListRuleEntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv4PrefixListRuleEntryState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["criteria"] = state ? state.criteria : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["fromRange"] = state ? state.fromRange : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["toRange"] = state ? state.toRange : undefined;
        } else {
            const args = argsOrState as Ipv4PrefixListRuleEntryArgs | undefined;
            if ((!args || args.order === undefined) && !opts.urn) {
                throw new Error("Missing required property 'order'");
            }
            if ((!args || args.ruleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["criteria"] = args ? args.criteria : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["fromRange"] = args ? args.fromRange : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["toRange"] = args ? args.toRange : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv4PrefixListRuleEntry.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipv4PrefixListRuleEntry resources.
 */
export interface Ipv4PrefixListRuleEntryState {
    /**
     * IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`
     */
    action?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`
     */
    criteria?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`
     */
    fromRange?: pulumi.Input<number>;
    /**
     * IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`
     */
    order?: pulumi.Input<number>;
    /**
     * IPv4 Prefix List Rule Entry prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule name.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`
     */
    toRange?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Ipv4PrefixListRuleEntry resource.
 */
export interface Ipv4PrefixListRuleEntryArgs {
    /**
     * IPv4 Prefix List Rule Entry action. - Choices: `deny`, `permit` - Default value: `permit`
     */
    action?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule Entry criteria. - Choices: `exact`, `inexact` - Default value: `exact`
     */
    criteria?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule Entry start range. - Range: `0`-`128` - Default value: `0`
     */
    fromRange?: pulumi.Input<number>;
    /**
     * IPv4 Prefix List Rule Entry order. - Range: `0`-`4294967294`
     */
    order: pulumi.Input<number>;
    /**
     * IPv4 Prefix List Rule Entry prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule name.
     */
    ruleName: pulumi.Input<string>;
    /**
     * IPv4 Prefix List Rule Entry end range. - Range: `0`-`128` - Default value: `0`
     */
    toRange?: pulumi.Input<number>;
}
