// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPimStaticRpGroupList(args: GetPimStaticRpGroupListArgs, opts?: pulumi.InvokeOptions): Promise<GetPimStaticRpGroupListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getPimStaticRpGroupList:getPimStaticRpGroupList", {
        "address": args.address,
        "device": args.device,
        "rpAddress": args.rpAddress,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPimStaticRpGroupList.
 */
export interface GetPimStaticRpGroupListArgs {
    address: string;
    device?: string;
    rpAddress: string;
    vrfName: string;
}

/**
 * A collection of values returned by getPimStaticRpGroupList.
 */
export interface GetPimStaticRpGroupListResult {
    readonly address: string;
    readonly bidir: boolean;
    readonly device?: string;
    readonly id: string;
    readonly override: boolean;
    readonly rpAddress: string;
    readonly vrfName: string;
}
export function getPimStaticRpGroupListOutput(args: GetPimStaticRpGroupListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPimStaticRpGroupListResult> {
    return pulumi.output(args).apply((a: any) => getPimStaticRpGroupList(a, opts))
}

/**
 * A collection of arguments for invoking getPimStaticRpGroupList.
 */
export interface GetPimStaticRpGroupListOutputArgs {
    address: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    rpAddress: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
