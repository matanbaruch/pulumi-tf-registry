// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPimAnycastRp(args: GetPimAnycastRpArgs, opts?: pulumi.InvokeOptions): Promise<GetPimAnycastRpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getPimAnycastRp:getPimAnycastRp", {
        "device": args.device,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPimAnycastRp.
 */
export interface GetPimAnycastRpArgs {
    device?: string;
    vrfName: string;
}

/**
 * A collection of values returned by getPimAnycastRp.
 */
export interface GetPimAnycastRpResult {
    readonly device?: string;
    readonly id: string;
    readonly localInterface: string;
    readonly sourceInterface: string;
    readonly vrfName: string;
}
export function getPimAnycastRpOutput(args: GetPimAnycastRpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPimAnycastRpResult> {
    return pulumi.output(args).apply((a: any) => getPimAnycastRp(a, opts))
}

/**
 * A collection of arguments for invoking getPimAnycastRp.
 */
export interface GetPimAnycastRpOutputArgs {
    device?: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
