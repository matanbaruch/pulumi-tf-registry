// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDhcpRelayAddress(args: GetDhcpRelayAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetDhcpRelayAddressResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getDhcpRelayAddress:getDhcpRelayAddress", {
        "address": args.address,
        "device": args.device,
        "interfaceId": args.interfaceId,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDhcpRelayAddress.
 */
export interface GetDhcpRelayAddressArgs {
    address: string;
    device?: string;
    interfaceId: string;
    vrf: string;
}

/**
 * A collection of values returned by getDhcpRelayAddress.
 */
export interface GetDhcpRelayAddressResult {
    readonly address: string;
    readonly device?: string;
    readonly id: string;
    readonly interfaceId: string;
    readonly vrf: string;
}
export function getDhcpRelayAddressOutput(args: GetDhcpRelayAddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDhcpRelayAddressResult> {
    return pulumi.output(args).apply((a: any) => getDhcpRelayAddress(a, opts))
}

/**
 * A collection of arguments for invoking getDhcpRelayAddress.
 */
export interface GetDhcpRelayAddressOutputArgs {
    address: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    interfaceId: pulumi.Input<string>;
    vrf: pulumi.Input<string>;
}
