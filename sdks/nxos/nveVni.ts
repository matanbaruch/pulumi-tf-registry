// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NveVni extends pulumi.CustomResource {
    /**
     * Get an existing NveVni resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NveVniState, opts?: pulumi.CustomResourceOptions): NveVni {
        return new NveVni(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nxos:index/nveVni:NveVni';

    /**
     * Returns true if the given object is an instance of NveVni.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NveVni {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NveVni.__pulumiType;
    }

    /**
     * Configures VNI as L3 VNI. - Default value: `false`
     */
    public readonly associateVrf!: pulumi.Output<boolean>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Configures multicast group address for VNI. - Default value: `0.0.0.0`
     */
    public readonly multicastGroup!: pulumi.Output<string>;
    /**
     * Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default
     * value: `disable`
     */
    public readonly multisiteIngressReplication!: pulumi.Output<string>;
    /**
     * Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`
     */
    public readonly suppressArp!: pulumi.Output<string>;
    /**
     * Virtual Network ID. - Range: `1`-`16777214`
     */
    public readonly vni!: pulumi.Output<number>;

    /**
     * Create a NveVni resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NveVniArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NveVniArgs | NveVniState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NveVniState | undefined;
            resourceInputs["associateVrf"] = state ? state.associateVrf : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["multicastGroup"] = state ? state.multicastGroup : undefined;
            resourceInputs["multisiteIngressReplication"] = state ? state.multisiteIngressReplication : undefined;
            resourceInputs["suppressArp"] = state ? state.suppressArp : undefined;
            resourceInputs["vni"] = state ? state.vni : undefined;
        } else {
            const args = argsOrState as NveVniArgs | undefined;
            if ((!args || args.vni === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vni'");
            }
            resourceInputs["associateVrf"] = args ? args.associateVrf : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["multicastGroup"] = args ? args.multicastGroup : undefined;
            resourceInputs["multisiteIngressReplication"] = args ? args.multisiteIngressReplication : undefined;
            resourceInputs["suppressArp"] = args ? args.suppressArp : undefined;
            resourceInputs["vni"] = args ? args.vni : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NveVni.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NveVni resources.
 */
export interface NveVniState {
    /**
     * Configures VNI as L3 VNI. - Default value: `false`
     */
    associateVrf?: pulumi.Input<boolean>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Configures multicast group address for VNI. - Default value: `0.0.0.0`
     */
    multicastGroup?: pulumi.Input<string>;
    /**
     * Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default
     * value: `disable`
     */
    multisiteIngressReplication?: pulumi.Input<string>;
    /**
     * Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`
     */
    suppressArp?: pulumi.Input<string>;
    /**
     * Virtual Network ID. - Range: `1`-`16777214`
     */
    vni?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a NveVni resource.
 */
export interface NveVniArgs {
    /**
     * Configures VNI as L3 VNI. - Default value: `false`
     */
    associateVrf?: pulumi.Input<boolean>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Configures multicast group address for VNI. - Default value: `0.0.0.0`
     */
    multicastGroup?: pulumi.Input<string>;
    /**
     * Enable or disable Multisite Ingress Replication for VNI(s). - Choices: `enable`, `disable`, `enableOptimized` - Default
     * value: `disable`
     */
    multisiteIngressReplication?: pulumi.Input<string>;
    /**
     * Enable or disable ARP suppression for VNI(s). - Choices: `enabled`, `disabled`, `off` - Default value: `off`
     */
    suppressArp?: pulumi.Input<string>;
    /**
     * Virtual Network ID. - Range: `1`-`16777214`
     */
    vni: pulumi.Input<number>;
}
