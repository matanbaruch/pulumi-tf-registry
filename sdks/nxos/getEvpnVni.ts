// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEvpnVni(args: GetEvpnVniArgs, opts?: pulumi.InvokeOptions): Promise<GetEvpnVniResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getEvpnVni:getEvpnVni", {
        "device": args.device,
        "encap": args.encap,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvpnVni.
 */
export interface GetEvpnVniArgs {
    device?: string;
    encap: string;
}

/**
 * A collection of values returned by getEvpnVni.
 */
export interface GetEvpnVniResult {
    readonly device?: string;
    readonly encap: string;
    readonly id: string;
    readonly routeDistinguisher: string;
}
export function getEvpnVniOutput(args: GetEvpnVniOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvpnVniResult> {
    return pulumi.output(args).apply((a: any) => getEvpnVni(a, opts))
}

/**
 * A collection of arguments for invoking getEvpnVni.
 */
export interface GetEvpnVniOutputArgs {
    device?: pulumi.Input<string>;
    encap: pulumi.Input<string>;
}
