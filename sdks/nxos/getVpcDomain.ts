// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVpcDomain(args?: GetVpcDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcDomainResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getVpcDomain:getVpcDomain", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcDomain.
 */
export interface GetVpcDomainArgs {
    device?: string;
}

/**
 * A collection of values returned by getVpcDomain.
 */
export interface GetVpcDomainResult {
    readonly adminState: string;
    readonly autoRecovery: string;
    readonly autoRecoveryInterval: number;
    readonly delayRestoreOrphanPort: number;
    readonly delayRestoreSvi: number;
    readonly delayRestoreVpc: number;
    readonly device?: string;
    readonly domainId: number;
    readonly dscp: number;
    readonly fastConvergence: string;
    readonly gracefulConsistencyCheck: string;
    readonly id: string;
    readonly l3PeerRouter: string;
    readonly l3PeerRouterSyslog: string;
    readonly l3PeerRouterSyslogInterval: number;
    readonly peerGateway: string;
    readonly peerIp: string;
    readonly peerSwitch: string;
    readonly rolePriority: number;
    readonly sysMac: string;
    readonly systemPriority: number;
    readonly track: number;
    readonly virtualIp: string;
}
export function getVpcDomainOutput(args?: GetVpcDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcDomainResult> {
    return pulumi.output(args).apply((a: any) => getVpcDomain(a, opts))
}

/**
 * A collection of arguments for invoking getVpcDomain.
 */
export interface GetVpcDomainOutputArgs {
    device?: pulumi.Input<string>;
}
