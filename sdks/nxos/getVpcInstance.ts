// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVpcInstance(args?: GetVpcInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcInstanceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getVpcInstance:getVpcInstance", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcInstance.
 */
export interface GetVpcInstanceArgs {
    device?: string;
}

/**
 * A collection of values returned by getVpcInstance.
 */
export interface GetVpcInstanceResult {
    readonly adminState: string;
    readonly device?: string;
    readonly id: string;
}
export function getVpcInstanceOutput(args?: GetVpcInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcInstanceResult> {
    return pulumi.output(args).apply((a: any) => getVpcInstance(a, opts))
}

/**
 * A collection of arguments for invoking getVpcInstance.
 */
export interface GetVpcInstanceOutputArgs {
    device?: pulumi.Input<string>;
}
