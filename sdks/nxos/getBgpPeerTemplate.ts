// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBgpPeerTemplate(args: GetBgpPeerTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpPeerTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getBgpPeerTemplate:getBgpPeerTemplate", {
        "asn": args.asn,
        "device": args.device,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBgpPeerTemplate.
 */
export interface GetBgpPeerTemplateArgs {
    asn: string;
    device?: string;
    templateName: string;
}

/**
 * A collection of values returned by getBgpPeerTemplate.
 */
export interface GetBgpPeerTemplateResult {
    readonly asn: string;
    readonly description: string;
    readonly device?: string;
    readonly id: string;
    readonly peerType: string;
    readonly remoteAsn: string;
    readonly sourceInterface: string;
    readonly templateName: string;
}
export function getBgpPeerTemplateOutput(args: GetBgpPeerTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpPeerTemplateResult> {
    return pulumi.output(args).apply((a: any) => getBgpPeerTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getBgpPeerTemplate.
 */
export interface GetBgpPeerTemplateOutputArgs {
    asn: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
