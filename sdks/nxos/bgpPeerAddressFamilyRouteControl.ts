// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BgpPeerAddressFamilyRouteControl extends pulumi.CustomResource {
    /**
     * Get an existing BgpPeerAddressFamilyRouteControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpPeerAddressFamilyRouteControlState, opts?: pulumi.CustomResourceOptions): BgpPeerAddressFamilyRouteControl {
        return new BgpPeerAddressFamilyRouteControl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nxos:index/bgpPeerAddressFamilyRouteControl:BgpPeerAddressFamilyRouteControl';

    /**
     * Returns true if the given object is an instance of BgpPeerAddressFamilyRouteControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BgpPeerAddressFamilyRouteControl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BgpPeerAddressFamilyRouteControl.__pulumiType;
    }

    /**
     * Peer address.
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
     * value: `ipv4-ucast`
     */
    public readonly addressFamily!: pulumi.Output<string>;
    /**
     * Autonomous system number.
     */
    public readonly asn!: pulumi.Output<string>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Route Control direction. - Choices: `in`, `out` - Default value: `in`
     */
    public readonly direction!: pulumi.Output<string>;
    /**
     * Route Control Route-Map name.
     */
    public readonly routeMapName!: pulumi.Output<string | undefined>;
    /**
     * VRF name.
     */
    public readonly vrf!: pulumi.Output<string>;

    /**
     * Create a BgpPeerAddressFamilyRouteControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BgpPeerAddressFamilyRouteControlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpPeerAddressFamilyRouteControlArgs | BgpPeerAddressFamilyRouteControlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpPeerAddressFamilyRouteControlState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["addressFamily"] = state ? state.addressFamily : undefined;
            resourceInputs["asn"] = state ? state.asn : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["routeMapName"] = state ? state.routeMapName : undefined;
            resourceInputs["vrf"] = state ? state.vrf : undefined;
        } else {
            const args = argsOrState as BgpPeerAddressFamilyRouteControlArgs | undefined;
            if ((!args || args.address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if ((!args || args.addressFamily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressFamily'");
            }
            if ((!args || args.asn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asn'");
            }
            if ((!args || args.direction === undefined) && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if ((!args || args.vrf === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vrf'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["addressFamily"] = args ? args.addressFamily : undefined;
            resourceInputs["asn"] = args ? args.asn : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["routeMapName"] = args ? args.routeMapName : undefined;
            resourceInputs["vrf"] = args ? args.vrf : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BgpPeerAddressFamilyRouteControl.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BgpPeerAddressFamilyRouteControl resources.
 */
export interface BgpPeerAddressFamilyRouteControlState {
    /**
     * Peer address.
     */
    address?: pulumi.Input<string>;
    /**
     * Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
     * value: `ipv4-ucast`
     */
    addressFamily?: pulumi.Input<string>;
    /**
     * Autonomous system number.
     */
    asn?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Route Control direction. - Choices: `in`, `out` - Default value: `in`
     */
    direction?: pulumi.Input<string>;
    /**
     * Route Control Route-Map name.
     */
    routeMapName?: pulumi.Input<string>;
    /**
     * VRF name.
     */
    vrf?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BgpPeerAddressFamilyRouteControl resource.
 */
export interface BgpPeerAddressFamilyRouteControlArgs {
    /**
     * Peer address.
     */
    address: pulumi.Input<string>;
    /**
     * Address Family. - Choices: `ipv4-ucast`, `vpnv4-ucast`, `ipv6-ucast`, `vpnv6-ucast`, `l2vpn-evpn`, `lnkstate` - Default
     * value: `ipv4-ucast`
     */
    addressFamily: pulumi.Input<string>;
    /**
     * Autonomous system number.
     */
    asn: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Route Control direction. - Choices: `in`, `out` - Default value: `in`
     */
    direction: pulumi.Input<string>;
    /**
     * Route Control Route-Map name.
     */
    routeMapName?: pulumi.Input<string>;
    /**
     * VRF name.
     */
    vrf: pulumi.Input<string>;
}
