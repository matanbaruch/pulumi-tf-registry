// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVpcInterface(args: GetVpcInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getVpcInterface:getVpcInterface", {
        "device": args.device,
        "vpcInterfaceId": args.vpcInterfaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcInterface.
 */
export interface GetVpcInterfaceArgs {
    device?: string;
    vpcInterfaceId: number;
}

/**
 * A collection of values returned by getVpcInterface.
 */
export interface GetVpcInterfaceResult {
    readonly device?: string;
    readonly id: string;
    readonly portChannelInterfaceDn: string;
    readonly vpcInterfaceId: number;
}
export function getVpcInterfaceOutput(args: GetVpcInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getVpcInterface(a, opts))
}

/**
 * A collection of arguments for invoking getVpcInterface.
 */
export interface GetVpcInterfaceOutputArgs {
    device?: pulumi.Input<string>;
    vpcInterfaceId: pulumi.Input<number>;
}
