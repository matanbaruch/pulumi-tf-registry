// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRouteMapRuleEntryMatchRoutePrefixList(args: GetRouteMapRuleEntryMatchRoutePrefixListArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteMapRuleEntryMatchRoutePrefixListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getRouteMapRuleEntryMatchRoutePrefixList:getRouteMapRuleEntryMatchRoutePrefixList", {
        "device": args.device,
        "order": args.order,
        "prefixListDn": args.prefixListDn,
        "ruleName": args.ruleName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.
 */
export interface GetRouteMapRuleEntryMatchRoutePrefixListArgs {
    device?: string;
    order: number;
    prefixListDn: string;
    ruleName: string;
}

/**
 * A collection of values returned by getRouteMapRuleEntryMatchRoutePrefixList.
 */
export interface GetRouteMapRuleEntryMatchRoutePrefixListResult {
    readonly device?: string;
    readonly id: string;
    readonly order: number;
    readonly prefixListDn: string;
    readonly ruleName: string;
}
export function getRouteMapRuleEntryMatchRoutePrefixListOutput(args: GetRouteMapRuleEntryMatchRoutePrefixListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteMapRuleEntryMatchRoutePrefixListResult> {
    return pulumi.output(args).apply((a: any) => getRouteMapRuleEntryMatchRoutePrefixList(a, opts))
}

/**
 * A collection of arguments for invoking getRouteMapRuleEntryMatchRoutePrefixList.
 */
export interface GetRouteMapRuleEntryMatchRoutePrefixListOutputArgs {
    device?: pulumi.Input<string>;
    order: pulumi.Input<number>;
    prefixListDn: pulumi.Input<string>;
    ruleName: pulumi.Input<string>;
}
