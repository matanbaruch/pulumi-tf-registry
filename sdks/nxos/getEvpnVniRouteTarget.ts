// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEvpnVniRouteTarget(args: GetEvpnVniRouteTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetEvpnVniRouteTargetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getEvpnVniRouteTarget:getEvpnVniRouteTarget", {
        "device": args.device,
        "direction": args.direction,
        "encap": args.encap,
        "routeTarget": args.routeTarget,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvpnVniRouteTarget.
 */
export interface GetEvpnVniRouteTargetArgs {
    device?: string;
    direction: string;
    encap: string;
    routeTarget: string;
}

/**
 * A collection of values returned by getEvpnVniRouteTarget.
 */
export interface GetEvpnVniRouteTargetResult {
    readonly device?: string;
    readonly direction: string;
    readonly encap: string;
    readonly id: string;
    readonly routeTarget: string;
}
export function getEvpnVniRouteTargetOutput(args: GetEvpnVniRouteTargetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvpnVniRouteTargetResult> {
    return pulumi.output(args).apply((a: any) => getEvpnVniRouteTarget(a, opts))
}

/**
 * A collection of arguments for invoking getEvpnVniRouteTarget.
 */
export interface GetEvpnVniRouteTargetOutputArgs {
    device?: pulumi.Input<string>;
    direction: pulumi.Input<string>;
    encap: pulumi.Input<string>;
    routeTarget: pulumi.Input<string>;
}
