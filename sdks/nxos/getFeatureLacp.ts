// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFeatureLacp(args?: GetFeatureLacpArgs, opts?: pulumi.InvokeOptions): Promise<GetFeatureLacpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getFeatureLacp:getFeatureLacp", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFeatureLacp.
 */
export interface GetFeatureLacpArgs {
    device?: string;
}

/**
 * A collection of values returned by getFeatureLacp.
 */
export interface GetFeatureLacpResult {
    readonly adminState: string;
    readonly device?: string;
    readonly id: string;
}
export function getFeatureLacpOutput(args?: GetFeatureLacpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFeatureLacpResult> {
    return pulumi.output(args).apply((a: any) => getFeatureLacp(a, opts))
}

/**
 * A collection of arguments for invoking getFeatureLacp.
 */
export interface GetFeatureLacpOutputArgs {
    device?: pulumi.Input<string>;
}
