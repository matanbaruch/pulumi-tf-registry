// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOspfArea(args: GetOspfAreaArgs, opts?: pulumi.InvokeOptions): Promise<GetOspfAreaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getOspfArea:getOspfArea", {
        "areaId": args.areaId,
        "device": args.device,
        "instanceName": args.instanceName,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOspfArea.
 */
export interface GetOspfAreaArgs {
    areaId: string;
    device?: string;
    instanceName: string;
    vrfName: string;
}

/**
 * A collection of values returned by getOspfArea.
 */
export interface GetOspfAreaResult {
    readonly areaId: string;
    readonly authenticationType: string;
    readonly cost: number;
    readonly device?: string;
    readonly id: string;
    readonly instanceName: string;
    readonly type: string;
    readonly vrfName: string;
}
export function getOspfAreaOutput(args: GetOspfAreaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOspfAreaResult> {
    return pulumi.output(args).apply((a: any) => getOspfArea(a, opts))
}

/**
 * A collection of arguments for invoking getOspfArea.
 */
export interface GetOspfAreaOutputArgs {
    areaId: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    instanceName: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
