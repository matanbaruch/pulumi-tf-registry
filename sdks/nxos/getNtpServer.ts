// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNtpServer(args: GetNtpServerArgs, opts?: pulumi.InvokeOptions): Promise<GetNtpServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getNtpServer:getNtpServer", {
        "device": args.device,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNtpServer.
 */
export interface GetNtpServerArgs {
    device?: string;
    name: string;
}

/**
 * A collection of values returned by getNtpServer.
 */
export interface GetNtpServerResult {
    readonly device?: string;
    readonly id: string;
    readonly keyId: number;
    readonly maxPoll: number;
    readonly minPoll: number;
    readonly name: string;
    readonly type: string;
    readonly vrf: string;
}
export function getNtpServerOutput(args: GetNtpServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNtpServerResult> {
    return pulumi.output(args).apply((a: any) => getNtpServer(a, opts))
}

/**
 * A collection of arguments for invoking getNtpServer.
 */
export interface GetNtpServerOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
