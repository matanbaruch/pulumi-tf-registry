// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIpv4StaticRoute(args: GetIpv4StaticRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4StaticRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getIpv4StaticRoute:getIpv4StaticRoute", {
        "device": args.device,
        "prefix": args.prefix,
        "vrfName": args.vrfName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv4StaticRoute.
 */
export interface GetIpv4StaticRouteArgs {
    device?: string;
    prefix: string;
    vrfName: string;
}

/**
 * A collection of values returned by getIpv4StaticRoute.
 */
export interface GetIpv4StaticRouteResult {
    readonly device?: string;
    readonly id: string;
    readonly nextHops: outputs.GetIpv4StaticRouteNextHop[];
    readonly prefix: string;
    readonly vrfName: string;
}
export function getIpv4StaticRouteOutput(args: GetIpv4StaticRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4StaticRouteResult> {
    return pulumi.output(args).apply((a: any) => getIpv4StaticRoute(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4StaticRoute.
 */
export interface GetIpv4StaticRouteOutputArgs {
    device?: pulumi.Input<string>;
    prefix: pulumi.Input<string>;
    vrfName: pulumi.Input<string>;
}
