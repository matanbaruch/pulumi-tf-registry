// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVrfRouteTargetAddressFamily(args: GetVrfRouteTargetAddressFamilyArgs, opts?: pulumi.InvokeOptions): Promise<GetVrfRouteTargetAddressFamilyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getVrfRouteTargetAddressFamily:getVrfRouteTargetAddressFamily", {
        "addressFamily": args.addressFamily,
        "device": args.device,
        "routeTargetAddressFamily": args.routeTargetAddressFamily,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVrfRouteTargetAddressFamily.
 */
export interface GetVrfRouteTargetAddressFamilyArgs {
    addressFamily: string;
    device?: string;
    routeTargetAddressFamily: string;
    vrf: string;
}

/**
 * A collection of values returned by getVrfRouteTargetAddressFamily.
 */
export interface GetVrfRouteTargetAddressFamilyResult {
    readonly addressFamily: string;
    readonly device?: string;
    readonly id: string;
    readonly routeTargetAddressFamily: string;
    readonly vrf: string;
}
export function getVrfRouteTargetAddressFamilyOutput(args: GetVrfRouteTargetAddressFamilyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVrfRouteTargetAddressFamilyResult> {
    return pulumi.output(args).apply((a: any) => getVrfRouteTargetAddressFamily(a, opts))
}

/**
 * A collection of arguments for invoking getVrfRouteTargetAddressFamily.
 */
export interface GetVrfRouteTargetAddressFamilyOutputArgs {
    addressFamily: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    routeTargetAddressFamily: pulumi.Input<string>;
    vrf: pulumi.Input<string>;
}
