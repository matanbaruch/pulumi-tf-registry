// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVrfRouting(args: GetVrfRoutingArgs, opts?: pulumi.InvokeOptions): Promise<GetVrfRoutingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getVrfRouting:getVrfRouting", {
        "device": args.device,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVrfRouting.
 */
export interface GetVrfRoutingArgs {
    device?: string;
    vrf: string;
}

/**
 * A collection of values returned by getVrfRouting.
 */
export interface GetVrfRoutingResult {
    readonly device?: string;
    readonly id: string;
    readonly routeDistinguisher: string;
    readonly vrf: string;
}
export function getVrfRoutingOutput(args: GetVrfRoutingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVrfRoutingResult> {
    return pulumi.output(args).apply((a: any) => getVrfRouting(a, opts))
}

/**
 * A collection of arguments for invoking getVrfRouting.
 */
export interface GetVrfRoutingOutputArgs {
    device?: pulumi.Input<string>;
    vrf: pulumi.Input<string>;
}
