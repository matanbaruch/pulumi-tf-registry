// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNveVni(args: GetNveVniArgs, opts?: pulumi.InvokeOptions): Promise<GetNveVniResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getNveVni:getNveVni", {
        "device": args.device,
        "vni": args.vni,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNveVni.
 */
export interface GetNveVniArgs {
    device?: string;
    vni: number;
}

/**
 * A collection of values returned by getNveVni.
 */
export interface GetNveVniResult {
    readonly associateVrf: boolean;
    readonly device?: string;
    readonly id: string;
    readonly multicastGroup: string;
    readonly multisiteIngressReplication: string;
    readonly suppressArp: string;
    readonly vni: number;
}
export function getNveVniOutput(args: GetNveVniOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNveVniResult> {
    return pulumi.output(args).apply((a: any) => getNveVni(a, opts))
}

/**
 * A collection of arguments for invoking getNveVni.
 */
export interface GetNveVniOutputArgs {
    device?: pulumi.Input<string>;
    vni: pulumi.Input<number>;
}
