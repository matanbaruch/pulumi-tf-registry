// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpv4AccessListEntry(args: GetIpv4AccessListEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4AccessListEntryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getIpv4AccessListEntry:getIpv4AccessListEntry", {
        "device": args.device,
        "name": args.name,
        "sequenceNumber": args.sequenceNumber,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv4AccessListEntry.
 */
export interface GetIpv4AccessListEntryArgs {
    device?: string;
    name: string;
    sequenceNumber: number;
}

/**
 * A collection of values returned by getIpv4AccessListEntry.
 */
export interface GetIpv4AccessListEntryResult {
    readonly ack: boolean;
    readonly action: string;
    readonly destinationAddressGroup: string;
    readonly destinationPort1: string;
    readonly destinationPort2: string;
    readonly destinationPortGroup: string;
    readonly destinationPortMask: string;
    readonly destinationPortOperator: string;
    readonly destinationPrefix: string;
    readonly destinationPrefixLength: string;
    readonly destinationPrefixMask: string;
    readonly device?: string;
    readonly dscp: number;
    readonly est: boolean;
    readonly fin: boolean;
    readonly fragment: boolean;
    readonly httpOptionType: string;
    readonly icmpCode: number;
    readonly icmpType: number;
    readonly id: string;
    readonly logging: boolean;
    readonly name: string;
    readonly packetLength1: string;
    readonly packetLength2: string;
    readonly packetLengthOperator: string;
    readonly precedence: string;
    readonly protocol: string;
    readonly protocolMask: string;
    readonly psh: boolean;
    readonly redirect: string;
    readonly remark: string;
    readonly rev: boolean;
    readonly rst: boolean;
    readonly sequenceNumber: number;
    readonly sourceAddressGroup: string;
    readonly sourcePort1: string;
    readonly sourcePort2: string;
    readonly sourcePortGroup: string;
    readonly sourcePortMask: string;
    readonly sourcePortOperator: string;
    readonly sourcePrefix: string;
    readonly sourcePrefixLength: string;
    readonly sourcePrefixMask: string;
    readonly syn: boolean;
    readonly timeRange: string;
    readonly ttl: number;
    readonly urg: boolean;
    readonly vlan: number;
    readonly vni: string;
}
export function getIpv4AccessListEntryOutput(args: GetIpv4AccessListEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4AccessListEntryResult> {
    return pulumi.output(args).apply((a: any) => getIpv4AccessListEntry(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4AccessListEntry.
 */
export interface GetIpv4AccessListEntryOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    sequenceNumber: pulumi.Input<number>;
}
