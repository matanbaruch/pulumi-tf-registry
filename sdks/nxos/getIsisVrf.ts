// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIsisVrf(args: GetIsisVrfArgs, opts?: pulumi.InvokeOptions): Promise<GetIsisVrfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getIsisVrf:getIsisVrf", {
        "device": args.device,
        "instanceName": args.instanceName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIsisVrf.
 */
export interface GetIsisVrfArgs {
    device?: string;
    instanceName: string;
    name: string;
}

/**
 * A collection of values returned by getIsisVrf.
 */
export interface GetIsisVrfResult {
    readonly adminState: string;
    readonly authenticationCheckL1: boolean;
    readonly authenticationCheckL2: boolean;
    readonly authenticationKeyL1: string;
    readonly authenticationKeyL2: string;
    readonly authenticationTypeL1: string;
    readonly authenticationTypeL2: string;
    readonly bandwidthReference: number;
    readonly banwidthReferenceUnit: string;
    readonly device?: string;
    readonly id: string;
    readonly instanceName: string;
    readonly isType: string;
    readonly metricType: string;
    readonly mtu: number;
    readonly name: string;
    readonly net: string;
    readonly passiveDefault: string;
}
export function getIsisVrfOutput(args: GetIsisVrfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIsisVrfResult> {
    return pulumi.output(args).apply((a: any) => getIsisVrf(a, opts))
}

/**
 * A collection of arguments for invoking getIsisVrf.
 */
export interface GetIsisVrfOutputArgs {
    device?: pulumi.Input<string>;
    instanceName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
