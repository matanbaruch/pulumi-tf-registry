// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIpv4Interface(args: GetIpv4InterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv4InterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nxos:index/getIpv4Interface:getIpv4Interface", {
        "device": args.device,
        "interfaceId": args.interfaceId,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIpv4Interface.
 */
export interface GetIpv4InterfaceArgs {
    device?: string;
    interfaceId: string;
    vrf: string;
}

/**
 * A collection of values returned by getIpv4Interface.
 */
export interface GetIpv4InterfaceResult {
    readonly device?: string;
    readonly dropGlean: string;
    readonly forward: string;
    readonly id: string;
    readonly interfaceId: string;
    readonly unnumbered: string;
    readonly urpf: string;
    readonly vrf: string;
}
export function getIpv4InterfaceOutput(args: GetIpv4InterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv4InterfaceResult> {
    return pulumi.output(args).apply((a: any) => getIpv4Interface(a, opts))
}

/**
 * A collection of arguments for invoking getIpv4Interface.
 */
export interface GetIpv4InterfaceOutputArgs {
    device?: pulumi.Input<string>;
    interfaceId: pulumi.Input<string>;
    vrf: pulumi.Input<string>;
}
