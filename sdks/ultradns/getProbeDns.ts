// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProbeDns(args: GetProbeDnsArgs, opts?: pulumi.InvokeOptions): Promise<GetProbeDnsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ultradns:index/getProbeDns:getProbeDns", {
        "agents": args.agents,
        "guid": args.guid,
        "id": args.id,
        "interval": args.interval,
        "ownerName": args.ownerName,
        "poolRecord": args.poolRecord,
        "threshold": args.threshold,
        "zoneName": args.zoneName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProbeDns.
 */
export interface GetProbeDnsArgs {
    agents?: string[];
    guid?: string;
    id?: string;
    interval?: string;
    ownerName: string;
    poolRecord?: string;
    threshold?: number;
    zoneName: string;
}

/**
 * A collection of values returned by getProbeDns.
 */
export interface GetProbeDnsResult {
    readonly agents: string[];
    readonly avgRunLimits: outputs.GetProbeDnsAvgRunLimit[];
    readonly guid?: string;
    readonly id: string;
    readonly interval: string;
    readonly ownerName: string;
    readonly poolRecord: string;
    readonly port: number;
    readonly queryName: string;
    readonly responses: outputs.GetProbeDnsResponse[];
    readonly runLimits: outputs.GetProbeDnsRunLimit[];
    readonly tcpOnly: boolean;
    readonly threshold: number;
    readonly type: string;
    readonly zoneName: string;
}
export function getProbeDnsOutput(args: GetProbeDnsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProbeDnsResult> {
    return pulumi.output(args).apply((a: any) => getProbeDns(a, opts))
}

/**
 * A collection of arguments for invoking getProbeDns.
 */
export interface GetProbeDnsOutputArgs {
    agents?: pulumi.Input<pulumi.Input<string>[]>;
    guid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interval?: pulumi.Input<string>;
    ownerName: pulumi.Input<string>;
    poolRecord?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    zoneName: pulumi.Input<string>;
}
