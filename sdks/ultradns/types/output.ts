// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DirgroupIpIp {
    address?: string;
    cidr?: string;
    end?: string;
    start?: string;
}

export interface DirpoolNoResponse {
    allNonConfigured?: boolean;
    geoAccountLevel?: boolean;
    geoCodes?: string[];
    geoGroupName?: string;
    ipAccountLevel?: boolean;
    ipGroupName?: string;
    ips?: outputs.DirpoolNoResponseIp[];
}

export interface DirpoolNoResponseIp {
    address?: string;
    cidr?: string;
    end?: string;
    start?: string;
}

export interface DirpoolRdataInfo {
    allNonConfigured?: boolean;
    geoAccountLevel?: boolean;
    geoCodes?: string[];
    geoGroupName?: string;
    ipAccountLevel?: boolean;
    ipGroupName?: string;
    ips?: outputs.DirpoolRdataInfoIp[];
    rdata: string;
    ttl?: number;
    type: string;
}

export interface DirpoolRdataInfoIp {
    address?: string;
    cidr?: string;
    end?: string;
    start?: string;
}

export interface GetDirgroupIpIp {
    address: string;
    cidr: string;
    end: string;
    start: string;
}

export interface GetDirpoolNoResponse {
    allNonConfigured: boolean;
    geoAccountLevel: boolean;
    geoCodes: string[];
    geoGroupName: string;
    ipAccountLevel: boolean;
    ipGroupName: string;
    ips: outputs.GetDirpoolNoResponseIp[];
}

export interface GetDirpoolNoResponseIp {
    address: string;
    cidr: string;
    end: string;
    start: string;
}

export interface GetDirpoolRdataInfo {
    allNonConfigured: boolean;
    geoAccountLevel: boolean;
    geoCodes: string[];
    geoGroupName: string;
    ipAccountLevel: boolean;
    ipGroupName: string;
    ips: outputs.GetDirpoolRdataInfoIp[];
    rdata: string;
    ttl: number;
    type: string;
}

export interface GetDirpoolRdataInfoIp {
    address: string;
    cidr: string;
    end: string;
    start: string;
}

export interface GetProbeDnsAvgRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeDnsResponse {
    critical: string;
    fail: string;
    warning: string;
}

export interface GetProbeDnsRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeHttpTotalLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeHttpTransaction {
    avgConnectLimits: outputs.GetProbeHttpTransactionAvgConnectLimit[];
    avgRunLimits: outputs.GetProbeHttpTransactionAvgRunLimit[];
    connectLimits: outputs.GetProbeHttpTransactionConnectLimit[];
    expectedResponse: string;
    followRedirects: boolean;
    method: string;
    protocolVersion: string;
    runLimits: outputs.GetProbeHttpTransactionRunLimit[];
    searchStrings: outputs.GetProbeHttpTransactionSearchString[];
    transmittedData: string;
    url: string;
}

export interface GetProbeHttpTransactionAvgConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeHttpTransactionAvgRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeHttpTransactionConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeHttpTransactionRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeHttpTransactionSearchString {
    critical: string;
    fail: string;
    warning: string;
}

export interface GetProbePingAverageLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbePingAvgRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbePingLossPercentLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbePingRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbePingTotalLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeTcpAvgConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetProbeTcpConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface GetSbpoolBackupRecord {
    availableToServe: boolean;
    failoverDelay: number;
    rdata: string;
}

export interface GetSbpoolRdataInfo {
    availableToServe: boolean;
    failoverDelay: number;
    priority: number;
    rdata: string;
    runProbes: boolean;
    state: string;
    threshold: number;
}

export interface GetSfpoolBackupRecord {
    description: string;
    rdata: string;
}

export interface GetSfpoolMonitor {
    method: string;
    searchString: string;
    transmittedData: string;
    url: string;
}

export interface GetSlbpoolAllFailRecord {
    description: string;
    rdata: string;
    serving: boolean;
}

export interface GetSlbpoolMonitor {
    method: string;
    searchString: string;
    transmittedData: string;
    url: string;
}

export interface GetSlbpoolRdataInfo {
    availableToServe: boolean;
    description: string;
    forcedState: string;
    probingEnabled: boolean;
    rdata: string;
}

export interface GetTcpoolBackupRecord {
    availableToServe: boolean;
    failoverDelay: number;
    rdata: string;
}

export interface GetTcpoolRdataInfo {
    availableToServe: boolean;
    failoverDelay: number;
    priority: number;
    rdata: string;
    runProbes: boolean;
    state: string;
    threshold: number;
    weight: number;
}

export interface GetZoneNotifyAddress {
    description: string;
    notifyAddress: string;
}

export interface GetZonePrimaryNameServer1 {
    ip: string;
    tsigAlgorithm: string;
    tsigKey: string;
    tsigKeyValue: string;
}

export interface GetZonePrimaryNameServer2 {
    ip: string;
    tsigAlgorithm: string;
    tsigKey: string;
    tsigKeyValue: string;
}

export interface GetZonePrimaryNameServer3 {
    ip: string;
    tsigAlgorithm: string;
    tsigKey: string;
    tsigKeyValue: string;
}

export interface GetZoneRegistrarInfo {
    nameServers: outputs.GetZoneRegistrarInfoNameServer[];
    registrar: string;
    whoIsExpiration: string;
}

export interface GetZoneRegistrarInfoNameServer {
    incorrects: string[];
    missings: string[];
    oks: string[];
    unknowns: string[];
}

export interface GetZoneRestrictIp {
    cidr: string;
    comment: string;
    endIp: string;
    singleIp: string;
    startIp: string;
}

export interface GetZoneTransferStatusDetail {
    lastRefresh: string;
    lastRefreshStatus: string;
    lastRefreshStatusMessage: string;
    nextRefresh: string;
}

export interface GetZoneTsig {
    description: string;
    tsigAlgorithm: string;
    tsigKeyName: string;
    tsigKeyValue: string;
}

export interface ProbeDnsAvgRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeDnsResponse {
    critical?: string;
    fail?: string;
    warning?: string;
}

export interface ProbeDnsRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeHttpTotalLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeHttpTransaction {
    avgConnectLimit?: outputs.ProbeHttpTransactionAvgConnectLimit;
    avgRunLimit?: outputs.ProbeHttpTransactionAvgRunLimit;
    connectLimit?: outputs.ProbeHttpTransactionConnectLimit;
    expectedResponse?: string;
    followRedirects?: boolean;
    method: string;
    protocolVersion: string;
    runLimit?: outputs.ProbeHttpTransactionRunLimit;
    searchString?: outputs.ProbeHttpTransactionSearchString;
    transmittedData?: string;
    url: string;
}

export interface ProbeHttpTransactionAvgConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeHttpTransactionAvgRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeHttpTransactionConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeHttpTransactionRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeHttpTransactionSearchString {
    critical?: string;
    fail?: string;
    warning?: string;
}

export interface ProbePingAverageLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbePingAvgRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbePingLossPercentLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbePingRunLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbePingTotalLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeTcpAvgConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface ProbeTcpConnectLimit {
    critical: number;
    fail: number;
    warning: number;
}

export interface SbpoolBackupRecord {
    availableToServe: boolean;
    failoverDelay?: number;
    rdata: string;
}

export interface SbpoolRdataInfo {
    availableToServe: boolean;
    failoverDelay?: number;
    priority: number;
    rdata: string;
    runProbes?: boolean;
    state?: string;
    threshold?: number;
}

export interface SfpoolBackupRecord {
    description?: string;
    rdata: string;
}

export interface SfpoolMonitor {
    method: string;
    searchString?: string;
    transmittedData?: string;
    url: string;
}

export interface SlbpoolAllFailRecord {
    description?: string;
    rdata: string;
    serving: boolean;
}

export interface SlbpoolMonitor {
    method: string;
    searchString?: string;
    transmittedData?: string;
    url: string;
}

export interface SlbpoolRdataInfo {
    availableToServe: boolean;
    description?: string;
    forcedState?: string;
    probingEnabled?: boolean;
    rdata: string;
}

export interface TcpoolBackupRecord {
    availableToServe: boolean;
    failoverDelay?: number;
    rdata: string;
}

export interface TcpoolRdataInfo {
    availableToServe: boolean;
    failoverDelay?: number;
    priority: number;
    rdata: string;
    runProbes?: boolean;
    state?: string;
    threshold?: number;
    weight?: number;
}

export interface ZoneAliasCreateInfo {
    originalZoneName: string;
}

export interface ZonePrimaryCreateInfo {
    createType: string;
    forceImport?: boolean;
    inherit: string;
    nameServer?: outputs.ZonePrimaryCreateInfoNameServer;
    notifyAddresses?: outputs.ZonePrimaryCreateInfoNotifyAddress[];
    originalZoneName?: string;
    restrictIps?: outputs.ZonePrimaryCreateInfoRestrictIp[];
    tsig?: outputs.ZonePrimaryCreateInfoTsig;
}

export interface ZonePrimaryCreateInfoNameServer {
    ip: string;
    tsigAlgorithm?: string;
    tsigKey?: string;
    tsigKeyValue?: string;
}

export interface ZonePrimaryCreateInfoNotifyAddress {
    description?: string;
    notifyAddress: string;
}

export interface ZonePrimaryCreateInfoRestrictIp {
    cidr?: string;
    comment?: string;
    endIp?: string;
    singleIp?: string;
    startIp?: string;
}

export interface ZonePrimaryCreateInfoTsig {
    description?: string;
    tsigAlgorithm: string;
    tsigKeyName: string;
    tsigKeyValue: string;
}

export interface ZoneRegistrarInfo {
    nameServers: outputs.ZoneRegistrarInfoNameServer[];
    registrar: string;
    whoIsExpiration: string;
}

export interface ZoneRegistrarInfoNameServer {
    incorrects: string[];
    missings: string[];
    oks: string[];
    unknowns: string[];
}

export interface ZoneSecondaryCreateInfo {
    notificationEmailAddress?: string;
    primaryNameServer1: outputs.ZoneSecondaryCreateInfoPrimaryNameServer1;
    primaryNameServer2?: outputs.ZoneSecondaryCreateInfoPrimaryNameServer2;
    primaryNameServer3?: outputs.ZoneSecondaryCreateInfoPrimaryNameServer3;
}

export interface ZoneSecondaryCreateInfoPrimaryNameServer1 {
    ip: string;
    tsigAlgorithm?: string;
    tsigKey?: string;
    tsigKeyValue?: string;
}

export interface ZoneSecondaryCreateInfoPrimaryNameServer2 {
    ip: string;
    tsigAlgorithm?: string;
    tsigKey?: string;
    tsigKeyValue?: string;
}

export interface ZoneSecondaryCreateInfoPrimaryNameServer3 {
    ip: string;
    tsigAlgorithm?: string;
    tsigKey?: string;
    tsigKeyValue?: string;
}

export interface ZoneTransferStatusDetails {
    lastRefresh: string;
    lastRefreshStatus: string;
    lastRefreshStatusMessage: string;
    nextRefresh: string;
}

