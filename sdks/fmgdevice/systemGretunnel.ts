// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemGretunnel extends pulumi.CustomResource {
    /**
     * Get an existing SystemGretunnel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemGretunnelState, opts?: pulumi.CustomResourceOptions): SystemGretunnel {
        return new SystemGretunnel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemGretunnel:SystemGretunnel';

    /**
     * Returns true if the given object is an instance of SystemGretunnel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemGretunnel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemGretunnel.__pulumiType;
    }

    public readonly autoAsicOffload!: pulumi.Output<string | undefined>;
    public readonly checksumReception!: pulumi.Output<string>;
    public readonly checksumTransmission!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly diffservcode!: pulumi.Output<string>;
    public readonly dscpCopying!: pulumi.Output<string>;
    public readonly interfaces!: pulumi.Output<string[]>;
    public readonly ipVersion!: pulumi.Output<string>;
    public readonly keepaliveFailtimes!: pulumi.Output<number>;
    public readonly keepaliveInterval!: pulumi.Output<number | undefined>;
    public readonly keyInbound!: pulumi.Output<number | undefined>;
    public readonly keyOutbound!: pulumi.Output<number | undefined>;
    public readonly localGw!: pulumi.Output<string | undefined>;
    public readonly localGw6!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly remoteGw!: pulumi.Output<string | undefined>;
    public readonly remoteGw6!: pulumi.Output<string>;
    public readonly sequenceNumberReception!: pulumi.Output<string>;
    public readonly sequenceNumberTransmission!: pulumi.Output<string>;
    public readonly useSdwan!: pulumi.Output<string>;

    /**
     * Create a SystemGretunnel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemGretunnelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemGretunnelArgs | SystemGretunnelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemGretunnelState | undefined;
            resourceInputs["autoAsicOffload"] = state ? state.autoAsicOffload : undefined;
            resourceInputs["checksumReception"] = state ? state.checksumReception : undefined;
            resourceInputs["checksumTransmission"] = state ? state.checksumTransmission : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["diffservcode"] = state ? state.diffservcode : undefined;
            resourceInputs["dscpCopying"] = state ? state.dscpCopying : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["keepaliveFailtimes"] = state ? state.keepaliveFailtimes : undefined;
            resourceInputs["keepaliveInterval"] = state ? state.keepaliveInterval : undefined;
            resourceInputs["keyInbound"] = state ? state.keyInbound : undefined;
            resourceInputs["keyOutbound"] = state ? state.keyOutbound : undefined;
            resourceInputs["localGw"] = state ? state.localGw : undefined;
            resourceInputs["localGw6"] = state ? state.localGw6 : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["remoteGw"] = state ? state.remoteGw : undefined;
            resourceInputs["remoteGw6"] = state ? state.remoteGw6 : undefined;
            resourceInputs["sequenceNumberReception"] = state ? state.sequenceNumberReception : undefined;
            resourceInputs["sequenceNumberTransmission"] = state ? state.sequenceNumberTransmission : undefined;
            resourceInputs["useSdwan"] = state ? state.useSdwan : undefined;
        } else {
            const args = argsOrState as SystemGretunnelArgs | undefined;
            resourceInputs["autoAsicOffload"] = args ? args.autoAsicOffload : undefined;
            resourceInputs["checksumReception"] = args ? args.checksumReception : undefined;
            resourceInputs["checksumTransmission"] = args ? args.checksumTransmission : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["diffservcode"] = args ? args.diffservcode : undefined;
            resourceInputs["dscpCopying"] = args ? args.dscpCopying : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["keepaliveFailtimes"] = args ? args.keepaliveFailtimes : undefined;
            resourceInputs["keepaliveInterval"] = args ? args.keepaliveInterval : undefined;
            resourceInputs["keyInbound"] = args ? args.keyInbound : undefined;
            resourceInputs["keyOutbound"] = args ? args.keyOutbound : undefined;
            resourceInputs["localGw"] = args ? args.localGw : undefined;
            resourceInputs["localGw6"] = args ? args.localGw6 : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["remoteGw"] = args ? args.remoteGw : undefined;
            resourceInputs["remoteGw6"] = args ? args.remoteGw6 : undefined;
            resourceInputs["sequenceNumberReception"] = args ? args.sequenceNumberReception : undefined;
            resourceInputs["sequenceNumberTransmission"] = args ? args.sequenceNumberTransmission : undefined;
            resourceInputs["useSdwan"] = args ? args.useSdwan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemGretunnel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemGretunnel resources.
 */
export interface SystemGretunnelState {
    autoAsicOffload?: pulumi.Input<string>;
    checksumReception?: pulumi.Input<string>;
    checksumTransmission?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    diffservcode?: pulumi.Input<string>;
    dscpCopying?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    ipVersion?: pulumi.Input<string>;
    keepaliveFailtimes?: pulumi.Input<number>;
    keepaliveInterval?: pulumi.Input<number>;
    keyInbound?: pulumi.Input<number>;
    keyOutbound?: pulumi.Input<number>;
    localGw?: pulumi.Input<string>;
    localGw6?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    remoteGw?: pulumi.Input<string>;
    remoteGw6?: pulumi.Input<string>;
    sequenceNumberReception?: pulumi.Input<string>;
    sequenceNumberTransmission?: pulumi.Input<string>;
    useSdwan?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemGretunnel resource.
 */
export interface SystemGretunnelArgs {
    autoAsicOffload?: pulumi.Input<string>;
    checksumReception?: pulumi.Input<string>;
    checksumTransmission?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    diffservcode?: pulumi.Input<string>;
    dscpCopying?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    ipVersion?: pulumi.Input<string>;
    keepaliveFailtimes?: pulumi.Input<number>;
    keepaliveInterval?: pulumi.Input<number>;
    keyInbound?: pulumi.Input<number>;
    keyOutbound?: pulumi.Input<number>;
    localGw?: pulumi.Input<string>;
    localGw6?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    remoteGw?: pulumi.Input<string>;
    remoteGw6?: pulumi.Input<string>;
    sequenceNumberReception?: pulumi.Input<string>;
    sequenceNumberTransmission?: pulumi.Input<string>;
    useSdwan?: pulumi.Input<string>;
}
