// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WebproxyExplicitPacpolicy extends pulumi.CustomResource {
    /**
     * Get an existing WebproxyExplicitPacpolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebproxyExplicitPacpolicyState, opts?: pulumi.CustomResourceOptions): WebproxyExplicitPacpolicy {
        return new WebproxyExplicitPacpolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/webproxyExplicitPacpolicy:WebproxyExplicitPacpolicy';

    /**
     * Returns true if the given object is an instance of WebproxyExplicitPacpolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebproxyExplicitPacpolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebproxyExplicitPacpolicy.__pulumiType;
    }

    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly dstaddrs!: pulumi.Output<string[]>;
    public readonly pacFileData!: pulumi.Output<string | undefined>;
    public readonly pacFileName!: pulumi.Output<string>;
    public readonly policyid!: pulumi.Output<number | undefined>;
    public readonly srcaddr6s!: pulumi.Output<string[]>;
    public readonly srcaddrs!: pulumi.Output<string[]>;
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a WebproxyExplicitPacpolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WebproxyExplicitPacpolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebproxyExplicitPacpolicyArgs | WebproxyExplicitPacpolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebproxyExplicitPacpolicyState | undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["dstaddrs"] = state ? state.dstaddrs : undefined;
            resourceInputs["pacFileData"] = state ? state.pacFileData : undefined;
            resourceInputs["pacFileName"] = state ? state.pacFileName : undefined;
            resourceInputs["policyid"] = state ? state.policyid : undefined;
            resourceInputs["srcaddr6s"] = state ? state.srcaddr6s : undefined;
            resourceInputs["srcaddrs"] = state ? state.srcaddrs : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as WebproxyExplicitPacpolicyArgs | undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["dstaddrs"] = args ? args.dstaddrs : undefined;
            resourceInputs["pacFileData"] = args ? args.pacFileData : undefined;
            resourceInputs["pacFileName"] = args ? args.pacFileName : undefined;
            resourceInputs["policyid"] = args ? args.policyid : undefined;
            resourceInputs["srcaddr6s"] = args ? args.srcaddr6s : undefined;
            resourceInputs["srcaddrs"] = args ? args.srcaddrs : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebproxyExplicitPacpolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WebproxyExplicitPacpolicy resources.
 */
export interface WebproxyExplicitPacpolicyState {
    comments?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dstaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    pacFileData?: pulumi.Input<string>;
    pacFileName?: pulumi.Input<string>;
    policyid?: pulumi.Input<number>;
    srcaddr6s?: pulumi.Input<pulumi.Input<string>[]>;
    srcaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebproxyExplicitPacpolicy resource.
 */
export interface WebproxyExplicitPacpolicyArgs {
    comments?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dstaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    pacFileData?: pulumi.Input<string>;
    pacFileName?: pulumi.Input<string>;
    policyid?: pulumi.Input<number>;
    srcaddr6s?: pulumi.Input<pulumi.Input<string>[]>;
    srcaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
}
