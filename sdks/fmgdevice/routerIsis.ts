// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterIsis extends pulumi.CustomResource {
    /**
     * Get an existing RouterIsis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterIsisState, opts?: pulumi.CustomResourceOptions): RouterIsis {
        return new RouterIsis(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/routerIsis:RouterIsis';

    /**
     * Returns true if the given object is an instance of RouterIsis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterIsis {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterIsis.__pulumiType;
    }

    public readonly adjacencyCheck!: pulumi.Output<string | undefined>;
    public readonly adjacencyCheck6!: pulumi.Output<string>;
    public readonly advPassiveOnly!: pulumi.Output<string>;
    public readonly advPassiveOnly6!: pulumi.Output<string>;
    public readonly authKeychainL1s!: pulumi.Output<string[]>;
    public readonly authKeychainL2s!: pulumi.Output<string[]>;
    public readonly authModeL1!: pulumi.Output<string>;
    public readonly authModeL2!: pulumi.Output<string>;
    public readonly authPasswordL1s!: pulumi.Output<string[]>;
    public readonly authPasswordL2s!: pulumi.Output<string[]>;
    public readonly authSendonlyL1!: pulumi.Output<string>;
    public readonly authSendonlyL2!: pulumi.Output<string>;
    public readonly defaultOriginate!: pulumi.Output<string>;
    public readonly defaultOriginate6!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly dynamicHostname!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly ignoreLspErrors!: pulumi.Output<string>;
    public readonly isType!: pulumi.Output<string>;
    public readonly isisInterfaces!: pulumi.Output<outputs.RouterIsisIsisInterface[] | undefined>;
    public readonly isisNets!: pulumi.Output<outputs.RouterIsisIsisNet[] | undefined>;
    public readonly lspGenIntervalL1!: pulumi.Output<number>;
    public readonly lspGenIntervalL2!: pulumi.Output<number>;
    public readonly lspRefreshInterval!: pulumi.Output<number>;
    public readonly maxLspLifetime!: pulumi.Output<number>;
    public readonly metricStyle!: pulumi.Output<string>;
    public readonly overloadBit!: pulumi.Output<string>;
    public readonly overloadBitOnStartup!: pulumi.Output<number | undefined>;
    public readonly overloadBitSuppresses!: pulumi.Output<string[]>;
    public readonly redistribute!: pulumi.Output<outputs.RouterIsisRedistribute | undefined>;
    public readonly redistribute6!: pulumi.Output<outputs.RouterIsisRedistribute6 | undefined>;
    public readonly redistribute6L1!: pulumi.Output<string>;
    public readonly redistribute6L1Lists!: pulumi.Output<string[]>;
    public readonly redistribute6L2!: pulumi.Output<string>;
    public readonly redistribute6L2Lists!: pulumi.Output<string[]>;
    public readonly redistributeL1!: pulumi.Output<string>;
    public readonly redistributeL1Lists!: pulumi.Output<string[]>;
    public readonly redistributeL2!: pulumi.Output<string>;
    public readonly redistributeL2Lists!: pulumi.Output<string[]>;
    public readonly spfIntervalExpL1s!: pulumi.Output<number[]>;
    public readonly spfIntervalExpL2s!: pulumi.Output<number[]>;
    public readonly summaryAddress6s!: pulumi.Output<outputs.RouterIsisSummaryAddress6[] | undefined>;
    public readonly summaryAddresses!: pulumi.Output<outputs.RouterIsisSummaryAddress[] | undefined>;

    /**
     * Create a RouterIsis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterIsisArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterIsisArgs | RouterIsisState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterIsisState | undefined;
            resourceInputs["adjacencyCheck"] = state ? state.adjacencyCheck : undefined;
            resourceInputs["adjacencyCheck6"] = state ? state.adjacencyCheck6 : undefined;
            resourceInputs["advPassiveOnly"] = state ? state.advPassiveOnly : undefined;
            resourceInputs["advPassiveOnly6"] = state ? state.advPassiveOnly6 : undefined;
            resourceInputs["authKeychainL1s"] = state ? state.authKeychainL1s : undefined;
            resourceInputs["authKeychainL2s"] = state ? state.authKeychainL2s : undefined;
            resourceInputs["authModeL1"] = state ? state.authModeL1 : undefined;
            resourceInputs["authModeL2"] = state ? state.authModeL2 : undefined;
            resourceInputs["authPasswordL1s"] = state ? state.authPasswordL1s : undefined;
            resourceInputs["authPasswordL2s"] = state ? state.authPasswordL2s : undefined;
            resourceInputs["authSendonlyL1"] = state ? state.authSendonlyL1 : undefined;
            resourceInputs["authSendonlyL2"] = state ? state.authSendonlyL2 : undefined;
            resourceInputs["defaultOriginate"] = state ? state.defaultOriginate : undefined;
            resourceInputs["defaultOriginate6"] = state ? state.defaultOriginate6 : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["dynamicHostname"] = state ? state.dynamicHostname : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ignoreLspErrors"] = state ? state.ignoreLspErrors : undefined;
            resourceInputs["isType"] = state ? state.isType : undefined;
            resourceInputs["isisInterfaces"] = state ? state.isisInterfaces : undefined;
            resourceInputs["isisNets"] = state ? state.isisNets : undefined;
            resourceInputs["lspGenIntervalL1"] = state ? state.lspGenIntervalL1 : undefined;
            resourceInputs["lspGenIntervalL2"] = state ? state.lspGenIntervalL2 : undefined;
            resourceInputs["lspRefreshInterval"] = state ? state.lspRefreshInterval : undefined;
            resourceInputs["maxLspLifetime"] = state ? state.maxLspLifetime : undefined;
            resourceInputs["metricStyle"] = state ? state.metricStyle : undefined;
            resourceInputs["overloadBit"] = state ? state.overloadBit : undefined;
            resourceInputs["overloadBitOnStartup"] = state ? state.overloadBitOnStartup : undefined;
            resourceInputs["overloadBitSuppresses"] = state ? state.overloadBitSuppresses : undefined;
            resourceInputs["redistribute"] = state ? state.redistribute : undefined;
            resourceInputs["redistribute6"] = state ? state.redistribute6 : undefined;
            resourceInputs["redistribute6L1"] = state ? state.redistribute6L1 : undefined;
            resourceInputs["redistribute6L1Lists"] = state ? state.redistribute6L1Lists : undefined;
            resourceInputs["redistribute6L2"] = state ? state.redistribute6L2 : undefined;
            resourceInputs["redistribute6L2Lists"] = state ? state.redistribute6L2Lists : undefined;
            resourceInputs["redistributeL1"] = state ? state.redistributeL1 : undefined;
            resourceInputs["redistributeL1Lists"] = state ? state.redistributeL1Lists : undefined;
            resourceInputs["redistributeL2"] = state ? state.redistributeL2 : undefined;
            resourceInputs["redistributeL2Lists"] = state ? state.redistributeL2Lists : undefined;
            resourceInputs["spfIntervalExpL1s"] = state ? state.spfIntervalExpL1s : undefined;
            resourceInputs["spfIntervalExpL2s"] = state ? state.spfIntervalExpL2s : undefined;
            resourceInputs["summaryAddress6s"] = state ? state.summaryAddress6s : undefined;
            resourceInputs["summaryAddresses"] = state ? state.summaryAddresses : undefined;
        } else {
            const args = argsOrState as RouterIsisArgs | undefined;
            resourceInputs["adjacencyCheck"] = args ? args.adjacencyCheck : undefined;
            resourceInputs["adjacencyCheck6"] = args ? args.adjacencyCheck6 : undefined;
            resourceInputs["advPassiveOnly"] = args ? args.advPassiveOnly : undefined;
            resourceInputs["advPassiveOnly6"] = args ? args.advPassiveOnly6 : undefined;
            resourceInputs["authKeychainL1s"] = args ? args.authKeychainL1s : undefined;
            resourceInputs["authKeychainL2s"] = args ? args.authKeychainL2s : undefined;
            resourceInputs["authModeL1"] = args ? args.authModeL1 : undefined;
            resourceInputs["authModeL2"] = args ? args.authModeL2 : undefined;
            resourceInputs["authPasswordL1s"] = args?.authPasswordL1s ? pulumi.secret(args.authPasswordL1s) : undefined;
            resourceInputs["authPasswordL2s"] = args?.authPasswordL2s ? pulumi.secret(args.authPasswordL2s) : undefined;
            resourceInputs["authSendonlyL1"] = args ? args.authSendonlyL1 : undefined;
            resourceInputs["authSendonlyL2"] = args ? args.authSendonlyL2 : undefined;
            resourceInputs["defaultOriginate"] = args ? args.defaultOriginate : undefined;
            resourceInputs["defaultOriginate6"] = args ? args.defaultOriginate6 : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["dynamicHostname"] = args ? args.dynamicHostname : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ignoreLspErrors"] = args ? args.ignoreLspErrors : undefined;
            resourceInputs["isType"] = args ? args.isType : undefined;
            resourceInputs["isisInterfaces"] = args ? args.isisInterfaces : undefined;
            resourceInputs["isisNets"] = args ? args.isisNets : undefined;
            resourceInputs["lspGenIntervalL1"] = args ? args.lspGenIntervalL1 : undefined;
            resourceInputs["lspGenIntervalL2"] = args ? args.lspGenIntervalL2 : undefined;
            resourceInputs["lspRefreshInterval"] = args ? args.lspRefreshInterval : undefined;
            resourceInputs["maxLspLifetime"] = args ? args.maxLspLifetime : undefined;
            resourceInputs["metricStyle"] = args ? args.metricStyle : undefined;
            resourceInputs["overloadBit"] = args ? args.overloadBit : undefined;
            resourceInputs["overloadBitOnStartup"] = args ? args.overloadBitOnStartup : undefined;
            resourceInputs["overloadBitSuppresses"] = args ? args.overloadBitSuppresses : undefined;
            resourceInputs["redistribute"] = args ? args.redistribute : undefined;
            resourceInputs["redistribute6"] = args ? args.redistribute6 : undefined;
            resourceInputs["redistribute6L1"] = args ? args.redistribute6L1 : undefined;
            resourceInputs["redistribute6L1Lists"] = args ? args.redistribute6L1Lists : undefined;
            resourceInputs["redistribute6L2"] = args ? args.redistribute6L2 : undefined;
            resourceInputs["redistribute6L2Lists"] = args ? args.redistribute6L2Lists : undefined;
            resourceInputs["redistributeL1"] = args ? args.redistributeL1 : undefined;
            resourceInputs["redistributeL1Lists"] = args ? args.redistributeL1Lists : undefined;
            resourceInputs["redistributeL2"] = args ? args.redistributeL2 : undefined;
            resourceInputs["redistributeL2Lists"] = args ? args.redistributeL2Lists : undefined;
            resourceInputs["spfIntervalExpL1s"] = args ? args.spfIntervalExpL1s : undefined;
            resourceInputs["spfIntervalExpL2s"] = args ? args.spfIntervalExpL2s : undefined;
            resourceInputs["summaryAddress6s"] = args ? args.summaryAddress6s : undefined;
            resourceInputs["summaryAddresses"] = args ? args.summaryAddresses : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authPasswordL1s", "authPasswordL2s"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RouterIsis.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterIsis resources.
 */
export interface RouterIsisState {
    adjacencyCheck?: pulumi.Input<string>;
    adjacencyCheck6?: pulumi.Input<string>;
    advPassiveOnly?: pulumi.Input<string>;
    advPassiveOnly6?: pulumi.Input<string>;
    authKeychainL1s?: pulumi.Input<pulumi.Input<string>[]>;
    authKeychainL2s?: pulumi.Input<pulumi.Input<string>[]>;
    authModeL1?: pulumi.Input<string>;
    authModeL2?: pulumi.Input<string>;
    authPasswordL1s?: pulumi.Input<pulumi.Input<string>[]>;
    authPasswordL2s?: pulumi.Input<pulumi.Input<string>[]>;
    authSendonlyL1?: pulumi.Input<string>;
    authSendonlyL2?: pulumi.Input<string>;
    defaultOriginate?: pulumi.Input<string>;
    defaultOriginate6?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dynamicHostname?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ignoreLspErrors?: pulumi.Input<string>;
    isType?: pulumi.Input<string>;
    isisInterfaces?: pulumi.Input<pulumi.Input<inputs.RouterIsisIsisInterface>[]>;
    isisNets?: pulumi.Input<pulumi.Input<inputs.RouterIsisIsisNet>[]>;
    lspGenIntervalL1?: pulumi.Input<number>;
    lspGenIntervalL2?: pulumi.Input<number>;
    lspRefreshInterval?: pulumi.Input<number>;
    maxLspLifetime?: pulumi.Input<number>;
    metricStyle?: pulumi.Input<string>;
    overloadBit?: pulumi.Input<string>;
    overloadBitOnStartup?: pulumi.Input<number>;
    overloadBitSuppresses?: pulumi.Input<pulumi.Input<string>[]>;
    redistribute?: pulumi.Input<inputs.RouterIsisRedistribute>;
    redistribute6?: pulumi.Input<inputs.RouterIsisRedistribute6>;
    redistribute6L1?: pulumi.Input<string>;
    redistribute6L1Lists?: pulumi.Input<pulumi.Input<string>[]>;
    redistribute6L2?: pulumi.Input<string>;
    redistribute6L2Lists?: pulumi.Input<pulumi.Input<string>[]>;
    redistributeL1?: pulumi.Input<string>;
    redistributeL1Lists?: pulumi.Input<pulumi.Input<string>[]>;
    redistributeL2?: pulumi.Input<string>;
    redistributeL2Lists?: pulumi.Input<pulumi.Input<string>[]>;
    spfIntervalExpL1s?: pulumi.Input<pulumi.Input<number>[]>;
    spfIntervalExpL2s?: pulumi.Input<pulumi.Input<number>[]>;
    summaryAddress6s?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress6>[]>;
    summaryAddresses?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress>[]>;
}

/**
 * The set of arguments for constructing a RouterIsis resource.
 */
export interface RouterIsisArgs {
    adjacencyCheck?: pulumi.Input<string>;
    adjacencyCheck6?: pulumi.Input<string>;
    advPassiveOnly?: pulumi.Input<string>;
    advPassiveOnly6?: pulumi.Input<string>;
    authKeychainL1s?: pulumi.Input<pulumi.Input<string>[]>;
    authKeychainL2s?: pulumi.Input<pulumi.Input<string>[]>;
    authModeL1?: pulumi.Input<string>;
    authModeL2?: pulumi.Input<string>;
    authPasswordL1s?: pulumi.Input<pulumi.Input<string>[]>;
    authPasswordL2s?: pulumi.Input<pulumi.Input<string>[]>;
    authSendonlyL1?: pulumi.Input<string>;
    authSendonlyL2?: pulumi.Input<string>;
    defaultOriginate?: pulumi.Input<string>;
    defaultOriginate6?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dynamicHostname?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ignoreLspErrors?: pulumi.Input<string>;
    isType?: pulumi.Input<string>;
    isisInterfaces?: pulumi.Input<pulumi.Input<inputs.RouterIsisIsisInterface>[]>;
    isisNets?: pulumi.Input<pulumi.Input<inputs.RouterIsisIsisNet>[]>;
    lspGenIntervalL1?: pulumi.Input<number>;
    lspGenIntervalL2?: pulumi.Input<number>;
    lspRefreshInterval?: pulumi.Input<number>;
    maxLspLifetime?: pulumi.Input<number>;
    metricStyle?: pulumi.Input<string>;
    overloadBit?: pulumi.Input<string>;
    overloadBitOnStartup?: pulumi.Input<number>;
    overloadBitSuppresses?: pulumi.Input<pulumi.Input<string>[]>;
    redistribute?: pulumi.Input<inputs.RouterIsisRedistribute>;
    redistribute6?: pulumi.Input<inputs.RouterIsisRedistribute6>;
    redistribute6L1?: pulumi.Input<string>;
    redistribute6L1Lists?: pulumi.Input<pulumi.Input<string>[]>;
    redistribute6L2?: pulumi.Input<string>;
    redistribute6L2Lists?: pulumi.Input<pulumi.Input<string>[]>;
    redistributeL1?: pulumi.Input<string>;
    redistributeL1Lists?: pulumi.Input<pulumi.Input<string>[]>;
    redistributeL2?: pulumi.Input<string>;
    redistributeL2Lists?: pulumi.Input<pulumi.Input<string>[]>;
    spfIntervalExpL1s?: pulumi.Input<pulumi.Input<number>[]>;
    spfIntervalExpL2s?: pulumi.Input<pulumi.Input<number>[]>;
    summaryAddress6s?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress6>[]>;
    summaryAddresses?: pulumi.Input<pulumi.Input<inputs.RouterIsisSummaryAddress>[]>;
}
