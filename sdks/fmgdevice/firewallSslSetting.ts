// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FirewallSslSetting extends pulumi.CustomResource {
    /**
     * Get an existing FirewallSslSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallSslSettingState, opts?: pulumi.CustomResourceOptions): FirewallSslSetting {
        return new FirewallSslSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/firewallSslSetting:FirewallSslSetting';

    /**
     * Returns true if the given object is an instance of FirewallSslSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallSslSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallSslSetting.__pulumiType;
    }

    public readonly abbreviateHandshake!: pulumi.Output<string>;
    public readonly certCacheCapacity!: pulumi.Output<number>;
    public readonly certCacheTimeout!: pulumi.Output<number>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly kxpQueueThreshold!: pulumi.Output<number | undefined>;
    public readonly noMatchingCipherAction!: pulumi.Output<string>;
    public readonly proxyConnectTimeout!: pulumi.Output<number>;
    public readonly sessionCacheCapacity!: pulumi.Output<number>;
    public readonly sessionCacheTimeout!: pulumi.Output<number>;
    public readonly sslDhBits!: pulumi.Output<string>;
    public readonly sslQueueThreshold!: pulumi.Output<number | undefined>;
    public readonly sslSendEmptyFrags!: pulumi.Output<string>;

    /**
     * Create a FirewallSslSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallSslSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallSslSettingArgs | FirewallSslSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallSslSettingState | undefined;
            resourceInputs["abbreviateHandshake"] = state ? state.abbreviateHandshake : undefined;
            resourceInputs["certCacheCapacity"] = state ? state.certCacheCapacity : undefined;
            resourceInputs["certCacheTimeout"] = state ? state.certCacheTimeout : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["kxpQueueThreshold"] = state ? state.kxpQueueThreshold : undefined;
            resourceInputs["noMatchingCipherAction"] = state ? state.noMatchingCipherAction : undefined;
            resourceInputs["proxyConnectTimeout"] = state ? state.proxyConnectTimeout : undefined;
            resourceInputs["sessionCacheCapacity"] = state ? state.sessionCacheCapacity : undefined;
            resourceInputs["sessionCacheTimeout"] = state ? state.sessionCacheTimeout : undefined;
            resourceInputs["sslDhBits"] = state ? state.sslDhBits : undefined;
            resourceInputs["sslQueueThreshold"] = state ? state.sslQueueThreshold : undefined;
            resourceInputs["sslSendEmptyFrags"] = state ? state.sslSendEmptyFrags : undefined;
        } else {
            const args = argsOrState as FirewallSslSettingArgs | undefined;
            resourceInputs["abbreviateHandshake"] = args ? args.abbreviateHandshake : undefined;
            resourceInputs["certCacheCapacity"] = args ? args.certCacheCapacity : undefined;
            resourceInputs["certCacheTimeout"] = args ? args.certCacheTimeout : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["kxpQueueThreshold"] = args ? args.kxpQueueThreshold : undefined;
            resourceInputs["noMatchingCipherAction"] = args ? args.noMatchingCipherAction : undefined;
            resourceInputs["proxyConnectTimeout"] = args ? args.proxyConnectTimeout : undefined;
            resourceInputs["sessionCacheCapacity"] = args ? args.sessionCacheCapacity : undefined;
            resourceInputs["sessionCacheTimeout"] = args ? args.sessionCacheTimeout : undefined;
            resourceInputs["sslDhBits"] = args ? args.sslDhBits : undefined;
            resourceInputs["sslQueueThreshold"] = args ? args.sslQueueThreshold : undefined;
            resourceInputs["sslSendEmptyFrags"] = args ? args.sslSendEmptyFrags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallSslSetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirewallSslSetting resources.
 */
export interface FirewallSslSettingState {
    abbreviateHandshake?: pulumi.Input<string>;
    certCacheCapacity?: pulumi.Input<number>;
    certCacheTimeout?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    kxpQueueThreshold?: pulumi.Input<number>;
    noMatchingCipherAction?: pulumi.Input<string>;
    proxyConnectTimeout?: pulumi.Input<number>;
    sessionCacheCapacity?: pulumi.Input<number>;
    sessionCacheTimeout?: pulumi.Input<number>;
    sslDhBits?: pulumi.Input<string>;
    sslQueueThreshold?: pulumi.Input<number>;
    sslSendEmptyFrags?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallSslSetting resource.
 */
export interface FirewallSslSettingArgs {
    abbreviateHandshake?: pulumi.Input<string>;
    certCacheCapacity?: pulumi.Input<number>;
    certCacheTimeout?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    kxpQueueThreshold?: pulumi.Input<number>;
    noMatchingCipherAction?: pulumi.Input<string>;
    proxyConnectTimeout?: pulumi.Input<number>;
    sessionCacheCapacity?: pulumi.Input<number>;
    sessionCacheTimeout?: pulumi.Input<number>;
    sslDhBits?: pulumi.Input<string>;
    sslQueueThreshold?: pulumi.Input<number>;
    sslSendEmptyFrags?: pulumi.Input<string>;
}
