// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AntivirusQuarantine extends pulumi.CustomResource {
    /**
     * Get an existing AntivirusQuarantine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AntivirusQuarantineState, opts?: pulumi.CustomResourceOptions): AntivirusQuarantine {
        return new AntivirusQuarantine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/antivirusQuarantine:AntivirusQuarantine';

    /**
     * Returns true if the given object is an instance of AntivirusQuarantine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AntivirusQuarantine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AntivirusQuarantine.__pulumiType;
    }

    public readonly agelimit!: pulumi.Output<number | undefined>;
    public readonly destination!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly dropBlockeds!: pulumi.Output<string[]>;
    public readonly dropHeuristics!: pulumi.Output<string[]>;
    public readonly dropInfecteds!: pulumi.Output<string[]>;
    public readonly dropIntercepteds!: pulumi.Output<string[]>;
    public readonly dropMachineLearnings!: pulumi.Output<string[]>;
    public readonly lowspace!: pulumi.Output<string | undefined>;
    public readonly maxfilesize!: pulumi.Output<number | undefined>;
    public readonly quarantineQuota!: pulumi.Output<number | undefined>;
    public readonly storeBlockeds!: pulumi.Output<string[]>;
    public readonly storeHeuristics!: pulumi.Output<string[]>;
    public readonly storeInfecteds!: pulumi.Output<string[]>;
    public readonly storeIntercepteds!: pulumi.Output<string[]>;
    public readonly storeMachineLearnings!: pulumi.Output<string[]>;

    /**
     * Create a AntivirusQuarantine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AntivirusQuarantineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AntivirusQuarantineArgs | AntivirusQuarantineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AntivirusQuarantineState | undefined;
            resourceInputs["agelimit"] = state ? state.agelimit : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["dropBlockeds"] = state ? state.dropBlockeds : undefined;
            resourceInputs["dropHeuristics"] = state ? state.dropHeuristics : undefined;
            resourceInputs["dropInfecteds"] = state ? state.dropInfecteds : undefined;
            resourceInputs["dropIntercepteds"] = state ? state.dropIntercepteds : undefined;
            resourceInputs["dropMachineLearnings"] = state ? state.dropMachineLearnings : undefined;
            resourceInputs["lowspace"] = state ? state.lowspace : undefined;
            resourceInputs["maxfilesize"] = state ? state.maxfilesize : undefined;
            resourceInputs["quarantineQuota"] = state ? state.quarantineQuota : undefined;
            resourceInputs["storeBlockeds"] = state ? state.storeBlockeds : undefined;
            resourceInputs["storeHeuristics"] = state ? state.storeHeuristics : undefined;
            resourceInputs["storeInfecteds"] = state ? state.storeInfecteds : undefined;
            resourceInputs["storeIntercepteds"] = state ? state.storeIntercepteds : undefined;
            resourceInputs["storeMachineLearnings"] = state ? state.storeMachineLearnings : undefined;
        } else {
            const args = argsOrState as AntivirusQuarantineArgs | undefined;
            resourceInputs["agelimit"] = args ? args.agelimit : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["dropBlockeds"] = args ? args.dropBlockeds : undefined;
            resourceInputs["dropHeuristics"] = args ? args.dropHeuristics : undefined;
            resourceInputs["dropInfecteds"] = args ? args.dropInfecteds : undefined;
            resourceInputs["dropIntercepteds"] = args ? args.dropIntercepteds : undefined;
            resourceInputs["dropMachineLearnings"] = args ? args.dropMachineLearnings : undefined;
            resourceInputs["lowspace"] = args ? args.lowspace : undefined;
            resourceInputs["maxfilesize"] = args ? args.maxfilesize : undefined;
            resourceInputs["quarantineQuota"] = args ? args.quarantineQuota : undefined;
            resourceInputs["storeBlockeds"] = args ? args.storeBlockeds : undefined;
            resourceInputs["storeHeuristics"] = args ? args.storeHeuristics : undefined;
            resourceInputs["storeInfecteds"] = args ? args.storeInfecteds : undefined;
            resourceInputs["storeIntercepteds"] = args ? args.storeIntercepteds : undefined;
            resourceInputs["storeMachineLearnings"] = args ? args.storeMachineLearnings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AntivirusQuarantine.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AntivirusQuarantine resources.
 */
export interface AntivirusQuarantineState {
    agelimit?: pulumi.Input<number>;
    destination?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dropBlockeds?: pulumi.Input<pulumi.Input<string>[]>;
    dropHeuristics?: pulumi.Input<pulumi.Input<string>[]>;
    dropInfecteds?: pulumi.Input<pulumi.Input<string>[]>;
    dropIntercepteds?: pulumi.Input<pulumi.Input<string>[]>;
    dropMachineLearnings?: pulumi.Input<pulumi.Input<string>[]>;
    lowspace?: pulumi.Input<string>;
    maxfilesize?: pulumi.Input<number>;
    quarantineQuota?: pulumi.Input<number>;
    storeBlockeds?: pulumi.Input<pulumi.Input<string>[]>;
    storeHeuristics?: pulumi.Input<pulumi.Input<string>[]>;
    storeInfecteds?: pulumi.Input<pulumi.Input<string>[]>;
    storeIntercepteds?: pulumi.Input<pulumi.Input<string>[]>;
    storeMachineLearnings?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AntivirusQuarantine resource.
 */
export interface AntivirusQuarantineArgs {
    agelimit?: pulumi.Input<number>;
    destination?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dropBlockeds?: pulumi.Input<pulumi.Input<string>[]>;
    dropHeuristics?: pulumi.Input<pulumi.Input<string>[]>;
    dropInfecteds?: pulumi.Input<pulumi.Input<string>[]>;
    dropIntercepteds?: pulumi.Input<pulumi.Input<string>[]>;
    dropMachineLearnings?: pulumi.Input<pulumi.Input<string>[]>;
    lowspace?: pulumi.Input<string>;
    maxfilesize?: pulumi.Input<number>;
    quarantineQuota?: pulumi.Input<number>;
    storeBlockeds?: pulumi.Input<pulumi.Input<string>[]>;
    storeHeuristics?: pulumi.Input<pulumi.Input<string>[]>;
    storeInfecteds?: pulumi.Input<pulumi.Input<string>[]>;
    storeIntercepteds?: pulumi.Input<pulumi.Input<string>[]>;
    storeMachineLearnings?: pulumi.Input<pulumi.Input<string>[]>;
}
