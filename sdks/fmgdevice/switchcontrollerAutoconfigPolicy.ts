// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchcontrollerAutoconfigPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SwitchcontrollerAutoconfigPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchcontrollerAutoconfigPolicyState, opts?: pulumi.CustomResourceOptions): SwitchcontrollerAutoconfigPolicy {
        return new SwitchcontrollerAutoconfigPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/switchcontrollerAutoconfigPolicy:SwitchcontrollerAutoconfigPolicy';

    /**
     * Returns true if the given object is an instance of SwitchcontrollerAutoconfigPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchcontrollerAutoconfigPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchcontrollerAutoconfigPolicy.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly igmpFloodReport!: pulumi.Output<string>;
    public readonly igmpFloodTraffic!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly poeStatus!: pulumi.Output<string>;
    public readonly qosPolicies!: pulumi.Output<string[]>;
    public readonly stormControlPolicies!: pulumi.Output<string[]>;

    /**
     * Create a SwitchcontrollerAutoconfigPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchcontrollerAutoconfigPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchcontrollerAutoconfigPolicyArgs | SwitchcontrollerAutoconfigPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchcontrollerAutoconfigPolicyState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["igmpFloodReport"] = state ? state.igmpFloodReport : undefined;
            resourceInputs["igmpFloodTraffic"] = state ? state.igmpFloodTraffic : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["poeStatus"] = state ? state.poeStatus : undefined;
            resourceInputs["qosPolicies"] = state ? state.qosPolicies : undefined;
            resourceInputs["stormControlPolicies"] = state ? state.stormControlPolicies : undefined;
        } else {
            const args = argsOrState as SwitchcontrollerAutoconfigPolicyArgs | undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["igmpFloodReport"] = args ? args.igmpFloodReport : undefined;
            resourceInputs["igmpFloodTraffic"] = args ? args.igmpFloodTraffic : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["poeStatus"] = args ? args.poeStatus : undefined;
            resourceInputs["qosPolicies"] = args ? args.qosPolicies : undefined;
            resourceInputs["stormControlPolicies"] = args ? args.stormControlPolicies : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchcontrollerAutoconfigPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchcontrollerAutoconfigPolicy resources.
 */
export interface SwitchcontrollerAutoconfigPolicyState {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    igmpFloodReport?: pulumi.Input<string>;
    igmpFloodTraffic?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    poeStatus?: pulumi.Input<string>;
    qosPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    stormControlPolicies?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SwitchcontrollerAutoconfigPolicy resource.
 */
export interface SwitchcontrollerAutoconfigPolicyArgs {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    igmpFloodReport?: pulumi.Input<string>;
    igmpFloodTraffic?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    poeStatus?: pulumi.Input<string>;
    qosPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    stormControlPolicies?: pulumi.Input<pulumi.Input<string>[]>;
}
