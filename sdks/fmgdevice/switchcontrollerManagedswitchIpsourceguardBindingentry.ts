// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchcontrollerManagedswitchIpsourceguardBindingentry extends pulumi.CustomResource {
    /**
     * Get an existing SwitchcontrollerManagedswitchIpsourceguardBindingentry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchcontrollerManagedswitchIpsourceguardBindingentryState, opts?: pulumi.CustomResourceOptions): SwitchcontrollerManagedswitchIpsourceguardBindingentry {
        return new SwitchcontrollerManagedswitchIpsourceguardBindingentry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/switchcontrollerManagedswitchIpsourceguardBindingentry:SwitchcontrollerManagedswitchIpsourceguardBindingentry';

    /**
     * Returns true if the given object is an instance of SwitchcontrollerManagedswitchIpsourceguardBindingentry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchcontrollerManagedswitchIpsourceguardBindingentry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchcontrollerManagedswitchIpsourceguardBindingentry.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly entryName!: pulumi.Output<string | undefined>;
    public readonly ip!: pulumi.Output<string>;
    public readonly ipSourceGuard!: pulumi.Output<string>;
    public readonly mac!: pulumi.Output<string>;
    public readonly managedSwitch!: pulumi.Output<string>;

    /**
     * Create a SwitchcontrollerManagedswitchIpsourceguardBindingentry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwitchcontrollerManagedswitchIpsourceguardBindingentryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchcontrollerManagedswitchIpsourceguardBindingentryArgs | SwitchcontrollerManagedswitchIpsourceguardBindingentryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchcontrollerManagedswitchIpsourceguardBindingentryState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["entryName"] = state ? state.entryName : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["ipSourceGuard"] = state ? state.ipSourceGuard : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["managedSwitch"] = state ? state.managedSwitch : undefined;
        } else {
            const args = argsOrState as SwitchcontrollerManagedswitchIpsourceguardBindingentryArgs | undefined;
            if ((!args || args.ipSourceGuard === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipSourceGuard'");
            }
            if ((!args || args.managedSwitch === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedSwitch'");
            }
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["entryName"] = args ? args.entryName : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["ipSourceGuard"] = args ? args.ipSourceGuard : undefined;
            resourceInputs["mac"] = args ? args.mac : undefined;
            resourceInputs["managedSwitch"] = args ? args.managedSwitch : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchcontrollerManagedswitchIpsourceguardBindingentry.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchcontrollerManagedswitchIpsourceguardBindingentry resources.
 */
export interface SwitchcontrollerManagedswitchIpsourceguardBindingentryState {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    entryName?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipSourceGuard?: pulumi.Input<string>;
    mac?: pulumi.Input<string>;
    managedSwitch?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchcontrollerManagedswitchIpsourceguardBindingentry resource.
 */
export interface SwitchcontrollerManagedswitchIpsourceguardBindingentryArgs {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    entryName?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipSourceGuard: pulumi.Input<string>;
    mac?: pulumi.Input<string>;
    managedSwitch: pulumi.Input<string>;
}
