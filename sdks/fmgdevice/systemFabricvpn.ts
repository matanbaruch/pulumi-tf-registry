// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemFabricvpn extends pulumi.CustomResource {
    /**
     * Get an existing SystemFabricvpn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemFabricvpnState, opts?: pulumi.CustomResourceOptions): SystemFabricvpn {
        return new SystemFabricvpn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemFabricvpn:SystemFabricvpn';

    /**
     * Returns true if the given object is an instance of SystemFabricvpn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemFabricvpn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemFabricvpn.__pulumiType;
    }

    public readonly advertisedSubnets!: pulumi.Output<outputs.SystemFabricvpnAdvertisedSubnet[] | undefined>;
    public readonly bgpAs!: pulumi.Output<number | undefined>;
    public readonly branchName!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly healthChecks!: pulumi.Output<string[]>;
    public readonly loopbackAddressBlocks!: pulumi.Output<string[]>;
    public readonly loopbackAdvertisedSubnets!: pulumi.Output<string[]>;
    public readonly loopbackInterfaces!: pulumi.Output<string[]>;
    public readonly overlays!: pulumi.Output<outputs.SystemFabricvpnOverlay[] | undefined>;
    public readonly policyRule!: pulumi.Output<string>;
    public readonly populated!: pulumi.Output<number | undefined>;
    public readonly psksecrets!: pulumi.Output<string[]>;
    public readonly sdwanZones!: pulumi.Output<string[]>;
    public readonly status!: pulumi.Output<string>;
    public readonly syncMode!: pulumi.Output<string>;
    public readonly vpnRole!: pulumi.Output<string>;

    /**
     * Create a SystemFabricvpn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemFabricvpnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemFabricvpnArgs | SystemFabricvpnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemFabricvpnState | undefined;
            resourceInputs["advertisedSubnets"] = state ? state.advertisedSubnets : undefined;
            resourceInputs["bgpAs"] = state ? state.bgpAs : undefined;
            resourceInputs["branchName"] = state ? state.branchName : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["healthChecks"] = state ? state.healthChecks : undefined;
            resourceInputs["loopbackAddressBlocks"] = state ? state.loopbackAddressBlocks : undefined;
            resourceInputs["loopbackAdvertisedSubnets"] = state ? state.loopbackAdvertisedSubnets : undefined;
            resourceInputs["loopbackInterfaces"] = state ? state.loopbackInterfaces : undefined;
            resourceInputs["overlays"] = state ? state.overlays : undefined;
            resourceInputs["policyRule"] = state ? state.policyRule : undefined;
            resourceInputs["populated"] = state ? state.populated : undefined;
            resourceInputs["psksecrets"] = state ? state.psksecrets : undefined;
            resourceInputs["sdwanZones"] = state ? state.sdwanZones : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["syncMode"] = state ? state.syncMode : undefined;
            resourceInputs["vpnRole"] = state ? state.vpnRole : undefined;
        } else {
            const args = argsOrState as SystemFabricvpnArgs | undefined;
            resourceInputs["advertisedSubnets"] = args ? args.advertisedSubnets : undefined;
            resourceInputs["bgpAs"] = args ? args.bgpAs : undefined;
            resourceInputs["branchName"] = args ? args.branchName : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["healthChecks"] = args ? args.healthChecks : undefined;
            resourceInputs["loopbackAddressBlocks"] = args ? args.loopbackAddressBlocks : undefined;
            resourceInputs["loopbackAdvertisedSubnets"] = args ? args.loopbackAdvertisedSubnets : undefined;
            resourceInputs["loopbackInterfaces"] = args ? args.loopbackInterfaces : undefined;
            resourceInputs["overlays"] = args ? args.overlays : undefined;
            resourceInputs["policyRule"] = args ? args.policyRule : undefined;
            resourceInputs["populated"] = args ? args.populated : undefined;
            resourceInputs["psksecrets"] = args?.psksecrets ? pulumi.secret(args.psksecrets) : undefined;
            resourceInputs["sdwanZones"] = args ? args.sdwanZones : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["syncMode"] = args ? args.syncMode : undefined;
            resourceInputs["vpnRole"] = args ? args.vpnRole : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["psksecrets"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemFabricvpn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemFabricvpn resources.
 */
export interface SystemFabricvpnState {
    advertisedSubnets?: pulumi.Input<pulumi.Input<inputs.SystemFabricvpnAdvertisedSubnet>[]>;
    bgpAs?: pulumi.Input<number>;
    branchName?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    healthChecks?: pulumi.Input<pulumi.Input<string>[]>;
    loopbackAddressBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    loopbackAdvertisedSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    loopbackInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    overlays?: pulumi.Input<pulumi.Input<inputs.SystemFabricvpnOverlay>[]>;
    policyRule?: pulumi.Input<string>;
    populated?: pulumi.Input<number>;
    psksecrets?: pulumi.Input<pulumi.Input<string>[]>;
    sdwanZones?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    syncMode?: pulumi.Input<string>;
    vpnRole?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemFabricvpn resource.
 */
export interface SystemFabricvpnArgs {
    advertisedSubnets?: pulumi.Input<pulumi.Input<inputs.SystemFabricvpnAdvertisedSubnet>[]>;
    bgpAs?: pulumi.Input<number>;
    branchName?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    healthChecks?: pulumi.Input<pulumi.Input<string>[]>;
    loopbackAddressBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    loopbackAdvertisedSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    loopbackInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    overlays?: pulumi.Input<pulumi.Input<inputs.SystemFabricvpnOverlay>[]>;
    policyRule?: pulumi.Input<string>;
    populated?: pulumi.Input<number>;
    psksecrets?: pulumi.Input<pulumi.Input<string>[]>;
    sdwanZones?: pulumi.Input<pulumi.Input<string>[]>;
    status?: pulumi.Input<string>;
    syncMode?: pulumi.Input<string>;
    vpnRole?: pulumi.Input<string>;
}
