// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WanoptContentdeliverynetworkruleRules extends pulumi.CustomResource {
    /**
     * Get an existing WanoptContentdeliverynetworkruleRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WanoptContentdeliverynetworkruleRulesState, opts?: pulumi.CustomResourceOptions): WanoptContentdeliverynetworkruleRules {
        return new WanoptContentdeliverynetworkruleRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/wanoptContentdeliverynetworkruleRules:WanoptContentdeliverynetworkruleRules';

    /**
     * Returns true if the given object is an instance of WanoptContentdeliverynetworkruleRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WanoptContentdeliverynetworkruleRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WanoptContentdeliverynetworkruleRules.__pulumiType;
    }

    public readonly contentDeliveryNetworkRule!: pulumi.Output<string>;
    public readonly contentId!: pulumi.Output<outputs.WanoptContentdeliverynetworkruleRulesContentId | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly matchEntries!: pulumi.Output<outputs.WanoptContentdeliverynetworkruleRulesMatchEntry[] | undefined>;
    public readonly matchMode!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly skipEntries!: pulumi.Output<outputs.WanoptContentdeliverynetworkruleRulesSkipEntry[] | undefined>;
    public readonly skipRuleMode!: pulumi.Output<string>;

    /**
     * Create a WanoptContentdeliverynetworkruleRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WanoptContentdeliverynetworkruleRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WanoptContentdeliverynetworkruleRulesArgs | WanoptContentdeliverynetworkruleRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WanoptContentdeliverynetworkruleRulesState | undefined;
            resourceInputs["contentDeliveryNetworkRule"] = state ? state.contentDeliveryNetworkRule : undefined;
            resourceInputs["contentId"] = state ? state.contentId : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["matchEntries"] = state ? state.matchEntries : undefined;
            resourceInputs["matchMode"] = state ? state.matchMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["skipEntries"] = state ? state.skipEntries : undefined;
            resourceInputs["skipRuleMode"] = state ? state.skipRuleMode : undefined;
        } else {
            const args = argsOrState as WanoptContentdeliverynetworkruleRulesArgs | undefined;
            if ((!args || args.contentDeliveryNetworkRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentDeliveryNetworkRule'");
            }
            resourceInputs["contentDeliveryNetworkRule"] = args ? args.contentDeliveryNetworkRule : undefined;
            resourceInputs["contentId"] = args ? args.contentId : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["matchEntries"] = args ? args.matchEntries : undefined;
            resourceInputs["matchMode"] = args ? args.matchMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["skipEntries"] = args ? args.skipEntries : undefined;
            resourceInputs["skipRuleMode"] = args ? args.skipRuleMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WanoptContentdeliverynetworkruleRules.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WanoptContentdeliverynetworkruleRules resources.
 */
export interface WanoptContentdeliverynetworkruleRulesState {
    contentDeliveryNetworkRule?: pulumi.Input<string>;
    contentId?: pulumi.Input<inputs.WanoptContentdeliverynetworkruleRulesContentId>;
    deviceName?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    matchEntries?: pulumi.Input<pulumi.Input<inputs.WanoptContentdeliverynetworkruleRulesMatchEntry>[]>;
    matchMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    skipEntries?: pulumi.Input<pulumi.Input<inputs.WanoptContentdeliverynetworkruleRulesSkipEntry>[]>;
    skipRuleMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WanoptContentdeliverynetworkruleRules resource.
 */
export interface WanoptContentdeliverynetworkruleRulesArgs {
    contentDeliveryNetworkRule: pulumi.Input<string>;
    contentId?: pulumi.Input<inputs.WanoptContentdeliverynetworkruleRulesContentId>;
    deviceName?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    matchEntries?: pulumi.Input<pulumi.Input<inputs.WanoptContentdeliverynetworkruleRulesMatchEntry>[]>;
    matchMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    skipEntries?: pulumi.Input<pulumi.Input<inputs.WanoptContentdeliverynetworkruleRulesSkipEntry>[]>;
    skipRuleMode?: pulumi.Input<string>;
}
