// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemCsf extends pulumi.CustomResource {
    /**
     * Get an existing SystemCsf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemCsfState, opts?: pulumi.CustomResourceOptions): SystemCsf {
        return new SystemCsf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemCsf:SystemCsf';

    /**
     * Returns true if the given object is an instance of SystemCsf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemCsf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemCsf.__pulumiType;
    }

    public readonly acceptAuthByCert!: pulumi.Output<string | undefined>;
    public readonly authorizationRequestType!: pulumi.Output<string | undefined>;
    public readonly certificates!: pulumi.Output<string[]>;
    public readonly configurationSync!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly downstreamAccess!: pulumi.Output<string | undefined>;
    public readonly downstreamAccprofiles!: pulumi.Output<string[]>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly fabricConnectors!: pulumi.Output<outputs.SystemCsfFabricConnector[] | undefined>;
    public readonly fabricDevices!: pulumi.Output<outputs.SystemCsfFabricDevice[] | undefined>;
    public readonly fabricObjectUnification!: pulumi.Output<string | undefined>;
    public readonly fabricWorkers!: pulumi.Output<number>;
    public readonly fileMgmt!: pulumi.Output<string>;
    public readonly fileQuota!: pulumi.Output<number | undefined>;
    public readonly fileQuotaWarning!: pulumi.Output<number>;
    public readonly fixedKeys!: pulumi.Output<string[]>;
    public readonly forticloudAccountEnforcement!: pulumi.Output<string>;
    public readonly groupName!: pulumi.Output<string | undefined>;
    public readonly groupPasswords!: pulumi.Output<string[]>;
    public readonly logUnification!: pulumi.Output<string>;
    public readonly managementIp!: pulumi.Output<string | undefined>;
    public readonly managementPort!: pulumi.Output<number | undefined>;
    public readonly samlConfigurationSync!: pulumi.Output<string | undefined>;
    public readonly sourceIp!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly trustedLists!: pulumi.Output<outputs.SystemCsfTrustedList[] | undefined>;
    public readonly uid!: pulumi.Output<string | undefined>;
    public readonly upstream!: pulumi.Output<string | undefined>;
    public readonly upstreamInterfaceSelectMethod!: pulumi.Output<string | undefined>;
    public readonly upstreamInterfaces!: pulumi.Output<string[]>;
    public readonly upstreamIp!: pulumi.Output<string | undefined>;
    public readonly upstreamPort!: pulumi.Output<number | undefined>;

    /**
     * Create a SystemCsf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemCsfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemCsfArgs | SystemCsfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemCsfState | undefined;
            resourceInputs["acceptAuthByCert"] = state ? state.acceptAuthByCert : undefined;
            resourceInputs["authorizationRequestType"] = state ? state.authorizationRequestType : undefined;
            resourceInputs["certificates"] = state ? state.certificates : undefined;
            resourceInputs["configurationSync"] = state ? state.configurationSync : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["downstreamAccess"] = state ? state.downstreamAccess : undefined;
            resourceInputs["downstreamAccprofiles"] = state ? state.downstreamAccprofiles : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["fabricConnectors"] = state ? state.fabricConnectors : undefined;
            resourceInputs["fabricDevices"] = state ? state.fabricDevices : undefined;
            resourceInputs["fabricObjectUnification"] = state ? state.fabricObjectUnification : undefined;
            resourceInputs["fabricWorkers"] = state ? state.fabricWorkers : undefined;
            resourceInputs["fileMgmt"] = state ? state.fileMgmt : undefined;
            resourceInputs["fileQuota"] = state ? state.fileQuota : undefined;
            resourceInputs["fileQuotaWarning"] = state ? state.fileQuotaWarning : undefined;
            resourceInputs["fixedKeys"] = state ? state.fixedKeys : undefined;
            resourceInputs["forticloudAccountEnforcement"] = state ? state.forticloudAccountEnforcement : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["groupPasswords"] = state ? state.groupPasswords : undefined;
            resourceInputs["logUnification"] = state ? state.logUnification : undefined;
            resourceInputs["managementIp"] = state ? state.managementIp : undefined;
            resourceInputs["managementPort"] = state ? state.managementPort : undefined;
            resourceInputs["samlConfigurationSync"] = state ? state.samlConfigurationSync : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["trustedLists"] = state ? state.trustedLists : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["upstream"] = state ? state.upstream : undefined;
            resourceInputs["upstreamInterfaceSelectMethod"] = state ? state.upstreamInterfaceSelectMethod : undefined;
            resourceInputs["upstreamInterfaces"] = state ? state.upstreamInterfaces : undefined;
            resourceInputs["upstreamIp"] = state ? state.upstreamIp : undefined;
            resourceInputs["upstreamPort"] = state ? state.upstreamPort : undefined;
        } else {
            const args = argsOrState as SystemCsfArgs | undefined;
            resourceInputs["acceptAuthByCert"] = args ? args.acceptAuthByCert : undefined;
            resourceInputs["authorizationRequestType"] = args ? args.authorizationRequestType : undefined;
            resourceInputs["certificates"] = args ? args.certificates : undefined;
            resourceInputs["configurationSync"] = args ? args.configurationSync : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["downstreamAccess"] = args ? args.downstreamAccess : undefined;
            resourceInputs["downstreamAccprofiles"] = args ? args.downstreamAccprofiles : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["fabricConnectors"] = args ? args.fabricConnectors : undefined;
            resourceInputs["fabricDevices"] = args ? args.fabricDevices : undefined;
            resourceInputs["fabricObjectUnification"] = args ? args.fabricObjectUnification : undefined;
            resourceInputs["fabricWorkers"] = args ? args.fabricWorkers : undefined;
            resourceInputs["fileMgmt"] = args ? args.fileMgmt : undefined;
            resourceInputs["fileQuota"] = args ? args.fileQuota : undefined;
            resourceInputs["fileQuotaWarning"] = args ? args.fileQuotaWarning : undefined;
            resourceInputs["fixedKeys"] = args?.fixedKeys ? pulumi.secret(args.fixedKeys) : undefined;
            resourceInputs["forticloudAccountEnforcement"] = args ? args.forticloudAccountEnforcement : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["groupPasswords"] = args?.groupPasswords ? pulumi.secret(args.groupPasswords) : undefined;
            resourceInputs["logUnification"] = args ? args.logUnification : undefined;
            resourceInputs["managementIp"] = args ? args.managementIp : undefined;
            resourceInputs["managementPort"] = args ? args.managementPort : undefined;
            resourceInputs["samlConfigurationSync"] = args ? args.samlConfigurationSync : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["trustedLists"] = args ? args.trustedLists : undefined;
            resourceInputs["uid"] = args ? args.uid : undefined;
            resourceInputs["upstream"] = args ? args.upstream : undefined;
            resourceInputs["upstreamInterfaceSelectMethod"] = args ? args.upstreamInterfaceSelectMethod : undefined;
            resourceInputs["upstreamInterfaces"] = args ? args.upstreamInterfaces : undefined;
            resourceInputs["upstreamIp"] = args ? args.upstreamIp : undefined;
            resourceInputs["upstreamPort"] = args ? args.upstreamPort : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["fixedKeys", "groupPasswords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemCsf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemCsf resources.
 */
export interface SystemCsfState {
    acceptAuthByCert?: pulumi.Input<string>;
    authorizationRequestType?: pulumi.Input<string>;
    certificates?: pulumi.Input<pulumi.Input<string>[]>;
    configurationSync?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    downstreamAccess?: pulumi.Input<string>;
    downstreamAccprofiles?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    fabricConnectors?: pulumi.Input<pulumi.Input<inputs.SystemCsfFabricConnector>[]>;
    fabricDevices?: pulumi.Input<pulumi.Input<inputs.SystemCsfFabricDevice>[]>;
    fabricObjectUnification?: pulumi.Input<string>;
    fabricWorkers?: pulumi.Input<number>;
    fileMgmt?: pulumi.Input<string>;
    fileQuota?: pulumi.Input<number>;
    fileQuotaWarning?: pulumi.Input<number>;
    fixedKeys?: pulumi.Input<pulumi.Input<string>[]>;
    forticloudAccountEnforcement?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    groupPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    logUnification?: pulumi.Input<string>;
    managementIp?: pulumi.Input<string>;
    managementPort?: pulumi.Input<number>;
    samlConfigurationSync?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    trustedLists?: pulumi.Input<pulumi.Input<inputs.SystemCsfTrustedList>[]>;
    uid?: pulumi.Input<string>;
    upstream?: pulumi.Input<string>;
    upstreamInterfaceSelectMethod?: pulumi.Input<string>;
    upstreamInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    upstreamIp?: pulumi.Input<string>;
    upstreamPort?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemCsf resource.
 */
export interface SystemCsfArgs {
    acceptAuthByCert?: pulumi.Input<string>;
    authorizationRequestType?: pulumi.Input<string>;
    certificates?: pulumi.Input<pulumi.Input<string>[]>;
    configurationSync?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    downstreamAccess?: pulumi.Input<string>;
    downstreamAccprofiles?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    fabricConnectors?: pulumi.Input<pulumi.Input<inputs.SystemCsfFabricConnector>[]>;
    fabricDevices?: pulumi.Input<pulumi.Input<inputs.SystemCsfFabricDevice>[]>;
    fabricObjectUnification?: pulumi.Input<string>;
    fabricWorkers?: pulumi.Input<number>;
    fileMgmt?: pulumi.Input<string>;
    fileQuota?: pulumi.Input<number>;
    fileQuotaWarning?: pulumi.Input<number>;
    fixedKeys?: pulumi.Input<pulumi.Input<string>[]>;
    forticloudAccountEnforcement?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    groupPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    logUnification?: pulumi.Input<string>;
    managementIp?: pulumi.Input<string>;
    managementPort?: pulumi.Input<number>;
    samlConfigurationSync?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    trustedLists?: pulumi.Input<pulumi.Input<inputs.SystemCsfTrustedList>[]>;
    uid?: pulumi.Input<string>;
    upstream?: pulumi.Input<string>;
    upstreamInterfaceSelectMethod?: pulumi.Input<string>;
    upstreamInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    upstreamIp?: pulumi.Input<string>;
    upstreamPort?: pulumi.Input<number>;
}
