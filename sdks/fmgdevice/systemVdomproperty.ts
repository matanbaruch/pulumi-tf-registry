// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemVdomproperty extends pulumi.CustomResource {
    /**
     * Get an existing SystemVdomproperty resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemVdompropertyState, opts?: pulumi.CustomResourceOptions): SystemVdomproperty {
        return new SystemVdomproperty(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemVdomproperty:SystemVdomproperty';

    /**
     * Returns true if the given object is an instance of SystemVdomproperty.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemVdomproperty {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemVdomproperty.__pulumiType;
    }

    public readonly customServices!: pulumi.Output<number[]>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly dialupTunnels!: pulumi.Output<number[]>;
    public readonly firewallAddresses!: pulumi.Output<number[]>;
    public readonly firewallAddrgrps!: pulumi.Output<number[]>;
    public readonly firewallPolicies!: pulumi.Output<number[]>;
    public readonly ipsecPhase1Interfaces!: pulumi.Output<number[]>;
    public readonly ipsecPhase1s!: pulumi.Output<number[]>;
    public readonly ipsecPhase2Interfaces!: pulumi.Output<number[]>;
    public readonly ipsecPhase2s!: pulumi.Output<number[]>;
    public readonly logDiskQuotas!: pulumi.Output<number[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly onetimeSchedules!: pulumi.Output<number[]>;
    public readonly proxies!: pulumi.Output<number[]>;
    public readonly recurringSchedules!: pulumi.Output<number[]>;
    public readonly serviceGroups!: pulumi.Output<number[]>;
    public readonly sessions!: pulumi.Output<number[]>;
    public readonly snmpIndex!: pulumi.Output<number>;
    public readonly sslvpns!: pulumi.Output<number[]>;
    public readonly userGroups!: pulumi.Output<number[]>;
    public readonly users!: pulumi.Output<number[]>;

    /**
     * Create a SystemVdomproperty resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemVdompropertyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemVdompropertyArgs | SystemVdompropertyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemVdompropertyState | undefined;
            resourceInputs["customServices"] = state ? state.customServices : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["dialupTunnels"] = state ? state.dialupTunnels : undefined;
            resourceInputs["firewallAddresses"] = state ? state.firewallAddresses : undefined;
            resourceInputs["firewallAddrgrps"] = state ? state.firewallAddrgrps : undefined;
            resourceInputs["firewallPolicies"] = state ? state.firewallPolicies : undefined;
            resourceInputs["ipsecPhase1Interfaces"] = state ? state.ipsecPhase1Interfaces : undefined;
            resourceInputs["ipsecPhase1s"] = state ? state.ipsecPhase1s : undefined;
            resourceInputs["ipsecPhase2Interfaces"] = state ? state.ipsecPhase2Interfaces : undefined;
            resourceInputs["ipsecPhase2s"] = state ? state.ipsecPhase2s : undefined;
            resourceInputs["logDiskQuotas"] = state ? state.logDiskQuotas : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onetimeSchedules"] = state ? state.onetimeSchedules : undefined;
            resourceInputs["proxies"] = state ? state.proxies : undefined;
            resourceInputs["recurringSchedules"] = state ? state.recurringSchedules : undefined;
            resourceInputs["serviceGroups"] = state ? state.serviceGroups : undefined;
            resourceInputs["sessions"] = state ? state.sessions : undefined;
            resourceInputs["snmpIndex"] = state ? state.snmpIndex : undefined;
            resourceInputs["sslvpns"] = state ? state.sslvpns : undefined;
            resourceInputs["userGroups"] = state ? state.userGroups : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
        } else {
            const args = argsOrState as SystemVdompropertyArgs | undefined;
            resourceInputs["customServices"] = args ? args.customServices : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["dialupTunnels"] = args ? args.dialupTunnels : undefined;
            resourceInputs["firewallAddresses"] = args ? args.firewallAddresses : undefined;
            resourceInputs["firewallAddrgrps"] = args ? args.firewallAddrgrps : undefined;
            resourceInputs["firewallPolicies"] = args ? args.firewallPolicies : undefined;
            resourceInputs["ipsecPhase1Interfaces"] = args ? args.ipsecPhase1Interfaces : undefined;
            resourceInputs["ipsecPhase1s"] = args ? args.ipsecPhase1s : undefined;
            resourceInputs["ipsecPhase2Interfaces"] = args ? args.ipsecPhase2Interfaces : undefined;
            resourceInputs["ipsecPhase2s"] = args ? args.ipsecPhase2s : undefined;
            resourceInputs["logDiskQuotas"] = args ? args.logDiskQuotas : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onetimeSchedules"] = args ? args.onetimeSchedules : undefined;
            resourceInputs["proxies"] = args ? args.proxies : undefined;
            resourceInputs["recurringSchedules"] = args ? args.recurringSchedules : undefined;
            resourceInputs["serviceGroups"] = args ? args.serviceGroups : undefined;
            resourceInputs["sessions"] = args ? args.sessions : undefined;
            resourceInputs["snmpIndex"] = args ? args.snmpIndex : undefined;
            resourceInputs["sslvpns"] = args ? args.sslvpns : undefined;
            resourceInputs["userGroups"] = args ? args.userGroups : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemVdomproperty.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemVdomproperty resources.
 */
export interface SystemVdompropertyState {
    customServices?: pulumi.Input<pulumi.Input<number>[]>;
    description?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    dialupTunnels?: pulumi.Input<pulumi.Input<number>[]>;
    firewallAddresses?: pulumi.Input<pulumi.Input<number>[]>;
    firewallAddrgrps?: pulumi.Input<pulumi.Input<number>[]>;
    firewallPolicies?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase1Interfaces?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase1s?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase2Interfaces?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase2s?: pulumi.Input<pulumi.Input<number>[]>;
    logDiskQuotas?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    onetimeSchedules?: pulumi.Input<pulumi.Input<number>[]>;
    proxies?: pulumi.Input<pulumi.Input<number>[]>;
    recurringSchedules?: pulumi.Input<pulumi.Input<number>[]>;
    serviceGroups?: pulumi.Input<pulumi.Input<number>[]>;
    sessions?: pulumi.Input<pulumi.Input<number>[]>;
    snmpIndex?: pulumi.Input<number>;
    sslvpns?: pulumi.Input<pulumi.Input<number>[]>;
    userGroups?: pulumi.Input<pulumi.Input<number>[]>;
    users?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a SystemVdomproperty resource.
 */
export interface SystemVdompropertyArgs {
    customServices?: pulumi.Input<pulumi.Input<number>[]>;
    description?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    dialupTunnels?: pulumi.Input<pulumi.Input<number>[]>;
    firewallAddresses?: pulumi.Input<pulumi.Input<number>[]>;
    firewallAddrgrps?: pulumi.Input<pulumi.Input<number>[]>;
    firewallPolicies?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase1Interfaces?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase1s?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase2Interfaces?: pulumi.Input<pulumi.Input<number>[]>;
    ipsecPhase2s?: pulumi.Input<pulumi.Input<number>[]>;
    logDiskQuotas?: pulumi.Input<pulumi.Input<number>[]>;
    name?: pulumi.Input<string>;
    onetimeSchedules?: pulumi.Input<pulumi.Input<number>[]>;
    proxies?: pulumi.Input<pulumi.Input<number>[]>;
    recurringSchedules?: pulumi.Input<pulumi.Input<number>[]>;
    serviceGroups?: pulumi.Input<pulumi.Input<number>[]>;
    sessions?: pulumi.Input<pulumi.Input<number>[]>;
    snmpIndex?: pulumi.Input<number>;
    sslvpns?: pulumi.Input<pulumi.Input<number>[]>;
    userGroups?: pulumi.Input<pulumi.Input<number>[]>;
    users?: pulumi.Input<pulumi.Input<number>[]>;
}
