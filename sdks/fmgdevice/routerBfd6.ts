// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterBfd6 extends pulumi.CustomResource {
    /**
     * Get an existing RouterBfd6 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBfd6State, opts?: pulumi.CustomResourceOptions): RouterBfd6 {
        return new RouterBfd6(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/routerBfd6:RouterBfd6';

    /**
     * Returns true if the given object is an instance of RouterBfd6.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBfd6 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBfd6.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly multihopTemplates!: pulumi.Output<outputs.RouterBfd6MultihopTemplate[] | undefined>;
    public readonly neighbors!: pulumi.Output<outputs.RouterBfd6Neighbor[] | undefined>;

    /**
     * Create a RouterBfd6 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterBfd6Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBfd6Args | RouterBfd6State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBfd6State | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["multihopTemplates"] = state ? state.multihopTemplates : undefined;
            resourceInputs["neighbors"] = state ? state.neighbors : undefined;
        } else {
            const args = argsOrState as RouterBfd6Args | undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["multihopTemplates"] = args ? args.multihopTemplates : undefined;
            resourceInputs["neighbors"] = args ? args.neighbors : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBfd6.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBfd6 resources.
 */
export interface RouterBfd6State {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    multihopTemplates?: pulumi.Input<pulumi.Input<inputs.RouterBfd6MultihopTemplate>[]>;
    neighbors?: pulumi.Input<pulumi.Input<inputs.RouterBfd6Neighbor>[]>;
}

/**
 * The set of arguments for constructing a RouterBfd6 resource.
 */
export interface RouterBfd6Args {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    multihopTemplates?: pulumi.Input<pulumi.Input<inputs.RouterBfd6MultihopTemplate>[]>;
    neighbors?: pulumi.Input<pulumi.Input<inputs.RouterBfd6Neighbor>[]>;
}
