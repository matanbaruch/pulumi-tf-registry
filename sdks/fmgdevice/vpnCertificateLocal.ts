// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VpnCertificateLocal extends pulumi.CustomResource {
    /**
     * Get an existing VpnCertificateLocal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnCertificateLocalState, opts?: pulumi.CustomResourceOptions): VpnCertificateLocal {
        return new VpnCertificateLocal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/vpnCertificateLocal:VpnCertificateLocal';

    /**
     * Returns true if the given object is an instance of VpnCertificateLocal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnCertificateLocal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnCertificateLocal.__pulumiType;
    }

    public readonly acmeCaUrl!: pulumi.Output<string>;
    public readonly acmeDomain!: pulumi.Output<string | undefined>;
    public readonly acmeEmail!: pulumi.Output<string | undefined>;
    public readonly acmeRenewWindow!: pulumi.Output<number>;
    public readonly acmeRsaKeySize!: pulumi.Output<number>;
    public readonly autoRegenerateDays!: pulumi.Output<number | undefined>;
    public readonly autoRegenerateDaysWarning!: pulumi.Output<number | undefined>;
    public readonly caIdentifier!: pulumi.Output<string | undefined>;
    public readonly certificate!: pulumi.Output<string | undefined>;
    public readonly cmpPath!: pulumi.Output<string | undefined>;
    public readonly cmpRegenerationMethod!: pulumi.Output<string>;
    public readonly cmpServer!: pulumi.Output<string | undefined>;
    public readonly cmpServerCerts!: pulumi.Output<string[]>;
    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly csr!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly enrollProtocol!: pulumi.Output<string>;
    public readonly estCaId!: pulumi.Output<string | undefined>;
    public readonly estClientCerts!: pulumi.Output<string[]>;
    public readonly estHttpPassword!: pulumi.Output<string | undefined>;
    public readonly estHttpUsername!: pulumi.Output<string | undefined>;
    public readonly estServer!: pulumi.Output<string | undefined>;
    public readonly estServerCerts!: pulumi.Output<string[]>;
    public readonly estSrpPassword!: pulumi.Output<string | undefined>;
    public readonly estSrpUsername!: pulumi.Output<string | undefined>;
    public readonly ikeLocalid!: pulumi.Output<string | undefined>;
    public readonly ikeLocalidType!: pulumi.Output<string>;
    public readonly lastUpdated!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameEncoding!: pulumi.Output<string>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly privateKey!: pulumi.Output<string | undefined>;
    public readonly privateKeyRetain!: pulumi.Output<string>;
    public readonly range!: pulumi.Output<string>;
    public readonly scepPasswords!: pulumi.Output<string[]>;
    public readonly scepUrl!: pulumi.Output<string | undefined>;
    public readonly source!: pulumi.Output<string>;
    public readonly sourceIp!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string | undefined>;
    public readonly tmpCertFile!: pulumi.Output<string | undefined>;

    /**
     * Create a VpnCertificateLocal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpnCertificateLocalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnCertificateLocalArgs | VpnCertificateLocalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnCertificateLocalState | undefined;
            resourceInputs["acmeCaUrl"] = state ? state.acmeCaUrl : undefined;
            resourceInputs["acmeDomain"] = state ? state.acmeDomain : undefined;
            resourceInputs["acmeEmail"] = state ? state.acmeEmail : undefined;
            resourceInputs["acmeRenewWindow"] = state ? state.acmeRenewWindow : undefined;
            resourceInputs["acmeRsaKeySize"] = state ? state.acmeRsaKeySize : undefined;
            resourceInputs["autoRegenerateDays"] = state ? state.autoRegenerateDays : undefined;
            resourceInputs["autoRegenerateDaysWarning"] = state ? state.autoRegenerateDaysWarning : undefined;
            resourceInputs["caIdentifier"] = state ? state.caIdentifier : undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["cmpPath"] = state ? state.cmpPath : undefined;
            resourceInputs["cmpRegenerationMethod"] = state ? state.cmpRegenerationMethod : undefined;
            resourceInputs["cmpServer"] = state ? state.cmpServer : undefined;
            resourceInputs["cmpServerCerts"] = state ? state.cmpServerCerts : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["csr"] = state ? state.csr : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["enrollProtocol"] = state ? state.enrollProtocol : undefined;
            resourceInputs["estCaId"] = state ? state.estCaId : undefined;
            resourceInputs["estClientCerts"] = state ? state.estClientCerts : undefined;
            resourceInputs["estHttpPassword"] = state ? state.estHttpPassword : undefined;
            resourceInputs["estHttpUsername"] = state ? state.estHttpUsername : undefined;
            resourceInputs["estServer"] = state ? state.estServer : undefined;
            resourceInputs["estServerCerts"] = state ? state.estServerCerts : undefined;
            resourceInputs["estSrpPassword"] = state ? state.estSrpPassword : undefined;
            resourceInputs["estSrpUsername"] = state ? state.estSrpUsername : undefined;
            resourceInputs["ikeLocalid"] = state ? state.ikeLocalid : undefined;
            resourceInputs["ikeLocalidType"] = state ? state.ikeLocalidType : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameEncoding"] = state ? state.nameEncoding : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["privateKeyRetain"] = state ? state.privateKeyRetain : undefined;
            resourceInputs["range"] = state ? state.range : undefined;
            resourceInputs["scepPasswords"] = state ? state.scepPasswords : undefined;
            resourceInputs["scepUrl"] = state ? state.scepUrl : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sourceIp"] = state ? state.sourceIp : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tmpCertFile"] = state ? state.tmpCertFile : undefined;
        } else {
            const args = argsOrState as VpnCertificateLocalArgs | undefined;
            resourceInputs["acmeCaUrl"] = args ? args.acmeCaUrl : undefined;
            resourceInputs["acmeDomain"] = args ? args.acmeDomain : undefined;
            resourceInputs["acmeEmail"] = args ? args.acmeEmail : undefined;
            resourceInputs["acmeRenewWindow"] = args ? args.acmeRenewWindow : undefined;
            resourceInputs["acmeRsaKeySize"] = args ? args.acmeRsaKeySize : undefined;
            resourceInputs["autoRegenerateDays"] = args ? args.autoRegenerateDays : undefined;
            resourceInputs["autoRegenerateDaysWarning"] = args ? args.autoRegenerateDaysWarning : undefined;
            resourceInputs["caIdentifier"] = args ? args.caIdentifier : undefined;
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["cmpPath"] = args ? args.cmpPath : undefined;
            resourceInputs["cmpRegenerationMethod"] = args ? args.cmpRegenerationMethod : undefined;
            resourceInputs["cmpServer"] = args ? args.cmpServer : undefined;
            resourceInputs["cmpServerCerts"] = args ? args.cmpServerCerts : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["csr"] = args ? args.csr : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["enrollProtocol"] = args ? args.enrollProtocol : undefined;
            resourceInputs["estCaId"] = args ? args.estCaId : undefined;
            resourceInputs["estClientCerts"] = args ? args.estClientCerts : undefined;
            resourceInputs["estHttpPassword"] = args ? args.estHttpPassword : undefined;
            resourceInputs["estHttpUsername"] = args ? args.estHttpUsername : undefined;
            resourceInputs["estServer"] = args ? args.estServer : undefined;
            resourceInputs["estServerCerts"] = args ? args.estServerCerts : undefined;
            resourceInputs["estSrpPassword"] = args ? args.estSrpPassword : undefined;
            resourceInputs["estSrpUsername"] = args ? args.estSrpUsername : undefined;
            resourceInputs["ikeLocalid"] = args ? args.ikeLocalid : undefined;
            resourceInputs["ikeLocalidType"] = args ? args.ikeLocalidType : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameEncoding"] = args ? args.nameEncoding : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["privateKeyRetain"] = args ? args.privateKeyRetain : undefined;
            resourceInputs["range"] = args ? args.range : undefined;
            resourceInputs["scepPasswords"] = args?.scepPasswords ? pulumi.secret(args.scepPasswords) : undefined;
            resourceInputs["scepUrl"] = args ? args.scepUrl : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sourceIp"] = args ? args.sourceIp : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["tmpCertFile"] = args ? args.tmpCertFile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwords", "scepPasswords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(VpnCertificateLocal.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpnCertificateLocal resources.
 */
export interface VpnCertificateLocalState {
    acmeCaUrl?: pulumi.Input<string>;
    acmeDomain?: pulumi.Input<string>;
    acmeEmail?: pulumi.Input<string>;
    acmeRenewWindow?: pulumi.Input<number>;
    acmeRsaKeySize?: pulumi.Input<number>;
    autoRegenerateDays?: pulumi.Input<number>;
    autoRegenerateDaysWarning?: pulumi.Input<number>;
    caIdentifier?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    cmpPath?: pulumi.Input<string>;
    cmpRegenerationMethod?: pulumi.Input<string>;
    cmpServer?: pulumi.Input<string>;
    cmpServerCerts?: pulumi.Input<pulumi.Input<string>[]>;
    comments?: pulumi.Input<string>;
    csr?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    enrollProtocol?: pulumi.Input<string>;
    estCaId?: pulumi.Input<string>;
    estClientCerts?: pulumi.Input<pulumi.Input<string>[]>;
    estHttpPassword?: pulumi.Input<string>;
    estHttpUsername?: pulumi.Input<string>;
    estServer?: pulumi.Input<string>;
    estServerCerts?: pulumi.Input<pulumi.Input<string>[]>;
    estSrpPassword?: pulumi.Input<string>;
    estSrpUsername?: pulumi.Input<string>;
    ikeLocalid?: pulumi.Input<string>;
    ikeLocalidType?: pulumi.Input<string>;
    lastUpdated?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nameEncoding?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    privateKey?: pulumi.Input<string>;
    privateKeyRetain?: pulumi.Input<string>;
    range?: pulumi.Input<string>;
    scepPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    scepUrl?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tmpCertFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnCertificateLocal resource.
 */
export interface VpnCertificateLocalArgs {
    acmeCaUrl?: pulumi.Input<string>;
    acmeDomain?: pulumi.Input<string>;
    acmeEmail?: pulumi.Input<string>;
    acmeRenewWindow?: pulumi.Input<number>;
    acmeRsaKeySize?: pulumi.Input<number>;
    autoRegenerateDays?: pulumi.Input<number>;
    autoRegenerateDaysWarning?: pulumi.Input<number>;
    caIdentifier?: pulumi.Input<string>;
    certificate?: pulumi.Input<string>;
    cmpPath?: pulumi.Input<string>;
    cmpRegenerationMethod?: pulumi.Input<string>;
    cmpServer?: pulumi.Input<string>;
    cmpServerCerts?: pulumi.Input<pulumi.Input<string>[]>;
    comments?: pulumi.Input<string>;
    csr?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    enrollProtocol?: pulumi.Input<string>;
    estCaId?: pulumi.Input<string>;
    estClientCerts?: pulumi.Input<pulumi.Input<string>[]>;
    estHttpPassword?: pulumi.Input<string>;
    estHttpUsername?: pulumi.Input<string>;
    estServer?: pulumi.Input<string>;
    estServerCerts?: pulumi.Input<pulumi.Input<string>[]>;
    estSrpPassword?: pulumi.Input<string>;
    estSrpUsername?: pulumi.Input<string>;
    ikeLocalid?: pulumi.Input<string>;
    ikeLocalidType?: pulumi.Input<string>;
    lastUpdated?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    nameEncoding?: pulumi.Input<string>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    privateKey?: pulumi.Input<string>;
    privateKeyRetain?: pulumi.Input<string>;
    range?: pulumi.Input<string>;
    scepPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    scepUrl?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    sourceIp?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tmpCertFile?: pulumi.Input<string>;
}
