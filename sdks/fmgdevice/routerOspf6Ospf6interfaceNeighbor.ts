// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RouterOspf6Ospf6interfaceNeighbor extends pulumi.CustomResource {
    /**
     * Get an existing RouterOspf6Ospf6interfaceNeighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterOspf6Ospf6interfaceNeighborState, opts?: pulumi.CustomResourceOptions): RouterOspf6Ospf6interfaceNeighbor {
        return new RouterOspf6Ospf6interfaceNeighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/routerOspf6Ospf6interfaceNeighbor:RouterOspf6Ospf6interfaceNeighbor';

    /**
     * Returns true if the given object is an instance of RouterOspf6Ospf6interfaceNeighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterOspf6Ospf6interfaceNeighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterOspf6Ospf6interfaceNeighbor.__pulumiType;
    }

    public readonly cost!: pulumi.Output<number | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly ip6!: pulumi.Output<string | undefined>;
    public readonly ospf6Interface!: pulumi.Output<string>;
    public readonly pollInterval!: pulumi.Output<number>;
    public readonly priority!: pulumi.Output<number>;

    /**
     * Create a RouterOspf6Ospf6interfaceNeighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterOspf6Ospf6interfaceNeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterOspf6Ospf6interfaceNeighborArgs | RouterOspf6Ospf6interfaceNeighborState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterOspf6Ospf6interfaceNeighborState | undefined;
            resourceInputs["cost"] = state ? state.cost : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["ip6"] = state ? state.ip6 : undefined;
            resourceInputs["ospf6Interface"] = state ? state.ospf6Interface : undefined;
            resourceInputs["pollInterval"] = state ? state.pollInterval : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
        } else {
            const args = argsOrState as RouterOspf6Ospf6interfaceNeighborArgs | undefined;
            if ((!args || args.ospf6Interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ospf6Interface'");
            }
            resourceInputs["cost"] = args ? args.cost : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["ip6"] = args ? args.ip6 : undefined;
            resourceInputs["ospf6Interface"] = args ? args.ospf6Interface : undefined;
            resourceInputs["pollInterval"] = args ? args.pollInterval : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterOspf6Ospf6interfaceNeighbor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterOspf6Ospf6interfaceNeighbor resources.
 */
export interface RouterOspf6Ospf6interfaceNeighborState {
    cost?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    ospf6Interface?: pulumi.Input<string>;
    pollInterval?: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RouterOspf6Ospf6interfaceNeighbor resource.
 */
export interface RouterOspf6Ospf6interfaceNeighborArgs {
    cost?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    ip6?: pulumi.Input<string>;
    ospf6Interface: pulumi.Input<string>;
    pollInterval?: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
}
