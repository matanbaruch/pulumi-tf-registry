// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemSdwanMembers extends pulumi.CustomResource {
    /**
     * Get an existing SystemSdwanMembers resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemSdwanMembersState, opts?: pulumi.CustomResourceOptions): SystemSdwanMembers {
        return new SystemSdwanMembers(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemSdwanMembers:SystemSdwanMembers';

    /**
     * Returns true if the given object is an instance of SystemSdwanMembers.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemSdwanMembers {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemSdwanMembers.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly cost!: pulumi.Output<number | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly gateway!: pulumi.Output<string>;
    public readonly gateway6!: pulumi.Output<string>;
    public readonly ingressSpilloverThreshold!: pulumi.Output<number | undefined>;
    public readonly interfaces!: pulumi.Output<string[]>;
    public readonly preferredSource!: pulumi.Output<string>;
    public readonly priority!: pulumi.Output<number>;
    public readonly priority6!: pulumi.Output<number>;
    public readonly seqNum!: pulumi.Output<number | undefined>;
    public readonly source!: pulumi.Output<string>;
    public readonly source6!: pulumi.Output<string>;
    public readonly spilloverThreshold!: pulumi.Output<number | undefined>;
    public readonly status!: pulumi.Output<string>;
    public readonly transportGroup!: pulumi.Output<number | undefined>;
    public readonly volumeRatio!: pulumi.Output<number | undefined>;
    public readonly weight!: pulumi.Output<number | undefined>;
    public readonly zones!: pulumi.Output<string[]>;

    /**
     * Create a SystemSdwanMembers resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemSdwanMembersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemSdwanMembersArgs | SystemSdwanMembersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemSdwanMembersState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["cost"] = state ? state.cost : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["gateway6"] = state ? state.gateway6 : undefined;
            resourceInputs["ingressSpilloverThreshold"] = state ? state.ingressSpilloverThreshold : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["preferredSource"] = state ? state.preferredSource : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["priority6"] = state ? state.priority6 : undefined;
            resourceInputs["seqNum"] = state ? state.seqNum : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["source6"] = state ? state.source6 : undefined;
            resourceInputs["spilloverThreshold"] = state ? state.spilloverThreshold : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["transportGroup"] = state ? state.transportGroup : undefined;
            resourceInputs["volumeRatio"] = state ? state.volumeRatio : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as SystemSdwanMembersArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["cost"] = args ? args.cost : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["gateway6"] = args ? args.gateway6 : undefined;
            resourceInputs["ingressSpilloverThreshold"] = args ? args.ingressSpilloverThreshold : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["preferredSource"] = args ? args.preferredSource : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["priority6"] = args ? args.priority6 : undefined;
            resourceInputs["seqNum"] = args ? args.seqNum : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["source6"] = args ? args.source6 : undefined;
            resourceInputs["spilloverThreshold"] = args ? args.spilloverThreshold : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["transportGroup"] = args ? args.transportGroup : undefined;
            resourceInputs["volumeRatio"] = args ? args.volumeRatio : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemSdwanMembers.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemSdwanMembers resources.
 */
export interface SystemSdwanMembersState {
    comment?: pulumi.Input<string>;
    cost?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    gateway6?: pulumi.Input<string>;
    ingressSpilloverThreshold?: pulumi.Input<number>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    preferredSource?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    priority6?: pulumi.Input<number>;
    seqNum?: pulumi.Input<number>;
    source?: pulumi.Input<string>;
    source6?: pulumi.Input<string>;
    spilloverThreshold?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    transportGroup?: pulumi.Input<number>;
    volumeRatio?: pulumi.Input<number>;
    weight?: pulumi.Input<number>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SystemSdwanMembers resource.
 */
export interface SystemSdwanMembersArgs {
    comment?: pulumi.Input<string>;
    cost?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    gateway6?: pulumi.Input<string>;
    ingressSpilloverThreshold?: pulumi.Input<number>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    preferredSource?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    priority6?: pulumi.Input<number>;
    seqNum?: pulumi.Input<number>;
    source?: pulumi.Input<string>;
    source6?: pulumi.Input<string>;
    spilloverThreshold?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    transportGroup?: pulumi.Input<number>;
    volumeRatio?: pulumi.Input<number>;
    weight?: pulumi.Input<number>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
