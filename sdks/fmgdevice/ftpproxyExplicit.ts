// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FtpproxyExplicit extends pulumi.CustomResource {
    /**
     * Get an existing FtpproxyExplicit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FtpproxyExplicitState, opts?: pulumi.CustomResourceOptions): FtpproxyExplicit {
        return new FtpproxyExplicit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/ftpproxyExplicit:FtpproxyExplicit';

    /**
     * Returns true if the given object is an instance of FtpproxyExplicit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FtpproxyExplicit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FtpproxyExplicit.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly incomingIp!: pulumi.Output<string | undefined>;
    public readonly incomingPorts!: pulumi.Output<string[]>;
    public readonly outgoingIps!: pulumi.Output<string[]>;
    public readonly secDefaultAction!: pulumi.Output<string | undefined>;
    public readonly serverDataMode!: pulumi.Output<string>;
    public readonly ssl!: pulumi.Output<string | undefined>;
    public readonly sslAlgorithm!: pulumi.Output<string | undefined>;
    public readonly sslCerts!: pulumi.Output<string[]>;
    public readonly sslDhBits!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a FtpproxyExplicit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FtpproxyExplicitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FtpproxyExplicitArgs | FtpproxyExplicitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FtpproxyExplicitState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["incomingIp"] = state ? state.incomingIp : undefined;
            resourceInputs["incomingPorts"] = state ? state.incomingPorts : undefined;
            resourceInputs["outgoingIps"] = state ? state.outgoingIps : undefined;
            resourceInputs["secDefaultAction"] = state ? state.secDefaultAction : undefined;
            resourceInputs["serverDataMode"] = state ? state.serverDataMode : undefined;
            resourceInputs["ssl"] = state ? state.ssl : undefined;
            resourceInputs["sslAlgorithm"] = state ? state.sslAlgorithm : undefined;
            resourceInputs["sslCerts"] = state ? state.sslCerts : undefined;
            resourceInputs["sslDhBits"] = state ? state.sslDhBits : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as FtpproxyExplicitArgs | undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["incomingIp"] = args ? args.incomingIp : undefined;
            resourceInputs["incomingPorts"] = args ? args.incomingPorts : undefined;
            resourceInputs["outgoingIps"] = args ? args.outgoingIps : undefined;
            resourceInputs["secDefaultAction"] = args ? args.secDefaultAction : undefined;
            resourceInputs["serverDataMode"] = args ? args.serverDataMode : undefined;
            resourceInputs["ssl"] = args ? args.ssl : undefined;
            resourceInputs["sslAlgorithm"] = args ? args.sslAlgorithm : undefined;
            resourceInputs["sslCerts"] = args ? args.sslCerts : undefined;
            resourceInputs["sslDhBits"] = args ? args.sslDhBits : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FtpproxyExplicit.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FtpproxyExplicit resources.
 */
export interface FtpproxyExplicitState {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    incomingIp?: pulumi.Input<string>;
    incomingPorts?: pulumi.Input<pulumi.Input<string>[]>;
    outgoingIps?: pulumi.Input<pulumi.Input<string>[]>;
    secDefaultAction?: pulumi.Input<string>;
    serverDataMode?: pulumi.Input<string>;
    ssl?: pulumi.Input<string>;
    sslAlgorithm?: pulumi.Input<string>;
    sslCerts?: pulumi.Input<pulumi.Input<string>[]>;
    sslDhBits?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FtpproxyExplicit resource.
 */
export interface FtpproxyExplicitArgs {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    incomingIp?: pulumi.Input<string>;
    incomingPorts?: pulumi.Input<pulumi.Input<string>[]>;
    outgoingIps?: pulumi.Input<pulumi.Input<string>[]>;
    secDefaultAction?: pulumi.Input<string>;
    serverDataMode?: pulumi.Input<string>;
    ssl?: pulumi.Input<string>;
    sslAlgorithm?: pulumi.Input<string>;
    sslCerts?: pulumi.Input<pulumi.Input<string>[]>;
    sslDhBits?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
