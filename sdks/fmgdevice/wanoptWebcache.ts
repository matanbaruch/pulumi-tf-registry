// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WanoptWebcache extends pulumi.CustomResource {
    /**
     * Get an existing WanoptWebcache resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WanoptWebcacheState, opts?: pulumi.CustomResourceOptions): WanoptWebcache {
        return new WanoptWebcache(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/wanoptWebcache:WanoptWebcache';

    /**
     * Returns true if the given object is an instance of WanoptWebcache.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WanoptWebcache {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WanoptWebcache.__pulumiType;
    }

    public readonly alwaysRevalidate!: pulumi.Output<string | undefined>;
    public readonly cacheByDefault!: pulumi.Output<string>;
    public readonly cacheCookie!: pulumi.Output<string>;
    public readonly cacheExpired!: pulumi.Output<string>;
    public readonly defaultTtl!: pulumi.Output<number>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly external!: pulumi.Output<string>;
    public readonly freshFactor!: pulumi.Output<number>;
    public readonly hostValidate!: pulumi.Output<string>;
    public readonly ignoreConditional!: pulumi.Output<string>;
    public readonly ignoreIeReload!: pulumi.Output<string>;
    public readonly ignoreIms!: pulumi.Output<string>;
    public readonly ignorePnc!: pulumi.Output<string>;
    public readonly maxObjectSize!: pulumi.Output<number>;
    public readonly maxTtl!: pulumi.Output<number>;
    public readonly minTtl!: pulumi.Output<number>;
    public readonly negRespTime!: pulumi.Output<number | undefined>;
    public readonly revalPnc!: pulumi.Output<string>;

    /**
     * Create a WanoptWebcache resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WanoptWebcacheArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WanoptWebcacheArgs | WanoptWebcacheState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WanoptWebcacheState | undefined;
            resourceInputs["alwaysRevalidate"] = state ? state.alwaysRevalidate : undefined;
            resourceInputs["cacheByDefault"] = state ? state.cacheByDefault : undefined;
            resourceInputs["cacheCookie"] = state ? state.cacheCookie : undefined;
            resourceInputs["cacheExpired"] = state ? state.cacheExpired : undefined;
            resourceInputs["defaultTtl"] = state ? state.defaultTtl : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["external"] = state ? state.external : undefined;
            resourceInputs["freshFactor"] = state ? state.freshFactor : undefined;
            resourceInputs["hostValidate"] = state ? state.hostValidate : undefined;
            resourceInputs["ignoreConditional"] = state ? state.ignoreConditional : undefined;
            resourceInputs["ignoreIeReload"] = state ? state.ignoreIeReload : undefined;
            resourceInputs["ignoreIms"] = state ? state.ignoreIms : undefined;
            resourceInputs["ignorePnc"] = state ? state.ignorePnc : undefined;
            resourceInputs["maxObjectSize"] = state ? state.maxObjectSize : undefined;
            resourceInputs["maxTtl"] = state ? state.maxTtl : undefined;
            resourceInputs["minTtl"] = state ? state.minTtl : undefined;
            resourceInputs["negRespTime"] = state ? state.negRespTime : undefined;
            resourceInputs["revalPnc"] = state ? state.revalPnc : undefined;
        } else {
            const args = argsOrState as WanoptWebcacheArgs | undefined;
            resourceInputs["alwaysRevalidate"] = args ? args.alwaysRevalidate : undefined;
            resourceInputs["cacheByDefault"] = args ? args.cacheByDefault : undefined;
            resourceInputs["cacheCookie"] = args ? args.cacheCookie : undefined;
            resourceInputs["cacheExpired"] = args ? args.cacheExpired : undefined;
            resourceInputs["defaultTtl"] = args ? args.defaultTtl : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["external"] = args ? args.external : undefined;
            resourceInputs["freshFactor"] = args ? args.freshFactor : undefined;
            resourceInputs["hostValidate"] = args ? args.hostValidate : undefined;
            resourceInputs["ignoreConditional"] = args ? args.ignoreConditional : undefined;
            resourceInputs["ignoreIeReload"] = args ? args.ignoreIeReload : undefined;
            resourceInputs["ignoreIms"] = args ? args.ignoreIms : undefined;
            resourceInputs["ignorePnc"] = args ? args.ignorePnc : undefined;
            resourceInputs["maxObjectSize"] = args ? args.maxObjectSize : undefined;
            resourceInputs["maxTtl"] = args ? args.maxTtl : undefined;
            resourceInputs["minTtl"] = args ? args.minTtl : undefined;
            resourceInputs["negRespTime"] = args ? args.negRespTime : undefined;
            resourceInputs["revalPnc"] = args ? args.revalPnc : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WanoptWebcache.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WanoptWebcache resources.
 */
export interface WanoptWebcacheState {
    alwaysRevalidate?: pulumi.Input<string>;
    cacheByDefault?: pulumi.Input<string>;
    cacheCookie?: pulumi.Input<string>;
    cacheExpired?: pulumi.Input<string>;
    defaultTtl?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    external?: pulumi.Input<string>;
    freshFactor?: pulumi.Input<number>;
    hostValidate?: pulumi.Input<string>;
    ignoreConditional?: pulumi.Input<string>;
    ignoreIeReload?: pulumi.Input<string>;
    ignoreIms?: pulumi.Input<string>;
    ignorePnc?: pulumi.Input<string>;
    maxObjectSize?: pulumi.Input<number>;
    maxTtl?: pulumi.Input<number>;
    minTtl?: pulumi.Input<number>;
    negRespTime?: pulumi.Input<number>;
    revalPnc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WanoptWebcache resource.
 */
export interface WanoptWebcacheArgs {
    alwaysRevalidate?: pulumi.Input<string>;
    cacheByDefault?: pulumi.Input<string>;
    cacheCookie?: pulumi.Input<string>;
    cacheExpired?: pulumi.Input<string>;
    defaultTtl?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    external?: pulumi.Input<string>;
    freshFactor?: pulumi.Input<number>;
    hostValidate?: pulumi.Input<string>;
    ignoreConditional?: pulumi.Input<string>;
    ignoreIeReload?: pulumi.Input<string>;
    ignoreIms?: pulumi.Input<string>;
    ignorePnc?: pulumi.Input<string>;
    maxObjectSize?: pulumi.Input<number>;
    maxTtl?: pulumi.Input<number>;
    minTtl?: pulumi.Input<number>;
    negRespTime?: pulumi.Input<number>;
    revalPnc?: pulumi.Input<string>;
}
