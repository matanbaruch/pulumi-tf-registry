// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DlpSettings extends pulumi.CustomResource {
    /**
     * Get an existing DlpSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DlpSettingsState, opts?: pulumi.CustomResourceOptions): DlpSettings {
        return new DlpSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/dlpSettings:DlpSettings';

    /**
     * Returns true if the given object is an instance of DlpSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DlpSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DlpSettings.__pulumiType;
    }

    public readonly cacheMemPercent!: pulumi.Output<number>;
    public readonly chunkSize!: pulumi.Output<number>;
    public readonly dbMode!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly size!: pulumi.Output<number>;
    public readonly storageDevice!: pulumi.Output<string | undefined>;

    /**
     * Create a DlpSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DlpSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DlpSettingsArgs | DlpSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DlpSettingsState | undefined;
            resourceInputs["cacheMemPercent"] = state ? state.cacheMemPercent : undefined;
            resourceInputs["chunkSize"] = state ? state.chunkSize : undefined;
            resourceInputs["dbMode"] = state ? state.dbMode : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["storageDevice"] = state ? state.storageDevice : undefined;
        } else {
            const args = argsOrState as DlpSettingsArgs | undefined;
            resourceInputs["cacheMemPercent"] = args ? args.cacheMemPercent : undefined;
            resourceInputs["chunkSize"] = args ? args.chunkSize : undefined;
            resourceInputs["dbMode"] = args ? args.dbMode : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["storageDevice"] = args ? args.storageDevice : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DlpSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DlpSettings resources.
 */
export interface DlpSettingsState {
    cacheMemPercent?: pulumi.Input<number>;
    chunkSize?: pulumi.Input<number>;
    dbMode?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    storageDevice?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DlpSettings resource.
 */
export interface DlpSettingsArgs {
    cacheMemPercent?: pulumi.Input<number>;
    chunkSize?: pulumi.Input<number>;
    dbMode?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    storageDevice?: pulumi.Input<string>;
}
