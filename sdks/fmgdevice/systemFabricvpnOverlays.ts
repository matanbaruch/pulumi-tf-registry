// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemFabricvpnOverlays extends pulumi.CustomResource {
    /**
     * Get an existing SystemFabricvpnOverlays resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemFabricvpnOverlaysState, opts?: pulumi.CustomResourceOptions): SystemFabricvpnOverlays {
        return new SystemFabricvpnOverlays(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemFabricvpnOverlays:SystemFabricvpnOverlays';

    /**
     * Returns true if the given object is an instance of SystemFabricvpnOverlays.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemFabricvpnOverlays {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemFabricvpnOverlays.__pulumiType;
    }

    public readonly bgpNeighborGroups!: pulumi.Output<string[]>;
    public readonly bgpNeighborRanges!: pulumi.Output<string[]>;
    public readonly bgpNeighbors!: pulumi.Output<string[]>;
    public readonly bgpNetworks!: pulumi.Output<string[]>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly interfaces!: pulumi.Output<string[]>;
    public readonly ipsecPhase1s!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly overlayPolicies!: pulumi.Output<string[]>;
    public readonly overlayTunnelBlocks!: pulumi.Output<string[]>;
    public readonly remoteGw!: pulumi.Output<string>;
    public readonly routePolicies!: pulumi.Output<string[]>;
    public readonly sdwanMembers!: pulumi.Output<string[]>;

    /**
     * Create a SystemFabricvpnOverlays resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemFabricvpnOverlaysArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemFabricvpnOverlaysArgs | SystemFabricvpnOverlaysState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemFabricvpnOverlaysState | undefined;
            resourceInputs["bgpNeighborGroups"] = state ? state.bgpNeighborGroups : undefined;
            resourceInputs["bgpNeighborRanges"] = state ? state.bgpNeighborRanges : undefined;
            resourceInputs["bgpNeighbors"] = state ? state.bgpNeighbors : undefined;
            resourceInputs["bgpNetworks"] = state ? state.bgpNetworks : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["ipsecPhase1s"] = state ? state.ipsecPhase1s : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overlayPolicies"] = state ? state.overlayPolicies : undefined;
            resourceInputs["overlayTunnelBlocks"] = state ? state.overlayTunnelBlocks : undefined;
            resourceInputs["remoteGw"] = state ? state.remoteGw : undefined;
            resourceInputs["routePolicies"] = state ? state.routePolicies : undefined;
            resourceInputs["sdwanMembers"] = state ? state.sdwanMembers : undefined;
        } else {
            const args = argsOrState as SystemFabricvpnOverlaysArgs | undefined;
            resourceInputs["bgpNeighborGroups"] = args ? args.bgpNeighborGroups : undefined;
            resourceInputs["bgpNeighborRanges"] = args ? args.bgpNeighborRanges : undefined;
            resourceInputs["bgpNeighbors"] = args ? args.bgpNeighbors : undefined;
            resourceInputs["bgpNetworks"] = args ? args.bgpNetworks : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["ipsecPhase1s"] = args ? args.ipsecPhase1s : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overlayPolicies"] = args ? args.overlayPolicies : undefined;
            resourceInputs["overlayTunnelBlocks"] = args ? args.overlayTunnelBlocks : undefined;
            resourceInputs["remoteGw"] = args ? args.remoteGw : undefined;
            resourceInputs["routePolicies"] = args ? args.routePolicies : undefined;
            resourceInputs["sdwanMembers"] = args ? args.sdwanMembers : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemFabricvpnOverlays.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemFabricvpnOverlays resources.
 */
export interface SystemFabricvpnOverlaysState {
    bgpNeighborGroups?: pulumi.Input<pulumi.Input<string>[]>;
    bgpNeighborRanges?: pulumi.Input<pulumi.Input<string>[]>;
    bgpNeighbors?: pulumi.Input<pulumi.Input<string>[]>;
    bgpNetworks?: pulumi.Input<pulumi.Input<string>[]>;
    deviceName?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    ipsecPhase1s?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    overlayPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    overlayTunnelBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    remoteGw?: pulumi.Input<string>;
    routePolicies?: pulumi.Input<pulumi.Input<string>[]>;
    sdwanMembers?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SystemFabricvpnOverlays resource.
 */
export interface SystemFabricvpnOverlaysArgs {
    bgpNeighborGroups?: pulumi.Input<pulumi.Input<string>[]>;
    bgpNeighborRanges?: pulumi.Input<pulumi.Input<string>[]>;
    bgpNeighbors?: pulumi.Input<pulumi.Input<string>[]>;
    bgpNetworks?: pulumi.Input<pulumi.Input<string>[]>;
    deviceName?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    ipsecPhase1s?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    overlayPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    overlayTunnelBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    remoteGw?: pulumi.Input<string>;
    routePolicies?: pulumi.Input<pulumi.Input<string>[]>;
    sdwanMembers?: pulumi.Input<pulumi.Input<string>[]>;
}
