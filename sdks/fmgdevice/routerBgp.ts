// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterBgp extends pulumi.CustomResource {
    /**
     * Get an existing RouterBgp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterBgpState, opts?: pulumi.CustomResourceOptions): RouterBgp {
        return new RouterBgp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/routerBgp:RouterBgp';

    /**
     * Returns true if the given object is an instance of RouterBgp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterBgp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterBgp.__pulumiType;
    }

    public readonly additionalPath!: pulumi.Output<string>;
    public readonly additionalPath6!: pulumi.Output<string>;
    public readonly additionalPathSelect!: pulumi.Output<number>;
    public readonly additionalPathSelect6!: pulumi.Output<number>;
    public readonly additionalPathSelectVpnv4!: pulumi.Output<number>;
    public readonly additionalPathSelectVpnv6!: pulumi.Output<number>;
    public readonly additionalPathVpnv4!: pulumi.Output<string>;
    public readonly additionalPathVpnv6!: pulumi.Output<string>;
    public readonly adminDistances!: pulumi.Output<outputs.RouterBgpAdminDistance[] | undefined>;
    public readonly aggregateAddress6s!: pulumi.Output<outputs.RouterBgpAggregateAddress6[] | undefined>;
    public readonly aggregateAddresses!: pulumi.Output<outputs.RouterBgpAggregateAddress[] | undefined>;
    public readonly alwaysCompareMed!: pulumi.Output<string>;
    public readonly as!: pulumi.Output<number>;
    public readonly bestpathAsPathIgnore!: pulumi.Output<string>;
    public readonly bestpathCmpConfedAspath!: pulumi.Output<string>;
    public readonly bestpathCmpRouterid!: pulumi.Output<string>;
    public readonly bestpathMedConfed!: pulumi.Output<string>;
    public readonly bestpathMedMissingAsWorst!: pulumi.Output<string>;
    public readonly clientToClientReflection!: pulumi.Output<string>;
    public readonly clusterId!: pulumi.Output<string>;
    public readonly confederationIdentifier!: pulumi.Output<number | undefined>;
    public readonly confederationPeers!: pulumi.Output<string[]>;
    public readonly crossFamilyConditionalAdv!: pulumi.Output<string>;
    public readonly dampening!: pulumi.Output<string>;
    public readonly dampeningMaxSuppressTime!: pulumi.Output<number>;
    public readonly dampeningReachabilityHalfLife!: pulumi.Output<number>;
    public readonly dampeningReuse!: pulumi.Output<number>;
    public readonly dampeningRouteMaps!: pulumi.Output<string[]>;
    public readonly dampeningSuppress!: pulumi.Output<number>;
    public readonly dampeningUnreachabilityHalfLife!: pulumi.Output<number>;
    public readonly defaultLocalPreference!: pulumi.Output<number>;
    public readonly deterministicMed!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly distanceExternal!: pulumi.Output<number>;
    public readonly distanceInternal!: pulumi.Output<number>;
    public readonly distanceLocal!: pulumi.Output<number>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly ebgpMultipath!: pulumi.Output<string>;
    public readonly enforceFirstAs!: pulumi.Output<string>;
    public readonly fastExternalFailover!: pulumi.Output<string>;
    public readonly gracefulEndOnTimer!: pulumi.Output<string>;
    public readonly gracefulRestart!: pulumi.Output<string>;
    public readonly gracefulRestartTime!: pulumi.Output<number | undefined>;
    public readonly gracefulStalepathTime!: pulumi.Output<number | undefined>;
    public readonly gracefulUpdateDelay!: pulumi.Output<number | undefined>;
    public readonly holdtimeTimer!: pulumi.Output<number>;
    public readonly ibgpMultipath!: pulumi.Output<string>;
    public readonly ignoreOptionalCapability!: pulumi.Output<string>;
    public readonly keepaliveTimer!: pulumi.Output<number>;
    public readonly logNeighbourChanges!: pulumi.Output<string>;
    public readonly multipathRecursiveDistance!: pulumi.Output<string>;
    public readonly neighborGroups!: pulumi.Output<outputs.RouterBgpNeighborGroup[] | undefined>;
    public readonly neighborRange6s!: pulumi.Output<outputs.RouterBgpNeighborRange6[] | undefined>;
    public readonly neighborRanges!: pulumi.Output<outputs.RouterBgpNeighborRange[] | undefined>;
    public readonly neighbors!: pulumi.Output<outputs.RouterBgpNeighbor[] | undefined>;
    public readonly network6s!: pulumi.Output<outputs.RouterBgpNetwork6[] | undefined>;
    public readonly networkImportCheck!: pulumi.Output<string>;
    public readonly networks!: pulumi.Output<outputs.RouterBgpNetwork[] | undefined>;
    public readonly recursiveInheritPriority!: pulumi.Output<string>;
    public readonly recursiveNextHop!: pulumi.Output<string>;
    public readonly redistribute6s!: pulumi.Output<outputs.RouterBgpRedistribute6[] | undefined>;
    public readonly redistributes!: pulumi.Output<outputs.RouterBgpRedistribute[] | undefined>;
    public readonly routerId!: pulumi.Output<string | undefined>;
    public readonly scanTime!: pulumi.Output<number>;
    public readonly synchronization!: pulumi.Output<string>;
    public readonly tagResolveMode!: pulumi.Output<string>;
    public readonly vrf6s!: pulumi.Output<outputs.RouterBgpVrf6[] | undefined>;
    public readonly vrfLeak6s!: pulumi.Output<outputs.RouterBgpVrfLeak6[] | undefined>;
    public readonly vrfLeaks!: pulumi.Output<outputs.RouterBgpVrfLeak[] | undefined>;
    public readonly vrves!: pulumi.Output<outputs.RouterBgpVrf[] | undefined>;

    /**
     * Create a RouterBgp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RouterBgpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterBgpArgs | RouterBgpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterBgpState | undefined;
            resourceInputs["additionalPath"] = state ? state.additionalPath : undefined;
            resourceInputs["additionalPath6"] = state ? state.additionalPath6 : undefined;
            resourceInputs["additionalPathSelect"] = state ? state.additionalPathSelect : undefined;
            resourceInputs["additionalPathSelect6"] = state ? state.additionalPathSelect6 : undefined;
            resourceInputs["additionalPathSelectVpnv4"] = state ? state.additionalPathSelectVpnv4 : undefined;
            resourceInputs["additionalPathSelectVpnv6"] = state ? state.additionalPathSelectVpnv6 : undefined;
            resourceInputs["additionalPathVpnv4"] = state ? state.additionalPathVpnv4 : undefined;
            resourceInputs["additionalPathVpnv6"] = state ? state.additionalPathVpnv6 : undefined;
            resourceInputs["adminDistances"] = state ? state.adminDistances : undefined;
            resourceInputs["aggregateAddress6s"] = state ? state.aggregateAddress6s : undefined;
            resourceInputs["aggregateAddresses"] = state ? state.aggregateAddresses : undefined;
            resourceInputs["alwaysCompareMed"] = state ? state.alwaysCompareMed : undefined;
            resourceInputs["as"] = state ? state.as : undefined;
            resourceInputs["bestpathAsPathIgnore"] = state ? state.bestpathAsPathIgnore : undefined;
            resourceInputs["bestpathCmpConfedAspath"] = state ? state.bestpathCmpConfedAspath : undefined;
            resourceInputs["bestpathCmpRouterid"] = state ? state.bestpathCmpRouterid : undefined;
            resourceInputs["bestpathMedConfed"] = state ? state.bestpathMedConfed : undefined;
            resourceInputs["bestpathMedMissingAsWorst"] = state ? state.bestpathMedMissingAsWorst : undefined;
            resourceInputs["clientToClientReflection"] = state ? state.clientToClientReflection : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["confederationIdentifier"] = state ? state.confederationIdentifier : undefined;
            resourceInputs["confederationPeers"] = state ? state.confederationPeers : undefined;
            resourceInputs["crossFamilyConditionalAdv"] = state ? state.crossFamilyConditionalAdv : undefined;
            resourceInputs["dampening"] = state ? state.dampening : undefined;
            resourceInputs["dampeningMaxSuppressTime"] = state ? state.dampeningMaxSuppressTime : undefined;
            resourceInputs["dampeningReachabilityHalfLife"] = state ? state.dampeningReachabilityHalfLife : undefined;
            resourceInputs["dampeningReuse"] = state ? state.dampeningReuse : undefined;
            resourceInputs["dampeningRouteMaps"] = state ? state.dampeningRouteMaps : undefined;
            resourceInputs["dampeningSuppress"] = state ? state.dampeningSuppress : undefined;
            resourceInputs["dampeningUnreachabilityHalfLife"] = state ? state.dampeningUnreachabilityHalfLife : undefined;
            resourceInputs["defaultLocalPreference"] = state ? state.defaultLocalPreference : undefined;
            resourceInputs["deterministicMed"] = state ? state.deterministicMed : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["distanceExternal"] = state ? state.distanceExternal : undefined;
            resourceInputs["distanceInternal"] = state ? state.distanceInternal : undefined;
            resourceInputs["distanceLocal"] = state ? state.distanceLocal : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["ebgpMultipath"] = state ? state.ebgpMultipath : undefined;
            resourceInputs["enforceFirstAs"] = state ? state.enforceFirstAs : undefined;
            resourceInputs["fastExternalFailover"] = state ? state.fastExternalFailover : undefined;
            resourceInputs["gracefulEndOnTimer"] = state ? state.gracefulEndOnTimer : undefined;
            resourceInputs["gracefulRestart"] = state ? state.gracefulRestart : undefined;
            resourceInputs["gracefulRestartTime"] = state ? state.gracefulRestartTime : undefined;
            resourceInputs["gracefulStalepathTime"] = state ? state.gracefulStalepathTime : undefined;
            resourceInputs["gracefulUpdateDelay"] = state ? state.gracefulUpdateDelay : undefined;
            resourceInputs["holdtimeTimer"] = state ? state.holdtimeTimer : undefined;
            resourceInputs["ibgpMultipath"] = state ? state.ibgpMultipath : undefined;
            resourceInputs["ignoreOptionalCapability"] = state ? state.ignoreOptionalCapability : undefined;
            resourceInputs["keepaliveTimer"] = state ? state.keepaliveTimer : undefined;
            resourceInputs["logNeighbourChanges"] = state ? state.logNeighbourChanges : undefined;
            resourceInputs["multipathRecursiveDistance"] = state ? state.multipathRecursiveDistance : undefined;
            resourceInputs["neighborGroups"] = state ? state.neighborGroups : undefined;
            resourceInputs["neighborRange6s"] = state ? state.neighborRange6s : undefined;
            resourceInputs["neighborRanges"] = state ? state.neighborRanges : undefined;
            resourceInputs["neighbors"] = state ? state.neighbors : undefined;
            resourceInputs["network6s"] = state ? state.network6s : undefined;
            resourceInputs["networkImportCheck"] = state ? state.networkImportCheck : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["recursiveInheritPriority"] = state ? state.recursiveInheritPriority : undefined;
            resourceInputs["recursiveNextHop"] = state ? state.recursiveNextHop : undefined;
            resourceInputs["redistribute6s"] = state ? state.redistribute6s : undefined;
            resourceInputs["redistributes"] = state ? state.redistributes : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
            resourceInputs["scanTime"] = state ? state.scanTime : undefined;
            resourceInputs["synchronization"] = state ? state.synchronization : undefined;
            resourceInputs["tagResolveMode"] = state ? state.tagResolveMode : undefined;
            resourceInputs["vrf6s"] = state ? state.vrf6s : undefined;
            resourceInputs["vrfLeak6s"] = state ? state.vrfLeak6s : undefined;
            resourceInputs["vrfLeaks"] = state ? state.vrfLeaks : undefined;
            resourceInputs["vrves"] = state ? state.vrves : undefined;
        } else {
            const args = argsOrState as RouterBgpArgs | undefined;
            resourceInputs["additionalPath"] = args ? args.additionalPath : undefined;
            resourceInputs["additionalPath6"] = args ? args.additionalPath6 : undefined;
            resourceInputs["additionalPathSelect"] = args ? args.additionalPathSelect : undefined;
            resourceInputs["additionalPathSelect6"] = args ? args.additionalPathSelect6 : undefined;
            resourceInputs["additionalPathSelectVpnv4"] = args ? args.additionalPathSelectVpnv4 : undefined;
            resourceInputs["additionalPathSelectVpnv6"] = args ? args.additionalPathSelectVpnv6 : undefined;
            resourceInputs["additionalPathVpnv4"] = args ? args.additionalPathVpnv4 : undefined;
            resourceInputs["additionalPathVpnv6"] = args ? args.additionalPathVpnv6 : undefined;
            resourceInputs["adminDistances"] = args ? args.adminDistances : undefined;
            resourceInputs["aggregateAddress6s"] = args ? args.aggregateAddress6s : undefined;
            resourceInputs["aggregateAddresses"] = args ? args.aggregateAddresses : undefined;
            resourceInputs["alwaysCompareMed"] = args ? args.alwaysCompareMed : undefined;
            resourceInputs["as"] = args ? args.as : undefined;
            resourceInputs["bestpathAsPathIgnore"] = args ? args.bestpathAsPathIgnore : undefined;
            resourceInputs["bestpathCmpConfedAspath"] = args ? args.bestpathCmpConfedAspath : undefined;
            resourceInputs["bestpathCmpRouterid"] = args ? args.bestpathCmpRouterid : undefined;
            resourceInputs["bestpathMedConfed"] = args ? args.bestpathMedConfed : undefined;
            resourceInputs["bestpathMedMissingAsWorst"] = args ? args.bestpathMedMissingAsWorst : undefined;
            resourceInputs["clientToClientReflection"] = args ? args.clientToClientReflection : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["confederationIdentifier"] = args ? args.confederationIdentifier : undefined;
            resourceInputs["confederationPeers"] = args ? args.confederationPeers : undefined;
            resourceInputs["crossFamilyConditionalAdv"] = args ? args.crossFamilyConditionalAdv : undefined;
            resourceInputs["dampening"] = args ? args.dampening : undefined;
            resourceInputs["dampeningMaxSuppressTime"] = args ? args.dampeningMaxSuppressTime : undefined;
            resourceInputs["dampeningReachabilityHalfLife"] = args ? args.dampeningReachabilityHalfLife : undefined;
            resourceInputs["dampeningReuse"] = args ? args.dampeningReuse : undefined;
            resourceInputs["dampeningRouteMaps"] = args ? args.dampeningRouteMaps : undefined;
            resourceInputs["dampeningSuppress"] = args ? args.dampeningSuppress : undefined;
            resourceInputs["dampeningUnreachabilityHalfLife"] = args ? args.dampeningUnreachabilityHalfLife : undefined;
            resourceInputs["defaultLocalPreference"] = args ? args.defaultLocalPreference : undefined;
            resourceInputs["deterministicMed"] = args ? args.deterministicMed : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["distanceExternal"] = args ? args.distanceExternal : undefined;
            resourceInputs["distanceInternal"] = args ? args.distanceInternal : undefined;
            resourceInputs["distanceLocal"] = args ? args.distanceLocal : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["ebgpMultipath"] = args ? args.ebgpMultipath : undefined;
            resourceInputs["enforceFirstAs"] = args ? args.enforceFirstAs : undefined;
            resourceInputs["fastExternalFailover"] = args ? args.fastExternalFailover : undefined;
            resourceInputs["gracefulEndOnTimer"] = args ? args.gracefulEndOnTimer : undefined;
            resourceInputs["gracefulRestart"] = args ? args.gracefulRestart : undefined;
            resourceInputs["gracefulRestartTime"] = args ? args.gracefulRestartTime : undefined;
            resourceInputs["gracefulStalepathTime"] = args ? args.gracefulStalepathTime : undefined;
            resourceInputs["gracefulUpdateDelay"] = args ? args.gracefulUpdateDelay : undefined;
            resourceInputs["holdtimeTimer"] = args ? args.holdtimeTimer : undefined;
            resourceInputs["ibgpMultipath"] = args ? args.ibgpMultipath : undefined;
            resourceInputs["ignoreOptionalCapability"] = args ? args.ignoreOptionalCapability : undefined;
            resourceInputs["keepaliveTimer"] = args ? args.keepaliveTimer : undefined;
            resourceInputs["logNeighbourChanges"] = args ? args.logNeighbourChanges : undefined;
            resourceInputs["multipathRecursiveDistance"] = args ? args.multipathRecursiveDistance : undefined;
            resourceInputs["neighborGroups"] = args ? args.neighborGroups : undefined;
            resourceInputs["neighborRange6s"] = args ? args.neighborRange6s : undefined;
            resourceInputs["neighborRanges"] = args ? args.neighborRanges : undefined;
            resourceInputs["neighbors"] = args ? args.neighbors : undefined;
            resourceInputs["network6s"] = args ? args.network6s : undefined;
            resourceInputs["networkImportCheck"] = args ? args.networkImportCheck : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["recursiveInheritPriority"] = args ? args.recursiveInheritPriority : undefined;
            resourceInputs["recursiveNextHop"] = args ? args.recursiveNextHop : undefined;
            resourceInputs["redistribute6s"] = args ? args.redistribute6s : undefined;
            resourceInputs["redistributes"] = args ? args.redistributes : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
            resourceInputs["scanTime"] = args ? args.scanTime : undefined;
            resourceInputs["synchronization"] = args ? args.synchronization : undefined;
            resourceInputs["tagResolveMode"] = args ? args.tagResolveMode : undefined;
            resourceInputs["vrf6s"] = args ? args.vrf6s : undefined;
            resourceInputs["vrfLeak6s"] = args ? args.vrfLeak6s : undefined;
            resourceInputs["vrfLeaks"] = args ? args.vrfLeaks : undefined;
            resourceInputs["vrves"] = args ? args.vrves : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouterBgp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterBgp resources.
 */
export interface RouterBgpState {
    additionalPath?: pulumi.Input<string>;
    additionalPath6?: pulumi.Input<string>;
    additionalPathSelect?: pulumi.Input<number>;
    additionalPathSelect6?: pulumi.Input<number>;
    additionalPathSelectVpnv4?: pulumi.Input<number>;
    additionalPathSelectVpnv6?: pulumi.Input<number>;
    additionalPathVpnv4?: pulumi.Input<string>;
    additionalPathVpnv6?: pulumi.Input<string>;
    adminDistances?: pulumi.Input<pulumi.Input<inputs.RouterBgpAdminDistance>[]>;
    aggregateAddress6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpAggregateAddress6>[]>;
    aggregateAddresses?: pulumi.Input<pulumi.Input<inputs.RouterBgpAggregateAddress>[]>;
    alwaysCompareMed?: pulumi.Input<string>;
    as?: pulumi.Input<number>;
    bestpathAsPathIgnore?: pulumi.Input<string>;
    bestpathCmpConfedAspath?: pulumi.Input<string>;
    bestpathCmpRouterid?: pulumi.Input<string>;
    bestpathMedConfed?: pulumi.Input<string>;
    bestpathMedMissingAsWorst?: pulumi.Input<string>;
    clientToClientReflection?: pulumi.Input<string>;
    clusterId?: pulumi.Input<string>;
    confederationIdentifier?: pulumi.Input<number>;
    confederationPeers?: pulumi.Input<pulumi.Input<string>[]>;
    crossFamilyConditionalAdv?: pulumi.Input<string>;
    dampening?: pulumi.Input<string>;
    dampeningMaxSuppressTime?: pulumi.Input<number>;
    dampeningReachabilityHalfLife?: pulumi.Input<number>;
    dampeningReuse?: pulumi.Input<number>;
    dampeningRouteMaps?: pulumi.Input<pulumi.Input<string>[]>;
    dampeningSuppress?: pulumi.Input<number>;
    dampeningUnreachabilityHalfLife?: pulumi.Input<number>;
    defaultLocalPreference?: pulumi.Input<number>;
    deterministicMed?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    distanceExternal?: pulumi.Input<number>;
    distanceInternal?: pulumi.Input<number>;
    distanceLocal?: pulumi.Input<number>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ebgpMultipath?: pulumi.Input<string>;
    enforceFirstAs?: pulumi.Input<string>;
    fastExternalFailover?: pulumi.Input<string>;
    gracefulEndOnTimer?: pulumi.Input<string>;
    gracefulRestart?: pulumi.Input<string>;
    gracefulRestartTime?: pulumi.Input<number>;
    gracefulStalepathTime?: pulumi.Input<number>;
    gracefulUpdateDelay?: pulumi.Input<number>;
    holdtimeTimer?: pulumi.Input<number>;
    ibgpMultipath?: pulumi.Input<string>;
    ignoreOptionalCapability?: pulumi.Input<string>;
    keepaliveTimer?: pulumi.Input<number>;
    logNeighbourChanges?: pulumi.Input<string>;
    multipathRecursiveDistance?: pulumi.Input<string>;
    neighborGroups?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborGroup>[]>;
    neighborRange6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborRange6>[]>;
    neighborRanges?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborRange>[]>;
    neighbors?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighbor>[]>;
    network6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpNetwork6>[]>;
    networkImportCheck?: pulumi.Input<string>;
    networks?: pulumi.Input<pulumi.Input<inputs.RouterBgpNetwork>[]>;
    recursiveInheritPriority?: pulumi.Input<string>;
    recursiveNextHop?: pulumi.Input<string>;
    redistribute6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpRedistribute6>[]>;
    redistributes?: pulumi.Input<pulumi.Input<inputs.RouterBgpRedistribute>[]>;
    routerId?: pulumi.Input<string>;
    scanTime?: pulumi.Input<number>;
    synchronization?: pulumi.Input<string>;
    tagResolveMode?: pulumi.Input<string>;
    vrf6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrf6>[]>;
    vrfLeak6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrfLeak6>[]>;
    vrfLeaks?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrfLeak>[]>;
    vrves?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrf>[]>;
}

/**
 * The set of arguments for constructing a RouterBgp resource.
 */
export interface RouterBgpArgs {
    additionalPath?: pulumi.Input<string>;
    additionalPath6?: pulumi.Input<string>;
    additionalPathSelect?: pulumi.Input<number>;
    additionalPathSelect6?: pulumi.Input<number>;
    additionalPathSelectVpnv4?: pulumi.Input<number>;
    additionalPathSelectVpnv6?: pulumi.Input<number>;
    additionalPathVpnv4?: pulumi.Input<string>;
    additionalPathVpnv6?: pulumi.Input<string>;
    adminDistances?: pulumi.Input<pulumi.Input<inputs.RouterBgpAdminDistance>[]>;
    aggregateAddress6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpAggregateAddress6>[]>;
    aggregateAddresses?: pulumi.Input<pulumi.Input<inputs.RouterBgpAggregateAddress>[]>;
    alwaysCompareMed?: pulumi.Input<string>;
    as?: pulumi.Input<number>;
    bestpathAsPathIgnore?: pulumi.Input<string>;
    bestpathCmpConfedAspath?: pulumi.Input<string>;
    bestpathCmpRouterid?: pulumi.Input<string>;
    bestpathMedConfed?: pulumi.Input<string>;
    bestpathMedMissingAsWorst?: pulumi.Input<string>;
    clientToClientReflection?: pulumi.Input<string>;
    clusterId?: pulumi.Input<string>;
    confederationIdentifier?: pulumi.Input<number>;
    confederationPeers?: pulumi.Input<pulumi.Input<string>[]>;
    crossFamilyConditionalAdv?: pulumi.Input<string>;
    dampening?: pulumi.Input<string>;
    dampeningMaxSuppressTime?: pulumi.Input<number>;
    dampeningReachabilityHalfLife?: pulumi.Input<number>;
    dampeningReuse?: pulumi.Input<number>;
    dampeningRouteMaps?: pulumi.Input<pulumi.Input<string>[]>;
    dampeningSuppress?: pulumi.Input<number>;
    dampeningUnreachabilityHalfLife?: pulumi.Input<number>;
    defaultLocalPreference?: pulumi.Input<number>;
    deterministicMed?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    distanceExternal?: pulumi.Input<number>;
    distanceInternal?: pulumi.Input<number>;
    distanceLocal?: pulumi.Input<number>;
    dynamicSortSubtable?: pulumi.Input<string>;
    ebgpMultipath?: pulumi.Input<string>;
    enforceFirstAs?: pulumi.Input<string>;
    fastExternalFailover?: pulumi.Input<string>;
    gracefulEndOnTimer?: pulumi.Input<string>;
    gracefulRestart?: pulumi.Input<string>;
    gracefulRestartTime?: pulumi.Input<number>;
    gracefulStalepathTime?: pulumi.Input<number>;
    gracefulUpdateDelay?: pulumi.Input<number>;
    holdtimeTimer?: pulumi.Input<number>;
    ibgpMultipath?: pulumi.Input<string>;
    ignoreOptionalCapability?: pulumi.Input<string>;
    keepaliveTimer?: pulumi.Input<number>;
    logNeighbourChanges?: pulumi.Input<string>;
    multipathRecursiveDistance?: pulumi.Input<string>;
    neighborGroups?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborGroup>[]>;
    neighborRange6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborRange6>[]>;
    neighborRanges?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighborRange>[]>;
    neighbors?: pulumi.Input<pulumi.Input<inputs.RouterBgpNeighbor>[]>;
    network6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpNetwork6>[]>;
    networkImportCheck?: pulumi.Input<string>;
    networks?: pulumi.Input<pulumi.Input<inputs.RouterBgpNetwork>[]>;
    recursiveInheritPriority?: pulumi.Input<string>;
    recursiveNextHop?: pulumi.Input<string>;
    redistribute6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpRedistribute6>[]>;
    redistributes?: pulumi.Input<pulumi.Input<inputs.RouterBgpRedistribute>[]>;
    routerId?: pulumi.Input<string>;
    scanTime?: pulumi.Input<number>;
    synchronization?: pulumi.Input<string>;
    tagResolveMode?: pulumi.Input<string>;
    vrf6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrf6>[]>;
    vrfLeak6s?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrfLeak6>[]>;
    vrfLeaks?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrfLeak>[]>;
    vrves?: pulumi.Input<pulumi.Input<inputs.RouterBgpVrf>[]>;
}
