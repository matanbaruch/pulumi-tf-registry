// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemEvpn extends pulumi.CustomResource {
    /**
     * Get an existing SystemEvpn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemEvpnState, opts?: pulumi.CustomResourceOptions): SystemEvpn {
        return new SystemEvpn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemEvpn:SystemEvpn';

    /**
     * Returns true if the given object is an instance of SystemEvpn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemEvpn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemEvpn.__pulumiType;
    }

    public readonly arpSuppression!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly exportRts!: pulumi.Output<string[]>;
    public readonly fosid!: pulumi.Output<number | undefined>;
    public readonly importRts!: pulumi.Output<string[]>;
    public readonly ipLocalLearning!: pulumi.Output<string>;
    public readonly rd!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemEvpn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemEvpnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemEvpnArgs | SystemEvpnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemEvpnState | undefined;
            resourceInputs["arpSuppression"] = state ? state.arpSuppression : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["exportRts"] = state ? state.exportRts : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["importRts"] = state ? state.importRts : undefined;
            resourceInputs["ipLocalLearning"] = state ? state.ipLocalLearning : undefined;
            resourceInputs["rd"] = state ? state.rd : undefined;
        } else {
            const args = argsOrState as SystemEvpnArgs | undefined;
            resourceInputs["arpSuppression"] = args ? args.arpSuppression : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["exportRts"] = args ? args.exportRts : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["importRts"] = args ? args.importRts : undefined;
            resourceInputs["ipLocalLearning"] = args ? args.ipLocalLearning : undefined;
            resourceInputs["rd"] = args ? args.rd : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemEvpn.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemEvpn resources.
 */
export interface SystemEvpnState {
    arpSuppression?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    exportRts?: pulumi.Input<pulumi.Input<string>[]>;
    fosid?: pulumi.Input<number>;
    importRts?: pulumi.Input<pulumi.Input<string>[]>;
    ipLocalLearning?: pulumi.Input<string>;
    rd?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemEvpn resource.
 */
export interface SystemEvpnArgs {
    arpSuppression?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    exportRts?: pulumi.Input<pulumi.Input<string>[]>;
    fosid?: pulumi.Input<number>;
    importRts?: pulumi.Input<pulumi.Input<string>[]>;
    ipLocalLearning?: pulumi.Input<string>;
    rd?: pulumi.Input<string>;
}
