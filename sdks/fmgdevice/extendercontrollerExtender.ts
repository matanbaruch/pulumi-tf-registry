// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ExtendercontrollerExtender extends pulumi.CustomResource {
    /**
     * Get an existing ExtendercontrollerExtender resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExtendercontrollerExtenderState, opts?: pulumi.CustomResourceOptions): ExtendercontrollerExtender {
        return new ExtendercontrollerExtender(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/extendercontrollerExtender:ExtendercontrollerExtender';

    /**
     * Returns true if the given object is an instance of ExtendercontrollerExtender.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExtendercontrollerExtender {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExtendercontrollerExtender.__pulumiType;
    }

    public readonly _dataplans!: pulumi.Output<string[]>;
    public readonly _templates!: pulumi.Output<string[]>;
    public readonly aaaSharedSecrets!: pulumi.Output<string[]>;
    public readonly accessPointName!: pulumi.Output<string | undefined>;
    public readonly admin!: pulumi.Output<string | undefined>;
    public readonly allowaccesses!: pulumi.Output<string[]>;
    public readonly atDialScript!: pulumi.Output<string | undefined>;
    public readonly authorized!: pulumi.Output<string>;
    public readonly bandwidthLimit!: pulumi.Output<number>;
    public readonly billingStartDay!: pulumi.Output<number | undefined>;
    public readonly cdmaAaaSpi!: pulumi.Output<string | undefined>;
    public readonly cdmaHaSpi!: pulumi.Output<string | undefined>;
    public readonly cdmaNai!: pulumi.Output<string | undefined>;
    public readonly connStatus!: pulumi.Output<number | undefined>;
    public readonly controllerReport!: pulumi.Output<outputs.ExtendercontrollerExtenderControllerReport | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly deviceId!: pulumi.Output<number>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly dialMode!: pulumi.Output<string | undefined>;
    public readonly dialStatus!: pulumi.Output<number | undefined>;
    public readonly enforceBandwidth!: pulumi.Output<string>;
    public readonly extName!: pulumi.Output<string | undefined>;
    public readonly extensionType!: pulumi.Output<string | undefined>;
    public readonly fosid!: pulumi.Output<string | undefined>;
    public readonly haSharedSecrets!: pulumi.Output<string[]>;
    public readonly ifnames!: pulumi.Output<string[]>;
    public readonly initiatedUpdate!: pulumi.Output<string | undefined>;
    public readonly loginPasswordChange!: pulumi.Output<string>;
    public readonly loginPasswords!: pulumi.Output<string[]>;
    public readonly mode!: pulumi.Output<string | undefined>;
    public readonly modem1!: pulumi.Output<outputs.ExtendercontrollerExtenderModem1 | undefined>;
    public readonly modem2!: pulumi.Output<outputs.ExtendercontrollerExtenderModem2 | undefined>;
    public readonly modemPasswds!: pulumi.Output<string[]>;
    public readonly modemType!: pulumi.Output<string | undefined>;
    public readonly multiMode!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly overrideAllowaccess!: pulumi.Output<string>;
    public readonly overrideEnforceBandwidth!: pulumi.Output<string>;
    public readonly overrideLoginPasswordChange!: pulumi.Output<string>;
    public readonly pppAuthProtocol!: pulumi.Output<string | undefined>;
    public readonly pppEchoRequest!: pulumi.Output<string | undefined>;
    public readonly pppPasswords!: pulumi.Output<string[]>;
    public readonly pppUsername!: pulumi.Output<string | undefined>;
    public readonly primaryHa!: pulumi.Output<string | undefined>;
    public readonly profiles!: pulumi.Output<string[]>;
    public readonly quotaLimitMb!: pulumi.Output<number | undefined>;
    public readonly redial!: pulumi.Output<string | undefined>;
    public readonly redundantIntf!: pulumi.Output<string | undefined>;
    public readonly roaming!: pulumi.Output<string | undefined>;
    public readonly role!: pulumi.Output<string | undefined>;
    public readonly secondaryHa!: pulumi.Output<string | undefined>;
    public readonly simPins!: pulumi.Output<string[]>;
    public readonly vdom!: pulumi.Output<number | undefined>;
    public readonly wanExtension!: pulumi.Output<outputs.ExtendercontrollerExtenderWanExtension | undefined>;
    public readonly wimaxAuthProtocol!: pulumi.Output<string | undefined>;
    public readonly wimaxCarrier!: pulumi.Output<string | undefined>;
    public readonly wimaxRealm!: pulumi.Output<string | undefined>;

    /**
     * Create a ExtendercontrollerExtender resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ExtendercontrollerExtenderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExtendercontrollerExtenderArgs | ExtendercontrollerExtenderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExtendercontrollerExtenderState | undefined;
            resourceInputs["_dataplans"] = state ? state._dataplans : undefined;
            resourceInputs["_templates"] = state ? state._templates : undefined;
            resourceInputs["aaaSharedSecrets"] = state ? state.aaaSharedSecrets : undefined;
            resourceInputs["accessPointName"] = state ? state.accessPointName : undefined;
            resourceInputs["admin"] = state ? state.admin : undefined;
            resourceInputs["allowaccesses"] = state ? state.allowaccesses : undefined;
            resourceInputs["atDialScript"] = state ? state.atDialScript : undefined;
            resourceInputs["authorized"] = state ? state.authorized : undefined;
            resourceInputs["bandwidthLimit"] = state ? state.bandwidthLimit : undefined;
            resourceInputs["billingStartDay"] = state ? state.billingStartDay : undefined;
            resourceInputs["cdmaAaaSpi"] = state ? state.cdmaAaaSpi : undefined;
            resourceInputs["cdmaHaSpi"] = state ? state.cdmaHaSpi : undefined;
            resourceInputs["cdmaNai"] = state ? state.cdmaNai : undefined;
            resourceInputs["connStatus"] = state ? state.connStatus : undefined;
            resourceInputs["controllerReport"] = state ? state.controllerReport : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["dialMode"] = state ? state.dialMode : undefined;
            resourceInputs["dialStatus"] = state ? state.dialStatus : undefined;
            resourceInputs["enforceBandwidth"] = state ? state.enforceBandwidth : undefined;
            resourceInputs["extName"] = state ? state.extName : undefined;
            resourceInputs["extensionType"] = state ? state.extensionType : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["haSharedSecrets"] = state ? state.haSharedSecrets : undefined;
            resourceInputs["ifnames"] = state ? state.ifnames : undefined;
            resourceInputs["initiatedUpdate"] = state ? state.initiatedUpdate : undefined;
            resourceInputs["loginPasswordChange"] = state ? state.loginPasswordChange : undefined;
            resourceInputs["loginPasswords"] = state ? state.loginPasswords : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["modem1"] = state ? state.modem1 : undefined;
            resourceInputs["modem2"] = state ? state.modem2 : undefined;
            resourceInputs["modemPasswds"] = state ? state.modemPasswds : undefined;
            resourceInputs["modemType"] = state ? state.modemType : undefined;
            resourceInputs["multiMode"] = state ? state.multiMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overrideAllowaccess"] = state ? state.overrideAllowaccess : undefined;
            resourceInputs["overrideEnforceBandwidth"] = state ? state.overrideEnforceBandwidth : undefined;
            resourceInputs["overrideLoginPasswordChange"] = state ? state.overrideLoginPasswordChange : undefined;
            resourceInputs["pppAuthProtocol"] = state ? state.pppAuthProtocol : undefined;
            resourceInputs["pppEchoRequest"] = state ? state.pppEchoRequest : undefined;
            resourceInputs["pppPasswords"] = state ? state.pppPasswords : undefined;
            resourceInputs["pppUsername"] = state ? state.pppUsername : undefined;
            resourceInputs["primaryHa"] = state ? state.primaryHa : undefined;
            resourceInputs["profiles"] = state ? state.profiles : undefined;
            resourceInputs["quotaLimitMb"] = state ? state.quotaLimitMb : undefined;
            resourceInputs["redial"] = state ? state.redial : undefined;
            resourceInputs["redundantIntf"] = state ? state.redundantIntf : undefined;
            resourceInputs["roaming"] = state ? state.roaming : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["secondaryHa"] = state ? state.secondaryHa : undefined;
            resourceInputs["simPins"] = state ? state.simPins : undefined;
            resourceInputs["vdom"] = state ? state.vdom : undefined;
            resourceInputs["wanExtension"] = state ? state.wanExtension : undefined;
            resourceInputs["wimaxAuthProtocol"] = state ? state.wimaxAuthProtocol : undefined;
            resourceInputs["wimaxCarrier"] = state ? state.wimaxCarrier : undefined;
            resourceInputs["wimaxRealm"] = state ? state.wimaxRealm : undefined;
        } else {
            const args = argsOrState as ExtendercontrollerExtenderArgs | undefined;
            resourceInputs["_dataplans"] = args ? args._dataplans : undefined;
            resourceInputs["_templates"] = args ? args._templates : undefined;
            resourceInputs["aaaSharedSecrets"] = args?.aaaSharedSecrets ? pulumi.secret(args.aaaSharedSecrets) : undefined;
            resourceInputs["accessPointName"] = args ? args.accessPointName : undefined;
            resourceInputs["admin"] = args ? args.admin : undefined;
            resourceInputs["allowaccesses"] = args ? args.allowaccesses : undefined;
            resourceInputs["atDialScript"] = args ? args.atDialScript : undefined;
            resourceInputs["authorized"] = args ? args.authorized : undefined;
            resourceInputs["bandwidthLimit"] = args ? args.bandwidthLimit : undefined;
            resourceInputs["billingStartDay"] = args ? args.billingStartDay : undefined;
            resourceInputs["cdmaAaaSpi"] = args ? args.cdmaAaaSpi : undefined;
            resourceInputs["cdmaHaSpi"] = args ? args.cdmaHaSpi : undefined;
            resourceInputs["cdmaNai"] = args ? args.cdmaNai : undefined;
            resourceInputs["connStatus"] = args ? args.connStatus : undefined;
            resourceInputs["controllerReport"] = args ? args.controllerReport : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["dialMode"] = args ? args.dialMode : undefined;
            resourceInputs["dialStatus"] = args ? args.dialStatus : undefined;
            resourceInputs["enforceBandwidth"] = args ? args.enforceBandwidth : undefined;
            resourceInputs["extName"] = args ? args.extName : undefined;
            resourceInputs["extensionType"] = args ? args.extensionType : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["haSharedSecrets"] = args?.haSharedSecrets ? pulumi.secret(args.haSharedSecrets) : undefined;
            resourceInputs["ifnames"] = args ? args.ifnames : undefined;
            resourceInputs["initiatedUpdate"] = args ? args.initiatedUpdate : undefined;
            resourceInputs["loginPasswordChange"] = args ? args.loginPasswordChange : undefined;
            resourceInputs["loginPasswords"] = args?.loginPasswords ? pulumi.secret(args.loginPasswords) : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["modem1"] = args ? args.modem1 : undefined;
            resourceInputs["modem2"] = args ? args.modem2 : undefined;
            resourceInputs["modemPasswds"] = args?.modemPasswds ? pulumi.secret(args.modemPasswds) : undefined;
            resourceInputs["modemType"] = args ? args.modemType : undefined;
            resourceInputs["multiMode"] = args ? args.multiMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overrideAllowaccess"] = args ? args.overrideAllowaccess : undefined;
            resourceInputs["overrideEnforceBandwidth"] = args ? args.overrideEnforceBandwidth : undefined;
            resourceInputs["overrideLoginPasswordChange"] = args ? args.overrideLoginPasswordChange : undefined;
            resourceInputs["pppAuthProtocol"] = args ? args.pppAuthProtocol : undefined;
            resourceInputs["pppEchoRequest"] = args ? args.pppEchoRequest : undefined;
            resourceInputs["pppPasswords"] = args?.pppPasswords ? pulumi.secret(args.pppPasswords) : undefined;
            resourceInputs["pppUsername"] = args ? args.pppUsername : undefined;
            resourceInputs["primaryHa"] = args ? args.primaryHa : undefined;
            resourceInputs["profiles"] = args ? args.profiles : undefined;
            resourceInputs["quotaLimitMb"] = args ? args.quotaLimitMb : undefined;
            resourceInputs["redial"] = args ? args.redial : undefined;
            resourceInputs["redundantIntf"] = args ? args.redundantIntf : undefined;
            resourceInputs["roaming"] = args ? args.roaming : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["secondaryHa"] = args ? args.secondaryHa : undefined;
            resourceInputs["simPins"] = args?.simPins ? pulumi.secret(args.simPins) : undefined;
            resourceInputs["vdom"] = args ? args.vdom : undefined;
            resourceInputs["wanExtension"] = args ? args.wanExtension : undefined;
            resourceInputs["wimaxAuthProtocol"] = args ? args.wimaxAuthProtocol : undefined;
            resourceInputs["wimaxCarrier"] = args ? args.wimaxCarrier : undefined;
            resourceInputs["wimaxRealm"] = args ? args.wimaxRealm : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["aaaSharedSecrets", "haSharedSecrets", "loginPasswords", "modemPasswds", "pppPasswords", "simPins"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ExtendercontrollerExtender.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ExtendercontrollerExtender resources.
 */
export interface ExtendercontrollerExtenderState {
    _dataplans?: pulumi.Input<pulumi.Input<string>[]>;
    _templates?: pulumi.Input<pulumi.Input<string>[]>;
    aaaSharedSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    accessPointName?: pulumi.Input<string>;
    admin?: pulumi.Input<string>;
    allowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    atDialScript?: pulumi.Input<string>;
    authorized?: pulumi.Input<string>;
    bandwidthLimit?: pulumi.Input<number>;
    billingStartDay?: pulumi.Input<number>;
    cdmaAaaSpi?: pulumi.Input<string>;
    cdmaHaSpi?: pulumi.Input<string>;
    cdmaNai?: pulumi.Input<string>;
    connStatus?: pulumi.Input<number>;
    controllerReport?: pulumi.Input<inputs.ExtendercontrollerExtenderControllerReport>;
    description?: pulumi.Input<string>;
    deviceId?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dialMode?: pulumi.Input<string>;
    dialStatus?: pulumi.Input<number>;
    enforceBandwidth?: pulumi.Input<string>;
    extName?: pulumi.Input<string>;
    extensionType?: pulumi.Input<string>;
    fosid?: pulumi.Input<string>;
    haSharedSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    ifnames?: pulumi.Input<pulumi.Input<string>[]>;
    initiatedUpdate?: pulumi.Input<string>;
    loginPasswordChange?: pulumi.Input<string>;
    loginPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    mode?: pulumi.Input<string>;
    modem1?: pulumi.Input<inputs.ExtendercontrollerExtenderModem1>;
    modem2?: pulumi.Input<inputs.ExtendercontrollerExtenderModem2>;
    modemPasswds?: pulumi.Input<pulumi.Input<string>[]>;
    modemType?: pulumi.Input<string>;
    multiMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    overrideAllowaccess?: pulumi.Input<string>;
    overrideEnforceBandwidth?: pulumi.Input<string>;
    overrideLoginPasswordChange?: pulumi.Input<string>;
    pppAuthProtocol?: pulumi.Input<string>;
    pppEchoRequest?: pulumi.Input<string>;
    pppPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    pppUsername?: pulumi.Input<string>;
    primaryHa?: pulumi.Input<string>;
    profiles?: pulumi.Input<pulumi.Input<string>[]>;
    quotaLimitMb?: pulumi.Input<number>;
    redial?: pulumi.Input<string>;
    redundantIntf?: pulumi.Input<string>;
    roaming?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    secondaryHa?: pulumi.Input<string>;
    simPins?: pulumi.Input<pulumi.Input<string>[]>;
    vdom?: pulumi.Input<number>;
    wanExtension?: pulumi.Input<inputs.ExtendercontrollerExtenderWanExtension>;
    wimaxAuthProtocol?: pulumi.Input<string>;
    wimaxCarrier?: pulumi.Input<string>;
    wimaxRealm?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExtendercontrollerExtender resource.
 */
export interface ExtendercontrollerExtenderArgs {
    _dataplans?: pulumi.Input<pulumi.Input<string>[]>;
    _templates?: pulumi.Input<pulumi.Input<string>[]>;
    aaaSharedSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    accessPointName?: pulumi.Input<string>;
    admin?: pulumi.Input<string>;
    allowaccesses?: pulumi.Input<pulumi.Input<string>[]>;
    atDialScript?: pulumi.Input<string>;
    authorized?: pulumi.Input<string>;
    bandwidthLimit?: pulumi.Input<number>;
    billingStartDay?: pulumi.Input<number>;
    cdmaAaaSpi?: pulumi.Input<string>;
    cdmaHaSpi?: pulumi.Input<string>;
    cdmaNai?: pulumi.Input<string>;
    connStatus?: pulumi.Input<number>;
    controllerReport?: pulumi.Input<inputs.ExtendercontrollerExtenderControllerReport>;
    description?: pulumi.Input<string>;
    deviceId?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dialMode?: pulumi.Input<string>;
    dialStatus?: pulumi.Input<number>;
    enforceBandwidth?: pulumi.Input<string>;
    extName?: pulumi.Input<string>;
    extensionType?: pulumi.Input<string>;
    fosid?: pulumi.Input<string>;
    haSharedSecrets?: pulumi.Input<pulumi.Input<string>[]>;
    ifnames?: pulumi.Input<pulumi.Input<string>[]>;
    initiatedUpdate?: pulumi.Input<string>;
    loginPasswordChange?: pulumi.Input<string>;
    loginPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    mode?: pulumi.Input<string>;
    modem1?: pulumi.Input<inputs.ExtendercontrollerExtenderModem1>;
    modem2?: pulumi.Input<inputs.ExtendercontrollerExtenderModem2>;
    modemPasswds?: pulumi.Input<pulumi.Input<string>[]>;
    modemType?: pulumi.Input<string>;
    multiMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    overrideAllowaccess?: pulumi.Input<string>;
    overrideEnforceBandwidth?: pulumi.Input<string>;
    overrideLoginPasswordChange?: pulumi.Input<string>;
    pppAuthProtocol?: pulumi.Input<string>;
    pppEchoRequest?: pulumi.Input<string>;
    pppPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    pppUsername?: pulumi.Input<string>;
    primaryHa?: pulumi.Input<string>;
    profiles?: pulumi.Input<pulumi.Input<string>[]>;
    quotaLimitMb?: pulumi.Input<number>;
    redial?: pulumi.Input<string>;
    redundantIntf?: pulumi.Input<string>;
    roaming?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    secondaryHa?: pulumi.Input<string>;
    simPins?: pulumi.Input<pulumi.Input<string>[]>;
    vdom?: pulumi.Input<number>;
    wanExtension?: pulumi.Input<inputs.ExtendercontrollerExtenderWanExtension>;
    wimaxAuthProtocol?: pulumi.Input<string>;
    wimaxCarrier?: pulumi.Input<string>;
    wimaxRealm?: pulumi.Input<string>;
}
