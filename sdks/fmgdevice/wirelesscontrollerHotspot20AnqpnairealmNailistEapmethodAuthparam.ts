// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam extends pulumi.CustomResource {
    /**
     * Get an existing WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamState, opts?: pulumi.CustomResourceOptions): WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam {
        return new WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/wirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam:WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam';

    /**
     * Returns true if the given object is an instance of WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam.__pulumiType;
    }

    public readonly anqpNaiRealm!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly eapMethod!: pulumi.Output<string>;
    public readonly fosid!: pulumi.Output<string>;
    public readonly index!: pulumi.Output<number | undefined>;
    public readonly naiList!: pulumi.Output<string>;
    public readonly val!: pulumi.Output<string>;

    /**
     * Create a WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamArgs | WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamState | undefined;
            resourceInputs["anqpNaiRealm"] = state ? state.anqpNaiRealm : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["eapMethod"] = state ? state.eapMethod : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["index"] = state ? state.index : undefined;
            resourceInputs["naiList"] = state ? state.naiList : undefined;
            resourceInputs["val"] = state ? state.val : undefined;
        } else {
            const args = argsOrState as WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamArgs | undefined;
            if ((!args || args.anqpNaiRealm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'anqpNaiRealm'");
            }
            if ((!args || args.eapMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eapMethod'");
            }
            if ((!args || args.naiList === undefined) && !opts.urn) {
                throw new Error("Missing required property 'naiList'");
            }
            resourceInputs["anqpNaiRealm"] = args ? args.anqpNaiRealm : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["eapMethod"] = args ? args.eapMethod : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["index"] = args ? args.index : undefined;
            resourceInputs["naiList"] = args ? args.naiList : undefined;
            resourceInputs["val"] = args ? args.val : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam resources.
 */
export interface WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamState {
    anqpNaiRealm?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    eapMethod?: pulumi.Input<string>;
    fosid?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
    naiList?: pulumi.Input<string>;
    val?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparam resource.
 */
export interface WirelesscontrollerHotspot20AnqpnairealmNailistEapmethodAuthparamArgs {
    anqpNaiRealm: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    eapMethod: pulumi.Input<string>;
    fosid?: pulumi.Input<string>;
    index?: pulumi.Input<number>;
    naiList: pulumi.Input<string>;
    val?: pulumi.Input<string>;
}
