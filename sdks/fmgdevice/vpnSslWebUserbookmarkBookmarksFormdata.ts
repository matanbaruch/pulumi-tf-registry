// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VpnSslWebUserbookmarkBookmarksFormdata extends pulumi.CustomResource {
    /**
     * Get an existing VpnSslWebUserbookmarkBookmarksFormdata resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnSslWebUserbookmarkBookmarksFormdataState, opts?: pulumi.CustomResourceOptions): VpnSslWebUserbookmarkBookmarksFormdata {
        return new VpnSslWebUserbookmarkBookmarksFormdata(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/vpnSslWebUserbookmarkBookmarksFormdata:VpnSslWebUserbookmarkBookmarksFormdata';

    /**
     * Returns true if the given object is an instance of VpnSslWebUserbookmarkBookmarksFormdata.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnSslWebUserbookmarkBookmarksFormdata {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnSslWebUserbookmarkBookmarksFormdata.__pulumiType;
    }

    public readonly bookmarks!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly userBookmark!: pulumi.Output<string>;
    public readonly value!: pulumi.Output<string | undefined>;

    /**
     * Create a VpnSslWebUserbookmarkBookmarksFormdata resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnSslWebUserbookmarkBookmarksFormdataArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnSslWebUserbookmarkBookmarksFormdataArgs | VpnSslWebUserbookmarkBookmarksFormdataState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnSslWebUserbookmarkBookmarksFormdataState | undefined;
            resourceInputs["bookmarks"] = state ? state.bookmarks : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["userBookmark"] = state ? state.userBookmark : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as VpnSslWebUserbookmarkBookmarksFormdataArgs | undefined;
            if ((!args || args.bookmarks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bookmarks'");
            }
            if ((!args || args.userBookmark === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userBookmark'");
            }
            resourceInputs["bookmarks"] = args ? args.bookmarks : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["userBookmark"] = args ? args.userBookmark : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpnSslWebUserbookmarkBookmarksFormdata.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpnSslWebUserbookmarkBookmarksFormdata resources.
 */
export interface VpnSslWebUserbookmarkBookmarksFormdataState {
    bookmarks?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    userBookmark?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpnSslWebUserbookmarkBookmarksFormdata resource.
 */
export interface VpnSslWebUserbookmarkBookmarksFormdataArgs {
    bookmarks: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    userBookmark: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}
