// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpsSettings extends pulumi.CustomResource {
    /**
     * Get an existing IpsSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpsSettingsState, opts?: pulumi.CustomResourceOptions): IpsSettings {
        return new IpsSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/ipsSettings:IpsSettings';

    /**
     * Returns true if the given object is an instance of IpsSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpsSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpsSettings.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly ipsPacketQuota!: pulumi.Output<number | undefined>;
    public readonly packetLogHistory!: pulumi.Output<number>;
    public readonly packetLogMemory!: pulumi.Output<number | undefined>;
    public readonly packetLogPostAttack!: pulumi.Output<number | undefined>;
    public readonly proxyInlineIps!: pulumi.Output<string>;

    /**
     * Create a IpsSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpsSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpsSettingsArgs | IpsSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpsSettingsState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["ipsPacketQuota"] = state ? state.ipsPacketQuota : undefined;
            resourceInputs["packetLogHistory"] = state ? state.packetLogHistory : undefined;
            resourceInputs["packetLogMemory"] = state ? state.packetLogMemory : undefined;
            resourceInputs["packetLogPostAttack"] = state ? state.packetLogPostAttack : undefined;
            resourceInputs["proxyInlineIps"] = state ? state.proxyInlineIps : undefined;
        } else {
            const args = argsOrState as IpsSettingsArgs | undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["ipsPacketQuota"] = args ? args.ipsPacketQuota : undefined;
            resourceInputs["packetLogHistory"] = args ? args.packetLogHistory : undefined;
            resourceInputs["packetLogMemory"] = args ? args.packetLogMemory : undefined;
            resourceInputs["packetLogPostAttack"] = args ? args.packetLogPostAttack : undefined;
            resourceInputs["proxyInlineIps"] = args ? args.proxyInlineIps : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpsSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IpsSettings resources.
 */
export interface IpsSettingsState {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    ipsPacketQuota?: pulumi.Input<number>;
    packetLogHistory?: pulumi.Input<number>;
    packetLogMemory?: pulumi.Input<number>;
    packetLogPostAttack?: pulumi.Input<number>;
    proxyInlineIps?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpsSettings resource.
 */
export interface IpsSettingsArgs {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    ipsPacketQuota?: pulumi.Input<number>;
    packetLogHistory?: pulumi.Input<number>;
    packetLogMemory?: pulumi.Input<number>;
    packetLogPostAttack?: pulumi.Input<number>;
    proxyInlineIps?: pulumi.Input<string>;
}
