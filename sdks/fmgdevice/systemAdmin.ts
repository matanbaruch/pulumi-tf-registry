// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemAdmin extends pulumi.CustomResource {
    /**
     * Get an existing SystemAdmin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemAdminState, opts?: pulumi.CustomResourceOptions): SystemAdmin {
        return new SystemAdmin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemAdmin:SystemAdmin';

    /**
     * Returns true if the given object is an instance of SystemAdmin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemAdmin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemAdmin.__pulumiType;
    }

    public readonly accprofileOverride!: pulumi.Output<string | undefined>;
    public readonly accprofiles!: pulumi.Output<string[]>;
    public readonly allowRemoveAdminSession!: pulumi.Output<string>;
    public readonly comments!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly emailTo!: pulumi.Output<string | undefined>;
    public readonly forcePasswordChange!: pulumi.Output<string | undefined>;
    public readonly fortitokens!: pulumi.Output<string[]>;
    public readonly guestAuth!: pulumi.Output<string>;
    public readonly guestLangs!: pulumi.Output<string[]>;
    public readonly guestUsergroups!: pulumi.Output<string[]>;
    public readonly guiDefaultDashboardTemplate!: pulumi.Output<string | undefined>;
    public readonly guiIgnoreInvalidSignatureVersion!: pulumi.Output<string | undefined>;
    public readonly guiIgnoreReleaseOverviewVersion!: pulumi.Output<string | undefined>;
    public readonly hidden!: pulumi.Output<number | undefined>;
    public readonly history0s!: pulumi.Output<string[]>;
    public readonly history1s!: pulumi.Output<string[]>;
    public readonly ip6Trusthost1!: pulumi.Output<string>;
    public readonly ip6Trusthost10!: pulumi.Output<string>;
    public readonly ip6Trusthost2!: pulumi.Output<string>;
    public readonly ip6Trusthost3!: pulumi.Output<string>;
    public readonly ip6Trusthost4!: pulumi.Output<string>;
    public readonly ip6Trusthost5!: pulumi.Output<string>;
    public readonly ip6Trusthost6!: pulumi.Output<string>;
    public readonly ip6Trusthost7!: pulumi.Output<string>;
    public readonly ip6Trusthost8!: pulumi.Output<string>;
    public readonly ip6Trusthost9!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly passwordExpires!: pulumi.Output<string[]>;
    public readonly passwords!: pulumi.Output<string[]>;
    public readonly peerAuth!: pulumi.Output<string>;
    public readonly peerGroups!: pulumi.Output<string[]>;
    public readonly radiusVdomOverride!: pulumi.Output<string | undefined>;
    public readonly remoteAuth!: pulumi.Output<string>;
    public readonly remoteGroups!: pulumi.Output<string[]>;
    public readonly schedule!: pulumi.Output<string | undefined>;
    public readonly smsCustomServers!: pulumi.Output<string[]>;
    public readonly smsPhone!: pulumi.Output<string | undefined>;
    public readonly smsServer!: pulumi.Output<string>;
    public readonly sshCertificates!: pulumi.Output<string[]>;
    public readonly sshPublicKey1!: pulumi.Output<string | undefined>;
    public readonly sshPublicKey2!: pulumi.Output<string | undefined>;
    public readonly sshPublicKey3!: pulumi.Output<string | undefined>;
    public readonly trusthost10s!: pulumi.Output<string[]>;
    public readonly trusthost1s!: pulumi.Output<string[]>;
    public readonly trusthost2s!: pulumi.Output<string[]>;
    public readonly trusthost3s!: pulumi.Output<string[]>;
    public readonly trusthost4s!: pulumi.Output<string[]>;
    public readonly trusthost5s!: pulumi.Output<string[]>;
    public readonly trusthost6s!: pulumi.Output<string[]>;
    public readonly trusthost7s!: pulumi.Output<string[]>;
    public readonly trusthost8s!: pulumi.Output<string[]>;
    public readonly trusthost9s!: pulumi.Output<string[]>;
    public readonly twoFactor!: pulumi.Output<string>;
    public readonly twoFactorAuthentication!: pulumi.Output<string | undefined>;
    public readonly twoFactorNotification!: pulumi.Output<string | undefined>;
    public readonly vdomOverride!: pulumi.Output<string>;
    public readonly vdoms!: pulumi.Output<string[]>;
    public readonly wildcard!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemAdmin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemAdminArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemAdminArgs | SystemAdminState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemAdminState | undefined;
            resourceInputs["accprofileOverride"] = state ? state.accprofileOverride : undefined;
            resourceInputs["accprofiles"] = state ? state.accprofiles : undefined;
            resourceInputs["allowRemoveAdminSession"] = state ? state.allowRemoveAdminSession : undefined;
            resourceInputs["comments"] = state ? state.comments : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["emailTo"] = state ? state.emailTo : undefined;
            resourceInputs["forcePasswordChange"] = state ? state.forcePasswordChange : undefined;
            resourceInputs["fortitokens"] = state ? state.fortitokens : undefined;
            resourceInputs["guestAuth"] = state ? state.guestAuth : undefined;
            resourceInputs["guestLangs"] = state ? state.guestLangs : undefined;
            resourceInputs["guestUsergroups"] = state ? state.guestUsergroups : undefined;
            resourceInputs["guiDefaultDashboardTemplate"] = state ? state.guiDefaultDashboardTemplate : undefined;
            resourceInputs["guiIgnoreInvalidSignatureVersion"] = state ? state.guiIgnoreInvalidSignatureVersion : undefined;
            resourceInputs["guiIgnoreReleaseOverviewVersion"] = state ? state.guiIgnoreReleaseOverviewVersion : undefined;
            resourceInputs["hidden"] = state ? state.hidden : undefined;
            resourceInputs["history0s"] = state ? state.history0s : undefined;
            resourceInputs["history1s"] = state ? state.history1s : undefined;
            resourceInputs["ip6Trusthost1"] = state ? state.ip6Trusthost1 : undefined;
            resourceInputs["ip6Trusthost10"] = state ? state.ip6Trusthost10 : undefined;
            resourceInputs["ip6Trusthost2"] = state ? state.ip6Trusthost2 : undefined;
            resourceInputs["ip6Trusthost3"] = state ? state.ip6Trusthost3 : undefined;
            resourceInputs["ip6Trusthost4"] = state ? state.ip6Trusthost4 : undefined;
            resourceInputs["ip6Trusthost5"] = state ? state.ip6Trusthost5 : undefined;
            resourceInputs["ip6Trusthost6"] = state ? state.ip6Trusthost6 : undefined;
            resourceInputs["ip6Trusthost7"] = state ? state.ip6Trusthost7 : undefined;
            resourceInputs["ip6Trusthost8"] = state ? state.ip6Trusthost8 : undefined;
            resourceInputs["ip6Trusthost9"] = state ? state.ip6Trusthost9 : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwordExpires"] = state ? state.passwordExpires : undefined;
            resourceInputs["passwords"] = state ? state.passwords : undefined;
            resourceInputs["peerAuth"] = state ? state.peerAuth : undefined;
            resourceInputs["peerGroups"] = state ? state.peerGroups : undefined;
            resourceInputs["radiusVdomOverride"] = state ? state.radiusVdomOverride : undefined;
            resourceInputs["remoteAuth"] = state ? state.remoteAuth : undefined;
            resourceInputs["remoteGroups"] = state ? state.remoteGroups : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["smsCustomServers"] = state ? state.smsCustomServers : undefined;
            resourceInputs["smsPhone"] = state ? state.smsPhone : undefined;
            resourceInputs["smsServer"] = state ? state.smsServer : undefined;
            resourceInputs["sshCertificates"] = state ? state.sshCertificates : undefined;
            resourceInputs["sshPublicKey1"] = state ? state.sshPublicKey1 : undefined;
            resourceInputs["sshPublicKey2"] = state ? state.sshPublicKey2 : undefined;
            resourceInputs["sshPublicKey3"] = state ? state.sshPublicKey3 : undefined;
            resourceInputs["trusthost10s"] = state ? state.trusthost10s : undefined;
            resourceInputs["trusthost1s"] = state ? state.trusthost1s : undefined;
            resourceInputs["trusthost2s"] = state ? state.trusthost2s : undefined;
            resourceInputs["trusthost3s"] = state ? state.trusthost3s : undefined;
            resourceInputs["trusthost4s"] = state ? state.trusthost4s : undefined;
            resourceInputs["trusthost5s"] = state ? state.trusthost5s : undefined;
            resourceInputs["trusthost6s"] = state ? state.trusthost6s : undefined;
            resourceInputs["trusthost7s"] = state ? state.trusthost7s : undefined;
            resourceInputs["trusthost8s"] = state ? state.trusthost8s : undefined;
            resourceInputs["trusthost9s"] = state ? state.trusthost9s : undefined;
            resourceInputs["twoFactor"] = state ? state.twoFactor : undefined;
            resourceInputs["twoFactorAuthentication"] = state ? state.twoFactorAuthentication : undefined;
            resourceInputs["twoFactorNotification"] = state ? state.twoFactorNotification : undefined;
            resourceInputs["vdomOverride"] = state ? state.vdomOverride : undefined;
            resourceInputs["vdoms"] = state ? state.vdoms : undefined;
            resourceInputs["wildcard"] = state ? state.wildcard : undefined;
        } else {
            const args = argsOrState as SystemAdminArgs | undefined;
            resourceInputs["accprofileOverride"] = args ? args.accprofileOverride : undefined;
            resourceInputs["accprofiles"] = args ? args.accprofiles : undefined;
            resourceInputs["allowRemoveAdminSession"] = args ? args.allowRemoveAdminSession : undefined;
            resourceInputs["comments"] = args ? args.comments : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["emailTo"] = args ? args.emailTo : undefined;
            resourceInputs["forcePasswordChange"] = args ? args.forcePasswordChange : undefined;
            resourceInputs["fortitokens"] = args ? args.fortitokens : undefined;
            resourceInputs["guestAuth"] = args ? args.guestAuth : undefined;
            resourceInputs["guestLangs"] = args ? args.guestLangs : undefined;
            resourceInputs["guestUsergroups"] = args ? args.guestUsergroups : undefined;
            resourceInputs["guiDefaultDashboardTemplate"] = args ? args.guiDefaultDashboardTemplate : undefined;
            resourceInputs["guiIgnoreInvalidSignatureVersion"] = args ? args.guiIgnoreInvalidSignatureVersion : undefined;
            resourceInputs["guiIgnoreReleaseOverviewVersion"] = args ? args.guiIgnoreReleaseOverviewVersion : undefined;
            resourceInputs["hidden"] = args ? args.hidden : undefined;
            resourceInputs["history0s"] = args?.history0s ? pulumi.secret(args.history0s) : undefined;
            resourceInputs["history1s"] = args?.history1s ? pulumi.secret(args.history1s) : undefined;
            resourceInputs["ip6Trusthost1"] = args ? args.ip6Trusthost1 : undefined;
            resourceInputs["ip6Trusthost10"] = args ? args.ip6Trusthost10 : undefined;
            resourceInputs["ip6Trusthost2"] = args ? args.ip6Trusthost2 : undefined;
            resourceInputs["ip6Trusthost3"] = args ? args.ip6Trusthost3 : undefined;
            resourceInputs["ip6Trusthost4"] = args ? args.ip6Trusthost4 : undefined;
            resourceInputs["ip6Trusthost5"] = args ? args.ip6Trusthost5 : undefined;
            resourceInputs["ip6Trusthost6"] = args ? args.ip6Trusthost6 : undefined;
            resourceInputs["ip6Trusthost7"] = args ? args.ip6Trusthost7 : undefined;
            resourceInputs["ip6Trusthost8"] = args ? args.ip6Trusthost8 : undefined;
            resourceInputs["ip6Trusthost9"] = args ? args.ip6Trusthost9 : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwordExpires"] = args ? args.passwordExpires : undefined;
            resourceInputs["passwords"] = args?.passwords ? pulumi.secret(args.passwords) : undefined;
            resourceInputs["peerAuth"] = args ? args.peerAuth : undefined;
            resourceInputs["peerGroups"] = args ? args.peerGroups : undefined;
            resourceInputs["radiusVdomOverride"] = args ? args.radiusVdomOverride : undefined;
            resourceInputs["remoteAuth"] = args ? args.remoteAuth : undefined;
            resourceInputs["remoteGroups"] = args ? args.remoteGroups : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["smsCustomServers"] = args ? args.smsCustomServers : undefined;
            resourceInputs["smsPhone"] = args ? args.smsPhone : undefined;
            resourceInputs["smsServer"] = args ? args.smsServer : undefined;
            resourceInputs["sshCertificates"] = args ? args.sshCertificates : undefined;
            resourceInputs["sshPublicKey1"] = args ? args.sshPublicKey1 : undefined;
            resourceInputs["sshPublicKey2"] = args ? args.sshPublicKey2 : undefined;
            resourceInputs["sshPublicKey3"] = args ? args.sshPublicKey3 : undefined;
            resourceInputs["trusthost10s"] = args ? args.trusthost10s : undefined;
            resourceInputs["trusthost1s"] = args ? args.trusthost1s : undefined;
            resourceInputs["trusthost2s"] = args ? args.trusthost2s : undefined;
            resourceInputs["trusthost3s"] = args ? args.trusthost3s : undefined;
            resourceInputs["trusthost4s"] = args ? args.trusthost4s : undefined;
            resourceInputs["trusthost5s"] = args ? args.trusthost5s : undefined;
            resourceInputs["trusthost6s"] = args ? args.trusthost6s : undefined;
            resourceInputs["trusthost7s"] = args ? args.trusthost7s : undefined;
            resourceInputs["trusthost8s"] = args ? args.trusthost8s : undefined;
            resourceInputs["trusthost9s"] = args ? args.trusthost9s : undefined;
            resourceInputs["twoFactor"] = args ? args.twoFactor : undefined;
            resourceInputs["twoFactorAuthentication"] = args ? args.twoFactorAuthentication : undefined;
            resourceInputs["twoFactorNotification"] = args ? args.twoFactorNotification : undefined;
            resourceInputs["vdomOverride"] = args ? args.vdomOverride : undefined;
            resourceInputs["vdoms"] = args ? args.vdoms : undefined;
            resourceInputs["wildcard"] = args ? args.wildcard : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["history0s", "history1s", "passwords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SystemAdmin.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemAdmin resources.
 */
export interface SystemAdminState {
    accprofileOverride?: pulumi.Input<string>;
    accprofiles?: pulumi.Input<pulumi.Input<string>[]>;
    allowRemoveAdminSession?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    emailTo?: pulumi.Input<string>;
    forcePasswordChange?: pulumi.Input<string>;
    fortitokens?: pulumi.Input<pulumi.Input<string>[]>;
    guestAuth?: pulumi.Input<string>;
    guestLangs?: pulumi.Input<pulumi.Input<string>[]>;
    guestUsergroups?: pulumi.Input<pulumi.Input<string>[]>;
    guiDefaultDashboardTemplate?: pulumi.Input<string>;
    guiIgnoreInvalidSignatureVersion?: pulumi.Input<string>;
    guiIgnoreReleaseOverviewVersion?: pulumi.Input<string>;
    hidden?: pulumi.Input<number>;
    history0s?: pulumi.Input<pulumi.Input<string>[]>;
    history1s?: pulumi.Input<pulumi.Input<string>[]>;
    ip6Trusthost1?: pulumi.Input<string>;
    ip6Trusthost10?: pulumi.Input<string>;
    ip6Trusthost2?: pulumi.Input<string>;
    ip6Trusthost3?: pulumi.Input<string>;
    ip6Trusthost4?: pulumi.Input<string>;
    ip6Trusthost5?: pulumi.Input<string>;
    ip6Trusthost6?: pulumi.Input<string>;
    ip6Trusthost7?: pulumi.Input<string>;
    ip6Trusthost8?: pulumi.Input<string>;
    ip6Trusthost9?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwordExpires?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    peerAuth?: pulumi.Input<string>;
    peerGroups?: pulumi.Input<pulumi.Input<string>[]>;
    radiusVdomOverride?: pulumi.Input<string>;
    remoteAuth?: pulumi.Input<string>;
    remoteGroups?: pulumi.Input<pulumi.Input<string>[]>;
    schedule?: pulumi.Input<string>;
    smsCustomServers?: pulumi.Input<pulumi.Input<string>[]>;
    smsPhone?: pulumi.Input<string>;
    smsServer?: pulumi.Input<string>;
    sshCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    sshPublicKey1?: pulumi.Input<string>;
    sshPublicKey2?: pulumi.Input<string>;
    sshPublicKey3?: pulumi.Input<string>;
    trusthost10s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost1s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost2s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost3s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost4s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost5s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost6s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost7s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost8s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost9s?: pulumi.Input<pulumi.Input<string>[]>;
    twoFactor?: pulumi.Input<string>;
    twoFactorAuthentication?: pulumi.Input<string>;
    twoFactorNotification?: pulumi.Input<string>;
    vdomOverride?: pulumi.Input<string>;
    vdoms?: pulumi.Input<pulumi.Input<string>[]>;
    wildcard?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemAdmin resource.
 */
export interface SystemAdminArgs {
    accprofileOverride?: pulumi.Input<string>;
    accprofiles?: pulumi.Input<pulumi.Input<string>[]>;
    allowRemoveAdminSession?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    emailTo?: pulumi.Input<string>;
    forcePasswordChange?: pulumi.Input<string>;
    fortitokens?: pulumi.Input<pulumi.Input<string>[]>;
    guestAuth?: pulumi.Input<string>;
    guestLangs?: pulumi.Input<pulumi.Input<string>[]>;
    guestUsergroups?: pulumi.Input<pulumi.Input<string>[]>;
    guiDefaultDashboardTemplate?: pulumi.Input<string>;
    guiIgnoreInvalidSignatureVersion?: pulumi.Input<string>;
    guiIgnoreReleaseOverviewVersion?: pulumi.Input<string>;
    hidden?: pulumi.Input<number>;
    history0s?: pulumi.Input<pulumi.Input<string>[]>;
    history1s?: pulumi.Input<pulumi.Input<string>[]>;
    ip6Trusthost1?: pulumi.Input<string>;
    ip6Trusthost10?: pulumi.Input<string>;
    ip6Trusthost2?: pulumi.Input<string>;
    ip6Trusthost3?: pulumi.Input<string>;
    ip6Trusthost4?: pulumi.Input<string>;
    ip6Trusthost5?: pulumi.Input<string>;
    ip6Trusthost6?: pulumi.Input<string>;
    ip6Trusthost7?: pulumi.Input<string>;
    ip6Trusthost8?: pulumi.Input<string>;
    ip6Trusthost9?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwordExpires?: pulumi.Input<pulumi.Input<string>[]>;
    passwords?: pulumi.Input<pulumi.Input<string>[]>;
    peerAuth?: pulumi.Input<string>;
    peerGroups?: pulumi.Input<pulumi.Input<string>[]>;
    radiusVdomOverride?: pulumi.Input<string>;
    remoteAuth?: pulumi.Input<string>;
    remoteGroups?: pulumi.Input<pulumi.Input<string>[]>;
    schedule?: pulumi.Input<string>;
    smsCustomServers?: pulumi.Input<pulumi.Input<string>[]>;
    smsPhone?: pulumi.Input<string>;
    smsServer?: pulumi.Input<string>;
    sshCertificates?: pulumi.Input<pulumi.Input<string>[]>;
    sshPublicKey1?: pulumi.Input<string>;
    sshPublicKey2?: pulumi.Input<string>;
    sshPublicKey3?: pulumi.Input<string>;
    trusthost10s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost1s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost2s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost3s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost4s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost5s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost6s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost7s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost8s?: pulumi.Input<pulumi.Input<string>[]>;
    trusthost9s?: pulumi.Input<pulumi.Input<string>[]>;
    twoFactor?: pulumi.Input<string>;
    twoFactorAuthentication?: pulumi.Input<string>;
    twoFactorNotification?: pulumi.Input<string>;
    vdomOverride?: pulumi.Input<string>;
    vdoms?: pulumi.Input<pulumi.Input<string>[]>;
    wildcard?: pulumi.Input<string>;
}
