// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchcontrollerInitialconfigVlans extends pulumi.CustomResource {
    /**
     * Get an existing SwitchcontrollerInitialconfigVlans resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchcontrollerInitialconfigVlansState, opts?: pulumi.CustomResourceOptions): SwitchcontrollerInitialconfigVlans {
        return new SwitchcontrollerInitialconfigVlans(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/switchcontrollerInitialconfigVlans:SwitchcontrollerInitialconfigVlans';

    /**
     * Returns true if the given object is an instance of SwitchcontrollerInitialconfigVlans.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchcontrollerInitialconfigVlans {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchcontrollerInitialconfigVlans.__pulumiType;
    }

    public readonly defaultVlans!: pulumi.Output<string[]>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly nacSegments!: pulumi.Output<string[]>;
    public readonly nacs!: pulumi.Output<string[]>;
    public readonly quarantines!: pulumi.Output<string[]>;
    public readonly rspans!: pulumi.Output<string[]>;
    public readonly videos!: pulumi.Output<string[]>;
    public readonly voices!: pulumi.Output<string[]>;

    /**
     * Create a SwitchcontrollerInitialconfigVlans resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SwitchcontrollerInitialconfigVlansArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchcontrollerInitialconfigVlansArgs | SwitchcontrollerInitialconfigVlansState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchcontrollerInitialconfigVlansState | undefined;
            resourceInputs["defaultVlans"] = state ? state.defaultVlans : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["nacSegments"] = state ? state.nacSegments : undefined;
            resourceInputs["nacs"] = state ? state.nacs : undefined;
            resourceInputs["quarantines"] = state ? state.quarantines : undefined;
            resourceInputs["rspans"] = state ? state.rspans : undefined;
            resourceInputs["videos"] = state ? state.videos : undefined;
            resourceInputs["voices"] = state ? state.voices : undefined;
        } else {
            const args = argsOrState as SwitchcontrollerInitialconfigVlansArgs | undefined;
            resourceInputs["defaultVlans"] = args ? args.defaultVlans : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["nacSegments"] = args ? args.nacSegments : undefined;
            resourceInputs["nacs"] = args ? args.nacs : undefined;
            resourceInputs["quarantines"] = args ? args.quarantines : undefined;
            resourceInputs["rspans"] = args ? args.rspans : undefined;
            resourceInputs["videos"] = args ? args.videos : undefined;
            resourceInputs["voices"] = args ? args.voices : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchcontrollerInitialconfigVlans.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchcontrollerInitialconfigVlans resources.
 */
export interface SwitchcontrollerInitialconfigVlansState {
    defaultVlans?: pulumi.Input<pulumi.Input<string>[]>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    nacSegments?: pulumi.Input<pulumi.Input<string>[]>;
    nacs?: pulumi.Input<pulumi.Input<string>[]>;
    quarantines?: pulumi.Input<pulumi.Input<string>[]>;
    rspans?: pulumi.Input<pulumi.Input<string>[]>;
    videos?: pulumi.Input<pulumi.Input<string>[]>;
    voices?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SwitchcontrollerInitialconfigVlans resource.
 */
export interface SwitchcontrollerInitialconfigVlansArgs {
    defaultVlans?: pulumi.Input<pulumi.Input<string>[]>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    nacSegments?: pulumi.Input<pulumi.Input<string>[]>;
    nacs?: pulumi.Input<pulumi.Input<string>[]>;
    quarantines?: pulumi.Input<pulumi.Input<string>[]>;
    rspans?: pulumi.Input<pulumi.Input<string>[]>;
    videos?: pulumi.Input<pulumi.Input<string>[]>;
    voices?: pulumi.Input<pulumi.Input<string>[]>;
}
