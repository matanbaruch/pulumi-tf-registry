// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SwitchcontrollerLocationAddresscivic extends pulumi.CustomResource {
    /**
     * Get an existing SwitchcontrollerLocationAddresscivic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SwitchcontrollerLocationAddresscivicState, opts?: pulumi.CustomResourceOptions): SwitchcontrollerLocationAddresscivic {
        return new SwitchcontrollerLocationAddresscivic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/switchcontrollerLocationAddresscivic:SwitchcontrollerLocationAddresscivic';

    /**
     * Returns true if the given object is an instance of SwitchcontrollerLocationAddresscivic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SwitchcontrollerLocationAddresscivic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SwitchcontrollerLocationAddresscivic.__pulumiType;
    }

    public readonly additional!: pulumi.Output<string | undefined>;
    public readonly additionalCode!: pulumi.Output<string | undefined>;
    public readonly block!: pulumi.Output<string | undefined>;
    public readonly branchRoad!: pulumi.Output<string | undefined>;
    public readonly building!: pulumi.Output<string | undefined>;
    public readonly city!: pulumi.Output<string | undefined>;
    public readonly cityDivision!: pulumi.Output<string | undefined>;
    public readonly country!: pulumi.Output<string | undefined>;
    public readonly countrySubdivision!: pulumi.Output<string | undefined>;
    public readonly county!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly direction!: pulumi.Output<string | undefined>;
    public readonly floor!: pulumi.Output<string | undefined>;
    public readonly landmark!: pulumi.Output<string | undefined>;
    public readonly language!: pulumi.Output<string | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly number!: pulumi.Output<string | undefined>;
    public readonly numberSuffix!: pulumi.Output<string | undefined>;
    public readonly parentKey!: pulumi.Output<string | undefined>;
    public readonly placeType!: pulumi.Output<string | undefined>;
    public readonly postOfficeBox!: pulumi.Output<string | undefined>;
    public readonly postalCommunity!: pulumi.Output<string | undefined>;
    public readonly primaryRoad!: pulumi.Output<string | undefined>;
    public readonly roadSection!: pulumi.Output<string | undefined>;
    public readonly room!: pulumi.Output<string | undefined>;
    public readonly script!: pulumi.Output<string | undefined>;
    public readonly seat!: pulumi.Output<string | undefined>;
    public readonly street!: pulumi.Output<string | undefined>;
    public readonly streetNamePostMod!: pulumi.Output<string | undefined>;
    public readonly streetNamePreMod!: pulumi.Output<string | undefined>;
    public readonly streetSuffix!: pulumi.Output<string | undefined>;
    public readonly subBranchRoad!: pulumi.Output<string | undefined>;
    public readonly trailingStrSuffix!: pulumi.Output<string | undefined>;
    public readonly unit!: pulumi.Output<string | undefined>;
    public readonly zip!: pulumi.Output<string | undefined>;

    /**
     * Create a SwitchcontrollerLocationAddresscivic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SwitchcontrollerLocationAddresscivicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SwitchcontrollerLocationAddresscivicArgs | SwitchcontrollerLocationAddresscivicState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SwitchcontrollerLocationAddresscivicState | undefined;
            resourceInputs["additional"] = state ? state.additional : undefined;
            resourceInputs["additionalCode"] = state ? state.additionalCode : undefined;
            resourceInputs["block"] = state ? state.block : undefined;
            resourceInputs["branchRoad"] = state ? state.branchRoad : undefined;
            resourceInputs["building"] = state ? state.building : undefined;
            resourceInputs["city"] = state ? state.city : undefined;
            resourceInputs["cityDivision"] = state ? state.cityDivision : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["countrySubdivision"] = state ? state.countrySubdivision : undefined;
            resourceInputs["county"] = state ? state.county : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["direction"] = state ? state.direction : undefined;
            resourceInputs["floor"] = state ? state.floor : undefined;
            resourceInputs["landmark"] = state ? state.landmark : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["number"] = state ? state.number : undefined;
            resourceInputs["numberSuffix"] = state ? state.numberSuffix : undefined;
            resourceInputs["parentKey"] = state ? state.parentKey : undefined;
            resourceInputs["placeType"] = state ? state.placeType : undefined;
            resourceInputs["postOfficeBox"] = state ? state.postOfficeBox : undefined;
            resourceInputs["postalCommunity"] = state ? state.postalCommunity : undefined;
            resourceInputs["primaryRoad"] = state ? state.primaryRoad : undefined;
            resourceInputs["roadSection"] = state ? state.roadSection : undefined;
            resourceInputs["room"] = state ? state.room : undefined;
            resourceInputs["script"] = state ? state.script : undefined;
            resourceInputs["seat"] = state ? state.seat : undefined;
            resourceInputs["street"] = state ? state.street : undefined;
            resourceInputs["streetNamePostMod"] = state ? state.streetNamePostMod : undefined;
            resourceInputs["streetNamePreMod"] = state ? state.streetNamePreMod : undefined;
            resourceInputs["streetSuffix"] = state ? state.streetSuffix : undefined;
            resourceInputs["subBranchRoad"] = state ? state.subBranchRoad : undefined;
            resourceInputs["trailingStrSuffix"] = state ? state.trailingStrSuffix : undefined;
            resourceInputs["unit"] = state ? state.unit : undefined;
            resourceInputs["zip"] = state ? state.zip : undefined;
        } else {
            const args = argsOrState as SwitchcontrollerLocationAddresscivicArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["additional"] = args ? args.additional : undefined;
            resourceInputs["additionalCode"] = args ? args.additionalCode : undefined;
            resourceInputs["block"] = args ? args.block : undefined;
            resourceInputs["branchRoad"] = args ? args.branchRoad : undefined;
            resourceInputs["building"] = args ? args.building : undefined;
            resourceInputs["city"] = args ? args.city : undefined;
            resourceInputs["cityDivision"] = args ? args.cityDivision : undefined;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["countrySubdivision"] = args ? args.countrySubdivision : undefined;
            resourceInputs["county"] = args ? args.county : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["direction"] = args ? args.direction : undefined;
            resourceInputs["floor"] = args ? args.floor : undefined;
            resourceInputs["landmark"] = args ? args.landmark : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["number"] = args ? args.number : undefined;
            resourceInputs["numberSuffix"] = args ? args.numberSuffix : undefined;
            resourceInputs["parentKey"] = args ? args.parentKey : undefined;
            resourceInputs["placeType"] = args ? args.placeType : undefined;
            resourceInputs["postOfficeBox"] = args ? args.postOfficeBox : undefined;
            resourceInputs["postalCommunity"] = args ? args.postalCommunity : undefined;
            resourceInputs["primaryRoad"] = args ? args.primaryRoad : undefined;
            resourceInputs["roadSection"] = args ? args.roadSection : undefined;
            resourceInputs["room"] = args ? args.room : undefined;
            resourceInputs["script"] = args ? args.script : undefined;
            resourceInputs["seat"] = args ? args.seat : undefined;
            resourceInputs["street"] = args ? args.street : undefined;
            resourceInputs["streetNamePostMod"] = args ? args.streetNamePostMod : undefined;
            resourceInputs["streetNamePreMod"] = args ? args.streetNamePreMod : undefined;
            resourceInputs["streetSuffix"] = args ? args.streetSuffix : undefined;
            resourceInputs["subBranchRoad"] = args ? args.subBranchRoad : undefined;
            resourceInputs["trailingStrSuffix"] = args ? args.trailingStrSuffix : undefined;
            resourceInputs["unit"] = args ? args.unit : undefined;
            resourceInputs["zip"] = args ? args.zip : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SwitchcontrollerLocationAddresscivic.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SwitchcontrollerLocationAddresscivic resources.
 */
export interface SwitchcontrollerLocationAddresscivicState {
    additional?: pulumi.Input<string>;
    additionalCode?: pulumi.Input<string>;
    block?: pulumi.Input<string>;
    branchRoad?: pulumi.Input<string>;
    building?: pulumi.Input<string>;
    city?: pulumi.Input<string>;
    cityDivision?: pulumi.Input<string>;
    country?: pulumi.Input<string>;
    countrySubdivision?: pulumi.Input<string>;
    county?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    direction?: pulumi.Input<string>;
    floor?: pulumi.Input<string>;
    landmark?: pulumi.Input<string>;
    language?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    number?: pulumi.Input<string>;
    numberSuffix?: pulumi.Input<string>;
    parentKey?: pulumi.Input<string>;
    placeType?: pulumi.Input<string>;
    postOfficeBox?: pulumi.Input<string>;
    postalCommunity?: pulumi.Input<string>;
    primaryRoad?: pulumi.Input<string>;
    roadSection?: pulumi.Input<string>;
    room?: pulumi.Input<string>;
    script?: pulumi.Input<string>;
    seat?: pulumi.Input<string>;
    street?: pulumi.Input<string>;
    streetNamePostMod?: pulumi.Input<string>;
    streetNamePreMod?: pulumi.Input<string>;
    streetSuffix?: pulumi.Input<string>;
    subBranchRoad?: pulumi.Input<string>;
    trailingStrSuffix?: pulumi.Input<string>;
    unit?: pulumi.Input<string>;
    zip?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SwitchcontrollerLocationAddresscivic resource.
 */
export interface SwitchcontrollerLocationAddresscivicArgs {
    additional?: pulumi.Input<string>;
    additionalCode?: pulumi.Input<string>;
    block?: pulumi.Input<string>;
    branchRoad?: pulumi.Input<string>;
    building?: pulumi.Input<string>;
    city?: pulumi.Input<string>;
    cityDivision?: pulumi.Input<string>;
    country?: pulumi.Input<string>;
    countrySubdivision?: pulumi.Input<string>;
    county?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    direction?: pulumi.Input<string>;
    floor?: pulumi.Input<string>;
    landmark?: pulumi.Input<string>;
    language?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    number?: pulumi.Input<string>;
    numberSuffix?: pulumi.Input<string>;
    parentKey?: pulumi.Input<string>;
    placeType?: pulumi.Input<string>;
    postOfficeBox?: pulumi.Input<string>;
    postalCommunity?: pulumi.Input<string>;
    primaryRoad?: pulumi.Input<string>;
    roadSection?: pulumi.Input<string>;
    room?: pulumi.Input<string>;
    script?: pulumi.Input<string>;
    seat?: pulumi.Input<string>;
    street?: pulumi.Input<string>;
    streetNamePostMod?: pulumi.Input<string>;
    streetNamePreMod?: pulumi.Input<string>;
    streetSuffix?: pulumi.Input<string>;
    subBranchRoad?: pulumi.Input<string>;
    trailingStrSuffix?: pulumi.Input<string>;
    unit?: pulumi.Input<string>;
    zip?: pulumi.Input<string>;
}
