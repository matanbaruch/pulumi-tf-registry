// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpnSslWebUserbookmarkBookmarks extends pulumi.CustomResource {
    /**
     * Get an existing VpnSslWebUserbookmarkBookmarks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnSslWebUserbookmarkBookmarksState, opts?: pulumi.CustomResourceOptions): VpnSslWebUserbookmarkBookmarks {
        return new VpnSslWebUserbookmarkBookmarks(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/vpnSslWebUserbookmarkBookmarks:VpnSslWebUserbookmarkBookmarks';

    /**
     * Returns true if the given object is an instance of VpnSslWebUserbookmarkBookmarks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpnSslWebUserbookmarkBookmarks {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpnSslWebUserbookmarkBookmarks.__pulumiType;
    }

    public readonly additionalParams!: pulumi.Output<string | undefined>;
    public readonly apptype!: pulumi.Output<string>;
    public readonly colorDepth!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly domain!: pulumi.Output<string | undefined>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly folder!: pulumi.Output<string | undefined>;
    public readonly formDatas!: pulumi.Output<outputs.VpnSslWebUserbookmarkBookmarksFormData[] | undefined>;
    public readonly height!: pulumi.Output<number | undefined>;
    public readonly host!: pulumi.Output<string | undefined>;
    public readonly keyboardLayout!: pulumi.Output<string>;
    public readonly listeningPort!: pulumi.Output<number | undefined>;
    public readonly loadBalancingInfo!: pulumi.Output<string | undefined>;
    public readonly logonPasswords!: pulumi.Output<string[]>;
    public readonly logonUser!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly preconnectionBlob!: pulumi.Output<string | undefined>;
    public readonly preconnectionId!: pulumi.Output<number | undefined>;
    public readonly remotePort!: pulumi.Output<number | undefined>;
    public readonly restrictedAdmin!: pulumi.Output<string>;
    public readonly security!: pulumi.Output<string | undefined>;
    public readonly sendPreconnectionId!: pulumi.Output<string>;
    public readonly serverLayout!: pulumi.Output<string | undefined>;
    public readonly showStatusWindow!: pulumi.Output<string | undefined>;
    public readonly sso!: pulumi.Output<string>;
    public readonly ssoCredential!: pulumi.Output<string>;
    public readonly ssoCredentialSentOnce!: pulumi.Output<string>;
    public readonly ssoPasswords!: pulumi.Output<string[]>;
    public readonly ssoUsername!: pulumi.Output<string | undefined>;
    public readonly url!: pulumi.Output<string | undefined>;
    public readonly userBookmark!: pulumi.Output<string>;
    public readonly vncKeyboardLayout!: pulumi.Output<string>;
    public readonly width!: pulumi.Output<number | undefined>;

    /**
     * Create a VpnSslWebUserbookmarkBookmarks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnSslWebUserbookmarkBookmarksArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnSslWebUserbookmarkBookmarksArgs | VpnSslWebUserbookmarkBookmarksState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnSslWebUserbookmarkBookmarksState | undefined;
            resourceInputs["additionalParams"] = state ? state.additionalParams : undefined;
            resourceInputs["apptype"] = state ? state.apptype : undefined;
            resourceInputs["colorDepth"] = state ? state.colorDepth : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["folder"] = state ? state.folder : undefined;
            resourceInputs["formDatas"] = state ? state.formDatas : undefined;
            resourceInputs["height"] = state ? state.height : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["keyboardLayout"] = state ? state.keyboardLayout : undefined;
            resourceInputs["listeningPort"] = state ? state.listeningPort : undefined;
            resourceInputs["loadBalancingInfo"] = state ? state.loadBalancingInfo : undefined;
            resourceInputs["logonPasswords"] = state ? state.logonPasswords : undefined;
            resourceInputs["logonUser"] = state ? state.logonUser : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["preconnectionBlob"] = state ? state.preconnectionBlob : undefined;
            resourceInputs["preconnectionId"] = state ? state.preconnectionId : undefined;
            resourceInputs["remotePort"] = state ? state.remotePort : undefined;
            resourceInputs["restrictedAdmin"] = state ? state.restrictedAdmin : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["sendPreconnectionId"] = state ? state.sendPreconnectionId : undefined;
            resourceInputs["serverLayout"] = state ? state.serverLayout : undefined;
            resourceInputs["showStatusWindow"] = state ? state.showStatusWindow : undefined;
            resourceInputs["sso"] = state ? state.sso : undefined;
            resourceInputs["ssoCredential"] = state ? state.ssoCredential : undefined;
            resourceInputs["ssoCredentialSentOnce"] = state ? state.ssoCredentialSentOnce : undefined;
            resourceInputs["ssoPasswords"] = state ? state.ssoPasswords : undefined;
            resourceInputs["ssoUsername"] = state ? state.ssoUsername : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["userBookmark"] = state ? state.userBookmark : undefined;
            resourceInputs["vncKeyboardLayout"] = state ? state.vncKeyboardLayout : undefined;
            resourceInputs["width"] = state ? state.width : undefined;
        } else {
            const args = argsOrState as VpnSslWebUserbookmarkBookmarksArgs | undefined;
            if ((!args || args.userBookmark === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userBookmark'");
            }
            resourceInputs["additionalParams"] = args ? args.additionalParams : undefined;
            resourceInputs["apptype"] = args ? args.apptype : undefined;
            resourceInputs["colorDepth"] = args ? args.colorDepth : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["folder"] = args ? args.folder : undefined;
            resourceInputs["formDatas"] = args ? args.formDatas : undefined;
            resourceInputs["height"] = args ? args.height : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["keyboardLayout"] = args ? args.keyboardLayout : undefined;
            resourceInputs["listeningPort"] = args ? args.listeningPort : undefined;
            resourceInputs["loadBalancingInfo"] = args ? args.loadBalancingInfo : undefined;
            resourceInputs["logonPasswords"] = args?.logonPasswords ? pulumi.secret(args.logonPasswords) : undefined;
            resourceInputs["logonUser"] = args ? args.logonUser : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["preconnectionBlob"] = args ? args.preconnectionBlob : undefined;
            resourceInputs["preconnectionId"] = args ? args.preconnectionId : undefined;
            resourceInputs["remotePort"] = args ? args.remotePort : undefined;
            resourceInputs["restrictedAdmin"] = args ? args.restrictedAdmin : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["sendPreconnectionId"] = args ? args.sendPreconnectionId : undefined;
            resourceInputs["serverLayout"] = args ? args.serverLayout : undefined;
            resourceInputs["showStatusWindow"] = args ? args.showStatusWindow : undefined;
            resourceInputs["sso"] = args ? args.sso : undefined;
            resourceInputs["ssoCredential"] = args ? args.ssoCredential : undefined;
            resourceInputs["ssoCredentialSentOnce"] = args ? args.ssoCredentialSentOnce : undefined;
            resourceInputs["ssoPasswords"] = args?.ssoPasswords ? pulumi.secret(args.ssoPasswords) : undefined;
            resourceInputs["ssoUsername"] = args ? args.ssoUsername : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["userBookmark"] = args ? args.userBookmark : undefined;
            resourceInputs["vncKeyboardLayout"] = args ? args.vncKeyboardLayout : undefined;
            resourceInputs["width"] = args ? args.width : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["logonPasswords", "ssoPasswords"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(VpnSslWebUserbookmarkBookmarks.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpnSslWebUserbookmarkBookmarks resources.
 */
export interface VpnSslWebUserbookmarkBookmarksState {
    additionalParams?: pulumi.Input<string>;
    apptype?: pulumi.Input<string>;
    colorDepth?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    formDatas?: pulumi.Input<pulumi.Input<inputs.VpnSslWebUserbookmarkBookmarksFormData>[]>;
    height?: pulumi.Input<number>;
    host?: pulumi.Input<string>;
    keyboardLayout?: pulumi.Input<string>;
    listeningPort?: pulumi.Input<number>;
    loadBalancingInfo?: pulumi.Input<string>;
    logonPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    logonUser?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    preconnectionBlob?: pulumi.Input<string>;
    preconnectionId?: pulumi.Input<number>;
    remotePort?: pulumi.Input<number>;
    restrictedAdmin?: pulumi.Input<string>;
    security?: pulumi.Input<string>;
    sendPreconnectionId?: pulumi.Input<string>;
    serverLayout?: pulumi.Input<string>;
    showStatusWindow?: pulumi.Input<string>;
    sso?: pulumi.Input<string>;
    ssoCredential?: pulumi.Input<string>;
    ssoCredentialSentOnce?: pulumi.Input<string>;
    ssoPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    ssoUsername?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userBookmark?: pulumi.Input<string>;
    vncKeyboardLayout?: pulumi.Input<string>;
    width?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VpnSslWebUserbookmarkBookmarks resource.
 */
export interface VpnSslWebUserbookmarkBookmarksArgs {
    additionalParams?: pulumi.Input<string>;
    apptype?: pulumi.Input<string>;
    colorDepth?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    domain?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    folder?: pulumi.Input<string>;
    formDatas?: pulumi.Input<pulumi.Input<inputs.VpnSslWebUserbookmarkBookmarksFormData>[]>;
    height?: pulumi.Input<number>;
    host?: pulumi.Input<string>;
    keyboardLayout?: pulumi.Input<string>;
    listeningPort?: pulumi.Input<number>;
    loadBalancingInfo?: pulumi.Input<string>;
    logonPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    logonUser?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    preconnectionBlob?: pulumi.Input<string>;
    preconnectionId?: pulumi.Input<number>;
    remotePort?: pulumi.Input<number>;
    restrictedAdmin?: pulumi.Input<string>;
    security?: pulumi.Input<string>;
    sendPreconnectionId?: pulumi.Input<string>;
    serverLayout?: pulumi.Input<string>;
    showStatusWindow?: pulumi.Input<string>;
    sso?: pulumi.Input<string>;
    ssoCredential?: pulumi.Input<string>;
    ssoCredentialSentOnce?: pulumi.Input<string>;
    ssoPasswords?: pulumi.Input<pulumi.Input<string>[]>;
    ssoUsername?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userBookmark: pulumi.Input<string>;
    vncKeyboardLayout?: pulumi.Input<string>;
    width?: pulumi.Input<number>;
}
