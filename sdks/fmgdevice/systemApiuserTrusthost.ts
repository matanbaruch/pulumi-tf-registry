// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemApiuserTrusthost extends pulumi.CustomResource {
    /**
     * Get an existing SystemApiuserTrusthost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemApiuserTrusthostState, opts?: pulumi.CustomResourceOptions): SystemApiuserTrusthost {
        return new SystemApiuserTrusthost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemApiuserTrusthost:SystemApiuserTrusthost';

    /**
     * Returns true if the given object is an instance of SystemApiuserTrusthost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemApiuserTrusthost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemApiuserTrusthost.__pulumiType;
    }

    public readonly apiUser!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly fosid!: pulumi.Output<number | undefined>;
    public readonly ipv4Trusthosts!: pulumi.Output<string[]>;
    public readonly ipv6Trusthost!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a SystemApiuserTrusthost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemApiuserTrusthostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemApiuserTrusthostArgs | SystemApiuserTrusthostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemApiuserTrusthostState | undefined;
            resourceInputs["apiUser"] = state ? state.apiUser : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["fosid"] = state ? state.fosid : undefined;
            resourceInputs["ipv4Trusthosts"] = state ? state.ipv4Trusthosts : undefined;
            resourceInputs["ipv6Trusthost"] = state ? state.ipv6Trusthost : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SystemApiuserTrusthostArgs | undefined;
            if ((!args || args.apiUser === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiUser'");
            }
            resourceInputs["apiUser"] = args ? args.apiUser : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["fosid"] = args ? args.fosid : undefined;
            resourceInputs["ipv4Trusthosts"] = args ? args.ipv4Trusthosts : undefined;
            resourceInputs["ipv6Trusthost"] = args ? args.ipv6Trusthost : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemApiuserTrusthost.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemApiuserTrusthost resources.
 */
export interface SystemApiuserTrusthostState {
    apiUser?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    ipv4Trusthosts?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6Trusthost?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemApiuserTrusthost resource.
 */
export interface SystemApiuserTrusthostArgs {
    apiUser: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    fosid?: pulumi.Input<number>;
    ipv4Trusthosts?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6Trusthost?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
