// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RouterOspfAreaVirtuallink extends pulumi.CustomResource {
    /**
     * Get an existing RouterOspfAreaVirtuallink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterOspfAreaVirtuallinkState, opts?: pulumi.CustomResourceOptions): RouterOspfAreaVirtuallink {
        return new RouterOspfAreaVirtuallink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/routerOspfAreaVirtuallink:RouterOspfAreaVirtuallink';

    /**
     * Returns true if the given object is an instance of RouterOspfAreaVirtuallink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouterOspfAreaVirtuallink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouterOspfAreaVirtuallink.__pulumiType;
    }

    public readonly area!: pulumi.Output<string>;
    public readonly authentication!: pulumi.Output<string>;
    public readonly authenticationKeys!: pulumi.Output<string[]>;
    public readonly deadInterval!: pulumi.Output<number>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly helloInterval!: pulumi.Output<number>;
    public readonly keychains!: pulumi.Output<string[]>;
    public readonly md5Keychains!: pulumi.Output<string[]>;
    public readonly md5Keys!: pulumi.Output<outputs.RouterOspfAreaVirtuallinkMd5Key[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly peer!: pulumi.Output<string>;
    public readonly retransmitInterval!: pulumi.Output<number>;
    public readonly transmitDelay!: pulumi.Output<number>;

    /**
     * Create a RouterOspfAreaVirtuallink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterOspfAreaVirtuallinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterOspfAreaVirtuallinkArgs | RouterOspfAreaVirtuallinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouterOspfAreaVirtuallinkState | undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["authenticationKeys"] = state ? state.authenticationKeys : undefined;
            resourceInputs["deadInterval"] = state ? state.deadInterval : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["helloInterval"] = state ? state.helloInterval : undefined;
            resourceInputs["keychains"] = state ? state.keychains : undefined;
            resourceInputs["md5Keychains"] = state ? state.md5Keychains : undefined;
            resourceInputs["md5Keys"] = state ? state.md5Keys : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["peer"] = state ? state.peer : undefined;
            resourceInputs["retransmitInterval"] = state ? state.retransmitInterval : undefined;
            resourceInputs["transmitDelay"] = state ? state.transmitDelay : undefined;
        } else {
            const args = argsOrState as RouterOspfAreaVirtuallinkArgs | undefined;
            if ((!args || args.area === undefined) && !opts.urn) {
                throw new Error("Missing required property 'area'");
            }
            resourceInputs["area"] = args ? args.area : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["authenticationKeys"] = args?.authenticationKeys ? pulumi.secret(args.authenticationKeys) : undefined;
            resourceInputs["deadInterval"] = args ? args.deadInterval : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["helloInterval"] = args ? args.helloInterval : undefined;
            resourceInputs["keychains"] = args ? args.keychains : undefined;
            resourceInputs["md5Keychains"] = args ? args.md5Keychains : undefined;
            resourceInputs["md5Keys"] = args ? args.md5Keys : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["peer"] = args ? args.peer : undefined;
            resourceInputs["retransmitInterval"] = args ? args.retransmitInterval : undefined;
            resourceInputs["transmitDelay"] = args ? args.transmitDelay : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authenticationKeys"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RouterOspfAreaVirtuallink.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RouterOspfAreaVirtuallink resources.
 */
export interface RouterOspfAreaVirtuallinkState {
    area?: pulumi.Input<string>;
    authentication?: pulumi.Input<string>;
    authenticationKeys?: pulumi.Input<pulumi.Input<string>[]>;
    deadInterval?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    helloInterval?: pulumi.Input<number>;
    keychains?: pulumi.Input<pulumi.Input<string>[]>;
    md5Keychains?: pulumi.Input<pulumi.Input<string>[]>;
    md5Keys?: pulumi.Input<pulumi.Input<inputs.RouterOspfAreaVirtuallinkMd5Key>[]>;
    name?: pulumi.Input<string>;
    peer?: pulumi.Input<string>;
    retransmitInterval?: pulumi.Input<number>;
    transmitDelay?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a RouterOspfAreaVirtuallink resource.
 */
export interface RouterOspfAreaVirtuallinkArgs {
    area: pulumi.Input<string>;
    authentication?: pulumi.Input<string>;
    authenticationKeys?: pulumi.Input<pulumi.Input<string>[]>;
    deadInterval?: pulumi.Input<number>;
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    dynamicSortSubtable?: pulumi.Input<string>;
    helloInterval?: pulumi.Input<number>;
    keychains?: pulumi.Input<pulumi.Input<string>[]>;
    md5Keychains?: pulumi.Input<pulumi.Input<string>[]>;
    md5Keys?: pulumi.Input<pulumi.Input<inputs.RouterOspfAreaVirtuallinkMd5Key>[]>;
    name?: pulumi.Input<string>;
    peer?: pulumi.Input<string>;
    retransmitInterval?: pulumi.Input<number>;
    transmitDelay?: pulumi.Input<number>;
}
