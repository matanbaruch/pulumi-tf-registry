// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DpdkCpus extends pulumi.CustomResource {
    /**
     * Get an existing DpdkCpus resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DpdkCpusState, opts?: pulumi.CustomResourceOptions): DpdkCpus {
        return new DpdkCpus(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/dpdkCpus:DpdkCpus';

    /**
     * Returns true if the given object is an instance of DpdkCpus.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DpdkCpus {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DpdkCpus.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly ipsCpus!: pulumi.Output<string | undefined>;
    public readonly isolatedCpus!: pulumi.Output<string>;
    public readonly rxCpus!: pulumi.Output<string>;
    public readonly txCpus!: pulumi.Output<string>;
    public readonly vnpCpus!: pulumi.Output<string>;
    public readonly vnpspCpus!: pulumi.Output<string>;

    /**
     * Create a DpdkCpus resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DpdkCpusArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DpdkCpusArgs | DpdkCpusState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DpdkCpusState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["ipsCpus"] = state ? state.ipsCpus : undefined;
            resourceInputs["isolatedCpus"] = state ? state.isolatedCpus : undefined;
            resourceInputs["rxCpus"] = state ? state.rxCpus : undefined;
            resourceInputs["txCpus"] = state ? state.txCpus : undefined;
            resourceInputs["vnpCpus"] = state ? state.vnpCpus : undefined;
            resourceInputs["vnpspCpus"] = state ? state.vnpspCpus : undefined;
        } else {
            const args = argsOrState as DpdkCpusArgs | undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["ipsCpus"] = args ? args.ipsCpus : undefined;
            resourceInputs["isolatedCpus"] = args ? args.isolatedCpus : undefined;
            resourceInputs["rxCpus"] = args ? args.rxCpus : undefined;
            resourceInputs["txCpus"] = args ? args.txCpus : undefined;
            resourceInputs["vnpCpus"] = args ? args.vnpCpus : undefined;
            resourceInputs["vnpspCpus"] = args ? args.vnpspCpus : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DpdkCpus.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DpdkCpus resources.
 */
export interface DpdkCpusState {
    deviceName?: pulumi.Input<string>;
    ipsCpus?: pulumi.Input<string>;
    isolatedCpus?: pulumi.Input<string>;
    rxCpus?: pulumi.Input<string>;
    txCpus?: pulumi.Input<string>;
    vnpCpus?: pulumi.Input<string>;
    vnpspCpus?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DpdkCpus resource.
 */
export interface DpdkCpusArgs {
    deviceName?: pulumi.Input<string>;
    ipsCpus?: pulumi.Input<string>;
    isolatedCpus?: pulumi.Input<string>;
    rxCpus?: pulumi.Input<string>;
    txCpus?: pulumi.Input<string>;
    vnpCpus?: pulumi.Input<string>;
    vnpspCpus?: pulumi.Input<string>;
}
