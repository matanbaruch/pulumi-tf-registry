// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemHaVcluster extends pulumi.CustomResource {
    /**
     * Get an existing SystemHaVcluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemHaVclusterState, opts?: pulumi.CustomResourceOptions): SystemHaVcluster {
        return new SystemHaVcluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemHaVcluster:SystemHaVcluster';

    /**
     * Returns true if the given object is an instance of SystemHaVcluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemHaVcluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemHaVcluster.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly monitors!: pulumi.Output<string[]>;
    public readonly override!: pulumi.Output<string>;
    public readonly overrideWaitTime!: pulumi.Output<number | undefined>;
    public readonly pingserverFailoverThreshold!: pulumi.Output<number | undefined>;
    public readonly pingserverFlipTimeout!: pulumi.Output<number>;
    public readonly pingserverMonitorInterfaces!: pulumi.Output<string[]>;
    public readonly pingserverSecondaryForceReset!: pulumi.Output<string>;
    public readonly pingserverSlaveForceReset!: pulumi.Output<string | undefined>;
    public readonly priority!: pulumi.Output<number>;
    public readonly vclusterId!: pulumi.Output<number | undefined>;
    public readonly vdoms!: pulumi.Output<string[]>;

    /**
     * Create a SystemHaVcluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SystemHaVclusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemHaVclusterArgs | SystemHaVclusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemHaVclusterState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["monitors"] = state ? state.monitors : undefined;
            resourceInputs["override"] = state ? state.override : undefined;
            resourceInputs["overrideWaitTime"] = state ? state.overrideWaitTime : undefined;
            resourceInputs["pingserverFailoverThreshold"] = state ? state.pingserverFailoverThreshold : undefined;
            resourceInputs["pingserverFlipTimeout"] = state ? state.pingserverFlipTimeout : undefined;
            resourceInputs["pingserverMonitorInterfaces"] = state ? state.pingserverMonitorInterfaces : undefined;
            resourceInputs["pingserverSecondaryForceReset"] = state ? state.pingserverSecondaryForceReset : undefined;
            resourceInputs["pingserverSlaveForceReset"] = state ? state.pingserverSlaveForceReset : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["vclusterId"] = state ? state.vclusterId : undefined;
            resourceInputs["vdoms"] = state ? state.vdoms : undefined;
        } else {
            const args = argsOrState as SystemHaVclusterArgs | undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["monitors"] = args ? args.monitors : undefined;
            resourceInputs["override"] = args ? args.override : undefined;
            resourceInputs["overrideWaitTime"] = args ? args.overrideWaitTime : undefined;
            resourceInputs["pingserverFailoverThreshold"] = args ? args.pingserverFailoverThreshold : undefined;
            resourceInputs["pingserverFlipTimeout"] = args ? args.pingserverFlipTimeout : undefined;
            resourceInputs["pingserverMonitorInterfaces"] = args ? args.pingserverMonitorInterfaces : undefined;
            resourceInputs["pingserverSecondaryForceReset"] = args ? args.pingserverSecondaryForceReset : undefined;
            resourceInputs["pingserverSlaveForceReset"] = args ? args.pingserverSlaveForceReset : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["vclusterId"] = args ? args.vclusterId : undefined;
            resourceInputs["vdoms"] = args ? args.vdoms : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemHaVcluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemHaVcluster resources.
 */
export interface SystemHaVclusterState {
    deviceName?: pulumi.Input<string>;
    monitors?: pulumi.Input<pulumi.Input<string>[]>;
    override?: pulumi.Input<string>;
    overrideWaitTime?: pulumi.Input<number>;
    pingserverFailoverThreshold?: pulumi.Input<number>;
    pingserverFlipTimeout?: pulumi.Input<number>;
    pingserverMonitorInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    pingserverSecondaryForceReset?: pulumi.Input<string>;
    pingserverSlaveForceReset?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    vclusterId?: pulumi.Input<number>;
    vdoms?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SystemHaVcluster resource.
 */
export interface SystemHaVclusterArgs {
    deviceName?: pulumi.Input<string>;
    monitors?: pulumi.Input<pulumi.Input<string>[]>;
    override?: pulumi.Input<string>;
    overrideWaitTime?: pulumi.Input<number>;
    pingserverFailoverThreshold?: pulumi.Input<number>;
    pingserverFlipTimeout?: pulumi.Input<number>;
    pingserverMonitorInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    pingserverSecondaryForceReset?: pulumi.Input<string>;
    pingserverSlaveForceReset?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    vclusterId?: pulumi.Input<number>;
    vdoms?: pulumi.Input<pulumi.Input<string>[]>;
}
