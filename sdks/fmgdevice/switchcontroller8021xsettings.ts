// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Switchcontroller8021xsettings extends pulumi.CustomResource {
    /**
     * Get an existing Switchcontroller8021xsettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Switchcontroller8021xsettingsState, opts?: pulumi.CustomResourceOptions): Switchcontroller8021xsettings {
        return new Switchcontroller8021xsettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/switchcontroller8021xsettings:Switchcontroller8021xsettings';

    /**
     * Returns true if the given object is an instance of Switchcontroller8021xsettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Switchcontroller8021xsettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Switchcontroller8021xsettings.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly deviceVdom!: pulumi.Output<string>;
    public readonly linkDownAuth!: pulumi.Output<string>;
    public readonly mabReauth!: pulumi.Output<string>;
    public readonly macCalledStationDelimiter!: pulumi.Output<string>;
    public readonly macCallingStationDelimiter!: pulumi.Output<string>;
    public readonly macCase!: pulumi.Output<string>;
    public readonly macPasswordDelimiter!: pulumi.Output<string>;
    public readonly macUsernameDelimiter!: pulumi.Output<string>;
    public readonly maxReauthAttempt!: pulumi.Output<number>;
    public readonly reauthPeriod!: pulumi.Output<number>;
    public readonly txPeriod!: pulumi.Output<number>;

    /**
     * Create a Switchcontroller8021xsettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Switchcontroller8021xsettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Switchcontroller8021xsettingsArgs | Switchcontroller8021xsettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Switchcontroller8021xsettingsState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["deviceVdom"] = state ? state.deviceVdom : undefined;
            resourceInputs["linkDownAuth"] = state ? state.linkDownAuth : undefined;
            resourceInputs["mabReauth"] = state ? state.mabReauth : undefined;
            resourceInputs["macCalledStationDelimiter"] = state ? state.macCalledStationDelimiter : undefined;
            resourceInputs["macCallingStationDelimiter"] = state ? state.macCallingStationDelimiter : undefined;
            resourceInputs["macCase"] = state ? state.macCase : undefined;
            resourceInputs["macPasswordDelimiter"] = state ? state.macPasswordDelimiter : undefined;
            resourceInputs["macUsernameDelimiter"] = state ? state.macUsernameDelimiter : undefined;
            resourceInputs["maxReauthAttempt"] = state ? state.maxReauthAttempt : undefined;
            resourceInputs["reauthPeriod"] = state ? state.reauthPeriod : undefined;
            resourceInputs["txPeriod"] = state ? state.txPeriod : undefined;
        } else {
            const args = argsOrState as Switchcontroller8021xsettingsArgs | undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["deviceVdom"] = args ? args.deviceVdom : undefined;
            resourceInputs["linkDownAuth"] = args ? args.linkDownAuth : undefined;
            resourceInputs["mabReauth"] = args ? args.mabReauth : undefined;
            resourceInputs["macCalledStationDelimiter"] = args ? args.macCalledStationDelimiter : undefined;
            resourceInputs["macCallingStationDelimiter"] = args ? args.macCallingStationDelimiter : undefined;
            resourceInputs["macCase"] = args ? args.macCase : undefined;
            resourceInputs["macPasswordDelimiter"] = args ? args.macPasswordDelimiter : undefined;
            resourceInputs["macUsernameDelimiter"] = args ? args.macUsernameDelimiter : undefined;
            resourceInputs["maxReauthAttempt"] = args ? args.maxReauthAttempt : undefined;
            resourceInputs["reauthPeriod"] = args ? args.reauthPeriod : undefined;
            resourceInputs["txPeriod"] = args ? args.txPeriod : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Switchcontroller8021xsettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Switchcontroller8021xsettings resources.
 */
export interface Switchcontroller8021xsettingsState {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    linkDownAuth?: pulumi.Input<string>;
    mabReauth?: pulumi.Input<string>;
    macCalledStationDelimiter?: pulumi.Input<string>;
    macCallingStationDelimiter?: pulumi.Input<string>;
    macCase?: pulumi.Input<string>;
    macPasswordDelimiter?: pulumi.Input<string>;
    macUsernameDelimiter?: pulumi.Input<string>;
    maxReauthAttempt?: pulumi.Input<number>;
    reauthPeriod?: pulumi.Input<number>;
    txPeriod?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Switchcontroller8021xsettings resource.
 */
export interface Switchcontroller8021xsettingsArgs {
    deviceName?: pulumi.Input<string>;
    deviceVdom?: pulumi.Input<string>;
    linkDownAuth?: pulumi.Input<string>;
    mabReauth?: pulumi.Input<string>;
    macCalledStationDelimiter?: pulumi.Input<string>;
    macCallingStationDelimiter?: pulumi.Input<string>;
    macCase?: pulumi.Input<string>;
    macPasswordDelimiter?: pulumi.Input<string>;
    macUsernameDelimiter?: pulumi.Input<string>;
    maxReauthAttempt?: pulumi.Input<number>;
    reauthPeriod?: pulumi.Input<number>;
    txPeriod?: pulumi.Input<number>;
}
