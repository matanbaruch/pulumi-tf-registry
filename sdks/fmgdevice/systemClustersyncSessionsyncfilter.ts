// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SystemClustersyncSessionsyncfilter extends pulumi.CustomResource {
    /**
     * Get an existing SystemClustersyncSessionsyncfilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemClustersyncSessionsyncfilterState, opts?: pulumi.CustomResourceOptions): SystemClustersyncSessionsyncfilter {
        return new SystemClustersyncSessionsyncfilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemClustersyncSessionsyncfilter:SystemClustersyncSessionsyncfilter';

    /**
     * Returns true if the given object is an instance of SystemClustersyncSessionsyncfilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemClustersyncSessionsyncfilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemClustersyncSessionsyncfilter.__pulumiType;
    }

    public readonly clusterSync!: pulumi.Output<string>;
    public readonly customServices!: pulumi.Output<outputs.SystemClustersyncSessionsyncfilterCustomService[] | undefined>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly dstaddr6!: pulumi.Output<string>;
    public readonly dstaddrs!: pulumi.Output<string[]>;
    public readonly dstintfs!: pulumi.Output<string[]>;
    public readonly dynamicSortSubtable!: pulumi.Output<string | undefined>;
    public readonly srcaddr6!: pulumi.Output<string>;
    public readonly srcaddrs!: pulumi.Output<string[]>;
    public readonly srcintf!: pulumi.Output<string | undefined>;

    /**
     * Create a SystemClustersyncSessionsyncfilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemClustersyncSessionsyncfilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemClustersyncSessionsyncfilterArgs | SystemClustersyncSessionsyncfilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemClustersyncSessionsyncfilterState | undefined;
            resourceInputs["clusterSync"] = state ? state.clusterSync : undefined;
            resourceInputs["customServices"] = state ? state.customServices : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["dstaddr6"] = state ? state.dstaddr6 : undefined;
            resourceInputs["dstaddrs"] = state ? state.dstaddrs : undefined;
            resourceInputs["dstintfs"] = state ? state.dstintfs : undefined;
            resourceInputs["dynamicSortSubtable"] = state ? state.dynamicSortSubtable : undefined;
            resourceInputs["srcaddr6"] = state ? state.srcaddr6 : undefined;
            resourceInputs["srcaddrs"] = state ? state.srcaddrs : undefined;
            resourceInputs["srcintf"] = state ? state.srcintf : undefined;
        } else {
            const args = argsOrState as SystemClustersyncSessionsyncfilterArgs | undefined;
            if ((!args || args.clusterSync === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterSync'");
            }
            resourceInputs["clusterSync"] = args ? args.clusterSync : undefined;
            resourceInputs["customServices"] = args ? args.customServices : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["dstaddr6"] = args ? args.dstaddr6 : undefined;
            resourceInputs["dstaddrs"] = args ? args.dstaddrs : undefined;
            resourceInputs["dstintfs"] = args ? args.dstintfs : undefined;
            resourceInputs["dynamicSortSubtable"] = args ? args.dynamicSortSubtable : undefined;
            resourceInputs["srcaddr6"] = args ? args.srcaddr6 : undefined;
            resourceInputs["srcaddrs"] = args ? args.srcaddrs : undefined;
            resourceInputs["srcintf"] = args ? args.srcintf : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemClustersyncSessionsyncfilter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemClustersyncSessionsyncfilter resources.
 */
export interface SystemClustersyncSessionsyncfilterState {
    clusterSync?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.SystemClustersyncSessionsyncfilterCustomService>[]>;
    deviceName?: pulumi.Input<string>;
    dstaddr6?: pulumi.Input<string>;
    dstaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    dstintfs?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    srcaddr6?: pulumi.Input<string>;
    srcaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    srcintf?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SystemClustersyncSessionsyncfilter resource.
 */
export interface SystemClustersyncSessionsyncfilterArgs {
    clusterSync: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.SystemClustersyncSessionsyncfilterCustomService>[]>;
    deviceName?: pulumi.Input<string>;
    dstaddr6?: pulumi.Input<string>;
    dstaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    dstintfs?: pulumi.Input<pulumi.Input<string>[]>;
    dynamicSortSubtable?: pulumi.Input<string>;
    srcaddr6?: pulumi.Input<string>;
    srcaddrs?: pulumi.Input<pulumi.Input<string>[]>;
    srcintf?: pulumi.Input<string>;
}
