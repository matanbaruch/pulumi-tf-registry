// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SystemInterfaceIpv6Dhcp6iapdlist extends pulumi.CustomResource {
    /**
     * Get an existing SystemInterfaceIpv6Dhcp6iapdlist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemInterfaceIpv6Dhcp6iapdlistState, opts?: pulumi.CustomResourceOptions): SystemInterfaceIpv6Dhcp6iapdlist {
        return new SystemInterfaceIpv6Dhcp6iapdlist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/systemInterfaceIpv6Dhcp6iapdlist:SystemInterfaceIpv6Dhcp6iapdlist';

    /**
     * Returns true if the given object is an instance of SystemInterfaceIpv6Dhcp6iapdlist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemInterfaceIpv6Dhcp6iapdlist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemInterfaceIpv6Dhcp6iapdlist.__pulumiType;
    }

    public readonly deviceName!: pulumi.Output<string>;
    public readonly iaid!: pulumi.Output<number | undefined>;
    public readonly interface!: pulumi.Output<string>;
    public readonly prefixHint!: pulumi.Output<string>;
    public readonly prefixHintPlt!: pulumi.Output<number>;
    public readonly prefixHintVlt!: pulumi.Output<number>;

    /**
     * Create a SystemInterfaceIpv6Dhcp6iapdlist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemInterfaceIpv6Dhcp6iapdlistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemInterfaceIpv6Dhcp6iapdlistArgs | SystemInterfaceIpv6Dhcp6iapdlistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemInterfaceIpv6Dhcp6iapdlistState | undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["iaid"] = state ? state.iaid : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["prefixHint"] = state ? state.prefixHint : undefined;
            resourceInputs["prefixHintPlt"] = state ? state.prefixHintPlt : undefined;
            resourceInputs["prefixHintVlt"] = state ? state.prefixHintVlt : undefined;
        } else {
            const args = argsOrState as SystemInterfaceIpv6Dhcp6iapdlistArgs | undefined;
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["iaid"] = args ? args.iaid : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["prefixHint"] = args ? args.prefixHint : undefined;
            resourceInputs["prefixHintPlt"] = args ? args.prefixHintPlt : undefined;
            resourceInputs["prefixHintVlt"] = args ? args.prefixHintVlt : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemInterfaceIpv6Dhcp6iapdlist.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SystemInterfaceIpv6Dhcp6iapdlist resources.
 */
export interface SystemInterfaceIpv6Dhcp6iapdlistState {
    deviceName?: pulumi.Input<string>;
    iaid?: pulumi.Input<number>;
    interface?: pulumi.Input<string>;
    prefixHint?: pulumi.Input<string>;
    prefixHintPlt?: pulumi.Input<number>;
    prefixHintVlt?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SystemInterfaceIpv6Dhcp6iapdlist resource.
 */
export interface SystemInterfaceIpv6Dhcp6iapdlistArgs {
    deviceName?: pulumi.Input<string>;
    iaid?: pulumi.Input<number>;
    interface: pulumi.Input<string>;
    prefixHint?: pulumi.Input<string>;
    prefixHintPlt?: pulumi.Input<number>;
    prefixHintVlt?: pulumi.Input<number>;
}
