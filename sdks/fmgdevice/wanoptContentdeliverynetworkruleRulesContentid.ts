// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WanoptContentdeliverynetworkruleRulesContentid extends pulumi.CustomResource {
    /**
     * Get an existing WanoptContentdeliverynetworkruleRulesContentid resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WanoptContentdeliverynetworkruleRulesContentidState, opts?: pulumi.CustomResourceOptions): WanoptContentdeliverynetworkruleRulesContentid {
        return new WanoptContentdeliverynetworkruleRulesContentid(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fmgdevice:index/wanoptContentdeliverynetworkruleRulesContentid:WanoptContentdeliverynetworkruleRulesContentid';

    /**
     * Returns true if the given object is an instance of WanoptContentdeliverynetworkruleRulesContentid.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WanoptContentdeliverynetworkruleRulesContentid {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WanoptContentdeliverynetworkruleRulesContentid.__pulumiType;
    }

    public readonly contentDeliveryNetworkRule!: pulumi.Output<string>;
    public readonly deviceName!: pulumi.Output<string>;
    public readonly endDirection!: pulumi.Output<string>;
    public readonly endSkip!: pulumi.Output<number | undefined>;
    public readonly endStr!: pulumi.Output<string | undefined>;
    public readonly rangeStr!: pulumi.Output<string | undefined>;
    public readonly rules!: pulumi.Output<string>;
    public readonly startDirection!: pulumi.Output<string>;
    public readonly startSkip!: pulumi.Output<number | undefined>;
    public readonly startStr!: pulumi.Output<string | undefined>;
    public readonly target!: pulumi.Output<string>;

    /**
     * Create a WanoptContentdeliverynetworkruleRulesContentid resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WanoptContentdeliverynetworkruleRulesContentidArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WanoptContentdeliverynetworkruleRulesContentidArgs | WanoptContentdeliverynetworkruleRulesContentidState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WanoptContentdeliverynetworkruleRulesContentidState | undefined;
            resourceInputs["contentDeliveryNetworkRule"] = state ? state.contentDeliveryNetworkRule : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["endDirection"] = state ? state.endDirection : undefined;
            resourceInputs["endSkip"] = state ? state.endSkip : undefined;
            resourceInputs["endStr"] = state ? state.endStr : undefined;
            resourceInputs["rangeStr"] = state ? state.rangeStr : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["startDirection"] = state ? state.startDirection : undefined;
            resourceInputs["startSkip"] = state ? state.startSkip : undefined;
            resourceInputs["startStr"] = state ? state.startStr : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
        } else {
            const args = argsOrState as WanoptContentdeliverynetworkruleRulesContentidArgs | undefined;
            if ((!args || args.contentDeliveryNetworkRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentDeliveryNetworkRule'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            resourceInputs["contentDeliveryNetworkRule"] = args ? args.contentDeliveryNetworkRule : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["endDirection"] = args ? args.endDirection : undefined;
            resourceInputs["endSkip"] = args ? args.endSkip : undefined;
            resourceInputs["endStr"] = args ? args.endStr : undefined;
            resourceInputs["rangeStr"] = args ? args.rangeStr : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["startDirection"] = args ? args.startDirection : undefined;
            resourceInputs["startSkip"] = args ? args.startSkip : undefined;
            resourceInputs["startStr"] = args ? args.startStr : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WanoptContentdeliverynetworkruleRulesContentid.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WanoptContentdeliverynetworkruleRulesContentid resources.
 */
export interface WanoptContentdeliverynetworkruleRulesContentidState {
    contentDeliveryNetworkRule?: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    endDirection?: pulumi.Input<string>;
    endSkip?: pulumi.Input<number>;
    endStr?: pulumi.Input<string>;
    rangeStr?: pulumi.Input<string>;
    rules?: pulumi.Input<string>;
    startDirection?: pulumi.Input<string>;
    startSkip?: pulumi.Input<number>;
    startStr?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WanoptContentdeliverynetworkruleRulesContentid resource.
 */
export interface WanoptContentdeliverynetworkruleRulesContentidArgs {
    contentDeliveryNetworkRule: pulumi.Input<string>;
    deviceName?: pulumi.Input<string>;
    endDirection?: pulumi.Input<string>;
    endSkip?: pulumi.Input<number>;
    endStr?: pulumi.Input<string>;
    rangeStr?: pulumi.Input<string>;
    rules: pulumi.Input<string>;
    startDirection?: pulumi.Input<string>;
    startSkip?: pulumi.Input<number>;
    startStr?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}
