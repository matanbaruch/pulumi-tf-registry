// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVariable(args: GetVariableArgs, opts?: pulumi.InvokeOptions): Promise<GetVariableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("devcycle:index/getVariable:getVariable", {
        "key": args.key,
        "projectKey": args.projectKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVariable.
 */
export interface GetVariableArgs {
    key: string;
    projectKey: string;
}

/**
 * A collection of values returned by getVariable.
 */
export interface GetVariableResult {
    readonly description: string;
    readonly featureId: string;
    readonly id: string;
    readonly key: string;
    readonly name: string;
    readonly projectId: string;
    readonly projectKey: string;
    readonly type: string;
}
export function getVariableOutput(args: GetVariableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVariableResult> {
    return pulumi.output(args).apply((a: any) => getVariable(a, opts))
}

/**
 * A collection of arguments for invoking getVariable.
 */
export interface GetVariableOutputArgs {
    key: pulumi.Input<string>;
    projectKey: pulumi.Input<string>;
}
