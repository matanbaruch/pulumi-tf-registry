// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEvaluatedVariableString(args: GetEvaluatedVariableStringArgs, opts?: pulumi.InvokeOptions): Promise<GetEvaluatedVariableStringResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("devcycle:index/getEvaluatedVariableString:getEvaluatedVariableString", {
        "defaultValue": args.defaultValue,
        "id": args.id,
        "user": args.user,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvaluatedVariableString.
 */
export interface GetEvaluatedVariableStringArgs {
    defaultValue: string;
    id: string;
    user: inputs.GetEvaluatedVariableStringUser;
}

/**
 * A collection of values returned by getEvaluatedVariableString.
 */
export interface GetEvaluatedVariableStringResult {
    readonly defaultValue: string;
    readonly id: string;
    readonly user: outputs.GetEvaluatedVariableStringUser;
    readonly value: string;
}
export function getEvaluatedVariableStringOutput(args: GetEvaluatedVariableStringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvaluatedVariableStringResult> {
    return pulumi.output(args).apply((a: any) => getEvaluatedVariableString(a, opts))
}

/**
 * A collection of arguments for invoking getEvaluatedVariableString.
 */
export interface GetEvaluatedVariableStringOutputArgs {
    defaultValue: pulumi.Input<string>;
    id: pulumi.Input<string>;
    user: pulumi.Input<inputs.GetEvaluatedVariableStringUserArgs>;
}
