// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEvaluatedVariableBoolean(args: GetEvaluatedVariableBooleanArgs, opts?: pulumi.InvokeOptions): Promise<GetEvaluatedVariableBooleanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("devcycle:index/getEvaluatedVariableBoolean:getEvaluatedVariableBoolean", {
        "defaultValue": args.defaultValue,
        "id": args.id,
        "user": args.user,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvaluatedVariableBoolean.
 */
export interface GetEvaluatedVariableBooleanArgs {
    defaultValue: boolean;
    id: string;
    user: inputs.GetEvaluatedVariableBooleanUser;
}

/**
 * A collection of values returned by getEvaluatedVariableBoolean.
 */
export interface GetEvaluatedVariableBooleanResult {
    readonly defaultValue: boolean;
    readonly id: string;
    readonly user: outputs.GetEvaluatedVariableBooleanUser;
    readonly value: boolean;
}
export function getEvaluatedVariableBooleanOutput(args: GetEvaluatedVariableBooleanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvaluatedVariableBooleanResult> {
    return pulumi.output(args).apply((a: any) => getEvaluatedVariableBoolean(a, opts))
}

/**
 * A collection of arguments for invoking getEvaluatedVariableBoolean.
 */
export interface GetEvaluatedVariableBooleanOutputArgs {
    defaultValue: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    user: pulumi.Input<inputs.GetEvaluatedVariableBooleanUserArgs>;
}
