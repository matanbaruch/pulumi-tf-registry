// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEvaluatedVariableJson(args: GetEvaluatedVariableJsonArgs, opts?: pulumi.InvokeOptions): Promise<GetEvaluatedVariableJsonResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("devcycle:index/getEvaluatedVariableJson:getEvaluatedVariableJson", {
        "defaultValue": args.defaultValue,
        "id": args.id,
        "user": args.user,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvaluatedVariableJson.
 */
export interface GetEvaluatedVariableJsonArgs {
    defaultValue: string;
    id: string;
    user: inputs.GetEvaluatedVariableJsonUser;
}

/**
 * A collection of values returned by getEvaluatedVariableJson.
 */
export interface GetEvaluatedVariableJsonResult {
    readonly defaultValue: string;
    readonly id: string;
    readonly user: outputs.GetEvaluatedVariableJsonUser;
    readonly value: string;
}
export function getEvaluatedVariableJsonOutput(args: GetEvaluatedVariableJsonOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvaluatedVariableJsonResult> {
    return pulumi.output(args).apply((a: any) => getEvaluatedVariableJson(a, opts))
}

/**
 * A collection of arguments for invoking getEvaluatedVariableJson.
 */
export interface GetEvaluatedVariableJsonOutputArgs {
    defaultValue: pulumi.Input<string>;
    id: pulumi.Input<string>;
    user: pulumi.Input<inputs.GetEvaluatedVariableJsonUserArgs>;
}
