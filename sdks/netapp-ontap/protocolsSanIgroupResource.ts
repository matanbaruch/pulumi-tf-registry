// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProtocolsSanIgroupResource extends pulumi.CustomResource {
    /**
     * Get an existing ProtocolsSanIgroupResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtocolsSanIgroupResourceState, opts?: pulumi.CustomResourceOptions): ProtocolsSanIgroupResource {
        return new ProtocolsSanIgroupResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netapp-ontap:index/protocolsSanIgroupResource:ProtocolsSanIgroupResource';

    /**
     * Returns true if the given object is an instance of ProtocolsSanIgroupResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProtocolsSanIgroupResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtocolsSanIgroupResource.__pulumiType;
    }

    /**
     * Comment
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Connection profile name
     */
    public readonly cxProfileName!: pulumi.Output<string>;
    /**
     * List of initiator groups
     */
    public readonly igroups!: pulumi.Output<outputs.ProtocolsSanIgroupResourceIgroup[] | undefined>;
    /**
     * List of initiators
     */
    public readonly initiators!: pulumi.Output<outputs.ProtocolsSanIgroupResourceInitiator[] | undefined>;
    /**
     * Existing SVM in which to create the initiator group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Operating system of the initiator group's initiators.
     */
    public readonly osType!: pulumi.Output<string>;
    /**
     * Required ONTAP 9.9 or greater. The portset to which the initiator group is bound. Binding the initiator group to a
     * portset restricts the initiators of the group to accessing mapped LUNs only through network interfaces in the portset.
     */
    public readonly portset!: pulumi.Output<outputs.ProtocolsSanIgroupResourcePortset>;
    /**
     * If not specified, the default protocol is mixed.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * SVM details for ProtocolsSanLunMaps
     */
    public readonly svm!: pulumi.Output<outputs.ProtocolsSanIgroupResourceSvm>;

    /**
     * Create a ProtocolsSanIgroupResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProtocolsSanIgroupResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtocolsSanIgroupResourceArgs | ProtocolsSanIgroupResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtocolsSanIgroupResourceState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["cxProfileName"] = state ? state.cxProfileName : undefined;
            resourceInputs["igroups"] = state ? state.igroups : undefined;
            resourceInputs["initiators"] = state ? state.initiators : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["osType"] = state ? state.osType : undefined;
            resourceInputs["portset"] = state ? state.portset : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["svm"] = state ? state.svm : undefined;
        } else {
            const args = argsOrState as ProtocolsSanIgroupResourceArgs | undefined;
            if ((!args || args.cxProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cxProfileName'");
            }
            if ((!args || args.osType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osType'");
            }
            if ((!args || args.svm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'svm'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["cxProfileName"] = args ? args.cxProfileName : undefined;
            resourceInputs["igroups"] = args ? args.igroups : undefined;
            resourceInputs["initiators"] = args ? args.initiators : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["osType"] = args ? args.osType : undefined;
            resourceInputs["portset"] = args ? args.portset : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["svm"] = args ? args.svm : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProtocolsSanIgroupResource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProtocolsSanIgroupResource resources.
 */
export interface ProtocolsSanIgroupResourceState {
    /**
     * Comment
     */
    comment?: pulumi.Input<string>;
    /**
     * Connection profile name
     */
    cxProfileName?: pulumi.Input<string>;
    /**
     * List of initiator groups
     */
    igroups?: pulumi.Input<pulumi.Input<inputs.ProtocolsSanIgroupResourceIgroup>[]>;
    /**
     * List of initiators
     */
    initiators?: pulumi.Input<pulumi.Input<inputs.ProtocolsSanIgroupResourceInitiator>[]>;
    /**
     * Existing SVM in which to create the initiator group.
     */
    name?: pulumi.Input<string>;
    /**
     * Operating system of the initiator group's initiators.
     */
    osType?: pulumi.Input<string>;
    /**
     * Required ONTAP 9.9 or greater. The portset to which the initiator group is bound. Binding the initiator group to a
     * portset restricts the initiators of the group to accessing mapped LUNs only through network interfaces in the portset.
     */
    portset?: pulumi.Input<inputs.ProtocolsSanIgroupResourcePortset>;
    /**
     * If not specified, the default protocol is mixed.
     */
    protocol?: pulumi.Input<string>;
    /**
     * SVM details for ProtocolsSanLunMaps
     */
    svm?: pulumi.Input<inputs.ProtocolsSanIgroupResourceSvm>;
}

/**
 * The set of arguments for constructing a ProtocolsSanIgroupResource resource.
 */
export interface ProtocolsSanIgroupResourceArgs {
    /**
     * Comment
     */
    comment?: pulumi.Input<string>;
    /**
     * Connection profile name
     */
    cxProfileName: pulumi.Input<string>;
    /**
     * List of initiator groups
     */
    igroups?: pulumi.Input<pulumi.Input<inputs.ProtocolsSanIgroupResourceIgroup>[]>;
    /**
     * List of initiators
     */
    initiators?: pulumi.Input<pulumi.Input<inputs.ProtocolsSanIgroupResourceInitiator>[]>;
    /**
     * Existing SVM in which to create the initiator group.
     */
    name?: pulumi.Input<string>;
    /**
     * Operating system of the initiator group's initiators.
     */
    osType: pulumi.Input<string>;
    /**
     * Required ONTAP 9.9 or greater. The portset to which the initiator group is bound. Binding the initiator group to a
     * portset restricts the initiators of the group to accessing mapped LUNs only through network interfaces in the portset.
     */
    portset?: pulumi.Input<inputs.ProtocolsSanIgroupResourcePortset>;
    /**
     * If not specified, the default protocol is mixed.
     */
    protocol?: pulumi.Input<string>;
    /**
     * SVM details for ProtocolsSanLunMaps
     */
    svm: pulumi.Input<inputs.ProtocolsSanIgroupResourceSvm>;
}
