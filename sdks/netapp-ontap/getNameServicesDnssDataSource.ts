// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNameServicesDnssDataSource(args: GetNameServicesDnssDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetNameServicesDnssDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getNameServicesDnssDataSource:getNameServicesDnssDataSource", {
        "cxProfileName": args.cxProfileName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNameServicesDnssDataSource.
 */
export interface GetNameServicesDnssDataSourceArgs {
    cxProfileName: string;
    filter?: inputs.GetNameServicesDnssDataSourceFilter;
}

/**
 * A collection of values returned by getNameServicesDnssDataSource.
 */
export interface GetNameServicesDnssDataSourceResult {
    readonly cxProfileName: string;
    readonly filter?: outputs.GetNameServicesDnssDataSourceFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nameServicesDnsses: outputs.GetNameServicesDnssDataSourceNameServicesDnss[];
}
export function getNameServicesDnssDataSourceOutput(args: GetNameServicesDnssDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNameServicesDnssDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getNameServicesDnssDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getNameServicesDnssDataSource.
 */
export interface GetNameServicesDnssDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetNameServicesDnssDataSourceFilterArgs>;
}
