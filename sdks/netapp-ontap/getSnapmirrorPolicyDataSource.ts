// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnapmirrorPolicyDataSource(args: GetSnapmirrorPolicyDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapmirrorPolicyDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getSnapmirrorPolicyDataSource:getSnapmirrorPolicyDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSnapmirrorPolicyDataSource.
 */
export interface GetSnapmirrorPolicyDataSourceArgs {
    cxProfileName: string;
    name: string;
}

/**
 * A collection of values returned by getSnapmirrorPolicyDataSource.
 */
export interface GetSnapmirrorPolicyDataSourceResult {
    readonly comment: string;
    readonly copyAllSourceSnapshots: boolean;
    readonly copyLatestSourceSnapshot: boolean;
    readonly createSnapshotOnSource: boolean;
    readonly cxProfileName: string;
    readonly id: string;
    readonly identityPreservation: string;
    readonly name: string;
    readonly networkCompressionEnabled: boolean;
    readonly retentions: outputs.GetSnapmirrorPolicyDataSourceRetention[];
    readonly svmName: string;
    readonly syncType: string;
    readonly transferScheduleName: string;
    readonly type: string;
}
export function getSnapmirrorPolicyDataSourceOutput(args: GetSnapmirrorPolicyDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapmirrorPolicyDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getSnapmirrorPolicyDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getSnapmirrorPolicyDataSource.
 */
export interface GetSnapmirrorPolicyDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
