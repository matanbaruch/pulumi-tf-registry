// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSnapmirrorDataSource(args: GetSnapmirrorDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapmirrorDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getSnapmirrorDataSource:getSnapmirrorDataSource", {
        "cxProfileName": args.cxProfileName,
        "destination": args.destination,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSnapmirrorDataSource.
 */
export interface GetSnapmirrorDataSourceArgs {
    cxProfileName: string;
    destination: inputs.GetSnapmirrorDataSourceDestination;
}

/**
 * A collection of values returned by getSnapmirrorDataSource.
 */
export interface GetSnapmirrorDataSourceResult {
    readonly cxProfileName: string;
    readonly destination: outputs.GetSnapmirrorDataSourceDestination;
    readonly groupType: string;
    readonly healthy: boolean;
    readonly id: string;
    readonly policy: outputs.GetSnapmirrorDataSourcePolicy;
    readonly restore: boolean;
    readonly source: outputs.GetSnapmirrorDataSourceSource;
    readonly state: string;
    readonly throttle: number;
}
export function getSnapmirrorDataSourceOutput(args: GetSnapmirrorDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapmirrorDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getSnapmirrorDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getSnapmirrorDataSource.
 */
export interface GetSnapmirrorDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    destination: pulumi.Input<inputs.GetSnapmirrorDataSourceDestinationArgs>;
}
