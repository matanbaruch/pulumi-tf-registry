// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageAggregatesDataSource(args: GetStorageAggregatesDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageAggregatesDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getStorageAggregatesDataSource:getStorageAggregatesDataSource", {
        "cxProfileName": args.cxProfileName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageAggregatesDataSource.
 */
export interface GetStorageAggregatesDataSourceArgs {
    cxProfileName: string;
    filter?: inputs.GetStorageAggregatesDataSourceFilter;
}

/**
 * A collection of values returned by getStorageAggregatesDataSource.
 */
export interface GetStorageAggregatesDataSourceResult {
    readonly cxProfileName: string;
    readonly filter?: outputs.GetStorageAggregatesDataSourceFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly storageAggregates: outputs.GetStorageAggregatesDataSourceStorageAggregate[];
}
export function getStorageAggregatesDataSourceOutput(args: GetStorageAggregatesDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageAggregatesDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getStorageAggregatesDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getStorageAggregatesDataSource.
 */
export interface GetStorageAggregatesDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetStorageAggregatesDataSourceFilterArgs>;
}
