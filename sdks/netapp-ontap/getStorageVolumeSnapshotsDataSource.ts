// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageVolumeSnapshotsDataSource(args: GetStorageVolumeSnapshotsDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageVolumeSnapshotsDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getStorageVolumeSnapshotsDataSource:getStorageVolumeSnapshotsDataSource", {
        "cxProfileName": args.cxProfileName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageVolumeSnapshotsDataSource.
 */
export interface GetStorageVolumeSnapshotsDataSourceArgs {
    cxProfileName: string;
    filter: inputs.GetStorageVolumeSnapshotsDataSourceFilter;
}

/**
 * A collection of values returned by getStorageVolumeSnapshotsDataSource.
 */
export interface GetStorageVolumeSnapshotsDataSourceResult {
    readonly cxProfileName: string;
    readonly filter: outputs.GetStorageVolumeSnapshotsDataSourceFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly storageVolumeSnapshots: outputs.GetStorageVolumeSnapshotsDataSourceStorageVolumeSnapshot[];
}
export function getStorageVolumeSnapshotsDataSourceOutput(args: GetStorageVolumeSnapshotsDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageVolumeSnapshotsDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getStorageVolumeSnapshotsDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getStorageVolumeSnapshotsDataSource.
 */
export interface GetStorageVolumeSnapshotsDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    filter: pulumi.Input<inputs.GetStorageVolumeSnapshotsDataSourceFilterArgs>;
}
