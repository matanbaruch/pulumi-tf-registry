// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProtocolsNfsExportPolicyRuleResource extends pulumi.CustomResource {
    /**
     * Get an existing ProtocolsNfsExportPolicyRuleResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtocolsNfsExportPolicyRuleResourceState, opts?: pulumi.CustomResourceOptions): ProtocolsNfsExportPolicyRuleResource {
        return new ProtocolsNfsExportPolicyRuleResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netapp-ontap:index/protocolsNfsExportPolicyRuleResource:ProtocolsNfsExportPolicyRuleResource';

    /**
     * Returns true if the given object is an instance of ProtocolsNfsExportPolicyRuleResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProtocolsNfsExportPolicyRuleResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtocolsNfsExportPolicyRuleResource.__pulumiType;
    }

    /**
     * Allow Creation of Devices
     */
    public readonly allowDeviceCreation!: pulumi.Output<boolean>;
    /**
     * Honor SetUID Bits in SETATTR
     */
    public readonly allowSuid!: pulumi.Output<boolean>;
    /**
     * User ID To Which Anonymous Users Are Mapped
     */
    public readonly anonymousUser!: pulumi.Output<string>;
    /**
     * Specifies who is authorized to change the ownership mode of a file
     */
    public readonly chownMode!: pulumi.Output<string>;
    /**
     * List of Client Match Hostnames, IP Addresses, Netgroups, or Domains
     */
    public readonly clientsMatches!: pulumi.Output<string[]>;
    /**
     * Connection profile name
     */
    public readonly cxProfileName!: pulumi.Output<string>;
    /**
     * Export policy identifier
     */
    public /*out*/ readonly exportPolicyId!: pulumi.Output<string>;
    /**
     * Export policy name
     */
    public readonly exportPolicyName!: pulumi.Output<string>;
    /**
     * rule index
     */
    public /*out*/ readonly index!: pulumi.Output<number>;
    /**
     * NTFS export UNIX security options
     */
    public readonly ntfsUnixSecurity!: pulumi.Output<string>;
    /**
     * Access Protocol
     */
    public readonly protocols!: pulumi.Output<string[]>;
    /**
     * RO Access Rule
     */
    public readonly roRules!: pulumi.Output<string[]>;
    /**
     * RW Access Rule
     */
    public readonly rwRules!: pulumi.Output<string[]>;
    /**
     * Superuser Security Types
     */
    public readonly superusers!: pulumi.Output<string[]>;
    /**
     * Name of the svm to use
     */
    public readonly svmName!: pulumi.Output<string>;

    /**
     * Create a ProtocolsNfsExportPolicyRuleResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProtocolsNfsExportPolicyRuleResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtocolsNfsExportPolicyRuleResourceArgs | ProtocolsNfsExportPolicyRuleResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtocolsNfsExportPolicyRuleResourceState | undefined;
            resourceInputs["allowDeviceCreation"] = state ? state.allowDeviceCreation : undefined;
            resourceInputs["allowSuid"] = state ? state.allowSuid : undefined;
            resourceInputs["anonymousUser"] = state ? state.anonymousUser : undefined;
            resourceInputs["chownMode"] = state ? state.chownMode : undefined;
            resourceInputs["clientsMatches"] = state ? state.clientsMatches : undefined;
            resourceInputs["cxProfileName"] = state ? state.cxProfileName : undefined;
            resourceInputs["exportPolicyId"] = state ? state.exportPolicyId : undefined;
            resourceInputs["exportPolicyName"] = state ? state.exportPolicyName : undefined;
            resourceInputs["index"] = state ? state.index : undefined;
            resourceInputs["ntfsUnixSecurity"] = state ? state.ntfsUnixSecurity : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["roRules"] = state ? state.roRules : undefined;
            resourceInputs["rwRules"] = state ? state.rwRules : undefined;
            resourceInputs["superusers"] = state ? state.superusers : undefined;
            resourceInputs["svmName"] = state ? state.svmName : undefined;
        } else {
            const args = argsOrState as ProtocolsNfsExportPolicyRuleResourceArgs | undefined;
            if ((!args || args.clientsMatches === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientsMatches'");
            }
            if ((!args || args.cxProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cxProfileName'");
            }
            if ((!args || args.exportPolicyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'exportPolicyName'");
            }
            if ((!args || args.roRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roRules'");
            }
            if ((!args || args.rwRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rwRules'");
            }
            if ((!args || args.svmName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'svmName'");
            }
            resourceInputs["allowDeviceCreation"] = args ? args.allowDeviceCreation : undefined;
            resourceInputs["allowSuid"] = args ? args.allowSuid : undefined;
            resourceInputs["anonymousUser"] = args ? args.anonymousUser : undefined;
            resourceInputs["chownMode"] = args ? args.chownMode : undefined;
            resourceInputs["clientsMatches"] = args ? args.clientsMatches : undefined;
            resourceInputs["cxProfileName"] = args ? args.cxProfileName : undefined;
            resourceInputs["exportPolicyName"] = args ? args.exportPolicyName : undefined;
            resourceInputs["ntfsUnixSecurity"] = args ? args.ntfsUnixSecurity : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["roRules"] = args ? args.roRules : undefined;
            resourceInputs["rwRules"] = args ? args.rwRules : undefined;
            resourceInputs["superusers"] = args ? args.superusers : undefined;
            resourceInputs["svmName"] = args ? args.svmName : undefined;
            resourceInputs["exportPolicyId"] = undefined /*out*/;
            resourceInputs["index"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProtocolsNfsExportPolicyRuleResource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProtocolsNfsExportPolicyRuleResource resources.
 */
export interface ProtocolsNfsExportPolicyRuleResourceState {
    /**
     * Allow Creation of Devices
     */
    allowDeviceCreation?: pulumi.Input<boolean>;
    /**
     * Honor SetUID Bits in SETATTR
     */
    allowSuid?: pulumi.Input<boolean>;
    /**
     * User ID To Which Anonymous Users Are Mapped
     */
    anonymousUser?: pulumi.Input<string>;
    /**
     * Specifies who is authorized to change the ownership mode of a file
     */
    chownMode?: pulumi.Input<string>;
    /**
     * List of Client Match Hostnames, IP Addresses, Netgroups, or Domains
     */
    clientsMatches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Connection profile name
     */
    cxProfileName?: pulumi.Input<string>;
    /**
     * Export policy identifier
     */
    exportPolicyId?: pulumi.Input<string>;
    /**
     * Export policy name
     */
    exportPolicyName?: pulumi.Input<string>;
    /**
     * rule index
     */
    index?: pulumi.Input<number>;
    /**
     * NTFS export UNIX security options
     */
    ntfsUnixSecurity?: pulumi.Input<string>;
    /**
     * Access Protocol
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * RO Access Rule
     */
    roRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * RW Access Rule
     */
    rwRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Superuser Security Types
     */
    superusers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the svm to use
     */
    svmName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProtocolsNfsExportPolicyRuleResource resource.
 */
export interface ProtocolsNfsExportPolicyRuleResourceArgs {
    /**
     * Allow Creation of Devices
     */
    allowDeviceCreation?: pulumi.Input<boolean>;
    /**
     * Honor SetUID Bits in SETATTR
     */
    allowSuid?: pulumi.Input<boolean>;
    /**
     * User ID To Which Anonymous Users Are Mapped
     */
    anonymousUser?: pulumi.Input<string>;
    /**
     * Specifies who is authorized to change the ownership mode of a file
     */
    chownMode?: pulumi.Input<string>;
    /**
     * List of Client Match Hostnames, IP Addresses, Netgroups, or Domains
     */
    clientsMatches: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Connection profile name
     */
    cxProfileName: pulumi.Input<string>;
    /**
     * Export policy name
     */
    exportPolicyName: pulumi.Input<string>;
    /**
     * NTFS export UNIX security options
     */
    ntfsUnixSecurity?: pulumi.Input<string>;
    /**
     * Access Protocol
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * RO Access Rule
     */
    roRules: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * RW Access Rule
     */
    rwRules: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Superuser Security Types
     */
    superusers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the svm to use
     */
    svmName: pulumi.Input<string>;
}
