// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProtocolsSanLunMapsDataSource(args: GetProtocolsSanLunMapsDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetProtocolsSanLunMapsDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getProtocolsSanLunMapsDataSource:getProtocolsSanLunMapsDataSource", {
        "cxProfileName": args.cxProfileName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProtocolsSanLunMapsDataSource.
 */
export interface GetProtocolsSanLunMapsDataSourceArgs {
    cxProfileName: string;
    filter?: inputs.GetProtocolsSanLunMapsDataSourceFilter;
}

/**
 * A collection of values returned by getProtocolsSanLunMapsDataSource.
 */
export interface GetProtocolsSanLunMapsDataSourceResult {
    readonly cxProfileName: string;
    readonly filter?: outputs.GetProtocolsSanLunMapsDataSourceFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly protocolsSanLunMaps: outputs.GetProtocolsSanLunMapsDataSourceProtocolsSanLunMap[];
}
export function getProtocolsSanLunMapsDataSourceOutput(args: GetProtocolsSanLunMapsDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProtocolsSanLunMapsDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getProtocolsSanLunMapsDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getProtocolsSanLunMapsDataSource.
 */
export interface GetProtocolsSanLunMapsDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetProtocolsSanLunMapsDataSourceFilterArgs>;
}
