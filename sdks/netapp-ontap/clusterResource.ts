// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ClusterResource extends pulumi.CustomResource {
    /**
     * Get an existing ClusterResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterResourceState, opts?: pulumi.CustomResourceOptions): ClusterResource {
        return new ClusterResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netapp-ontap:index/clusterResource:ClusterResource';

    /**
     * Returns true if the given object is an instance of ClusterResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterResource.__pulumiType;
    }

    /**
     * Certificate
     */
    public readonly certificate!: pulumi.Output<outputs.ClusterResourceCertificate>;
    /**
     * Contact information. Example: support@company.com
     */
    public readonly contact!: pulumi.Output<string>;
    /**
     * Connection profile name
     */
    public readonly cxProfileName!: pulumi.Output<string>;
    /**
     * A list of DNS domains.
     */
    public readonly dnsDomains!: pulumi.Output<string[]>;
    /**
     * License keys or NLF contents.
     */
    public readonly license!: pulumi.Output<outputs.ClusterResourceLicense | undefined>;
    /**
     * Location information
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The management interface of the cluster. The subnet mask and gateway for this interface are used for the node management
     * interfaces provided in the node configuration.
     */
    public readonly managementInterface!: pulumi.Output<outputs.ClusterResourceManagementInterface | undefined>;
    /**
     * A list of network interface
     */
    public /*out*/ readonly managementInterfaces!: pulumi.Output<outputs.ClusterResourceManagementInterface[]>;
    /**
     * Cluster name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of IP addresses of the DNS servers. Addresses can be either IPv4 or IPv6 addresses.
     */
    public readonly nameServers!: pulumi.Output<string[]>;
    /**
     * Host name, IPv4 address, or IPv6 address for the external NTP time servers.
     */
    public readonly ntpServers!: pulumi.Output<string[]>;
    /**
     * Password
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Time zone information.
     */
    public readonly timezone!: pulumi.Output<outputs.ClusterResourceTimezone>;
    /**
     * This returns the cluster version information. When the cluster has more than one node, the cluster version is equivalent
     * to the lowest of generation, major, and minor versions on all nodes.
     */
    public /*out*/ readonly version!: pulumi.Output<outputs.ClusterResourceVersion>;

    /**
     * Create a ClusterResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterResourceArgs | ClusterResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterResourceState | undefined;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["contact"] = state ? state.contact : undefined;
            resourceInputs["cxProfileName"] = state ? state.cxProfileName : undefined;
            resourceInputs["dnsDomains"] = state ? state.dnsDomains : undefined;
            resourceInputs["license"] = state ? state.license : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["managementInterface"] = state ? state.managementInterface : undefined;
            resourceInputs["managementInterfaces"] = state ? state.managementInterfaces : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameServers"] = state ? state.nameServers : undefined;
            resourceInputs["ntpServers"] = state ? state.ntpServers : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ClusterResourceArgs | undefined;
            if ((!args || args.cxProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cxProfileName'");
            }
            resourceInputs["certificate"] = args ? args.certificate : undefined;
            resourceInputs["contact"] = args ? args.contact : undefined;
            resourceInputs["cxProfileName"] = args ? args.cxProfileName : undefined;
            resourceInputs["dnsDomains"] = args ? args.dnsDomains : undefined;
            resourceInputs["license"] = args ? args.license : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["managementInterface"] = args ? args.managementInterface : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameServers"] = args ? args.nameServers : undefined;
            resourceInputs["ntpServers"] = args ? args.ntpServers : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["managementInterfaces"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ClusterResource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ClusterResource resources.
 */
export interface ClusterResourceState {
    /**
     * Certificate
     */
    certificate?: pulumi.Input<inputs.ClusterResourceCertificate>;
    /**
     * Contact information. Example: support@company.com
     */
    contact?: pulumi.Input<string>;
    /**
     * Connection profile name
     */
    cxProfileName?: pulumi.Input<string>;
    /**
     * A list of DNS domains.
     */
    dnsDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * License keys or NLF contents.
     */
    license?: pulumi.Input<inputs.ClusterResourceLicense>;
    /**
     * Location information
     */
    location?: pulumi.Input<string>;
    /**
     * The management interface of the cluster. The subnet mask and gateway for this interface are used for the node management
     * interfaces provided in the node configuration.
     */
    managementInterface?: pulumi.Input<inputs.ClusterResourceManagementInterface>;
    /**
     * A list of network interface
     */
    managementInterfaces?: pulumi.Input<pulumi.Input<inputs.ClusterResourceManagementInterface>[]>;
    /**
     * Cluster name
     */
    name?: pulumi.Input<string>;
    /**
     * The list of IP addresses of the DNS servers. Addresses can be either IPv4 or IPv6 addresses.
     */
    nameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name, IPv4 address, or IPv6 address for the external NTP time servers.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Password
     */
    password?: pulumi.Input<string>;
    /**
     * Time zone information.
     */
    timezone?: pulumi.Input<inputs.ClusterResourceTimezone>;
    /**
     * This returns the cluster version information. When the cluster has more than one node, the cluster version is equivalent
     * to the lowest of generation, major, and minor versions on all nodes.
     */
    version?: pulumi.Input<inputs.ClusterResourceVersion>;
}

/**
 * The set of arguments for constructing a ClusterResource resource.
 */
export interface ClusterResourceArgs {
    /**
     * Certificate
     */
    certificate?: pulumi.Input<inputs.ClusterResourceCertificate>;
    /**
     * Contact information. Example: support@company.com
     */
    contact?: pulumi.Input<string>;
    /**
     * Connection profile name
     */
    cxProfileName: pulumi.Input<string>;
    /**
     * A list of DNS domains.
     */
    dnsDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * License keys or NLF contents.
     */
    license?: pulumi.Input<inputs.ClusterResourceLicense>;
    /**
     * Location information
     */
    location?: pulumi.Input<string>;
    /**
     * The management interface of the cluster. The subnet mask and gateway for this interface are used for the node management
     * interfaces provided in the node configuration.
     */
    managementInterface?: pulumi.Input<inputs.ClusterResourceManagementInterface>;
    /**
     * Cluster name
     */
    name?: pulumi.Input<string>;
    /**
     * The list of IP addresses of the DNS servers. Addresses can be either IPv4 or IPv6 addresses.
     */
    nameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name, IPv4 address, or IPv6 address for the external NTP time servers.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Password
     */
    password?: pulumi.Input<string>;
    /**
     * Time zone information.
     */
    timezone?: pulumi.Input<inputs.ClusterResourceTimezone>;
}
