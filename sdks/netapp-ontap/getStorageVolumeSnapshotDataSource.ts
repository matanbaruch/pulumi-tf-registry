// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageVolumeSnapshotDataSource(args: GetStorageVolumeSnapshotDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageVolumeSnapshotDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getStorageVolumeSnapshotDataSource:getStorageVolumeSnapshotDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
        "svmName": args.svmName,
        "volumeName": args.volumeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageVolumeSnapshotDataSource.
 */
export interface GetStorageVolumeSnapshotDataSourceArgs {
    cxProfileName: string;
    name: string;
    svmName: string;
    volumeName: string;
}

/**
 * A collection of values returned by getStorageVolumeSnapshotDataSource.
 */
export interface GetStorageVolumeSnapshotDataSourceResult {
    readonly comment: string;
    readonly createTime: string;
    readonly cxProfileName: string;
    readonly expiryTime: string;
    readonly id: string;
    readonly name: string;
    readonly size: number;
    readonly snapmirrorLabel: string;
    readonly state: string;
    readonly svmName: string;
    readonly volumeName: string;
}
export function getStorageVolumeSnapshotDataSourceOutput(args: GetStorageVolumeSnapshotDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageVolumeSnapshotDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getStorageVolumeSnapshotDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getStorageVolumeSnapshotDataSource.
 */
export interface GetStorageVolumeSnapshotDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    svmName: pulumi.Input<string>;
    volumeName: pulumi.Input<string>;
}
