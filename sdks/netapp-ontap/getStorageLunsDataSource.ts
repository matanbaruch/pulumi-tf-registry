// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageLunsDataSource(args: GetStorageLunsDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageLunsDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getStorageLunsDataSource:getStorageLunsDataSource", {
        "cxProfileName": args.cxProfileName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageLunsDataSource.
 */
export interface GetStorageLunsDataSourceArgs {
    cxProfileName: string;
    filter?: inputs.GetStorageLunsDataSourceFilter;
}

/**
 * A collection of values returned by getStorageLunsDataSource.
 */
export interface GetStorageLunsDataSourceResult {
    readonly cxProfileName: string;
    readonly filter?: outputs.GetStorageLunsDataSourceFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly storageLuns: outputs.GetStorageLunsDataSourceStorageLun[];
}
export function getStorageLunsDataSourceOutput(args: GetStorageLunsDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageLunsDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getStorageLunsDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getStorageLunsDataSource.
 */
export interface GetStorageLunsDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetStorageLunsDataSourceFilterArgs>;
}
