// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProtocolsCifsShareDataSource(args: GetProtocolsCifsShareDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetProtocolsCifsShareDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getProtocolsCifsShareDataSource:getProtocolsCifsShareDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
        "svmName": args.svmName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProtocolsCifsShareDataSource.
 */
export interface GetProtocolsCifsShareDataSourceArgs {
    cxProfileName: string;
    name: string;
    svmName?: string;
}

/**
 * A collection of values returned by getProtocolsCifsShareDataSource.
 */
export interface GetProtocolsCifsShareDataSourceResult {
    readonly acls: outputs.GetProtocolsCifsShareDataSourceAcl[];
    readonly changeNotify: boolean;
    readonly comment: string;
    readonly continuouslyAvailable: boolean;
    readonly cxProfileName: string;
    readonly dirUmask: number;
    readonly encryption: boolean;
    readonly fileUmask: number;
    readonly forceGroupForCreate: string;
    readonly homeDirectory: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly namespaceCaching: boolean;
    readonly noStrictSecurity: boolean;
    readonly offlineFiles: string;
    readonly oplocks: boolean;
    readonly path: string;
    readonly showSnapshot: boolean;
    readonly svmName?: string;
    readonly unixSymlink: string;
    readonly vscanProfile: string;
}
export function getProtocolsCifsShareDataSourceOutput(args: GetProtocolsCifsShareDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProtocolsCifsShareDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getProtocolsCifsShareDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getProtocolsCifsShareDataSource.
 */
export interface GetProtocolsCifsShareDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    svmName?: pulumi.Input<string>;
}
