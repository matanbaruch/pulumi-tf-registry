// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorageAggregateDataSource(args: GetStorageAggregateDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageAggregateDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getStorageAggregateDataSource:getStorageAggregateDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageAggregateDataSource.
 */
export interface GetStorageAggregateDataSourceArgs {
    cxProfileName: string;
    name: string;
}

/**
 * A collection of values returned by getStorageAggregateDataSource.
 */
export interface GetStorageAggregateDataSourceResult {
    readonly cxProfileName: string;
    readonly diskClass: string;
    readonly diskCount: number;
    readonly encryption: boolean;
    readonly id: string;
    readonly isMirrored: boolean;
    readonly name: string;
    readonly node: string;
    readonly raidSize: number;
    readonly raidType: string;
    readonly snaplockType: string;
    readonly state: string;
}
export function getStorageAggregateDataSourceOutput(args: GetStorageAggregateDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageAggregateDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getStorageAggregateDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getStorageAggregateDataSource.
 */
export interface GetStorageAggregateDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
