// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSecurityAccountsDataSource(args: GetSecurityAccountsDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAccountsDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getSecurityAccountsDataSource:getSecurityAccountsDataSource", {
        "cxProfileName": args.cxProfileName,
        "filter": args.filter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityAccountsDataSource.
 */
export interface GetSecurityAccountsDataSourceArgs {
    cxProfileName: string;
    filter?: inputs.GetSecurityAccountsDataSourceFilter;
}

/**
 * A collection of values returned by getSecurityAccountsDataSource.
 */
export interface GetSecurityAccountsDataSourceResult {
    readonly cxProfileName: string;
    readonly filter?: outputs.GetSecurityAccountsDataSourceFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly securityAccounts: outputs.GetSecurityAccountsDataSourceSecurityAccount[];
}
export function getSecurityAccountsDataSourceOutput(args: GetSecurityAccountsDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityAccountsDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getSecurityAccountsDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityAccountsDataSource.
 */
export interface GetSecurityAccountsDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetSecurityAccountsDataSourceFilterArgs>;
}
