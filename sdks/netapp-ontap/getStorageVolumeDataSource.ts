// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageVolumeDataSource(args: GetStorageVolumeDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageVolumeDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getStorageVolumeDataSource:getStorageVolumeDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
        "svmName": args.svmName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageVolumeDataSource.
 */
export interface GetStorageVolumeDataSourceArgs {
    cxProfileName: string;
    name: string;
    svmName: string;
}

/**
 * A collection of values returned by getStorageVolumeDataSource.
 */
export interface GetStorageVolumeDataSourceResult {
    readonly aggregates: outputs.GetStorageVolumeDataSourceAggregate[];
    readonly analytics: outputs.GetStorageVolumeDataSourceAnalytics;
    readonly comment: string;
    readonly cxProfileName: string;
    readonly efficiency: outputs.GetStorageVolumeDataSourceEfficiency;
    readonly encryption: boolean;
    readonly id: string;
    readonly language: string;
    readonly name: string;
    readonly nas: outputs.GetStorageVolumeDataSourceNas;
    readonly qosPolicyGroup: string;
    readonly snaplock: outputs.GetStorageVolumeDataSourceSnaplock;
    readonly snapshotPolicy: string;
    readonly space: outputs.GetStorageVolumeDataSourceSpace;
    readonly spaceGuarantee: string;
    readonly state: string;
    readonly svmName: string;
    readonly tiering: outputs.GetStorageVolumeDataSourceTiering;
    readonly type: string;
}
export function getStorageVolumeDataSourceOutput(args: GetStorageVolumeDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageVolumeDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getStorageVolumeDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getStorageVolumeDataSource.
 */
export interface GetStorageVolumeDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    svmName: pulumi.Input<string>;
}
