// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSvmPeerDataSource(args: GetSvmPeerDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetSvmPeerDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getSvmPeerDataSource:getSvmPeerDataSource", {
        "cxProfileName": args.cxProfileName,
        "peer": args.peer,
        "svm": args.svm,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSvmPeerDataSource.
 */
export interface GetSvmPeerDataSourceArgs {
    cxProfileName: string;
    peer: inputs.GetSvmPeerDataSourcePeer;
    svm: inputs.GetSvmPeerDataSourceSvm;
}

/**
 * A collection of values returned by getSvmPeerDataSource.
 */
export interface GetSvmPeerDataSourceResult {
    readonly applications: string[];
    readonly cxProfileName: string;
    readonly id: string;
    readonly peer: outputs.GetSvmPeerDataSourcePeer;
    readonly state: string;
    readonly svm: outputs.GetSvmPeerDataSourceSvm;
}
export function getSvmPeerDataSourceOutput(args: GetSvmPeerDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSvmPeerDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getSvmPeerDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getSvmPeerDataSource.
 */
export interface GetSvmPeerDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    peer: pulumi.Input<inputs.GetSvmPeerDataSourcePeerArgs>;
    svm: pulumi.Input<inputs.GetSvmPeerDataSourceSvmArgs>;
}
