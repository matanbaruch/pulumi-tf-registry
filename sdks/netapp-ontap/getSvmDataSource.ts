// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSvmDataSource(args: GetSvmDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetSvmDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getSvmDataSource:getSvmDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSvmDataSource.
 */
export interface GetSvmDataSourceArgs {
    cxProfileName: string;
    name: string;
}

/**
 * A collection of values returned by getSvmDataSource.
 */
export interface GetSvmDataSourceResult {
    readonly aggregates: string[];
    readonly comment: string;
    readonly cxProfileName: string;
    readonly id: string;
    readonly ipspace: string;
    readonly language: string;
    readonly maxVolumes: string;
    readonly name: string;
    readonly snapshotPolicy: string;
    readonly subtype: string;
}
export function getSvmDataSourceOutput(args: GetSvmDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSvmDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getSvmDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getSvmDataSource.
 */
export interface GetSvmDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
