// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkingIpRouteDataSource(args: GetNetworkingIpRouteDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkingIpRouteDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getNetworkingIpRouteDataSource:getNetworkingIpRouteDataSource", {
        "cxProfileName": args.cxProfileName,
        "destination": args.destination,
        "gateway": args.gateway,
        "svmName": args.svmName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingIpRouteDataSource.
 */
export interface GetNetworkingIpRouteDataSourceArgs {
    cxProfileName: string;
    destination: inputs.GetNetworkingIpRouteDataSourceDestination;
    gateway: string;
    svmName: string;
}

/**
 * A collection of values returned by getNetworkingIpRouteDataSource.
 */
export interface GetNetworkingIpRouteDataSourceResult {
    readonly cxProfileName: string;
    readonly destination: outputs.GetNetworkingIpRouteDataSourceDestination;
    readonly gateway: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly metric: number;
    readonly svmName: string;
}
export function getNetworkingIpRouteDataSourceOutput(args: GetNetworkingIpRouteDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingIpRouteDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getNetworkingIpRouteDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingIpRouteDataSource.
 */
export interface GetNetworkingIpRouteDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    destination: pulumi.Input<inputs.GetNetworkingIpRouteDataSourceDestinationArgs>;
    gateway: pulumi.Input<string>;
    svmName: pulumi.Input<string>;
}
