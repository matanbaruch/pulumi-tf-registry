// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ProtocolsCifsLocalUserResource extends pulumi.CustomResource {
    /**
     * Get an existing ProtocolsCifsLocalUserResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProtocolsCifsLocalUserResourceState, opts?: pulumi.CustomResourceOptions): ProtocolsCifsLocalUserResource {
        return new ProtocolsCifsLocalUserResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netapp-ontap:index/protocolsCifsLocalUserResource:ProtocolsCifsLocalUserResource';

    /**
     * Returns true if the given object is an instance of ProtocolsCifsLocalUserResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProtocolsCifsLocalUserResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProtocolsCifsLocalUserResource.__pulumiType;
    }

    /**
     * CifsLocalUser account disabled
     */
    public readonly accountDisabled!: pulumi.Output<boolean>;
    /**
     * Connection profile name
     */
    public readonly cxProfileName!: pulumi.Output<string>;
    /**
     * CifsLocalUser description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * CifsLocalUser full name
     */
    public readonly fullName!: pulumi.Output<string | undefined>;
    /**
     * CifsLocalUser membership
     */
    public /*out*/ readonly memberships!: pulumi.Output<outputs.ProtocolsCifsLocalUserResourceMembership[]>;
    /**
     * CifsLocalUser name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * CifsLocalUser password
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * CifsLocalUser svm name
     */
    public readonly svmName!: pulumi.Output<string>;

    /**
     * Create a ProtocolsCifsLocalUserResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProtocolsCifsLocalUserResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProtocolsCifsLocalUserResourceArgs | ProtocolsCifsLocalUserResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProtocolsCifsLocalUserResourceState | undefined;
            resourceInputs["accountDisabled"] = state ? state.accountDisabled : undefined;
            resourceInputs["cxProfileName"] = state ? state.cxProfileName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fullName"] = state ? state.fullName : undefined;
            resourceInputs["memberships"] = state ? state.memberships : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["svmName"] = state ? state.svmName : undefined;
        } else {
            const args = argsOrState as ProtocolsCifsLocalUserResourceArgs | undefined;
            if ((!args || args.cxProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cxProfileName'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.svmName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'svmName'");
            }
            resourceInputs["accountDisabled"] = args ? args.accountDisabled : undefined;
            resourceInputs["cxProfileName"] = args ? args.cxProfileName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fullName"] = args ? args.fullName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["svmName"] = args ? args.svmName : undefined;
            resourceInputs["memberships"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ProtocolsCifsLocalUserResource.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ProtocolsCifsLocalUserResource resources.
 */
export interface ProtocolsCifsLocalUserResourceState {
    /**
     * CifsLocalUser account disabled
     */
    accountDisabled?: pulumi.Input<boolean>;
    /**
     * Connection profile name
     */
    cxProfileName?: pulumi.Input<string>;
    /**
     * CifsLocalUser description
     */
    description?: pulumi.Input<string>;
    /**
     * CifsLocalUser full name
     */
    fullName?: pulumi.Input<string>;
    /**
     * CifsLocalUser membership
     */
    memberships?: pulumi.Input<pulumi.Input<inputs.ProtocolsCifsLocalUserResourceMembership>[]>;
    /**
     * CifsLocalUser name
     */
    name?: pulumi.Input<string>;
    /**
     * CifsLocalUser password
     */
    password?: pulumi.Input<string>;
    /**
     * CifsLocalUser svm name
     */
    svmName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProtocolsCifsLocalUserResource resource.
 */
export interface ProtocolsCifsLocalUserResourceArgs {
    /**
     * CifsLocalUser account disabled
     */
    accountDisabled?: pulumi.Input<boolean>;
    /**
     * Connection profile name
     */
    cxProfileName: pulumi.Input<string>;
    /**
     * CifsLocalUser description
     */
    description?: pulumi.Input<string>;
    /**
     * CifsLocalUser full name
     */
    fullName?: pulumi.Input<string>;
    /**
     * CifsLocalUser name
     */
    name?: pulumi.Input<string>;
    /**
     * CifsLocalUser password
     */
    password: pulumi.Input<string>;
    /**
     * CifsLocalUser svm name
     */
    svmName: pulumi.Input<string>;
}
