// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkingIpInterfaceDataSource(args: GetNetworkingIpInterfaceDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkingIpInterfaceDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getNetworkingIpInterfaceDataSource:getNetworkingIpInterfaceDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
        "svmName": args.svmName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingIpInterfaceDataSource.
 */
export interface GetNetworkingIpInterfaceDataSourceArgs {
    cxProfileName: string;
    name: string;
    svmName?: string;
}

/**
 * A collection of values returned by getNetworkingIpInterfaceDataSource.
 */
export interface GetNetworkingIpInterfaceDataSourceResult {
    readonly cxProfileName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ip: outputs.GetNetworkingIpInterfaceDataSourceIp;
    readonly location: outputs.GetNetworkingIpInterfaceDataSourceLocation;
    readonly name: string;
    readonly scope: string;
    readonly svmName?: string;
}
export function getNetworkingIpInterfaceDataSourceOutput(args: GetNetworkingIpInterfaceDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingIpInterfaceDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getNetworkingIpInterfaceDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingIpInterfaceDataSource.
 */
export interface GetNetworkingIpInterfaceDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    svmName?: pulumi.Input<string>;
}
