// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getProtocolsCifsUserGroupPrivilegeDataSource(args: GetProtocolsCifsUserGroupPrivilegeDataSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetProtocolsCifsUserGroupPrivilegeDataSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netapp-ontap:index/getProtocolsCifsUserGroupPrivilegeDataSource:getProtocolsCifsUserGroupPrivilegeDataSource", {
        "cxProfileName": args.cxProfileName,
        "name": args.name,
        "svmName": args.svmName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProtocolsCifsUserGroupPrivilegeDataSource.
 */
export interface GetProtocolsCifsUserGroupPrivilegeDataSourceArgs {
    cxProfileName: string;
    name: string;
    svmName: string;
}

/**
 * A collection of values returned by getProtocolsCifsUserGroupPrivilegeDataSource.
 */
export interface GetProtocolsCifsUserGroupPrivilegeDataSourceResult {
    readonly cxProfileName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly privileges: string[];
    readonly svmName: string;
}
export function getProtocolsCifsUserGroupPrivilegeDataSourceOutput(args: GetProtocolsCifsUserGroupPrivilegeDataSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProtocolsCifsUserGroupPrivilegeDataSourceResult> {
    return pulumi.output(args).apply((a: any) => getProtocolsCifsUserGroupPrivilegeDataSource(a, opts))
}

/**
 * A collection of arguments for invoking getProtocolsCifsUserGroupPrivilegeDataSource.
 */
export interface GetProtocolsCifsUserGroupPrivilegeDataSourceOutputArgs {
    cxProfileName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    svmName: pulumi.Input<string>;
}
