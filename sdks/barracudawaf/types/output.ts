// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ContentRuleServersConnectionPooling {
    /**
     * Enable Connection Pooling
     */
    enableConnectionPooling?: string;
    /**
     * Keepalive Timeout
     */
    keepaliveTimeout?: string;
}

export interface ContentRuleServersSslPolicy {
    /**
     * Client Certificate
     */
    clientCertificate?: string;
    /**
     * Server uses SSL
     */
    enableHttps?: string;
    /**
     * Enable SNI
     */
    enableSni?: string;
    /**
     * SSL 3.0 (Insecure)
     */
    enableSsl3?: string;
    /**
     * Enable SSL Compatibility Mode
     */
    enableSslCompatibilityMode?: string;
    /**
     * TLS 1.0 (Insecure)
     */
    enableTls1?: string;
    /**
     * TLS 1.1
     */
    enableTls11?: string;
    /**
     * TLS 1.2
     */
    enableTls12?: string;
    /**
     * TLS 1.3
     */
    enableTls13?: string;
    /**
     * Validate Server Certificate
     */
    validateCertificate?: string;
}

export interface ServersConnectionPooling {
    /**
     * Enable Connection Pooling
     */
    enableConnectionPooling?: string;
    /**
     * Keepalive Timeout
     */
    keepaliveTimeout?: string;
}

export interface ServersSslPolicy {
    /**
     * Client Certificate
     */
    clientCertificate?: string;
    /**
     * Server uses SSL
     */
    enableHttps?: string;
    /**
     * Enable SNI
     */
    enableSni?: string;
    /**
     * SSL 3.0 (Insecure)
     */
    enableSsl3?: string;
    /**
     * Enable SSL Compatibility Mode
     */
    enableSslCompatibilityMode?: string;
    /**
     * TLS 1.0 (Insecure)
     */
    enableTls1?: string;
    /**
     * TLS 1.1
     */
    enableTls11?: string;
    /**
     * TLS 1.2
     */
    enableTls12?: string;
    /**
     * TLS 1.3
     */
    enableTls13?: string;
    /**
     * Validate Server Certificate
     */
    validateCertificate?: string;
}

export interface ServicesBasicSecurity {
    /**
     * Header for Client IP Address
     */
    clientIpAddrHeader?: string;
    /**
     * Ignore case
     */
    ignoreCase?: string;
    /**
     * Mode
     */
    mode?: string;
    /**
     * Rate Control Pool
     */
    rateControlPool?: string;
    /**
     * Rate Control Status
     */
    rateControlStatus?: string;
    /**
     * Trusted Hosts Action
     */
    trustedHostsAction?: string;
    /**
     * Trusted Hosts Group
     */
    trustedHostsGroup?: string;
    /**
     * Web Firewall Log Level
     */
    webFirewallLogLevel?: string;
    /**
     * Web Firewall Policy
     */
    webFirewallPolicy?: string;
}

export interface ServicesInstantSsl {
    /**
     * Secure Site Domain
     */
    secureSiteDomains?: string[];
    /**
     * SharePoint Rewrite Support
     */
    sharepointRewriteSupport?: string;
    /**
     * Status
     */
    status?: string;
}

export interface ServicesSslSecurity {
    /**
     * Certificate
     */
    certificate?: string;
    /**
     * Ciphers
     */
    ciphers?: string;
    /**
     * Domain
     */
    domains?: string[];
    /**
     * ECDSA Certificate
     */
    ecdsaCertificate?: string;
    /**
     * Enable HSTS
     */
    enableHsts?: string;
    /**
     * Enable OCSP Stapling
     */
    enableOcspStapling?: string;
    /**
     * Enable Perfect Forward Secrecy
     */
    enablePfs?: string;
    /**
     * Enable SNI
     */
    enableSni?: string;
    /**
     * SSL 3.0 (Insecure)
     */
    enableSsl3?: string;
    /**
     * Enable Strict SNI Check
     */
    enableStrictSniCheck?: string;
    /**
     * TLS 1.0 (Insecure)
     */
    enableTls1?: string;
    /**
     * TLS 1.1
     */
    enableTls11?: string;
    /**
     * TLS 1.2
     */
    enableTls12?: string;
    /**
     * TLS 1.3
     */
    enableTls13?: string;
    /**
     * HSTS Max-Age
     */
    hstsMaxAge?: string;
    /**
     * Include HSTS Sub-Domains
     */
    includeHstsSubDomains?: string;
    /**
     * Override ciphers for SSL 3.0
     */
    overrideCiphersSsl3s?: string[];
    /**
     * Override ciphers for TLS 1.1
     */
    overrideCiphersTls11s?: string[];
    /**
     * Override ciphers for TLS 1.2
     */
    overrideCiphersTls12s?: string[];
    /**
     * Override ciphers for TLS 1.3
     */
    overrideCiphersTls13s?: string[];
    /**
     * Override ciphers for TLS 1.0
     */
    overrideCiphersTls1s?: string[];
    /**
     * Selected Ciphers
     */
    selectedCiphers?: string[];
    /**
     * Domain Certificate
     */
    sniCertificates?: string[];
    /**
     * Domain ECDSA Certificate
     */
    sniEcdsaCertificates?: string[];
    /**
     * SSL/TLS Quick Settings
     */
    sslTlsPresets?: string;
    /**
     * Status
     */
    status?: string;
}

