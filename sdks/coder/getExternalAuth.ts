// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getExternalAuth(args: GetExternalAuthArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalAuthResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("coder:index/getExternalAuth:getExternalAuth", {
        "id": args.id,
        "optional": args.optional,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getExternalAuth.
 */
export interface GetExternalAuthArgs {
    id: string;
    optional?: boolean;
}

/**
 * A collection of values returned by getExternalAuth.
 */
export interface GetExternalAuthResult {
    readonly accessToken: string;
    readonly id: string;
    readonly optional?: boolean;
}
export function getExternalAuthOutput(args: GetExternalAuthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExternalAuthResult> {
    return pulumi.output(args).apply((a: any) => getExternalAuth(a, opts))
}

/**
 * A collection of arguments for invoking getExternalAuth.
 */
export interface GetExternalAuthOutputArgs {
    id: pulumi.Input<string>;
    optional?: pulumi.Input<boolean>;
}
