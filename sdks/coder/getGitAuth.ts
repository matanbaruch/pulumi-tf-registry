// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGitAuth(args: GetGitAuthArgs, opts?: pulumi.InvokeOptions): Promise<GetGitAuthResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("coder:index/getGitAuth:getGitAuth", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGitAuth.
 */
export interface GetGitAuthArgs {
    id: string;
}

/**
 * A collection of values returned by getGitAuth.
 */
export interface GetGitAuthResult {
    readonly accessToken: string;
    readonly id: string;
}
export function getGitAuthOutput(args: GetGitAuthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGitAuthResult> {
    return pulumi.output(args).apply((a: any) => getGitAuth(a, opts))
}

/**
 * A collection of arguments for invoking getGitAuth.
 */
export interface GetGitAuthOutputArgs {
    id: pulumi.Input<string>;
}
