// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the hcs package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'hcs';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * The password associated with the Azure Client Certificate. For use when authenticating as a Service Principal using a
     * Client Certificate
     */
    public readonly azureClientCertificatePassword!: pulumi.Output<string | undefined>;
    /**
     * The path to the Azure Client Certificate associated with the Service Principal for use when authenticating as a Service
     * Principal using a Client Certificate.
     */
    public readonly azureClientCertificatePath!: pulumi.Output<string | undefined>;
    /**
     * The Azure Client ID which should be used.
     */
    public readonly azureClientId!: pulumi.Output<string | undefined>;
    /**
     * The Azure Client Secret which should be used. For use when authenticating as a Service Principal using a Client Secret.
     */
    public readonly azureClientSecret!: pulumi.Output<string | undefined>;
    /**
     * The Azure Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults
     * to public.
     */
    public readonly azureEnvironment!: pulumi.Output<string | undefined>;
    /**
     * The hostname which should be used for the Azure Metadata Service.
     */
    public readonly azureMetadataHost!: pulumi.Output<string | undefined>;
    /**
     * The path to a custom endpoint for Azure Managed Service Identity - in most circumstances this should be detected
     * automatically.
     */
    public readonly azureMsiEndpoint!: pulumi.Output<string | undefined>;
    /**
     * The Azure Subscription ID which should be used.
     */
    public readonly azureSubscriptionId!: pulumi.Output<string | undefined>;
    /**
     * The Azure Tenant ID which should be used.
     */
    public readonly azureTenantId!: pulumi.Output<string | undefined>;
    /**
     * The HashiCorp Cloud Platform API domain.
     */
    public readonly hcpApiDomain!: pulumi.Output<string | undefined>;
    /**
     * The HashiCorp Consul Service product name on the Azure marketplace.
     */
    public readonly hcsMarketplaceProductName!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["azureClientCertificatePassword"] = args ? args.azureClientCertificatePassword : undefined;
            resourceInputs["azureClientCertificatePath"] = args ? args.azureClientCertificatePath : undefined;
            resourceInputs["azureClientId"] = args ? args.azureClientId : undefined;
            resourceInputs["azureClientSecret"] = args ? args.azureClientSecret : undefined;
            resourceInputs["azureEnvironment"] = args ? args.azureEnvironment : undefined;
            resourceInputs["azureMetadataHost"] = args ? args.azureMetadataHost : undefined;
            resourceInputs["azureMsiEndpoint"] = args ? args.azureMsiEndpoint : undefined;
            resourceInputs["azureSubscriptionId"] = args ? args.azureSubscriptionId : undefined;
            resourceInputs["azureTenantId"] = args ? args.azureTenantId : undefined;
            resourceInputs["azureUseMsi"] = pulumi.output(args ? args.azureUseMsi : undefined).apply(JSON.stringify);
            resourceInputs["hcpApiDomain"] = args ? args.hcpApiDomain : undefined;
            resourceInputs["hcsMarketplaceProductName"] = args ? args.hcsMarketplaceProductName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * The password associated with the Azure Client Certificate. For use when authenticating as a Service Principal using a
     * Client Certificate
     */
    azureClientCertificatePassword?: pulumi.Input<string>;
    /**
     * The path to the Azure Client Certificate associated with the Service Principal for use when authenticating as a Service
     * Principal using a Client Certificate.
     */
    azureClientCertificatePath?: pulumi.Input<string>;
    /**
     * The Azure Client ID which should be used.
     */
    azureClientId?: pulumi.Input<string>;
    /**
     * The Azure Client Secret which should be used. For use when authenticating as a Service Principal using a Client Secret.
     */
    azureClientSecret?: pulumi.Input<string>;
    /**
     * The Azure Cloud Environment which should be used. Possible values are public, usgovernment, german, and china. Defaults
     * to public.
     */
    azureEnvironment?: pulumi.Input<string>;
    /**
     * The hostname which should be used for the Azure Metadata Service.
     */
    azureMetadataHost?: pulumi.Input<string>;
    /**
     * The path to a custom endpoint for Azure Managed Service Identity - in most circumstances this should be detected
     * automatically.
     */
    azureMsiEndpoint?: pulumi.Input<string>;
    /**
     * The Azure Subscription ID which should be used.
     */
    azureSubscriptionId?: pulumi.Input<string>;
    /**
     * The Azure Tenant ID which should be used.
     */
    azureTenantId?: pulumi.Input<string>;
    /**
     * Allowed Azure Managed Service Identity be used for Authentication.
     */
    azureUseMsi?: pulumi.Input<boolean>;
    /**
     * The HashiCorp Cloud Platform API domain.
     */
    hcpApiDomain?: pulumi.Input<string>;
    /**
     * The HashiCorp Consul Service product name on the Azure marketplace.
     */
    hcsMarketplaceProductName?: pulumi.Input<string>;
}
