// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFederationToken(args: GetFederationTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetFederationTokenResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("hcs:index/getFederationToken:getFederationToken", {
        "id": args.id,
        "managedApplicationName": args.managedApplicationName,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFederationToken.
 */
export interface GetFederationTokenArgs {
    id?: string;
    managedApplicationName: string;
    resourceGroupName: string;
    timeouts?: inputs.GetFederationTokenTimeouts;
}

/**
 * A collection of values returned by getFederationToken.
 */
export interface GetFederationTokenResult {
    readonly id: string;
    readonly managedApplicationName: string;
    readonly resourceGroupName: string;
    readonly timeouts?: outputs.GetFederationTokenTimeouts;
    readonly token: string;
}
export function getFederationTokenOutput(args: GetFederationTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFederationTokenResult> {
    return pulumi.output(args).apply((a: any) => getFederationToken(a, opts))
}

/**
 * A collection of arguments for invoking getFederationToken.
 */
export interface GetFederationTokenOutputArgs {
    id?: pulumi.Input<string>;
    managedApplicationName: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetFederationTokenTimeoutsArgs>;
}
