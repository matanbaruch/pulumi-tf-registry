// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotState, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hcs:index/snapshot:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * Timestamp of when the snapshot was finished.
     */
    public /*out*/ readonly finishedAt!: pulumi.Output<string>;
    /**
     * The name of the HCS Azure Managed Application.
     */
    public readonly managedApplicationName!: pulumi.Output<string>;
    /**
     * Timestamp of when the snapshot was requested.
     */
    public /*out*/ readonly requestedAt!: pulumi.Output<string>;
    /**
     * The name of the Resource Group in which the HCS Azure Managed Application belongs.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Timestamp of when the snapshot was restored. If the snapshot has not been restored, this field will be blank.
     */
    public /*out*/ readonly restoredAt!: pulumi.Output<string>;
    /**
     * The size of the snapshot in bytes.
     */
    public /*out*/ readonly size!: pulumi.Output<number>;
    /**
     * The name of the snapshot.
     */
    public readonly snapshotName!: pulumi.Output<string>;
    /**
     * The state of the snapshot.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SnapshotTimeouts | undefined>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotArgs | SnapshotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotState | undefined;
            resourceInputs["finishedAt"] = state ? state.finishedAt : undefined;
            resourceInputs["managedApplicationName"] = state ? state.managedApplicationName : undefined;
            resourceInputs["requestedAt"] = state ? state.requestedAt : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["restoredAt"] = state ? state.restoredAt : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["snapshotName"] = state ? state.snapshotName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SnapshotArgs | undefined;
            if ((!args || args.managedApplicationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedApplicationName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.snapshotName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotName'");
            }
            resourceInputs["managedApplicationName"] = args ? args.managedApplicationName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["snapshotName"] = args ? args.snapshotName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["finishedAt"] = undefined /*out*/;
            resourceInputs["requestedAt"] = undefined /*out*/;
            resourceInputs["restoredAt"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Snapshot.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Snapshot resources.
 */
export interface SnapshotState {
    /**
     * Timestamp of when the snapshot was finished.
     */
    finishedAt?: pulumi.Input<string>;
    /**
     * The name of the HCS Azure Managed Application.
     */
    managedApplicationName?: pulumi.Input<string>;
    /**
     * Timestamp of when the snapshot was requested.
     */
    requestedAt?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the HCS Azure Managed Application belongs.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Timestamp of when the snapshot was restored. If the snapshot has not been restored, this field will be blank.
     */
    restoredAt?: pulumi.Input<string>;
    /**
     * The size of the snapshot in bytes.
     */
    size?: pulumi.Input<number>;
    /**
     * The name of the snapshot.
     */
    snapshotName?: pulumi.Input<string>;
    /**
     * The state of the snapshot.
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SnapshotTimeouts>;
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * The name of the HCS Azure Managed Application.
     */
    managedApplicationName: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the HCS Azure Managed Application belongs.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the snapshot.
     */
    snapshotName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SnapshotTimeouts>;
}
