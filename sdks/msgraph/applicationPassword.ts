// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApplicationPassword extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationPassword resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationPasswordState, opts?: pulumi.CustomResourceOptions): ApplicationPassword {
        return new ApplicationPassword(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'msgraph:index/applicationPassword:ApplicationPassword';

    /**
     * Returns true if the given object is an instance of ApplicationPassword.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationPassword {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationPassword.__pulumiType;
    }

    public readonly applicationId!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly endDateTime!: pulumi.Output<string>;
    public /*out*/ readonly secretText!: pulumi.Output<string>;
    public readonly startDateTime!: pulumi.Output<string>;

    /**
     * Create a ApplicationPassword resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationPasswordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationPasswordArgs | ApplicationPasswordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationPasswordState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endDateTime"] = state ? state.endDateTime : undefined;
            resourceInputs["secretText"] = state ? state.secretText : undefined;
            resourceInputs["startDateTime"] = state ? state.startDateTime : undefined;
        } else {
            const args = argsOrState as ApplicationPasswordArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endDateTime"] = args ? args.endDateTime : undefined;
            resourceInputs["startDateTime"] = args ? args.startDateTime : undefined;
            resourceInputs["secretText"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretText"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ApplicationPassword.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationPassword resources.
 */
export interface ApplicationPasswordState {
    applicationId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    endDateTime?: pulumi.Input<string>;
    secretText?: pulumi.Input<string>;
    startDateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationPassword resource.
 */
export interface ApplicationPasswordArgs {
    applicationId: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    endDateTime?: pulumi.Input<string>;
    startDateTime?: pulumi.Input<string>;
}
