// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'msgraph:index/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    public readonly api!: pulumi.Output<outputs.ApplicationApi | undefined>;
    public /*out*/ readonly appId!: pulumi.Output<string>;
    public readonly appRoles!: pulumi.Output<outputs.ApplicationAppRole[] | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly enableAccessTokenIssuance!: pulumi.Output<boolean | undefined>;
    public readonly enableIdTokenIssuance!: pulumi.Output<boolean | undefined>;
    public readonly homePageUrl!: pulumi.Output<string | undefined>;
    public readonly identifierUris!: pulumi.Output<string[] | undefined>;
    public readonly logoutUrl!: pulumi.Output<string | undefined>;
    public readonly redirectUris!: pulumi.Output<string[] | undefined>;
    public readonly requiredResourceAccesses!: pulumi.Output<outputs.ApplicationRequiredResourceAccess[] | undefined>;
    public readonly signInAudience!: pulumi.Output<string | undefined>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            resourceInputs["api"] = state ? state.api : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["appRoles"] = state ? state.appRoles : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enableAccessTokenIssuance"] = state ? state.enableAccessTokenIssuance : undefined;
            resourceInputs["enableIdTokenIssuance"] = state ? state.enableIdTokenIssuance : undefined;
            resourceInputs["homePageUrl"] = state ? state.homePageUrl : undefined;
            resourceInputs["identifierUris"] = state ? state.identifierUris : undefined;
            resourceInputs["logoutUrl"] = state ? state.logoutUrl : undefined;
            resourceInputs["redirectUris"] = state ? state.redirectUris : undefined;
            resourceInputs["requiredResourceAccesses"] = state ? state.requiredResourceAccesses : undefined;
            resourceInputs["signInAudience"] = state ? state.signInAudience : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["api"] = args ? args.api : undefined;
            resourceInputs["appRoles"] = args ? args.appRoles : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableAccessTokenIssuance"] = args ? args.enableAccessTokenIssuance : undefined;
            resourceInputs["enableIdTokenIssuance"] = args ? args.enableIdTokenIssuance : undefined;
            resourceInputs["homePageUrl"] = args ? args.homePageUrl : undefined;
            resourceInputs["identifierUris"] = args ? args.identifierUris : undefined;
            resourceInputs["logoutUrl"] = args ? args.logoutUrl : undefined;
            resourceInputs["redirectUris"] = args ? args.redirectUris : undefined;
            resourceInputs["requiredResourceAccesses"] = args ? args.requiredResourceAccesses : undefined;
            resourceInputs["signInAudience"] = args ? args.signInAudience : undefined;
            resourceInputs["appId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Application.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    api?: pulumi.Input<inputs.ApplicationApi>;
    appId?: pulumi.Input<string>;
    appRoles?: pulumi.Input<pulumi.Input<inputs.ApplicationAppRole>[]>;
    displayName?: pulumi.Input<string>;
    enableAccessTokenIssuance?: pulumi.Input<boolean>;
    enableIdTokenIssuance?: pulumi.Input<boolean>;
    homePageUrl?: pulumi.Input<string>;
    identifierUris?: pulumi.Input<pulumi.Input<string>[]>;
    logoutUrl?: pulumi.Input<string>;
    redirectUris?: pulumi.Input<pulumi.Input<string>[]>;
    requiredResourceAccesses?: pulumi.Input<pulumi.Input<inputs.ApplicationRequiredResourceAccess>[]>;
    signInAudience?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    api?: pulumi.Input<inputs.ApplicationApi>;
    appRoles?: pulumi.Input<pulumi.Input<inputs.ApplicationAppRole>[]>;
    displayName: pulumi.Input<string>;
    enableAccessTokenIssuance?: pulumi.Input<boolean>;
    enableIdTokenIssuance?: pulumi.Input<boolean>;
    homePageUrl?: pulumi.Input<string>;
    identifierUris?: pulumi.Input<pulumi.Input<string>[]>;
    logoutUrl?: pulumi.Input<string>;
    redirectUris?: pulumi.Input<pulumi.Input<string>[]>;
    requiredResourceAccesses?: pulumi.Input<pulumi.Input<inputs.ApplicationRequiredResourceAccess>[]>;
    signInAudience?: pulumi.Input<string>;
}
