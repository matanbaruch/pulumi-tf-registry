// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApplicationApi {
    acceptMappedClaims?: pulumi.Input<boolean>;
    knownClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    oauth2PermissionScopes?: pulumi.Input<pulumi.Input<inputs.ApplicationApiOauth2PermissionScope>[]>;
    preAuthorizedApplications?: pulumi.Input<pulumi.Input<inputs.ApplicationApiPreAuthorizedApplication>[]>;
    requestedAccessTokenVersion?: pulumi.Input<number>;
}

export interface ApplicationApiOauth2PermissionScope {
    adminConsentDescription: pulumi.Input<string>;
    adminConsentDisplayName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
    origin?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    userConsentDescription?: pulumi.Input<string>;
    userConsentDisplayName?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationApiPreAuthorizedApplication {
    appId: pulumi.Input<string>;
    delegatedPermissionIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationAppRole {
    allowedMemberTypes: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isEnabled?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface ApplicationRequiredResourceAccess {
    resourceAccesses: pulumi.Input<pulumi.Input<inputs.ApplicationRequiredResourceAccessResourceAccess>[]>;
    resourceAppId: pulumi.Input<string>;
}

export interface ApplicationRequiredResourceAccessResourceAccess {
    id: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
