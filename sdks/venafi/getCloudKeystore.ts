// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudKeystore(args: GetCloudKeystoreArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudKeystoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("venafi:index/getCloudKeystore:getCloudKeystore", {
        "cloudProviderId": args.cloudProviderId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudKeystore.
 */
export interface GetCloudKeystoreArgs {
    cloudProviderId: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getCloudKeystore.
 */
export interface GetCloudKeystoreResult {
    readonly cloudProviderId: string;
    readonly id: string;
    readonly machineIdentitiesCount: number;
    readonly name: string;
    readonly type: string;
}
export function getCloudKeystoreOutput(args: GetCloudKeystoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudKeystoreResult> {
    return pulumi.output(args).apply((a: any) => getCloudKeystore(a, opts))
}

/**
 * A collection of arguments for invoking getCloudKeystore.
 */
export interface GetCloudKeystoreOutputArgs {
    cloudProviderId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
