// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Tenant extends pulumi.CustomResource {
    /**
     * Get an existing Tenant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TenantState, opts?: pulumi.CustomResourceOptions): Tenant {
        return new Tenant(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netskopebwan:index/tenant:Tenant';

    /**
     * Returns true if the given object is an instance of Tenant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tenant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tenant.__pulumiType;
    }

    public readonly ancestorTenants!: pulumi.Output<string[]>;
    public readonly createdBy!: pulumi.Output<outputs.TenantCreatedBy | undefined>;
    public readonly dateCreated!: pulumi.Output<string>;
    public readonly dateModified!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly domainNames!: pulumi.Output<string[]>;
    public readonly isDisabled!: pulumi.Output<boolean>;
    public readonly modifiedBy!: pulumi.Output<outputs.TenantModifiedBy | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly parentId!: pulumi.Output<string>;
    public readonly restApiEndPoint!: pulumi.Output<string>;
    public readonly tenantType!: pulumi.Output<string>;
    public readonly tenantTypeInput!: pulumi.Output<string>;

    /**
     * Create a Tenant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TenantArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TenantArgs | TenantState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TenantState | undefined;
            resourceInputs["ancestorTenants"] = state ? state.ancestorTenants : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["dateCreated"] = state ? state.dateCreated : undefined;
            resourceInputs["dateModified"] = state ? state.dateModified : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainNames"] = state ? state.domainNames : undefined;
            resourceInputs["isDisabled"] = state ? state.isDisabled : undefined;
            resourceInputs["modifiedBy"] = state ? state.modifiedBy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["restApiEndPoint"] = state ? state.restApiEndPoint : undefined;
            resourceInputs["tenantType"] = state ? state.tenantType : undefined;
            resourceInputs["tenantTypeInput"] = state ? state.tenantTypeInput : undefined;
        } else {
            const args = argsOrState as TenantArgs | undefined;
            resourceInputs["ancestorTenants"] = args ? args.ancestorTenants : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["dateCreated"] = args ? args.dateCreated : undefined;
            resourceInputs["dateModified"] = args ? args.dateModified : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainNames"] = args ? args.domainNames : undefined;
            resourceInputs["isDisabled"] = args ? args.isDisabled : undefined;
            resourceInputs["modifiedBy"] = args ? args.modifiedBy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["restApiEndPoint"] = args ? args.restApiEndPoint : undefined;
            resourceInputs["tenantType"] = args ? args.tenantType : undefined;
            resourceInputs["tenantTypeInput"] = args ? args.tenantTypeInput : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tenant.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Tenant resources.
 */
export interface TenantState {
    ancestorTenants?: pulumi.Input<pulumi.Input<string>[]>;
    createdBy?: pulumi.Input<inputs.TenantCreatedBy>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    isDisabled?: pulumi.Input<boolean>;
    modifiedBy?: pulumi.Input<inputs.TenantModifiedBy>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    restApiEndPoint?: pulumi.Input<string>;
    tenantType?: pulumi.Input<string>;
    tenantTypeInput?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Tenant resource.
 */
export interface TenantArgs {
    ancestorTenants?: pulumi.Input<pulumi.Input<string>[]>;
    createdBy?: pulumi.Input<inputs.TenantCreatedBy>;
    dateCreated?: pulumi.Input<string>;
    dateModified?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    isDisabled?: pulumi.Input<boolean>;
    modifiedBy?: pulumi.Input<inputs.TenantModifiedBy>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    restApiEndPoint?: pulumi.Input<string>;
    tenantType?: pulumi.Input<string>;
    tenantTypeInput?: pulumi.Input<string>;
}
