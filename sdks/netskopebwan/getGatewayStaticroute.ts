// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGatewayStaticroute(args: GetGatewayStaticrouteArgs, opts?: pulumi.InvokeOptions): Promise<GetGatewayStaticrouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netskopebwan:index/getGatewayStaticroute:getGatewayStaticroute", {
        "advertise": args.advertise,
        "cost": args.cost,
        "destination": args.destination,
        "device": args.device,
        "gatewayId": args.gatewayId,
        "id": args.id,
        "install": args.install,
        "nhop": args.nhop,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGatewayStaticroute.
 */
export interface GetGatewayStaticrouteArgs {
    advertise?: boolean;
    cost?: number;
    destination: string;
    device?: string;
    gatewayId: string;
    id?: string;
    install?: boolean;
    nhop?: string;
}

/**
 * A collection of values returned by getGatewayStaticroute.
 */
export interface GetGatewayStaticrouteResult {
    readonly advertise: boolean;
    readonly cost: number;
    readonly destination: string;
    readonly device: string;
    readonly gatewayId: string;
    readonly id: string;
    readonly install: boolean;
    readonly nhop: string;
}
export function getGatewayStaticrouteOutput(args: GetGatewayStaticrouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGatewayStaticrouteResult> {
    return pulumi.output(args).apply((a: any) => getGatewayStaticroute(a, opts))
}

/**
 * A collection of arguments for invoking getGatewayStaticroute.
 */
export interface GetGatewayStaticrouteOutputArgs {
    advertise?: pulumi.Input<boolean>;
    cost?: pulumi.Input<number>;
    destination: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    gatewayId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    install?: pulumi.Input<boolean>;
    nhop?: pulumi.Input<string>;
}
