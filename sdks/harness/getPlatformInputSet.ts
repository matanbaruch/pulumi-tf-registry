// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPlatformInputSet(args: GetPlatformInputSetArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformInputSetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformInputSet:getPlatformInputSet", {
        "gitDetails": args.gitDetails,
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "pipelineId": args.pipelineId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformInputSet.
 */
export interface GetPlatformInputSetArgs {
    gitDetails?: inputs.GetPlatformInputSetGitDetails;
    id?: string;
    identifier?: string;
    name?: string;
    orgId: string;
    pipelineId: string;
    projectId: string;
}

/**
 * A collection of values returned by getPlatformInputSet.
 */
export interface GetPlatformInputSetResult {
    readonly description: string;
    readonly gitDetails?: outputs.GetPlatformInputSetGitDetails;
    readonly id: string;
    readonly identifier?: string;
    readonly name?: string;
    readonly orgId: string;
    readonly pipelineId: string;
    readonly projectId: string;
    readonly tags: string[];
    readonly yaml: string;
}
export function getPlatformInputSetOutput(args: GetPlatformInputSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformInputSetResult> {
    return pulumi.output(args).apply((a: any) => getPlatformInputSet(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformInputSet.
 */
export interface GetPlatformInputSetOutputArgs {
    gitDetails?: pulumi.Input<inputs.GetPlatformInputSetGitDetailsArgs>;
    id?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    pipelineId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
