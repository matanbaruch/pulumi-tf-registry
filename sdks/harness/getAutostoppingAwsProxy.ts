// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutostoppingAwsProxy(args: GetAutostoppingAwsProxyArgs, opts?: pulumi.InvokeOptions): Promise<GetAutostoppingAwsProxyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getAutostoppingAwsProxy:getAutostoppingAwsProxy", {
        "allocateStaticIp": args.allocateStaticIp,
        "apiKey": args.apiKey,
        "certificates": args.certificates,
        "cloudConnectorId": args.cloudConnectorId,
        "deleteCloudResourcesOnDestroy": args.deleteCloudResourcesOnDestroy,
        "hostName": args.hostName,
        "id": args.id,
        "keypair": args.keypair,
        "machineType": args.machineType,
        "name": args.name,
        "region": args.region,
        "route53HostedZoneId": args.route53HostedZoneId,
        "securityGroups": args.securityGroups,
        "vpc": args.vpc,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutostoppingAwsProxy.
 */
export interface GetAutostoppingAwsProxyArgs {
    allocateStaticIp?: boolean;
    apiKey: string;
    certificates?: inputs.GetAutostoppingAwsProxyCertificates;
    cloudConnectorId: string;
    deleteCloudResourcesOnDestroy: boolean;
    hostName: string;
    id?: string;
    keypair?: string;
    machineType: string;
    name: string;
    region: string;
    route53HostedZoneId?: string;
    securityGroups?: string[];
    vpc: string;
}

/**
 * A collection of values returned by getAutostoppingAwsProxy.
 */
export interface GetAutostoppingAwsProxyResult {
    readonly allocateStaticIp?: boolean;
    readonly apiKey: string;
    readonly certificates?: outputs.GetAutostoppingAwsProxyCertificates;
    readonly cloudConnectorId: string;
    readonly deleteCloudResourcesOnDestroy: boolean;
    readonly hostName: string;
    readonly id: string;
    readonly identifier: string;
    readonly keypair?: string;
    readonly machineType: string;
    readonly name: string;
    readonly region: string;
    readonly route53HostedZoneId?: string;
    readonly securityGroups?: string[];
    readonly vpc: string;
}
export function getAutostoppingAwsProxyOutput(args: GetAutostoppingAwsProxyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutostoppingAwsProxyResult> {
    return pulumi.output(args).apply((a: any) => getAutostoppingAwsProxy(a, opts))
}

/**
 * A collection of arguments for invoking getAutostoppingAwsProxy.
 */
export interface GetAutostoppingAwsProxyOutputArgs {
    allocateStaticIp?: pulumi.Input<boolean>;
    apiKey: pulumi.Input<string>;
    certificates?: pulumi.Input<inputs.GetAutostoppingAwsProxyCertificatesArgs>;
    cloudConnectorId: pulumi.Input<string>;
    deleteCloudResourcesOnDestroy: pulumi.Input<boolean>;
    hostName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keypair?: pulumi.Input<string>;
    machineType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    route53HostedZoneId?: pulumi.Input<string>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    vpc: pulumi.Input<string>;
}
