// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformApikey(args: GetPlatformApikeyArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformApikeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformApikey:getPlatformApikey", {
        "accountId": args.accountId,
        "apikeyType": args.apikeyType,
        "defaultTimeToExpireToken": args.defaultTimeToExpireToken,
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "parentId": args.parentId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformApikey.
 */
export interface GetPlatformApikeyArgs {
    accountId: string;
    apikeyType: string;
    defaultTimeToExpireToken?: number;
    id?: string;
    identifier: string;
    name?: string;
    orgId?: string;
    parentId: string;
    projectId?: string;
}

/**
 * A collection of values returned by getPlatformApikey.
 */
export interface GetPlatformApikeyResult {
    readonly accountId: string;
    readonly apikeyType: string;
    readonly defaultTimeToExpireToken?: number;
    readonly description: string;
    readonly id: string;
    readonly identifier: string;
    readonly name?: string;
    readonly orgId?: string;
    readonly parentId: string;
    readonly projectId?: string;
    readonly tags: string[];
}
export function getPlatformApikeyOutput(args: GetPlatformApikeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformApikeyResult> {
    return pulumi.output(args).apply((a: any) => getPlatformApikey(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformApikey.
 */
export interface GetPlatformApikeyOutputArgs {
    accountId: pulumi.Input<string>;
    apikeyType: pulumi.Input<string>;
    defaultTimeToExpireToken?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    parentId: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
