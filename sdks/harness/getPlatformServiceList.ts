// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPlatformServiceList(args?: GetPlatformServiceListArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformServiceListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformServiceList:getPlatformServiceList", {
        "id": args.id,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformServiceList.
 */
export interface GetPlatformServiceListArgs {
    id?: string;
    orgId?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getPlatformServiceList.
 */
export interface GetPlatformServiceListResult {
    readonly id: string;
    readonly orgId?: string;
    readonly projectId?: string;
    readonly services: outputs.GetPlatformServiceListService[];
}
export function getPlatformServiceListOutput(args?: GetPlatformServiceListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformServiceListResult> {
    return pulumi.output(args).apply((a: any) => getPlatformServiceList(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformServiceList.
 */
export interface GetPlatformServiceListOutputArgs {
    id?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
