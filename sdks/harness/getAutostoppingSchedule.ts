// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutostoppingSchedule(args: GetAutostoppingScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetAutostoppingScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getAutostoppingSchedule:getAutostoppingSchedule", {
        "id": args.id,
        "scheduleType": args.scheduleType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutostoppingSchedule.
 */
export interface GetAutostoppingScheduleArgs {
    id?: string;
    scheduleType: string;
}

/**
 * A collection of values returned by getAutostoppingSchedule.
 */
export interface GetAutostoppingScheduleResult {
    readonly endingOn: string;
    readonly id: string;
    readonly identifier: number;
    readonly name: string;
    readonly repeats: outputs.GetAutostoppingScheduleRepeat[];
    readonly rules: number[];
    readonly scheduleType: string;
    readonly startingFrom: string;
    readonly timeZone: string;
}
export function getAutostoppingScheduleOutput(args: GetAutostoppingScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutostoppingScheduleResult> {
    return pulumi.output(args).apply((a: any) => getAutostoppingSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getAutostoppingSchedule.
 */
export interface GetAutostoppingScheduleOutputArgs {
    id?: pulumi.Input<string>;
    scheduleType: pulumi.Input<string>;
}
