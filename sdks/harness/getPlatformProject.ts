// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformProject(args: GetPlatformProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformProject:getPlatformProject", {
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformProject.
 */
export interface GetPlatformProjectArgs {
    id?: string;
    identifier?: string;
    name?: string;
    orgId: string;
}

/**
 * A collection of values returned by getPlatformProject.
 */
export interface GetPlatformProjectResult {
    readonly color: string;
    readonly description: string;
    readonly id: string;
    readonly identifier?: string;
    readonly modules: string[];
    readonly name?: string;
    readonly orgId: string;
    readonly tags: string[];
}
export function getPlatformProjectOutput(args: GetPlatformProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformProjectResult> {
    return pulumi.output(args).apply((a: any) => getPlatformProject(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformProject.
 */
export interface GetPlatformProjectOutputArgs {
    id?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
}
