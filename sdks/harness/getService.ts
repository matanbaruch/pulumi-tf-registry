// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getService:getService", {
        "appId": args.appId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceArgs {
    appId: string;
    id: string;
}

/**
 * A collection of values returned by getService.
 */
export interface GetServiceResult {
    readonly appId: string;
    readonly artifactType: string;
    readonly description: string;
    readonly helmVersion: string;
    readonly id: string;
    readonly name: string;
    readonly tags: {[key: string]: string};
    readonly templateUri: string;
    readonly type: string;
}
export function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    return pulumi.output(args).apply((a: any) => getService(a, opts))
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceOutputArgs {
    appId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
