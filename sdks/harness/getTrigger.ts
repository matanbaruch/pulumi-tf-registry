// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTrigger(args?: GetTriggerArgs, opts?: pulumi.InvokeOptions): Promise<GetTriggerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getTrigger:getTrigger", {
        "appId": args.appId,
        "description": args.description,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTrigger.
 */
export interface GetTriggerArgs {
    appId?: string;
    description?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getTrigger.
 */
export interface GetTriggerResult {
    readonly appId?: string;
    readonly conditions: outputs.GetTriggerCondition[];
    readonly description?: string;
    readonly id?: string;
    readonly name?: string;
}
export function getTriggerOutput(args?: GetTriggerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTriggerResult> {
    return pulumi.output(args).apply((a: any) => getTrigger(a, opts))
}

/**
 * A collection of arguments for invoking getTrigger.
 */
export interface GetTriggerOutputArgs {
    appId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
