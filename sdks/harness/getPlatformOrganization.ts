// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformOrganization(args?: GetPlatformOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformOrganizationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformOrganization:getPlatformOrganization", {
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformOrganization.
 */
export interface GetPlatformOrganizationArgs {
    id?: string;
    identifier?: string;
    name?: string;
}

/**
 * A collection of values returned by getPlatformOrganization.
 */
export interface GetPlatformOrganizationResult {
    readonly description: string;
    readonly id: string;
    readonly identifier?: string;
    readonly name?: string;
    readonly tags: string[];
}
export function getPlatformOrganizationOutput(args?: GetPlatformOrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformOrganizationResult> {
    return pulumi.output(args).apply((a: any) => getPlatformOrganization(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformOrganization.
 */
export interface GetPlatformOrganizationOutputArgs {
    id?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
