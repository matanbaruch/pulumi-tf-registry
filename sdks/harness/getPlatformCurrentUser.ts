// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformCurrentUser(args?: GetPlatformCurrentUserArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformCurrentUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformCurrentUser:getPlatformCurrentUser", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformCurrentUser.
 */
export interface GetPlatformCurrentUserArgs {
    id?: string;
}

/**
 * A collection of values returned by getPlatformCurrentUser.
 */
export interface GetPlatformCurrentUserResult {
    readonly admin: boolean;
    readonly billingFrequency: string;
    readonly defaultAccountId: string;
    readonly edition: string;
    readonly email: string;
    readonly emailVerified: boolean;
    readonly id: string;
    readonly intent: string;
    readonly isTwoFactorAuthEnabled: boolean;
    readonly locked: boolean;
    readonly name: string;
    readonly signupAction: string;
    readonly token: string;
    readonly uuid: string;
}
export function getPlatformCurrentUserOutput(args?: GetPlatformCurrentUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformCurrentUserResult> {
    return pulumi.output(args).apply((a: any) => getPlatformCurrentUser(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformCurrentUser.
 */
export interface GetPlatformCurrentUserOutputArgs {
    id?: pulumi.Input<string>;
}
