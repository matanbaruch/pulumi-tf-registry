// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPlatformGitopsRepository(args: GetPlatformGitopsRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformGitopsRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformGitopsRepository:getPlatformGitopsRepository", {
        "accountId": args.accountId,
        "agentId": args.agentId,
        "enableOci": args.enableOci,
        "id": args.id,
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "updateMasks": args.updateMasks,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformGitopsRepository.
 */
export interface GetPlatformGitopsRepositoryArgs {
    accountId: string;
    agentId: string;
    enableOci?: boolean;
    id?: string;
    identifier: string;
    orgId?: string;
    projectId?: string;
    updateMasks?: inputs.GetPlatformGitopsRepositoryUpdateMask[];
}

/**
 * A collection of values returned by getPlatformGitopsRepository.
 */
export interface GetPlatformGitopsRepositoryResult {
    readonly accountId: string;
    readonly agentId: string;
    readonly enableOci: boolean;
    readonly id: string;
    readonly identifier: string;
    readonly orgId?: string;
    readonly projectId?: string;
    readonly repos: outputs.GetPlatformGitopsRepositoryRepo[];
    readonly updateMasks?: outputs.GetPlatformGitopsRepositoryUpdateMask[];
}
export function getPlatformGitopsRepositoryOutput(args: GetPlatformGitopsRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformGitopsRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getPlatformGitopsRepository(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformGitopsRepository.
 */
export interface GetPlatformGitopsRepositoryOutputArgs {
    accountId: pulumi.Input<string>;
    agentId: pulumi.Input<string>;
    enableOci?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    updateMasks?: pulumi.Input<pulumi.Input<inputs.GetPlatformGitopsRepositoryUpdateMaskArgs>[]>;
}
