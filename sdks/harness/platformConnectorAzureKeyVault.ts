// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PlatformConnectorAzureKeyVault extends pulumi.CustomResource {
    /**
     * Get an existing PlatformConnectorAzureKeyVault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PlatformConnectorAzureKeyVaultState, opts?: pulumi.CustomResourceOptions): PlatformConnectorAzureKeyVault {
        return new PlatformConnectorAzureKeyVault(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:index/platformConnectorAzureKeyVault:PlatformConnectorAzureKeyVault';

    /**
     * Returns true if the given object is an instance of PlatformConnectorAzureKeyVault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PlatformConnectorAzureKeyVault {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PlatformConnectorAzureKeyVault.__pulumiType;
    }

    /**
     * Azure environment type. Possible values: AZURE or AZURE_US_GOVERNMENT. Default value: AZURE
     */
    public readonly azureEnvironmentType!: pulumi.Output<string>;
    /**
     * Application ID of the Azure App.
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * Tags to filter delegates for connection.
     */
    public readonly delegateSelectors!: pulumi.Output<string[] | undefined>;
    /**
     * Description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the resource.
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * Specifies whether or not is the default value.
     */
    public readonly isDefault!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Unique identifier of the organization.
     */
    public readonly orgId!: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the project.
     */
    public readonly projectId!: pulumi.Output<string | undefined>;
    /**
     * The Harness text secret with the Azure authentication key as its value.
     */
    public readonly secretKey!: pulumi.Output<string>;
    /**
     * Azure subscription ID.
     */
    public readonly subscription!: pulumi.Output<string>;
    /**
     * Tags to associate with the resource.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The Azure Active Directory (Azure AD) directory ID where you created your application.
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * Name of the vault.
     */
    public readonly vaultName!: pulumi.Output<string>;

    /**
     * Create a PlatformConnectorAzureKeyVault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PlatformConnectorAzureKeyVaultArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PlatformConnectorAzureKeyVaultArgs | PlatformConnectorAzureKeyVaultState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PlatformConnectorAzureKeyVaultState | undefined;
            resourceInputs["azureEnvironmentType"] = state ? state.azureEnvironmentType : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["delegateSelectors"] = state ? state.delegateSelectors : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["subscription"] = state ? state.subscription : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["vaultName"] = state ? state.vaultName : undefined;
        } else {
            const args = argsOrState as PlatformConnectorAzureKeyVaultArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.secretKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretKey'");
            }
            if ((!args || args.subscription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscription'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.vaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultName'");
            }
            resourceInputs["azureEnvironmentType"] = args ? args.azureEnvironmentType : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["delegateSelectors"] = args ? args.delegateSelectors : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["isDefault"] = args ? args.isDefault : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["secretKey"] = args ? args.secretKey : undefined;
            resourceInputs["subscription"] = args ? args.subscription : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["vaultName"] = args ? args.vaultName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PlatformConnectorAzureKeyVault.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PlatformConnectorAzureKeyVault resources.
 */
export interface PlatformConnectorAzureKeyVaultState {
    /**
     * Azure environment type. Possible values: AZURE or AZURE_US_GOVERNMENT. Default value: AZURE
     */
    azureEnvironmentType?: pulumi.Input<string>;
    /**
     * Application ID of the Azure App.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Tags to filter delegates for connection.
     */
    delegateSelectors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Specifies whether or not is the default value.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The Harness text secret with the Azure authentication key as its value.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Azure subscription ID.
     */
    subscription?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Azure Active Directory (Azure AD) directory ID where you created your application.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Name of the vault.
     */
    vaultName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PlatformConnectorAzureKeyVault resource.
 */
export interface PlatformConnectorAzureKeyVaultArgs {
    /**
     * Azure environment type. Possible values: AZURE or AZURE_US_GOVERNMENT. Default value: AZURE
     */
    azureEnvironmentType?: pulumi.Input<string>;
    /**
     * Application ID of the Azure App.
     */
    clientId: pulumi.Input<string>;
    /**
     * Tags to filter delegates for connection.
     */
    delegateSelectors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Specifies whether or not is the default value.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The Harness text secret with the Azure authentication key as its value.
     */
    secretKey: pulumi.Input<string>;
    /**
     * Azure subscription ID.
     */
    subscription: pulumi.Input<string>;
    /**
     * Tags to associate with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Azure Active Directory (Azure AD) directory ID where you created your application.
     */
    tenantId: pulumi.Input<string>;
    /**
     * Name of the vault.
     */
    vaultName: pulumi.Input<string>;
}
