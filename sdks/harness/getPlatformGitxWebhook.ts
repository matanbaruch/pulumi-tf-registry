// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformGitxWebhook(args: GetPlatformGitxWebhookArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformGitxWebhookResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformGitxWebhook:getPlatformGitxWebhook", {
        "description": args.description,
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformGitxWebhook.
 */
export interface GetPlatformGitxWebhookArgs {
    description?: string;
    id?: string;
    identifier: string;
    name: string;
    orgId?: string;
    projectId?: string;
    tags?: string[];
}

/**
 * A collection of values returned by getPlatformGitxWebhook.
 */
export interface GetPlatformGitxWebhookResult {
    readonly description?: string;
    readonly id: string;
    readonly identifier: string;
    readonly name: string;
    readonly orgId?: string;
    readonly projectId?: string;
    readonly tags?: string[];
}
export function getPlatformGitxWebhookOutput(args: GetPlatformGitxWebhookOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformGitxWebhookResult> {
    return pulumi.output(args).apply((a: any) => getPlatformGitxWebhook(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformGitxWebhook.
 */
export interface GetPlatformGitxWebhookOutputArgs {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    name: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
