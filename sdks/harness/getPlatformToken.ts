// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformToken(args: GetPlatformTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformTokenResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformToken:getPlatformToken", {
        "accountId": args.accountId,
        "apikeyId": args.apikeyId,
        "apikeyType": args.apikeyType,
        "email": args.email,
        "encodedPassword": args.encodedPassword,
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "parentId": args.parentId,
        "projectId": args.projectId,
        "scheduledExpireTime": args.scheduledExpireTime,
        "username": args.username,
        "valid": args.valid,
        "validFrom": args.validFrom,
        "validTo": args.validTo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformToken.
 */
export interface GetPlatformTokenArgs {
    accountId: string;
    apikeyId: string;
    apikeyType: string;
    email?: string;
    encodedPassword?: string;
    id?: string;
    identifier: string;
    name?: string;
    orgId?: string;
    parentId: string;
    projectId?: string;
    scheduledExpireTime?: number;
    username?: string;
    valid?: boolean;
    validFrom?: number;
    validTo?: number;
}

/**
 * A collection of values returned by getPlatformToken.
 */
export interface GetPlatformTokenResult {
    readonly accountId: string;
    readonly apikeyId: string;
    readonly apikeyType: string;
    readonly description: string;
    readonly email?: string;
    readonly encodedPassword?: string;
    readonly id: string;
    readonly identifier: string;
    readonly name?: string;
    readonly orgId?: string;
    readonly parentId: string;
    readonly projectId?: string;
    readonly scheduledExpireTime?: number;
    readonly tags: string[];
    readonly username?: string;
    readonly valid?: boolean;
    readonly validFrom?: number;
    readonly validTo?: number;
}
export function getPlatformTokenOutput(args: GetPlatformTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformTokenResult> {
    return pulumi.output(args).apply((a: any) => getPlatformToken(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformToken.
 */
export interface GetPlatformTokenOutputArgs {
    accountId: pulumi.Input<string>;
    apikeyId: pulumi.Input<string>;
    apikeyType: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    encodedPassword?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    parentId: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    scheduledExpireTime?: pulumi.Input<number>;
    username?: pulumi.Input<string>;
    valid?: pulumi.Input<boolean>;
    validFrom?: pulumi.Input<number>;
    validTo?: pulumi.Input<number>;
}
