// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPlatformGitopsApplications(args: GetPlatformGitopsApplicationsArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformGitopsApplicationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformGitopsApplications:getPlatformGitopsApplications", {
        "accountId": args.accountId,
        "agentId": args.agentId,
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformGitopsApplications.
 */
export interface GetPlatformGitopsApplicationsArgs {
    accountId: string;
    agentId: string;
    id?: string;
    identifier?: string;
    name: string;
    orgId: string;
    projectId: string;
}

/**
 * A collection of values returned by getPlatformGitopsApplications.
 */
export interface GetPlatformGitopsApplicationsResult {
    readonly accountId: string;
    readonly agentId: string;
    readonly applications: outputs.GetPlatformGitopsApplicationsApplication[];
    readonly clusterId: string;
    readonly id: string;
    readonly identifier?: string;
    readonly kind: string;
    readonly name: string;
    readonly optionsRemoveExistingFinalizers: boolean;
    readonly orgId: string;
    readonly project: string;
    readonly projectId: string;
    readonly repoId: string;
    readonly requestCascade: boolean;
    readonly requestPropagationPolicy: string;
    readonly skipRepoValidation: boolean;
    readonly upsert: boolean;
    readonly validate: boolean;
}
export function getPlatformGitopsApplicationsOutput(args: GetPlatformGitopsApplicationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformGitopsApplicationsResult> {
    return pulumi.output(args).apply((a: any) => getPlatformGitopsApplications(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformGitopsApplications.
 */
export interface GetPlatformGitopsApplicationsOutputArgs {
    accountId: pulumi.Input<string>;
    agentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identifier?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
