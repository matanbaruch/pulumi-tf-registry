// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformIacmDefaultPipeline(args: GetPlatformIacmDefaultPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformIacmDefaultPipelineResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformIacmDefaultPipeline:getPlatformIacmDefaultPipeline", {
        "id": args.id,
        "operation": args.operation,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "provisionerType": args.provisionerType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformIacmDefaultPipeline.
 */
export interface GetPlatformIacmDefaultPipelineArgs {
    id?: string;
    operation: string;
    orgId: string;
    projectId: string;
    provisionerType: string;
}

/**
 * A collection of values returned by getPlatformIacmDefaultPipeline.
 */
export interface GetPlatformIacmDefaultPipelineResult {
    readonly id: string;
    readonly operation: string;
    readonly orgId: string;
    readonly pipeline: string;
    readonly projectId: string;
    readonly provisionerType: string;
}
export function getPlatformIacmDefaultPipelineOutput(args: GetPlatformIacmDefaultPipelineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformIacmDefaultPipelineResult> {
    return pulumi.output(args).apply((a: any) => getPlatformIacmDefaultPipeline(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformIacmDefaultPipeline.
 */
export interface GetPlatformIacmDefaultPipelineOutputArgs {
    id?: pulumi.Input<string>;
    operation: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    provisionerType: pulumi.Input<string>;
}
