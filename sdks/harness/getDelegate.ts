// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDelegate(args?: GetDelegateArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getDelegate:getDelegate", {
        "hostname": args.hostname,
        "id": args.id,
        "name": args.name,
        "status": args.status,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegate.
 */
export interface GetDelegateArgs {
    hostname?: string;
    id?: string;
    name?: string;
    status?: string;
    type?: string;
}

/**
 * A collection of values returned by getDelegate.
 */
export interface GetDelegateResult {
    readonly accountId: string;
    readonly description: string;
    readonly hostname?: string;
    readonly id?: string;
    readonly ip: string;
    readonly lastHeartbeat: string;
    readonly name?: string;
    readonly pollingModeEnabled: boolean;
    readonly profileId: string;
    readonly status?: string;
    readonly type?: string;
    readonly version: string;
}
export function getDelegateOutput(args?: GetDelegateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegateResult> {
    return pulumi.output(args).apply((a: any) => getDelegate(a, opts))
}

/**
 * A collection of arguments for invoking getDelegate.
 */
export interface GetDelegateOutputArgs {
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
