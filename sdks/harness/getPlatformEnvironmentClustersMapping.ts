// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPlatformEnvironmentClustersMapping(args: GetPlatformEnvironmentClustersMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformEnvironmentClustersMappingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformEnvironmentClustersMapping:getPlatformEnvironmentClustersMapping", {
        "clusters": args.clusters,
        "envId": args.envId,
        "id": args.id,
        "identifier": args.identifier,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformEnvironmentClustersMapping.
 */
export interface GetPlatformEnvironmentClustersMappingArgs {
    clusters?: inputs.GetPlatformEnvironmentClustersMappingCluster[];
    envId: string;
    id?: string;
    identifier: string;
    orgId?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getPlatformEnvironmentClustersMapping.
 */
export interface GetPlatformEnvironmentClustersMappingResult {
    readonly clusters?: outputs.GetPlatformEnvironmentClustersMappingCluster[];
    readonly envId: string;
    readonly id: string;
    readonly identifier: string;
    readonly orgId?: string;
    readonly projectId?: string;
    readonly scope: string;
}
export function getPlatformEnvironmentClustersMappingOutput(args: GetPlatformEnvironmentClustersMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformEnvironmentClustersMappingResult> {
    return pulumi.output(args).apply((a: any) => getPlatformEnvironmentClustersMapping(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformEnvironmentClustersMapping.
 */
export interface GetPlatformEnvironmentClustersMappingOutputArgs {
    clusters?: pulumi.Input<pulumi.Input<inputs.GetPlatformEnvironmentClustersMappingClusterArgs>[]>;
    envId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
