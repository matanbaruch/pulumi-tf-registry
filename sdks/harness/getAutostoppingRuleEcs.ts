// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutostoppingRuleEcs(args: GetAutostoppingRuleEcsArgs, opts?: pulumi.InvokeOptions): Promise<GetAutostoppingRuleEcsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getAutostoppingRuleEcs:getAutostoppingRuleEcs", {
        "cloudConnectorId": args.cloudConnectorId,
        "container": args.container,
        "customDomains": args.customDomains,
        "depends": args.depends,
        "https": args.https,
        "id": args.id,
        "idleTimeMins": args.idleTimeMins,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutostoppingRuleEcs.
 */
export interface GetAutostoppingRuleEcsArgs {
    cloudConnectorId: string;
    container?: inputs.GetAutostoppingRuleEcsContainer;
    customDomains?: string[];
    depends?: inputs.GetAutostoppingRuleEcsDepend[];
    https?: inputs.GetAutostoppingRuleEcsHttp[];
    id?: string;
    idleTimeMins?: number;
    name: string;
}

/**
 * A collection of values returned by getAutostoppingRuleEcs.
 */
export interface GetAutostoppingRuleEcsResult {
    readonly cloudConnectorId: string;
    readonly container?: outputs.GetAutostoppingRuleEcsContainer;
    readonly customDomains?: string[];
    readonly depends?: outputs.GetAutostoppingRuleEcsDepend[];
    readonly https?: outputs.GetAutostoppingRuleEcsHttp[];
    readonly id: string;
    readonly identifier: number;
    readonly idleTimeMins?: number;
    readonly name: string;
}
export function getAutostoppingRuleEcsOutput(args: GetAutostoppingRuleEcsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutostoppingRuleEcsResult> {
    return pulumi.output(args).apply((a: any) => getAutostoppingRuleEcs(a, opts))
}

/**
 * A collection of arguments for invoking getAutostoppingRuleEcs.
 */
export interface GetAutostoppingRuleEcsOutputArgs {
    cloudConnectorId: pulumi.Input<string>;
    container?: pulumi.Input<inputs.GetAutostoppingRuleEcsContainerArgs>;
    customDomains?: pulumi.Input<pulumi.Input<string>[]>;
    depends?: pulumi.Input<pulumi.Input<inputs.GetAutostoppingRuleEcsDependArgs>[]>;
    https?: pulumi.Input<pulumi.Input<inputs.GetAutostoppingRuleEcsHttpArgs>[]>;
    id?: pulumi.Input<string>;
    idleTimeMins?: pulumi.Input<number>;
    name: pulumi.Input<string>;
}
