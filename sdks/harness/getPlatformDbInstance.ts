// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformDbInstance(args: GetPlatformDbInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformDbInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformDbInstance:getPlatformDbInstance", {
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "schema": args.schema,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformDbInstance.
 */
export interface GetPlatformDbInstanceArgs {
    id?: string;
    identifier: string;
    name?: string;
    orgId: string;
    projectId: string;
    schema: string;
}

/**
 * A collection of values returned by getPlatformDbInstance.
 */
export interface GetPlatformDbInstanceResult {
    readonly branch: string;
    readonly connector: string;
    readonly context: string;
    readonly description: string;
    readonly id: string;
    readonly identifier: string;
    readonly name?: string;
    readonly orgId: string;
    readonly projectId: string;
    readonly schema: string;
    readonly tags: string[];
}
export function getPlatformDbInstanceOutput(args: GetPlatformDbInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformDbInstanceResult> {
    return pulumi.output(args).apply((a: any) => getPlatformDbInstance(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformDbInstance.
 */
export interface GetPlatformDbInstanceOutputArgs {
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    schema: pulumi.Input<string>;
}
