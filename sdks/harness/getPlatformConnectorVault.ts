// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformConnectorVault(args: GetPlatformConnectorVaultArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformConnectorVaultResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformConnectorVault:getPlatformConnectorVault", {
        "id": args.id,
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformConnectorVault.
 */
export interface GetPlatformConnectorVaultArgs {
    id?: string;
    identifier: string;
    name?: string;
    orgId?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getPlatformConnectorVault.
 */
export interface GetPlatformConnectorVaultResult {
    readonly accessType: string;
    readonly appRoleId: string;
    readonly authToken: string;
    readonly awsRegion: string;
    readonly basePath: string;
    readonly default: boolean;
    readonly delegateSelectors: string[];
    readonly description: string;
    readonly id: string;
    readonly identifier: string;
    readonly isDefault: boolean;
    readonly isReadOnly: boolean;
    readonly k8sAuthEndpoint: string;
    readonly name?: string;
    readonly namespace: string;
    readonly orgId?: string;
    readonly projectId?: string;
    readonly readOnly: boolean;
    readonly renewAppRoleToken: boolean;
    readonly renewalIntervalMinutes: number;
    readonly secretEngineManuallyConfigured: boolean;
    readonly secretEngineName: string;
    readonly secretEngineVersion: number;
    readonly secretId: string;
    readonly serviceAccountTokenPath: string;
    readonly sinkPath: string;
    readonly tags: string[];
    readonly useAwsIam: boolean;
    readonly useK8sAuth: boolean;
    readonly useVaultAgent: boolean;
    readonly vaultAwsIamRole: string;
    readonly vaultK8sAuthRole: string;
    readonly vaultUrl: string;
    readonly xvaultAwsIamServerId: string;
}
export function getPlatformConnectorVaultOutput(args: GetPlatformConnectorVaultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformConnectorVaultResult> {
    return pulumi.output(args).apply((a: any) => getPlatformConnectorVault(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformConnectorVault.
 */
export interface GetPlatformConnectorVaultOutputArgs {
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
