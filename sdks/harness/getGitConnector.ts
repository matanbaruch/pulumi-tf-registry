// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGitConnector(args?: GetGitConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetGitConnectorResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getGitConnector:getGitConnector", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGitConnector.
 */
export interface GetGitConnectorArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getGitConnector.
 */
export interface GetGitConnectorResult {
    readonly branch: string;
    readonly commitDetails: outputs.GetGitConnectorCommitDetail[];
    readonly createdAt: string;
    readonly delegateSelectors: string[];
    readonly generateWebhookUrl: boolean;
    readonly id?: string;
    readonly name?: string;
    readonly passwordSecretId: string;
    readonly sshSettingId: string;
    readonly url: string;
    readonly urlType: string;
    readonly username: string;
    readonly webhookUrl: string;
}
export function getGitConnectorOutput(args?: GetGitConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGitConnectorResult> {
    return pulumi.output(args).apply((a: any) => getGitConnector(a, opts))
}

/**
 * A collection of arguments for invoking getGitConnector.
 */
export interface GetGitConnectorOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
