// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformRepoWebhook(args: GetPlatformRepoWebhookArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformRepoWebhookResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformRepoWebhook:getPlatformRepoWebhook", {
        "description": args.description,
        "enabled": args.enabled,
        "id": args.id,
        "identifier": args.identifier,
        "insecure": args.insecure,
        "orgId": args.orgId,
        "projectId": args.projectId,
        "repoIdentifier": args.repoIdentifier,
        "secret": args.secret,
        "triggers": args.triggers,
        "url": args.url,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformRepoWebhook.
 */
export interface GetPlatformRepoWebhookArgs {
    description?: string;
    enabled: boolean;
    id?: string;
    identifier: string;
    insecure: boolean;
    orgId?: string;
    projectId?: string;
    repoIdentifier: string;
    secret?: string;
    triggers?: string[];
    url: string;
}

/**
 * A collection of values returned by getPlatformRepoWebhook.
 */
export interface GetPlatformRepoWebhookResult {
    readonly created: number;
    readonly createdBy: number;
    readonly description?: string;
    readonly enabled: boolean;
    readonly hasSecret: boolean;
    readonly id: string;
    readonly identifier: string;
    readonly insecure: boolean;
    readonly orgId?: string;
    readonly projectId?: string;
    readonly repoIdentifier: string;
    readonly secret?: string;
    readonly triggers?: string[];
    readonly url: string;
}
export function getPlatformRepoWebhookOutput(args: GetPlatformRepoWebhookOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformRepoWebhookResult> {
    return pulumi.output(args).apply((a: any) => getPlatformRepoWebhook(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformRepoWebhook.
 */
export interface GetPlatformRepoWebhookOutputArgs {
    description?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
    insecure: pulumi.Input<boolean>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    repoIdentifier: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    triggers?: pulumi.Input<pulumi.Input<string>[]>;
    url: pulumi.Input<string>;
}
