// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDelegateIds(args?: GetDelegateIdsArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegateIdsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getDelegateIds:getDelegateIds", {
        "id": args.id,
        "name": args.name,
        "status": args.status,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDelegateIds.
 */
export interface GetDelegateIdsArgs {
    id?: string;
    name?: string;
    status?: string;
    type?: string;
}

/**
 * A collection of values returned by getDelegateIds.
 */
export interface GetDelegateIdsResult {
    readonly delegateIds: string[];
    readonly id: string;
    readonly name?: string;
    readonly status?: string;
    readonly type?: string;
}
export function getDelegateIdsOutput(args?: GetDelegateIdsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegateIdsResult> {
    return pulumi.output(args).apply((a: any) => getDelegateIds(a, opts))
}

/**
 * A collection of arguments for invoking getDelegateIds.
 */
export interface GetDelegateIdsOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
