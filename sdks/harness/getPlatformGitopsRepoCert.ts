// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlatformGitopsRepoCert(args: GetPlatformGitopsRepoCertArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformGitopsRepoCertResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("harness:index/getPlatformGitopsRepoCert:getPlatformGitopsRepoCert", {
        "accountId": args.accountId,
        "agentId": args.agentId,
        "id": args.id,
        "orgId": args.orgId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlatformGitopsRepoCert.
 */
export interface GetPlatformGitopsRepoCertArgs {
    accountId: string;
    agentId?: string;
    id?: string;
    orgId?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getPlatformGitopsRepoCert.
 */
export interface GetPlatformGitopsRepoCertResult {
    readonly accountId: string;
    readonly agentId?: string;
    readonly id: string;
    readonly orgId?: string;
    readonly projectId?: string;
}
export function getPlatformGitopsRepoCertOutput(args: GetPlatformGitopsRepoCertOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPlatformGitopsRepoCertResult> {
    return pulumi.output(args).apply((a: any) => getPlatformGitopsRepoCert(a, opts))
}

/**
 * A collection of arguments for invoking getPlatformGitopsRepoCert.
 */
export interface GetPlatformGitopsRepoCertOutputArgs {
    accountId: pulumi.Input<string>;
    agentId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
