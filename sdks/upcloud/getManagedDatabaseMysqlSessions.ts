// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagedDatabaseMysqlSessions(args: GetManagedDatabaseMysqlSessionsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedDatabaseMysqlSessionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("upcloud:index/getManagedDatabaseMysqlSessions:getManagedDatabaseMysqlSessions", {
        "id": args.id,
        "limit": args.limit,
        "offset": args.offset,
        "order": args.order,
        "service": args.service,
        "sessions": args.sessions,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagedDatabaseMysqlSessions.
 */
export interface GetManagedDatabaseMysqlSessionsArgs {
    id?: string;
    limit?: number;
    offset?: number;
    order?: string;
    service: string;
    sessions?: inputs.GetManagedDatabaseMysqlSessionsSession[];
}

/**
 * A collection of values returned by getManagedDatabaseMysqlSessions.
 */
export interface GetManagedDatabaseMysqlSessionsResult {
    readonly id: string;
    readonly limit?: number;
    readonly offset?: number;
    readonly order?: string;
    readonly service: string;
    readonly sessions?: outputs.GetManagedDatabaseMysqlSessionsSession[];
}
export function getManagedDatabaseMysqlSessionsOutput(args: GetManagedDatabaseMysqlSessionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedDatabaseMysqlSessionsResult> {
    return pulumi.output(args).apply((a: any) => getManagedDatabaseMysqlSessions(a, opts))
}

/**
 * A collection of arguments for invoking getManagedDatabaseMysqlSessions.
 */
export interface GetManagedDatabaseMysqlSessionsOutputArgs {
    id?: pulumi.Input<string>;
    limit?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    order?: pulumi.Input<string>;
    service: pulumi.Input<string>;
    sessions?: pulumi.Input<pulumi.Input<inputs.GetManagedDatabaseMysqlSessionsSessionArgs>[]>;
}
