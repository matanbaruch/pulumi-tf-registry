// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getStorage(args: GetStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("upcloud:index/getStorage:getStorage", {
        "accessType": args.accessType,
        "id": args.id,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "type": args.type,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorage.
 */
export interface GetStorageArgs {
    accessType?: string;
    id?: string;
    mostRecent?: boolean;
    name?: string;
    nameRegex?: string;
    type: string;
    zone?: string;
}

/**
 * A collection of values returned by getStorage.
 */
export interface GetStorageResult {
    readonly accessType: string;
    readonly id: string;
    readonly mostRecent?: boolean;
    readonly name?: string;
    readonly nameRegex?: string;
    readonly size: number;
    readonly state: string;
    readonly tier: string;
    readonly title: string;
    readonly type: string;
    readonly zone: string;
}
export function getStorageOutput(args: GetStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageResult> {
    return pulumi.output(args).apply((a: any) => getStorage(a, opts))
}

/**
 * A collection of arguments for invoking getStorage.
 */
export interface GetStorageOutputArgs {
    accessType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
