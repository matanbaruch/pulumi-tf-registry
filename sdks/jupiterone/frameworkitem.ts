// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Frameworkitem extends pulumi.CustomResource {
    /**
     * Get an existing Frameworkitem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FrameworkitemState, opts?: pulumi.CustomResourceOptions): Frameworkitem {
        return new Frameworkitem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'jupiterone:index/frameworkitem:Frameworkitem';

    /**
     * Returns true if the given object is an instance of Frameworkitem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Frameworkitem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Frameworkitem.__pulumiType;
    }

    /**
     * Description of the item
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly displayCategory!: pulumi.Output<string | undefined>;
    /**
     * The internal ID of the framework this item belongs to
     */
    public readonly frameworkId!: pulumi.Output<string>;
    /**
     * The internal ID of the framework group this item belongs to
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * The FrameworkItem's display name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A unique identifier that can be used to refer to this item
     */
    public readonly ref!: pulumi.Output<string>;
    /**
     * A URL for referencing additional information about the item
     */
    public readonly webLink!: pulumi.Output<string | undefined>;

    /**
     * Create a Frameworkitem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrameworkitemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FrameworkitemArgs | FrameworkitemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FrameworkitemState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayCategory"] = state ? state.displayCategory : undefined;
            resourceInputs["frameworkId"] = state ? state.frameworkId : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ref"] = state ? state.ref : undefined;
            resourceInputs["webLink"] = state ? state.webLink : undefined;
        } else {
            const args = argsOrState as FrameworkitemArgs | undefined;
            if ((!args || args.frameworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frameworkId'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.ref === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ref'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayCategory"] = args ? args.displayCategory : undefined;
            resourceInputs["frameworkId"] = args ? args.frameworkId : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ref"] = args ? args.ref : undefined;
            resourceInputs["webLink"] = args ? args.webLink : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Frameworkitem.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Frameworkitem resources.
 */
export interface FrameworkitemState {
    /**
     * Description of the item
     */
    description?: pulumi.Input<string>;
    displayCategory?: pulumi.Input<string>;
    /**
     * The internal ID of the framework this item belongs to
     */
    frameworkId?: pulumi.Input<string>;
    /**
     * The internal ID of the framework group this item belongs to
     */
    groupId?: pulumi.Input<string>;
    /**
     * The FrameworkItem's display name
     */
    name?: pulumi.Input<string>;
    /**
     * A unique identifier that can be used to refer to this item
     */
    ref?: pulumi.Input<string>;
    /**
     * A URL for referencing additional information about the item
     */
    webLink?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Frameworkitem resource.
 */
export interface FrameworkitemArgs {
    /**
     * Description of the item
     */
    description?: pulumi.Input<string>;
    displayCategory?: pulumi.Input<string>;
    /**
     * The internal ID of the framework this item belongs to
     */
    frameworkId: pulumi.Input<string>;
    /**
     * The internal ID of the framework group this item belongs to
     */
    groupId: pulumi.Input<string>;
    /**
     * The FrameworkItem's display name
     */
    name?: pulumi.Input<string>;
    /**
     * A unique identifier that can be used to refer to this item
     */
    ref: pulumi.Input<string>;
    /**
     * A URL for referencing additional information about the item
     */
    webLink?: pulumi.Input<string>;
}
