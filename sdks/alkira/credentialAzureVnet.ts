// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CredentialAzureVnet extends pulumi.CustomResource {
    /**
     * Get an existing CredentialAzureVnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialAzureVnetState, opts?: pulumi.CustomResourceOptions): CredentialAzureVnet {
        return new CredentialAzureVnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alkira:index/credentialAzureVnet:CredentialAzureVnet';

    /**
     * Returns true if the given object is an instance of CredentialAzureVnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CredentialAzureVnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CredentialAzureVnet.__pulumiType;
    }

    /**
     * Azure Application ID.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Azure environment can be `AZURE`, `AZURE_CHINA` or `AZURE_US_GOVERNMENT`. The default value is `AZURE`.
     */
    public readonly environment!: pulumi.Output<string | undefined>;
    /**
     * The name of the credential.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Azure Secret Key.
     */
    public readonly secretKey!: pulumi.Output<string>;
    /**
     * Azure subscription ID.
     */
    public readonly subscriptionId!: pulumi.Output<string | undefined>;
    /**
     * Azure Tenant ID.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a CredentialAzureVnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialAzureVnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CredentialAzureVnetArgs | CredentialAzureVnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CredentialAzureVnetState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as CredentialAzureVnetArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.secretKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretKey'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["secretKey"] = args ? args.secretKey : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CredentialAzureVnet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CredentialAzureVnet resources.
 */
export interface CredentialAzureVnetState {
    /**
     * Azure Application ID.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Azure environment can be `AZURE`, `AZURE_CHINA` or `AZURE_US_GOVERNMENT`. The default value is `AZURE`.
     */
    environment?: pulumi.Input<string>;
    /**
     * The name of the credential.
     */
    name?: pulumi.Input<string>;
    /**
     * Azure Secret Key.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Azure subscription ID.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Azure Tenant ID.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CredentialAzureVnet resource.
 */
export interface CredentialAzureVnetArgs {
    /**
     * Azure Application ID.
     */
    applicationId: pulumi.Input<string>;
    /**
     * Azure environment can be `AZURE`, `AZURE_CHINA` or `AZURE_US_GOVERNMENT`. The default value is `AZURE`.
     */
    environment?: pulumi.Input<string>;
    /**
     * The name of the credential.
     */
    name?: pulumi.Input<string>;
    /**
     * Azure Secret Key.
     */
    secretKey: pulumi.Input<string>;
    /**
     * Azure subscription ID.
     */
    subscriptionId?: pulumi.Input<string>;
    /**
     * Azure Tenant ID.
     */
    tenantId: pulumi.Input<string>;
}
