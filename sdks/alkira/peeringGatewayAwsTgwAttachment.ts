// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PeeringGatewayAwsTgwAttachment extends pulumi.CustomResource {
    /**
     * Get an existing PeeringGatewayAwsTgwAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PeeringGatewayAwsTgwAttachmentState, opts?: pulumi.CustomResourceOptions): PeeringGatewayAwsTgwAttachment {
        return new PeeringGatewayAwsTgwAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alkira:index/peeringGatewayAwsTgwAttachment:PeeringGatewayAwsTgwAttachment';

    /**
     * Returns true if the given object is an instance of PeeringGatewayAwsTgwAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PeeringGatewayAwsTgwAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PeeringGatewayAwsTgwAttachment.__pulumiType;
    }

    /**
     * Description of the attachment.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the attachment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The AWS account ID of TGW.
     */
    public readonly peerAwsAccountId!: pulumi.Output<string>;
    /**
     * The AWS region of the peer TGW.
     */
    public readonly peerAwsRegion!: pulumi.Output<string>;
    /**
     * The ID of AWS TGW.
     */
    public readonly peerAwsTgwId!: pulumi.Output<string>;
    /**
     * The ID of Peering Gateway AWS-TGW.
     */
    public readonly peeringGatewayAwsTgwId!: pulumi.Output<number>;
    /**
     * Initiator of transit gateway attachment.
     */
    public readonly requestor!: pulumi.Output<string>;
    /**
     * The state of the resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a PeeringGatewayAwsTgwAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PeeringGatewayAwsTgwAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PeeringGatewayAwsTgwAttachmentArgs | PeeringGatewayAwsTgwAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PeeringGatewayAwsTgwAttachmentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["peerAwsAccountId"] = state ? state.peerAwsAccountId : undefined;
            resourceInputs["peerAwsRegion"] = state ? state.peerAwsRegion : undefined;
            resourceInputs["peerAwsTgwId"] = state ? state.peerAwsTgwId : undefined;
            resourceInputs["peeringGatewayAwsTgwId"] = state ? state.peeringGatewayAwsTgwId : undefined;
            resourceInputs["requestor"] = state ? state.requestor : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as PeeringGatewayAwsTgwAttachmentArgs | undefined;
            if ((!args || args.peerAwsAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerAwsAccountId'");
            }
            if ((!args || args.peerAwsRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerAwsRegion'");
            }
            if ((!args || args.peerAwsTgwId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerAwsTgwId'");
            }
            if ((!args || args.peeringGatewayAwsTgwId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peeringGatewayAwsTgwId'");
            }
            if ((!args || args.requestor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requestor'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["peerAwsAccountId"] = args ? args.peerAwsAccountId : undefined;
            resourceInputs["peerAwsRegion"] = args ? args.peerAwsRegion : undefined;
            resourceInputs["peerAwsTgwId"] = args ? args.peerAwsTgwId : undefined;
            resourceInputs["peeringGatewayAwsTgwId"] = args ? args.peeringGatewayAwsTgwId : undefined;
            resourceInputs["requestor"] = args ? args.requestor : undefined;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PeeringGatewayAwsTgwAttachment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PeeringGatewayAwsTgwAttachment resources.
 */
export interface PeeringGatewayAwsTgwAttachmentState {
    /**
     * Description of the attachment.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the attachment.
     */
    name?: pulumi.Input<string>;
    /**
     * The AWS account ID of TGW.
     */
    peerAwsAccountId?: pulumi.Input<string>;
    /**
     * The AWS region of the peer TGW.
     */
    peerAwsRegion?: pulumi.Input<string>;
    /**
     * The ID of AWS TGW.
     */
    peerAwsTgwId?: pulumi.Input<string>;
    /**
     * The ID of Peering Gateway AWS-TGW.
     */
    peeringGatewayAwsTgwId?: pulumi.Input<number>;
    /**
     * Initiator of transit gateway attachment.
     */
    requestor?: pulumi.Input<string>;
    /**
     * The state of the resource.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PeeringGatewayAwsTgwAttachment resource.
 */
export interface PeeringGatewayAwsTgwAttachmentArgs {
    /**
     * Description of the attachment.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the attachment.
     */
    name?: pulumi.Input<string>;
    /**
     * The AWS account ID of TGW.
     */
    peerAwsAccountId: pulumi.Input<string>;
    /**
     * The AWS region of the peer TGW.
     */
    peerAwsRegion: pulumi.Input<string>;
    /**
     * The ID of AWS TGW.
     */
    peerAwsTgwId: pulumi.Input<string>;
    /**
     * The ID of Peering Gateway AWS-TGW.
     */
    peeringGatewayAwsTgwId: pulumi.Input<number>;
    /**
     * Initiator of transit gateway attachment.
     */
    requestor: pulumi.Input<string>;
}
