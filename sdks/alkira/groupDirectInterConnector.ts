// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GroupDirectInterConnector extends pulumi.CustomResource {
    /**
     * Get an existing GroupDirectInterConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupDirectInterConnectorState, opts?: pulumi.CustomResourceOptions): GroupDirectInterConnector {
        return new GroupDirectInterConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alkira:index/groupDirectInterConnector:GroupDirectInterConnector';

    /**
     * Returns true if the given object is an instance of GroupDirectInterConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupDirectInterConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupDirectInterConnector.__pulumiType;
    }

    /**
     * The Azure Virtual Network Manager's Alkira ID.
     */
    public readonly azureNetworkManagerId!: pulumi.Output<number | undefined>;
    /**
     * The region of the connector.
     */
    public readonly connectorProviderRegion!: pulumi.Output<string | undefined>;
    /**
     * The type of the connector.
     */
    public readonly connectorType!: pulumi.Output<string>;
    /**
     * The CXP of the group.
     */
    public readonly cxp!: pulumi.Output<string | undefined>;
    /**
     * The description of the group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The provisioning state of the resource.
     */
    public /*out*/ readonly provisionState!: pulumi.Output<string>;
    /**
     * The segment ID of the group.
     */
    public readonly segmentId!: pulumi.Output<string>;

    /**
     * Create a GroupDirectInterConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupDirectInterConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupDirectInterConnectorArgs | GroupDirectInterConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupDirectInterConnectorState | undefined;
            resourceInputs["azureNetworkManagerId"] = state ? state.azureNetworkManagerId : undefined;
            resourceInputs["connectorProviderRegion"] = state ? state.connectorProviderRegion : undefined;
            resourceInputs["connectorType"] = state ? state.connectorType : undefined;
            resourceInputs["cxp"] = state ? state.cxp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["provisionState"] = state ? state.provisionState : undefined;
            resourceInputs["segmentId"] = state ? state.segmentId : undefined;
        } else {
            const args = argsOrState as GroupDirectInterConnectorArgs | undefined;
            if ((!args || args.connectorType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorType'");
            }
            if ((!args || args.segmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'segmentId'");
            }
            resourceInputs["azureNetworkManagerId"] = args ? args.azureNetworkManagerId : undefined;
            resourceInputs["connectorProviderRegion"] = args ? args.connectorProviderRegion : undefined;
            resourceInputs["connectorType"] = args ? args.connectorType : undefined;
            resourceInputs["cxp"] = args ? args.cxp : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["segmentId"] = args ? args.segmentId : undefined;
            resourceInputs["provisionState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupDirectInterConnector.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GroupDirectInterConnector resources.
 */
export interface GroupDirectInterConnectorState {
    /**
     * The Azure Virtual Network Manager's Alkira ID.
     */
    azureNetworkManagerId?: pulumi.Input<number>;
    /**
     * The region of the connector.
     */
    connectorProviderRegion?: pulumi.Input<string>;
    /**
     * The type of the connector.
     */
    connectorType?: pulumi.Input<string>;
    /**
     * The CXP of the group.
     */
    cxp?: pulumi.Input<string>;
    /**
     * The description of the group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the group.
     */
    name?: pulumi.Input<string>;
    /**
     * The provisioning state of the resource.
     */
    provisionState?: pulumi.Input<string>;
    /**
     * The segment ID of the group.
     */
    segmentId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GroupDirectInterConnector resource.
 */
export interface GroupDirectInterConnectorArgs {
    /**
     * The Azure Virtual Network Manager's Alkira ID.
     */
    azureNetworkManagerId?: pulumi.Input<number>;
    /**
     * The region of the connector.
     */
    connectorProviderRegion?: pulumi.Input<string>;
    /**
     * The type of the connector.
     */
    connectorType: pulumi.Input<string>;
    /**
     * The CXP of the group.
     */
    cxp?: pulumi.Input<string>;
    /**
     * The description of the group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the group.
     */
    name?: pulumi.Input<string>;
    /**
     * The segment ID of the group.
     */
    segmentId: pulumi.Input<string>;
}
