// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConnectorIpsec(args: GetConnectorIpsecArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorIpsecResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("alkira:index/getConnectorIpsec:getConnectorIpsec", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectorIpsec.
 */
export interface GetConnectorIpsecArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getConnectorIpsec.
 */
export interface GetConnectorIpsecResult {
    readonly id: string;
    readonly implicitGroupId: number;
    readonly name: string;
}
export function getConnectorIpsecOutput(args: GetConnectorIpsecOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorIpsecResult> {
    return pulumi.output(args).apply((a: any) => getConnectorIpsec(a, opts))
}

/**
 * A collection of arguments for invoking getConnectorIpsec.
 */
export interface GetConnectorIpsecOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
