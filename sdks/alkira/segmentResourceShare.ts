// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SegmentResourceShare extends pulumi.CustomResource {
    /**
     * Get an existing SegmentResourceShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SegmentResourceShareState, opts?: pulumi.CustomResourceOptions): SegmentResourceShare {
        return new SegmentResourceShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alkira:index/segmentResourceShare:SegmentResourceShare';

    /**
     * Returns true if the given object is an instance of SegmentResourceShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SegmentResourceShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SegmentResourceShare.__pulumiType;
    }

    /**
     * The description of the segment resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The designated segment ID.
     */
    public readonly designatedSegmentId!: pulumi.Output<string>;
    /**
     * The End-A route limit. The default value is `100`.
     */
    public readonly endARouteLimit!: pulumi.Output<number | undefined>;
    /**
     * The End-A segment resource IDs. All segment resources must be on the same segment.
     */
    public readonly endASegmentResourceIds!: pulumi.Output<number[]>;
    /**
     * The End-B route limit. The default value is `100`.
     */
    public readonly endBRouteLimit!: pulumi.Output<number | undefined>;
    /**
     * The End-B segment resource IDs. All segment resources must be on the same segment.
     */
    public readonly endBSegmentResourceIds!: pulumi.Output<number[]>;
    /**
     * The name of the segment resource share.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of a `policy_rule_list` that is to be used for the inter-segment policy generated for this resource. (**BETA**)
     */
    public readonly policyRuleListId!: pulumi.Output<number | undefined>;
    /**
     * The provision state of the resource.
     */
    public /*out*/ readonly provisionState!: pulumi.Output<string>;
    /**
     * The list of service IDs.
     */
    public readonly serviceIds!: pulumi.Output<number[]>;
    /**
     * Specify the direction in which traffic is orignated at both Resource End-A and Resource End-B. The default value is
     * `BIDIRECTIONAL`.
     */
    public readonly trafficDirection!: pulumi.Output<string | undefined>;
    /**
     * The end from which traffic originates. This field is only applicable when `traffic_direction` is set to
     * `UNIDIRECTIONAL`.
     */
    public readonly trafficFromEnd!: pulumi.Output<string | undefined>;

    /**
     * Create a SegmentResourceShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SegmentResourceShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SegmentResourceShareArgs | SegmentResourceShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SegmentResourceShareState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["designatedSegmentId"] = state ? state.designatedSegmentId : undefined;
            resourceInputs["endARouteLimit"] = state ? state.endARouteLimit : undefined;
            resourceInputs["endASegmentResourceIds"] = state ? state.endASegmentResourceIds : undefined;
            resourceInputs["endBRouteLimit"] = state ? state.endBRouteLimit : undefined;
            resourceInputs["endBSegmentResourceIds"] = state ? state.endBSegmentResourceIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyRuleListId"] = state ? state.policyRuleListId : undefined;
            resourceInputs["provisionState"] = state ? state.provisionState : undefined;
            resourceInputs["serviceIds"] = state ? state.serviceIds : undefined;
            resourceInputs["trafficDirection"] = state ? state.trafficDirection : undefined;
            resourceInputs["trafficFromEnd"] = state ? state.trafficFromEnd : undefined;
        } else {
            const args = argsOrState as SegmentResourceShareArgs | undefined;
            if ((!args || args.designatedSegmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'designatedSegmentId'");
            }
            if ((!args || args.endASegmentResourceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endASegmentResourceIds'");
            }
            if ((!args || args.endBSegmentResourceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endBSegmentResourceIds'");
            }
            if ((!args || args.serviceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceIds'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["designatedSegmentId"] = args ? args.designatedSegmentId : undefined;
            resourceInputs["endARouteLimit"] = args ? args.endARouteLimit : undefined;
            resourceInputs["endASegmentResourceIds"] = args ? args.endASegmentResourceIds : undefined;
            resourceInputs["endBRouteLimit"] = args ? args.endBRouteLimit : undefined;
            resourceInputs["endBSegmentResourceIds"] = args ? args.endBSegmentResourceIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policyRuleListId"] = args ? args.policyRuleListId : undefined;
            resourceInputs["serviceIds"] = args ? args.serviceIds : undefined;
            resourceInputs["trafficDirection"] = args ? args.trafficDirection : undefined;
            resourceInputs["trafficFromEnd"] = args ? args.trafficFromEnd : undefined;
            resourceInputs["provisionState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SegmentResourceShare.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SegmentResourceShare resources.
 */
export interface SegmentResourceShareState {
    /**
     * The description of the segment resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The designated segment ID.
     */
    designatedSegmentId?: pulumi.Input<string>;
    /**
     * The End-A route limit. The default value is `100`.
     */
    endARouteLimit?: pulumi.Input<number>;
    /**
     * The End-A segment resource IDs. All segment resources must be on the same segment.
     */
    endASegmentResourceIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The End-B route limit. The default value is `100`.
     */
    endBRouteLimit?: pulumi.Input<number>;
    /**
     * The End-B segment resource IDs. All segment resources must be on the same segment.
     */
    endBSegmentResourceIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The name of the segment resource share.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of a `policy_rule_list` that is to be used for the inter-segment policy generated for this resource. (**BETA**)
     */
    policyRuleListId?: pulumi.Input<number>;
    /**
     * The provision state of the resource.
     */
    provisionState?: pulumi.Input<string>;
    /**
     * The list of service IDs.
     */
    serviceIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Specify the direction in which traffic is orignated at both Resource End-A and Resource End-B. The default value is
     * `BIDIRECTIONAL`.
     */
    trafficDirection?: pulumi.Input<string>;
    /**
     * The end from which traffic originates. This field is only applicable when `traffic_direction` is set to
     * `UNIDIRECTIONAL`.
     */
    trafficFromEnd?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SegmentResourceShare resource.
 */
export interface SegmentResourceShareArgs {
    /**
     * The description of the segment resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The designated segment ID.
     */
    designatedSegmentId: pulumi.Input<string>;
    /**
     * The End-A route limit. The default value is `100`.
     */
    endARouteLimit?: pulumi.Input<number>;
    /**
     * The End-A segment resource IDs. All segment resources must be on the same segment.
     */
    endASegmentResourceIds: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The End-B route limit. The default value is `100`.
     */
    endBRouteLimit?: pulumi.Input<number>;
    /**
     * The End-B segment resource IDs. All segment resources must be on the same segment.
     */
    endBSegmentResourceIds: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The name of the segment resource share.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of a `policy_rule_list` that is to be used for the inter-segment policy generated for this resource. (**BETA**)
     */
    policyRuleListId?: pulumi.Input<number>;
    /**
     * The list of service IDs.
     */
    serviceIds: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Specify the direction in which traffic is orignated at both Resource End-A and Resource End-B. The default value is
     * `BIDIRECTIONAL`.
     */
    trafficDirection?: pulumi.Input<string>;
    /**
     * The end from which traffic originates. This field is only applicable when `traffic_direction` is set to
     * `UNIDIRECTIONAL`.
     */
    trafficFromEnd?: pulumi.Input<string>;
}
