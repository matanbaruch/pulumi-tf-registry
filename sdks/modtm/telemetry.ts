// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Telemetry extends pulumi.CustomResource {
    /**
     * Get an existing Telemetry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TelemetryState, opts?: pulumi.CustomResourceOptions): Telemetry {
        return new Telemetry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'modtm:index/telemetry:Telemetry';

    /**
     * Returns true if the given object is an instance of Telemetry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Telemetry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Telemetry.__pulumiType;
    }

    /**
     * Telemetry endpoint to send data to, will override provider's default `endpoint` setting. You can set `endpoint` in this
     * resource, when there's no explicit `setting` in the provider block, it will override provider's default `endpoint`.
     * |Explicit `endpoint` in `provider` block | `MODTM_ENDPOINT` environment variable set | Explicit `endpoint` in resource
     * block | Telemetry endpoint | |--|--|--|--| | ✓ | ✓ | ✓ | Explicit `endpoint` in `provider` block | | ✓ | ✓ |
     * × | Explicit `endpoint` in `provider` block | | ✓ | × | ✓ | Explicit `endpoint` in `provider` block | | ✓ | × |
     * × | Explicit `endpoint` in `provider` block | | × | ✓ | ✓ | `MODTM_ENDPOINT` environment variable | | × | ✓ |
     * × | `MODTM_ENDPOINT` environment variable | | × | × | ✓ | Explicit `endpoint` in resource block | | × | × | × |
     * Default Microsoft telemetry service endpoint |
     */
    public readonly endpoint!: pulumi.Output<string | undefined>;
    /**
     * An ephemeral number that works with tags-generation tools like [BridgeCrew Yor](https://yor.io/)
     *
     * @deprecated Deprecated
     */
    public readonly ephemeralNumber!: pulumi.Output<number>;
    /**
     * A nonce that works with tags-generation tools like [BridgeCrew Yor](https://yor.io/)
     *
     * @deprecated Deprecated
     */
    public readonly nonce!: pulumi.Output<number>;
    /**
     * Tags to be sent to telemetry endpoint. The following tags are reserved and cannot be used: `event`. When specififying
     * `module_path`, the `source` and `version` tags will be automatically added to the tags sent to the telemetry endpoint.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a Telemetry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TelemetryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TelemetryArgs | TelemetryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TelemetryState | undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["ephemeralNumber"] = state ? state.ephemeralNumber : undefined;
            resourceInputs["nonce"] = state ? state.nonce : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as TelemetryArgs | undefined;
            if ((!args || args.tags === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tags'");
            }
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["ephemeralNumber"] = args ? args.ephemeralNumber : undefined;
            resourceInputs["nonce"] = args ? args.nonce : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Telemetry.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Telemetry resources.
 */
export interface TelemetryState {
    /**
     * Telemetry endpoint to send data to, will override provider's default `endpoint` setting. You can set `endpoint` in this
     * resource, when there's no explicit `setting` in the provider block, it will override provider's default `endpoint`.
     * |Explicit `endpoint` in `provider` block | `MODTM_ENDPOINT` environment variable set | Explicit `endpoint` in resource
     * block | Telemetry endpoint | |--|--|--|--| | ✓ | ✓ | ✓ | Explicit `endpoint` in `provider` block | | ✓ | ✓ |
     * × | Explicit `endpoint` in `provider` block | | ✓ | × | ✓ | Explicit `endpoint` in `provider` block | | ✓ | × |
     * × | Explicit `endpoint` in `provider` block | | × | ✓ | ✓ | `MODTM_ENDPOINT` environment variable | | × | ✓ |
     * × | `MODTM_ENDPOINT` environment variable | | × | × | ✓ | Explicit `endpoint` in resource block | | × | × | × |
     * Default Microsoft telemetry service endpoint |
     */
    endpoint?: pulumi.Input<string>;
    /**
     * An ephemeral number that works with tags-generation tools like [BridgeCrew Yor](https://yor.io/)
     *
     * @deprecated Deprecated
     */
    ephemeralNumber?: pulumi.Input<number>;
    /**
     * A nonce that works with tags-generation tools like [BridgeCrew Yor](https://yor.io/)
     *
     * @deprecated Deprecated
     */
    nonce?: pulumi.Input<number>;
    /**
     * Tags to be sent to telemetry endpoint. The following tags are reserved and cannot be used: `event`. When specififying
     * `module_path`, the `source` and `version` tags will be automatically added to the tags sent to the telemetry endpoint.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Telemetry resource.
 */
export interface TelemetryArgs {
    /**
     * Telemetry endpoint to send data to, will override provider's default `endpoint` setting. You can set `endpoint` in this
     * resource, when there's no explicit `setting` in the provider block, it will override provider's default `endpoint`.
     * |Explicit `endpoint` in `provider` block | `MODTM_ENDPOINT` environment variable set | Explicit `endpoint` in resource
     * block | Telemetry endpoint | |--|--|--|--| | ✓ | ✓ | ✓ | Explicit `endpoint` in `provider` block | | ✓ | ✓ |
     * × | Explicit `endpoint` in `provider` block | | ✓ | × | ✓ | Explicit `endpoint` in `provider` block | | ✓ | × |
     * × | Explicit `endpoint` in `provider` block | | × | ✓ | ✓ | `MODTM_ENDPOINT` environment variable | | × | ✓ |
     * × | `MODTM_ENDPOINT` environment variable | | × | × | ✓ | Explicit `endpoint` in resource block | | × | × | × |
     * Default Microsoft telemetry service endpoint |
     */
    endpoint?: pulumi.Input<string>;
    /**
     * An ephemeral number that works with tags-generation tools like [BridgeCrew Yor](https://yor.io/)
     *
     * @deprecated Deprecated
     */
    ephemeralNumber?: pulumi.Input<number>;
    /**
     * A nonce that works with tags-generation tools like [BridgeCrew Yor](https://yor.io/)
     *
     * @deprecated Deprecated
     */
    nonce?: pulumi.Input<number>;
    /**
     * Tags to be sent to telemetry endpoint. The following tags are reserved and cannot be used: `event`. When specififying
     * `module_path`, the `source` and `version` tags will be automatically added to the tags sent to the telemetry endpoint.
     */
    tags: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
