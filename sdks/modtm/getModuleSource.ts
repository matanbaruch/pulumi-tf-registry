// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getModuleSource(args: GetModuleSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetModuleSourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("modtm:index/getModuleSource:getModuleSource", {
        "modulePath": args.modulePath,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getModuleSource.
 */
export interface GetModuleSourceArgs {
    modulePath: string;
}

/**
 * A collection of values returned by getModuleSource.
 */
export interface GetModuleSourceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly modulePath: string;
    readonly moduleSource: string;
    readonly moduleVersion: string;
}
export function getModuleSourceOutput(args: GetModuleSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetModuleSourceResult> {
    return pulumi.output(args).apply((a: any) => getModuleSource(a, opts))
}

/**
 * A collection of arguments for invoking getModuleSource.
 */
export interface GetModuleSourceOutputArgs {
    modulePath: pulumi.Input<string>;
}
