// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNode(args: GetNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetNodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cml2:index/getNode:getNode", {
        "id": args.id,
        "labId": args.labId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNode.
 */
export interface GetNodeArgs {
    id: string;
    labId: string;
}

/**
 * A collection of values returned by getNode.
 */
export interface GetNodeResult {
    readonly id: string;
    readonly labId: string;
    readonly node: outputs.GetNodeNode;
}
export function getNodeOutput(args: GetNodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodeResult> {
    return pulumi.output(args).apply((a: any) => getNode(a, opts))
}

/**
 * A collection of arguments for invoking getNode.
 */
export interface GetNodeOutputArgs {
    id: pulumi.Input<string>;
    labId: pulumi.Input<string>;
}
