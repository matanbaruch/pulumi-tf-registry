// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBgpSessions(args: GetBgpSessionsArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpSessionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netactuate:index/getBgpSessions:getBgpSessions", {
        "id": args.id,
        "mbpkgid": args.mbpkgid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBgpSessions.
 */
export interface GetBgpSessionsArgs {
    id?: string;
    mbpkgid: number;
}

/**
 * A collection of values returned by getBgpSessions.
 */
export interface GetBgpSessionsResult {
    readonly id: string;
    readonly mbpkgid: number;
    readonly sessions: outputs.GetBgpSessionsSession[];
}
export function getBgpSessionsOutput(args: GetBgpSessionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpSessionsResult> {
    return pulumi.output(args).apply((a: any) => getBgpSessions(a, opts))
}

/**
 * A collection of arguments for invoking getBgpSessions.
 */
export interface GetBgpSessionsOutputArgs {
    id?: pulumi.Input<string>;
    mbpkgid: pulumi.Input<number>;
}
