// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetArchitecturePolicyAssignmentsToModify {
    /**
     * A map of policy assignments to modify. The key is the policy assignment name, and the value is an object containing the modifications to make.
     */
    policyAssignments?: {[key: string]: inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignments};
}

export interface GetArchitecturePolicyAssignmentsToModifyArgs {
    /**
     * A map of policy assignments to modify. The key is the policy assignment name, and the value is an object containing the modifications to make.
     */
    policyAssignments?: pulumi.Input<{[key: string]: pulumi.Input<inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsArgs>}>;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignments {
    /**
     * The enforcement mode for the policy assignment. Valid values are `Default` and `DoNotEnforce`.
     */
    enforcementMode?: string;
    /**
     * The identity type. Must be one of `SystemAssigned` or `UserAssigned`.
     */
    identity?: string;
    /**
     * A set of zero or one identity ids to assign to the policy assignment. Required if `identity` is `UserAssigned`. **Do not** pass in computed values, instead construct the resource id yourself.
     */
    identityIds?: string[];
    /**
     * The non-compliance messages to use for the policy assignment.
     */
    nonComplianceMessages?: inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsNonComplianceMessage[];
    /**
     * The overrides for this policy assignment. There are a maximum of 10 overrides allowed per assignment. If specified here the overrides will replace the existing overrides.
     */
    overrides?: inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverride[];
    parameters?: {[key: string]: string};
    /**
     * The resource selectors to use for the policy assignment. A maximum of 10 resource selectors are allowed per assignment. If specified here the resource selectors will replace any existing resource selectors.
     */
    resourceSelectors?: inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelector[];
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsArgs {
    /**
     * The enforcement mode for the policy assignment. Valid values are `Default` and `DoNotEnforce`.
     */
    enforcementMode?: pulumi.Input<string>;
    /**
     * The identity type. Must be one of `SystemAssigned` or `UserAssigned`.
     */
    identity?: pulumi.Input<string>;
    /**
     * A set of zero or one identity ids to assign to the policy assignment. Required if `identity` is `UserAssigned`. **Do not** pass in computed values, instead construct the resource id yourself.
     */
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The non-compliance messages to use for the policy assignment.
     */
    nonComplianceMessages?: pulumi.Input<pulumi.Input<inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsNonComplianceMessageArgs>[]>;
    /**
     * The overrides for this policy assignment. There are a maximum of 10 overrides allowed per assignment. If specified here the overrides will replace the existing overrides.
     */
    overrides?: pulumi.Input<pulumi.Input<inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverrideArgs>[]>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource selectors to use for the policy assignment. A maximum of 10 resource selectors are allowed per assignment. If specified here the resource selectors will replace any existing resource selectors.
     */
    resourceSelectors?: pulumi.Input<pulumi.Input<inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelectorArgs>[]>;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsNonComplianceMessage {
    /**
     * The non-compliance message to use for the policy assignment.
     */
    message: string;
    /**
     * The policy definition reference id (not the resource id) to use for the non compliance message. This references the definition within the policy set.
     */
    policyDefinitionReferenceId?: string;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsNonComplianceMessageArgs {
    /**
     * The non-compliance message to use for the policy assignment.
     */
    message: pulumi.Input<string>;
    /**
     * The policy definition reference id (not the resource id) to use for the non compliance message. This references the definition within the policy set.
     */
    policyDefinitionReferenceId?: pulumi.Input<string>;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverride {
    /**
     * The property the assignment will override. The supported kind is `policyEffect`.
     */
    kind: string;
    /**
     * The selectors to use for the override.
     */
    overrideSelectors?: inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverrideOverrideSelector[];
    /**
     * The new value which will override the existing value. The supported values are: `addToNetworkGroup`, `append`, `audit`, `auditIfNotExists`, `deny`, `denyAction`, `deployIfNotExists`, `disabled`, `manual`, `modify`, `mutate`. <https://learn.microsoft.com/azure/governance/policy/concepts/effects>
     */
    value: string;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverrideArgs {
    /**
     * The property the assignment will override. The supported kind is `policyEffect`.
     */
    kind: pulumi.Input<string>;
    /**
     * The selectors to use for the override.
     */
    overrideSelectors?: pulumi.Input<pulumi.Input<inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverrideOverrideSelectorArgs>[]>;
    /**
     * The new value which will override the existing value. The supported values are: `addToNetworkGroup`, `append`, `audit`, `auditIfNotExists`, `deny`, `denyAction`, `deployIfNotExists`, `disabled`, `manual`, `modify`, `mutate`. <https://learn.microsoft.com/azure/governance/policy/concepts/effects>
     */
    value: pulumi.Input<string>;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverrideOverrideSelector {
    /**
     * The list of values that the selector will match. Conflicts with `not_in`.
     */
    ins?: string[];
    /**
     * The property of a selector that describes what characteristic will narrow down the scope of the override. Allowed value for kind: `policyEffect` is: `policyDefinitionReferenceId`.
     */
    kind: string;
    /**
     * The list of values that the selector will not match. Conflicts with `in`.
     */
    notIns?: string[];
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsOverrideOverrideSelectorArgs {
    /**
     * The list of values that the selector will match. Conflicts with `not_in`.
     */
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The property of a selector that describes what characteristic will narrow down the scope of the override. Allowed value for kind: `policyEffect` is: `policyDefinitionReferenceId`.
     */
    kind: pulumi.Input<string>;
    /**
     * The list of values that the selector will not match. Conflicts with `in`.
     */
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelector {
    /**
     * The name of the resource selector. The name must be unique within the assignment.
     */
    name: string;
    /**
     * The selectors to use for the resource selector.
     */
    resourceSelectorSelectors?: inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelectorResourceSelectorSelector[];
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelectorArgs {
    /**
     * The name of the resource selector. The name must be unique within the assignment.
     */
    name: pulumi.Input<string>;
    /**
     * The selectors to use for the resource selector.
     */
    resourceSelectorSelectors?: pulumi.Input<pulumi.Input<inputs.GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelectorResourceSelectorSelectorArgs>[]>;
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelectorResourceSelectorSelector {
    /**
     * The list of values that the selector will match. Conflicts with `not_in`.
     */
    ins?: string[];
    /**
     * The property of a selector that describes what characteristic will narrow down the set of evaluated resources. Each kind can only be used once in a single resource selector. Allowed values are: `resourceLocation`, `resourceType`, `resourceWithoutLocation`. `resourceWithoutLocation` cannot be used in the same resource selector as `resourceLocation`.
     */
    kind: string;
    /**
     * The list of values that the selector will not match. Conflicts with `in`.
     */
    notIns?: string[];
}

export interface GetArchitecturePolicyAssignmentsToModifyPolicyAssignmentsResourceSelectorResourceSelectorSelectorArgs {
    /**
     * The list of values that the selector will match. Conflicts with `not_in`.
     */
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The property of a selector that describes what characteristic will narrow down the set of evaluated resources. Each kind can only be used once in a single resource selector. Allowed values are: `resourceLocation`, `resourceType`, `resourceWithoutLocation`. `resourceWithoutLocation` cannot be used in the same resource selector as `resourceLocation`.
     */
    kind: pulumi.Input<string>;
    /**
     * The list of values that the selector will not match. Conflicts with `in`.
     */
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetArchitectureTimeouts {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    read?: string;
}

export interface GetArchitectureTimeoutsArgs {
    /**
     * A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
     */
    read?: pulumi.Input<string>;
}

export interface PolicyRoleAssignmentsAssignment {
    /**
     * The principal id to assign the role to.
     */
    principalId: pulumi.Input<string>;
    /**
     * The resource id of the role assignment.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The role definition id to assign.
     */
    roleDefinitionId: pulumi.Input<string>;
    /**
     * The scope of the assignment.
     */
    scope: pulumi.Input<string>;
}

export interface ProviderLibraryReference {
    customUrl?: pulumi.Input<string>;
    /**
     * The path in the ALZ Library, e.g. `platform/alz`. Also requires `ref`. Conflicts with `custom_url`.
     */
    path?: pulumi.Input<string>;
    /**
     * This is the version of the library to use, e.g. `2024.03.03`. Also requires `path`. Conflicts with `custom_url`.
     */
    ref?: pulumi.Input<string>;
}
export namespace config {
}
