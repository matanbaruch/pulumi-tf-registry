// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRecord(args: GetRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ns1:index/getRecord:getRecord", {
        "domain": args.domain,
        "id": args.id,
        "type": args.type,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecord.
 */
export interface GetRecordArgs {
    domain: string;
    id?: string;
    type: string;
    zone: string;
}

/**
 * A collection of values returned by getRecord.
 */
export interface GetRecordResult {
    readonly answers: outputs.GetRecordAnswer[];
    readonly domain: string;
    readonly filters: outputs.GetRecordFilter[];
    readonly id: string;
    readonly link: string;
    readonly meta: {[key: string]: string};
    readonly overrideTtl: boolean;
    readonly regions: outputs.GetRecordRegion[];
    readonly shortAnswers: string[];
    readonly tags: {[key: string]: string};
    readonly ttl: number;
    readonly type: string;
    readonly useClientSubnet: boolean;
    readonly zone: string;
}
export function getRecordOutput(args: GetRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecordResult> {
    return pulumi.output(args).apply((a: any) => getRecord(a, opts))
}

/**
 * A collection of arguments for invoking getRecord.
 */
export interface GetRecordOutputArgs {
    domain: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
