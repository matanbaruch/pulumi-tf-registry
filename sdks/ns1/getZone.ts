// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getZone(args: GetZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ns1:index/getZone:getZone", {
        "additionalPorts": args.additionalPorts,
        "additionalPrimaries": args.additionalPrimaries,
        "id": args.id,
        "primaryPort": args.primaryPort,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneArgs {
    additionalPorts?: number[];
    additionalPrimaries?: string[];
    id?: string;
    primaryPort?: number;
    zone: string;
}

/**
 * A collection of values returned by getZone.
 */
export interface GetZoneResult {
    readonly additionalPorts?: number[];
    readonly additionalPrimaries?: string[];
    readonly dnsServers: string;
    readonly dnssec: boolean;
    readonly expiry: number;
    readonly hostmaster: string;
    readonly id: string;
    readonly link: string;
    readonly networks: number[];
    readonly nxTtl: number;
    readonly primary: string;
    readonly primaryPort?: number;
    readonly refresh: number;
    readonly retry: number;
    readonly secondaries: outputs.GetZoneSecondary[];
    readonly tags: {[key: string]: string};
    readonly ttl: number;
    readonly zone: string;
}
export function getZoneOutput(args: GetZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZoneResult> {
    return pulumi.output(args).apply((a: any) => getZone(a, opts))
}

/**
 * A collection of arguments for invoking getZone.
 */
export interface GetZoneOutputArgs {
    additionalPorts?: pulumi.Input<pulumi.Input<number>[]>;
    additionalPrimaries?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    primaryPort?: pulumi.Input<number>;
    zone: pulumi.Input<string>;
}
