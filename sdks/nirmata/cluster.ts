// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nirmata:index/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    public readonly clusterFieldOverride!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly clusterType!: pulumi.Output<string>;
    public readonly creationTimeoutMinutes!: pulumi.Output<number | undefined>;
    public readonly deleteAction!: pulumi.Output<string | undefined>;
    public readonly endpoint!: pulumi.Output<string | undefined>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nodepoolFieldOverride!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly nodepools!: pulumi.Output<outputs.ClusterNodepool[]>;
    public readonly overrideCredentials!: pulumi.Output<string | undefined>;
    public readonly systemMetadata!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["clusterFieldOverride"] = state ? state.clusterFieldOverride : undefined;
            resourceInputs["clusterType"] = state ? state.clusterType : undefined;
            resourceInputs["creationTimeoutMinutes"] = state ? state.creationTimeoutMinutes : undefined;
            resourceInputs["deleteAction"] = state ? state.deleteAction : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodepoolFieldOverride"] = state ? state.nodepoolFieldOverride : undefined;
            resourceInputs["nodepools"] = state ? state.nodepools : undefined;
            resourceInputs["overrideCredentials"] = state ? state.overrideCredentials : undefined;
            resourceInputs["systemMetadata"] = state ? state.systemMetadata : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.clusterType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterType'");
            }
            if ((!args || args.nodepools === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodepools'");
            }
            resourceInputs["clusterFieldOverride"] = args ? args.clusterFieldOverride : undefined;
            resourceInputs["clusterType"] = args ? args.clusterType : undefined;
            resourceInputs["creationTimeoutMinutes"] = args ? args.creationTimeoutMinutes : undefined;
            resourceInputs["deleteAction"] = args ? args.deleteAction : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodepoolFieldOverride"] = args ? args.nodepoolFieldOverride : undefined;
            resourceInputs["nodepools"] = args ? args.nodepools : undefined;
            resourceInputs["overrideCredentials"] = args ? args.overrideCredentials : undefined;
            resourceInputs["systemMetadata"] = args ? args.systemMetadata : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    clusterFieldOverride?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    clusterType?: pulumi.Input<string>;
    creationTimeoutMinutes?: pulumi.Input<number>;
    deleteAction?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    nodepoolFieldOverride?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    nodepools?: pulumi.Input<pulumi.Input<inputs.ClusterNodepool>[]>;
    overrideCredentials?: pulumi.Input<string>;
    systemMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    clusterFieldOverride?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    clusterType: pulumi.Input<string>;
    creationTimeoutMinutes?: pulumi.Input<number>;
    deleteAction?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    nodepoolFieldOverride?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    nodepools: pulumi.Input<pulumi.Input<inputs.ClusterNodepool>[]>;
    overrideCredentials?: pulumi.Input<string>;
    systemMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
