// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClusterImportedTimeouts {
    create?: string;
}

export interface ClusterImportedVaultAuth {
    addonName: string;
    credentialsId?: string;
    credentialsName?: string;
    deleteAuthPath?: boolean;
    name: string;
    path: string;
    roles?: outputs.ClusterImportedVaultAuthRole[];
}

export interface ClusterImportedVaultAuthRole {
    name: string;
    namespace: string;
    policies: string;
    serviceAccountName: string;
}

export interface ClusterNodepool {
    enableAutoScaling?: boolean;
    maxCount?: number;
    minCount?: number;
    nodeCount: number;
}

export interface ClusterRegisteredAccessControlList {
    entityType: string;
    name: string;
    permission: string;
}

export interface ClusterRegisteredOwnerInfo {
    ownerName: string;
    ownerType: string;
}

export interface ClusterRegisteredTimeouts {
    create?: string;
}

export interface ClusterTypeAksTimeouts {
    create?: string;
}

export interface ClusterTypeEksAddon {
    addonSelector: string;
    catalog: string;
    channel?: string;
    name: string;
    namespace?: string;
    sequenceNumber: number;
}

export interface ClusterTypeEksNodepool {
    amiType?: string;
    diskSize: number;
    iamRole: string;
    imageId?: string;
    instanceType: string;
    name: string;
    nodeAnnotations?: {[key: string]: string};
    nodeLabels?: {[key: string]: string};
    securityGroups: string[];
    sshKeyName?: string;
}

export interface ClusterTypeEksTimeouts {
    create?: string;
}

export interface ClusterTypeEksVaultAuth {
    addonName: string;
    credentialsId?: string;
    credentialsName?: string;
    deleteAuthPath?: boolean;
    name: string;
    path: string;
    roles?: outputs.ClusterTypeEksVaultAuthRole[];
}

export interface ClusterTypeEksVaultAuthRole {
    name: string;
    namespace: string;
    policies: string;
    serviceAccountName: string;
}

export interface ClusterTypeGkeAddon {
    addonSelector: string;
    catalog: string;
    channel?: string;
    name: string;
    namespace?: string;
    sequenceNumber: number;
}

export interface ClusterTypeGkeNodepool {
    autoRepair: boolean;
    autoUpgrade: boolean;
    diskSize: number;
    enablePreemptibleNodes?: boolean;
    machineType: string;
    maxSurge?: number;
    maxUnavailable?: number;
    nodeAnnotations?: {[key: string]: string};
    nodeLabels?: {[key: string]: string};
    serviceAccount?: string;
}

export interface ClusterTypeGkeTimeouts {
    create?: string;
}

export interface ClusterTypeGkeVaultAuth {
    addonName: string;
    credentialsId?: string;
    credentialsName?: string;
    deleteAuthPath?: boolean;
    name: string;
    path: string;
    roles?: outputs.ClusterTypeGkeVaultAuthRole[];
}

export interface ClusterTypeGkeVaultAuthRole {
    name: string;
    namespace: string;
    policies: string;
    serviceAccountName: string;
}

export interface ClusterTypeOkeTimeouts {
    create?: string;
}

export interface ClusterTypeRegisteredAddon {
    addonSelector: string;
    catalog: string;
    channel?: string;
    name: string;
    namespace?: string;
    sequenceNumber: number;
}

export interface ClusterTypeRegisteredClusterRole {
    apiGroups?: string[];
    resources?: string[];
    verbs?: string[];
}

export interface ClusterTypeRegisteredVaultAuth {
    addonName: string;
    credentialsId?: string;
    credentialsName?: string;
    deleteAuthPath?: boolean;
    name: string;
    path: string;
    roles?: outputs.ClusterTypeRegisteredVaultAuthRole[];
}

export interface ClusterTypeRegisteredVaultAuthRole {
    name: string;
    namespace: string;
    policies: string;
    serviceAccountName: string;
}

