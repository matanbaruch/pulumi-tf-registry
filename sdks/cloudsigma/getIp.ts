// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIp(args?: GetIpArgs, opts?: pulumi.InvokeOptions): Promise<GetIpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudsigma:index/getIp:getIp", {
        "filters": args.filters,
        "uuid": args.uuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIp.
 */
export interface GetIpArgs {
    /**
     * @deprecated Deprecated
     */
    filters?: inputs.GetIpFilter[];
    uuid?: string;
}

/**
 * A collection of values returned by getIp.
 */
export interface GetIpResult {
    /**
     * @deprecated Deprecated
     */
    readonly filters?: outputs.GetIpFilter[];
    readonly gateway: string;
    readonly id: string;
    readonly netmask: number;
    readonly resourceUri: string;
    readonly uuid: string;
}
export function getIpOutput(args?: GetIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpResult> {
    return pulumi.output(args).apply((a: any) => getIp(a, opts))
}

/**
 * A collection of arguments for invoking getIp.
 */
export interface GetIpOutputArgs {
    /**
     * @deprecated Deprecated
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetIpFilterArgs>[]>;
    uuid?: pulumi.Input<string>;
}
