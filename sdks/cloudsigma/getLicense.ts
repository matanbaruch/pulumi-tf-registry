// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLicense(args?: GetLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetLicenseResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudsigma:index/getLicense:getLicense", {
        "filters": args.filters,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLicense.
 */
export interface GetLicenseArgs {
    /**
     * @deprecated Deprecated
     */
    filters?: inputs.GetLicenseFilter[];
    name?: string;
}

/**
 * A collection of values returned by getLicense.
 */
export interface GetLicenseResult {
    readonly burstable: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly filters?: outputs.GetLicenseFilter[];
    readonly id: string;
    readonly longName: string;
    readonly name: string;
    readonly resourceUri: string;
    readonly type: string;
    readonly userMetric: string;
    readonly uuid: string;
}
export function getLicenseOutput(args?: GetLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicenseResult> {
    return pulumi.output(args).apply((a: any) => getLicense(a, opts))
}

/**
 * A collection of arguments for invoking getLicense.
 */
export interface GetLicenseOutputArgs {
    /**
     * @deprecated Deprecated
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetLicenseFilterArgs>[]>;
    name?: pulumi.Input<string>;
}
