// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsOrganization extends pulumi.CustomResource {
    /**
     * Get an existing AwsOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsOrganizationState, opts?: pulumi.CustomResourceOptions): AwsOrganization {
        return new AwsOrganization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'illumio-cloudsecure:index/awsOrganization:AwsOrganization';

    /**
     * Returns true if the given object is an instance of AwsOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsOrganization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsOrganization.__pulumiType;
    }

    /**
     * ID of the master account of the AWS organization.
     */
    public readonly masterAccountId!: pulumi.Output<string>;
    /**
     * Access mode, must be `"ReadWrite"` (default) or `"Read"`.
     */
    public readonly mode!: pulumi.Output<string>;
    /**
     * Display name for the AWS organization's master account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * ID of the AWS organization.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * ARN of the AWS role to be assumed by CloudSecure to manage this AWS organization's master account.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * External ID defined in the AWS role to authenticate CloudSecure when assuming that role.
     */
    public readonly roleExternalId!: pulumi.Output<string>;

    /**
     * Create a AwsOrganization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsOrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsOrganizationArgs | AwsOrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsOrganizationState | undefined;
            resourceInputs["masterAccountId"] = state ? state.masterAccountId : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["roleExternalId"] = state ? state.roleExternalId : undefined;
        } else {
            const args = argsOrState as AwsOrganizationArgs | undefined;
            if ((!args || args.masterAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterAccountId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.roleExternalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleExternalId'");
            }
            resourceInputs["masterAccountId"] = args ? args.masterAccountId : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["roleExternalId"] = args ? args.roleExternalId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsOrganization.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsOrganization resources.
 */
export interface AwsOrganizationState {
    /**
     * ID of the master account of the AWS organization.
     */
    masterAccountId?: pulumi.Input<string>;
    /**
     * Access mode, must be `"ReadWrite"` (default) or `"Read"`.
     */
    mode?: pulumi.Input<string>;
    /**
     * Display name for the AWS organization's master account.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the AWS organization.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * ARN of the AWS role to be assumed by CloudSecure to manage this AWS organization's master account.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * External ID defined in the AWS role to authenticate CloudSecure when assuming that role.
     */
    roleExternalId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsOrganization resource.
 */
export interface AwsOrganizationArgs {
    /**
     * ID of the master account of the AWS organization.
     */
    masterAccountId: pulumi.Input<string>;
    /**
     * Access mode, must be `"ReadWrite"` (default) or `"Read"`.
     */
    mode?: pulumi.Input<string>;
    /**
     * Display name for the AWS organization's master account.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the AWS organization.
     */
    organizationId: pulumi.Input<string>;
    /**
     * ARN of the AWS role to be assumed by CloudSecure to manage this AWS organization's master account.
     */
    roleArn: pulumi.Input<string>;
    /**
     * External ID defined in the AWS role to authenticate CloudSecure when assuming that role.
     */
    roleExternalId: pulumi.Input<string>;
}
