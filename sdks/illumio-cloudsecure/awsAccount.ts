// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsAccount extends pulumi.CustomResource {
    /**
     * Get an existing AwsAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsAccountState, opts?: pulumi.CustomResourceOptions): AwsAccount {
        return new AwsAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'illumio-cloudsecure:index/awsAccount:AwsAccount';

    /**
     * Returns true if the given object is an instance of AwsAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsAccount.__pulumiType;
    }

    /**
     * AWS account ID.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Access mode, must be `"ReadWrite"` (default) or `"Read"`.
     */
    public readonly mode!: pulumi.Output<string>;
    /**
     * Display name for the AWS account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * ID of the master account of the AWS organization this account belongs to. If specified, should be the
     * `master_account_id` of an `aws_organization`.
     */
    public readonly organizationMasterAccountId!: pulumi.Output<string | undefined>;
    /**
     * ARN of the AWS role to be assumed by CloudSecure to manage this account.
     */
    public readonly roleArn!: pulumi.Output<string>;
    /**
     * External ID defined in the AWS role to authenticate CloudSecure when assuming that role.
     */
    public readonly roleExternalId!: pulumi.Output<string>;

    /**
     * Create a AwsAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsAccountArgs | AwsAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsAccountState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationMasterAccountId"] = state ? state.organizationMasterAccountId : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["roleExternalId"] = state ? state.roleExternalId : undefined;
        } else {
            const args = argsOrState as AwsAccountArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.roleExternalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleExternalId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationMasterAccountId"] = args ? args.organizationMasterAccountId : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["roleExternalId"] = args ? args.roleExternalId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsAccount resources.
 */
export interface AwsAccountState {
    /**
     * AWS account ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Access mode, must be `"ReadWrite"` (default) or `"Read"`.
     */
    mode?: pulumi.Input<string>;
    /**
     * Display name for the AWS account.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the master account of the AWS organization this account belongs to. If specified, should be the
     * `master_account_id` of an `aws_organization`.
     */
    organizationMasterAccountId?: pulumi.Input<string>;
    /**
     * ARN of the AWS role to be assumed by CloudSecure to manage this account.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * External ID defined in the AWS role to authenticate CloudSecure when assuming that role.
     */
    roleExternalId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsAccount resource.
 */
export interface AwsAccountArgs {
    /**
     * AWS account ID.
     */
    accountId: pulumi.Input<string>;
    /**
     * Access mode, must be `"ReadWrite"` (default) or `"Read"`.
     */
    mode?: pulumi.Input<string>;
    /**
     * Display name for the AWS account.
     */
    name?: pulumi.Input<string>;
    /**
     * ID of the master account of the AWS organization this account belongs to. If specified, should be the
     * `master_account_id` of an `aws_organization`.
     */
    organizationMasterAccountId?: pulumi.Input<string>;
    /**
     * ARN of the AWS role to be assumed by CloudSecure to manage this account.
     */
    roleArn: pulumi.Input<string>;
    /**
     * External ID defined in the AWS role to authenticate CloudSecure when assuming that role.
     */
    roleExternalId: pulumi.Input<string>;
}
