// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOuPermissionMapping(args: GetOuPermissionMappingArgs, opts?: pulumi.InvokeOptions): Promise<GetOuPermissionMappingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kion:index/getOuPermissionMapping:getOuPermissionMapping", {
        "id": args.id,
        "ouId": args.ouId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOuPermissionMapping.
 */
export interface GetOuPermissionMappingArgs {
    id?: string;
    ouId: number;
}

/**
 * A collection of values returned by getOuPermissionMapping.
 */
export interface GetOuPermissionMappingResult {
    readonly id: string;
    readonly lists: outputs.GetOuPermissionMappingList[];
    readonly ouId: number;
}
export function getOuPermissionMappingOutput(args: GetOuPermissionMappingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOuPermissionMappingResult> {
    return pulumi.output(args).apply((a: any) => getOuPermissionMapping(a, opts))
}

/**
 * A collection of arguments for invoking getOuPermissionMapping.
 */
export interface GetOuPermissionMappingOutputArgs {
    id?: pulumi.Input<string>;
    ouId: pulumi.Input<number>;
}
