// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AzureAccount extends pulumi.CustomResource {
    /**
     * Get an existing AzureAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureAccountState, opts?: pulumi.CustomResourceOptions): AzureAccount {
        return new AzureAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kion:index/azureAccount:AzureAccount';

    /**
     * Returns true if the given object is an instance of AzureAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureAccount.__pulumiType;
    }

    /**
     * Account alias is an optional short unique name that helps identify the account within Kion.
     */
    public readonly accountAlias!: pulumi.Output<string | undefined>;
    /**
     * An ID representing the account type within Kion.
     */
    public readonly accountTypeId!: pulumi.Output<number>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Parameters used when creating a new Azure CSP subscription.
     */
    public readonly csp!: pulumi.Output<outputs.AzureAccountCsp | undefined>;
    /**
     * Parameters used when creating a new Azure EA subscription.
     */
    public readonly ea!: pulumi.Output<outputs.AzureAccountEa | undefined>;
    /**
     * A map of labels to assign to the account. The labels must already exist in Kion.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly lastUpdated!: pulumi.Output<string>;
    /**
     * Where the account is attached. Either "project" or "cache".
     */
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * Parameters used when creating a new Azure MCA subscription.
     */
    public readonly mca!: pulumi.Output<outputs.AzureAccountMca | undefined>;
    /**
     * Parameters used when moving an account between Kion projects. These settings are ignored unless moving an account.
     */
    public readonly moveProjectSettings!: pulumi.Output<outputs.AzureAccountMoveProjectSettings | undefined>;
    /**
     * The name of the Azure account within Kion.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The parent management group ID when creating an Azure subscription. If provided, the subscription will be created under
     * the provided management group. If not provided, the subscription will be created at the root level
     */
    public readonly parentManagementGroupId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the billing source containing billing data for this account.
     */
    public readonly payerId!: pulumi.Output<number>;
    /**
     * The ID of the Kion project to place this account within. If empty, the account will be placed within the account cache.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * True to skip periodic access checking on the account.
     */
    public readonly skipAccessChecking!: pulumi.Output<boolean>;
    /**
     * Date when the Azure account will starting submitting payments against a funding source (YYYY-MM). Required if placing an
     * account within a project.
     */
    public readonly startDatecode!: pulumi.Output<string>;
    /**
     * Name of the subscription as it appears in Azure.
     */
    public readonly subscriptionName!: pulumi.Output<string | undefined>;
    /**
     * The UUID of the Azure subscription. If subscription_uuid is provided, the existing subscription will be imported into
     * Kion. If subscription_uuid is omitted, a new subscription will be created.
     */
    public readonly subscriptionUuid!: pulumi.Output<string>;

    /**
     * Create a AzureAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureAccountArgs | AzureAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureAccountState | undefined;
            resourceInputs["accountAlias"] = state ? state.accountAlias : undefined;
            resourceInputs["accountTypeId"] = state ? state.accountTypeId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["csp"] = state ? state.csp : undefined;
            resourceInputs["ea"] = state ? state.ea : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mca"] = state ? state.mca : undefined;
            resourceInputs["moveProjectSettings"] = state ? state.moveProjectSettings : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentManagementGroupId"] = state ? state.parentManagementGroupId : undefined;
            resourceInputs["payerId"] = state ? state.payerId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["skipAccessChecking"] = state ? state.skipAccessChecking : undefined;
            resourceInputs["startDatecode"] = state ? state.startDatecode : undefined;
            resourceInputs["subscriptionName"] = state ? state.subscriptionName : undefined;
            resourceInputs["subscriptionUuid"] = state ? state.subscriptionUuid : undefined;
        } else {
            const args = argsOrState as AzureAccountArgs | undefined;
            if ((!args || args.payerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'payerId'");
            }
            resourceInputs["accountAlias"] = args ? args.accountAlias : undefined;
            resourceInputs["accountTypeId"] = args ? args.accountTypeId : undefined;
            resourceInputs["csp"] = args ? args.csp : undefined;
            resourceInputs["ea"] = args ? args.ea : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["mca"] = args ? args.mca : undefined;
            resourceInputs["moveProjectSettings"] = args ? args.moveProjectSettings : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentManagementGroupId"] = args ? args.parentManagementGroupId : undefined;
            resourceInputs["payerId"] = args ? args.payerId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["skipAccessChecking"] = args ? args.skipAccessChecking : undefined;
            resourceInputs["startDatecode"] = args ? args.startDatecode : undefined;
            resourceInputs["subscriptionName"] = args ? args.subscriptionName : undefined;
            resourceInputs["subscriptionUuid"] = args ? args.subscriptionUuid : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AzureAccount resources.
 */
export interface AzureAccountState {
    /**
     * Account alias is an optional short unique name that helps identify the account within Kion.
     */
    accountAlias?: pulumi.Input<string>;
    /**
     * An ID representing the account type within Kion.
     */
    accountTypeId?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    /**
     * Parameters used when creating a new Azure CSP subscription.
     */
    csp?: pulumi.Input<inputs.AzureAccountCsp>;
    /**
     * Parameters used when creating a new Azure EA subscription.
     */
    ea?: pulumi.Input<inputs.AzureAccountEa>;
    /**
     * A map of labels to assign to the account. The labels must already exist in Kion.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lastUpdated?: pulumi.Input<string>;
    /**
     * Where the account is attached. Either "project" or "cache".
     */
    location?: pulumi.Input<string>;
    /**
     * Parameters used when creating a new Azure MCA subscription.
     */
    mca?: pulumi.Input<inputs.AzureAccountMca>;
    /**
     * Parameters used when moving an account between Kion projects. These settings are ignored unless moving an account.
     */
    moveProjectSettings?: pulumi.Input<inputs.AzureAccountMoveProjectSettings>;
    /**
     * The name of the Azure account within Kion.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent management group ID when creating an Azure subscription. If provided, the subscription will be created under
     * the provided management group. If not provided, the subscription will be created at the root level
     */
    parentManagementGroupId?: pulumi.Input<string>;
    /**
     * The ID of the billing source containing billing data for this account.
     */
    payerId?: pulumi.Input<number>;
    /**
     * The ID of the Kion project to place this account within. If empty, the account will be placed within the account cache.
     */
    projectId?: pulumi.Input<number>;
    /**
     * True to skip periodic access checking on the account.
     */
    skipAccessChecking?: pulumi.Input<boolean>;
    /**
     * Date when the Azure account will starting submitting payments against a funding source (YYYY-MM). Required if placing an
     * account within a project.
     */
    startDatecode?: pulumi.Input<string>;
    /**
     * Name of the subscription as it appears in Azure.
     */
    subscriptionName?: pulumi.Input<string>;
    /**
     * The UUID of the Azure subscription. If subscription_uuid is provided, the existing subscription will be imported into
     * Kion. If subscription_uuid is omitted, a new subscription will be created.
     */
    subscriptionUuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureAccount resource.
 */
export interface AzureAccountArgs {
    /**
     * Account alias is an optional short unique name that helps identify the account within Kion.
     */
    accountAlias?: pulumi.Input<string>;
    /**
     * An ID representing the account type within Kion.
     */
    accountTypeId?: pulumi.Input<number>;
    /**
     * Parameters used when creating a new Azure CSP subscription.
     */
    csp?: pulumi.Input<inputs.AzureAccountCsp>;
    /**
     * Parameters used when creating a new Azure EA subscription.
     */
    ea?: pulumi.Input<inputs.AzureAccountEa>;
    /**
     * A map of labels to assign to the account. The labels must already exist in Kion.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lastUpdated?: pulumi.Input<string>;
    /**
     * Parameters used when creating a new Azure MCA subscription.
     */
    mca?: pulumi.Input<inputs.AzureAccountMca>;
    /**
     * Parameters used when moving an account between Kion projects. These settings are ignored unless moving an account.
     */
    moveProjectSettings?: pulumi.Input<inputs.AzureAccountMoveProjectSettings>;
    /**
     * The name of the Azure account within Kion.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent management group ID when creating an Azure subscription. If provided, the subscription will be created under
     * the provided management group. If not provided, the subscription will be created at the root level
     */
    parentManagementGroupId?: pulumi.Input<string>;
    /**
     * The ID of the billing source containing billing data for this account.
     */
    payerId: pulumi.Input<number>;
    /**
     * The ID of the Kion project to place this account within. If empty, the account will be placed within the account cache.
     */
    projectId?: pulumi.Input<number>;
    /**
     * True to skip periodic access checking on the account.
     */
    skipAccessChecking?: pulumi.Input<boolean>;
    /**
     * Date when the Azure account will starting submitting payments against a funding source (YYYY-MM). Required if placing an
     * account within a project.
     */
    startDatecode?: pulumi.Input<string>;
    /**
     * Name of the subscription as it appears in Azure.
     */
    subscriptionName?: pulumi.Input<string>;
    /**
     * The UUID of the Azure subscription. If subscription_uuid is provided, the existing subscription will be imported into
     * Kion. If subscription_uuid is omitted, a new subscription will be created.
     */
    subscriptionUuid?: pulumi.Input<string>;
}
