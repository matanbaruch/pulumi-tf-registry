// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProjectEnforcement(args?: GetProjectEnforcementArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectEnforcementResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kion:index/getProjectEnforcement:getProjectEnforcement", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectEnforcement.
 */
export interface GetProjectEnforcementArgs {
    filters?: inputs.GetProjectEnforcementFilter[];
    id?: string;
}

/**
 * A collection of values returned by getProjectEnforcement.
 */
export interface GetProjectEnforcementResult {
    readonly enforcements: outputs.GetProjectEnforcementEnforcement[];
    readonly filters?: outputs.GetProjectEnforcementFilter[];
    readonly id: string;
}
export function getProjectEnforcementOutput(args?: GetProjectEnforcementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectEnforcementResult> {
    return pulumi.output(args).apply((a: any) => getProjectEnforcement(a, opts))
}

/**
 * A collection of arguments for invoking getProjectEnforcement.
 */
export interface GetProjectEnforcementOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetProjectEnforcementFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
