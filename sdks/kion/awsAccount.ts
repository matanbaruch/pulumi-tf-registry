// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AwsAccount extends pulumi.CustomResource {
    /**
     * Get an existing AwsAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsAccountState, opts?: pulumi.CustomResourceOptions): AwsAccount {
        return new AwsAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kion:index/awsAccount:AwsAccount';

    /**
     * Returns true if the given object is an instance of AwsAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsAccount.__pulumiType;
    }

    /**
     * Account alias is an optional short unique name that helps identify the account within Kion.
     */
    public readonly accountAlias!: pulumi.Output<string | undefined>;
    /**
     * The account number of the AWS account. If account_number is provided, the existing account will be imported into Kion.
     * If account_number is omitted, a new account will be created.
     */
    public readonly accountNumber!: pulumi.Output<string>;
    /**
     * An ID representing the account type within Kion.
     */
    public readonly accountTypeId!: pulumi.Output<number>;
    /**
     * Where to place this account within AWS Organization when creating an account.
     */
    public readonly awsOrganizationalUnit!: pulumi.Output<outputs.AwsAccountAwsOrganizationalUnit | undefined>;
    /**
     * The external ID used when assuming cloud access roles.
     */
    public /*out*/ readonly carExternalId!: pulumi.Output<string>;
    /**
     * The name used when creating new commercial account.
     */
    public readonly commercialAccountName!: pulumi.Output<string | undefined>;
    /**
     * True to create an AWS GovCloud account.
     */
    public readonly createGovcloud!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The root email address to associate with a new account. Required when creating a new account unless an account
     * placeholder email has been set.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * The name used when creating new GovCloud account.
     */
    public readonly govAccountName!: pulumi.Output<string | undefined>;
    /**
     * True to associate spend from a linked GovCloud account with this account.
     */
    public readonly includeLinkedAccountSpend!: pulumi.Output<boolean>;
    /**
     * A map of labels to assign to the account. The labels must already exist in Kion.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly lastUpdated!: pulumi.Output<string>;
    /**
     * For AWS GovCloud accounts, this is the linked commercial account. Otherwise this is empty.
     */
    public /*out*/ readonly linkedAccountNumber!: pulumi.Output<string>;
    /**
     * The AWS organization service role.
     */
    public readonly linkedRole!: pulumi.Output<string | undefined>;
    /**
     * Where the account is attached. Either "project" or "cache".
     */
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * Parameters used when moving an account between Kion projects. These settings are ignored unless moving an account.
     */
    public readonly moveProjectSettings!: pulumi.Output<outputs.AwsAccountMoveProjectSettings | undefined>;
    /**
     * The name of the AWS account within Kion.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the billing source containing billing data for this account.
     */
    public readonly payerId!: pulumi.Output<number>;
    /**
     * The ID of the Kion project to place this account within. If empty, the account will be placed within the account cache.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * The external ID used for automated internal actions using the service role for this account.
     */
    public /*out*/ readonly serviceExternalId!: pulumi.Output<string>;
    /**
     * True to skip periodic access checking on the account.
     */
    public readonly skipAccessChecking!: pulumi.Output<boolean>;
    /**
     * Date when the AWS account will starting submitting payments against a funding source (YYYY-MM). Required if placing an
     * account within a project.
     */
    public readonly startDatecode!: pulumi.Output<string>;
    /**
     * True to keep the account name and email address in Kion in sync with the account name and email address as set in AWS
     * Organization.
     */
    public readonly useOrgAccountInfo!: pulumi.Output<boolean>;

    /**
     * Create a AwsAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsAccountArgs | AwsAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsAccountState | undefined;
            resourceInputs["accountAlias"] = state ? state.accountAlias : undefined;
            resourceInputs["accountNumber"] = state ? state.accountNumber : undefined;
            resourceInputs["accountTypeId"] = state ? state.accountTypeId : undefined;
            resourceInputs["awsOrganizationalUnit"] = state ? state.awsOrganizationalUnit : undefined;
            resourceInputs["carExternalId"] = state ? state.carExternalId : undefined;
            resourceInputs["commercialAccountName"] = state ? state.commercialAccountName : undefined;
            resourceInputs["createGovcloud"] = state ? state.createGovcloud : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["govAccountName"] = state ? state.govAccountName : undefined;
            resourceInputs["includeLinkedAccountSpend"] = state ? state.includeLinkedAccountSpend : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["linkedAccountNumber"] = state ? state.linkedAccountNumber : undefined;
            resourceInputs["linkedRole"] = state ? state.linkedRole : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["moveProjectSettings"] = state ? state.moveProjectSettings : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["payerId"] = state ? state.payerId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["serviceExternalId"] = state ? state.serviceExternalId : undefined;
            resourceInputs["skipAccessChecking"] = state ? state.skipAccessChecking : undefined;
            resourceInputs["startDatecode"] = state ? state.startDatecode : undefined;
            resourceInputs["useOrgAccountInfo"] = state ? state.useOrgAccountInfo : undefined;
        } else {
            const args = argsOrState as AwsAccountArgs | undefined;
            if ((!args || args.payerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'payerId'");
            }
            resourceInputs["accountAlias"] = args ? args.accountAlias : undefined;
            resourceInputs["accountNumber"] = args ? args.accountNumber : undefined;
            resourceInputs["accountTypeId"] = args ? args.accountTypeId : undefined;
            resourceInputs["awsOrganizationalUnit"] = args ? args.awsOrganizationalUnit : undefined;
            resourceInputs["commercialAccountName"] = args ? args.commercialAccountName : undefined;
            resourceInputs["createGovcloud"] = args ? args.createGovcloud : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["govAccountName"] = args ? args.govAccountName : undefined;
            resourceInputs["includeLinkedAccountSpend"] = args ? args.includeLinkedAccountSpend : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["linkedRole"] = args ? args.linkedRole : undefined;
            resourceInputs["moveProjectSettings"] = args ? args.moveProjectSettings : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["payerId"] = args ? args.payerId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["skipAccessChecking"] = args ? args.skipAccessChecking : undefined;
            resourceInputs["startDatecode"] = args ? args.startDatecode : undefined;
            resourceInputs["useOrgAccountInfo"] = args ? args.useOrgAccountInfo : undefined;
            resourceInputs["carExternalId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["linkedAccountNumber"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["serviceExternalId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsAccount resources.
 */
export interface AwsAccountState {
    /**
     * Account alias is an optional short unique name that helps identify the account within Kion.
     */
    accountAlias?: pulumi.Input<string>;
    /**
     * The account number of the AWS account. If account_number is provided, the existing account will be imported into Kion.
     * If account_number is omitted, a new account will be created.
     */
    accountNumber?: pulumi.Input<string>;
    /**
     * An ID representing the account type within Kion.
     */
    accountTypeId?: pulumi.Input<number>;
    /**
     * Where to place this account within AWS Organization when creating an account.
     */
    awsOrganizationalUnit?: pulumi.Input<inputs.AwsAccountAwsOrganizationalUnit>;
    /**
     * The external ID used when assuming cloud access roles.
     */
    carExternalId?: pulumi.Input<string>;
    /**
     * The name used when creating new commercial account.
     */
    commercialAccountName?: pulumi.Input<string>;
    /**
     * True to create an AWS GovCloud account.
     */
    createGovcloud?: pulumi.Input<boolean>;
    createdAt?: pulumi.Input<string>;
    /**
     * The root email address to associate with a new account. Required when creating a new account unless an account
     * placeholder email has been set.
     */
    email?: pulumi.Input<string>;
    /**
     * The name used when creating new GovCloud account.
     */
    govAccountName?: pulumi.Input<string>;
    /**
     * True to associate spend from a linked GovCloud account with this account.
     */
    includeLinkedAccountSpend?: pulumi.Input<boolean>;
    /**
     * A map of labels to assign to the account. The labels must already exist in Kion.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lastUpdated?: pulumi.Input<string>;
    /**
     * For AWS GovCloud accounts, this is the linked commercial account. Otherwise this is empty.
     */
    linkedAccountNumber?: pulumi.Input<string>;
    /**
     * The AWS organization service role.
     */
    linkedRole?: pulumi.Input<string>;
    /**
     * Where the account is attached. Either "project" or "cache".
     */
    location?: pulumi.Input<string>;
    /**
     * Parameters used when moving an account between Kion projects. These settings are ignored unless moving an account.
     */
    moveProjectSettings?: pulumi.Input<inputs.AwsAccountMoveProjectSettings>;
    /**
     * The name of the AWS account within Kion.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the billing source containing billing data for this account.
     */
    payerId?: pulumi.Input<number>;
    /**
     * The ID of the Kion project to place this account within. If empty, the account will be placed within the account cache.
     */
    projectId?: pulumi.Input<number>;
    /**
     * The external ID used for automated internal actions using the service role for this account.
     */
    serviceExternalId?: pulumi.Input<string>;
    /**
     * True to skip periodic access checking on the account.
     */
    skipAccessChecking?: pulumi.Input<boolean>;
    /**
     * Date when the AWS account will starting submitting payments against a funding source (YYYY-MM). Required if placing an
     * account within a project.
     */
    startDatecode?: pulumi.Input<string>;
    /**
     * True to keep the account name and email address in Kion in sync with the account name and email address as set in AWS
     * Organization.
     */
    useOrgAccountInfo?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AwsAccount resource.
 */
export interface AwsAccountArgs {
    /**
     * Account alias is an optional short unique name that helps identify the account within Kion.
     */
    accountAlias?: pulumi.Input<string>;
    /**
     * The account number of the AWS account. If account_number is provided, the existing account will be imported into Kion.
     * If account_number is omitted, a new account will be created.
     */
    accountNumber?: pulumi.Input<string>;
    /**
     * An ID representing the account type within Kion.
     */
    accountTypeId?: pulumi.Input<number>;
    /**
     * Where to place this account within AWS Organization when creating an account.
     */
    awsOrganizationalUnit?: pulumi.Input<inputs.AwsAccountAwsOrganizationalUnit>;
    /**
     * The name used when creating new commercial account.
     */
    commercialAccountName?: pulumi.Input<string>;
    /**
     * True to create an AWS GovCloud account.
     */
    createGovcloud?: pulumi.Input<boolean>;
    /**
     * The root email address to associate with a new account. Required when creating a new account unless an account
     * placeholder email has been set.
     */
    email?: pulumi.Input<string>;
    /**
     * The name used when creating new GovCloud account.
     */
    govAccountName?: pulumi.Input<string>;
    /**
     * True to associate spend from a linked GovCloud account with this account.
     */
    includeLinkedAccountSpend?: pulumi.Input<boolean>;
    /**
     * A map of labels to assign to the account. The labels must already exist in Kion.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lastUpdated?: pulumi.Input<string>;
    /**
     * The AWS organization service role.
     */
    linkedRole?: pulumi.Input<string>;
    /**
     * Parameters used when moving an account between Kion projects. These settings are ignored unless moving an account.
     */
    moveProjectSettings?: pulumi.Input<inputs.AwsAccountMoveProjectSettings>;
    /**
     * The name of the AWS account within Kion.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the billing source containing billing data for this account.
     */
    payerId: pulumi.Input<number>;
    /**
     * The ID of the Kion project to place this account within. If empty, the account will be placed within the account cache.
     */
    projectId?: pulumi.Input<number>;
    /**
     * True to skip periodic access checking on the account.
     */
    skipAccessChecking?: pulumi.Input<boolean>;
    /**
     * Date when the AWS account will starting submitting payments against a funding source (YYYY-MM). Required if placing an
     * account within a project.
     */
    startDatecode?: pulumi.Input<string>;
    /**
     * True to keep the account name and email address in Kion in sync with the account name and email address as set in AWS
     * Organization.
     */
    useOrgAccountInfo?: pulumi.Input<boolean>;
}
