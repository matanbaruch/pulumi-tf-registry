{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "awsAccount.ts",
        "awsCloudformationTemplate.ts",
        "awsIamPolicy.ts",
        "azureAccount.ts",
        "azureArmTemplate.ts",
        "azurePolicy.ts",
        "azureRole.ts",
        "cloudRule.ts",
        "complianceCheck.ts",
        "complianceStandard.ts",
        "config/index.ts",
        "config/vars.ts",
        "fundingSource.ts",
        "fundingSourcePermissionMapping.ts",
        "gcpAccount.ts",
        "gcpIamRole.ts",
        "getAccount.ts",
        "getAwsCloudformationTemplate.ts",
        "getAwsIamPolicy.ts",
        "getAzureArmTemplate.ts",
        "getAzurePolicy.ts",
        "getAzureRole.ts",
        "getCachedAccount.ts",
        "getCloudRule.ts",
        "getComplianceCheck.ts",
        "getComplianceStandard.ts",
        "getFundingSource.ts",
        "getFundingSourcePermissionMapping.ts",
        "getGcpIamRole.ts",
        "getGlobalPermissionMapping.ts",
        "getLabel.ts",
        "getOu.ts",
        "getOuPermissionMapping.ts",
        "getProject.ts",
        "getProjectEnforcement.ts",
        "getProjectPermissionMapping.ts",
        "getSamlGroupAssociation.ts",
        "getServiceControlPolicy.ts",
        "getUser.ts",
        "getUserGroup.ts",
        "getWebhook.ts",
        "globalPermissionMapping.ts",
        "index.ts",
        "label.ts",
        "ou.ts",
        "ouCloudAccessRole.ts",
        "ouPermissionMapping.ts",
        "project.ts",
        "projectCloudAccessRole.ts",
        "projectEnforcement.ts",
        "projectPermissionMapping.ts",
        "provider.ts",
        "samlGroupAssociation.ts",
        "serviceControlPolicy.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "user.ts",
        "userGroup.ts",
        "utilities.ts",
        "webhook.ts"
    ]
}
