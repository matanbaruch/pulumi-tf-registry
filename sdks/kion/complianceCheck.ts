// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ComplianceCheck extends pulumi.CustomResource {
    /**
     * Get an existing ComplianceCheck resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComplianceCheckState, opts?: pulumi.CustomResourceOptions): ComplianceCheck {
        return new ComplianceCheck(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kion:index/complianceCheck:ComplianceCheck';

    /**
     * Returns true if the given object is an instance of ComplianceCheck.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComplianceCheck {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComplianceCheck.__pulumiType;
    }

    public readonly azurePolicyId!: pulumi.Output<number | undefined>;
    public readonly body!: pulumi.Output<string | undefined>;
    public readonly cloudProviderId!: pulumi.Output<number>;
    public readonly complianceCheckTypeId!: pulumi.Output<number>;
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly createdByUserId!: pulumi.Output<number | undefined>;
    public /*out*/ readonly ctManaged!: pulumi.Output<boolean>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly frequencyMinutes!: pulumi.Output<number | undefined>;
    public readonly frequencyTypeId!: pulumi.Output<number | undefined>;
    public readonly isAllRegions!: pulumi.Output<boolean | undefined>;
    public readonly isAutoArchived!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly lastScanId!: pulumi.Output<number>;
    public readonly lastUpdated!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Must provide at least the owner_user_groups field or the owner_users field.
     */
    public readonly ownerUserGroups!: pulumi.Output<outputs.ComplianceCheckOwnerUserGroup[] | undefined>;
    /**
     * Must provide at least the owner_user_groups field or the owner_users field.
     */
    public readonly ownerUsers!: pulumi.Output<outputs.ComplianceCheckOwnerUser[] | undefined>;
    public readonly regions!: pulumi.Output<string[] | undefined>;
    public readonly severityTypeId!: pulumi.Output<number | undefined>;

    /**
     * Create a ComplianceCheck resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComplianceCheckArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComplianceCheckArgs | ComplianceCheckState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComplianceCheckState | undefined;
            resourceInputs["azurePolicyId"] = state ? state.azurePolicyId : undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["cloudProviderId"] = state ? state.cloudProviderId : undefined;
            resourceInputs["complianceCheckTypeId"] = state ? state.complianceCheckTypeId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdByUserId"] = state ? state.createdByUserId : undefined;
            resourceInputs["ctManaged"] = state ? state.ctManaged : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["frequencyMinutes"] = state ? state.frequencyMinutes : undefined;
            resourceInputs["frequencyTypeId"] = state ? state.frequencyTypeId : undefined;
            resourceInputs["isAllRegions"] = state ? state.isAllRegions : undefined;
            resourceInputs["isAutoArchived"] = state ? state.isAutoArchived : undefined;
            resourceInputs["lastScanId"] = state ? state.lastScanId : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ownerUserGroups"] = state ? state.ownerUserGroups : undefined;
            resourceInputs["ownerUsers"] = state ? state.ownerUsers : undefined;
            resourceInputs["regions"] = state ? state.regions : undefined;
            resourceInputs["severityTypeId"] = state ? state.severityTypeId : undefined;
        } else {
            const args = argsOrState as ComplianceCheckArgs | undefined;
            if ((!args || args.cloudProviderId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProviderId'");
            }
            if ((!args || args.complianceCheckTypeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'complianceCheckTypeId'");
            }
            resourceInputs["azurePolicyId"] = args ? args.azurePolicyId : undefined;
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["cloudProviderId"] = args ? args.cloudProviderId : undefined;
            resourceInputs["complianceCheckTypeId"] = args ? args.complianceCheckTypeId : undefined;
            resourceInputs["createdByUserId"] = args ? args.createdByUserId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["frequencyMinutes"] = args ? args.frequencyMinutes : undefined;
            resourceInputs["frequencyTypeId"] = args ? args.frequencyTypeId : undefined;
            resourceInputs["isAllRegions"] = args ? args.isAllRegions : undefined;
            resourceInputs["isAutoArchived"] = args ? args.isAutoArchived : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownerUserGroups"] = args ? args.ownerUserGroups : undefined;
            resourceInputs["ownerUsers"] = args ? args.ownerUsers : undefined;
            resourceInputs["regions"] = args ? args.regions : undefined;
            resourceInputs["severityTypeId"] = args ? args.severityTypeId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["ctManaged"] = undefined /*out*/;
            resourceInputs["lastScanId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComplianceCheck.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ComplianceCheck resources.
 */
export interface ComplianceCheckState {
    azurePolicyId?: pulumi.Input<number>;
    body?: pulumi.Input<string>;
    cloudProviderId?: pulumi.Input<number>;
    complianceCheckTypeId?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    createdByUserId?: pulumi.Input<number>;
    ctManaged?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    frequencyMinutes?: pulumi.Input<number>;
    frequencyTypeId?: pulumi.Input<number>;
    isAllRegions?: pulumi.Input<boolean>;
    isAutoArchived?: pulumi.Input<boolean>;
    lastScanId?: pulumi.Input<number>;
    lastUpdated?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Must provide at least the owner_user_groups field or the owner_users field.
     */
    ownerUserGroups?: pulumi.Input<pulumi.Input<inputs.ComplianceCheckOwnerUserGroup>[]>;
    /**
     * Must provide at least the owner_user_groups field or the owner_users field.
     */
    ownerUsers?: pulumi.Input<pulumi.Input<inputs.ComplianceCheckOwnerUser>[]>;
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    severityTypeId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ComplianceCheck resource.
 */
export interface ComplianceCheckArgs {
    azurePolicyId?: pulumi.Input<number>;
    body?: pulumi.Input<string>;
    cloudProviderId: pulumi.Input<number>;
    complianceCheckTypeId: pulumi.Input<number>;
    createdByUserId?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    frequencyMinutes?: pulumi.Input<number>;
    frequencyTypeId?: pulumi.Input<number>;
    isAllRegions?: pulumi.Input<boolean>;
    isAutoArchived?: pulumi.Input<boolean>;
    lastUpdated?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Must provide at least the owner_user_groups field or the owner_users field.
     */
    ownerUserGroups?: pulumi.Input<pulumi.Input<inputs.ComplianceCheckOwnerUserGroup>[]>;
    /**
     * Must provide at least the owner_user_groups field or the owner_users field.
     */
    ownerUsers?: pulumi.Input<pulumi.Input<inputs.ComplianceCheckOwnerUser>[]>;
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    severityTypeId?: pulumi.Input<number>;
}
