// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SamlGroupAssociation extends pulumi.CustomResource {
    /**
     * Get an existing SamlGroupAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SamlGroupAssociationState, opts?: pulumi.CustomResourceOptions): SamlGroupAssociation {
        return new SamlGroupAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kion:index/samlGroupAssociation:SamlGroupAssociation';

    /**
     * Returns true if the given object is an instance of SamlGroupAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SamlGroupAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SamlGroupAssociation.__pulumiType;
    }

    public readonly assertionName!: pulumi.Output<string | undefined>;
    public readonly assertionRegex!: pulumi.Output<string | undefined>;
    public readonly idmsId!: pulumi.Output<number | undefined>;
    public /*out*/ readonly idmsSamlId!: pulumi.Output<number>;
    public readonly lastUpdated!: pulumi.Output<string>;
    public /*out*/ readonly shouldUpdateOnLogin!: pulumi.Output<boolean>;
    public readonly updateOnLogin!: pulumi.Output<boolean | undefined>;
    public readonly userGroupId!: pulumi.Output<number | undefined>;

    /**
     * Create a SamlGroupAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SamlGroupAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SamlGroupAssociationArgs | SamlGroupAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SamlGroupAssociationState | undefined;
            resourceInputs["assertionName"] = state ? state.assertionName : undefined;
            resourceInputs["assertionRegex"] = state ? state.assertionRegex : undefined;
            resourceInputs["idmsId"] = state ? state.idmsId : undefined;
            resourceInputs["idmsSamlId"] = state ? state.idmsSamlId : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["shouldUpdateOnLogin"] = state ? state.shouldUpdateOnLogin : undefined;
            resourceInputs["updateOnLogin"] = state ? state.updateOnLogin : undefined;
            resourceInputs["userGroupId"] = state ? state.userGroupId : undefined;
        } else {
            const args = argsOrState as SamlGroupAssociationArgs | undefined;
            resourceInputs["assertionName"] = args ? args.assertionName : undefined;
            resourceInputs["assertionRegex"] = args ? args.assertionRegex : undefined;
            resourceInputs["idmsId"] = args ? args.idmsId : undefined;
            resourceInputs["lastUpdated"] = args ? args.lastUpdated : undefined;
            resourceInputs["updateOnLogin"] = args ? args.updateOnLogin : undefined;
            resourceInputs["userGroupId"] = args ? args.userGroupId : undefined;
            resourceInputs["idmsSamlId"] = undefined /*out*/;
            resourceInputs["shouldUpdateOnLogin"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SamlGroupAssociation.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SamlGroupAssociation resources.
 */
export interface SamlGroupAssociationState {
    assertionName?: pulumi.Input<string>;
    assertionRegex?: pulumi.Input<string>;
    idmsId?: pulumi.Input<number>;
    idmsSamlId?: pulumi.Input<number>;
    lastUpdated?: pulumi.Input<string>;
    shouldUpdateOnLogin?: pulumi.Input<boolean>;
    updateOnLogin?: pulumi.Input<boolean>;
    userGroupId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SamlGroupAssociation resource.
 */
export interface SamlGroupAssociationArgs {
    assertionName?: pulumi.Input<string>;
    assertionRegex?: pulumi.Input<string>;
    idmsId?: pulumi.Input<number>;
    lastUpdated?: pulumi.Input<string>;
    updateOnLogin?: pulumi.Input<boolean>;
    userGroupId?: pulumi.Input<number>;
}
