// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPackages(args: GetPackagesArgs, opts?: pulumi.InvokeOptions): Promise<GetPackagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getPackages:getPackages", {
        "id": args.id,
        "metadataName": args.metadataName,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackages.
 */
export interface GetPackagesArgs {
    id?: string;
    metadataName?: string;
    scope: inputs.GetPackagesScope;
}

/**
 * A collection of values returned by getPackages.
 */
export interface GetPackagesResult {
    readonly id: string;
    readonly metadataName?: string;
    readonly namespaceName: string;
    readonly packages: outputs.GetPackagesPackage[];
    readonly scope: outputs.GetPackagesScope;
}
export function getPackagesOutput(args: GetPackagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackagesResult> {
    return pulumi.output(args).apply((a: any) => getPackages(a, opts))
}

/**
 * A collection of arguments for invoking getPackages.
 */
export interface GetPackagesOutputArgs {
    id?: pulumi.Input<string>;
    metadataName?: pulumi.Input<string>;
    scope: pulumi.Input<inputs.GetPackagesScopeArgs>;
}
