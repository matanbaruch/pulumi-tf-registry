// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPackage(args: GetPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetPackageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getPackage:getPackage", {
        "id": args.id,
        "meta": args.meta,
        "metadataName": args.metadataName,
        "name": args.name,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackage.
 */
export interface GetPackageArgs {
    id?: string;
    meta?: inputs.GetPackageMeta;
    metadataName: string;
    name: string;
    scope: inputs.GetPackageScope;
}

/**
 * A collection of values returned by getPackage.
 */
export interface GetPackageResult {
    readonly id: string;
    readonly meta?: outputs.GetPackageMeta;
    readonly metadataName: string;
    readonly name: string;
    readonly namespaceName: string;
    readonly scope: outputs.GetPackageScope;
    readonly specs: outputs.GetPackageSpec[];
}
export function getPackageOutput(args: GetPackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackageResult> {
    return pulumi.output(args).apply((a: any) => getPackage(a, opts))
}

/**
 * A collection of arguments for invoking getPackage.
 */
export interface GetPackageOutputArgs {
    id?: pulumi.Input<string>;
    meta?: pulumi.Input<inputs.GetPackageMetaArgs>;
    metadataName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    scope: pulumi.Input<inputs.GetPackageScopeArgs>;
}
