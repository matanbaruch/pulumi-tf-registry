// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProvisioner(args?: GetProvisionerArgs, opts?: pulumi.InvokeOptions): Promise<GetProvisionerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getProvisioner:getProvisioner", {
        "id": args.id,
        "provisioners": args.provisioners,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProvisioner.
 */
export interface GetProvisionerArgs {
    id?: string;
    provisioners?: inputs.GetProvisionerProvisioner[];
}

/**
 * A collection of values returned by getProvisioner.
 */
export interface GetProvisionerResult {
    readonly id: string;
    readonly provisioners?: outputs.GetProvisionerProvisioner[];
}
export function getProvisionerOutput(args?: GetProvisionerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProvisionerResult> {
    return pulumi.output(args).apply((a: any) => getProvisioner(a, opts))
}

/**
 * A collection of arguments for invoking getProvisioner.
 */
export interface GetProvisionerOutputArgs {
    id?: pulumi.Input<string>;
    provisioners?: pulumi.Input<pulumi.Input<inputs.GetProvisionerProvisionerArgs>[]>;
}
