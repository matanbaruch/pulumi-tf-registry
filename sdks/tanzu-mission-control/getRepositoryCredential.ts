// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRepositoryCredential(args: GetRepositoryCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryCredentialResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getRepositoryCredential:getRepositoryCredential", {
        "id": args.id,
        "meta": args.meta,
        "name": args.name,
        "orgId": args.orgId,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRepositoryCredential.
 */
export interface GetRepositoryCredentialArgs {
    id?: string;
    meta?: inputs.GetRepositoryCredentialMeta;
    name: string;
    orgId?: string;
    scope: inputs.GetRepositoryCredentialScope;
}

/**
 * A collection of values returned by getRepositoryCredential.
 */
export interface GetRepositoryCredentialResult {
    readonly id: string;
    readonly meta?: outputs.GetRepositoryCredentialMeta;
    readonly name: string;
    readonly orgId?: string;
    readonly scope: outputs.GetRepositoryCredentialScope;
    readonly specs: outputs.GetRepositoryCredentialSpec[];
}
export function getRepositoryCredentialOutput(args: GetRepositoryCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryCredentialResult> {
    return pulumi.output(args).apply((a: any) => getRepositoryCredential(a, opts))
}

/**
 * A collection of arguments for invoking getRepositoryCredential.
 */
export interface GetRepositoryCredentialOutputArgs {
    id?: pulumi.Input<string>;
    meta?: pulumi.Input<inputs.GetRepositoryCredentialMetaArgs>;
    name: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    scope: pulumi.Input<inputs.GetRepositoryCredentialScopeArgs>;
}
