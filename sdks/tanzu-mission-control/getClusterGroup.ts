// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClusterGroup(args: GetClusterGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getClusterGroup:getClusterGroup", {
        "id": args.id,
        "meta": args.meta,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterGroup.
 */
export interface GetClusterGroupArgs {
    id?: string;
    meta?: inputs.GetClusterGroupMeta;
    name: string;
}

/**
 * A collection of values returned by getClusterGroup.
 */
export interface GetClusterGroupResult {
    readonly id: string;
    readonly meta?: outputs.GetClusterGroupMeta;
    readonly name: string;
}
export function getClusterGroupOutput(args: GetClusterGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterGroupResult> {
    return pulumi.output(args).apply((a: any) => getClusterGroup(a, opts))
}

/**
 * A collection of arguments for invoking getClusterGroup.
 */
export interface GetClusterGroupOutputArgs {
    id?: pulumi.Input<string>;
    meta?: pulumi.Input<inputs.GetClusterGroupMetaArgs>;
    name: pulumi.Input<string>;
}
