// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPackageInstall(args: GetPackageInstallArgs, opts?: pulumi.InvokeOptions): Promise<GetPackageInstallResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getPackageInstall:getPackageInstall", {
        "id": args.id,
        "meta": args.meta,
        "name": args.name,
        "namespace": args.namespace,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPackageInstall.
 */
export interface GetPackageInstallArgs {
    id?: string;
    meta?: inputs.GetPackageInstallMeta;
    name: string;
    namespace: string;
    scope: inputs.GetPackageInstallScope;
}

/**
 * A collection of values returned by getPackageInstall.
 */
export interface GetPackageInstallResult {
    readonly id: string;
    readonly meta?: outputs.GetPackageInstallMeta;
    readonly name: string;
    readonly namespace: string;
    readonly scope: outputs.GetPackageInstallScope;
    readonly specs: outputs.GetPackageInstallSpec[];
    readonly statuses: outputs.GetPackageInstallStatus[];
}
export function getPackageInstallOutput(args: GetPackageInstallOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackageInstallResult> {
    return pulumi.output(args).apply((a: any) => getPackageInstall(a, opts))
}

/**
 * A collection of arguments for invoking getPackageInstall.
 */
export interface GetPackageInstallOutputArgs {
    id?: pulumi.Input<string>;
    meta?: pulumi.Input<inputs.GetPackageInstallMetaArgs>;
    name: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    scope: pulumi.Input<inputs.GetPackageInstallScopeArgs>;
}
