// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHelmCharts(args?: GetHelmChartsArgs, opts?: pulumi.InvokeOptions): Promise<GetHelmChartsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getHelmCharts:getHelmCharts", {
        "chartMetadataName": args.chartMetadataName,
        "id": args.id,
        "name": args.name,
        "repositoryName": args.repositoryName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHelmCharts.
 */
export interface GetHelmChartsArgs {
    chartMetadataName?: string;
    id?: string;
    name?: string;
    repositoryName?: string;
}

/**
 * A collection of values returned by getHelmCharts.
 */
export interface GetHelmChartsResult {
    readonly chartMetadataName?: string;
    readonly charts: outputs.GetHelmChartsChart[];
    readonly id: string;
    readonly name?: string;
    readonly repositoryName?: string;
}
export function getHelmChartsOutput(args?: GetHelmChartsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHelmChartsResult> {
    return pulumi.output(args).apply((a: any) => getHelmCharts(a, opts))
}

/**
 * A collection of arguments for invoking getHelmCharts.
 */
export interface GetHelmChartsOutputArgs {
    chartMetadataName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    repositoryName?: pulumi.Input<string>;
}
