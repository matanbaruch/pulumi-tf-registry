// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIntegration(args: GetIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getIntegration:getIntegration", {
        "clusterName": args.clusterName,
        "id": args.id,
        "integrationName": args.integrationName,
        "managementClusterName": args.managementClusterName,
        "meta": args.meta,
        "provisionerName": args.provisionerName,
        "spec": args.spec,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIntegration.
 */
export interface GetIntegrationArgs {
    clusterName: string;
    id?: string;
    integrationName: string;
    managementClusterName?: string;
    meta?: inputs.GetIntegrationMeta;
    provisionerName?: string;
    spec: inputs.GetIntegrationSpec;
}

/**
 * A collection of values returned by getIntegration.
 */
export interface GetIntegrationResult {
    readonly clusterName: string;
    readonly id: string;
    readonly integrationName: string;
    readonly managementClusterName?: string;
    readonly meta?: outputs.GetIntegrationMeta;
    readonly provisionerName?: string;
    readonly spec: outputs.GetIntegrationSpec;
    readonly status: {[key: string]: string};
}
export function getIntegrationOutput(args: GetIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIntegrationResult> {
    return pulumi.output(args).apply((a: any) => getIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getIntegration.
 */
export interface GetIntegrationOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    integrationName: pulumi.Input<string>;
    managementClusterName?: pulumi.Input<string>;
    meta?: pulumi.Input<inputs.GetIntegrationMetaArgs>;
    provisionerName?: pulumi.Input<string>;
    spec: pulumi.Input<inputs.GetIntegrationSpecArgs>;
}
