// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementCluster(args: GetManagementClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getManagementCluster:getManagementCluster", {
        "id": args.id,
        "meta": args.meta,
        "name": args.name,
        "orgId": args.orgId,
        "readyWaitTimeout": args.readyWaitTimeout,
        "registerManagementCluster": args.registerManagementCluster,
        "spec": args.spec,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementCluster.
 */
export interface GetManagementClusterArgs {
    id?: string;
    meta?: inputs.GetManagementClusterMeta;
    name: string;
    orgId?: string;
    readyWaitTimeout?: string;
    registerManagementCluster?: inputs.GetManagementClusterRegisterManagementCluster;
    spec?: inputs.GetManagementClusterSpec;
}

/**
 * A collection of values returned by getManagementCluster.
 */
export interface GetManagementClusterResult {
    readonly id: string;
    readonly meta?: outputs.GetManagementClusterMeta;
    readonly name: string;
    readonly orgId?: string;
    readonly readyWaitTimeout?: string;
    readonly registerManagementCluster?: outputs.GetManagementClusterRegisterManagementCluster;
    readonly spec?: outputs.GetManagementClusterSpec;
    readonly status: {[key: string]: string};
}
export function getManagementClusterOutput(args: GetManagementClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementClusterResult> {
    return pulumi.output(args).apply((a: any) => getManagementCluster(a, opts))
}

/**
 * A collection of arguments for invoking getManagementCluster.
 */
export interface GetManagementClusterOutputArgs {
    id?: pulumi.Input<string>;
    meta?: pulumi.Input<inputs.GetManagementClusterMetaArgs>;
    name: pulumi.Input<string>;
    orgId?: pulumi.Input<string>;
    readyWaitTimeout?: pulumi.Input<string>;
    registerManagementCluster?: pulumi.Input<inputs.GetManagementClusterRegisterManagementClusterArgs>;
    spec?: pulumi.Input<inputs.GetManagementClusterSpecArgs>;
}
