// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHelmFeature(args: GetHelmFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetHelmFeatureResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getHelmFeature:getHelmFeature", {
        "id": args.id,
        "meta": args.meta,
        "scope": args.scope,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHelmFeature.
 */
export interface GetHelmFeatureArgs {
    id?: string;
    meta?: inputs.GetHelmFeatureMeta;
    scope: inputs.GetHelmFeatureScope;
}

/**
 * A collection of values returned by getHelmFeature.
 */
export interface GetHelmFeatureResult {
    readonly id: string;
    readonly meta?: outputs.GetHelmFeatureMeta;
    readonly scope: outputs.GetHelmFeatureScope;
    readonly status: {[key: string]: string};
}
export function getHelmFeatureOutput(args: GetHelmFeatureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHelmFeatureResult> {
    return pulumi.output(args).apply((a: any) => getHelmFeature(a, opts))
}

/**
 * A collection of arguments for invoking getHelmFeature.
 */
export interface GetHelmFeatureOutputArgs {
    id?: pulumi.Input<string>;
    meta?: pulumi.Input<inputs.GetHelmFeatureMetaArgs>;
    scope: pulumi.Input<inputs.GetHelmFeatureScopeArgs>;
}
