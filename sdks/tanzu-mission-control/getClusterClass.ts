// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getClusterClass(args: GetClusterClassArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterClassResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getClusterClass:getClusterClass", {
        "id": args.id,
        "managementClusterName": args.managementClusterName,
        "name": args.name,
        "provisionerName": args.provisionerName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterClass.
 */
export interface GetClusterClassArgs {
    id?: string;
    managementClusterName: string;
    name: string;
    provisionerName: string;
}

/**
 * A collection of values returned by getClusterClass.
 */
export interface GetClusterClassResult {
    readonly id: string;
    readonly managementClusterName: string;
    readonly name: string;
    readonly provisionerName: string;
    readonly variablesSchema: string;
    readonly variablesTemplate: string;
    readonly workerClasses: string[];
}
export function getClusterClassOutput(args: GetClusterClassOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterClassResult> {
    return pulumi.output(args).apply((a: any) => getClusterClass(a, opts))
}

/**
 * A collection of arguments for invoking getClusterClass.
 */
export interface GetClusterClassOutputArgs {
    id?: pulumi.Input<string>;
    managementClusterName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    provisionerName: pulumi.Input<string>;
}
