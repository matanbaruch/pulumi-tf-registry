// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The provider type for the tanzu-mission-control package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'tanzu-mission-control';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    public readonly caCert!: pulumi.Output<string | undefined>;
    public readonly caFile!: pulumi.Output<string | undefined>;
    public readonly clientAuthCert!: pulumi.Output<string | undefined>;
    public readonly clientAuthCertFile!: pulumi.Output<string | undefined>;
    public readonly clientAuthKey!: pulumi.Output<string | undefined>;
    public readonly clientAuthKeyFile!: pulumi.Output<string | undefined>;
    public readonly endpoint!: pulumi.Output<string | undefined>;
    public readonly vmwCloudApiToken!: pulumi.Output<string | undefined>;
    public readonly vmwCloudEndpoint!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["caCert"] = args?.caCert ? pulumi.secret(args.caCert) : undefined;
            resourceInputs["caFile"] = args ? args.caFile : undefined;
            resourceInputs["clientAuthCert"] = args?.clientAuthCert ? pulumi.secret(args.clientAuthCert) : undefined;
            resourceInputs["clientAuthCertFile"] = args ? args.clientAuthCertFile : undefined;
            resourceInputs["clientAuthKey"] = args?.clientAuthKey ? pulumi.secret(args.clientAuthKey) : undefined;
            resourceInputs["clientAuthKeyFile"] = args ? args.clientAuthKeyFile : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["insecureAllowUnverifiedSsl"] = pulumi.output(args ? args.insecureAllowUnverifiedSsl : undefined).apply(JSON.stringify);
            resourceInputs["selfManaged"] = pulumi.output(args ? args.selfManaged : undefined).apply(JSON.stringify);
            resourceInputs["vmwCloudApiToken"] = args?.vmwCloudApiToken ? pulumi.secret(args.vmwCloudApiToken) : undefined;
            resourceInputs["vmwCloudEndpoint"] = args ? args.vmwCloudEndpoint : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["caCert", "clientAuthCert", "clientAuthKey", "vmwCloudApiToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    caCert?: pulumi.Input<string>;
    caFile?: pulumi.Input<string>;
    clientAuthCert?: pulumi.Input<string>;
    clientAuthCertFile?: pulumi.Input<string>;
    clientAuthKey?: pulumi.Input<string>;
    clientAuthKeyFile?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    insecureAllowUnverifiedSsl?: pulumi.Input<boolean>;
    selfManaged?: pulumi.Input<inputs.ProviderSelfManaged>;
    vmwCloudApiToken?: pulumi.Input<string>;
    vmwCloudEndpoint?: pulumi.Input<string>;
}
