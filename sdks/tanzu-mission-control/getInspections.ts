// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInspections(args: GetInspectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetInspectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tanzu-mission-control:index/getInspections:getInspections", {
        "clusterName": args.clusterName,
        "id": args.id,
        "managementClusterName": args.managementClusterName,
        "name": args.name,
        "provisionerName": args.provisionerName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInspections.
 */
export interface GetInspectionsArgs {
    clusterName: string;
    id?: string;
    managementClusterName: string;
    name?: string;
    provisionerName: string;
}

/**
 * A collection of values returned by getInspections.
 */
export interface GetInspectionsResult {
    readonly clusterName: string;
    readonly id: string;
    readonly inspections: outputs.GetInspectionsInspection[];
    readonly managementClusterName: string;
    readonly name?: string;
    readonly provisionerName: string;
    readonly totalCount: string;
}
export function getInspectionsOutput(args: GetInspectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInspectionsResult> {
    return pulumi.output(args).apply((a: any) => getInspections(a, opts))
}

/**
 * A collection of arguments for invoking getInspections.
 */
export interface GetInspectionsOutputArgs {
    clusterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    managementClusterName: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    provisionerName: pulumi.Input<string>;
}
