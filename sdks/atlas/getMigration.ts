// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMigration(args: GetMigrationArgs, opts?: pulumi.InvokeOptions): Promise<GetMigrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("atlas:index/getMigration:getMigration", {
        "cloud": args.cloud,
        "dir": args.dir,
        "remoteDir": args.remoteDir,
        "revisionsSchema": args.revisionsSchema,
        "url": args.url,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMigration.
 */
export interface GetMigrationArgs {
    cloud?: inputs.GetMigrationCloud;
    dir?: string;
    remoteDir?: inputs.GetMigrationRemoteDir;
    revisionsSchema?: string;
    url: string;
}

/**
 * A collection of values returned by getMigration.
 */
export interface GetMigrationResult {
    readonly cloud?: outputs.GetMigrationCloud;
    readonly current: string;
    readonly dir?: string;
    readonly id: string;
    readonly latest: string;
    readonly next: string;
    readonly remoteDir?: outputs.GetMigrationRemoteDir;
    readonly revisionsSchema?: string;
    readonly status: string;
    readonly url: string;
}
export function getMigrationOutput(args: GetMigrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMigrationResult> {
    return pulumi.output(args).apply((a: any) => getMigration(a, opts))
}

/**
 * A collection of arguments for invoking getMigration.
 */
export interface GetMigrationOutputArgs {
    cloud?: pulumi.Input<inputs.GetMigrationCloudArgs>;
    dir?: pulumi.Input<string>;
    remoteDir?: pulumi.Input<inputs.GetMigrationRemoteDirArgs>;
    revisionsSchema?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}
