// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetMigrationCloud {
    project?: string;
    token?: string;
    url?: string;
}

export interface GetMigrationCloudArgs {
    project?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface GetMigrationRemoteDir {
    /**
     * The name of the remote directory. This attribute is required when remote_dir is set
     */
    name?: string;
    /**
     * The tag of the remote directory
     */
    tag?: string;
}

export interface GetMigrationRemoteDirArgs {
    /**
     * The name of the remote directory. This attribute is required when remote_dir is set
     */
    name?: pulumi.Input<string>;
    /**
     * The tag of the remote directory
     */
    tag?: pulumi.Input<string>;
}

export interface MigrationCloud {
    project?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface MigrationRemoteDir {
    /**
     * The name of the remote directory. This attribute is required when remote_dir is set
     */
    name?: pulumi.Input<string>;
    /**
     * The tag of the remote directory
     */
    tag?: pulumi.Input<string>;
}

export interface MigrationStatus {
    current: pulumi.Input<string>;
    latest: pulumi.Input<string>;
    next: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface ProviderCloud {
    project?: pulumi.Input<string>;
    token?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface SchemaDiff {
    /**
     * The concurrent index policy
     */
    concurrentIndex?: pulumi.Input<inputs.SchemaDiffConcurrentIndex>;
    /**
     * The skip changes policy
     */
    skip?: pulumi.Input<inputs.SchemaDiffSkip>;
}

export interface SchemaDiffConcurrentIndex {
    /**
     * Whether to create indexes concurrently
     */
    create?: pulumi.Input<boolean>;
    /**
     * Whether to drop indexes concurrently
     */
    drop?: pulumi.Input<boolean>;
}

export interface SchemaDiffSkip {
    /**
     * Whether to skip adding columns
     */
    addColumn?: pulumi.Input<boolean>;
    /**
     * Whether to skip adding foreign keys
     */
    addForeignKey?: pulumi.Input<boolean>;
    /**
     * Whether to skip adding indexes
     */
    addIndex?: pulumi.Input<boolean>;
    /**
     * Whether to skip adding schemas
     */
    addSchema?: pulumi.Input<boolean>;
    /**
     * Whether to skip adding tables
     */
    addTable?: pulumi.Input<boolean>;
    /**
     * Whether to skip dropping columns
     */
    dropColumn?: pulumi.Input<boolean>;
    /**
     * Whether to skip dropping foreign keys
     */
    dropForeignKey?: pulumi.Input<boolean>;
    /**
     * Whether to skip dropping indexes
     */
    dropIndex?: pulumi.Input<boolean>;
    /**
     * Whether to skip dropping schemas
     */
    dropSchema?: pulumi.Input<boolean>;
    /**
     * Whether to skip dropping tables
     */
    dropTable?: pulumi.Input<boolean>;
    /**
     * Whether to skip modifying columns
     */
    modifyColumn?: pulumi.Input<boolean>;
    /**
     * Whether to skip modifying foreign keys
     */
    modifyForeignKey?: pulumi.Input<boolean>;
    /**
     * Whether to skip modifying indexes
     */
    modifyIndex?: pulumi.Input<boolean>;
    /**
     * Whether to skip modifying schemas
     */
    modifySchema?: pulumi.Input<boolean>;
    /**
     * Whether to skip modifying tables
     */
    modifyTable?: pulumi.Input<boolean>;
}
export namespace config {
}
