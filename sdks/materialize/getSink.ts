// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSink(args?: GetSinkArgs, opts?: pulumi.InvokeOptions): Promise<GetSinkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("materialize:index/getSink:getSink", {
        "databaseName": args.databaseName,
        "id": args.id,
        "region": args.region,
        "schemaName": args.schemaName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSink.
 */
export interface GetSinkArgs {
    databaseName?: string;
    id?: string;
    region?: string;
    schemaName?: string;
}

/**
 * A collection of values returned by getSink.
 */
export interface GetSinkResult {
    readonly databaseName?: string;
    readonly id: string;
    readonly region: string;
    readonly schemaName?: string;
    readonly sinks: outputs.GetSinkSink[];
}
export function getSinkOutput(args?: GetSinkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSinkResult> {
    return pulumi.output(args).apply((a: any) => getSink(a, opts))
}

/**
 * A collection of arguments for invoking getSink.
 */
export interface GetSinkOutputArgs {
    databaseName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    schemaName?: pulumi.Input<string>;
}
