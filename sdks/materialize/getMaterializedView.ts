// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMaterializedView(args?: GetMaterializedViewArgs, opts?: pulumi.InvokeOptions): Promise<GetMaterializedViewResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("materialize:index/getMaterializedView:getMaterializedView", {
        "databaseName": args.databaseName,
        "id": args.id,
        "region": args.region,
        "schemaName": args.schemaName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMaterializedView.
 */
export interface GetMaterializedViewArgs {
    databaseName?: string;
    id?: string;
    region?: string;
    schemaName?: string;
}

/**
 * A collection of values returned by getMaterializedView.
 */
export interface GetMaterializedViewResult {
    readonly databaseName?: string;
    readonly id: string;
    readonly materializedViews: outputs.GetMaterializedViewMaterializedView[];
    readonly region: string;
    readonly schemaName?: string;
}
export function getMaterializedViewOutput(args?: GetMaterializedViewOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMaterializedViewResult> {
    return pulumi.output(args).apply((a: any) => getMaterializedView(a, opts))
}

/**
 * A collection of arguments for invoking getMaterializedView.
 */
export interface GetMaterializedViewOutputArgs {
    databaseName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    schemaName?: pulumi.Input<string>;
}
