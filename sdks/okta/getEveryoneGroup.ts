// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEveryoneGroup(args?: GetEveryoneGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetEveryoneGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getEveryoneGroup:getEveryoneGroup", {
        "id": args.id,
        "includeUsers": args.includeUsers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEveryoneGroup.
 */
export interface GetEveryoneGroupArgs {
    id?: string;
    includeUsers?: boolean;
}

/**
 * A collection of values returned by getEveryoneGroup.
 */
export interface GetEveryoneGroupResult {
    readonly description: string;
    readonly id: string;
    readonly includeUsers?: boolean;
}
export function getEveryoneGroupOutput(args?: GetEveryoneGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEveryoneGroupResult> {
    return pulumi.output(args).apply((a: any) => getEveryoneGroup(a, opts))
}

/**
 * A collection of arguments for invoking getEveryoneGroup.
 */
export interface GetEveryoneGroupOutputArgs {
    id?: pulumi.Input<string>;
    includeUsers?: pulumi.Input<boolean>;
}
