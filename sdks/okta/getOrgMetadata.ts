// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOrgMetadata(args?: GetOrgMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetOrgMetadataResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getOrgMetadata:getOrgMetadata", {
        "domains": args.domains,
        "settings": args.settings,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOrgMetadata.
 */
export interface GetOrgMetadataArgs {
    domains?: inputs.GetOrgMetadataDomains;
    settings?: inputs.GetOrgMetadataSettings;
}

/**
 * A collection of values returned by getOrgMetadata.
 */
export interface GetOrgMetadataResult {
    readonly domains?: outputs.GetOrgMetadataDomains;
    readonly id: string;
    readonly pipeline: string;
    readonly settings?: outputs.GetOrgMetadataSettings;
}
export function getOrgMetadataOutput(args?: GetOrgMetadataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOrgMetadataResult> {
    return pulumi.output(args).apply((a: any) => getOrgMetadata(a, opts))
}

/**
 * A collection of arguments for invoking getOrgMetadata.
 */
export interface GetOrgMetadataOutputArgs {
    domains?: pulumi.Input<inputs.GetOrgMetadataDomainsArgs>;
    settings?: pulumi.Input<inputs.GetOrgMetadataSettingsArgs>;
}
