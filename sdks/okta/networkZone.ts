// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NetworkZone extends pulumi.CustomResource {
    /**
     * Get an existing NetworkZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkZoneState, opts?: pulumi.CustomResourceOptions): NetworkZone {
        return new NetworkZone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'okta:index/networkZone:NetworkZone';

    /**
     * Returns true if the given object is an instance of NetworkZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkZone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkZone.__pulumiType;
    }

    /**
     * List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type
     * `DYNAMIC` or `DYNAMIC_V2`
     */
    public readonly asns!: pulumi.Output<string[] | undefined>;
    /**
     * Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC`
     * or `DYNAMIC_V2`
     */
    public readonly dynamicLocations!: pulumi.Output<string[] | undefined>;
    /**
     * Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type
     * `DYNAMIC_V2`
     */
    public readonly dynamicLocationsExcludes!: pulumi.Output<string[] | undefined>;
    /**
     * Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or
     * `NotTorAnonymizer`. Use with type `DYNAMIC`
     */
    public readonly dynamicProxyType!: pulumi.Output<string | undefined>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please
     * check API docs for examples. Use with type `IP`
     */
    public readonly gateways!: pulumi.Output<string[] | undefined>;
    /**
     * List of ip service excluded. Use with type `DYNAMIC_V2`
     */
    public readonly ipServiceCategoriesExcludes!: pulumi.Output<string[] | undefined>;
    /**
     * List of ip service included. Use with type `DYNAMIC_V2`
     */
    public readonly ipServiceCategoriesIncludes!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the Network Zone Resource
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please
     * check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`
     */
    public readonly proxies!: pulumi.Output<string[] | undefined>;
    /**
     * Network Status - can either be `ACTIVE` or `INACTIVE` only
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`
     */
    public readonly usage!: pulumi.Output<string | undefined>;

    /**
     * Create a NetworkZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkZoneArgs | NetworkZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkZoneState | undefined;
            resourceInputs["asns"] = state ? state.asns : undefined;
            resourceInputs["dynamicLocations"] = state ? state.dynamicLocations : undefined;
            resourceInputs["dynamicLocationsExcludes"] = state ? state.dynamicLocationsExcludes : undefined;
            resourceInputs["dynamicProxyType"] = state ? state.dynamicProxyType : undefined;
            resourceInputs["gateways"] = state ? state.gateways : undefined;
            resourceInputs["ipServiceCategoriesExcludes"] = state ? state.ipServiceCategoriesExcludes : undefined;
            resourceInputs["ipServiceCategoriesIncludes"] = state ? state.ipServiceCategoriesIncludes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["proxies"] = state ? state.proxies : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["usage"] = state ? state.usage : undefined;
        } else {
            const args = argsOrState as NetworkZoneArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["asns"] = args ? args.asns : undefined;
            resourceInputs["dynamicLocations"] = args ? args.dynamicLocations : undefined;
            resourceInputs["dynamicLocationsExcludes"] = args ? args.dynamicLocationsExcludes : undefined;
            resourceInputs["dynamicProxyType"] = args ? args.dynamicProxyType : undefined;
            resourceInputs["gateways"] = args ? args.gateways : undefined;
            resourceInputs["ipServiceCategoriesExcludes"] = args ? args.ipServiceCategoriesExcludes : undefined;
            resourceInputs["ipServiceCategoriesIncludes"] = args ? args.ipServiceCategoriesIncludes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["proxies"] = args ? args.proxies : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["usage"] = args ? args.usage : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkZone.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkZone resources.
 */
export interface NetworkZoneState {
    /**
     * List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type
     * `DYNAMIC` or `DYNAMIC_V2`
     */
    asns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC`
     * or `DYNAMIC_V2`
     */
    dynamicLocations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type
     * `DYNAMIC_V2`
     */
    dynamicLocationsExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or
     * `NotTorAnonymizer`. Use with type `DYNAMIC`
     */
    dynamicProxyType?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please
     * check API docs for examples. Use with type `IP`
     */
    gateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ip service excluded. Use with type `DYNAMIC_V2`
     */
    ipServiceCategoriesExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ip service included. Use with type `DYNAMIC_V2`
     */
    ipServiceCategoriesIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Network Zone Resource
     */
    name?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please
     * check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`
     */
    proxies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network Status - can either be `ACTIVE` or `INACTIVE` only
     */
    status?: pulumi.Input<string>;
    /**
     * Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only
     */
    type?: pulumi.Input<string>;
    /**
     * Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`
     */
    usage?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkZone resource.
 */
export interface NetworkZoneArgs {
    /**
     * List of asns included. Format of each array value: a string representation of an ASN numeric value. Use with type
     * `DYNAMIC` or `DYNAMIC_V2`
     */
    asns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of locations ISO-3166-1(2) included. Format code: countryCode OR countryCode-regionCode. Use with type `DYNAMIC`
     * or `DYNAMIC_V2`
     */
    dynamicLocations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Array of locations ISO-3166-1(2) excluded. Format code: countryCode OR countryCode-regionCode. Use with type
     * `DYNAMIC_V2`
     */
    dynamicLocationsExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of proxy being controlled by this dynamic network zone - can be one of `Any`, `TorAnonymizer` or
     * `NotTorAnonymizer`. Use with type `DYNAMIC`
     */
    dynamicProxyType?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please
     * check API docs for examples. Use with type `IP`
     */
    gateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ip service excluded. Use with type `DYNAMIC_V2`
     */
    ipServiceCategoriesExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of ip service included. Use with type `DYNAMIC_V2`
     */
    ipServiceCategoriesIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Network Zone Resource
     */
    name?: pulumi.Input<string>;
    /**
     * Array of values in CIDR/range form depending on the way it's been declared (i.e. CIDR will contain /suffix). Please
     * check API docs for examples. Can not be set if `usage` is set to `BLOCKLIST`. Use with type `IP`
     */
    proxies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Network Status - can either be `ACTIVE` or `INACTIVE` only
     */
    status?: pulumi.Input<string>;
    /**
     * Type of the Network Zone - can be `IP`, `DYNAMIC` or `DYNAMIC_V2` only
     */
    type: pulumi.Input<string>;
    /**
     * Usage of the Network Zone - can be either `POLICY` or `BLOCKLIST`. By default, it is `POLICY`
     */
    usage?: pulumi.Input<string>;
}
