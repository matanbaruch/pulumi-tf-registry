// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGroup(args?: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getGroup:getGroup", {
        "delayReadSeconds": args.delayReadSeconds,
        "id": args.id,
        "includeUsers": args.includeUsers,
        "name": args.name,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    delayReadSeconds?: string;
    id?: string;
    includeUsers?: boolean;
    name?: string;
    type?: string;
}

/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    readonly delayReadSeconds?: string;
    readonly description: string;
    readonly id: string;
    readonly includeUsers?: boolean;
    readonly name: string;
    readonly type?: string;
    readonly users: string[];
}
export function getGroupOutput(args?: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    delayReadSeconds?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includeUsers?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
