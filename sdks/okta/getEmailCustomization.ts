// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEmailCustomization(args: GetEmailCustomizationArgs, opts?: pulumi.InvokeOptions): Promise<GetEmailCustomizationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getEmailCustomization:getEmailCustomization", {
        "brandId": args.brandId,
        "customizationId": args.customizationId,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmailCustomization.
 */
export interface GetEmailCustomizationArgs {
    brandId: string;
    customizationId: string;
    templateName: string;
}

/**
 * A collection of values returned by getEmailCustomization.
 */
export interface GetEmailCustomizationResult {
    readonly body: string;
    readonly brandId: string;
    readonly customizationId: string;
    readonly id: string;
    readonly isDefault: boolean;
    readonly language: string;
    readonly links: string;
    readonly subject: string;
    readonly templateName: string;
}
export function getEmailCustomizationOutput(args: GetEmailCustomizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmailCustomizationResult> {
    return pulumi.output(args).apply((a: any) => getEmailCustomization(a, opts))
}

/**
 * A collection of arguments for invoking getEmailCustomization.
 */
export interface GetEmailCustomizationOutputArgs {
    brandId: pulumi.Input<string>;
    customizationId: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
