// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUsers(args?: GetUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getUsers:getUsers", {
        "compoundSearchOperator": args.compoundSearchOperator,
        "delayReadSeconds": args.delayReadSeconds,
        "groupId": args.groupId,
        "id": args.id,
        "includeGroups": args.includeGroups,
        "includeRoles": args.includeRoles,
        "searches": args.searches,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersArgs {
    compoundSearchOperator?: string;
    delayReadSeconds?: string;
    groupId?: string;
    id?: string;
    includeGroups?: boolean;
    includeRoles?: boolean;
    searches?: inputs.GetUsersSearch[];
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    readonly compoundSearchOperator?: string;
    readonly delayReadSeconds?: string;
    readonly groupId?: string;
    readonly id: string;
    readonly includeGroups?: boolean;
    readonly includeRoles?: boolean;
    readonly searches?: outputs.GetUsersSearch[];
    readonly users: outputs.GetUsersUser[];
}
export function getUsersOutput(args?: GetUsersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersResult> {
    return pulumi.output(args).apply((a: any) => getUsers(a, opts))
}

/**
 * A collection of arguments for invoking getUsers.
 */
export interface GetUsersOutputArgs {
    compoundSearchOperator?: pulumi.Input<string>;
    delayReadSeconds?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includeGroups?: pulumi.Input<boolean>;
    includeRoles?: pulumi.Input<boolean>;
    searches?: pulumi.Input<pulumi.Input<inputs.GetUsersSearchArgs>[]>;
}
