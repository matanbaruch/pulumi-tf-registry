// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdpSaml(args?: GetIdpSamlArgs, opts?: pulumi.InvokeOptions): Promise<GetIdpSamlResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getIdpSaml:getIdpSaml", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdpSaml.
 */
export interface GetIdpSamlArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getIdpSaml.
 */
export interface GetIdpSamlResult {
    readonly acsBinding: string;
    readonly acsType: string;
    readonly audience: string;
    readonly id?: string;
    readonly issuer: string;
    readonly issuerMode: string;
    readonly kid: string;
    readonly name?: string;
    readonly ssoBinding: string;
    readonly ssoDestination: string;
    readonly ssoUrl: string;
    readonly subjectFilter: string;
    readonly subjectFormats: string[];
    readonly type: string;
}
export function getIdpSamlOutput(args?: GetIdpSamlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdpSamlResult> {
    return pulumi.output(args).apply((a: any) => getIdpSaml(a, opts))
}

/**
 * A collection of arguments for invoking getIdpSaml.
 */
export interface GetIdpSamlOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
