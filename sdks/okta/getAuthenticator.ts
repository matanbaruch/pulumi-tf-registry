// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAuthenticator(args?: GetAuthenticatorArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticatorResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getAuthenticator:getAuthenticator", {
        "id": args.id,
        "key": args.key,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthenticator.
 */
export interface GetAuthenticatorArgs {
    id?: string;
    key?: string;
    name?: string;
}

/**
 * A collection of values returned by getAuthenticator.
 */
export interface GetAuthenticatorResult {
    readonly id?: string;
    readonly key?: string;
    readonly name?: string;
    readonly providerAuthPort: number;
    readonly providerHostname: string;
    readonly providerInstanceId: string;
    readonly providerJson: string;
    readonly providerType: string;
    readonly providerUserNameTemplate: string;
    readonly settings: string;
    readonly status: string;
    readonly type: string;
}
export function getAuthenticatorOutput(args?: GetAuthenticatorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthenticatorResult> {
    return pulumi.output(args).apply((a: any) => getAuthenticator(a, opts))
}

/**
 * A collection of arguments for invoking getAuthenticator.
 */
export interface GetAuthenticatorOutputArgs {
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
