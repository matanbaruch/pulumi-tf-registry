// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkZone(args?: GetNetworkZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkZoneResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getNetworkZone:getNetworkZone", {
        "dynamicLocationsExcludes": args.dynamicLocationsExcludes,
        "id": args.id,
        "ipServiceCategoriesExcludes": args.ipServiceCategoriesExcludes,
        "ipServiceCategoriesIncludes": args.ipServiceCategoriesIncludes,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkZone.
 */
export interface GetNetworkZoneArgs {
    dynamicLocationsExcludes?: string[];
    id?: string;
    ipServiceCategoriesExcludes?: string[];
    ipServiceCategoriesIncludes?: string[];
    name?: string;
}

/**
 * A collection of values returned by getNetworkZone.
 */
export interface GetNetworkZoneResult {
    readonly asns: string[];
    readonly dynamicLocations: string[];
    readonly dynamicLocationsExcludes?: string[];
    readonly dynamicProxyType: string;
    readonly gateways: string[];
    readonly id?: string;
    readonly ipServiceCategoriesExcludes?: string[];
    readonly ipServiceCategoriesIncludes?: string[];
    readonly name?: string;
    readonly proxies: string[];
    readonly status: string;
    readonly type: string;
    readonly usage: string;
}
export function getNetworkZoneOutput(args?: GetNetworkZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkZoneResult> {
    return pulumi.output(args).apply((a: any) => getNetworkZone(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkZone.
 */
export interface GetNetworkZoneOutputArgs {
    dynamicLocationsExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    ipServiceCategoriesExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    ipServiceCategoriesIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
}
