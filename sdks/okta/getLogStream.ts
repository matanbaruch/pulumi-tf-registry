// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogStream(args?: GetLogStreamArgs, opts?: pulumi.InvokeOptions): Promise<GetLogStreamResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getLogStream:getLogStream", {
        "id": args.id,
        "name": args.name,
        "settings": args.settings,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogStream.
 */
export interface GetLogStreamArgs {
    id?: string;
    name?: string;
    settings?: inputs.GetLogStreamSettings;
}

/**
 * A collection of values returned by getLogStream.
 */
export interface GetLogStreamResult {
    readonly id?: string;
    readonly name?: string;
    readonly settings?: outputs.GetLogStreamSettings;
    readonly status: string;
    readonly type: string;
}
export function getLogStreamOutput(args?: GetLogStreamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogStreamResult> {
    return pulumi.output(args).apply((a: any) => getLogStream(a, opts))
}

/**
 * A collection of arguments for invoking getLogStream.
 */
export interface GetLogStreamOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.GetLogStreamSettingsArgs>;
}
