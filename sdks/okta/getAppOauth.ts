// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAppOauth(args?: GetAppOauthArgs, opts?: pulumi.InvokeOptions): Promise<GetAppOauthResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getAppOauth:getAppOauth", {
        "activeOnly": args.activeOnly,
        "id": args.id,
        "label": args.label,
        "labelPrefix": args.labelPrefix,
        "skipGroups": args.skipGroups,
        "skipUsers": args.skipUsers,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppOauth.
 */
export interface GetAppOauthArgs {
    activeOnly?: boolean;
    id?: string;
    label?: string;
    labelPrefix?: string;
    /**
     * @deprecated Deprecated
     */
    skipGroups?: boolean;
    /**
     * @deprecated Deprecated
     */
    skipUsers?: boolean;
}

/**
 * A collection of values returned by getAppOauth.
 */
export interface GetAppOauthResult {
    readonly activeOnly?: boolean;
    readonly autoSubmitToolbar: boolean;
    readonly clientId: string;
    readonly clientSecret: string;
    readonly clientUri: string;
    readonly grantTypes: string[];
    readonly hideIos: boolean;
    readonly hideWeb: boolean;
    readonly id?: string;
    readonly label?: string;
    readonly labelPrefix?: string;
    readonly links: string;
    readonly loginMode: string;
    readonly loginScopes: string[];
    readonly loginUri: string;
    readonly logoUri: string;
    readonly name: string;
    readonly policyUri: string;
    readonly postLogoutRedirectUris: string[];
    readonly redirectUris: string[];
    readonly responseTypes: string[];
    /**
     * @deprecated Deprecated
     */
    readonly skipGroups?: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly skipUsers?: boolean;
    readonly status: string;
    readonly type: string;
    readonly wildcardRedirect: string;
}
export function getAppOauthOutput(args?: GetAppOauthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppOauthResult> {
    return pulumi.output(args).apply((a: any) => getAppOauth(a, opts))
}

/**
 * A collection of arguments for invoking getAppOauth.
 */
export interface GetAppOauthOutputArgs {
    activeOnly?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    labelPrefix?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    skipGroups?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    skipUsers?: pulumi.Input<boolean>;
}
