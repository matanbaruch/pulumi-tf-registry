// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEmailCustomizations(args: GetEmailCustomizationsArgs, opts?: pulumi.InvokeOptions): Promise<GetEmailCustomizationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getEmailCustomizations:getEmailCustomizations", {
        "brandId": args.brandId,
        "id": args.id,
        "templateName": args.templateName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEmailCustomizations.
 */
export interface GetEmailCustomizationsArgs {
    brandId: string;
    id?: string;
    templateName: string;
}

/**
 * A collection of values returned by getEmailCustomizations.
 */
export interface GetEmailCustomizationsResult {
    readonly brandId: string;
    readonly emailCustomizations: outputs.GetEmailCustomizationsEmailCustomization[];
    readonly id: string;
    readonly templateName: string;
}
export function getEmailCustomizationsOutput(args: GetEmailCustomizationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmailCustomizationsResult> {
    return pulumi.output(args).apply((a: any) => getEmailCustomizations(a, opts))
}

/**
 * A collection of arguments for invoking getEmailCustomizations.
 */
export interface GetEmailCustomizationsOutputArgs {
    brandId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
}
