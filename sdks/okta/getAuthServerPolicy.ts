// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAuthServerPolicy(args: GetAuthServerPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthServerPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("okta:index/getAuthServerPolicy:getAuthServerPolicy", {
        "authServerId": args.authServerId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthServerPolicy.
 */
export interface GetAuthServerPolicyArgs {
    authServerId: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getAuthServerPolicy.
 */
export interface GetAuthServerPolicyResult {
    readonly assignedClients: string[];
    readonly authServerId: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly priority: number;
}
export function getAuthServerPolicyOutput(args: GetAuthServerPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthServerPolicyResult> {
    return pulumi.output(args).apply((a: any) => getAuthServerPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAuthServerPolicy.
 */
export interface GetAuthServerPolicyOutputArgs {
    authServerId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
