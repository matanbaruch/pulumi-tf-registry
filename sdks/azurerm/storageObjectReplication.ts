// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StorageObjectReplication extends pulumi.CustomResource {
    /**
     * Get an existing StorageObjectReplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageObjectReplicationState, opts?: pulumi.CustomResourceOptions): StorageObjectReplication {
        return new StorageObjectReplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/storageObjectReplication:StorageObjectReplication';

    /**
     * Returns true if the given object is an instance of StorageObjectReplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageObjectReplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageObjectReplication.__pulumiType;
    }

    public /*out*/ readonly destinationObjectReplicationId!: pulumi.Output<string>;
    public readonly destinationStorageAccountId!: pulumi.Output<string>;
    public readonly rules!: pulumi.Output<outputs.StorageObjectReplicationRule[]>;
    public /*out*/ readonly sourceObjectReplicationId!: pulumi.Output<string>;
    public readonly sourceStorageAccountId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.StorageObjectReplicationTimeouts | undefined>;

    /**
     * Create a StorageObjectReplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageObjectReplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageObjectReplicationArgs | StorageObjectReplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageObjectReplicationState | undefined;
            resourceInputs["destinationObjectReplicationId"] = state ? state.destinationObjectReplicationId : undefined;
            resourceInputs["destinationStorageAccountId"] = state ? state.destinationStorageAccountId : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["sourceObjectReplicationId"] = state ? state.sourceObjectReplicationId : undefined;
            resourceInputs["sourceStorageAccountId"] = state ? state.sourceStorageAccountId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as StorageObjectReplicationArgs | undefined;
            if ((!args || args.destinationStorageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationStorageAccountId'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            if ((!args || args.sourceStorageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceStorageAccountId'");
            }
            resourceInputs["destinationStorageAccountId"] = args ? args.destinationStorageAccountId : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["sourceStorageAccountId"] = args ? args.sourceStorageAccountId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["destinationObjectReplicationId"] = undefined /*out*/;
            resourceInputs["sourceObjectReplicationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageObjectReplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageObjectReplication resources.
 */
export interface StorageObjectReplicationState {
    destinationObjectReplicationId?: pulumi.Input<string>;
    destinationStorageAccountId?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.StorageObjectReplicationRule>[]>;
    sourceObjectReplicationId?: pulumi.Input<string>;
    sourceStorageAccountId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageObjectReplicationTimeouts>;
}

/**
 * The set of arguments for constructing a StorageObjectReplication resource.
 */
export interface StorageObjectReplicationArgs {
    destinationStorageAccountId: pulumi.Input<string>;
    rules: pulumi.Input<pulumi.Input<inputs.StorageObjectReplicationRule>[]>;
    sourceStorageAccountId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageObjectReplicationTimeouts>;
}
