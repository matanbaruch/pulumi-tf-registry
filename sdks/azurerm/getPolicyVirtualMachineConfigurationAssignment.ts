// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPolicyVirtualMachineConfigurationAssignment(args: GetPolicyVirtualMachineConfigurationAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyVirtualMachineConfigurationAssignmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getPolicyVirtualMachineConfigurationAssignment:getPolicyVirtualMachineConfigurationAssignment", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
        "virtualMachineName": args.virtualMachineName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPolicyVirtualMachineConfigurationAssignment.
 */
export interface GetPolicyVirtualMachineConfigurationAssignmentArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetPolicyVirtualMachineConfigurationAssignmentTimeouts;
    virtualMachineName: string;
}

/**
 * A collection of values returned by getPolicyVirtualMachineConfigurationAssignment.
 */
export interface GetPolicyVirtualMachineConfigurationAssignmentResult {
    readonly assignmentHash: string;
    readonly complianceStatus: string;
    readonly contentHash: string;
    readonly contentUri: string;
    readonly id: string;
    readonly lastComplianceStatusChecked: string;
    readonly latestReportId: string;
    readonly name: string;
    readonly resourceGroupName: string;
    readonly timeouts?: outputs.GetPolicyVirtualMachineConfigurationAssignmentTimeouts;
    readonly virtualMachineName: string;
}
export function getPolicyVirtualMachineConfigurationAssignmentOutput(args: GetPolicyVirtualMachineConfigurationAssignmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyVirtualMachineConfigurationAssignmentResult> {
    return pulumi.output(args).apply((a: any) => getPolicyVirtualMachineConfigurationAssignment(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyVirtualMachineConfigurationAssignment.
 */
export interface GetPolicyVirtualMachineConfigurationAssignmentOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetPolicyVirtualMachineConfigurationAssignmentTimeoutsArgs>;
    virtualMachineName: pulumi.Input<string>;
}
