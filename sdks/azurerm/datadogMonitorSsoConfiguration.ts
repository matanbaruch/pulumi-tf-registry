// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatadogMonitorSsoConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing DatadogMonitorSsoConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatadogMonitorSsoConfigurationState, opts?: pulumi.CustomResourceOptions): DatadogMonitorSsoConfiguration {
        return new DatadogMonitorSsoConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/datadogMonitorSsoConfiguration:DatadogMonitorSsoConfiguration';

    /**
     * Returns true if the given object is an instance of DatadogMonitorSsoConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatadogMonitorSsoConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatadogMonitorSsoConfiguration.__pulumiType;
    }

    public readonly datadogMonitorId!: pulumi.Output<string>;
    public readonly enterpriseApplicationId!: pulumi.Output<string>;
    public /*out*/ readonly loginUrl!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly singleSignOnEnabled!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DatadogMonitorSsoConfigurationTimeouts | undefined>;

    /**
     * Create a DatadogMonitorSsoConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatadogMonitorSsoConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatadogMonitorSsoConfigurationArgs | DatadogMonitorSsoConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatadogMonitorSsoConfigurationState | undefined;
            resourceInputs["datadogMonitorId"] = state ? state.datadogMonitorId : undefined;
            resourceInputs["enterpriseApplicationId"] = state ? state.enterpriseApplicationId : undefined;
            resourceInputs["loginUrl"] = state ? state.loginUrl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["singleSignOnEnabled"] = state ? state.singleSignOnEnabled : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DatadogMonitorSsoConfigurationArgs | undefined;
            if ((!args || args.datadogMonitorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datadogMonitorId'");
            }
            if ((!args || args.enterpriseApplicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enterpriseApplicationId'");
            }
            if ((!args || args.singleSignOnEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'singleSignOnEnabled'");
            }
            resourceInputs["datadogMonitorId"] = args ? args.datadogMonitorId : undefined;
            resourceInputs["enterpriseApplicationId"] = args ? args.enterpriseApplicationId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["singleSignOnEnabled"] = args ? args.singleSignOnEnabled : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["loginUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatadogMonitorSsoConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatadogMonitorSsoConfiguration resources.
 */
export interface DatadogMonitorSsoConfigurationState {
    datadogMonitorId?: pulumi.Input<string>;
    enterpriseApplicationId?: pulumi.Input<string>;
    loginUrl?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    singleSignOnEnabled?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatadogMonitorSsoConfigurationTimeouts>;
}

/**
 * The set of arguments for constructing a DatadogMonitorSsoConfiguration resource.
 */
export interface DatadogMonitorSsoConfigurationArgs {
    datadogMonitorId: pulumi.Input<string>;
    enterpriseApplicationId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    singleSignOnEnabled: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DatadogMonitorSsoConfigurationTimeouts>;
}
