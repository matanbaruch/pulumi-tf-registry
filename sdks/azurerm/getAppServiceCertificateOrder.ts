// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAppServiceCertificateOrder(args: GetAppServiceCertificateOrderArgs, opts?: pulumi.InvokeOptions): Promise<GetAppServiceCertificateOrderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getAppServiceCertificateOrder:getAppServiceCertificateOrder", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppServiceCertificateOrder.
 */
export interface GetAppServiceCertificateOrderArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetAppServiceCertificateOrderTimeouts;
}

/**
 * A collection of values returned by getAppServiceCertificateOrder.
 */
export interface GetAppServiceCertificateOrderResult {
    readonly appServiceCertificateNotRenewableReasons: string[];
    readonly autoRenew: boolean;
    readonly certificates: outputs.GetAppServiceCertificateOrderCertificate[];
    readonly csr: string;
    readonly distinguishedName: string;
    readonly domainVerificationToken: string;
    readonly expirationTime: string;
    readonly id: string;
    readonly intermediateThumbprint: string;
    readonly isPrivateKeyExternal: boolean;
    readonly keySize: number;
    readonly location: string;
    readonly name: string;
    readonly productType: string;
    readonly resourceGroupName: string;
    readonly rootThumbprint: string;
    readonly signedCertificateThumbprint: string;
    readonly status: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetAppServiceCertificateOrderTimeouts;
    readonly validityInYears: number;
}
export function getAppServiceCertificateOrderOutput(args: GetAppServiceCertificateOrderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppServiceCertificateOrderResult> {
    return pulumi.output(args).apply((a: any) => getAppServiceCertificateOrder(a, opts))
}

/**
 * A collection of arguments for invoking getAppServiceCertificateOrder.
 */
export interface GetAppServiceCertificateOrderOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetAppServiceCertificateOrderTimeoutsArgs>;
}
