// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StorageMoverJobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing StorageMoverJobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageMoverJobDefinitionState, opts?: pulumi.CustomResourceOptions): StorageMoverJobDefinition {
        return new StorageMoverJobDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/storageMoverJobDefinition:StorageMoverJobDefinition';

    /**
     * Returns true if the given object is an instance of StorageMoverJobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageMoverJobDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageMoverJobDefinition.__pulumiType;
    }

    public readonly agentName!: pulumi.Output<string | undefined>;
    public readonly copyMode!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly sourceName!: pulumi.Output<string>;
    public readonly sourceSubPath!: pulumi.Output<string | undefined>;
    public readonly storageMoverProjectId!: pulumi.Output<string>;
    public readonly targetName!: pulumi.Output<string>;
    public readonly targetSubPath!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.StorageMoverJobDefinitionTimeouts | undefined>;

    /**
     * Create a StorageMoverJobDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageMoverJobDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageMoverJobDefinitionArgs | StorageMoverJobDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageMoverJobDefinitionState | undefined;
            resourceInputs["agentName"] = state ? state.agentName : undefined;
            resourceInputs["copyMode"] = state ? state.copyMode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sourceName"] = state ? state.sourceName : undefined;
            resourceInputs["sourceSubPath"] = state ? state.sourceSubPath : undefined;
            resourceInputs["storageMoverProjectId"] = state ? state.storageMoverProjectId : undefined;
            resourceInputs["targetName"] = state ? state.targetName : undefined;
            resourceInputs["targetSubPath"] = state ? state.targetSubPath : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as StorageMoverJobDefinitionArgs | undefined;
            if ((!args || args.copyMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'copyMode'");
            }
            if ((!args || args.sourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceName'");
            }
            if ((!args || args.storageMoverProjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageMoverProjectId'");
            }
            if ((!args || args.targetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetName'");
            }
            resourceInputs["agentName"] = args ? args.agentName : undefined;
            resourceInputs["copyMode"] = args ? args.copyMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sourceName"] = args ? args.sourceName : undefined;
            resourceInputs["sourceSubPath"] = args ? args.sourceSubPath : undefined;
            resourceInputs["storageMoverProjectId"] = args ? args.storageMoverProjectId : undefined;
            resourceInputs["targetName"] = args ? args.targetName : undefined;
            resourceInputs["targetSubPath"] = args ? args.targetSubPath : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageMoverJobDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageMoverJobDefinition resources.
 */
export interface StorageMoverJobDefinitionState {
    agentName?: pulumi.Input<string>;
    copyMode?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sourceName?: pulumi.Input<string>;
    sourceSubPath?: pulumi.Input<string>;
    storageMoverProjectId?: pulumi.Input<string>;
    targetName?: pulumi.Input<string>;
    targetSubPath?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageMoverJobDefinitionTimeouts>;
}

/**
 * The set of arguments for constructing a StorageMoverJobDefinition resource.
 */
export interface StorageMoverJobDefinitionArgs {
    agentName?: pulumi.Input<string>;
    copyMode: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sourceName: pulumi.Input<string>;
    sourceSubPath?: pulumi.Input<string>;
    storageMoverProjectId: pulumi.Input<string>;
    targetName: pulumi.Input<string>;
    targetSubPath?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageMoverJobDefinitionTimeouts>;
}
