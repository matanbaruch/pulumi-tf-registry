// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageManagementPolicy(args: GetStorageManagementPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageManagementPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getStorageManagementPolicy:getStorageManagementPolicy", {
        "id": args.id,
        "storageAccountId": args.storageAccountId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageManagementPolicy.
 */
export interface GetStorageManagementPolicyArgs {
    id?: string;
    storageAccountId: string;
    timeouts?: inputs.GetStorageManagementPolicyTimeouts;
}

/**
 * A collection of values returned by getStorageManagementPolicy.
 */
export interface GetStorageManagementPolicyResult {
    readonly id: string;
    readonly rules: outputs.GetStorageManagementPolicyRule[];
    readonly storageAccountId: string;
    readonly timeouts?: outputs.GetStorageManagementPolicyTimeouts;
}
export function getStorageManagementPolicyOutput(args: GetStorageManagementPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageManagementPolicyResult> {
    return pulumi.output(args).apply((a: any) => getStorageManagementPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getStorageManagementPolicy.
 */
export interface GetStorageManagementPolicyOutputArgs {
    id?: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetStorageManagementPolicyTimeoutsArgs>;
}
