// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeyVaultCertificates(args: GetKeyVaultCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyVaultCertificatesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getKeyVaultCertificates:getKeyVaultCertificates", {
        "id": args.id,
        "includePending": args.includePending,
        "keyVaultId": args.keyVaultId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeyVaultCertificates.
 */
export interface GetKeyVaultCertificatesArgs {
    id?: string;
    includePending?: boolean;
    keyVaultId: string;
    timeouts?: inputs.GetKeyVaultCertificatesTimeouts;
}

/**
 * A collection of values returned by getKeyVaultCertificates.
 */
export interface GetKeyVaultCertificatesResult {
    readonly certificates: outputs.GetKeyVaultCertificatesCertificate[];
    readonly id: string;
    readonly includePending?: boolean;
    readonly keyVaultId: string;
    readonly names: string[];
    readonly timeouts?: outputs.GetKeyVaultCertificatesTimeouts;
}
export function getKeyVaultCertificatesOutput(args: GetKeyVaultCertificatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyVaultCertificatesResult> {
    return pulumi.output(args).apply((a: any) => getKeyVaultCertificates(a, opts))
}

/**
 * A collection of arguments for invoking getKeyVaultCertificates.
 */
export interface GetKeyVaultCertificatesOutputArgs {
    id?: pulumi.Input<string>;
    includePending?: pulumi.Input<boolean>;
    keyVaultId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetKeyVaultCertificatesTimeoutsArgs>;
}
