// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageTable(args: GetStorageTableArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageTableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getStorageTable:getStorageTable", {
        "name": args.name,
        "storageAccountName": args.storageAccountName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageTable.
 */
export interface GetStorageTableArgs {
    name: string;
    storageAccountName: string;
    timeouts?: inputs.GetStorageTableTimeouts;
}

/**
 * A collection of values returned by getStorageTable.
 */
export interface GetStorageTableResult {
    readonly acls: outputs.GetStorageTableAcl[];
    readonly id: string;
    readonly name: string;
    readonly resourceManagerId: string;
    readonly storageAccountName: string;
    readonly timeouts?: outputs.GetStorageTableTimeouts;
}
export function getStorageTableOutput(args: GetStorageTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageTableResult> {
    return pulumi.output(args).apply((a: any) => getStorageTable(a, opts))
}

/**
 * A collection of arguments for invoking getStorageTable.
 */
export interface GetStorageTableOutputArgs {
    name: pulumi.Input<string>;
    storageAccountName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetStorageTableTimeoutsArgs>;
}
