// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AutomationSourceControl extends pulumi.CustomResource {
    /**
     * Get an existing AutomationSourceControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutomationSourceControlState, opts?: pulumi.CustomResourceOptions): AutomationSourceControl {
        return new AutomationSourceControl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/automationSourceControl:AutomationSourceControl';

    /**
     * Returns true if the given object is an instance of AutomationSourceControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomationSourceControl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomationSourceControl.__pulumiType;
    }

    public readonly automaticSync!: pulumi.Output<boolean | undefined>;
    public readonly automationAccountId!: pulumi.Output<string>;
    public readonly branch!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly folderPath!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly publishRunbookEnabled!: pulumi.Output<boolean | undefined>;
    public readonly repositoryUrl!: pulumi.Output<string>;
    public readonly security!: pulumi.Output<outputs.AutomationSourceControlSecurity>;
    public readonly sourceControlType!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AutomationSourceControlTimeouts | undefined>;

    /**
     * Create a AutomationSourceControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationSourceControlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutomationSourceControlArgs | AutomationSourceControlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutomationSourceControlState | undefined;
            resourceInputs["automaticSync"] = state ? state.automaticSync : undefined;
            resourceInputs["automationAccountId"] = state ? state.automationAccountId : undefined;
            resourceInputs["branch"] = state ? state.branch : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["folderPath"] = state ? state.folderPath : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publishRunbookEnabled"] = state ? state.publishRunbookEnabled : undefined;
            resourceInputs["repositoryUrl"] = state ? state.repositoryUrl : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["sourceControlType"] = state ? state.sourceControlType : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AutomationSourceControlArgs | undefined;
            if ((!args || args.automationAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountId'");
            }
            if ((!args || args.folderPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'folderPath'");
            }
            if ((!args || args.repositoryUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryUrl'");
            }
            if ((!args || args.security === undefined) && !opts.urn) {
                throw new Error("Missing required property 'security'");
            }
            if ((!args || args.sourceControlType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceControlType'");
            }
            resourceInputs["automaticSync"] = args ? args.automaticSync : undefined;
            resourceInputs["automationAccountId"] = args ? args.automationAccountId : undefined;
            resourceInputs["branch"] = args ? args.branch : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["folderPath"] = args ? args.folderPath : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publishRunbookEnabled"] = args ? args.publishRunbookEnabled : undefined;
            resourceInputs["repositoryUrl"] = args ? args.repositoryUrl : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["sourceControlType"] = args ? args.sourceControlType : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutomationSourceControl.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutomationSourceControl resources.
 */
export interface AutomationSourceControlState {
    automaticSync?: pulumi.Input<boolean>;
    automationAccountId?: pulumi.Input<string>;
    branch?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    folderPath?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    publishRunbookEnabled?: pulumi.Input<boolean>;
    repositoryUrl?: pulumi.Input<string>;
    security?: pulumi.Input<inputs.AutomationSourceControlSecurity>;
    sourceControlType?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AutomationSourceControlTimeouts>;
}

/**
 * The set of arguments for constructing a AutomationSourceControl resource.
 */
export interface AutomationSourceControlArgs {
    automaticSync?: pulumi.Input<boolean>;
    automationAccountId: pulumi.Input<string>;
    branch?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    folderPath: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    publishRunbookEnabled?: pulumi.Input<boolean>;
    repositoryUrl: pulumi.Input<string>;
    security: pulumi.Input<inputs.AutomationSourceControlSecurity>;
    sourceControlType: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AutomationSourceControlTimeouts>;
}
