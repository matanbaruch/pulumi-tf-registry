// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MachineLearningWorkspace extends pulumi.CustomResource {
    /**
     * Get an existing MachineLearningWorkspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MachineLearningWorkspaceState, opts?: pulumi.CustomResourceOptions): MachineLearningWorkspace {
        return new MachineLearningWorkspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/machineLearningWorkspace:MachineLearningWorkspace';

    /**
     * Returns true if the given object is an instance of MachineLearningWorkspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineLearningWorkspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineLearningWorkspace.__pulumiType;
    }

    public readonly applicationInsightsId!: pulumi.Output<string>;
    public readonly containerRegistryId!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly discoveryUrl!: pulumi.Output<string>;
    public readonly encryption!: pulumi.Output<outputs.MachineLearningWorkspaceEncryption | undefined>;
    public readonly featureStore!: pulumi.Output<outputs.MachineLearningWorkspaceFeatureStore | undefined>;
    public readonly friendlyName!: pulumi.Output<string | undefined>;
    public readonly highBusinessImpact!: pulumi.Output<boolean | undefined>;
    public readonly identity!: pulumi.Output<outputs.MachineLearningWorkspaceIdentity>;
    public readonly imageBuildComputeName!: pulumi.Output<string | undefined>;
    public readonly keyVaultId!: pulumi.Output<string>;
    public readonly kind!: pulumi.Output<string | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly managedNetwork!: pulumi.Output<outputs.MachineLearningWorkspaceManagedNetwork | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly primaryUserAssignedIdentity!: pulumi.Output<string | undefined>;
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly serverlessCompute!: pulumi.Output<outputs.MachineLearningWorkspaceServerlessCompute | undefined>;
    public readonly skuName!: pulumi.Output<string | undefined>;
    public readonly storageAccountId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.MachineLearningWorkspaceTimeouts | undefined>;
    public readonly v1LegacyModeEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a MachineLearningWorkspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineLearningWorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MachineLearningWorkspaceArgs | MachineLearningWorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MachineLearningWorkspaceState | undefined;
            resourceInputs["applicationInsightsId"] = state ? state.applicationInsightsId : undefined;
            resourceInputs["containerRegistryId"] = state ? state.containerRegistryId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["discoveryUrl"] = state ? state.discoveryUrl : undefined;
            resourceInputs["encryption"] = state ? state.encryption : undefined;
            resourceInputs["featureStore"] = state ? state.featureStore : undefined;
            resourceInputs["friendlyName"] = state ? state.friendlyName : undefined;
            resourceInputs["highBusinessImpact"] = state ? state.highBusinessImpact : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["imageBuildComputeName"] = state ? state.imageBuildComputeName : undefined;
            resourceInputs["keyVaultId"] = state ? state.keyVaultId : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["managedNetwork"] = state ? state.managedNetwork : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primaryUserAssignedIdentity"] = state ? state.primaryUserAssignedIdentity : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["serverlessCompute"] = state ? state.serverlessCompute : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["storageAccountId"] = state ? state.storageAccountId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["v1LegacyModeEnabled"] = state ? state.v1LegacyModeEnabled : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as MachineLearningWorkspaceArgs | undefined;
            if ((!args || args.applicationInsightsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationInsightsId'");
            }
            if ((!args || args.identity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            if ((!args || args.keyVaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyVaultId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.storageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountId'");
            }
            resourceInputs["applicationInsightsId"] = args ? args.applicationInsightsId : undefined;
            resourceInputs["containerRegistryId"] = args ? args.containerRegistryId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["featureStore"] = args ? args.featureStore : undefined;
            resourceInputs["friendlyName"] = args ? args.friendlyName : undefined;
            resourceInputs["highBusinessImpact"] = args ? args.highBusinessImpact : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["imageBuildComputeName"] = args ? args.imageBuildComputeName : undefined;
            resourceInputs["keyVaultId"] = args ? args.keyVaultId : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["managedNetwork"] = args ? args.managedNetwork : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primaryUserAssignedIdentity"] = args ? args.primaryUserAssignedIdentity : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["serverlessCompute"] = args ? args.serverlessCompute : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["storageAccountId"] = args ? args.storageAccountId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["v1LegacyModeEnabled"] = args ? args.v1LegacyModeEnabled : undefined;
            resourceInputs["discoveryUrl"] = undefined /*out*/;
            resourceInputs["workspaceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MachineLearningWorkspace.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MachineLearningWorkspace resources.
 */
export interface MachineLearningWorkspaceState {
    applicationInsightsId?: pulumi.Input<string>;
    containerRegistryId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    discoveryUrl?: pulumi.Input<string>;
    encryption?: pulumi.Input<inputs.MachineLearningWorkspaceEncryption>;
    featureStore?: pulumi.Input<inputs.MachineLearningWorkspaceFeatureStore>;
    friendlyName?: pulumi.Input<string>;
    highBusinessImpact?: pulumi.Input<boolean>;
    identity?: pulumi.Input<inputs.MachineLearningWorkspaceIdentity>;
    imageBuildComputeName?: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    managedNetwork?: pulumi.Input<inputs.MachineLearningWorkspaceManagedNetwork>;
    name?: pulumi.Input<string>;
    primaryUserAssignedIdentity?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    resourceGroupName?: pulumi.Input<string>;
    serverlessCompute?: pulumi.Input<inputs.MachineLearningWorkspaceServerlessCompute>;
    skuName?: pulumi.Input<string>;
    storageAccountId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.MachineLearningWorkspaceTimeouts>;
    v1LegacyModeEnabled?: pulumi.Input<boolean>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MachineLearningWorkspace resource.
 */
export interface MachineLearningWorkspaceArgs {
    applicationInsightsId: pulumi.Input<string>;
    containerRegistryId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    encryption?: pulumi.Input<inputs.MachineLearningWorkspaceEncryption>;
    featureStore?: pulumi.Input<inputs.MachineLearningWorkspaceFeatureStore>;
    friendlyName?: pulumi.Input<string>;
    highBusinessImpact?: pulumi.Input<boolean>;
    identity: pulumi.Input<inputs.MachineLearningWorkspaceIdentity>;
    imageBuildComputeName?: pulumi.Input<string>;
    keyVaultId: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    managedNetwork?: pulumi.Input<inputs.MachineLearningWorkspaceManagedNetwork>;
    name?: pulumi.Input<string>;
    primaryUserAssignedIdentity?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    resourceGroupName: pulumi.Input<string>;
    serverlessCompute?: pulumi.Input<inputs.MachineLearningWorkspaceServerlessCompute>;
    skuName?: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.MachineLearningWorkspaceTimeouts>;
    v1LegacyModeEnabled?: pulumi.Input<boolean>;
}
