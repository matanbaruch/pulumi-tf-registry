// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CdnFrontdoorFirewallPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CdnFrontdoorFirewallPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdnFrontdoorFirewallPolicyState, opts?: pulumi.CustomResourceOptions): CdnFrontdoorFirewallPolicy {
        return new CdnFrontdoorFirewallPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/cdnFrontdoorFirewallPolicy:CdnFrontdoorFirewallPolicy';

    /**
     * Returns true if the given object is an instance of CdnFrontdoorFirewallPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdnFrontdoorFirewallPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdnFrontdoorFirewallPolicy.__pulumiType;
    }

    public readonly customBlockResponseBody!: pulumi.Output<string | undefined>;
    public readonly customBlockResponseStatusCode!: pulumi.Output<number | undefined>;
    public readonly customRules!: pulumi.Output<outputs.CdnFrontdoorFirewallPolicyCustomRule[] | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly frontendEndpointIds!: pulumi.Output<string[]>;
    public readonly managedRules!: pulumi.Output<outputs.CdnFrontdoorFirewallPolicyManagedRule[] | undefined>;
    public readonly mode!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly redirectUrl!: pulumi.Output<string | undefined>;
    public readonly requestBodyCheckEnabled!: pulumi.Output<boolean | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly skuName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.CdnFrontdoorFirewallPolicyTimeouts | undefined>;

    /**
     * Create a CdnFrontdoorFirewallPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdnFrontdoorFirewallPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdnFrontdoorFirewallPolicyArgs | CdnFrontdoorFirewallPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdnFrontdoorFirewallPolicyState | undefined;
            resourceInputs["customBlockResponseBody"] = state ? state.customBlockResponseBody : undefined;
            resourceInputs["customBlockResponseStatusCode"] = state ? state.customBlockResponseStatusCode : undefined;
            resourceInputs["customRules"] = state ? state.customRules : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["frontendEndpointIds"] = state ? state.frontendEndpointIds : undefined;
            resourceInputs["managedRules"] = state ? state.managedRules : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["redirectUrl"] = state ? state.redirectUrl : undefined;
            resourceInputs["requestBodyCheckEnabled"] = state ? state.requestBodyCheckEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CdnFrontdoorFirewallPolicyArgs | undefined;
            if ((!args || args.mode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mode'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.skuName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            resourceInputs["customBlockResponseBody"] = args ? args.customBlockResponseBody : undefined;
            resourceInputs["customBlockResponseStatusCode"] = args ? args.customBlockResponseStatusCode : undefined;
            resourceInputs["customRules"] = args ? args.customRules : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["managedRules"] = args ? args.managedRules : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["redirectUrl"] = args ? args.redirectUrl : undefined;
            resourceInputs["requestBodyCheckEnabled"] = args ? args.requestBodyCheckEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["frontendEndpointIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdnFrontdoorFirewallPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CdnFrontdoorFirewallPolicy resources.
 */
export interface CdnFrontdoorFirewallPolicyState {
    customBlockResponseBody?: pulumi.Input<string>;
    customBlockResponseStatusCode?: pulumi.Input<number>;
    customRules?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyCustomRule>[]>;
    enabled?: pulumi.Input<boolean>;
    frontendEndpointIds?: pulumi.Input<pulumi.Input<string>[]>;
    managedRules?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyManagedRule>[]>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    redirectUrl?: pulumi.Input<string>;
    requestBodyCheckEnabled?: pulumi.Input<boolean>;
    resourceGroupName?: pulumi.Input<string>;
    skuName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CdnFrontdoorFirewallPolicyTimeouts>;
}

/**
 * The set of arguments for constructing a CdnFrontdoorFirewallPolicy resource.
 */
export interface CdnFrontdoorFirewallPolicyArgs {
    customBlockResponseBody?: pulumi.Input<string>;
    customBlockResponseStatusCode?: pulumi.Input<number>;
    customRules?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyCustomRule>[]>;
    enabled?: pulumi.Input<boolean>;
    managedRules?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyManagedRule>[]>;
    mode: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    redirectUrl?: pulumi.Input<string>;
    requestBodyCheckEnabled?: pulumi.Input<boolean>;
    resourceGroupName: pulumi.Input<string>;
    skuName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CdnFrontdoorFirewallPolicyTimeouts>;
}
