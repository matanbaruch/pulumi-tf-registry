// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubnet(args: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getSubnet:getSubnet", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
        "virtualNetworkName": args.virtualNetworkName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetSubnetTimeouts;
    virtualNetworkName: string;
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly addressPrefix: string;
    readonly addressPrefixes: string[];
    readonly defaultOutboundAccessEnabled: boolean;
    readonly id: string;
    readonly name: string;
    readonly networkSecurityGroupId: string;
    readonly privateEndpointNetworkPolicies: string;
    readonly privateLinkServiceNetworkPoliciesEnabled: boolean;
    readonly resourceGroupName: string;
    readonly routeTableId: string;
    readonly serviceEndpoints: string[];
    readonly timeouts?: outputs.GetSubnetTimeouts;
    readonly virtualNetworkName: string;
}
export function getSubnetOutput(args: GetSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetResult> {
    return pulumi.output(args).apply((a: any) => getSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSubnetTimeoutsArgs>;
    virtualNetworkName: pulumi.Input<string>;
}
