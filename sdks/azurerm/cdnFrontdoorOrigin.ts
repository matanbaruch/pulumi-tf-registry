// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CdnFrontdoorOrigin extends pulumi.CustomResource {
    /**
     * Get an existing CdnFrontdoorOrigin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdnFrontdoorOriginState, opts?: pulumi.CustomResourceOptions): CdnFrontdoorOrigin {
        return new CdnFrontdoorOrigin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/cdnFrontdoorOrigin:CdnFrontdoorOrigin';

    /**
     * Returns true if the given object is an instance of CdnFrontdoorOrigin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdnFrontdoorOrigin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdnFrontdoorOrigin.__pulumiType;
    }

    public readonly cdnFrontdoorOriginGroupId!: pulumi.Output<string>;
    public readonly certificateNameCheckEnabled!: pulumi.Output<boolean>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly hostName!: pulumi.Output<string>;
    public readonly httpPort!: pulumi.Output<number | undefined>;
    public readonly httpsPort!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly originHostHeader!: pulumi.Output<string | undefined>;
    public readonly priority!: pulumi.Output<number | undefined>;
    public readonly privateLink!: pulumi.Output<outputs.CdnFrontdoorOriginPrivateLink | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.CdnFrontdoorOriginTimeouts | undefined>;
    public readonly weight!: pulumi.Output<number | undefined>;

    /**
     * Create a CdnFrontdoorOrigin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdnFrontdoorOriginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdnFrontdoorOriginArgs | CdnFrontdoorOriginState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdnFrontdoorOriginState | undefined;
            resourceInputs["cdnFrontdoorOriginGroupId"] = state ? state.cdnFrontdoorOriginGroupId : undefined;
            resourceInputs["certificateNameCheckEnabled"] = state ? state.certificateNameCheckEnabled : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["httpPort"] = state ? state.httpPort : undefined;
            resourceInputs["httpsPort"] = state ? state.httpsPort : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["originHostHeader"] = state ? state.originHostHeader : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["privateLink"] = state ? state.privateLink : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as CdnFrontdoorOriginArgs | undefined;
            if ((!args || args.cdnFrontdoorOriginGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cdnFrontdoorOriginGroupId'");
            }
            if ((!args || args.certificateNameCheckEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificateNameCheckEnabled'");
            }
            if ((!args || args.hostName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostName'");
            }
            resourceInputs["cdnFrontdoorOriginGroupId"] = args ? args.cdnFrontdoorOriginGroupId : undefined;
            resourceInputs["certificateNameCheckEnabled"] = args ? args.certificateNameCheckEnabled : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["httpPort"] = args ? args.httpPort : undefined;
            resourceInputs["httpsPort"] = args ? args.httpsPort : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["originHostHeader"] = args ? args.originHostHeader : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["privateLink"] = args ? args.privateLink : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdnFrontdoorOrigin.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CdnFrontdoorOrigin resources.
 */
export interface CdnFrontdoorOriginState {
    cdnFrontdoorOriginGroupId?: pulumi.Input<string>;
    certificateNameCheckEnabled?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    hostName?: pulumi.Input<string>;
    httpPort?: pulumi.Input<number>;
    httpsPort?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    originHostHeader?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    privateLink?: pulumi.Input<inputs.CdnFrontdoorOriginPrivateLink>;
    timeouts?: pulumi.Input<inputs.CdnFrontdoorOriginTimeouts>;
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CdnFrontdoorOrigin resource.
 */
export interface CdnFrontdoorOriginArgs {
    cdnFrontdoorOriginGroupId: pulumi.Input<string>;
    certificateNameCheckEnabled: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    hostName: pulumi.Input<string>;
    httpPort?: pulumi.Input<number>;
    httpsPort?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    originHostHeader?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    privateLink?: pulumi.Input<inputs.CdnFrontdoorOriginPrivateLink>;
    timeouts?: pulumi.Input<inputs.CdnFrontdoorOriginTimeouts>;
    weight?: pulumi.Input<number>;
}
