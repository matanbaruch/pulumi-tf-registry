// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SynapseSqlPoolWorkloadGroup extends pulumi.CustomResource {
    /**
     * Get an existing SynapseSqlPoolWorkloadGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SynapseSqlPoolWorkloadGroupState, opts?: pulumi.CustomResourceOptions): SynapseSqlPoolWorkloadGroup {
        return new SynapseSqlPoolWorkloadGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/synapseSqlPoolWorkloadGroup:SynapseSqlPoolWorkloadGroup';

    /**
     * Returns true if the given object is an instance of SynapseSqlPoolWorkloadGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SynapseSqlPoolWorkloadGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SynapseSqlPoolWorkloadGroup.__pulumiType;
    }

    public readonly importance!: pulumi.Output<string | undefined>;
    public readonly maxResourcePercent!: pulumi.Output<number>;
    public readonly maxResourcePercentPerRequest!: pulumi.Output<number | undefined>;
    public readonly minResourcePercent!: pulumi.Output<number>;
    public readonly minResourcePercentPerRequest!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly queryExecutionTimeoutInSeconds!: pulumi.Output<number | undefined>;
    public readonly sqlPoolId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SynapseSqlPoolWorkloadGroupTimeouts | undefined>;

    /**
     * Create a SynapseSqlPoolWorkloadGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SynapseSqlPoolWorkloadGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SynapseSqlPoolWorkloadGroupArgs | SynapseSqlPoolWorkloadGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SynapseSqlPoolWorkloadGroupState | undefined;
            resourceInputs["importance"] = state ? state.importance : undefined;
            resourceInputs["maxResourcePercent"] = state ? state.maxResourcePercent : undefined;
            resourceInputs["maxResourcePercentPerRequest"] = state ? state.maxResourcePercentPerRequest : undefined;
            resourceInputs["minResourcePercent"] = state ? state.minResourcePercent : undefined;
            resourceInputs["minResourcePercentPerRequest"] = state ? state.minResourcePercentPerRequest : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["queryExecutionTimeoutInSeconds"] = state ? state.queryExecutionTimeoutInSeconds : undefined;
            resourceInputs["sqlPoolId"] = state ? state.sqlPoolId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SynapseSqlPoolWorkloadGroupArgs | undefined;
            if ((!args || args.maxResourcePercent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxResourcePercent'");
            }
            if ((!args || args.minResourcePercent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minResourcePercent'");
            }
            if ((!args || args.sqlPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlPoolId'");
            }
            resourceInputs["importance"] = args ? args.importance : undefined;
            resourceInputs["maxResourcePercent"] = args ? args.maxResourcePercent : undefined;
            resourceInputs["maxResourcePercentPerRequest"] = args ? args.maxResourcePercentPerRequest : undefined;
            resourceInputs["minResourcePercent"] = args ? args.minResourcePercent : undefined;
            resourceInputs["minResourcePercentPerRequest"] = args ? args.minResourcePercentPerRequest : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["queryExecutionTimeoutInSeconds"] = args ? args.queryExecutionTimeoutInSeconds : undefined;
            resourceInputs["sqlPoolId"] = args ? args.sqlPoolId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SynapseSqlPoolWorkloadGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SynapseSqlPoolWorkloadGroup resources.
 */
export interface SynapseSqlPoolWorkloadGroupState {
    importance?: pulumi.Input<string>;
    maxResourcePercent?: pulumi.Input<number>;
    maxResourcePercentPerRequest?: pulumi.Input<number>;
    minResourcePercent?: pulumi.Input<number>;
    minResourcePercentPerRequest?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    queryExecutionTimeoutInSeconds?: pulumi.Input<number>;
    sqlPoolId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SynapseSqlPoolWorkloadGroupTimeouts>;
}

/**
 * The set of arguments for constructing a SynapseSqlPoolWorkloadGroup resource.
 */
export interface SynapseSqlPoolWorkloadGroupArgs {
    importance?: pulumi.Input<string>;
    maxResourcePercent: pulumi.Input<number>;
    maxResourcePercentPerRequest?: pulumi.Input<number>;
    minResourcePercent: pulumi.Input<number>;
    minResourcePercentPerRequest?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    queryExecutionTimeoutInSeconds?: pulumi.Input<number>;
    sqlPoolId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SynapseSqlPoolWorkloadGroupTimeouts>;
}
