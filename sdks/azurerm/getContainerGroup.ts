// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getContainerGroup(args: GetContainerGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getContainerGroup:getContainerGroup", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
        "zones": args.zones,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContainerGroup.
 */
export interface GetContainerGroupArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetContainerGroupTimeouts;
    zones?: string[];
}

/**
 * A collection of values returned by getContainerGroup.
 */
export interface GetContainerGroupResult {
    readonly fqdn: string;
    readonly id: string;
    readonly identities: outputs.GetContainerGroupIdentity[];
    readonly ipAddress: string;
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    readonly subnetIds: string[];
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetContainerGroupTimeouts;
    readonly zones?: string[];
}
export function getContainerGroupOutput(args: GetContainerGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerGroupResult> {
    return pulumi.output(args).apply((a: any) => getContainerGroup(a, opts))
}

/**
 * A collection of arguments for invoking getContainerGroup.
 */
export interface GetContainerGroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetContainerGroupTimeoutsArgs>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
