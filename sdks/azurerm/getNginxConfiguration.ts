// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNginxConfiguration(args: GetNginxConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetNginxConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getNginxConfiguration:getNginxConfiguration", {
        "id": args.id,
        "nginxDeploymentId": args.nginxDeploymentId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNginxConfiguration.
 */
export interface GetNginxConfigurationArgs {
    id?: string;
    nginxDeploymentId: string;
    timeouts?: inputs.GetNginxConfigurationTimeouts;
}

/**
 * A collection of values returned by getNginxConfiguration.
 */
export interface GetNginxConfigurationResult {
    readonly configFiles: outputs.GetNginxConfigurationConfigFile[];
    readonly id: string;
    readonly nginxDeploymentId: string;
    readonly packageData: string;
    readonly protectedFiles: outputs.GetNginxConfigurationProtectedFile[];
    readonly rootFile: string;
    readonly timeouts?: outputs.GetNginxConfigurationTimeouts;
}
export function getNginxConfigurationOutput(args: GetNginxConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNginxConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getNginxConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getNginxConfiguration.
 */
export interface GetNginxConfigurationOutputArgs {
    id?: pulumi.Input<string>;
    nginxDeploymentId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetNginxConfigurationTimeoutsArgs>;
}
