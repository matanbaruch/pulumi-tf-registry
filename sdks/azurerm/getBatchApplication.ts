// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBatchApplication(args: GetBatchApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetBatchApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getBatchApplication:getBatchApplication", {
        "accountName": args.accountName,
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBatchApplication.
 */
export interface GetBatchApplicationArgs {
    accountName: string;
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetBatchApplicationTimeouts;
}

/**
 * A collection of values returned by getBatchApplication.
 */
export interface GetBatchApplicationResult {
    readonly accountName: string;
    readonly allowUpdates: boolean;
    readonly defaultVersion: string;
    readonly displayName: string;
    readonly id: string;
    readonly name: string;
    readonly resourceGroupName: string;
    readonly timeouts?: outputs.GetBatchApplicationTimeouts;
}
export function getBatchApplicationOutput(args: GetBatchApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBatchApplicationResult> {
    return pulumi.output(args).apply((a: any) => getBatchApplication(a, opts))
}

/**
 * A collection of arguments for invoking getBatchApplication.
 */
export interface GetBatchApplicationOutputArgs {
    accountName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetBatchApplicationTimeoutsArgs>;
}
