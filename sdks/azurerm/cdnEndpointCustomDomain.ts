// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CdnEndpointCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing CdnEndpointCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdnEndpointCustomDomainState, opts?: pulumi.CustomResourceOptions): CdnEndpointCustomDomain {
        return new CdnEndpointCustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/cdnEndpointCustomDomain:CdnEndpointCustomDomain';

    /**
     * Returns true if the given object is an instance of CdnEndpointCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdnEndpointCustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdnEndpointCustomDomain.__pulumiType;
    }

    public readonly cdnEndpointId!: pulumi.Output<string>;
    public readonly cdnManagedHttps!: pulumi.Output<outputs.CdnEndpointCustomDomainCdnManagedHttps | undefined>;
    public readonly hostName!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CdnEndpointCustomDomainTimeouts | undefined>;
    public readonly userManagedHttps!: pulumi.Output<outputs.CdnEndpointCustomDomainUserManagedHttps | undefined>;

    /**
     * Create a CdnEndpointCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdnEndpointCustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdnEndpointCustomDomainArgs | CdnEndpointCustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdnEndpointCustomDomainState | undefined;
            resourceInputs["cdnEndpointId"] = state ? state.cdnEndpointId : undefined;
            resourceInputs["cdnManagedHttps"] = state ? state.cdnManagedHttps : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["userManagedHttps"] = state ? state.userManagedHttps : undefined;
        } else {
            const args = argsOrState as CdnEndpointCustomDomainArgs | undefined;
            if ((!args || args.cdnEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cdnEndpointId'");
            }
            if ((!args || args.hostName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostName'");
            }
            resourceInputs["cdnEndpointId"] = args ? args.cdnEndpointId : undefined;
            resourceInputs["cdnManagedHttps"] = args ? args.cdnManagedHttps : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userManagedHttps"] = args ? args.userManagedHttps : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdnEndpointCustomDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CdnEndpointCustomDomain resources.
 */
export interface CdnEndpointCustomDomainState {
    cdnEndpointId?: pulumi.Input<string>;
    cdnManagedHttps?: pulumi.Input<inputs.CdnEndpointCustomDomainCdnManagedHttps>;
    hostName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CdnEndpointCustomDomainTimeouts>;
    userManagedHttps?: pulumi.Input<inputs.CdnEndpointCustomDomainUserManagedHttps>;
}

/**
 * The set of arguments for constructing a CdnEndpointCustomDomain resource.
 */
export interface CdnEndpointCustomDomainArgs {
    cdnEndpointId: pulumi.Input<string>;
    cdnManagedHttps?: pulumi.Input<inputs.CdnEndpointCustomDomainCdnManagedHttps>;
    hostName: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CdnEndpointCustomDomainTimeouts>;
    userManagedHttps?: pulumi.Input<inputs.CdnEndpointCustomDomainUserManagedHttps>;
}
