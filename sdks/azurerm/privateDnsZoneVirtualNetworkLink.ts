// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PrivateDnsZoneVirtualNetworkLink extends pulumi.CustomResource {
    /**
     * Get an existing PrivateDnsZoneVirtualNetworkLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateDnsZoneVirtualNetworkLinkState, opts?: pulumi.CustomResourceOptions): PrivateDnsZoneVirtualNetworkLink {
        return new PrivateDnsZoneVirtualNetworkLink(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/privateDnsZoneVirtualNetworkLink:PrivateDnsZoneVirtualNetworkLink';

    /**
     * Returns true if the given object is an instance of PrivateDnsZoneVirtualNetworkLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateDnsZoneVirtualNetworkLink {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateDnsZoneVirtualNetworkLink.__pulumiType;
    }

    public readonly name!: pulumi.Output<string>;
    public readonly privateDnsZoneName!: pulumi.Output<string>;
    public readonly registrationEnabled!: pulumi.Output<boolean | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.PrivateDnsZoneVirtualNetworkLinkTimeouts | undefined>;
    public readonly virtualNetworkId!: pulumi.Output<string>;

    /**
     * Create a PrivateDnsZoneVirtualNetworkLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateDnsZoneVirtualNetworkLinkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateDnsZoneVirtualNetworkLinkArgs | PrivateDnsZoneVirtualNetworkLinkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateDnsZoneVirtualNetworkLinkState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateDnsZoneName"] = state ? state.privateDnsZoneName : undefined;
            resourceInputs["registrationEnabled"] = state ? state.registrationEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["virtualNetworkId"] = state ? state.virtualNetworkId : undefined;
        } else {
            const args = argsOrState as PrivateDnsZoneVirtualNetworkLinkArgs | undefined;
            if ((!args || args.privateDnsZoneName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateDnsZoneName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.virtualNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualNetworkId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateDnsZoneName"] = args ? args.privateDnsZoneName : undefined;
            resourceInputs["registrationEnabled"] = args ? args.registrationEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["virtualNetworkId"] = args ? args.virtualNetworkId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateDnsZoneVirtualNetworkLink.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrivateDnsZoneVirtualNetworkLink resources.
 */
export interface PrivateDnsZoneVirtualNetworkLinkState {
    name?: pulumi.Input<string>;
    privateDnsZoneName?: pulumi.Input<string>;
    registrationEnabled?: pulumi.Input<boolean>;
    resourceGroupName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.PrivateDnsZoneVirtualNetworkLinkTimeouts>;
    virtualNetworkId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivateDnsZoneVirtualNetworkLink resource.
 */
export interface PrivateDnsZoneVirtualNetworkLinkArgs {
    name?: pulumi.Input<string>;
    privateDnsZoneName: pulumi.Input<string>;
    registrationEnabled?: pulumi.Input<boolean>;
    resourceGroupName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.PrivateDnsZoneVirtualNetworkLinkTimeouts>;
    virtualNetworkId: pulumi.Input<string>;
}
