// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSpringCloudService(args: GetSpringCloudServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetSpringCloudServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getSpringCloudService:getSpringCloudService", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpringCloudService.
 */
export interface GetSpringCloudServiceArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetSpringCloudServiceTimeouts;
}

/**
 * A collection of values returned by getSpringCloudService.
 */
export interface GetSpringCloudServiceResult {
    readonly configServerGitSettings: outputs.GetSpringCloudServiceConfigServerGitSetting[];
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly outboundPublicIpAddresses: string[];
    readonly requiredNetworkTrafficRules: outputs.GetSpringCloudServiceRequiredNetworkTrafficRule[];
    readonly resourceGroupName: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetSpringCloudServiceTimeouts;
}
export function getSpringCloudServiceOutput(args: GetSpringCloudServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpringCloudServiceResult> {
    return pulumi.output(args).apply((a: any) => getSpringCloudService(a, opts))
}

/**
 * A collection of arguments for invoking getSpringCloudService.
 */
export interface GetSpringCloudServiceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSpringCloudServiceTimeoutsArgs>;
}
