// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IothubEnrichment extends pulumi.CustomResource {
    /**
     * Get an existing IothubEnrichment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IothubEnrichmentState, opts?: pulumi.CustomResourceOptions): IothubEnrichment {
        return new IothubEnrichment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/iothubEnrichment:IothubEnrichment';

    /**
     * Returns true if the given object is an instance of IothubEnrichment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IothubEnrichment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IothubEnrichment.__pulumiType;
    }

    public readonly endpointNames!: pulumi.Output<string[]>;
    public readonly iothubName!: pulumi.Output<string>;
    public readonly key!: pulumi.Output<string>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.IothubEnrichmentTimeouts | undefined>;
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a IothubEnrichment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IothubEnrichmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IothubEnrichmentArgs | IothubEnrichmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IothubEnrichmentState | undefined;
            resourceInputs["endpointNames"] = state ? state.endpointNames : undefined;
            resourceInputs["iothubName"] = state ? state.iothubName : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as IothubEnrichmentArgs | undefined;
            if ((!args || args.endpointNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointNames'");
            }
            if ((!args || args.iothubName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iothubName'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["endpointNames"] = args ? args.endpointNames : undefined;
            resourceInputs["iothubName"] = args ? args.iothubName : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IothubEnrichment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IothubEnrichment resources.
 */
export interface IothubEnrichmentState {
    endpointNames?: pulumi.Input<pulumi.Input<string>[]>;
    iothubName?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IothubEnrichmentTimeouts>;
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IothubEnrichment resource.
 */
export interface IothubEnrichmentArgs {
    endpointNames: pulumi.Input<pulumi.Input<string>[]>;
    iothubName: pulumi.Input<string>;
    key: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IothubEnrichmentTimeouts>;
    value: pulumi.Input<string>;
}
