// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MobileNetworkSim extends pulumi.CustomResource {
    /**
     * Get an existing MobileNetworkSim resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MobileNetworkSimState, opts?: pulumi.CustomResourceOptions): MobileNetworkSim {
        return new MobileNetworkSim(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/mobileNetworkSim:MobileNetworkSim';

    /**
     * Returns true if the given object is an instance of MobileNetworkSim.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MobileNetworkSim {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MobileNetworkSim.__pulumiType;
    }

    public readonly authenticationKey!: pulumi.Output<string>;
    public readonly deviceType!: pulumi.Output<string | undefined>;
    public readonly integratedCircuitCardIdentifier!: pulumi.Output<string>;
    public readonly internationalMobileSubscriberIdentity!: pulumi.Output<string>;
    public readonly mobileNetworkSimGroupId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly operatorKeyCode!: pulumi.Output<string>;
    public readonly simPolicyId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly simState!: pulumi.Output<string>;
    public readonly staticIpConfigurations!: pulumi.Output<outputs.MobileNetworkSimStaticIpConfiguration[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.MobileNetworkSimTimeouts | undefined>;
    public /*out*/ readonly vendorKeyFingerprint!: pulumi.Output<string>;
    public /*out*/ readonly vendorName!: pulumi.Output<string>;

    /**
     * Create a MobileNetworkSim resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MobileNetworkSimArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MobileNetworkSimArgs | MobileNetworkSimState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MobileNetworkSimState | undefined;
            resourceInputs["authenticationKey"] = state ? state.authenticationKey : undefined;
            resourceInputs["deviceType"] = state ? state.deviceType : undefined;
            resourceInputs["integratedCircuitCardIdentifier"] = state ? state.integratedCircuitCardIdentifier : undefined;
            resourceInputs["internationalMobileSubscriberIdentity"] = state ? state.internationalMobileSubscriberIdentity : undefined;
            resourceInputs["mobileNetworkSimGroupId"] = state ? state.mobileNetworkSimGroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["operatorKeyCode"] = state ? state.operatorKeyCode : undefined;
            resourceInputs["simPolicyId"] = state ? state.simPolicyId : undefined;
            resourceInputs["simState"] = state ? state.simState : undefined;
            resourceInputs["staticIpConfigurations"] = state ? state.staticIpConfigurations : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["vendorKeyFingerprint"] = state ? state.vendorKeyFingerprint : undefined;
            resourceInputs["vendorName"] = state ? state.vendorName : undefined;
        } else {
            const args = argsOrState as MobileNetworkSimArgs | undefined;
            if ((!args || args.authenticationKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationKey'");
            }
            if ((!args || args.integratedCircuitCardIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integratedCircuitCardIdentifier'");
            }
            if ((!args || args.internationalMobileSubscriberIdentity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internationalMobileSubscriberIdentity'");
            }
            if ((!args || args.mobileNetworkSimGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mobileNetworkSimGroupId'");
            }
            if ((!args || args.operatorKeyCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operatorKeyCode'");
            }
            resourceInputs["authenticationKey"] = args?.authenticationKey ? pulumi.secret(args.authenticationKey) : undefined;
            resourceInputs["deviceType"] = args ? args.deviceType : undefined;
            resourceInputs["integratedCircuitCardIdentifier"] = args ? args.integratedCircuitCardIdentifier : undefined;
            resourceInputs["internationalMobileSubscriberIdentity"] = args ? args.internationalMobileSubscriberIdentity : undefined;
            resourceInputs["mobileNetworkSimGroupId"] = args ? args.mobileNetworkSimGroupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["operatorKeyCode"] = args?.operatorKeyCode ? pulumi.secret(args.operatorKeyCode) : undefined;
            resourceInputs["simPolicyId"] = args ? args.simPolicyId : undefined;
            resourceInputs["staticIpConfigurations"] = args ? args.staticIpConfigurations : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["simState"] = undefined /*out*/;
            resourceInputs["vendorKeyFingerprint"] = undefined /*out*/;
            resourceInputs["vendorName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authenticationKey", "operatorKeyCode"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MobileNetworkSim.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MobileNetworkSim resources.
 */
export interface MobileNetworkSimState {
    authenticationKey?: pulumi.Input<string>;
    deviceType?: pulumi.Input<string>;
    integratedCircuitCardIdentifier?: pulumi.Input<string>;
    internationalMobileSubscriberIdentity?: pulumi.Input<string>;
    mobileNetworkSimGroupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    operatorKeyCode?: pulumi.Input<string>;
    simPolicyId?: pulumi.Input<string>;
    simState?: pulumi.Input<string>;
    staticIpConfigurations?: pulumi.Input<pulumi.Input<inputs.MobileNetworkSimStaticIpConfiguration>[]>;
    timeouts?: pulumi.Input<inputs.MobileNetworkSimTimeouts>;
    vendorKeyFingerprint?: pulumi.Input<string>;
    vendorName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MobileNetworkSim resource.
 */
export interface MobileNetworkSimArgs {
    authenticationKey: pulumi.Input<string>;
    deviceType?: pulumi.Input<string>;
    integratedCircuitCardIdentifier: pulumi.Input<string>;
    internationalMobileSubscriberIdentity: pulumi.Input<string>;
    mobileNetworkSimGroupId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    operatorKeyCode: pulumi.Input<string>;
    simPolicyId?: pulumi.Input<string>;
    staticIpConfigurations?: pulumi.Input<pulumi.Input<inputs.MobileNetworkSimStaticIpConfiguration>[]>;
    timeouts?: pulumi.Input<inputs.MobileNetworkSimTimeouts>;
}
