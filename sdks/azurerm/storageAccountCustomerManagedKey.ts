// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StorageAccountCustomerManagedKey extends pulumi.CustomResource {
    /**
     * Get an existing StorageAccountCustomerManagedKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageAccountCustomerManagedKeyState, opts?: pulumi.CustomResourceOptions): StorageAccountCustomerManagedKey {
        return new StorageAccountCustomerManagedKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/storageAccountCustomerManagedKey:StorageAccountCustomerManagedKey';

    /**
     * Returns true if the given object is an instance of StorageAccountCustomerManagedKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageAccountCustomerManagedKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageAccountCustomerManagedKey.__pulumiType;
    }

    public readonly federatedIdentityClientId!: pulumi.Output<string | undefined>;
    public readonly keyName!: pulumi.Output<string>;
    public readonly keyVaultId!: pulumi.Output<string | undefined>;
    public readonly keyVaultUri!: pulumi.Output<string>;
    public readonly keyVersion!: pulumi.Output<string | undefined>;
    public readonly managedHsmKeyId!: pulumi.Output<string | undefined>;
    public readonly storageAccountId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.StorageAccountCustomerManagedKeyTimeouts | undefined>;
    public readonly userAssignedIdentityId!: pulumi.Output<string | undefined>;

    /**
     * Create a StorageAccountCustomerManagedKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageAccountCustomerManagedKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageAccountCustomerManagedKeyArgs | StorageAccountCustomerManagedKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageAccountCustomerManagedKeyState | undefined;
            resourceInputs["federatedIdentityClientId"] = state ? state.federatedIdentityClientId : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["keyVaultId"] = state ? state.keyVaultId : undefined;
            resourceInputs["keyVaultUri"] = state ? state.keyVaultUri : undefined;
            resourceInputs["keyVersion"] = state ? state.keyVersion : undefined;
            resourceInputs["managedHsmKeyId"] = state ? state.managedHsmKeyId : undefined;
            resourceInputs["storageAccountId"] = state ? state.storageAccountId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["userAssignedIdentityId"] = state ? state.userAssignedIdentityId : undefined;
        } else {
            const args = argsOrState as StorageAccountCustomerManagedKeyArgs | undefined;
            if ((!args || args.keyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyName'");
            }
            if ((!args || args.storageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountId'");
            }
            resourceInputs["federatedIdentityClientId"] = args ? args.federatedIdentityClientId : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
            resourceInputs["keyVaultId"] = args ? args.keyVaultId : undefined;
            resourceInputs["keyVaultUri"] = args ? args.keyVaultUri : undefined;
            resourceInputs["keyVersion"] = args ? args.keyVersion : undefined;
            resourceInputs["managedHsmKeyId"] = args ? args.managedHsmKeyId : undefined;
            resourceInputs["storageAccountId"] = args ? args.storageAccountId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userAssignedIdentityId"] = args ? args.userAssignedIdentityId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageAccountCustomerManagedKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageAccountCustomerManagedKey resources.
 */
export interface StorageAccountCustomerManagedKeyState {
    federatedIdentityClientId?: pulumi.Input<string>;
    keyName?: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    keyVaultUri?: pulumi.Input<string>;
    keyVersion?: pulumi.Input<string>;
    managedHsmKeyId?: pulumi.Input<string>;
    storageAccountId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageAccountCustomerManagedKeyTimeouts>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StorageAccountCustomerManagedKey resource.
 */
export interface StorageAccountCustomerManagedKeyArgs {
    federatedIdentityClientId?: pulumi.Input<string>;
    keyName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    keyVaultUri?: pulumi.Input<string>;
    keyVersion?: pulumi.Input<string>;
    managedHsmKeyId?: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StorageAccountCustomerManagedKeyTimeouts>;
    userAssignedIdentityId?: pulumi.Input<string>;
}
