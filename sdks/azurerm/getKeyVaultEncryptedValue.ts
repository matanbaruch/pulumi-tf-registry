// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeyVaultEncryptedValue(args: GetKeyVaultEncryptedValueArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyVaultEncryptedValueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getKeyVaultEncryptedValue:getKeyVaultEncryptedValue", {
        "algorithm": args.algorithm,
        "encryptedData": args.encryptedData,
        "id": args.id,
        "keyVaultKeyId": args.keyVaultKeyId,
        "plainTextValue": args.plainTextValue,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeyVaultEncryptedValue.
 */
export interface GetKeyVaultEncryptedValueArgs {
    algorithm: string;
    encryptedData?: string;
    id?: string;
    keyVaultKeyId: string;
    plainTextValue?: string;
    timeouts?: inputs.GetKeyVaultEncryptedValueTimeouts;
}

/**
 * A collection of values returned by getKeyVaultEncryptedValue.
 */
export interface GetKeyVaultEncryptedValueResult {
    readonly algorithm: string;
    readonly decodedPlainTextValue: string;
    readonly encryptedData?: string;
    readonly id: string;
    readonly keyVaultKeyId: string;
    readonly plainTextValue?: string;
    readonly timeouts?: outputs.GetKeyVaultEncryptedValueTimeouts;
}
export function getKeyVaultEncryptedValueOutput(args: GetKeyVaultEncryptedValueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyVaultEncryptedValueResult> {
    return pulumi.output(args).apply((a: any) => getKeyVaultEncryptedValue(a, opts))
}

/**
 * A collection of arguments for invoking getKeyVaultEncryptedValue.
 */
export interface GetKeyVaultEncryptedValueOutputArgs {
    algorithm: pulumi.Input<string>;
    encryptedData?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keyVaultKeyId: pulumi.Input<string>;
    plainTextValue?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetKeyVaultEncryptedValueTimeoutsArgs>;
}
