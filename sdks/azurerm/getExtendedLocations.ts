// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getExtendedLocations(args: GetExtendedLocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetExtendedLocationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getExtendedLocations:getExtendedLocations", {
        "id": args.id,
        "location": args.location,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getExtendedLocations.
 */
export interface GetExtendedLocationsArgs {
    id?: string;
    location: string;
    timeouts?: inputs.GetExtendedLocationsTimeouts;
}

/**
 * A collection of values returned by getExtendedLocations.
 */
export interface GetExtendedLocationsResult {
    readonly extendedLocations: string[];
    readonly id: string;
    readonly location: string;
    readonly timeouts?: outputs.GetExtendedLocationsTimeouts;
}
export function getExtendedLocationsOutput(args: GetExtendedLocationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExtendedLocationsResult> {
    return pulumi.output(args).apply((a: any) => getExtendedLocations(a, opts))
}

/**
 * A collection of arguments for invoking getExtendedLocations.
 */
export interface GetExtendedLocationsOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetExtendedLocationsTimeoutsArgs>;
}
