// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Aadb2cDirectory extends pulumi.CustomResource {
    /**
     * Get an existing Aadb2cDirectory resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Aadb2cDirectoryState, opts?: pulumi.CustomResourceOptions): Aadb2cDirectory {
        return new Aadb2cDirectory(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/aadb2cDirectory:Aadb2cDirectory';

    /**
     * Returns true if the given object is an instance of Aadb2cDirectory.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Aadb2cDirectory {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Aadb2cDirectory.__pulumiType;
    }

    /**
     * The type of billing for the B2C tenant. Possible values include: `MAU` or `Auths`.
     */
    public /*out*/ readonly billingType!: pulumi.Output<string>;
    /**
     * Country code of the B2C tenant. See https://aka.ms/B2CDataResidency for valid country codes.
     */
    public readonly countryCode!: pulumi.Output<string>;
    /**
     * Location in which the B2C tenant is hosted and data resides. See https://aka.ms/B2CDataResidency for more information.
     */
    public readonly dataResidencyLocation!: pulumi.Output<string>;
    /**
     * The initial display name of the B2C tenant.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Domain name of the B2C tenant, including onmicrosoft.com suffix.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The date from which the billing type took effect. May not be populated until after the first billing cycle.
     */
    public /*out*/ readonly effectiveStartDate!: pulumi.Output<string>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Billing SKU for the B2C tenant. See https://aka.ms/b2cBilling for more information.
     */
    public readonly skuName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Tenant ID for the B2C tenant.
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.Aadb2cDirectoryTimeouts | undefined>;

    /**
     * Create a Aadb2cDirectory resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Aadb2cDirectoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Aadb2cDirectoryArgs | Aadb2cDirectoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Aadb2cDirectoryState | undefined;
            resourceInputs["billingType"] = state ? state.billingType : undefined;
            resourceInputs["countryCode"] = state ? state.countryCode : undefined;
            resourceInputs["dataResidencyLocation"] = state ? state.dataResidencyLocation : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["effectiveStartDate"] = state ? state.effectiveStartDate : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as Aadb2cDirectoryArgs | undefined;
            if ((!args || args.dataResidencyLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataResidencyLocation'");
            }
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.skuName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            resourceInputs["countryCode"] = args ? args.countryCode : undefined;
            resourceInputs["dataResidencyLocation"] = args ? args.dataResidencyLocation : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["billingType"] = undefined /*out*/;
            resourceInputs["effectiveStartDate"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Aadb2cDirectory.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Aadb2cDirectory resources.
 */
export interface Aadb2cDirectoryState {
    /**
     * The type of billing for the B2C tenant. Possible values include: `MAU` or `Auths`.
     */
    billingType?: pulumi.Input<string>;
    /**
     * Country code of the B2C tenant. See https://aka.ms/B2CDataResidency for valid country codes.
     */
    countryCode?: pulumi.Input<string>;
    /**
     * Location in which the B2C tenant is hosted and data resides. See https://aka.ms/B2CDataResidency for more information.
     */
    dataResidencyLocation?: pulumi.Input<string>;
    /**
     * The initial display name of the B2C tenant.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Domain name of the B2C tenant, including onmicrosoft.com suffix.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The date from which the billing type took effect. May not be populated until after the first billing cycle.
     */
    effectiveStartDate?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Billing SKU for the B2C tenant. See https://aka.ms/b2cBilling for more information.
     */
    skuName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Tenant ID for the B2C tenant.
     */
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.Aadb2cDirectoryTimeouts>;
}

/**
 * The set of arguments for constructing a Aadb2cDirectory resource.
 */
export interface Aadb2cDirectoryArgs {
    /**
     * Country code of the B2C tenant. See https://aka.ms/B2CDataResidency for valid country codes.
     */
    countryCode?: pulumi.Input<string>;
    /**
     * Location in which the B2C tenant is hosted and data resides. See https://aka.ms/B2CDataResidency for more information.
     */
    dataResidencyLocation: pulumi.Input<string>;
    /**
     * The initial display name of the B2C tenant.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Domain name of the B2C tenant, including onmicrosoft.com suffix.
     */
    domainName: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    /**
     * Billing SKU for the B2C tenant. See https://aka.ms/b2cBilling for more information.
     */
    skuName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.Aadb2cDirectoryTimeouts>;
}
