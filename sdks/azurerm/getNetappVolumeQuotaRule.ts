// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetappVolumeQuotaRule(args: GetNetappVolumeQuotaRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetNetappVolumeQuotaRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getNetappVolumeQuotaRule:getNetappVolumeQuotaRule", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
        "volumeId": args.volumeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetappVolumeQuotaRule.
 */
export interface GetNetappVolumeQuotaRuleArgs {
    id?: string;
    name: string;
    timeouts?: inputs.GetNetappVolumeQuotaRuleTimeouts;
    volumeId: string;
}

/**
 * A collection of values returned by getNetappVolumeQuotaRule.
 */
export interface GetNetappVolumeQuotaRuleResult {
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly quotaSizeInKib: number;
    readonly quotaTarget: string;
    readonly quotaType: string;
    readonly timeouts?: outputs.GetNetappVolumeQuotaRuleTimeouts;
    readonly volumeId: string;
}
export function getNetappVolumeQuotaRuleOutput(args: GetNetappVolumeQuotaRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetappVolumeQuotaRuleResult> {
    return pulumi.output(args).apply((a: any) => getNetappVolumeQuotaRule(a, opts))
}

/**
 * A collection of arguments for invoking getNetappVolumeQuotaRule.
 */
export interface GetNetappVolumeQuotaRuleOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetNetappVolumeQuotaRuleTimeoutsArgs>;
    volumeId: pulumi.Input<string>;
}
