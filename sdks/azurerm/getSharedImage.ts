// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSharedImage(args: GetSharedImageArgs, opts?: pulumi.InvokeOptions): Promise<GetSharedImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getSharedImage:getSharedImage", {
        "galleryName": args.galleryName,
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSharedImage.
 */
export interface GetSharedImageArgs {
    galleryName: string;
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetSharedImageTimeouts;
}

/**
 * A collection of values returned by getSharedImage.
 */
export interface GetSharedImageResult {
    readonly acceleratedNetworkSupportEnabled: boolean;
    readonly architecture: string;
    readonly confidentialVmEnabled: boolean;
    readonly confidentialVmSupported: boolean;
    readonly description: string;
    readonly eula: string;
    readonly galleryName: string;
    readonly hibernationEnabled: boolean;
    readonly hyperVGeneration: string;
    readonly id: string;
    readonly identifiers: outputs.GetSharedImageIdentifier[];
    readonly location: string;
    readonly name: string;
    readonly osType: string;
    readonly privacyStatementUri: string;
    readonly purchasePlans: outputs.GetSharedImagePurchasePlan[];
    readonly releaseNoteUri: string;
    readonly resourceGroupName: string;
    readonly specialized: boolean;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetSharedImageTimeouts;
    readonly trustedLaunchEnabled: boolean;
    readonly trustedLaunchSupported: boolean;
}
export function getSharedImageOutput(args: GetSharedImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSharedImageResult> {
    return pulumi.output(args).apply((a: any) => getSharedImage(a, opts))
}

/**
 * A collection of arguments for invoking getSharedImage.
 */
export interface GetSharedImageOutputArgs {
    galleryName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSharedImageTimeoutsArgs>;
}
