// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StreamAnalyticsOutputPowerbi extends pulumi.CustomResource {
    /**
     * Get an existing StreamAnalyticsOutputPowerbi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamAnalyticsOutputPowerbiState, opts?: pulumi.CustomResourceOptions): StreamAnalyticsOutputPowerbi {
        return new StreamAnalyticsOutputPowerbi(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/streamAnalyticsOutputPowerbi:StreamAnalyticsOutputPowerbi';

    /**
     * Returns true if the given object is an instance of StreamAnalyticsOutputPowerbi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StreamAnalyticsOutputPowerbi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StreamAnalyticsOutputPowerbi.__pulumiType;
    }

    public readonly dataset!: pulumi.Output<string>;
    public readonly groupId!: pulumi.Output<string>;
    public readonly groupName!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly streamAnalyticsJobId!: pulumi.Output<string>;
    public readonly table!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.StreamAnalyticsOutputPowerbiTimeouts | undefined>;
    public readonly tokenUserDisplayName!: pulumi.Output<string | undefined>;
    public readonly tokenUserPrincipalName!: pulumi.Output<string | undefined>;

    /**
     * Create a StreamAnalyticsOutputPowerbi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamAnalyticsOutputPowerbiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StreamAnalyticsOutputPowerbiArgs | StreamAnalyticsOutputPowerbiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StreamAnalyticsOutputPowerbiState | undefined;
            resourceInputs["dataset"] = state ? state.dataset : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["streamAnalyticsJobId"] = state ? state.streamAnalyticsJobId : undefined;
            resourceInputs["table"] = state ? state.table : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["tokenUserDisplayName"] = state ? state.tokenUserDisplayName : undefined;
            resourceInputs["tokenUserPrincipalName"] = state ? state.tokenUserPrincipalName : undefined;
        } else {
            const args = argsOrState as StreamAnalyticsOutputPowerbiArgs | undefined;
            if ((!args || args.dataset === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataset'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if ((!args || args.streamAnalyticsJobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamAnalyticsJobId'");
            }
            if ((!args || args.table === undefined) && !opts.urn) {
                throw new Error("Missing required property 'table'");
            }
            resourceInputs["dataset"] = args ? args.dataset : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["streamAnalyticsJobId"] = args ? args.streamAnalyticsJobId : undefined;
            resourceInputs["table"] = args ? args.table : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["tokenUserDisplayName"] = args ? args.tokenUserDisplayName : undefined;
            resourceInputs["tokenUserPrincipalName"] = args ? args.tokenUserPrincipalName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StreamAnalyticsOutputPowerbi.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StreamAnalyticsOutputPowerbi resources.
 */
export interface StreamAnalyticsOutputPowerbiState {
    dataset?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    streamAnalyticsJobId?: pulumi.Input<string>;
    table?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StreamAnalyticsOutputPowerbiTimeouts>;
    tokenUserDisplayName?: pulumi.Input<string>;
    tokenUserPrincipalName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StreamAnalyticsOutputPowerbi resource.
 */
export interface StreamAnalyticsOutputPowerbiArgs {
    dataset: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    groupName: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    streamAnalyticsJobId: pulumi.Input<string>;
    table: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.StreamAnalyticsOutputPowerbiTimeouts>;
    tokenUserDisplayName?: pulumi.Input<string>;
    tokenUserPrincipalName?: pulumi.Input<string>;
}
