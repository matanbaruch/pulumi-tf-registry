// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRoleManagementPolicy(args: GetRoleManagementPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleManagementPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getRoleManagementPolicy:getRoleManagementPolicy", {
        "id": args.id,
        "roleDefinitionId": args.roleDefinitionId,
        "scope": args.scope,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoleManagementPolicy.
 */
export interface GetRoleManagementPolicyArgs {
    id?: string;
    roleDefinitionId: string;
    scope: string;
    timeouts?: inputs.GetRoleManagementPolicyTimeouts;
}

/**
 * A collection of values returned by getRoleManagementPolicy.
 */
export interface GetRoleManagementPolicyResult {
    readonly activationRules: outputs.GetRoleManagementPolicyActivationRule[];
    readonly activeAssignmentRules: outputs.GetRoleManagementPolicyActiveAssignmentRule[];
    readonly description: string;
    readonly eligibleAssignmentRules: outputs.GetRoleManagementPolicyEligibleAssignmentRule[];
    readonly id: string;
    readonly name: string;
    readonly notificationRules: outputs.GetRoleManagementPolicyNotificationRule[];
    readonly roleDefinitionId: string;
    readonly scope: string;
    readonly timeouts?: outputs.GetRoleManagementPolicyTimeouts;
}
export function getRoleManagementPolicyOutput(args: GetRoleManagementPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleManagementPolicyResult> {
    return pulumi.output(args).apply((a: any) => getRoleManagementPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getRoleManagementPolicy.
 */
export interface GetRoleManagementPolicyOutputArgs {
    id?: pulumi.Input<string>;
    roleDefinitionId: pulumi.Input<string>;
    scope: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetRoleManagementPolicyTimeoutsArgs>;
}
