// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CostManagementScheduledAction extends pulumi.CustomResource {
    /**
     * Get an existing CostManagementScheduledAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CostManagementScheduledActionState, opts?: pulumi.CustomResourceOptions): CostManagementScheduledAction {
        return new CostManagementScheduledAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/costManagementScheduledAction:CostManagementScheduledAction';

    /**
     * Returns true if the given object is an instance of CostManagementScheduledAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CostManagementScheduledAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CostManagementScheduledAction.__pulumiType;
    }

    public readonly dayOfMonth!: pulumi.Output<number | undefined>;
    public readonly daysOfWeeks!: pulumi.Output<string[] | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly emailAddressSender!: pulumi.Output<string>;
    public readonly emailAddresses!: pulumi.Output<string[]>;
    public readonly emailSubject!: pulumi.Output<string>;
    public readonly endDate!: pulumi.Output<string>;
    public readonly frequency!: pulumi.Output<string>;
    public readonly hourOfDay!: pulumi.Output<number | undefined>;
    public readonly message!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly startDate!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CostManagementScheduledActionTimeouts | undefined>;
    public readonly viewId!: pulumi.Output<string>;
    public readonly weeksOfMonths!: pulumi.Output<string[] | undefined>;

    /**
     * Create a CostManagementScheduledAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CostManagementScheduledActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CostManagementScheduledActionArgs | CostManagementScheduledActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CostManagementScheduledActionState | undefined;
            resourceInputs["dayOfMonth"] = state ? state.dayOfMonth : undefined;
            resourceInputs["daysOfWeeks"] = state ? state.daysOfWeeks : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["emailAddressSender"] = state ? state.emailAddressSender : undefined;
            resourceInputs["emailAddresses"] = state ? state.emailAddresses : undefined;
            resourceInputs["emailSubject"] = state ? state.emailSubject : undefined;
            resourceInputs["endDate"] = state ? state.endDate : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["hourOfDay"] = state ? state.hourOfDay : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["startDate"] = state ? state.startDate : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["viewId"] = state ? state.viewId : undefined;
            resourceInputs["weeksOfMonths"] = state ? state.weeksOfMonths : undefined;
        } else {
            const args = argsOrState as CostManagementScheduledActionArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.emailAddressSender === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailAddressSender'");
            }
            if ((!args || args.emailAddresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailAddresses'");
            }
            if ((!args || args.emailSubject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailSubject'");
            }
            if ((!args || args.endDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endDate'");
            }
            if ((!args || args.frequency === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frequency'");
            }
            if ((!args || args.startDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startDate'");
            }
            if ((!args || args.viewId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'viewId'");
            }
            resourceInputs["dayOfMonth"] = args ? args.dayOfMonth : undefined;
            resourceInputs["daysOfWeeks"] = args ? args.daysOfWeeks : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["emailAddressSender"] = args ? args.emailAddressSender : undefined;
            resourceInputs["emailAddresses"] = args ? args.emailAddresses : undefined;
            resourceInputs["emailSubject"] = args ? args.emailSubject : undefined;
            resourceInputs["endDate"] = args ? args.endDate : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["hourOfDay"] = args ? args.hourOfDay : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["startDate"] = args ? args.startDate : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["viewId"] = args ? args.viewId : undefined;
            resourceInputs["weeksOfMonths"] = args ? args.weeksOfMonths : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CostManagementScheduledAction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CostManagementScheduledAction resources.
 */
export interface CostManagementScheduledActionState {
    dayOfMonth?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    displayName?: pulumi.Input<string>;
    emailAddressSender?: pulumi.Input<string>;
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    emailSubject?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    frequency?: pulumi.Input<string>;
    hourOfDay?: pulumi.Input<number>;
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CostManagementScheduledActionTimeouts>;
    viewId?: pulumi.Input<string>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a CostManagementScheduledAction resource.
 */
export interface CostManagementScheduledActionArgs {
    dayOfMonth?: pulumi.Input<number>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    displayName: pulumi.Input<string>;
    emailAddressSender: pulumi.Input<string>;
    emailAddresses: pulumi.Input<pulumi.Input<string>[]>;
    emailSubject: pulumi.Input<string>;
    endDate: pulumi.Input<string>;
    frequency: pulumi.Input<string>;
    hourOfDay?: pulumi.Input<number>;
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    startDate: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CostManagementScheduledActionTimeouts>;
    viewId: pulumi.Input<string>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<string>[]>;
}
