// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FrontdoorCustomHttpsConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing FrontdoorCustomHttpsConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FrontdoorCustomHttpsConfigurationState, opts?: pulumi.CustomResourceOptions): FrontdoorCustomHttpsConfiguration {
        return new FrontdoorCustomHttpsConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/frontdoorCustomHttpsConfiguration:FrontdoorCustomHttpsConfiguration';

    /**
     * Returns true if the given object is an instance of FrontdoorCustomHttpsConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FrontdoorCustomHttpsConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FrontdoorCustomHttpsConfiguration.__pulumiType;
    }

    public readonly customHttpsConfiguration!: pulumi.Output<outputs.FrontdoorCustomHttpsConfigurationCustomHttpsConfiguration | undefined>;
    public readonly customHttpsProvisioningEnabled!: pulumi.Output<boolean>;
    public readonly frontendEndpointId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.FrontdoorCustomHttpsConfigurationTimeouts | undefined>;

    /**
     * Create a FrontdoorCustomHttpsConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrontdoorCustomHttpsConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FrontdoorCustomHttpsConfigurationArgs | FrontdoorCustomHttpsConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FrontdoorCustomHttpsConfigurationState | undefined;
            resourceInputs["customHttpsConfiguration"] = state ? state.customHttpsConfiguration : undefined;
            resourceInputs["customHttpsProvisioningEnabled"] = state ? state.customHttpsProvisioningEnabled : undefined;
            resourceInputs["frontendEndpointId"] = state ? state.frontendEndpointId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as FrontdoorCustomHttpsConfigurationArgs | undefined;
            if ((!args || args.customHttpsProvisioningEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customHttpsProvisioningEnabled'");
            }
            if ((!args || args.frontendEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frontendEndpointId'");
            }
            resourceInputs["customHttpsConfiguration"] = args ? args.customHttpsConfiguration : undefined;
            resourceInputs["customHttpsProvisioningEnabled"] = args ? args.customHttpsProvisioningEnabled : undefined;
            resourceInputs["frontendEndpointId"] = args ? args.frontendEndpointId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FrontdoorCustomHttpsConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FrontdoorCustomHttpsConfiguration resources.
 */
export interface FrontdoorCustomHttpsConfigurationState {
    customHttpsConfiguration?: pulumi.Input<inputs.FrontdoorCustomHttpsConfigurationCustomHttpsConfiguration>;
    customHttpsProvisioningEnabled?: pulumi.Input<boolean>;
    frontendEndpointId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FrontdoorCustomHttpsConfigurationTimeouts>;
}

/**
 * The set of arguments for constructing a FrontdoorCustomHttpsConfiguration resource.
 */
export interface FrontdoorCustomHttpsConfigurationArgs {
    customHttpsConfiguration?: pulumi.Input<inputs.FrontdoorCustomHttpsConfigurationCustomHttpsConfiguration>;
    customHttpsProvisioningEnabled: pulumi.Input<boolean>;
    frontendEndpointId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FrontdoorCustomHttpsConfigurationTimeouts>;
}
