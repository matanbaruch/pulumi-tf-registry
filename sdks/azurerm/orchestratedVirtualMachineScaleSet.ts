// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OrchestratedVirtualMachineScaleSet extends pulumi.CustomResource {
    /**
     * Get an existing OrchestratedVirtualMachineScaleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrchestratedVirtualMachineScaleSetState, opts?: pulumi.CustomResourceOptions): OrchestratedVirtualMachineScaleSet {
        return new OrchestratedVirtualMachineScaleSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet';

    /**
     * Returns true if the given object is an instance of OrchestratedVirtualMachineScaleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrchestratedVirtualMachineScaleSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrchestratedVirtualMachineScaleSet.__pulumiType;
    }

    public readonly additionalCapabilities!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetAdditionalCapabilities | undefined>;
    public readonly automaticInstanceRepair!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair | undefined>;
    public readonly bootDiagnostics!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetBootDiagnostics | undefined>;
    public readonly capacityReservationGroupId!: pulumi.Output<string | undefined>;
    public readonly dataDisks!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetDataDisk[] | undefined>;
    public readonly encryptionAtHostEnabled!: pulumi.Output<boolean | undefined>;
    public readonly evictionPolicy!: pulumi.Output<string | undefined>;
    public readonly extensionOperationsEnabled!: pulumi.Output<boolean | undefined>;
    public readonly extensions!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetExtension[] | undefined>;
    public readonly extensionsTimeBudget!: pulumi.Output<string | undefined>;
    public readonly identity!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetIdentity | undefined>;
    public readonly instances!: pulumi.Output<number>;
    public readonly licenseType!: pulumi.Output<string | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly maxBidPrice!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkInterfaces!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetNetworkInterface[] | undefined>;
    public readonly osDisk!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetOsDisk | undefined>;
    public readonly osProfile!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetOsProfile | undefined>;
    public readonly plan!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetPlan | undefined>;
    public readonly platformFaultDomainCount!: pulumi.Output<number>;
    public readonly priority!: pulumi.Output<string | undefined>;
    public readonly priorityMix!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetPriorityMix | undefined>;
    public readonly proximityPlacementGroupId!: pulumi.Output<string | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly singlePlacementGroup!: pulumi.Output<boolean>;
    public readonly skuName!: pulumi.Output<string | undefined>;
    public readonly sourceImageId!: pulumi.Output<string | undefined>;
    public readonly sourceImageReference!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetSourceImageReference | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly terminationNotification!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetTerminationNotification | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.OrchestratedVirtualMachineScaleSetTimeouts | undefined>;
    public /*out*/ readonly uniqueId!: pulumi.Output<string>;
    public readonly userDataBase64!: pulumi.Output<string | undefined>;
    public readonly zoneBalance!: pulumi.Output<boolean | undefined>;
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a OrchestratedVirtualMachineScaleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrchestratedVirtualMachineScaleSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrchestratedVirtualMachineScaleSetArgs | OrchestratedVirtualMachineScaleSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrchestratedVirtualMachineScaleSetState | undefined;
            resourceInputs["additionalCapabilities"] = state ? state.additionalCapabilities : undefined;
            resourceInputs["automaticInstanceRepair"] = state ? state.automaticInstanceRepair : undefined;
            resourceInputs["bootDiagnostics"] = state ? state.bootDiagnostics : undefined;
            resourceInputs["capacityReservationGroupId"] = state ? state.capacityReservationGroupId : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["encryptionAtHostEnabled"] = state ? state.encryptionAtHostEnabled : undefined;
            resourceInputs["evictionPolicy"] = state ? state.evictionPolicy : undefined;
            resourceInputs["extensionOperationsEnabled"] = state ? state.extensionOperationsEnabled : undefined;
            resourceInputs["extensions"] = state ? state.extensions : undefined;
            resourceInputs["extensionsTimeBudget"] = state ? state.extensionsTimeBudget : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["instances"] = state ? state.instances : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maxBidPrice"] = state ? state.maxBidPrice : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["osDisk"] = state ? state.osDisk : undefined;
            resourceInputs["osProfile"] = state ? state.osProfile : undefined;
            resourceInputs["plan"] = state ? state.plan : undefined;
            resourceInputs["platformFaultDomainCount"] = state ? state.platformFaultDomainCount : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["priorityMix"] = state ? state.priorityMix : undefined;
            resourceInputs["proximityPlacementGroupId"] = state ? state.proximityPlacementGroupId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["singlePlacementGroup"] = state ? state.singlePlacementGroup : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["sourceImageId"] = state ? state.sourceImageId : undefined;
            resourceInputs["sourceImageReference"] = state ? state.sourceImageReference : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terminationNotification"] = state ? state.terminationNotification : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uniqueId"] = state ? state.uniqueId : undefined;
            resourceInputs["userDataBase64"] = state ? state.userDataBase64 : undefined;
            resourceInputs["zoneBalance"] = state ? state.zoneBalance : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as OrchestratedVirtualMachineScaleSetArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.platformFaultDomainCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platformFaultDomainCount'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["additionalCapabilities"] = args ? args.additionalCapabilities : undefined;
            resourceInputs["automaticInstanceRepair"] = args ? args.automaticInstanceRepair : undefined;
            resourceInputs["bootDiagnostics"] = args ? args.bootDiagnostics : undefined;
            resourceInputs["capacityReservationGroupId"] = args ? args.capacityReservationGroupId : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["encryptionAtHostEnabled"] = args ? args.encryptionAtHostEnabled : undefined;
            resourceInputs["evictionPolicy"] = args ? args.evictionPolicy : undefined;
            resourceInputs["extensionOperationsEnabled"] = args ? args.extensionOperationsEnabled : undefined;
            resourceInputs["extensions"] = args ? args.extensions : undefined;
            resourceInputs["extensionsTimeBudget"] = args ? args.extensionsTimeBudget : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["instances"] = args ? args.instances : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maxBidPrice"] = args ? args.maxBidPrice : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["osDisk"] = args ? args.osDisk : undefined;
            resourceInputs["osProfile"] = args ? args.osProfile : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["platformFaultDomainCount"] = args ? args.platformFaultDomainCount : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["priorityMix"] = args ? args.priorityMix : undefined;
            resourceInputs["proximityPlacementGroupId"] = args ? args.proximityPlacementGroupId : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["singlePlacementGroup"] = args ? args.singlePlacementGroup : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["sourceImageId"] = args ? args.sourceImageId : undefined;
            resourceInputs["sourceImageReference"] = args ? args.sourceImageReference : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["terminationNotification"] = args ? args.terminationNotification : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["userDataBase64"] = args?.userDataBase64 ? pulumi.secret(args.userDataBase64) : undefined;
            resourceInputs["zoneBalance"] = args ? args.zoneBalance : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["uniqueId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["userDataBase64"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OrchestratedVirtualMachineScaleSet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrchestratedVirtualMachineScaleSet resources.
 */
export interface OrchestratedVirtualMachineScaleSetState {
    additionalCapabilities?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetAdditionalCapabilities>;
    automaticInstanceRepair?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair>;
    bootDiagnostics?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetBootDiagnostics>;
    capacityReservationGroupId?: pulumi.Input<string>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetDataDisk>[]>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    evictionPolicy?: pulumi.Input<string>;
    extensionOperationsEnabled?: pulumi.Input<boolean>;
    extensions?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetExtension>[]>;
    extensionsTimeBudget?: pulumi.Input<string>;
    identity?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetIdentity>;
    instances?: pulumi.Input<number>;
    licenseType?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    maxBidPrice?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetNetworkInterface>[]>;
    osDisk?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsDisk>;
    osProfile?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfile>;
    plan?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetPlan>;
    platformFaultDomainCount?: pulumi.Input<number>;
    priority?: pulumi.Input<string>;
    priorityMix?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetPriorityMix>;
    proximityPlacementGroupId?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    singlePlacementGroup?: pulumi.Input<boolean>;
    skuName?: pulumi.Input<string>;
    sourceImageId?: pulumi.Input<string>;
    sourceImageReference?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetSourceImageReference>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    terminationNotification?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetTerminationNotification>;
    timeouts?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetTimeouts>;
    uniqueId?: pulumi.Input<string>;
    userDataBase64?: pulumi.Input<string>;
    zoneBalance?: pulumi.Input<boolean>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a OrchestratedVirtualMachineScaleSet resource.
 */
export interface OrchestratedVirtualMachineScaleSetArgs {
    additionalCapabilities?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetAdditionalCapabilities>;
    automaticInstanceRepair?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair>;
    bootDiagnostics?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetBootDiagnostics>;
    capacityReservationGroupId?: pulumi.Input<string>;
    dataDisks?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetDataDisk>[]>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    evictionPolicy?: pulumi.Input<string>;
    extensionOperationsEnabled?: pulumi.Input<boolean>;
    extensions?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetExtension>[]>;
    extensionsTimeBudget?: pulumi.Input<string>;
    identity?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetIdentity>;
    instances?: pulumi.Input<number>;
    licenseType?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    maxBidPrice?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetNetworkInterface>[]>;
    osDisk?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsDisk>;
    osProfile?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfile>;
    plan?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetPlan>;
    platformFaultDomainCount: pulumi.Input<number>;
    priority?: pulumi.Input<string>;
    priorityMix?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetPriorityMix>;
    proximityPlacementGroupId?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    singlePlacementGroup?: pulumi.Input<boolean>;
    skuName?: pulumi.Input<string>;
    sourceImageId?: pulumi.Input<string>;
    sourceImageReference?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetSourceImageReference>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    terminationNotification?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetTerminationNotification>;
    timeouts?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetTimeouts>;
    userDataBase64?: pulumi.Input<string>;
    zoneBalance?: pulumi.Input<boolean>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
