// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class StorageAccount extends pulumi.CustomResource {
    /**
     * Get an existing StorageAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageAccountState, opts?: pulumi.CustomResourceOptions): StorageAccount {
        return new StorageAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/storageAccount:StorageAccount';

    /**
     * Returns true if the given object is an instance of StorageAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageAccount.__pulumiType;
    }

    public readonly accessTier!: pulumi.Output<string>;
    public readonly accountKind!: pulumi.Output<string | undefined>;
    public readonly accountReplicationType!: pulumi.Output<string>;
    public readonly accountTier!: pulumi.Output<string>;
    public readonly allowNestedItemsToBePublic!: pulumi.Output<boolean | undefined>;
    public readonly allowedCopyScope!: pulumi.Output<string | undefined>;
    public readonly azureFilesAuthentication!: pulumi.Output<outputs.StorageAccountAzureFilesAuthentication | undefined>;
    public readonly blobProperties!: pulumi.Output<outputs.StorageAccountBlobProperties | undefined>;
    public readonly crossTenantReplicationEnabled!: pulumi.Output<boolean | undefined>;
    public readonly customDomain!: pulumi.Output<outputs.StorageAccountCustomDomain | undefined>;
    public readonly customerManagedKey!: pulumi.Output<outputs.StorageAccountCustomerManagedKey | undefined>;
    public readonly defaultToOauthAuthentication!: pulumi.Output<boolean | undefined>;
    public readonly dnsEndpointType!: pulumi.Output<string | undefined>;
    public readonly edgeZone!: pulumi.Output<string | undefined>;
    public readonly httpsTrafficOnlyEnabled!: pulumi.Output<boolean | undefined>;
    public readonly identity!: pulumi.Output<outputs.StorageAccountIdentity | undefined>;
    public readonly immutabilityPolicy!: pulumi.Output<outputs.StorageAccountImmutabilityPolicy | undefined>;
    public readonly infrastructureEncryptionEnabled!: pulumi.Output<boolean | undefined>;
    public readonly isHnsEnabled!: pulumi.Output<boolean | undefined>;
    public readonly largeFileShareEnabled!: pulumi.Output<boolean>;
    public readonly localUserEnabled!: pulumi.Output<boolean | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly minTlsVersion!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkRules!: pulumi.Output<outputs.StorageAccountNetworkRules | undefined>;
    public readonly nfsv3Enabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly primaryAccessKey!: pulumi.Output<string>;
    public /*out*/ readonly primaryBlobConnectionString!: pulumi.Output<string>;
    public /*out*/ readonly primaryBlobEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryBlobHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryBlobInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryBlobInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryBlobMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryBlobMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryConnectionString!: pulumi.Output<string>;
    public /*out*/ readonly primaryDfsEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryDfsHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryDfsInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryDfsInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryDfsMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryDfsMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryFileEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryFileHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryFileInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryFileInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryFileMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryFileMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryLocation!: pulumi.Output<string>;
    public /*out*/ readonly primaryQueueEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryQueueHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryQueueMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryQueueMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryTableEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryTableHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryTableMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryTableMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryWebEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryWebHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryWebInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryWebInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly primaryWebMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly primaryWebMicrosoftHost!: pulumi.Output<string>;
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    public readonly queueEncryptionKeyType!: pulumi.Output<string | undefined>;
    public readonly queueProperties!: pulumi.Output<outputs.StorageAccountQueueProperties | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly routing!: pulumi.Output<outputs.StorageAccountRouting | undefined>;
    public readonly sasPolicy!: pulumi.Output<outputs.StorageAccountSasPolicy | undefined>;
    public /*out*/ readonly secondaryAccessKey!: pulumi.Output<string>;
    public /*out*/ readonly secondaryBlobConnectionString!: pulumi.Output<string>;
    public /*out*/ readonly secondaryBlobEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryBlobHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryBlobInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryBlobInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryBlobMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryBlobMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryConnectionString!: pulumi.Output<string>;
    public /*out*/ readonly secondaryDfsEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryDfsHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryDfsInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryDfsInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryDfsMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryDfsMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryFileEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryFileHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryFileInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryFileInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryFileMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryFileMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryLocation!: pulumi.Output<string>;
    public /*out*/ readonly secondaryQueueEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryQueueHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryQueueMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryQueueMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryTableEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryTableHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryTableMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryTableMicrosoftHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryWebEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryWebHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryWebInternetEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryWebInternetHost!: pulumi.Output<string>;
    public /*out*/ readonly secondaryWebMicrosoftEndpoint!: pulumi.Output<string>;
    public /*out*/ readonly secondaryWebMicrosoftHost!: pulumi.Output<string>;
    public readonly sftpEnabled!: pulumi.Output<boolean | undefined>;
    public readonly shareProperties!: pulumi.Output<outputs.StorageAccountShareProperties | undefined>;
    public readonly sharedAccessKeyEnabled!: pulumi.Output<boolean | undefined>;
    public readonly staticWebsite!: pulumi.Output<outputs.StorageAccountStaticWebsite | undefined>;
    public readonly tableEncryptionKeyType!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.StorageAccountTimeouts | undefined>;

    /**
     * Create a StorageAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageAccountArgs | StorageAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageAccountState | undefined;
            resourceInputs["accessTier"] = state ? state.accessTier : undefined;
            resourceInputs["accountKind"] = state ? state.accountKind : undefined;
            resourceInputs["accountReplicationType"] = state ? state.accountReplicationType : undefined;
            resourceInputs["accountTier"] = state ? state.accountTier : undefined;
            resourceInputs["allowNestedItemsToBePublic"] = state ? state.allowNestedItemsToBePublic : undefined;
            resourceInputs["allowedCopyScope"] = state ? state.allowedCopyScope : undefined;
            resourceInputs["azureFilesAuthentication"] = state ? state.azureFilesAuthentication : undefined;
            resourceInputs["blobProperties"] = state ? state.blobProperties : undefined;
            resourceInputs["crossTenantReplicationEnabled"] = state ? state.crossTenantReplicationEnabled : undefined;
            resourceInputs["customDomain"] = state ? state.customDomain : undefined;
            resourceInputs["customerManagedKey"] = state ? state.customerManagedKey : undefined;
            resourceInputs["defaultToOauthAuthentication"] = state ? state.defaultToOauthAuthentication : undefined;
            resourceInputs["dnsEndpointType"] = state ? state.dnsEndpointType : undefined;
            resourceInputs["edgeZone"] = state ? state.edgeZone : undefined;
            resourceInputs["httpsTrafficOnlyEnabled"] = state ? state.httpsTrafficOnlyEnabled : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["immutabilityPolicy"] = state ? state.immutabilityPolicy : undefined;
            resourceInputs["infrastructureEncryptionEnabled"] = state ? state.infrastructureEncryptionEnabled : undefined;
            resourceInputs["isHnsEnabled"] = state ? state.isHnsEnabled : undefined;
            resourceInputs["largeFileShareEnabled"] = state ? state.largeFileShareEnabled : undefined;
            resourceInputs["localUserEnabled"] = state ? state.localUserEnabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["minTlsVersion"] = state ? state.minTlsVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkRules"] = state ? state.networkRules : undefined;
            resourceInputs["nfsv3Enabled"] = state ? state.nfsv3Enabled : undefined;
            resourceInputs["primaryAccessKey"] = state ? state.primaryAccessKey : undefined;
            resourceInputs["primaryBlobConnectionString"] = state ? state.primaryBlobConnectionString : undefined;
            resourceInputs["primaryBlobEndpoint"] = state ? state.primaryBlobEndpoint : undefined;
            resourceInputs["primaryBlobHost"] = state ? state.primaryBlobHost : undefined;
            resourceInputs["primaryBlobInternetEndpoint"] = state ? state.primaryBlobInternetEndpoint : undefined;
            resourceInputs["primaryBlobInternetHost"] = state ? state.primaryBlobInternetHost : undefined;
            resourceInputs["primaryBlobMicrosoftEndpoint"] = state ? state.primaryBlobMicrosoftEndpoint : undefined;
            resourceInputs["primaryBlobMicrosoftHost"] = state ? state.primaryBlobMicrosoftHost : undefined;
            resourceInputs["primaryConnectionString"] = state ? state.primaryConnectionString : undefined;
            resourceInputs["primaryDfsEndpoint"] = state ? state.primaryDfsEndpoint : undefined;
            resourceInputs["primaryDfsHost"] = state ? state.primaryDfsHost : undefined;
            resourceInputs["primaryDfsInternetEndpoint"] = state ? state.primaryDfsInternetEndpoint : undefined;
            resourceInputs["primaryDfsInternetHost"] = state ? state.primaryDfsInternetHost : undefined;
            resourceInputs["primaryDfsMicrosoftEndpoint"] = state ? state.primaryDfsMicrosoftEndpoint : undefined;
            resourceInputs["primaryDfsMicrosoftHost"] = state ? state.primaryDfsMicrosoftHost : undefined;
            resourceInputs["primaryFileEndpoint"] = state ? state.primaryFileEndpoint : undefined;
            resourceInputs["primaryFileHost"] = state ? state.primaryFileHost : undefined;
            resourceInputs["primaryFileInternetEndpoint"] = state ? state.primaryFileInternetEndpoint : undefined;
            resourceInputs["primaryFileInternetHost"] = state ? state.primaryFileInternetHost : undefined;
            resourceInputs["primaryFileMicrosoftEndpoint"] = state ? state.primaryFileMicrosoftEndpoint : undefined;
            resourceInputs["primaryFileMicrosoftHost"] = state ? state.primaryFileMicrosoftHost : undefined;
            resourceInputs["primaryLocation"] = state ? state.primaryLocation : undefined;
            resourceInputs["primaryQueueEndpoint"] = state ? state.primaryQueueEndpoint : undefined;
            resourceInputs["primaryQueueHost"] = state ? state.primaryQueueHost : undefined;
            resourceInputs["primaryQueueMicrosoftEndpoint"] = state ? state.primaryQueueMicrosoftEndpoint : undefined;
            resourceInputs["primaryQueueMicrosoftHost"] = state ? state.primaryQueueMicrosoftHost : undefined;
            resourceInputs["primaryTableEndpoint"] = state ? state.primaryTableEndpoint : undefined;
            resourceInputs["primaryTableHost"] = state ? state.primaryTableHost : undefined;
            resourceInputs["primaryTableMicrosoftEndpoint"] = state ? state.primaryTableMicrosoftEndpoint : undefined;
            resourceInputs["primaryTableMicrosoftHost"] = state ? state.primaryTableMicrosoftHost : undefined;
            resourceInputs["primaryWebEndpoint"] = state ? state.primaryWebEndpoint : undefined;
            resourceInputs["primaryWebHost"] = state ? state.primaryWebHost : undefined;
            resourceInputs["primaryWebInternetEndpoint"] = state ? state.primaryWebInternetEndpoint : undefined;
            resourceInputs["primaryWebInternetHost"] = state ? state.primaryWebInternetHost : undefined;
            resourceInputs["primaryWebMicrosoftEndpoint"] = state ? state.primaryWebMicrosoftEndpoint : undefined;
            resourceInputs["primaryWebMicrosoftHost"] = state ? state.primaryWebMicrosoftHost : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["queueEncryptionKeyType"] = state ? state.queueEncryptionKeyType : undefined;
            resourceInputs["queueProperties"] = state ? state.queueProperties : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["routing"] = state ? state.routing : undefined;
            resourceInputs["sasPolicy"] = state ? state.sasPolicy : undefined;
            resourceInputs["secondaryAccessKey"] = state ? state.secondaryAccessKey : undefined;
            resourceInputs["secondaryBlobConnectionString"] = state ? state.secondaryBlobConnectionString : undefined;
            resourceInputs["secondaryBlobEndpoint"] = state ? state.secondaryBlobEndpoint : undefined;
            resourceInputs["secondaryBlobHost"] = state ? state.secondaryBlobHost : undefined;
            resourceInputs["secondaryBlobInternetEndpoint"] = state ? state.secondaryBlobInternetEndpoint : undefined;
            resourceInputs["secondaryBlobInternetHost"] = state ? state.secondaryBlobInternetHost : undefined;
            resourceInputs["secondaryBlobMicrosoftEndpoint"] = state ? state.secondaryBlobMicrosoftEndpoint : undefined;
            resourceInputs["secondaryBlobMicrosoftHost"] = state ? state.secondaryBlobMicrosoftHost : undefined;
            resourceInputs["secondaryConnectionString"] = state ? state.secondaryConnectionString : undefined;
            resourceInputs["secondaryDfsEndpoint"] = state ? state.secondaryDfsEndpoint : undefined;
            resourceInputs["secondaryDfsHost"] = state ? state.secondaryDfsHost : undefined;
            resourceInputs["secondaryDfsInternetEndpoint"] = state ? state.secondaryDfsInternetEndpoint : undefined;
            resourceInputs["secondaryDfsInternetHost"] = state ? state.secondaryDfsInternetHost : undefined;
            resourceInputs["secondaryDfsMicrosoftEndpoint"] = state ? state.secondaryDfsMicrosoftEndpoint : undefined;
            resourceInputs["secondaryDfsMicrosoftHost"] = state ? state.secondaryDfsMicrosoftHost : undefined;
            resourceInputs["secondaryFileEndpoint"] = state ? state.secondaryFileEndpoint : undefined;
            resourceInputs["secondaryFileHost"] = state ? state.secondaryFileHost : undefined;
            resourceInputs["secondaryFileInternetEndpoint"] = state ? state.secondaryFileInternetEndpoint : undefined;
            resourceInputs["secondaryFileInternetHost"] = state ? state.secondaryFileInternetHost : undefined;
            resourceInputs["secondaryFileMicrosoftEndpoint"] = state ? state.secondaryFileMicrosoftEndpoint : undefined;
            resourceInputs["secondaryFileMicrosoftHost"] = state ? state.secondaryFileMicrosoftHost : undefined;
            resourceInputs["secondaryLocation"] = state ? state.secondaryLocation : undefined;
            resourceInputs["secondaryQueueEndpoint"] = state ? state.secondaryQueueEndpoint : undefined;
            resourceInputs["secondaryQueueHost"] = state ? state.secondaryQueueHost : undefined;
            resourceInputs["secondaryQueueMicrosoftEndpoint"] = state ? state.secondaryQueueMicrosoftEndpoint : undefined;
            resourceInputs["secondaryQueueMicrosoftHost"] = state ? state.secondaryQueueMicrosoftHost : undefined;
            resourceInputs["secondaryTableEndpoint"] = state ? state.secondaryTableEndpoint : undefined;
            resourceInputs["secondaryTableHost"] = state ? state.secondaryTableHost : undefined;
            resourceInputs["secondaryTableMicrosoftEndpoint"] = state ? state.secondaryTableMicrosoftEndpoint : undefined;
            resourceInputs["secondaryTableMicrosoftHost"] = state ? state.secondaryTableMicrosoftHost : undefined;
            resourceInputs["secondaryWebEndpoint"] = state ? state.secondaryWebEndpoint : undefined;
            resourceInputs["secondaryWebHost"] = state ? state.secondaryWebHost : undefined;
            resourceInputs["secondaryWebInternetEndpoint"] = state ? state.secondaryWebInternetEndpoint : undefined;
            resourceInputs["secondaryWebInternetHost"] = state ? state.secondaryWebInternetHost : undefined;
            resourceInputs["secondaryWebMicrosoftEndpoint"] = state ? state.secondaryWebMicrosoftEndpoint : undefined;
            resourceInputs["secondaryWebMicrosoftHost"] = state ? state.secondaryWebMicrosoftHost : undefined;
            resourceInputs["sftpEnabled"] = state ? state.sftpEnabled : undefined;
            resourceInputs["shareProperties"] = state ? state.shareProperties : undefined;
            resourceInputs["sharedAccessKeyEnabled"] = state ? state.sharedAccessKeyEnabled : undefined;
            resourceInputs["staticWebsite"] = state ? state.staticWebsite : undefined;
            resourceInputs["tableEncryptionKeyType"] = state ? state.tableEncryptionKeyType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as StorageAccountArgs | undefined;
            if ((!args || args.accountReplicationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountReplicationType'");
            }
            if ((!args || args.accountTier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountTier'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["accessTier"] = args ? args.accessTier : undefined;
            resourceInputs["accountKind"] = args ? args.accountKind : undefined;
            resourceInputs["accountReplicationType"] = args ? args.accountReplicationType : undefined;
            resourceInputs["accountTier"] = args ? args.accountTier : undefined;
            resourceInputs["allowNestedItemsToBePublic"] = args ? args.allowNestedItemsToBePublic : undefined;
            resourceInputs["allowedCopyScope"] = args ? args.allowedCopyScope : undefined;
            resourceInputs["azureFilesAuthentication"] = args ? args.azureFilesAuthentication : undefined;
            resourceInputs["blobProperties"] = args ? args.blobProperties : undefined;
            resourceInputs["crossTenantReplicationEnabled"] = args ? args.crossTenantReplicationEnabled : undefined;
            resourceInputs["customDomain"] = args ? args.customDomain : undefined;
            resourceInputs["customerManagedKey"] = args ? args.customerManagedKey : undefined;
            resourceInputs["defaultToOauthAuthentication"] = args ? args.defaultToOauthAuthentication : undefined;
            resourceInputs["dnsEndpointType"] = args ? args.dnsEndpointType : undefined;
            resourceInputs["edgeZone"] = args ? args.edgeZone : undefined;
            resourceInputs["httpsTrafficOnlyEnabled"] = args ? args.httpsTrafficOnlyEnabled : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["immutabilityPolicy"] = args ? args.immutabilityPolicy : undefined;
            resourceInputs["infrastructureEncryptionEnabled"] = args ? args.infrastructureEncryptionEnabled : undefined;
            resourceInputs["isHnsEnabled"] = args ? args.isHnsEnabled : undefined;
            resourceInputs["largeFileShareEnabled"] = args ? args.largeFileShareEnabled : undefined;
            resourceInputs["localUserEnabled"] = args ? args.localUserEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["minTlsVersion"] = args ? args.minTlsVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkRules"] = args ? args.networkRules : undefined;
            resourceInputs["nfsv3Enabled"] = args ? args.nfsv3Enabled : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["queueEncryptionKeyType"] = args ? args.queueEncryptionKeyType : undefined;
            resourceInputs["queueProperties"] = args ? args.queueProperties : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["routing"] = args ? args.routing : undefined;
            resourceInputs["sasPolicy"] = args ? args.sasPolicy : undefined;
            resourceInputs["sftpEnabled"] = args ? args.sftpEnabled : undefined;
            resourceInputs["shareProperties"] = args ? args.shareProperties : undefined;
            resourceInputs["sharedAccessKeyEnabled"] = args ? args.sharedAccessKeyEnabled : undefined;
            resourceInputs["staticWebsite"] = args ? args.staticWebsite : undefined;
            resourceInputs["tableEncryptionKeyType"] = args ? args.tableEncryptionKeyType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["primaryAccessKey"] = undefined /*out*/;
            resourceInputs["primaryBlobConnectionString"] = undefined /*out*/;
            resourceInputs["primaryBlobEndpoint"] = undefined /*out*/;
            resourceInputs["primaryBlobHost"] = undefined /*out*/;
            resourceInputs["primaryBlobInternetEndpoint"] = undefined /*out*/;
            resourceInputs["primaryBlobInternetHost"] = undefined /*out*/;
            resourceInputs["primaryBlobMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["primaryBlobMicrosoftHost"] = undefined /*out*/;
            resourceInputs["primaryConnectionString"] = undefined /*out*/;
            resourceInputs["primaryDfsEndpoint"] = undefined /*out*/;
            resourceInputs["primaryDfsHost"] = undefined /*out*/;
            resourceInputs["primaryDfsInternetEndpoint"] = undefined /*out*/;
            resourceInputs["primaryDfsInternetHost"] = undefined /*out*/;
            resourceInputs["primaryDfsMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["primaryDfsMicrosoftHost"] = undefined /*out*/;
            resourceInputs["primaryFileEndpoint"] = undefined /*out*/;
            resourceInputs["primaryFileHost"] = undefined /*out*/;
            resourceInputs["primaryFileInternetEndpoint"] = undefined /*out*/;
            resourceInputs["primaryFileInternetHost"] = undefined /*out*/;
            resourceInputs["primaryFileMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["primaryFileMicrosoftHost"] = undefined /*out*/;
            resourceInputs["primaryLocation"] = undefined /*out*/;
            resourceInputs["primaryQueueEndpoint"] = undefined /*out*/;
            resourceInputs["primaryQueueHost"] = undefined /*out*/;
            resourceInputs["primaryQueueMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["primaryQueueMicrosoftHost"] = undefined /*out*/;
            resourceInputs["primaryTableEndpoint"] = undefined /*out*/;
            resourceInputs["primaryTableHost"] = undefined /*out*/;
            resourceInputs["primaryTableMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["primaryTableMicrosoftHost"] = undefined /*out*/;
            resourceInputs["primaryWebEndpoint"] = undefined /*out*/;
            resourceInputs["primaryWebHost"] = undefined /*out*/;
            resourceInputs["primaryWebInternetEndpoint"] = undefined /*out*/;
            resourceInputs["primaryWebInternetHost"] = undefined /*out*/;
            resourceInputs["primaryWebMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["primaryWebMicrosoftHost"] = undefined /*out*/;
            resourceInputs["secondaryAccessKey"] = undefined /*out*/;
            resourceInputs["secondaryBlobConnectionString"] = undefined /*out*/;
            resourceInputs["secondaryBlobEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryBlobHost"] = undefined /*out*/;
            resourceInputs["secondaryBlobInternetEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryBlobInternetHost"] = undefined /*out*/;
            resourceInputs["secondaryBlobMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryBlobMicrosoftHost"] = undefined /*out*/;
            resourceInputs["secondaryConnectionString"] = undefined /*out*/;
            resourceInputs["secondaryDfsEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryDfsHost"] = undefined /*out*/;
            resourceInputs["secondaryDfsInternetEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryDfsInternetHost"] = undefined /*out*/;
            resourceInputs["secondaryDfsMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryDfsMicrosoftHost"] = undefined /*out*/;
            resourceInputs["secondaryFileEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryFileHost"] = undefined /*out*/;
            resourceInputs["secondaryFileInternetEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryFileInternetHost"] = undefined /*out*/;
            resourceInputs["secondaryFileMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryFileMicrosoftHost"] = undefined /*out*/;
            resourceInputs["secondaryLocation"] = undefined /*out*/;
            resourceInputs["secondaryQueueEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryQueueHost"] = undefined /*out*/;
            resourceInputs["secondaryQueueMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryQueueMicrosoftHost"] = undefined /*out*/;
            resourceInputs["secondaryTableEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryTableHost"] = undefined /*out*/;
            resourceInputs["secondaryTableMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryTableMicrosoftHost"] = undefined /*out*/;
            resourceInputs["secondaryWebEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryWebHost"] = undefined /*out*/;
            resourceInputs["secondaryWebInternetEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryWebInternetHost"] = undefined /*out*/;
            resourceInputs["secondaryWebMicrosoftEndpoint"] = undefined /*out*/;
            resourceInputs["secondaryWebMicrosoftHost"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["primaryAccessKey", "primaryBlobConnectionString", "primaryConnectionString", "secondaryAccessKey", "secondaryBlobConnectionString", "secondaryConnectionString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(StorageAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering StorageAccount resources.
 */
export interface StorageAccountState {
    accessTier?: pulumi.Input<string>;
    accountKind?: pulumi.Input<string>;
    accountReplicationType?: pulumi.Input<string>;
    accountTier?: pulumi.Input<string>;
    allowNestedItemsToBePublic?: pulumi.Input<boolean>;
    allowedCopyScope?: pulumi.Input<string>;
    azureFilesAuthentication?: pulumi.Input<inputs.StorageAccountAzureFilesAuthentication>;
    blobProperties?: pulumi.Input<inputs.StorageAccountBlobProperties>;
    crossTenantReplicationEnabled?: pulumi.Input<boolean>;
    customDomain?: pulumi.Input<inputs.StorageAccountCustomDomain>;
    customerManagedKey?: pulumi.Input<inputs.StorageAccountCustomerManagedKey>;
    defaultToOauthAuthentication?: pulumi.Input<boolean>;
    dnsEndpointType?: pulumi.Input<string>;
    edgeZone?: pulumi.Input<string>;
    httpsTrafficOnlyEnabled?: pulumi.Input<boolean>;
    identity?: pulumi.Input<inputs.StorageAccountIdentity>;
    immutabilityPolicy?: pulumi.Input<inputs.StorageAccountImmutabilityPolicy>;
    infrastructureEncryptionEnabled?: pulumi.Input<boolean>;
    isHnsEnabled?: pulumi.Input<boolean>;
    largeFileShareEnabled?: pulumi.Input<boolean>;
    localUserEnabled?: pulumi.Input<boolean>;
    location?: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkRules?: pulumi.Input<inputs.StorageAccountNetworkRules>;
    nfsv3Enabled?: pulumi.Input<boolean>;
    primaryAccessKey?: pulumi.Input<string>;
    primaryBlobConnectionString?: pulumi.Input<string>;
    primaryBlobEndpoint?: pulumi.Input<string>;
    primaryBlobHost?: pulumi.Input<string>;
    primaryBlobInternetEndpoint?: pulumi.Input<string>;
    primaryBlobInternetHost?: pulumi.Input<string>;
    primaryBlobMicrosoftEndpoint?: pulumi.Input<string>;
    primaryBlobMicrosoftHost?: pulumi.Input<string>;
    primaryConnectionString?: pulumi.Input<string>;
    primaryDfsEndpoint?: pulumi.Input<string>;
    primaryDfsHost?: pulumi.Input<string>;
    primaryDfsInternetEndpoint?: pulumi.Input<string>;
    primaryDfsInternetHost?: pulumi.Input<string>;
    primaryDfsMicrosoftEndpoint?: pulumi.Input<string>;
    primaryDfsMicrosoftHost?: pulumi.Input<string>;
    primaryFileEndpoint?: pulumi.Input<string>;
    primaryFileHost?: pulumi.Input<string>;
    primaryFileInternetEndpoint?: pulumi.Input<string>;
    primaryFileInternetHost?: pulumi.Input<string>;
    primaryFileMicrosoftEndpoint?: pulumi.Input<string>;
    primaryFileMicrosoftHost?: pulumi.Input<string>;
    primaryLocation?: pulumi.Input<string>;
    primaryQueueEndpoint?: pulumi.Input<string>;
    primaryQueueHost?: pulumi.Input<string>;
    primaryQueueMicrosoftEndpoint?: pulumi.Input<string>;
    primaryQueueMicrosoftHost?: pulumi.Input<string>;
    primaryTableEndpoint?: pulumi.Input<string>;
    primaryTableHost?: pulumi.Input<string>;
    primaryTableMicrosoftEndpoint?: pulumi.Input<string>;
    primaryTableMicrosoftHost?: pulumi.Input<string>;
    primaryWebEndpoint?: pulumi.Input<string>;
    primaryWebHost?: pulumi.Input<string>;
    primaryWebInternetEndpoint?: pulumi.Input<string>;
    primaryWebInternetHost?: pulumi.Input<string>;
    primaryWebMicrosoftEndpoint?: pulumi.Input<string>;
    primaryWebMicrosoftHost?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    queueEncryptionKeyType?: pulumi.Input<string>;
    queueProperties?: pulumi.Input<inputs.StorageAccountQueueProperties>;
    resourceGroupName?: pulumi.Input<string>;
    routing?: pulumi.Input<inputs.StorageAccountRouting>;
    sasPolicy?: pulumi.Input<inputs.StorageAccountSasPolicy>;
    secondaryAccessKey?: pulumi.Input<string>;
    secondaryBlobConnectionString?: pulumi.Input<string>;
    secondaryBlobEndpoint?: pulumi.Input<string>;
    secondaryBlobHost?: pulumi.Input<string>;
    secondaryBlobInternetEndpoint?: pulumi.Input<string>;
    secondaryBlobInternetHost?: pulumi.Input<string>;
    secondaryBlobMicrosoftEndpoint?: pulumi.Input<string>;
    secondaryBlobMicrosoftHost?: pulumi.Input<string>;
    secondaryConnectionString?: pulumi.Input<string>;
    secondaryDfsEndpoint?: pulumi.Input<string>;
    secondaryDfsHost?: pulumi.Input<string>;
    secondaryDfsInternetEndpoint?: pulumi.Input<string>;
    secondaryDfsInternetHost?: pulumi.Input<string>;
    secondaryDfsMicrosoftEndpoint?: pulumi.Input<string>;
    secondaryDfsMicrosoftHost?: pulumi.Input<string>;
    secondaryFileEndpoint?: pulumi.Input<string>;
    secondaryFileHost?: pulumi.Input<string>;
    secondaryFileInternetEndpoint?: pulumi.Input<string>;
    secondaryFileInternetHost?: pulumi.Input<string>;
    secondaryFileMicrosoftEndpoint?: pulumi.Input<string>;
    secondaryFileMicrosoftHost?: pulumi.Input<string>;
    secondaryLocation?: pulumi.Input<string>;
    secondaryQueueEndpoint?: pulumi.Input<string>;
    secondaryQueueHost?: pulumi.Input<string>;
    secondaryQueueMicrosoftEndpoint?: pulumi.Input<string>;
    secondaryQueueMicrosoftHost?: pulumi.Input<string>;
    secondaryTableEndpoint?: pulumi.Input<string>;
    secondaryTableHost?: pulumi.Input<string>;
    secondaryTableMicrosoftEndpoint?: pulumi.Input<string>;
    secondaryTableMicrosoftHost?: pulumi.Input<string>;
    secondaryWebEndpoint?: pulumi.Input<string>;
    secondaryWebHost?: pulumi.Input<string>;
    secondaryWebInternetEndpoint?: pulumi.Input<string>;
    secondaryWebInternetHost?: pulumi.Input<string>;
    secondaryWebMicrosoftEndpoint?: pulumi.Input<string>;
    secondaryWebMicrosoftHost?: pulumi.Input<string>;
    sftpEnabled?: pulumi.Input<boolean>;
    shareProperties?: pulumi.Input<inputs.StorageAccountShareProperties>;
    sharedAccessKeyEnabled?: pulumi.Input<boolean>;
    staticWebsite?: pulumi.Input<inputs.StorageAccountStaticWebsite>;
    tableEncryptionKeyType?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.StorageAccountTimeouts>;
}

/**
 * The set of arguments for constructing a StorageAccount resource.
 */
export interface StorageAccountArgs {
    accessTier?: pulumi.Input<string>;
    accountKind?: pulumi.Input<string>;
    accountReplicationType: pulumi.Input<string>;
    accountTier: pulumi.Input<string>;
    allowNestedItemsToBePublic?: pulumi.Input<boolean>;
    allowedCopyScope?: pulumi.Input<string>;
    azureFilesAuthentication?: pulumi.Input<inputs.StorageAccountAzureFilesAuthentication>;
    blobProperties?: pulumi.Input<inputs.StorageAccountBlobProperties>;
    crossTenantReplicationEnabled?: pulumi.Input<boolean>;
    customDomain?: pulumi.Input<inputs.StorageAccountCustomDomain>;
    customerManagedKey?: pulumi.Input<inputs.StorageAccountCustomerManagedKey>;
    defaultToOauthAuthentication?: pulumi.Input<boolean>;
    dnsEndpointType?: pulumi.Input<string>;
    edgeZone?: pulumi.Input<string>;
    httpsTrafficOnlyEnabled?: pulumi.Input<boolean>;
    identity?: pulumi.Input<inputs.StorageAccountIdentity>;
    immutabilityPolicy?: pulumi.Input<inputs.StorageAccountImmutabilityPolicy>;
    infrastructureEncryptionEnabled?: pulumi.Input<boolean>;
    isHnsEnabled?: pulumi.Input<boolean>;
    largeFileShareEnabled?: pulumi.Input<boolean>;
    localUserEnabled?: pulumi.Input<boolean>;
    location: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkRules?: pulumi.Input<inputs.StorageAccountNetworkRules>;
    nfsv3Enabled?: pulumi.Input<boolean>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    queueEncryptionKeyType?: pulumi.Input<string>;
    queueProperties?: pulumi.Input<inputs.StorageAccountQueueProperties>;
    resourceGroupName: pulumi.Input<string>;
    routing?: pulumi.Input<inputs.StorageAccountRouting>;
    sasPolicy?: pulumi.Input<inputs.StorageAccountSasPolicy>;
    sftpEnabled?: pulumi.Input<boolean>;
    shareProperties?: pulumi.Input<inputs.StorageAccountShareProperties>;
    sharedAccessKeyEnabled?: pulumi.Input<boolean>;
    staticWebsite?: pulumi.Input<inputs.StorageAccountStaticWebsite>;
    tableEncryptionKeyType?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.StorageAccountTimeouts>;
}
