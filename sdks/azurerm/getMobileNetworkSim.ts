// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMobileNetworkSim(args: GetMobileNetworkSimArgs, opts?: pulumi.InvokeOptions): Promise<GetMobileNetworkSimResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getMobileNetworkSim:getMobileNetworkSim", {
        "id": args.id,
        "mobileNetworkSimGroupId": args.mobileNetworkSimGroupId,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMobileNetworkSim.
 */
export interface GetMobileNetworkSimArgs {
    id?: string;
    mobileNetworkSimGroupId: string;
    name: string;
    timeouts?: inputs.GetMobileNetworkSimTimeouts;
}

/**
 * A collection of values returned by getMobileNetworkSim.
 */
export interface GetMobileNetworkSimResult {
    readonly deviceType: string;
    readonly id: string;
    readonly integratedCircuitCardIdentifier: string;
    readonly internationalMobileSubscriberIdentity: string;
    readonly mobileNetworkSimGroupId: string;
    readonly name: string;
    readonly simPolicyId: string;
    readonly simState: string;
    readonly staticIpConfigurations: outputs.GetMobileNetworkSimStaticIpConfiguration[];
    readonly timeouts?: outputs.GetMobileNetworkSimTimeouts;
    readonly vendorKeyFingerprint: string;
    readonly vendorName: string;
}
export function getMobileNetworkSimOutput(args: GetMobileNetworkSimOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMobileNetworkSimResult> {
    return pulumi.output(args).apply((a: any) => getMobileNetworkSim(a, opts))
}

/**
 * A collection of arguments for invoking getMobileNetworkSim.
 */
export interface GetMobileNetworkSimOutputArgs {
    id?: pulumi.Input<string>;
    mobileNetworkSimGroupId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetMobileNetworkSimTimeoutsArgs>;
}
