// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getActiveDirectoryDomainService(args: GetActiveDirectoryDomainServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetActiveDirectoryDomainServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getActiveDirectoryDomainService:getActiveDirectoryDomainService", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "tags": args.tags,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getActiveDirectoryDomainService.
 */
export interface GetActiveDirectoryDomainServiceArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    tags?: {[key: string]: string};
    timeouts?: inputs.GetActiveDirectoryDomainServiceTimeouts;
}

/**
 * A collection of values returned by getActiveDirectoryDomainService.
 */
export interface GetActiveDirectoryDomainServiceResult {
    readonly deploymentId: string;
    readonly domainConfigurationType: string;
    readonly domainName: string;
    readonly filteredSyncEnabled: boolean;
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly notifications: outputs.GetActiveDirectoryDomainServiceNotification[];
    readonly replicaSets: outputs.GetActiveDirectoryDomainServiceReplicaSet[];
    readonly resourceGroupName: string;
    readonly resourceId: string;
    readonly secureLdaps: outputs.GetActiveDirectoryDomainServiceSecureLdap[];
    readonly securities: outputs.GetActiveDirectoryDomainServiceSecurity[];
    readonly sku: string;
    readonly syncOwner: string;
    readonly tags?: {[key: string]: string};
    readonly tenantId: string;
    readonly timeouts?: outputs.GetActiveDirectoryDomainServiceTimeouts;
    readonly version: number;
}
export function getActiveDirectoryDomainServiceOutput(args: GetActiveDirectoryDomainServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActiveDirectoryDomainServiceResult> {
    return pulumi.output(args).apply((a: any) => getActiveDirectoryDomainService(a, opts))
}

/**
 * A collection of arguments for invoking getActiveDirectoryDomainService.
 */
export interface GetActiveDirectoryDomainServiceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetActiveDirectoryDomainServiceTimeoutsArgs>;
}
