// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageContainers(args: GetStorageContainersArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageContainersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getStorageContainers:getStorageContainers", {
        "id": args.id,
        "namePrefix": args.namePrefix,
        "storageAccountId": args.storageAccountId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageContainers.
 */
export interface GetStorageContainersArgs {
    id?: string;
    namePrefix?: string;
    storageAccountId: string;
    timeouts?: inputs.GetStorageContainersTimeouts;
}

/**
 * A collection of values returned by getStorageContainers.
 */
export interface GetStorageContainersResult {
    readonly containers: outputs.GetStorageContainersContainer[];
    readonly id: string;
    readonly namePrefix?: string;
    readonly storageAccountId: string;
    readonly timeouts?: outputs.GetStorageContainersTimeouts;
}
export function getStorageContainersOutput(args: GetStorageContainersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageContainersResult> {
    return pulumi.output(args).apply((a: any) => getStorageContainers(a, opts))
}

/**
 * A collection of arguments for invoking getStorageContainers.
 */
export interface GetStorageContainersOutputArgs {
    id?: pulumi.Input<string>;
    namePrefix?: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetStorageContainersTimeoutsArgs>;
}
