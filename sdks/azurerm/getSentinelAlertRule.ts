// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSentinelAlertRule(args: GetSentinelAlertRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetSentinelAlertRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getSentinelAlertRule:getSentinelAlertRule", {
        "id": args.id,
        "logAnalyticsWorkspaceId": args.logAnalyticsWorkspaceId,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSentinelAlertRule.
 */
export interface GetSentinelAlertRuleArgs {
    id?: string;
    logAnalyticsWorkspaceId: string;
    name: string;
    timeouts?: inputs.GetSentinelAlertRuleTimeouts;
}

/**
 * A collection of values returned by getSentinelAlertRule.
 */
export interface GetSentinelAlertRuleResult {
    readonly id: string;
    readonly logAnalyticsWorkspaceId: string;
    readonly name: string;
    readonly timeouts?: outputs.GetSentinelAlertRuleTimeouts;
}
export function getSentinelAlertRuleOutput(args: GetSentinelAlertRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSentinelAlertRuleResult> {
    return pulumi.output(args).apply((a: any) => getSentinelAlertRule(a, opts))
}

/**
 * A collection of arguments for invoking getSentinelAlertRule.
 */
export interface GetSentinelAlertRuleOutputArgs {
    id?: pulumi.Input<string>;
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSentinelAlertRuleTimeoutsArgs>;
}
