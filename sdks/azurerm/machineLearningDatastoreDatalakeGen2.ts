// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MachineLearningDatastoreDatalakeGen2 extends pulumi.CustomResource {
    /**
     * Get an existing MachineLearningDatastoreDatalakeGen2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MachineLearningDatastoreDatalakeGen2State, opts?: pulumi.CustomResourceOptions): MachineLearningDatastoreDatalakeGen2 {
        return new MachineLearningDatastoreDatalakeGen2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/machineLearningDatastoreDatalakeGen2:MachineLearningDatastoreDatalakeGen2';

    /**
     * Returns true if the given object is an instance of MachineLearningDatastoreDatalakeGen2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineLearningDatastoreDatalakeGen2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineLearningDatastoreDatalakeGen2.__pulumiType;
    }

    public readonly authorityUrl!: pulumi.Output<string | undefined>;
    public readonly clientId!: pulumi.Output<string | undefined>;
    public readonly clientSecret!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly isDefault!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly serviceDataIdentity!: pulumi.Output<string | undefined>;
    public readonly storageContainerId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tenantId!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.MachineLearningDatastoreDatalakeGen2Timeouts | undefined>;
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a MachineLearningDatastoreDatalakeGen2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineLearningDatastoreDatalakeGen2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MachineLearningDatastoreDatalakeGen2Args | MachineLearningDatastoreDatalakeGen2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MachineLearningDatastoreDatalakeGen2State | undefined;
            resourceInputs["authorityUrl"] = state ? state.authorityUrl : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceDataIdentity"] = state ? state.serviceDataIdentity : undefined;
            resourceInputs["storageContainerId"] = state ? state.storageContainerId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as MachineLearningDatastoreDatalakeGen2Args | undefined;
            if ((!args || args.storageContainerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageContainerId'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["authorityUrl"] = args ? args.authorityUrl : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceDataIdentity"] = args ? args.serviceDataIdentity : undefined;
            resourceInputs["storageContainerId"] = args ? args.storageContainerId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["isDefault"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MachineLearningDatastoreDatalakeGen2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MachineLearningDatastoreDatalakeGen2 resources.
 */
export interface MachineLearningDatastoreDatalakeGen2State {
    authorityUrl?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    isDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    serviceDataIdentity?: pulumi.Input<string>;
    storageContainerId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MachineLearningDatastoreDatalakeGen2Timeouts>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MachineLearningDatastoreDatalakeGen2 resource.
 */
export interface MachineLearningDatastoreDatalakeGen2Args {
    authorityUrl?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    serviceDataIdentity?: pulumi.Input<string>;
    storageContainerId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MachineLearningDatastoreDatalakeGen2Timeouts>;
    workspaceId: pulumi.Input<string>;
}
