// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApiManagementGateway(args: GetApiManagementGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetApiManagementGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getApiManagementGateway:getApiManagementGateway", {
        "apiManagementId": args.apiManagementId,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApiManagementGateway.
 */
export interface GetApiManagementGatewayArgs {
    apiManagementId: string;
    id?: string;
    name: string;
    timeouts?: inputs.GetApiManagementGatewayTimeouts;
}

/**
 * A collection of values returned by getApiManagementGateway.
 */
export interface GetApiManagementGatewayResult {
    readonly apiManagementId: string;
    readonly description: string;
    readonly id: string;
    readonly locationDatas: outputs.GetApiManagementGatewayLocationData[];
    readonly name: string;
    readonly timeouts?: outputs.GetApiManagementGatewayTimeouts;
}
export function getApiManagementGatewayOutput(args: GetApiManagementGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiManagementGatewayResult> {
    return pulumi.output(args).apply((a: any) => getApiManagementGateway(a, opts))
}

/**
 * A collection of arguments for invoking getApiManagementGateway.
 */
export interface GetApiManagementGatewayOutputArgs {
    apiManagementId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetApiManagementGatewayTimeoutsArgs>;
}
