// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ContainerAppEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing ContainerAppEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerAppEnvironmentState, opts?: pulumi.CustomResourceOptions): ContainerAppEnvironment {
        return new ContainerAppEnvironment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/containerAppEnvironment:ContainerAppEnvironment';

    /**
     * Returns true if the given object is an instance of ContainerAppEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerAppEnvironment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerAppEnvironment.__pulumiType;
    }

    /**
     * The ID of the Custom Domain Verification for this Container App Environment.
     */
    public /*out*/ readonly customDomainVerificationId!: pulumi.Output<string>;
    /**
     * Application Insights connection string used by Dapr to export Service to Service communication telemetry.
     */
    public readonly daprApplicationInsightsConnectionString!: pulumi.Output<string | undefined>;
    /**
     * The default publicly resolvable name of this Container App Environment
     */
    public /*out*/ readonly defaultDomain!: pulumi.Output<string>;
    /**
     * The network addressing in which the Container Apps in this Container App Environment will reside in CIDR notation.
     */
    public /*out*/ readonly dockerBridgeCidr!: pulumi.Output<string>;
    /**
     * Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources.
     * **Note:** Only valid if a `workload_profile` is specified. If `infrastructure_subnet_id` is specified, this resource
     * group will be created in the same subscription as `infrastructure_subnet_id`.
     */
    public readonly infrastructureResourceGroupName!: pulumi.Output<string | undefined>;
    /**
     * The existing Subnet to use for the Container Apps Control Plane. **NOTE:** The Subnet must have a `/21` or larger
     * address space.
     */
    public readonly infrastructureSubnetId!: pulumi.Output<string | undefined>;
    /**
     * Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. **Note:** can only be set
     * to `true` if `infrastructure_subnet_id` is specified.
     */
    public readonly internalLoadBalancerEnabled!: pulumi.Output<boolean | undefined>;
    public readonly location!: pulumi.Output<string>;
    /**
     * The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to.
     */
    public readonly logAnalyticsWorkspaceId!: pulumi.Output<string | undefined>;
    /**
     * Should mutual transport layer security (mTLS) be enabled? Defaults to `false`. **Note:** This feature is in public
     * preview. Enabling mTLS for your applications may increase response latency and reduce maximum throughput in high-load
     * scenarios.
     */
    public readonly mutualTlsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Container Apps Managed Environment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The IP range, in CIDR notation, that is reserved for environment infrastructure IP addresses.
     */
    public /*out*/ readonly platformReservedCidr!: pulumi.Output<string>;
    /**
     * The IP address from the IP range defined by `platform_reserved_cidr` that is reserved for the internal DNS server.
     */
    public /*out*/ readonly platformReservedDnsIpAddress!: pulumi.Output<string>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The Static IP Address of the Environment.
     */
    public /*out*/ readonly staticIpAddress!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.ContainerAppEnvironmentTimeouts | undefined>;
    public readonly workloadProfiles!: pulumi.Output<outputs.ContainerAppEnvironmentWorkloadProfile[] | undefined>;
    public readonly zoneRedundancyEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ContainerAppEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerAppEnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerAppEnvironmentArgs | ContainerAppEnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerAppEnvironmentState | undefined;
            resourceInputs["customDomainVerificationId"] = state ? state.customDomainVerificationId : undefined;
            resourceInputs["daprApplicationInsightsConnectionString"] = state ? state.daprApplicationInsightsConnectionString : undefined;
            resourceInputs["defaultDomain"] = state ? state.defaultDomain : undefined;
            resourceInputs["dockerBridgeCidr"] = state ? state.dockerBridgeCidr : undefined;
            resourceInputs["infrastructureResourceGroupName"] = state ? state.infrastructureResourceGroupName : undefined;
            resourceInputs["infrastructureSubnetId"] = state ? state.infrastructureSubnetId : undefined;
            resourceInputs["internalLoadBalancerEnabled"] = state ? state.internalLoadBalancerEnabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = state ? state.logAnalyticsWorkspaceId : undefined;
            resourceInputs["mutualTlsEnabled"] = state ? state.mutualTlsEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["platformReservedCidr"] = state ? state.platformReservedCidr : undefined;
            resourceInputs["platformReservedDnsIpAddress"] = state ? state.platformReservedDnsIpAddress : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["staticIpAddress"] = state ? state.staticIpAddress : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["workloadProfiles"] = state ? state.workloadProfiles : undefined;
            resourceInputs["zoneRedundancyEnabled"] = state ? state.zoneRedundancyEnabled : undefined;
        } else {
            const args = argsOrState as ContainerAppEnvironmentArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["daprApplicationInsightsConnectionString"] = args?.daprApplicationInsightsConnectionString ? pulumi.secret(args.daprApplicationInsightsConnectionString) : undefined;
            resourceInputs["infrastructureResourceGroupName"] = args ? args.infrastructureResourceGroupName : undefined;
            resourceInputs["infrastructureSubnetId"] = args ? args.infrastructureSubnetId : undefined;
            resourceInputs["internalLoadBalancerEnabled"] = args ? args.internalLoadBalancerEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = args ? args.logAnalyticsWorkspaceId : undefined;
            resourceInputs["mutualTlsEnabled"] = args ? args.mutualTlsEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["workloadProfiles"] = args ? args.workloadProfiles : undefined;
            resourceInputs["zoneRedundancyEnabled"] = args ? args.zoneRedundancyEnabled : undefined;
            resourceInputs["customDomainVerificationId"] = undefined /*out*/;
            resourceInputs["defaultDomain"] = undefined /*out*/;
            resourceInputs["dockerBridgeCidr"] = undefined /*out*/;
            resourceInputs["platformReservedCidr"] = undefined /*out*/;
            resourceInputs["platformReservedDnsIpAddress"] = undefined /*out*/;
            resourceInputs["staticIpAddress"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["daprApplicationInsightsConnectionString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ContainerAppEnvironment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ContainerAppEnvironment resources.
 */
export interface ContainerAppEnvironmentState {
    /**
     * The ID of the Custom Domain Verification for this Container App Environment.
     */
    customDomainVerificationId?: pulumi.Input<string>;
    /**
     * Application Insights connection string used by Dapr to export Service to Service communication telemetry.
     */
    daprApplicationInsightsConnectionString?: pulumi.Input<string>;
    /**
     * The default publicly resolvable name of this Container App Environment
     */
    defaultDomain?: pulumi.Input<string>;
    /**
     * The network addressing in which the Container Apps in this Container App Environment will reside in CIDR notation.
     */
    dockerBridgeCidr?: pulumi.Input<string>;
    /**
     * Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources.
     * **Note:** Only valid if a `workload_profile` is specified. If `infrastructure_subnet_id` is specified, this resource
     * group will be created in the same subscription as `infrastructure_subnet_id`.
     */
    infrastructureResourceGroupName?: pulumi.Input<string>;
    /**
     * The existing Subnet to use for the Container Apps Control Plane. **NOTE:** The Subnet must have a `/21` or larger
     * address space.
     */
    infrastructureSubnetId?: pulumi.Input<string>;
    /**
     * Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. **Note:** can only be set
     * to `true` if `infrastructure_subnet_id` is specified.
     */
    internalLoadBalancerEnabled?: pulumi.Input<boolean>;
    location?: pulumi.Input<string>;
    /**
     * The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to.
     */
    logAnalyticsWorkspaceId?: pulumi.Input<string>;
    /**
     * Should mutual transport layer security (mTLS) be enabled? Defaults to `false`. **Note:** This feature is in public
     * preview. Enabling mTLS for your applications may increase response latency and reduce maximum throughput in high-load
     * scenarios.
     */
    mutualTlsEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Container Apps Managed Environment.
     */
    name?: pulumi.Input<string>;
    /**
     * The IP range, in CIDR notation, that is reserved for environment infrastructure IP addresses.
     */
    platformReservedCidr?: pulumi.Input<string>;
    /**
     * The IP address from the IP range defined by `platform_reserved_cidr` that is reserved for the internal DNS server.
     */
    platformReservedDnsIpAddress?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The Static IP Address of the Environment.
     */
    staticIpAddress?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ContainerAppEnvironmentTimeouts>;
    workloadProfiles?: pulumi.Input<pulumi.Input<inputs.ContainerAppEnvironmentWorkloadProfile>[]>;
    zoneRedundancyEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ContainerAppEnvironment resource.
 */
export interface ContainerAppEnvironmentArgs {
    /**
     * Application Insights connection string used by Dapr to export Service to Service communication telemetry.
     */
    daprApplicationInsightsConnectionString?: pulumi.Input<string>;
    /**
     * Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources.
     * **Note:** Only valid if a `workload_profile` is specified. If `infrastructure_subnet_id` is specified, this resource
     * group will be created in the same subscription as `infrastructure_subnet_id`.
     */
    infrastructureResourceGroupName?: pulumi.Input<string>;
    /**
     * The existing Subnet to use for the Container Apps Control Plane. **NOTE:** The Subnet must have a `/21` or larger
     * address space.
     */
    infrastructureSubnetId?: pulumi.Input<string>;
    /**
     * Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. **Note:** can only be set
     * to `true` if `infrastructure_subnet_id` is specified.
     */
    internalLoadBalancerEnabled?: pulumi.Input<boolean>;
    location: pulumi.Input<string>;
    /**
     * The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to.
     */
    logAnalyticsWorkspaceId?: pulumi.Input<string>;
    /**
     * Should mutual transport layer security (mTLS) be enabled? Defaults to `false`. **Note:** This feature is in public
     * preview. Enabling mTLS for your applications may increase response latency and reduce maximum throughput in high-load
     * scenarios.
     */
    mutualTlsEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Container Apps Managed Environment.
     */
    name?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.ContainerAppEnvironmentTimeouts>;
    workloadProfiles?: pulumi.Input<pulumi.Input<inputs.ContainerAppEnvironmentWorkloadProfile>[]>;
    zoneRedundancyEnabled?: pulumi.Input<boolean>;
}
