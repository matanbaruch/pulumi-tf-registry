// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageShare(args: GetStorageShareArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageShareResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getStorageShare:getStorageShare", {
        "acls": args.acls,
        "id": args.id,
        "metadata": args.metadata,
        "name": args.name,
        "storageAccountName": args.storageAccountName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageShare.
 */
export interface GetStorageShareArgs {
    acls?: inputs.GetStorageShareAcl[];
    id?: string;
    metadata?: {[key: string]: string};
    name: string;
    storageAccountName: string;
    timeouts?: inputs.GetStorageShareTimeouts;
}

/**
 * A collection of values returned by getStorageShare.
 */
export interface GetStorageShareResult {
    readonly acls?: outputs.GetStorageShareAcl[];
    readonly id: string;
    readonly metadata: {[key: string]: string};
    readonly name: string;
    readonly quota: number;
    readonly resourceManagerId: string;
    readonly storageAccountName: string;
    readonly timeouts?: outputs.GetStorageShareTimeouts;
}
export function getStorageShareOutput(args: GetStorageShareOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageShareResult> {
    return pulumi.output(args).apply((a: any) => getStorageShare(a, opts))
}

/**
 * A collection of arguments for invoking getStorageShare.
 */
export interface GetStorageShareOutputArgs {
    acls?: pulumi.Input<pulumi.Input<inputs.GetStorageShareAclArgs>[]>;
    id?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
    storageAccountName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetStorageShareTimeoutsArgs>;
}
