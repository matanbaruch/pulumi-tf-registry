// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataShareDatasetBlobStorage(args: GetDataShareDatasetBlobStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetDataShareDatasetBlobStorageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getDataShareDatasetBlobStorage:getDataShareDatasetBlobStorage", {
        "dataShareId": args.dataShareId,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataShareDatasetBlobStorage.
 */
export interface GetDataShareDatasetBlobStorageArgs {
    dataShareId: string;
    id?: string;
    name: string;
    timeouts?: inputs.GetDataShareDatasetBlobStorageTimeouts;
}

/**
 * A collection of values returned by getDataShareDatasetBlobStorage.
 */
export interface GetDataShareDatasetBlobStorageResult {
    readonly containerName: string;
    readonly dataShareId: string;
    readonly displayName: string;
    readonly filePath: string;
    readonly folderPath: string;
    readonly id: string;
    readonly name: string;
    readonly storageAccounts: outputs.GetDataShareDatasetBlobStorageStorageAccount[];
    readonly timeouts?: outputs.GetDataShareDatasetBlobStorageTimeouts;
}
export function getDataShareDatasetBlobStorageOutput(args: GetDataShareDatasetBlobStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataShareDatasetBlobStorageResult> {
    return pulumi.output(args).apply((a: any) => getDataShareDatasetBlobStorage(a, opts))
}

/**
 * A collection of arguments for invoking getDataShareDatasetBlobStorage.
 */
export interface GetDataShareDatasetBlobStorageOutputArgs {
    dataShareId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetDataShareDatasetBlobStorageTimeoutsArgs>;
}
