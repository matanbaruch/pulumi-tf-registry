// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatabricksWorkspace extends pulumi.CustomResource {
    /**
     * Get an existing DatabricksWorkspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabricksWorkspaceState, opts?: pulumi.CustomResourceOptions): DatabricksWorkspace {
        return new DatabricksWorkspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/databricksWorkspace:DatabricksWorkspace';

    /**
     * Returns true if the given object is an instance of DatabricksWorkspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabricksWorkspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabricksWorkspace.__pulumiType;
    }

    public readonly accessConnectorId!: pulumi.Output<string | undefined>;
    public readonly customParameters!: pulumi.Output<outputs.DatabricksWorkspaceCustomParameters | undefined>;
    public readonly customerManagedKeyEnabled!: pulumi.Output<boolean | undefined>;
    public readonly defaultStorageFirewallEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly diskEncryptionSetId!: pulumi.Output<string>;
    public readonly infrastructureEncryptionEnabled!: pulumi.Output<boolean | undefined>;
    public readonly loadBalancerBackendAddressPoolId!: pulumi.Output<string | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly managedDiskCmkKeyVaultId!: pulumi.Output<string | undefined>;
    public readonly managedDiskCmkKeyVaultKeyId!: pulumi.Output<string | undefined>;
    public readonly managedDiskCmkRotationToLatestVersionEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly managedDiskIdentities!: pulumi.Output<outputs.DatabricksWorkspaceManagedDiskIdentity[]>;
    public /*out*/ readonly managedResourceGroupId!: pulumi.Output<string>;
    public readonly managedResourceGroupName!: pulumi.Output<string>;
    public readonly managedServicesCmkKeyVaultId!: pulumi.Output<string | undefined>;
    public readonly managedServicesCmkKeyVaultKeyId!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkSecurityGroupRulesRequired!: pulumi.Output<string | undefined>;
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly sku!: pulumi.Output<string>;
    public /*out*/ readonly storageAccountIdentities!: pulumi.Output<outputs.DatabricksWorkspaceStorageAccountIdentity[]>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.DatabricksWorkspaceTimeouts | undefined>;
    public /*out*/ readonly workspaceId!: pulumi.Output<string>;
    public /*out*/ readonly workspaceUrl!: pulumi.Output<string>;

    /**
     * Create a DatabricksWorkspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabricksWorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabricksWorkspaceArgs | DatabricksWorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabricksWorkspaceState | undefined;
            resourceInputs["accessConnectorId"] = state ? state.accessConnectorId : undefined;
            resourceInputs["customParameters"] = state ? state.customParameters : undefined;
            resourceInputs["customerManagedKeyEnabled"] = state ? state.customerManagedKeyEnabled : undefined;
            resourceInputs["defaultStorageFirewallEnabled"] = state ? state.defaultStorageFirewallEnabled : undefined;
            resourceInputs["diskEncryptionSetId"] = state ? state.diskEncryptionSetId : undefined;
            resourceInputs["infrastructureEncryptionEnabled"] = state ? state.infrastructureEncryptionEnabled : undefined;
            resourceInputs["loadBalancerBackendAddressPoolId"] = state ? state.loadBalancerBackendAddressPoolId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["managedDiskCmkKeyVaultId"] = state ? state.managedDiskCmkKeyVaultId : undefined;
            resourceInputs["managedDiskCmkKeyVaultKeyId"] = state ? state.managedDiskCmkKeyVaultKeyId : undefined;
            resourceInputs["managedDiskCmkRotationToLatestVersionEnabled"] = state ? state.managedDiskCmkRotationToLatestVersionEnabled : undefined;
            resourceInputs["managedDiskIdentities"] = state ? state.managedDiskIdentities : undefined;
            resourceInputs["managedResourceGroupId"] = state ? state.managedResourceGroupId : undefined;
            resourceInputs["managedResourceGroupName"] = state ? state.managedResourceGroupName : undefined;
            resourceInputs["managedServicesCmkKeyVaultId"] = state ? state.managedServicesCmkKeyVaultId : undefined;
            resourceInputs["managedServicesCmkKeyVaultKeyId"] = state ? state.managedServicesCmkKeyVaultKeyId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkSecurityGroupRulesRequired"] = state ? state.networkSecurityGroupRulesRequired : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["storageAccountIdentities"] = state ? state.storageAccountIdentities : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
            resourceInputs["workspaceUrl"] = state ? state.workspaceUrl : undefined;
        } else {
            const args = argsOrState as DatabricksWorkspaceArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["accessConnectorId"] = args ? args.accessConnectorId : undefined;
            resourceInputs["customParameters"] = args ? args.customParameters : undefined;
            resourceInputs["customerManagedKeyEnabled"] = args ? args.customerManagedKeyEnabled : undefined;
            resourceInputs["defaultStorageFirewallEnabled"] = args ? args.defaultStorageFirewallEnabled : undefined;
            resourceInputs["infrastructureEncryptionEnabled"] = args ? args.infrastructureEncryptionEnabled : undefined;
            resourceInputs["loadBalancerBackendAddressPoolId"] = args ? args.loadBalancerBackendAddressPoolId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["managedDiskCmkKeyVaultId"] = args ? args.managedDiskCmkKeyVaultId : undefined;
            resourceInputs["managedDiskCmkKeyVaultKeyId"] = args ? args.managedDiskCmkKeyVaultKeyId : undefined;
            resourceInputs["managedDiskCmkRotationToLatestVersionEnabled"] = args ? args.managedDiskCmkRotationToLatestVersionEnabled : undefined;
            resourceInputs["managedResourceGroupName"] = args ? args.managedResourceGroupName : undefined;
            resourceInputs["managedServicesCmkKeyVaultId"] = args ? args.managedServicesCmkKeyVaultId : undefined;
            resourceInputs["managedServicesCmkKeyVaultKeyId"] = args ? args.managedServicesCmkKeyVaultKeyId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkSecurityGroupRulesRequired"] = args ? args.networkSecurityGroupRulesRequired : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["diskEncryptionSetId"] = undefined /*out*/;
            resourceInputs["managedDiskIdentities"] = undefined /*out*/;
            resourceInputs["managedResourceGroupId"] = undefined /*out*/;
            resourceInputs["storageAccountIdentities"] = undefined /*out*/;
            resourceInputs["workspaceId"] = undefined /*out*/;
            resourceInputs["workspaceUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabricksWorkspace.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatabricksWorkspace resources.
 */
export interface DatabricksWorkspaceState {
    accessConnectorId?: pulumi.Input<string>;
    customParameters?: pulumi.Input<inputs.DatabricksWorkspaceCustomParameters>;
    customerManagedKeyEnabled?: pulumi.Input<boolean>;
    defaultStorageFirewallEnabled?: pulumi.Input<boolean>;
    diskEncryptionSetId?: pulumi.Input<string>;
    infrastructureEncryptionEnabled?: pulumi.Input<boolean>;
    loadBalancerBackendAddressPoolId?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    managedDiskCmkKeyVaultId?: pulumi.Input<string>;
    managedDiskCmkKeyVaultKeyId?: pulumi.Input<string>;
    managedDiskCmkRotationToLatestVersionEnabled?: pulumi.Input<boolean>;
    managedDiskIdentities?: pulumi.Input<pulumi.Input<inputs.DatabricksWorkspaceManagedDiskIdentity>[]>;
    managedResourceGroupId?: pulumi.Input<string>;
    managedResourceGroupName?: pulumi.Input<string>;
    managedServicesCmkKeyVaultId?: pulumi.Input<string>;
    managedServicesCmkKeyVaultKeyId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkSecurityGroupRulesRequired?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    resourceGroupName?: pulumi.Input<string>;
    sku?: pulumi.Input<string>;
    storageAccountIdentities?: pulumi.Input<pulumi.Input<inputs.DatabricksWorkspaceStorageAccountIdentity>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DatabricksWorkspaceTimeouts>;
    workspaceId?: pulumi.Input<string>;
    workspaceUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabricksWorkspace resource.
 */
export interface DatabricksWorkspaceArgs {
    accessConnectorId?: pulumi.Input<string>;
    customParameters?: pulumi.Input<inputs.DatabricksWorkspaceCustomParameters>;
    customerManagedKeyEnabled?: pulumi.Input<boolean>;
    defaultStorageFirewallEnabled?: pulumi.Input<boolean>;
    infrastructureEncryptionEnabled?: pulumi.Input<boolean>;
    loadBalancerBackendAddressPoolId?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    managedDiskCmkKeyVaultId?: pulumi.Input<string>;
    managedDiskCmkKeyVaultKeyId?: pulumi.Input<string>;
    managedDiskCmkRotationToLatestVersionEnabled?: pulumi.Input<boolean>;
    managedResourceGroupName?: pulumi.Input<string>;
    managedServicesCmkKeyVaultId?: pulumi.Input<string>;
    managedServicesCmkKeyVaultKeyId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkSecurityGroupRulesRequired?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    resourceGroupName: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.DatabricksWorkspaceTimeouts>;
}
