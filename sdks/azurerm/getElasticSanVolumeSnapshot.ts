// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getElasticSanVolumeSnapshot(args: GetElasticSanVolumeSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticSanVolumeSnapshotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getElasticSanVolumeSnapshot:getElasticSanVolumeSnapshot", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
        "volumeGroupId": args.volumeGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticSanVolumeSnapshot.
 */
export interface GetElasticSanVolumeSnapshotArgs {
    id?: string;
    name: string;
    timeouts?: inputs.GetElasticSanVolumeSnapshotTimeouts;
    volumeGroupId: string;
}

/**
 * A collection of values returned by getElasticSanVolumeSnapshot.
 */
export interface GetElasticSanVolumeSnapshotResult {
    readonly id: string;
    readonly name: string;
    readonly sourceId: string;
    readonly sourceVolumeSizeInGib: number;
    readonly timeouts?: outputs.GetElasticSanVolumeSnapshotTimeouts;
    readonly volumeGroupId: string;
    readonly volumeName: string;
}
export function getElasticSanVolumeSnapshotOutput(args: GetElasticSanVolumeSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticSanVolumeSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getElasticSanVolumeSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getElasticSanVolumeSnapshot.
 */
export interface GetElasticSanVolumeSnapshotOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetElasticSanVolumeSnapshotTimeoutsArgs>;
    volumeGroupId: pulumi.Input<string>;
}
