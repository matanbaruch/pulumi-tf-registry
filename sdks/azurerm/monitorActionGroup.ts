// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MonitorActionGroup extends pulumi.CustomResource {
    /**
     * Get an existing MonitorActionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitorActionGroupState, opts?: pulumi.CustomResourceOptions): MonitorActionGroup {
        return new MonitorActionGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/monitorActionGroup:MonitorActionGroup';

    /**
     * Returns true if the given object is an instance of MonitorActionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitorActionGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitorActionGroup.__pulumiType;
    }

    public readonly armRoleReceivers!: pulumi.Output<outputs.MonitorActionGroupArmRoleReceiver[] | undefined>;
    public readonly automationRunbookReceivers!: pulumi.Output<outputs.MonitorActionGroupAutomationRunbookReceiver[] | undefined>;
    public readonly azureAppPushReceivers!: pulumi.Output<outputs.MonitorActionGroupAzureAppPushReceiver[] | undefined>;
    public readonly azureFunctionReceivers!: pulumi.Output<outputs.MonitorActionGroupAzureFunctionReceiver[] | undefined>;
    public readonly emailReceivers!: pulumi.Output<outputs.MonitorActionGroupEmailReceiver[] | undefined>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly eventHubReceivers!: pulumi.Output<outputs.MonitorActionGroupEventHubReceiver[] | undefined>;
    public readonly itsmReceivers!: pulumi.Output<outputs.MonitorActionGroupItsmReceiver[] | undefined>;
    public readonly location!: pulumi.Output<string | undefined>;
    public readonly logicAppReceivers!: pulumi.Output<outputs.MonitorActionGroupLogicAppReceiver[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly shortName!: pulumi.Output<string>;
    public readonly smsReceivers!: pulumi.Output<outputs.MonitorActionGroupSmsReceiver[] | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.MonitorActionGroupTimeouts | undefined>;
    public readonly voiceReceivers!: pulumi.Output<outputs.MonitorActionGroupVoiceReceiver[] | undefined>;
    public readonly webhookReceivers!: pulumi.Output<outputs.MonitorActionGroupWebhookReceiver[] | undefined>;

    /**
     * Create a MonitorActionGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitorActionGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitorActionGroupArgs | MonitorActionGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitorActionGroupState | undefined;
            resourceInputs["armRoleReceivers"] = state ? state.armRoleReceivers : undefined;
            resourceInputs["automationRunbookReceivers"] = state ? state.automationRunbookReceivers : undefined;
            resourceInputs["azureAppPushReceivers"] = state ? state.azureAppPushReceivers : undefined;
            resourceInputs["azureFunctionReceivers"] = state ? state.azureFunctionReceivers : undefined;
            resourceInputs["emailReceivers"] = state ? state.emailReceivers : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["eventHubReceivers"] = state ? state.eventHubReceivers : undefined;
            resourceInputs["itsmReceivers"] = state ? state.itsmReceivers : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["logicAppReceivers"] = state ? state.logicAppReceivers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["shortName"] = state ? state.shortName : undefined;
            resourceInputs["smsReceivers"] = state ? state.smsReceivers : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["voiceReceivers"] = state ? state.voiceReceivers : undefined;
            resourceInputs["webhookReceivers"] = state ? state.webhookReceivers : undefined;
        } else {
            const args = argsOrState as MonitorActionGroupArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.shortName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shortName'");
            }
            resourceInputs["armRoleReceivers"] = args ? args.armRoleReceivers : undefined;
            resourceInputs["automationRunbookReceivers"] = args ? args.automationRunbookReceivers : undefined;
            resourceInputs["azureAppPushReceivers"] = args ? args.azureAppPushReceivers : undefined;
            resourceInputs["azureFunctionReceivers"] = args ? args.azureFunctionReceivers : undefined;
            resourceInputs["emailReceivers"] = args ? args.emailReceivers : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["eventHubReceivers"] = args ? args.eventHubReceivers : undefined;
            resourceInputs["itsmReceivers"] = args ? args.itsmReceivers : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["logicAppReceivers"] = args ? args.logicAppReceivers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["shortName"] = args ? args.shortName : undefined;
            resourceInputs["smsReceivers"] = args ? args.smsReceivers : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["voiceReceivers"] = args ? args.voiceReceivers : undefined;
            resourceInputs["webhookReceivers"] = args ? args.webhookReceivers : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitorActionGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MonitorActionGroup resources.
 */
export interface MonitorActionGroupState {
    armRoleReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupArmRoleReceiver>[]>;
    automationRunbookReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupAutomationRunbookReceiver>[]>;
    azureAppPushReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupAzureAppPushReceiver>[]>;
    azureFunctionReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupAzureFunctionReceiver>[]>;
    emailReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupEmailReceiver>[]>;
    enabled?: pulumi.Input<boolean>;
    eventHubReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupEventHubReceiver>[]>;
    itsmReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupItsmReceiver>[]>;
    location?: pulumi.Input<string>;
    logicAppReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupLogicAppReceiver>[]>;
    name?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    shortName?: pulumi.Input<string>;
    smsReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupSmsReceiver>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.MonitorActionGroupTimeouts>;
    voiceReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupVoiceReceiver>[]>;
    webhookReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupWebhookReceiver>[]>;
}

/**
 * The set of arguments for constructing a MonitorActionGroup resource.
 */
export interface MonitorActionGroupArgs {
    armRoleReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupArmRoleReceiver>[]>;
    automationRunbookReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupAutomationRunbookReceiver>[]>;
    azureAppPushReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupAzureAppPushReceiver>[]>;
    azureFunctionReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupAzureFunctionReceiver>[]>;
    emailReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupEmailReceiver>[]>;
    enabled?: pulumi.Input<boolean>;
    eventHubReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupEventHubReceiver>[]>;
    itsmReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupItsmReceiver>[]>;
    location?: pulumi.Input<string>;
    logicAppReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupLogicAppReceiver>[]>;
    name?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    shortName: pulumi.Input<string>;
    smsReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupSmsReceiver>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.MonitorActionGroupTimeouts>;
    voiceReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupVoiceReceiver>[]>;
    webhookReceivers?: pulumi.Input<pulumi.Input<inputs.MonitorActionGroupWebhookReceiver>[]>;
}
