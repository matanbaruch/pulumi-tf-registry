// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVirtualNetworkGatewayConnection(args: GetVirtualNetworkGatewayConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualNetworkGatewayConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getVirtualNetworkGatewayConnection:getVirtualNetworkGatewayConnection", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVirtualNetworkGatewayConnection.
 */
export interface GetVirtualNetworkGatewayConnectionArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetVirtualNetworkGatewayConnectionTimeouts;
}

/**
 * A collection of values returned by getVirtualNetworkGatewayConnection.
 */
export interface GetVirtualNetworkGatewayConnectionResult {
    readonly authorizationKey: string;
    readonly connectionProtocol: string;
    readonly dpdTimeoutSeconds: number;
    readonly egressBytesTransferred: number;
    readonly enableBgp: boolean;
    readonly expressRouteCircuitId: string;
    readonly expressRouteGatewayBypass: boolean;
    readonly id: string;
    readonly ingressBytesTransferred: number;
    readonly ipsecPolicies: outputs.GetVirtualNetworkGatewayConnectionIpsecPolicy[];
    readonly localAzureIpAddressEnabled: boolean;
    readonly localNetworkGatewayId: string;
    readonly location: string;
    readonly name: string;
    readonly peerVirtualNetworkGatewayId: string;
    readonly privateLinkFastPathEnabled: boolean;
    readonly resourceGroupName: string;
    readonly resourceGuid: string;
    readonly routingWeight: number;
    readonly sharedKey: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetVirtualNetworkGatewayConnectionTimeouts;
    readonly trafficSelectorPolicies: outputs.GetVirtualNetworkGatewayConnectionTrafficSelectorPolicy[];
    readonly type: string;
    readonly usePolicyBasedTrafficSelectors: boolean;
    readonly virtualNetworkGatewayId: string;
}
export function getVirtualNetworkGatewayConnectionOutput(args: GetVirtualNetworkGatewayConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualNetworkGatewayConnectionResult> {
    return pulumi.output(args).apply((a: any) => getVirtualNetworkGatewayConnection(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualNetworkGatewayConnection.
 */
export interface GetVirtualNetworkGatewayConnectionOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetVirtualNetworkGatewayConnectionTimeoutsArgs>;
}
