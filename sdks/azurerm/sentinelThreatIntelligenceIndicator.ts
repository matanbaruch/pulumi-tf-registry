// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SentinelThreatIntelligenceIndicator extends pulumi.CustomResource {
    /**
     * Get an existing SentinelThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SentinelThreatIntelligenceIndicatorState, opts?: pulumi.CustomResourceOptions): SentinelThreatIntelligenceIndicator {
        return new SentinelThreatIntelligenceIndicator(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/sentinelThreatIntelligenceIndicator:SentinelThreatIntelligenceIndicator';

    /**
     * Returns true if the given object is an instance of SentinelThreatIntelligenceIndicator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SentinelThreatIntelligenceIndicator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SentinelThreatIntelligenceIndicator.__pulumiType;
    }

    public readonly confidence!: pulumi.Output<number | undefined>;
    public readonly createdBy!: pulumi.Output<string | undefined>;
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    public /*out*/ readonly defanged!: pulumi.Output<boolean>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly extension!: pulumi.Output<string>;
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    public /*out*/ readonly externalLastUpdatedTimeUtc!: pulumi.Output<string>;
    public readonly externalReferences!: pulumi.Output<outputs.SentinelThreatIntelligenceIndicatorExternalReference[] | undefined>;
    public readonly granularMarkings!: pulumi.Output<outputs.SentinelThreatIntelligenceIndicatorGranularMarking[] | undefined>;
    public /*out*/ readonly guid!: pulumi.Output<string>;
    public /*out*/ readonly indicatorTypes!: pulumi.Output<string[]>;
    public readonly killChainPhases!: pulumi.Output<outputs.SentinelThreatIntelligenceIndicatorKillChainPhase[] | undefined>;
    public readonly language!: pulumi.Output<string | undefined>;
    public /*out*/ readonly lastUpdatedTimeUtc!: pulumi.Output<string>;
    public readonly objectMarkingRefs!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly parsedPatterns!: pulumi.Output<outputs.SentinelThreatIntelligenceIndicatorParsedPattern[]>;
    public readonly pattern!: pulumi.Output<string>;
    public readonly patternType!: pulumi.Output<string>;
    public readonly patternVersion!: pulumi.Output<string | undefined>;
    public readonly revoked!: pulumi.Output<boolean | undefined>;
    public readonly source!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly threatTypes!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.SentinelThreatIntelligenceIndicatorTimeouts | undefined>;
    public readonly validateFromUtc!: pulumi.Output<string>;
    public readonly validateUntilUtc!: pulumi.Output<string | undefined>;
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a SentinelThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SentinelThreatIntelligenceIndicatorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SentinelThreatIntelligenceIndicatorArgs | SentinelThreatIntelligenceIndicatorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SentinelThreatIntelligenceIndicatorState | undefined;
            resourceInputs["confidence"] = state ? state.confidence : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["defanged"] = state ? state.defanged : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["extension"] = state ? state.extension : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["externalLastUpdatedTimeUtc"] = state ? state.externalLastUpdatedTimeUtc : undefined;
            resourceInputs["externalReferences"] = state ? state.externalReferences : undefined;
            resourceInputs["granularMarkings"] = state ? state.granularMarkings : undefined;
            resourceInputs["guid"] = state ? state.guid : undefined;
            resourceInputs["indicatorTypes"] = state ? state.indicatorTypes : undefined;
            resourceInputs["killChainPhases"] = state ? state.killChainPhases : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["lastUpdatedTimeUtc"] = state ? state.lastUpdatedTimeUtc : undefined;
            resourceInputs["objectMarkingRefs"] = state ? state.objectMarkingRefs : undefined;
            resourceInputs["parsedPatterns"] = state ? state.parsedPatterns : undefined;
            resourceInputs["pattern"] = state ? state.pattern : undefined;
            resourceInputs["patternType"] = state ? state.patternType : undefined;
            resourceInputs["patternVersion"] = state ? state.patternVersion : undefined;
            resourceInputs["revoked"] = state ? state.revoked : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["threatTypes"] = state ? state.threatTypes : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["validateFromUtc"] = state ? state.validateFromUtc : undefined;
            resourceInputs["validateUntilUtc"] = state ? state.validateUntilUtc : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as SentinelThreatIntelligenceIndicatorArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.pattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pattern'");
            }
            if ((!args || args.patternType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'patternType'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            if ((!args || args.validateFromUtc === undefined) && !opts.urn) {
                throw new Error("Missing required property 'validateFromUtc'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["confidence"] = args ? args.confidence : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["extension"] = args ? args.extension : undefined;
            resourceInputs["externalReferences"] = args ? args.externalReferences : undefined;
            resourceInputs["granularMarkings"] = args ? args.granularMarkings : undefined;
            resourceInputs["killChainPhases"] = args ? args.killChainPhases : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["objectMarkingRefs"] = args ? args.objectMarkingRefs : undefined;
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["patternType"] = args ? args.patternType : undefined;
            resourceInputs["patternVersion"] = args ? args.patternVersion : undefined;
            resourceInputs["revoked"] = args ? args.revoked : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["threatTypes"] = args ? args.threatTypes : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["validateFromUtc"] = args ? args.validateFromUtc : undefined;
            resourceInputs["validateUntilUtc"] = args ? args.validateUntilUtc : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["defanged"] = undefined /*out*/;
            resourceInputs["externalId"] = undefined /*out*/;
            resourceInputs["externalLastUpdatedTimeUtc"] = undefined /*out*/;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["indicatorTypes"] = undefined /*out*/;
            resourceInputs["lastUpdatedTimeUtc"] = undefined /*out*/;
            resourceInputs["parsedPatterns"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SentinelThreatIntelligenceIndicator.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SentinelThreatIntelligenceIndicator resources.
 */
export interface SentinelThreatIntelligenceIndicatorState {
    confidence?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    createdOn?: pulumi.Input<string>;
    defanged?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    extension?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    externalLastUpdatedTimeUtc?: pulumi.Input<string>;
    externalReferences?: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorExternalReference>[]>;
    granularMarkings?: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorGranularMarking>[]>;
    guid?: pulumi.Input<string>;
    indicatorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    killChainPhases?: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorKillChainPhase>[]>;
    language?: pulumi.Input<string>;
    lastUpdatedTimeUtc?: pulumi.Input<string>;
    objectMarkingRefs?: pulumi.Input<pulumi.Input<string>[]>;
    parsedPatterns?: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorParsedPattern>[]>;
    pattern?: pulumi.Input<string>;
    patternType?: pulumi.Input<string>;
    patternVersion?: pulumi.Input<string>;
    revoked?: pulumi.Input<boolean>;
    source?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorTimeouts>;
    validateFromUtc?: pulumi.Input<string>;
    validateUntilUtc?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SentinelThreatIntelligenceIndicator resource.
 */
export interface SentinelThreatIntelligenceIndicatorArgs {
    confidence?: pulumi.Input<number>;
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName: pulumi.Input<string>;
    extension?: pulumi.Input<string>;
    externalReferences?: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorExternalReference>[]>;
    granularMarkings?: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorGranularMarking>[]>;
    killChainPhases?: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorKillChainPhase>[]>;
    language?: pulumi.Input<string>;
    objectMarkingRefs?: pulumi.Input<pulumi.Input<string>[]>;
    pattern: pulumi.Input<string>;
    patternType: pulumi.Input<string>;
    patternVersion?: pulumi.Input<string>;
    revoked?: pulumi.Input<boolean>;
    source: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorTimeouts>;
    validateFromUtc: pulumi.Input<string>;
    validateUntilUtc?: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
