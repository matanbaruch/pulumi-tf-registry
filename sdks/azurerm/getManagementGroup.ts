// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getManagementGroup(args?: GetManagementGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getManagementGroup:getManagementGroup", {
        "displayName": args.displayName,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getManagementGroup.
 */
export interface GetManagementGroupArgs {
    displayName?: string;
    id?: string;
    name?: string;
    timeouts?: inputs.GetManagementGroupTimeouts;
}

/**
 * A collection of values returned by getManagementGroup.
 */
export interface GetManagementGroupResult {
    readonly allManagementGroupIds: string[];
    readonly allSubscriptionIds: string[];
    readonly displayName: string;
    readonly id: string;
    readonly managementGroupIds: string[];
    readonly name: string;
    readonly parentManagementGroupId: string;
    readonly subscriptionIds: string[];
    readonly tenantScopedId: string;
    readonly timeouts?: outputs.GetManagementGroupTimeouts;
}
export function getManagementGroupOutput(args?: GetManagementGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementGroupResult> {
    return pulumi.output(args).apply((a: any) => getManagementGroup(a, opts))
}

/**
 * A collection of arguments for invoking getManagementGroup.
 */
export interface GetManagementGroupOutputArgs {
    displayName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetManagementGroupTimeoutsArgs>;
}
