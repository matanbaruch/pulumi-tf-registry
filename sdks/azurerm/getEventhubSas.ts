// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventhubSas(args: GetEventhubSasArgs, opts?: pulumi.InvokeOptions): Promise<GetEventhubSasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getEventhubSas:getEventhubSas", {
        "connectionString": args.connectionString,
        "expiry": args.expiry,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventhubSas.
 */
export interface GetEventhubSasArgs {
    connectionString: string;
    expiry: string;
    id?: string;
    timeouts?: inputs.GetEventhubSasTimeouts;
}

/**
 * A collection of values returned by getEventhubSas.
 */
export interface GetEventhubSasResult {
    readonly connectionString: string;
    readonly expiry: string;
    readonly id: string;
    readonly sas: string;
    readonly timeouts?: outputs.GetEventhubSasTimeouts;
}
export function getEventhubSasOutput(args: GetEventhubSasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventhubSasResult> {
    return pulumi.output(args).apply((a: any) => getEventhubSas(a, opts))
}

/**
 * A collection of arguments for invoking getEventhubSas.
 */
export interface GetEventhubSasOutputArgs {
    connectionString: pulumi.Input<string>;
    expiry: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetEventhubSasTimeoutsArgs>;
}
