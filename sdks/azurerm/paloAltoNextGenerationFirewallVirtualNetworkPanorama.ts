// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PaloAltoNextGenerationFirewallVirtualNetworkPanorama extends pulumi.CustomResource {
    /**
     * Get an existing PaloAltoNextGenerationFirewallVirtualNetworkPanorama resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PaloAltoNextGenerationFirewallVirtualNetworkPanoramaState, opts?: pulumi.CustomResourceOptions): PaloAltoNextGenerationFirewallVirtualNetworkPanorama {
        return new PaloAltoNextGenerationFirewallVirtualNetworkPanorama(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/paloAltoNextGenerationFirewallVirtualNetworkPanorama:PaloAltoNextGenerationFirewallVirtualNetworkPanorama';

    /**
     * Returns true if the given object is an instance of PaloAltoNextGenerationFirewallVirtualNetworkPanorama.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PaloAltoNextGenerationFirewallVirtualNetworkPanorama {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PaloAltoNextGenerationFirewallVirtualNetworkPanorama.__pulumiType;
    }

    public readonly destinationNats!: pulumi.Output<outputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNat[] | undefined>;
    public readonly dnsSettings!: pulumi.Output<outputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDnsSettings | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkProfile!: pulumi.Output<outputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaNetworkProfile>;
    public readonly panoramaBase64Config!: pulumi.Output<string>;
    public /*out*/ readonly panoramas!: pulumi.Output<outputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaPanorama[]>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaTimeouts | undefined>;

    /**
     * Create a PaloAltoNextGenerationFirewallVirtualNetworkPanorama resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PaloAltoNextGenerationFirewallVirtualNetworkPanoramaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PaloAltoNextGenerationFirewallVirtualNetworkPanoramaArgs | PaloAltoNextGenerationFirewallVirtualNetworkPanoramaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PaloAltoNextGenerationFirewallVirtualNetworkPanoramaState | undefined;
            resourceInputs["destinationNats"] = state ? state.destinationNats : undefined;
            resourceInputs["dnsSettings"] = state ? state.dnsSettings : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkProfile"] = state ? state.networkProfile : undefined;
            resourceInputs["panoramaBase64Config"] = state ? state.panoramaBase64Config : undefined;
            resourceInputs["panoramas"] = state ? state.panoramas : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as PaloAltoNextGenerationFirewallVirtualNetworkPanoramaArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.networkProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkProfile'");
            }
            if ((!args || args.panoramaBase64Config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'panoramaBase64Config'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["destinationNats"] = args ? args.destinationNats : undefined;
            resourceInputs["dnsSettings"] = args ? args.dnsSettings : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkProfile"] = args ? args.networkProfile : undefined;
            resourceInputs["panoramaBase64Config"] = args ? args.panoramaBase64Config : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["panoramas"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PaloAltoNextGenerationFirewallVirtualNetworkPanorama.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PaloAltoNextGenerationFirewallVirtualNetworkPanorama resources.
 */
export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaState {
    destinationNats?: pulumi.Input<pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNat>[]>;
    dnsSettings?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDnsSettings>;
    location?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkProfile?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaNetworkProfile>;
    panoramaBase64Config?: pulumi.Input<string>;
    panoramas?: pulumi.Input<pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaPanorama>[]>;
    resourceGroupName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaTimeouts>;
}

/**
 * The set of arguments for constructing a PaloAltoNextGenerationFirewallVirtualNetworkPanorama resource.
 */
export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaArgs {
    destinationNats?: pulumi.Input<pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNat>[]>;
    dnsSettings?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDnsSettings>;
    location: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkProfile: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaNetworkProfile>;
    panoramaBase64Config: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaTimeouts>;
}
