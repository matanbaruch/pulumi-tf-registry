// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MssqlServerSecurityAlertPolicy extends pulumi.CustomResource {
    /**
     * Get an existing MssqlServerSecurityAlertPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MssqlServerSecurityAlertPolicyState, opts?: pulumi.CustomResourceOptions): MssqlServerSecurityAlertPolicy {
        return new MssqlServerSecurityAlertPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/mssqlServerSecurityAlertPolicy:MssqlServerSecurityAlertPolicy';

    /**
     * Returns true if the given object is an instance of MssqlServerSecurityAlertPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MssqlServerSecurityAlertPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MssqlServerSecurityAlertPolicy.__pulumiType;
    }

    public readonly disabledAlerts!: pulumi.Output<string[] | undefined>;
    public readonly emailAccountAdmins!: pulumi.Output<boolean | undefined>;
    public readonly emailAddresses!: pulumi.Output<string[] | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly retentionDays!: pulumi.Output<number | undefined>;
    public readonly serverName!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public readonly storageAccountAccessKey!: pulumi.Output<string | undefined>;
    public readonly storageEndpoint!: pulumi.Output<string | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.MssqlServerSecurityAlertPolicyTimeouts | undefined>;

    /**
     * Create a MssqlServerSecurityAlertPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MssqlServerSecurityAlertPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MssqlServerSecurityAlertPolicyArgs | MssqlServerSecurityAlertPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MssqlServerSecurityAlertPolicyState | undefined;
            resourceInputs["disabledAlerts"] = state ? state.disabledAlerts : undefined;
            resourceInputs["emailAccountAdmins"] = state ? state.emailAccountAdmins : undefined;
            resourceInputs["emailAddresses"] = state ? state.emailAddresses : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["retentionDays"] = state ? state.retentionDays : undefined;
            resourceInputs["serverName"] = state ? state.serverName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storageAccountAccessKey"] = state ? state.storageAccountAccessKey : undefined;
            resourceInputs["storageEndpoint"] = state ? state.storageEndpoint : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as MssqlServerSecurityAlertPolicyArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.serverName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverName'");
            }
            if ((!args || args.state === undefined) && !opts.urn) {
                throw new Error("Missing required property 'state'");
            }
            resourceInputs["disabledAlerts"] = args ? args.disabledAlerts : undefined;
            resourceInputs["emailAccountAdmins"] = args ? args.emailAccountAdmins : undefined;
            resourceInputs["emailAddresses"] = args ? args.emailAddresses : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["retentionDays"] = args ? args.retentionDays : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["storageAccountAccessKey"] = args?.storageAccountAccessKey ? pulumi.secret(args.storageAccountAccessKey) : undefined;
            resourceInputs["storageEndpoint"] = args ? args.storageEndpoint : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["storageAccountAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MssqlServerSecurityAlertPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MssqlServerSecurityAlertPolicy resources.
 */
export interface MssqlServerSecurityAlertPolicyState {
    disabledAlerts?: pulumi.Input<pulumi.Input<string>[]>;
    emailAccountAdmins?: pulumi.Input<boolean>;
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    resourceGroupName?: pulumi.Input<string>;
    retentionDays?: pulumi.Input<number>;
    serverName?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storageAccountAccessKey?: pulumi.Input<string>;
    storageEndpoint?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MssqlServerSecurityAlertPolicyTimeouts>;
}

/**
 * The set of arguments for constructing a MssqlServerSecurityAlertPolicy resource.
 */
export interface MssqlServerSecurityAlertPolicyArgs {
    disabledAlerts?: pulumi.Input<pulumi.Input<string>[]>;
    emailAccountAdmins?: pulumi.Input<boolean>;
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    resourceGroupName: pulumi.Input<string>;
    retentionDays?: pulumi.Input<number>;
    serverName: pulumi.Input<string>;
    state: pulumi.Input<string>;
    storageAccountAccessKey?: pulumi.Input<string>;
    storageEndpoint?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MssqlServerSecurityAlertPolicyTimeouts>;
}
