// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AppServiceManagedCertificate extends pulumi.CustomResource {
    /**
     * Get an existing AppServiceManagedCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppServiceManagedCertificateState, opts?: pulumi.CustomResourceOptions): AppServiceManagedCertificate {
        return new AppServiceManagedCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/appServiceManagedCertificate:AppServiceManagedCertificate';

    /**
     * Returns true if the given object is an instance of AppServiceManagedCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppServiceManagedCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppServiceManagedCertificate.__pulumiType;
    }

    public /*out*/ readonly canonicalName!: pulumi.Output<string>;
    public readonly customHostnameBindingId!: pulumi.Output<string>;
    public /*out*/ readonly expirationDate!: pulumi.Output<string>;
    public /*out*/ readonly friendlyName!: pulumi.Output<string>;
    public /*out*/ readonly hostNames!: pulumi.Output<string[]>;
    public /*out*/ readonly issueDate!: pulumi.Output<string>;
    public /*out*/ readonly issuer!: pulumi.Output<string>;
    public /*out*/ readonly subjectName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly thumbprint!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AppServiceManagedCertificateTimeouts | undefined>;

    /**
     * Create a AppServiceManagedCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppServiceManagedCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppServiceManagedCertificateArgs | AppServiceManagedCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppServiceManagedCertificateState | undefined;
            resourceInputs["canonicalName"] = state ? state.canonicalName : undefined;
            resourceInputs["customHostnameBindingId"] = state ? state.customHostnameBindingId : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["friendlyName"] = state ? state.friendlyName : undefined;
            resourceInputs["hostNames"] = state ? state.hostNames : undefined;
            resourceInputs["issueDate"] = state ? state.issueDate : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["subjectName"] = state ? state.subjectName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["thumbprint"] = state ? state.thumbprint : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AppServiceManagedCertificateArgs | undefined;
            if ((!args || args.customHostnameBindingId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customHostnameBindingId'");
            }
            resourceInputs["customHostnameBindingId"] = args ? args.customHostnameBindingId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["canonicalName"] = undefined /*out*/;
            resourceInputs["expirationDate"] = undefined /*out*/;
            resourceInputs["friendlyName"] = undefined /*out*/;
            resourceInputs["hostNames"] = undefined /*out*/;
            resourceInputs["issueDate"] = undefined /*out*/;
            resourceInputs["issuer"] = undefined /*out*/;
            resourceInputs["subjectName"] = undefined /*out*/;
            resourceInputs["thumbprint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppServiceManagedCertificate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppServiceManagedCertificate resources.
 */
export interface AppServiceManagedCertificateState {
    canonicalName?: pulumi.Input<string>;
    customHostnameBindingId?: pulumi.Input<string>;
    expirationDate?: pulumi.Input<string>;
    friendlyName?: pulumi.Input<string>;
    hostNames?: pulumi.Input<pulumi.Input<string>[]>;
    issueDate?: pulumi.Input<string>;
    issuer?: pulumi.Input<string>;
    subjectName?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    thumbprint?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AppServiceManagedCertificateTimeouts>;
}

/**
 * The set of arguments for constructing a AppServiceManagedCertificate resource.
 */
export interface AppServiceManagedCertificateArgs {
    customHostnameBindingId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AppServiceManagedCertificateTimeouts>;
}
