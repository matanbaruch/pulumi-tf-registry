// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ServicebusNamespaceDisasterRecoveryConfig extends pulumi.CustomResource {
    /**
     * Get an existing ServicebusNamespaceDisasterRecoveryConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicebusNamespaceDisasterRecoveryConfigState, opts?: pulumi.CustomResourceOptions): ServicebusNamespaceDisasterRecoveryConfig {
        return new ServicebusNamespaceDisasterRecoveryConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/servicebusNamespaceDisasterRecoveryConfig:ServicebusNamespaceDisasterRecoveryConfig';

    /**
     * Returns true if the given object is an instance of ServicebusNamespaceDisasterRecoveryConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicebusNamespaceDisasterRecoveryConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicebusNamespaceDisasterRecoveryConfig.__pulumiType;
    }

    public readonly aliasAuthorizationRuleId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly defaultPrimaryKey!: pulumi.Output<string>;
    public /*out*/ readonly defaultSecondaryKey!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly partnerNamespaceId!: pulumi.Output<string>;
    public /*out*/ readonly primaryConnectionStringAlias!: pulumi.Output<string>;
    public readonly primaryNamespaceId!: pulumi.Output<string>;
    public /*out*/ readonly secondaryConnectionStringAlias!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ServicebusNamespaceDisasterRecoveryConfigTimeouts | undefined>;

    /**
     * Create a ServicebusNamespaceDisasterRecoveryConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicebusNamespaceDisasterRecoveryConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicebusNamespaceDisasterRecoveryConfigArgs | ServicebusNamespaceDisasterRecoveryConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicebusNamespaceDisasterRecoveryConfigState | undefined;
            resourceInputs["aliasAuthorizationRuleId"] = state ? state.aliasAuthorizationRuleId : undefined;
            resourceInputs["defaultPrimaryKey"] = state ? state.defaultPrimaryKey : undefined;
            resourceInputs["defaultSecondaryKey"] = state ? state.defaultSecondaryKey : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["partnerNamespaceId"] = state ? state.partnerNamespaceId : undefined;
            resourceInputs["primaryConnectionStringAlias"] = state ? state.primaryConnectionStringAlias : undefined;
            resourceInputs["primaryNamespaceId"] = state ? state.primaryNamespaceId : undefined;
            resourceInputs["secondaryConnectionStringAlias"] = state ? state.secondaryConnectionStringAlias : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ServicebusNamespaceDisasterRecoveryConfigArgs | undefined;
            if ((!args || args.partnerNamespaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'partnerNamespaceId'");
            }
            if ((!args || args.primaryNamespaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryNamespaceId'");
            }
            resourceInputs["aliasAuthorizationRuleId"] = args ? args.aliasAuthorizationRuleId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["partnerNamespaceId"] = args ? args.partnerNamespaceId : undefined;
            resourceInputs["primaryNamespaceId"] = args ? args.primaryNamespaceId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["defaultPrimaryKey"] = undefined /*out*/;
            resourceInputs["defaultSecondaryKey"] = undefined /*out*/;
            resourceInputs["primaryConnectionStringAlias"] = undefined /*out*/;
            resourceInputs["secondaryConnectionStringAlias"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["defaultPrimaryKey", "defaultSecondaryKey", "primaryConnectionStringAlias", "secondaryConnectionStringAlias"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ServicebusNamespaceDisasterRecoveryConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServicebusNamespaceDisasterRecoveryConfig resources.
 */
export interface ServicebusNamespaceDisasterRecoveryConfigState {
    aliasAuthorizationRuleId?: pulumi.Input<string>;
    defaultPrimaryKey?: pulumi.Input<string>;
    defaultSecondaryKey?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partnerNamespaceId?: pulumi.Input<string>;
    primaryConnectionStringAlias?: pulumi.Input<string>;
    primaryNamespaceId?: pulumi.Input<string>;
    secondaryConnectionStringAlias?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ServicebusNamespaceDisasterRecoveryConfigTimeouts>;
}

/**
 * The set of arguments for constructing a ServicebusNamespaceDisasterRecoveryConfig resource.
 */
export interface ServicebusNamespaceDisasterRecoveryConfigArgs {
    aliasAuthorizationRuleId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partnerNamespaceId: pulumi.Input<string>;
    primaryNamespaceId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ServicebusNamespaceDisasterRecoveryConfigTimeouts>;
}
