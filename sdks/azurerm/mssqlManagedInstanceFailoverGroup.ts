// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MssqlManagedInstanceFailoverGroup extends pulumi.CustomResource {
    /**
     * Get an existing MssqlManagedInstanceFailoverGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MssqlManagedInstanceFailoverGroupState, opts?: pulumi.CustomResourceOptions): MssqlManagedInstanceFailoverGroup {
        return new MssqlManagedInstanceFailoverGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/mssqlManagedInstanceFailoverGroup:MssqlManagedInstanceFailoverGroup';

    /**
     * Returns true if the given object is an instance of MssqlManagedInstanceFailoverGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MssqlManagedInstanceFailoverGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MssqlManagedInstanceFailoverGroup.__pulumiType;
    }

    public readonly location!: pulumi.Output<string>;
    public readonly managedInstanceId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly partnerManagedInstanceId!: pulumi.Output<string>;
    public /*out*/ readonly partnerRegions!: pulumi.Output<outputs.MssqlManagedInstanceFailoverGroupPartnerRegion[]>;
    public readonly readWriteEndpointFailoverPolicy!: pulumi.Output<outputs.MssqlManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy>;
    public readonly readonlyEndpointFailoverPolicyEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly role!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.MssqlManagedInstanceFailoverGroupTimeouts | undefined>;

    /**
     * Create a MssqlManagedInstanceFailoverGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MssqlManagedInstanceFailoverGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MssqlManagedInstanceFailoverGroupArgs | MssqlManagedInstanceFailoverGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MssqlManagedInstanceFailoverGroupState | undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["managedInstanceId"] = state ? state.managedInstanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["partnerManagedInstanceId"] = state ? state.partnerManagedInstanceId : undefined;
            resourceInputs["partnerRegions"] = state ? state.partnerRegions : undefined;
            resourceInputs["readWriteEndpointFailoverPolicy"] = state ? state.readWriteEndpointFailoverPolicy : undefined;
            resourceInputs["readonlyEndpointFailoverPolicyEnabled"] = state ? state.readonlyEndpointFailoverPolicyEnabled : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as MssqlManagedInstanceFailoverGroupArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.managedInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceId'");
            }
            if ((!args || args.partnerManagedInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'partnerManagedInstanceId'");
            }
            if ((!args || args.readWriteEndpointFailoverPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'readWriteEndpointFailoverPolicy'");
            }
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["managedInstanceId"] = args ? args.managedInstanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["partnerManagedInstanceId"] = args ? args.partnerManagedInstanceId : undefined;
            resourceInputs["readWriteEndpointFailoverPolicy"] = args ? args.readWriteEndpointFailoverPolicy : undefined;
            resourceInputs["readonlyEndpointFailoverPolicyEnabled"] = args ? args.readonlyEndpointFailoverPolicyEnabled : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["partnerRegions"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MssqlManagedInstanceFailoverGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MssqlManagedInstanceFailoverGroup resources.
 */
export interface MssqlManagedInstanceFailoverGroupState {
    location?: pulumi.Input<string>;
    managedInstanceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partnerManagedInstanceId?: pulumi.Input<string>;
    partnerRegions?: pulumi.Input<pulumi.Input<inputs.MssqlManagedInstanceFailoverGroupPartnerRegion>[]>;
    readWriteEndpointFailoverPolicy?: pulumi.Input<inputs.MssqlManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy>;
    readonlyEndpointFailoverPolicyEnabled?: pulumi.Input<boolean>;
    role?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MssqlManagedInstanceFailoverGroupTimeouts>;
}

/**
 * The set of arguments for constructing a MssqlManagedInstanceFailoverGroup resource.
 */
export interface MssqlManagedInstanceFailoverGroupArgs {
    location: pulumi.Input<string>;
    managedInstanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    partnerManagedInstanceId: pulumi.Input<string>;
    readWriteEndpointFailoverPolicy: pulumi.Input<inputs.MssqlManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy>;
    readonlyEndpointFailoverPolicyEnabled?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.MssqlManagedInstanceFailoverGroupTimeouts>;
}
