// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAppServiceEnvironmentV3(args: GetAppServiceEnvironmentV3Args, opts?: pulumi.InvokeOptions): Promise<GetAppServiceEnvironmentV3Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getAppServiceEnvironmentV3:getAppServiceEnvironmentV3", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppServiceEnvironmentV3.
 */
export interface GetAppServiceEnvironmentV3Args {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetAppServiceEnvironmentV3Timeouts;
}

/**
 * A collection of values returned by getAppServiceEnvironmentV3.
 */
export interface GetAppServiceEnvironmentV3Result {
    readonly allowNewPrivateEndpointConnections: boolean;
    readonly clusterSettings: outputs.GetAppServiceEnvironmentV3ClusterSetting[];
    readonly dedicatedHostCount: number;
    readonly dnsSuffix: string;
    readonly externalInboundIpAddresses: string[];
    readonly id: string;
    readonly inboundNetworkDependencies: outputs.GetAppServiceEnvironmentV3InboundNetworkDependency[];
    readonly internalInboundIpAddresses: string[];
    readonly internalLoadBalancingMode: string;
    readonly ipSslAddressCount: number;
    readonly linuxOutboundIpAddresses: string[];
    readonly location: string;
    readonly name: string;
    readonly pricingTier: string;
    readonly remoteDebuggingEnabled: boolean;
    readonly resourceGroupName: string;
    readonly subnetId: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetAppServiceEnvironmentV3Timeouts;
    readonly windowsOutboundIpAddresses: string[];
    readonly zoneRedundant: boolean;
}
export function getAppServiceEnvironmentV3Output(args: GetAppServiceEnvironmentV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppServiceEnvironmentV3Result> {
    return pulumi.output(args).apply((a: any) => getAppServiceEnvironmentV3(a, opts))
}

/**
 * A collection of arguments for invoking getAppServiceEnvironmentV3.
 */
export interface GetAppServiceEnvironmentV3OutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetAppServiceEnvironmentV3TimeoutsArgs>;
}
