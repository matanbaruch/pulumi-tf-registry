// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAppConfiguration(args: GetAppConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetAppConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getAppConfiguration:getAppConfiguration", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppConfiguration.
 */
export interface GetAppConfigurationArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetAppConfigurationTimeouts;
}

/**
 * A collection of values returned by getAppConfiguration.
 */
export interface GetAppConfigurationResult {
    readonly encryptions: outputs.GetAppConfigurationEncryption[];
    readonly endpoint: string;
    readonly id: string;
    readonly identities: outputs.GetAppConfigurationIdentity[];
    readonly localAuthEnabled: boolean;
    readonly location: string;
    readonly name: string;
    readonly primaryReadKeys: outputs.GetAppConfigurationPrimaryReadKey[];
    readonly primaryWriteKeys: outputs.GetAppConfigurationPrimaryWriteKey[];
    readonly publicNetworkAccess: string;
    readonly publicNetworkAccessEnabled: boolean;
    readonly purgeProtectionEnabled: boolean;
    readonly replicas: outputs.GetAppConfigurationReplica[];
    readonly resourceGroupName: string;
    readonly secondaryReadKeys: outputs.GetAppConfigurationSecondaryReadKey[];
    readonly secondaryWriteKeys: outputs.GetAppConfigurationSecondaryWriteKey[];
    readonly sku: string;
    readonly softDeleteRetentionDays: number;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetAppConfigurationTimeouts;
}
export function getAppConfigurationOutput(args: GetAppConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getAppConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getAppConfiguration.
 */
export interface GetAppConfigurationOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetAppConfigurationTimeoutsArgs>;
}
