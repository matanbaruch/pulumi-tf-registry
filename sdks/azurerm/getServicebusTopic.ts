// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServicebusTopic(args: GetServicebusTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetServicebusTopicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getServicebusTopic:getServicebusTopic", {
        "id": args.id,
        "name": args.name,
        "namespaceId": args.namespaceId,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServicebusTopic.
 */
export interface GetServicebusTopicArgs {
    id?: string;
    name: string;
    namespaceId?: string;
    /**
     * @deprecated Deprecated
     */
    namespaceName?: string;
    /**
     * @deprecated Deprecated
     */
    resourceGroupName?: string;
    timeouts?: inputs.GetServicebusTopicTimeouts;
}

/**
 * A collection of values returned by getServicebusTopic.
 */
export interface GetServicebusTopicResult {
    readonly autoDeleteOnIdle: string;
    readonly defaultMessageTtl: string;
    readonly duplicateDetectionHistoryTimeWindow: string;
    readonly enableBatchedOperations: boolean;
    readonly enableExpress: boolean;
    readonly enablePartitioning: boolean;
    readonly id: string;
    readonly maxSizeInMegabytes: number;
    readonly name: string;
    readonly namespaceId?: string;
    /**
     * @deprecated Deprecated
     */
    readonly namespaceName?: string;
    readonly requiresDuplicateDetection: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly resourceGroupName?: string;
    readonly status: string;
    readonly supportOrdering: boolean;
    readonly timeouts?: outputs.GetServicebusTopicTimeouts;
}
export function getServicebusTopicOutput(args: GetServicebusTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServicebusTopicResult> {
    return pulumi.output(args).apply((a: any) => getServicebusTopic(a, opts))
}

/**
 * A collection of arguments for invoking getServicebusTopic.
 */
export interface GetServicebusTopicOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespaceId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    resourceGroupName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetServicebusTopicTimeoutsArgs>;
}
