// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubscription(args?: GetSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getSubscription:getSubscription", {
        "id": args.id,
        "subscriptionId": args.subscriptionId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubscription.
 */
export interface GetSubscriptionArgs {
    id?: string;
    subscriptionId?: string;
    timeouts?: inputs.GetSubscriptionTimeouts;
}

/**
 * A collection of values returned by getSubscription.
 */
export interface GetSubscriptionResult {
    readonly displayName: string;
    readonly id: string;
    readonly locationPlacementId: string;
    readonly quotaId: string;
    readonly spendingLimit: string;
    readonly state: string;
    readonly subscriptionId: string;
    readonly tags: {[key: string]: string};
    readonly tenantId: string;
    readonly timeouts?: outputs.GetSubscriptionTimeouts;
}
export function getSubscriptionOutput(args?: GetSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getSubscription.
 */
export interface GetSubscriptionOutputArgs {
    id?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSubscriptionTimeoutsArgs>;
}
