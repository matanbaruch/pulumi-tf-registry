// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MssqlManagedInstanceActiveDirectoryAdministrator extends pulumi.CustomResource {
    /**
     * Get an existing MssqlManagedInstanceActiveDirectoryAdministrator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MssqlManagedInstanceActiveDirectoryAdministratorState, opts?: pulumi.CustomResourceOptions): MssqlManagedInstanceActiveDirectoryAdministrator {
        return new MssqlManagedInstanceActiveDirectoryAdministrator(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/mssqlManagedInstanceActiveDirectoryAdministrator:MssqlManagedInstanceActiveDirectoryAdministrator';

    /**
     * Returns true if the given object is an instance of MssqlManagedInstanceActiveDirectoryAdministrator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MssqlManagedInstanceActiveDirectoryAdministrator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MssqlManagedInstanceActiveDirectoryAdministrator.__pulumiType;
    }

    public readonly azureadAuthenticationOnly!: pulumi.Output<boolean | undefined>;
    public readonly loginUsername!: pulumi.Output<string>;
    public readonly managedInstanceId!: pulumi.Output<string>;
    public readonly objectId!: pulumi.Output<string>;
    public readonly tenantId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.MssqlManagedInstanceActiveDirectoryAdministratorTimeouts | undefined>;

    /**
     * Create a MssqlManagedInstanceActiveDirectoryAdministrator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MssqlManagedInstanceActiveDirectoryAdministratorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MssqlManagedInstanceActiveDirectoryAdministratorArgs | MssqlManagedInstanceActiveDirectoryAdministratorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MssqlManagedInstanceActiveDirectoryAdministratorState | undefined;
            resourceInputs["azureadAuthenticationOnly"] = state ? state.azureadAuthenticationOnly : undefined;
            resourceInputs["loginUsername"] = state ? state.loginUsername : undefined;
            resourceInputs["managedInstanceId"] = state ? state.managedInstanceId : undefined;
            resourceInputs["objectId"] = state ? state.objectId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as MssqlManagedInstanceActiveDirectoryAdministratorArgs | undefined;
            if ((!args || args.loginUsername === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loginUsername'");
            }
            if ((!args || args.managedInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceId'");
            }
            if ((!args || args.objectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["azureadAuthenticationOnly"] = args ? args.azureadAuthenticationOnly : undefined;
            resourceInputs["loginUsername"] = args ? args.loginUsername : undefined;
            resourceInputs["managedInstanceId"] = args ? args.managedInstanceId : undefined;
            resourceInputs["objectId"] = args ? args.objectId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MssqlManagedInstanceActiveDirectoryAdministrator.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MssqlManagedInstanceActiveDirectoryAdministrator resources.
 */
export interface MssqlManagedInstanceActiveDirectoryAdministratorState {
    azureadAuthenticationOnly?: pulumi.Input<boolean>;
    loginUsername?: pulumi.Input<string>;
    managedInstanceId?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MssqlManagedInstanceActiveDirectoryAdministratorTimeouts>;
}

/**
 * The set of arguments for constructing a MssqlManagedInstanceActiveDirectoryAdministrator resource.
 */
export interface MssqlManagedInstanceActiveDirectoryAdministratorArgs {
    azureadAuthenticationOnly?: pulumi.Input<boolean>;
    loginUsername: pulumi.Input<string>;
    managedInstanceId: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.MssqlManagedInstanceActiveDirectoryAdministratorTimeouts>;
}
