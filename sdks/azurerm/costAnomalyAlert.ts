// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CostAnomalyAlert extends pulumi.CustomResource {
    /**
     * Get an existing CostAnomalyAlert resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CostAnomalyAlertState, opts?: pulumi.CustomResourceOptions): CostAnomalyAlert {
        return new CostAnomalyAlert(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/costAnomalyAlert:CostAnomalyAlert';

    /**
     * Returns true if the given object is an instance of CostAnomalyAlert.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CostAnomalyAlert {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CostAnomalyAlert.__pulumiType;
    }

    public readonly displayName!: pulumi.Output<string>;
    public readonly emailAddresses!: pulumi.Output<string[]>;
    public readonly emailSubject!: pulumi.Output<string>;
    public readonly message!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly subscriptionId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CostAnomalyAlertTimeouts | undefined>;

    /**
     * Create a CostAnomalyAlert resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CostAnomalyAlertArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CostAnomalyAlertArgs | CostAnomalyAlertState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CostAnomalyAlertState | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["emailAddresses"] = state ? state.emailAddresses : undefined;
            resourceInputs["emailSubject"] = state ? state.emailSubject : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CostAnomalyAlertArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.emailAddresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailAddresses'");
            }
            if ((!args || args.emailSubject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailSubject'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["emailAddresses"] = args ? args.emailAddresses : undefined;
            resourceInputs["emailSubject"] = args ? args.emailSubject : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CostAnomalyAlert.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CostAnomalyAlert resources.
 */
export interface CostAnomalyAlertState {
    displayName?: pulumi.Input<string>;
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    emailSubject?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CostAnomalyAlertTimeouts>;
}

/**
 * The set of arguments for constructing a CostAnomalyAlert resource.
 */
export interface CostAnomalyAlertArgs {
    displayName: pulumi.Input<string>;
    emailAddresses: pulumi.Input<pulumi.Input<string>[]>;
    emailSubject: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CostAnomalyAlertTimeouts>;
}
