// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface Aadb2cDirectoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ActiveDirectoryDomainServiceInitialReplicaSet {
    domainControllerIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    externalAccessIpAddress?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    serviceStatus?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface ActiveDirectoryDomainServiceNotifications {
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    notifyDcAdmins?: pulumi.Input<boolean>;
    notifyGlobalAdmins?: pulumi.Input<boolean>;
}

export interface ActiveDirectoryDomainServiceReplicaSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ActiveDirectoryDomainServiceSecureLdap {
    certificateExpiry?: pulumi.Input<string>;
    certificateThumbprint?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    externalAccessEnabled?: pulumi.Input<boolean>;
    pfxCertificate: pulumi.Input<string>;
    pfxCertificatePassword: pulumi.Input<string>;
    publicCertificate?: pulumi.Input<string>;
}

export interface ActiveDirectoryDomainServiceSecurity {
    kerberosArmoringEnabled?: pulumi.Input<boolean>;
    kerberosRc4EncryptionEnabled?: pulumi.Input<boolean>;
    ntlmV1Enabled?: pulumi.Input<boolean>;
    syncKerberosPasswords?: pulumi.Input<boolean>;
    syncNtlmPasswords?: pulumi.Input<boolean>;
    syncOnPremPasswords?: pulumi.Input<boolean>;
    tlsV1Enabled?: pulumi.Input<boolean>;
}

export interface ActiveDirectoryDomainServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ActiveDirectoryDomainServiceTrustTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AdvancedThreatProtectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AiServicesCustomerManagedKey {
    identityClientId?: pulumi.Input<string>;
    keyVaultKeyId?: pulumi.Input<string>;
    managedHsmKeyId?: pulumi.Input<string>;
}

export interface AiServicesIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AiServicesNetworkAcls {
    defaultAction: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<string>[]>;
    virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.AiServicesNetworkAclsVirtualNetworkRule>[]>;
}

export interface AiServicesNetworkAclsVirtualNetworkRule {
    ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface AiServicesStorage {
    identityClientId?: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface AiServicesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AnalysisServicesServerIpv4FirewallRule {
    name: pulumi.Input<string>;
    rangeEnd: pulumi.Input<string>;
    rangeStart: pulumi.Input<string>;
}

export interface AnalysisServicesServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementAdditionalLocation {
    capacity?: pulumi.Input<number>;
    gatewayDisabled?: pulumi.Input<boolean>;
    gatewayRegionalUrl?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    publicIpAddressId?: pulumi.Input<string>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    virtualNetworkConfiguration?: pulumi.Input<inputs.ApiManagementAdditionalLocationVirtualNetworkConfiguration>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementAdditionalLocationVirtualNetworkConfiguration {
    subnetId: pulumi.Input<string>;
}

export interface ApiManagementApiContact {
    email?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticBackendRequest {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementApiDiagnosticBackendRequestDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiDiagnosticBackendRequestDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticBackendRequestDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticBackendRequestDataMaskingQueryParam>[]>;
}

export interface ApiManagementApiDiagnosticBackendRequestDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticBackendRequestDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticBackendResponse {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementApiDiagnosticBackendResponseDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiDiagnosticBackendResponseDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticBackendResponseDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticBackendResponseDataMaskingQueryParam>[]>;
}

export interface ApiManagementApiDiagnosticBackendResponseDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticBackendResponseDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticFrontendRequest {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementApiDiagnosticFrontendRequestDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiDiagnosticFrontendRequestDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticFrontendRequestDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticFrontendRequestDataMaskingQueryParam>[]>;
}

export interface ApiManagementApiDiagnosticFrontendRequestDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticFrontendRequestDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticFrontendResponse {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementApiDiagnosticFrontendResponseDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiDiagnosticFrontendResponseDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticFrontendResponseDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiDiagnosticFrontendResponseDataMaskingQueryParam>[]>;
}

export interface ApiManagementApiDiagnosticFrontendResponseDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticFrontendResponseDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementApiDiagnosticTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiImport {
    contentFormat: pulumi.Input<string>;
    contentValue: pulumi.Input<string>;
    wsdlSelector?: pulumi.Input<inputs.ApiManagementApiImportWsdlSelector>;
}

export interface ApiManagementApiImportWsdlSelector {
    endpointName: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}

export interface ApiManagementApiLicense {
    name?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface ApiManagementApiOauth2Authorization {
    authorizationServerName: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}

export interface ApiManagementApiOpenidAuthentication {
    bearerTokenSendingMethods?: pulumi.Input<pulumi.Input<string>[]>;
    openidProviderName: pulumi.Input<string>;
}

export interface ApiManagementApiOperationPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationRequest {
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestHeader>[]>;
    queryParameters?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestQueryParameter>[]>;
    representations?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestRepresentation>[]>;
}

export interface ApiManagementApiOperationRequestHeader {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestHeaderExample>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    schemaId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiOperationRequestHeaderExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationRequestQueryParameter {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestQueryParameterExample>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    schemaId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiOperationRequestQueryParameterExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationRequestRepresentation {
    contentType: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestRepresentationExample>[]>;
    formParameters?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestRepresentationFormParameter>[]>;
    schemaId?: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationRequestRepresentationExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationRequestRepresentationFormParameter {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationRequestRepresentationFormParameterExample>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    schemaId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiOperationRequestRepresentationFormParameterExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationResponse {
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationResponseHeader>[]>;
    representations?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationResponseRepresentation>[]>;
    statusCode: pulumi.Input<number>;
}

export interface ApiManagementApiOperationResponseHeader {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationResponseHeaderExample>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    schemaId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiOperationResponseHeaderExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationResponseRepresentation {
    contentType: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationResponseRepresentationExample>[]>;
    formParameters?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationResponseRepresentationFormParameter>[]>;
    schemaId?: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationResponseRepresentationExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationResponseRepresentationFormParameter {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationResponseRepresentationFormParameterExample>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    schemaId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiOperationResponseRepresentationFormParameterExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationTagTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationTemplateParameter {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    examples?: pulumi.Input<pulumi.Input<inputs.ApiManagementApiOperationTemplateParameterExample>[]>;
    name: pulumi.Input<string>;
    required: pulumi.Input<boolean>;
    schemaId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeName?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementApiOperationTemplateParameterExample {
    description?: pulumi.Input<string>;
    externalValue?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ApiManagementApiOperationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiReleaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiSchemaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiSubscriptionKeyParameterNames {
    header: pulumi.Input<string>;
    query: pulumi.Input<string>;
}

export interface ApiManagementApiTagDescriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiTagTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementApiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementApiVersionSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementAuthorizationServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementAuthorizationServerTokenBodyParameter {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementBackendCredentials {
    authorization?: pulumi.Input<inputs.ApiManagementBackendCredentialsAuthorization>;
    certificates?: pulumi.Input<pulumi.Input<string>[]>;
    header?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    query?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ApiManagementBackendCredentialsAuthorization {
    parameter?: pulumi.Input<string>;
    scheme?: pulumi.Input<string>;
}

export interface ApiManagementBackendProxy {
    password?: pulumi.Input<string>;
    url: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface ApiManagementBackendServiceFabricCluster {
    clientCertificateId?: pulumi.Input<string>;
    clientCertificateThumbprint?: pulumi.Input<string>;
    managementEndpoints: pulumi.Input<pulumi.Input<string>[]>;
    maxPartitionResolutionRetries: pulumi.Input<number>;
    serverCertificateThumbprints?: pulumi.Input<pulumi.Input<string>[]>;
    serverX509Names?: pulumi.Input<pulumi.Input<inputs.ApiManagementBackendServiceFabricClusterServerX509Name>[]>;
}

export interface ApiManagementBackendServiceFabricClusterServerX509Name {
    issuerCertificateThumbprint: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ApiManagementBackendTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementBackendTls {
    validateCertificateChain?: pulumi.Input<boolean>;
    validateCertificateName?: pulumi.Input<boolean>;
}

export interface ApiManagementCertificate {
    certificatePassword?: pulumi.Input<string>;
    encodedCertificate: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    storeName: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementCustomDomainDeveloperPortal {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementCustomDomainGateway {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    defaultSslBinding?: pulumi.Input<boolean>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementCustomDomainManagement {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementCustomDomainPortal {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementCustomDomainScm {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementDelegation {
    subscriptionsEnabled?: pulumi.Input<boolean>;
    url?: pulumi.Input<string>;
    userRegistrationEnabled?: pulumi.Input<boolean>;
    validationKey?: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticBackendRequest {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementDiagnosticBackendRequestDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementDiagnosticBackendRequestDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticBackendRequestDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticBackendRequestDataMaskingQueryParam>[]>;
}

export interface ApiManagementDiagnosticBackendRequestDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticBackendRequestDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticBackendResponse {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementDiagnosticBackendResponseDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementDiagnosticBackendResponseDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticBackendResponseDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticBackendResponseDataMaskingQueryParam>[]>;
}

export interface ApiManagementDiagnosticBackendResponseDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticBackendResponseDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticFrontendRequest {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementDiagnosticFrontendRequestDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementDiagnosticFrontendRequestDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticFrontendRequestDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticFrontendRequestDataMaskingQueryParam>[]>;
}

export interface ApiManagementDiagnosticFrontendRequestDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticFrontendRequestDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticFrontendResponse {
    bodyBytes?: pulumi.Input<number>;
    dataMasking?: pulumi.Input<inputs.ApiManagementDiagnosticFrontendResponseDataMasking>;
    headersToLogs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiManagementDiagnosticFrontendResponseDataMasking {
    headers?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticFrontendResponseDataMaskingHeader>[]>;
    queryParams?: pulumi.Input<pulumi.Input<inputs.ApiManagementDiagnosticFrontendResponseDataMaskingQueryParam>[]>;
}

export interface ApiManagementDiagnosticFrontendResponseDataMaskingHeader {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticFrontendResponseDataMaskingQueryParam {
    mode: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApiManagementDiagnosticTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementEmailTemplateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementGatewayApiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementGatewayCertificateAuthorityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementGatewayHostNameConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementGatewayLocationData {
    city?: pulumi.Input<string>;
    district?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}

export interface ApiManagementGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementGlobalSchemaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementGroupUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementHostnameConfiguration {
    developerPortals?: pulumi.Input<pulumi.Input<inputs.ApiManagementHostnameConfigurationDeveloperPortal>[]>;
    managements?: pulumi.Input<pulumi.Input<inputs.ApiManagementHostnameConfigurationManagement>[]>;
    portals?: pulumi.Input<pulumi.Input<inputs.ApiManagementHostnameConfigurationPortal>[]>;
    proxies?: pulumi.Input<pulumi.Input<inputs.ApiManagementHostnameConfigurationProxy>[]>;
    scms?: pulumi.Input<pulumi.Input<inputs.ApiManagementHostnameConfigurationScm>[]>;
}

export interface ApiManagementHostnameConfigurationDeveloperPortal {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementHostnameConfigurationManagement {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementHostnameConfigurationPortal {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementHostnameConfigurationProxy {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    defaultSslBinding?: pulumi.Input<boolean>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementHostnameConfigurationScm {
    certificate?: pulumi.Input<string>;
    certificatePassword?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    certificateStatus?: pulumi.Input<string>;
    expiry?: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    keyVaultId?: pulumi.Input<string>;
    negotiateClientCertificate?: pulumi.Input<boolean>;
    sslKeyvaultIdentityClientId?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    thumbprint?: pulumi.Input<string>;
}

export interface ApiManagementIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApiManagementIdentityProviderAadTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementIdentityProviderAadb2cTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementIdentityProviderFacebookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementIdentityProviderGoogleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementIdentityProviderMicrosoftTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementIdentityProviderTwitterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementLoggerApplicationInsights {
    instrumentationKey: pulumi.Input<string>;
}

export interface ApiManagementLoggerEventhub {
    connectionString?: pulumi.Input<string>;
    endpointUri?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    userAssignedIdentityClientId?: pulumi.Input<string>;
}

export interface ApiManagementLoggerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementNamedValueTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementNamedValueValueFromKeyVault {
    identityClientId?: pulumi.Input<string>;
    secretId: pulumi.Input<string>;
}

export interface ApiManagementNotificationRecipientEmailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementNotificationRecipientUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementOpenidConnectProviderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementPolicyFragmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementProductApiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementProductGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementProductPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementProductTagTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApiManagementProductTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementProtocols {
    enableHttp2?: pulumi.Input<boolean>;
}

export interface ApiManagementRedisCacheTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementSecurity {
    enableBackendSsl30?: pulumi.Input<boolean>;
    enableBackendTls10?: pulumi.Input<boolean>;
    enableBackendTls11?: pulumi.Input<boolean>;
    enableFrontendSsl30?: pulumi.Input<boolean>;
    enableFrontendTls10?: pulumi.Input<boolean>;
    enableFrontendTls11?: pulumi.Input<boolean>;
    tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled?: pulumi.Input<boolean>;
    tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled?: pulumi.Input<boolean>;
    tlsEcdheRsaWithAes128CbcShaCiphersEnabled?: pulumi.Input<boolean>;
    tlsEcdheRsaWithAes256CbcShaCiphersEnabled?: pulumi.Input<boolean>;
    tlsRsaWithAes128CbcSha256CiphersEnabled?: pulumi.Input<boolean>;
    tlsRsaWithAes128CbcShaCiphersEnabled?: pulumi.Input<boolean>;
    tlsRsaWithAes128GcmSha256CiphersEnabled?: pulumi.Input<boolean>;
    tlsRsaWithAes256CbcSha256CiphersEnabled?: pulumi.Input<boolean>;
    tlsRsaWithAes256CbcShaCiphersEnabled?: pulumi.Input<boolean>;
    tlsRsaWithAes256GcmSha384CiphersEnabled?: pulumi.Input<boolean>;
    tripleDesCiphersEnabled?: pulumi.Input<boolean>;
}

export interface ApiManagementSignIn {
    enabled: pulumi.Input<boolean>;
}

export interface ApiManagementSignUp {
    enabled: pulumi.Input<boolean>;
    termsOfService: pulumi.Input<inputs.ApiManagementSignUpTermsOfService>;
}

export interface ApiManagementSignUpTermsOfService {
    consentRequired: pulumi.Input<boolean>;
    enabled: pulumi.Input<boolean>;
    text?: pulumi.Input<string>;
}

export interface ApiManagementSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementTagTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementTenantAccess {
    enabled: pulumi.Input<boolean>;
    primaryKey?: pulumi.Input<string>;
    secondaryKey?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface ApiManagementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApiManagementVirtualNetworkConfiguration {
    subnetId: pulumi.Input<string>;
}

export interface AppConfigurationEncryption {
    identityClientId?: pulumi.Input<string>;
    keyVaultKeyIdentifier?: pulumi.Input<string>;
}

export interface AppConfigurationFeatureTargetingFilter {
    defaultRolloutPercentage: pulumi.Input<number>;
    groups?: pulumi.Input<pulumi.Input<inputs.AppConfigurationFeatureTargetingFilterGroup>[]>;
    users?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppConfigurationFeatureTargetingFilterGroup {
    name: pulumi.Input<string>;
    rolloutPercentage: pulumi.Input<number>;
}

export interface AppConfigurationFeatureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppConfigurationFeatureTimewindowFilter {
    end?: pulumi.Input<string>;
    start?: pulumi.Input<string>;
}

export interface AppConfigurationIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AppConfigurationKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppConfigurationPrimaryReadKey {
    connectionString: pulumi.Input<string>;
    id: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface AppConfigurationPrimaryWriteKey {
    connectionString: pulumi.Input<string>;
    id: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface AppConfigurationReplica {
    endpoint?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface AppConfigurationSecondaryReadKey {
    connectionString: pulumi.Input<string>;
    id: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface AppConfigurationSecondaryWriteKey {
    connectionString: pulumi.Input<string>;
    id: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface AppConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceActiveSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceAuthSettings {
    activeDirectory?: pulumi.Input<inputs.AppServiceAuthSettingsActiveDirectory>;
    additionalLoginParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    defaultProvider?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.AppServiceAuthSettingsFacebook>;
    google?: pulumi.Input<inputs.AppServiceAuthSettingsGoogle>;
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.AppServiceAuthSettingsMicrosoft>;
    runtimeVersion?: pulumi.Input<string>;
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.AppServiceAuthSettingsTwitter>;
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface AppServiceAuthSettingsActiveDirectory {
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    clientId: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface AppServiceAuthSettingsFacebook {
    appId: pulumi.Input<string>;
    appSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceAuthSettingsGoogle {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceAuthSettingsMicrosoft {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceAuthSettingsTwitter {
    consumerKey: pulumi.Input<string>;
    consumerSecret: pulumi.Input<string>;
}

export interface AppServiceBackup {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.AppServiceBackupSchedule>;
    storageAccountUrl: pulumi.Input<string>;
}

export interface AppServiceBackupSchedule {
    frequencyInterval: pulumi.Input<number>;
    frequencyUnit: pulumi.Input<string>;
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    retentionPeriodInDays?: pulumi.Input<number>;
    startTime?: pulumi.Input<string>;
}

export interface AppServiceCertificateBindingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AppServiceCertificateOrderCertificate {
    certificateName: pulumi.Input<string>;
    keyVaultId: pulumi.Input<string>;
    keyVaultSecretName: pulumi.Input<string>;
    provisioningState: pulumi.Input<string>;
}

export interface AppServiceCertificateOrderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceConnectionAuthentication {
    certificate?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    principalId?: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AppServiceConnectionSecretStore {
    keyVaultId: pulumi.Input<string>;
}

export interface AppServiceConnectionString {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AppServiceConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceCustomHostnameBindingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AppServiceEnvironmentV3ClusterSetting {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AppServiceEnvironmentV3InboundNetworkDependency {
    description: pulumi.Input<string>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    ports: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceEnvironmentV3Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceHybridConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AppServiceLogs {
    applicationLogs?: pulumi.Input<inputs.AppServiceLogsApplicationLogs>;
    detailedErrorMessagesEnabled?: pulumi.Input<boolean>;
    failedRequestTracingEnabled?: pulumi.Input<boolean>;
    httpLogs?: pulumi.Input<inputs.AppServiceLogsHttpLogs>;
}

export interface AppServiceLogsApplicationLogs {
    azureBlobStorage?: pulumi.Input<inputs.AppServiceLogsApplicationLogsAzureBlobStorage>;
    fileSystemLevel?: pulumi.Input<string>;
}

export interface AppServiceLogsApplicationLogsAzureBlobStorage {
    level: pulumi.Input<string>;
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface AppServiceLogsHttpLogs {
    azureBlobStorage?: pulumi.Input<inputs.AppServiceLogsHttpLogsAzureBlobStorage>;
    fileSystem?: pulumi.Input<inputs.AppServiceLogsHttpLogsFileSystem>;
}

export interface AppServiceLogsHttpLogsAzureBlobStorage {
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface AppServiceLogsHttpLogsFileSystem {
    retentionInDays: pulumi.Input<number>;
    retentionInMb: pulumi.Input<number>;
}

export interface AppServiceManagedCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServicePlanSku {
    capacity?: pulumi.Input<number>;
    size: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface AppServicePlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServicePublicCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AppServiceSiteConfig {
    acrUseManagedIdentityCredentials?: pulumi.Input<boolean>;
    acrUserManagedIdentityClientId?: pulumi.Input<string>;
    alwaysOn?: pulumi.Input<boolean>;
    appCommandLine?: pulumi.Input<string>;
    autoSwapSlotName?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.AppServiceSiteConfigCors>;
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    dotnetFrameworkVersion?: pulumi.Input<string>;
    ftpsState?: pulumi.Input<string>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.AppServiceSiteConfigIpRestriction>[]>;
    javaContainer?: pulumi.Input<string>;
    javaContainerVersion?: pulumi.Input<string>;
    javaVersion?: pulumi.Input<string>;
    linuxFxVersion?: pulumi.Input<string>;
    localMysqlEnabled?: pulumi.Input<boolean>;
    managedPipelineMode?: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    numberOfWorkers?: pulumi.Input<number>;
    phpVersion?: pulumi.Input<string>;
    pythonVersion?: pulumi.Input<string>;
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    remoteDebuggingVersion?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.AppServiceSiteConfigScmIpRestriction>[]>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorkerProcess?: pulumi.Input<boolean>;
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
    windowsFxVersion?: pulumi.Input<string>;
}

export interface AppServiceSiteConfigCors {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    supportCredentials?: pulumi.Input<boolean>;
}

export interface AppServiceSiteConfigIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.AppServiceSiteConfigIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface AppServiceSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceSiteConfigScmIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.AppServiceSiteConfigScmIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface AppServiceSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceSiteCredential {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface AppServiceSlotAuthSettings {
    activeDirectory?: pulumi.Input<inputs.AppServiceSlotAuthSettingsActiveDirectory>;
    additionalLoginParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    defaultProvider?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.AppServiceSlotAuthSettingsFacebook>;
    google?: pulumi.Input<inputs.AppServiceSlotAuthSettingsGoogle>;
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.AppServiceSlotAuthSettingsMicrosoft>;
    runtimeVersion?: pulumi.Input<string>;
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.AppServiceSlotAuthSettingsTwitter>;
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface AppServiceSlotAuthSettingsActiveDirectory {
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    clientId: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface AppServiceSlotAuthSettingsFacebook {
    appId: pulumi.Input<string>;
    appSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceSlotAuthSettingsGoogle {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceSlotAuthSettingsMicrosoft {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceSlotAuthSettingsTwitter {
    consumerKey: pulumi.Input<string>;
    consumerSecret: pulumi.Input<string>;
}

export interface AppServiceSlotConnectionString {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AppServiceSlotCustomHostnameBindingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AppServiceSlotIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AppServiceSlotLogs {
    applicationLogs?: pulumi.Input<inputs.AppServiceSlotLogsApplicationLogs>;
    detailedErrorMessagesEnabled?: pulumi.Input<boolean>;
    failedRequestTracingEnabled?: pulumi.Input<boolean>;
    httpLogs?: pulumi.Input<inputs.AppServiceSlotLogsHttpLogs>;
}

export interface AppServiceSlotLogsApplicationLogs {
    azureBlobStorage?: pulumi.Input<inputs.AppServiceSlotLogsApplicationLogsAzureBlobStorage>;
    fileSystemLevel?: pulumi.Input<string>;
}

export interface AppServiceSlotLogsApplicationLogsAzureBlobStorage {
    level: pulumi.Input<string>;
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface AppServiceSlotLogsHttpLogs {
    azureBlobStorage?: pulumi.Input<inputs.AppServiceSlotLogsHttpLogsAzureBlobStorage>;
    fileSystem?: pulumi.Input<inputs.AppServiceSlotLogsHttpLogsFileSystem>;
}

export interface AppServiceSlotLogsHttpLogsAzureBlobStorage {
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface AppServiceSlotLogsHttpLogsFileSystem {
    retentionInDays: pulumi.Input<number>;
    retentionInMb: pulumi.Input<number>;
}

export interface AppServiceSlotSiteConfig {
    acrUseManagedIdentityCredentials?: pulumi.Input<boolean>;
    acrUserManagedIdentityClientId?: pulumi.Input<string>;
    alwaysOn?: pulumi.Input<boolean>;
    appCommandLine?: pulumi.Input<string>;
    autoSwapSlotName?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.AppServiceSlotSiteConfigCors>;
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    dotnetFrameworkVersion?: pulumi.Input<string>;
    ftpsState?: pulumi.Input<string>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.AppServiceSlotSiteConfigIpRestriction>[]>;
    javaContainer?: pulumi.Input<string>;
    javaContainerVersion?: pulumi.Input<string>;
    javaVersion?: pulumi.Input<string>;
    linuxFxVersion?: pulumi.Input<string>;
    localMysqlEnabled?: pulumi.Input<boolean>;
    managedPipelineMode?: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    numberOfWorkers?: pulumi.Input<number>;
    phpVersion?: pulumi.Input<string>;
    pythonVersion?: pulumi.Input<string>;
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    remoteDebuggingVersion?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.AppServiceSlotSiteConfigScmIpRestriction>[]>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorkerProcess?: pulumi.Input<boolean>;
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
    windowsFxVersion?: pulumi.Input<string>;
}

export interface AppServiceSlotSiteConfigCors {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    supportCredentials?: pulumi.Input<boolean>;
}

export interface AppServiceSlotSiteConfigIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.AppServiceSlotSiteConfigIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface AppServiceSlotSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceSlotSiteConfigScmIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.AppServiceSlotSiteConfigScmIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface AppServiceSlotSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppServiceSlotSiteCredential {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface AppServiceSlotStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AppServiceSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceSlotVirtualNetworkSwiftConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceSourceControl {
    branch?: pulumi.Input<string>;
    manualIntegration?: pulumi.Input<boolean>;
    repoUrl?: pulumi.Input<string>;
    rollbackEnabled?: pulumi.Input<boolean>;
    useMercurial?: pulumi.Input<boolean>;
}

export interface AppServiceSourceControlGithubActionConfiguration {
    codeConfiguration?: pulumi.Input<inputs.AppServiceSourceControlGithubActionConfigurationCodeConfiguration>;
    containerConfiguration?: pulumi.Input<inputs.AppServiceSourceControlGithubActionConfigurationContainerConfiguration>;
    /**
     * Should the service generate the GitHub Action Workflow file. Defaults to `true`
     */
    generateWorkflowFile?: pulumi.Input<boolean>;
    /**
     * Denotes this action uses a Linux base image.
     */
    linuxAction?: pulumi.Input<boolean>;
}

export interface AppServiceSourceControlGithubActionConfigurationCodeConfiguration {
    /**
     * The value to use for the Runtime Stack in the workflow file content for code base apps.
     */
    runtimeStack: pulumi.Input<string>;
    /**
     * The value to use for the Runtime Version in the workflow file content for code base apps.
     */
    runtimeVersion: pulumi.Input<string>;
}

export interface AppServiceSourceControlGithubActionConfigurationContainerConfiguration {
    /**
     * The image name for the build.
     */
    imageName: pulumi.Input<string>;
    /**
     * The password used to upload the image to the container registry.
     */
    registryPassword?: pulumi.Input<string>;
    /**
     * The server URL for the container registry where the build will be hosted.
     */
    registryUrl: pulumi.Input<string>;
    /**
     * The username used to upload the image to the container registry.
     */
    registryUsername?: pulumi.Input<string>;
}

export interface AppServiceSourceControlSlotGithubActionConfiguration {
    codeConfiguration?: pulumi.Input<inputs.AppServiceSourceControlSlotGithubActionConfigurationCodeConfiguration>;
    containerConfiguration?: pulumi.Input<inputs.AppServiceSourceControlSlotGithubActionConfigurationContainerConfiguration>;
    /**
     * Should the service generate the GitHub Action Workflow file. Defaults to `true`
     */
    generateWorkflowFile?: pulumi.Input<boolean>;
    /**
     * Denotes this action uses a Linux base image.
     */
    linuxAction?: pulumi.Input<boolean>;
}

export interface AppServiceSourceControlSlotGithubActionConfigurationCodeConfiguration {
    /**
     * The value to use for the Runtime Stack in the workflow file content for code base apps.
     */
    runtimeStack: pulumi.Input<string>;
    /**
     * The value to use for the Runtime Version in the workflow file content for code base apps.
     */
    runtimeVersion: pulumi.Input<string>;
}

export interface AppServiceSourceControlSlotGithubActionConfigurationContainerConfiguration {
    /**
     * The image name for the build.
     */
    imageName: pulumi.Input<string>;
    /**
     * The password used to upload the image to the container registry.
     */
    registryPassword?: pulumi.Input<string>;
    /**
     * The server URL for the container registry where the build will be hosted.
     */
    registryUrl: pulumi.Input<string>;
    /**
     * The username used to upload the image to the container registry.
     */
    registryUsername?: pulumi.Input<string>;
}

export interface AppServiceSourceControlSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AppServiceSourceControlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AppServiceSourceControlTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AppServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AppServiceVirtualNetworkSwiftConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationGatewayAuthenticationCertificate {
    data: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ApplicationGatewayAutoscaleConfiguration {
    maxCapacity?: pulumi.Input<number>;
    minCapacity: pulumi.Input<number>;
}

export interface ApplicationGatewayBackendAddressPool {
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface ApplicationGatewayBackendHttpSetting {
    affinityCookieName?: pulumi.Input<string>;
    authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayBackendHttpSettingAuthenticationCertificate>[]>;
    connectionDraining?: pulumi.Input<inputs.ApplicationGatewayBackendHttpSettingConnectionDraining>;
    cookieBasedAffinity: pulumi.Input<string>;
    hostName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    pickHostNameFromBackendAddress?: pulumi.Input<boolean>;
    port: pulumi.Input<number>;
    probeId?: pulumi.Input<string>;
    probeName?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    requestTimeout?: pulumi.Input<number>;
    trustedRootCertificateNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationGatewayBackendHttpSettingAuthenticationCertificate {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ApplicationGatewayBackendHttpSettingConnectionDraining {
    drainTimeoutSec: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
}

export interface ApplicationGatewayCustomErrorConfiguration {
    customErrorPageUrl: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    statusCode: pulumi.Input<string>;
}

export interface ApplicationGatewayFrontendIpConfiguration {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAddressAllocation?: pulumi.Input<string>;
    privateLinkConfigurationId?: pulumi.Input<string>;
    privateLinkConfigurationName?: pulumi.Input<string>;
    publicIpAddressId?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface ApplicationGatewayFrontendPort {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface ApplicationGatewayGatewayIpConfiguration {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface ApplicationGatewayGlobal {
    requestBufferingEnabled: pulumi.Input<boolean>;
    responseBufferingEnabled: pulumi.Input<boolean>;
}

export interface ApplicationGatewayHttpListener {
    customErrorConfigurations?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayHttpListenerCustomErrorConfiguration>[]>;
    firewallPolicyId?: pulumi.Input<string>;
    frontendIpConfigurationId?: pulumi.Input<string>;
    frontendIpConfigurationName: pulumi.Input<string>;
    frontendPortId?: pulumi.Input<string>;
    frontendPortName: pulumi.Input<string>;
    hostName?: pulumi.Input<string>;
    hostNames?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    requireSni?: pulumi.Input<boolean>;
    sslCertificateId?: pulumi.Input<string>;
    sslCertificateName?: pulumi.Input<string>;
    sslProfileId?: pulumi.Input<string>;
    sslProfileName?: pulumi.Input<string>;
}

export interface ApplicationGatewayHttpListenerCustomErrorConfiguration {
    customErrorPageUrl: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    statusCode: pulumi.Input<string>;
}

export interface ApplicationGatewayIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApplicationGatewayPrivateEndpointConnection {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ApplicationGatewayPrivateLinkConfiguration {
    id?: pulumi.Input<string>;
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayPrivateLinkConfigurationIpConfiguration>[]>;
    name: pulumi.Input<string>;
}

export interface ApplicationGatewayPrivateLinkConfigurationIpConfiguration {
    name: pulumi.Input<string>;
    primary: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAddressAllocation: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface ApplicationGatewayProbe {
    host?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interval: pulumi.Input<number>;
    match?: pulumi.Input<inputs.ApplicationGatewayProbeMatch>;
    minimumServers?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    path: pulumi.Input<string>;
    pickHostNameFromBackendHttpSettings?: pulumi.Input<boolean>;
    port?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    timeout: pulumi.Input<number>;
    unhealthyThreshold: pulumi.Input<number>;
}

export interface ApplicationGatewayProbeMatch {
    body?: pulumi.Input<string>;
    statusCodes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationGatewayRedirectConfiguration {
    id?: pulumi.Input<string>;
    includePath?: pulumi.Input<boolean>;
    includeQueryString?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    redirectType: pulumi.Input<string>;
    targetListenerId?: pulumi.Input<string>;
    targetListenerName?: pulumi.Input<string>;
    targetUrl?: pulumi.Input<string>;
}

export interface ApplicationGatewayRequestRoutingRule {
    backendAddressPoolId?: pulumi.Input<string>;
    backendAddressPoolName?: pulumi.Input<string>;
    backendHttpSettingsId?: pulumi.Input<string>;
    backendHttpSettingsName?: pulumi.Input<string>;
    httpListenerId?: pulumi.Input<string>;
    httpListenerName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    redirectConfigurationId?: pulumi.Input<string>;
    redirectConfigurationName?: pulumi.Input<string>;
    rewriteRuleSetId?: pulumi.Input<string>;
    rewriteRuleSetName?: pulumi.Input<string>;
    ruleType: pulumi.Input<string>;
    urlPathMapId?: pulumi.Input<string>;
    urlPathMapName?: pulumi.Input<string>;
}

export interface ApplicationGatewayRewriteRuleSet {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    rewriteRules?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayRewriteRuleSetRewriteRule>[]>;
}

export interface ApplicationGatewayRewriteRuleSetRewriteRule {
    conditions?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayRewriteRuleSetRewriteRuleCondition>[]>;
    name: pulumi.Input<string>;
    requestHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration>[]>;
    responseHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration>[]>;
    ruleSequence: pulumi.Input<number>;
    url?: pulumi.Input<inputs.ApplicationGatewayRewriteRuleSetRewriteRuleUrl>;
}

export interface ApplicationGatewayRewriteRuleSetRewriteRuleCondition {
    ignoreCase?: pulumi.Input<boolean>;
    negate?: pulumi.Input<boolean>;
    pattern: pulumi.Input<string>;
    variable: pulumi.Input<string>;
}

export interface ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration {
    headerName: pulumi.Input<string>;
    headerValue: pulumi.Input<string>;
}

export interface ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration {
    headerName: pulumi.Input<string>;
    headerValue: pulumi.Input<string>;
}

export interface ApplicationGatewayRewriteRuleSetRewriteRuleUrl {
    components?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    queryString?: pulumi.Input<string>;
    reroute?: pulumi.Input<boolean>;
}

export interface ApplicationGatewaySku {
    capacity?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface ApplicationGatewaySslCertificate {
    data?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keyVaultSecretId?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    publicCertData?: pulumi.Input<string>;
}

export interface ApplicationGatewaySslPolicy {
    cipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
    disabledProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    minProtocolVersion?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
}

export interface ApplicationGatewaySslProfile {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    sslPolicy?: pulumi.Input<inputs.ApplicationGatewaySslProfileSslPolicy>;
    trustedClientCertificateNames?: pulumi.Input<pulumi.Input<string>[]>;
    verifyClientCertIssuerDn?: pulumi.Input<boolean>;
    verifyClientCertificateRevocation?: pulumi.Input<string>;
}

export interface ApplicationGatewaySslProfileSslPolicy {
    cipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
    disabledProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    minProtocolVersion?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
}

export interface ApplicationGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationGatewayTrustedClientCertificate {
    data: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ApplicationGatewayTrustedRootCertificate {
    data?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keyVaultSecretId?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ApplicationGatewayUrlPathMap {
    defaultBackendAddressPoolId?: pulumi.Input<string>;
    defaultBackendAddressPoolName?: pulumi.Input<string>;
    defaultBackendHttpSettingsId?: pulumi.Input<string>;
    defaultBackendHttpSettingsName?: pulumi.Input<string>;
    defaultRedirectConfigurationId?: pulumi.Input<string>;
    defaultRedirectConfigurationName?: pulumi.Input<string>;
    defaultRewriteRuleSetId?: pulumi.Input<string>;
    defaultRewriteRuleSetName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    pathRules: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayUrlPathMapPathRule>[]>;
}

export interface ApplicationGatewayUrlPathMapPathRule {
    backendAddressPoolId?: pulumi.Input<string>;
    backendAddressPoolName?: pulumi.Input<string>;
    backendHttpSettingsId?: pulumi.Input<string>;
    backendHttpSettingsName?: pulumi.Input<string>;
    firewallPolicyId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    paths: pulumi.Input<pulumi.Input<string>[]>;
    redirectConfigurationId?: pulumi.Input<string>;
    redirectConfigurationName?: pulumi.Input<string>;
    rewriteRuleSetId?: pulumi.Input<string>;
    rewriteRuleSetName?: pulumi.Input<string>;
}

export interface ApplicationGatewayWafConfiguration {
    disabledRuleGroups?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayWafConfigurationDisabledRuleGroup>[]>;
    enabled: pulumi.Input<boolean>;
    exclusions?: pulumi.Input<pulumi.Input<inputs.ApplicationGatewayWafConfigurationExclusion>[]>;
    fileUploadLimitMb?: pulumi.Input<number>;
    firewallMode: pulumi.Input<string>;
    maxRequestBodySizeKb?: pulumi.Input<number>;
    requestBodyCheck?: pulumi.Input<boolean>;
    ruleSetType?: pulumi.Input<string>;
    ruleSetVersion: pulumi.Input<string>;
}

export interface ApplicationGatewayWafConfigurationDisabledRuleGroup {
    ruleGroupName: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface ApplicationGatewayWafConfigurationExclusion {
    matchVariable: pulumi.Input<string>;
    selector?: pulumi.Input<string>;
    selectorMatchOperator?: pulumi.Input<string>;
}

export interface ApplicationInsightsAnalyticsItemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationInsightsApiKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ApplicationInsightsSmartDetectionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationInsightsStandardWebTestRequest {
    body?: pulumi.Input<string>;
    followRedirectsEnabled?: pulumi.Input<boolean>;
    headers?: pulumi.Input<pulumi.Input<inputs.ApplicationInsightsStandardWebTestRequestHeader>[]>;
    httpVerb?: pulumi.Input<string>;
    parseDependentRequestsEnabled?: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface ApplicationInsightsStandardWebTestRequestHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ApplicationInsightsStandardWebTestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationInsightsStandardWebTestValidationRules {
    content?: pulumi.Input<inputs.ApplicationInsightsStandardWebTestValidationRulesContent>;
    expectedStatusCode?: pulumi.Input<number>;
    sslCertRemainingLifetime?: pulumi.Input<number>;
    sslCheckEnabled?: pulumi.Input<boolean>;
}

export interface ApplicationInsightsStandardWebTestValidationRulesContent {
    contentMatch: pulumi.Input<string>;
    ignoreCase?: pulumi.Input<boolean>;
    passIfTextFound?: pulumi.Input<boolean>;
}

export interface ApplicationInsightsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationInsightsWebTestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationInsightsWorkbookIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ApplicationInsightsWorkbookTemplateGallery {
    category: pulumi.Input<string>;
    name: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    resourceType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface ApplicationInsightsWorkbookTemplateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationInsightsWorkbookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationLoadBalancerFrontendTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationLoadBalancerSubnetAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationLoadBalancerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ApplicationSecurityGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArcKubernetesClusterExtensionIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ArcKubernetesClusterExtensionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArcKubernetesClusterIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ArcKubernetesClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArcKubernetesFluxConfigurationBlobStorage {
    accountKey?: pulumi.Input<string>;
    containerId: pulumi.Input<string>;
    localAuthReference?: pulumi.Input<string>;
    sasToken?: pulumi.Input<string>;
    servicePrincipal?: pulumi.Input<inputs.ArcKubernetesFluxConfigurationBlobStorageServicePrincipal>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
}

export interface ArcKubernetesFluxConfigurationBlobStorageServicePrincipal {
    clientCertificateBase64?: pulumi.Input<string>;
    clientCertificatePassword?: pulumi.Input<string>;
    clientCertificateSendChain?: pulumi.Input<boolean>;
    clientId: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface ArcKubernetesFluxConfigurationBucket {
    accessKey?: pulumi.Input<string>;
    bucketName: pulumi.Input<string>;
    localAuthReference?: pulumi.Input<string>;
    secretKeyBase64?: pulumi.Input<string>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
    tlsEnabled?: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface ArcKubernetesFluxConfigurationGitRepository {
    httpsCaCertBase64?: pulumi.Input<string>;
    httpsKeyBase64?: pulumi.Input<string>;
    httpsUser?: pulumi.Input<string>;
    localAuthReference?: pulumi.Input<string>;
    referenceType: pulumi.Input<string>;
    referenceValue: pulumi.Input<string>;
    sshKnownHostsBase64?: pulumi.Input<string>;
    sshPrivateKeyBase64?: pulumi.Input<string>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
    url: pulumi.Input<string>;
}

export interface ArcKubernetesFluxConfigurationKustomization {
    dependsOns?: pulumi.Input<pulumi.Input<string>[]>;
    garbageCollectionEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    recreatingEnabled?: pulumi.Input<boolean>;
    retryIntervalInSeconds?: pulumi.Input<number>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
}

export interface ArcKubernetesFluxConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArcMachineExtensionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArcPrivateLinkScopeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ArcResourceBridgeApplianceIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ArcResourceBridgeApplianceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AttestationProviderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomanageConfigurationAntimalware {
    exclusions?: pulumi.Input<inputs.AutomanageConfigurationAntimalwareExclusions>;
    realTimeProtectionEnabled?: pulumi.Input<boolean>;
    scheduledScanDay?: pulumi.Input<number>;
    scheduledScanEnabled?: pulumi.Input<boolean>;
    scheduledScanTimeInMinutes?: pulumi.Input<number>;
    scheduledScanType?: pulumi.Input<string>;
}

export interface AutomanageConfigurationAntimalwareExclusions {
    extensions?: pulumi.Input<string>;
    paths?: pulumi.Input<string>;
    processes?: pulumi.Input<string>;
}

export interface AutomanageConfigurationAzureSecurityBaseline {
    assignmentType?: pulumi.Input<string>;
}

export interface AutomanageConfigurationBackup {
    instantRpRetentionRangeInDays?: pulumi.Input<number>;
    policyName?: pulumi.Input<string>;
    retentionPolicy?: pulumi.Input<inputs.AutomanageConfigurationBackupRetentionPolicy>;
    schedulePolicy?: pulumi.Input<inputs.AutomanageConfigurationBackupSchedulePolicy>;
    timeZone?: pulumi.Input<string>;
}

export interface AutomanageConfigurationBackupRetentionPolicy {
    dailySchedule?: pulumi.Input<inputs.AutomanageConfigurationBackupRetentionPolicyDailySchedule>;
    retentionPolicyType?: pulumi.Input<string>;
    weeklySchedule?: pulumi.Input<inputs.AutomanageConfigurationBackupRetentionPolicyWeeklySchedule>;
}

export interface AutomanageConfigurationBackupRetentionPolicyDailySchedule {
    retentionDuration?: pulumi.Input<inputs.AutomanageConfigurationBackupRetentionPolicyDailyScheduleRetentionDuration>;
    retentionTimes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AutomanageConfigurationBackupRetentionPolicyDailyScheduleRetentionDuration {
    count?: pulumi.Input<number>;
    durationType?: pulumi.Input<string>;
}

export interface AutomanageConfigurationBackupRetentionPolicyWeeklySchedule {
    retentionDuration?: pulumi.Input<inputs.AutomanageConfigurationBackupRetentionPolicyWeeklyScheduleRetentionDuration>;
    retentionTimes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AutomanageConfigurationBackupRetentionPolicyWeeklyScheduleRetentionDuration {
    count?: pulumi.Input<number>;
    durationType?: pulumi.Input<string>;
}

export interface AutomanageConfigurationBackupSchedulePolicy {
    schedulePolicyType?: pulumi.Input<string>;
    scheduleRunDays?: pulumi.Input<pulumi.Input<string>[]>;
    scheduleRunFrequency?: pulumi.Input<string>;
    scheduleRunTimes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AutomanageConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationAccountEncryption {
    /**
     * @deprecated Deprecated
     */
    keySource?: pulumi.Input<string>;
    keyVaultKeyId: pulumi.Input<string>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface AutomationAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AutomationAccountPrivateEndpointConnection {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface AutomationAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationConnectionCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationConnectionClassicCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationConnectionServicePrincipalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationConnectionTypeField {
    isEncrypted?: pulumi.Input<boolean>;
    isOptional?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface AutomationConnectionTypeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AutomationCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationDscConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationDscNodeconfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationHybridRunbookWorkerGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationHybridRunbookWorkerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AutomationJobScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AutomationModuleModuleLink {
    hash?: pulumi.Input<inputs.AutomationModuleModuleLinkHash>;
    uri: pulumi.Input<string>;
}

export interface AutomationModuleModuleLinkHash {
    algorithm: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AutomationModuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationPowershell72ModuleModuleLink {
    hash?: pulumi.Input<inputs.AutomationPowershell72ModuleModuleLinkHash>;
    uri: pulumi.Input<string>;
}

export interface AutomationPowershell72ModuleModuleLinkHash {
    algorithm: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AutomationPowershell72ModuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationPython3PackageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationRunbookDraft {
    contentLink?: pulumi.Input<inputs.AutomationRunbookDraftContentLink>;
    creationTime?: pulumi.Input<string>;
    editModeEnabled?: pulumi.Input<boolean>;
    lastModifiedTime?: pulumi.Input<string>;
    outputTypes?: pulumi.Input<pulumi.Input<string>[]>;
    parameters?: pulumi.Input<pulumi.Input<inputs.AutomationRunbookDraftParameter>[]>;
}

export interface AutomationRunbookDraftContentLink {
    hash?: pulumi.Input<inputs.AutomationRunbookDraftContentLinkHash>;
    uri: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface AutomationRunbookDraftContentLinkHash {
    algorithm: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AutomationRunbookDraftParameter {
    defaultValue?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    mandatory?: pulumi.Input<boolean>;
    position?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface AutomationRunbookJobSchedule {
    jobScheduleId: pulumi.Input<string>;
    parameters: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    runOn: pulumi.Input<string>;
    scheduleName: pulumi.Input<string>;
}

export interface AutomationRunbookPublishContentLink {
    hash?: pulumi.Input<inputs.AutomationRunbookPublishContentLinkHash>;
    uri: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface AutomationRunbookPublishContentLinkHash {
    algorithm: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface AutomationRunbookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationScheduleMonthlyOccurrence {
    day: pulumi.Input<string>;
    occurrence: pulumi.Input<number>;
}

export interface AutomationScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationSoftwareUpdateConfigurationLinux {
    classificationsIncludeds: pulumi.Input<pulumi.Input<string>[]>;
    excludedPackages?: pulumi.Input<pulumi.Input<string>[]>;
    includedPackages?: pulumi.Input<pulumi.Input<string>[]>;
    reboot?: pulumi.Input<string>;
}

export interface AutomationSoftwareUpdateConfigurationPostTask {
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    source?: pulumi.Input<string>;
}

export interface AutomationSoftwareUpdateConfigurationPreTask {
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    source?: pulumi.Input<string>;
}

export interface AutomationSoftwareUpdateConfigurationSchedule {
    advancedMonthDays?: pulumi.Input<pulumi.Input<number>[]>;
    advancedWeekDays?: pulumi.Input<pulumi.Input<string>[]>;
    creationTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    expiryTime?: pulumi.Input<string>;
    expiryTimeOffsetMinutes?: pulumi.Input<number>;
    frequency: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    isEnabled?: pulumi.Input<boolean>;
    lastModifiedTime?: pulumi.Input<string>;
    monthlyOccurrence?: pulumi.Input<inputs.AutomationSoftwareUpdateConfigurationScheduleMonthlyOccurrence>;
    nextRun?: pulumi.Input<string>;
    nextRunOffsetMinutes?: pulumi.Input<number>;
    startTime?: pulumi.Input<string>;
    startTimeOffsetMinutes?: pulumi.Input<number>;
    timeZone?: pulumi.Input<string>;
}

export interface AutomationSoftwareUpdateConfigurationScheduleMonthlyOccurrence {
    day: pulumi.Input<string>;
    occurrence: pulumi.Input<number>;
}

export interface AutomationSoftwareUpdateConfigurationTarget {
    azureQueries?: pulumi.Input<pulumi.Input<inputs.AutomationSoftwareUpdateConfigurationTargetAzureQuery>[]>;
    nonAzureQueries?: pulumi.Input<pulumi.Input<inputs.AutomationSoftwareUpdateConfigurationTargetNonAzureQuery>[]>;
}

export interface AutomationSoftwareUpdateConfigurationTargetAzureQuery {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    tagFilter?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AutomationSoftwareUpdateConfigurationTargetAzureQueryTag>[]>;
}

export interface AutomationSoftwareUpdateConfigurationTargetAzureQueryTag {
    tag: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AutomationSoftwareUpdateConfigurationTargetNonAzureQuery {
    functionAlias?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}

export interface AutomationSoftwareUpdateConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationSoftwareUpdateConfigurationWindows {
    classificationsIncludeds: pulumi.Input<pulumi.Input<string>[]>;
    excludedKnowledgeBaseNumbers?: pulumi.Input<pulumi.Input<string>[]>;
    includedKnowledgeBaseNumbers?: pulumi.Input<pulumi.Input<string>[]>;
    reboot?: pulumi.Input<string>;
}

export interface AutomationSourceControlSecurity {
    refreshToken?: pulumi.Input<string>;
    token: pulumi.Input<string>;
    tokenType: pulumi.Input<string>;
}

export interface AutomationSourceControlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationVariableBoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationVariableDatetimeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationVariableIntTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationVariableObjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationVariableStringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationWatcherTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AutomationWebhookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AvailabilitySetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BackupContainerStorageAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface BackupPolicyFileShareBackup {
    frequency: pulumi.Input<string>;
    hourly?: pulumi.Input<inputs.BackupPolicyFileShareBackupHourly>;
    time?: pulumi.Input<string>;
}

export interface BackupPolicyFileShareBackupHourly {
    interval: pulumi.Input<number>;
    startTime: pulumi.Input<string>;
    windowDuration: pulumi.Input<number>;
}

export interface BackupPolicyFileShareRetentionDaily {
    count: pulumi.Input<number>;
}

export interface BackupPolicyFileShareRetentionMonthly {
    count: pulumi.Input<number>;
    days?: pulumi.Input<pulumi.Input<number>[]>;
    includeLastDays?: pulumi.Input<boolean>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    weeks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyFileShareRetentionWeekly {
    count: pulumi.Input<number>;
    weekdays: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyFileShareRetentionYearly {
    count: pulumi.Input<number>;
    days?: pulumi.Input<pulumi.Input<number>[]>;
    includeLastDays?: pulumi.Input<boolean>;
    months: pulumi.Input<pulumi.Input<string>[]>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    weeks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyFileShareTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BackupPolicyVmBackup {
    frequency: pulumi.Input<string>;
    hourDuration?: pulumi.Input<number>;
    hourInterval?: pulumi.Input<number>;
    time: pulumi.Input<string>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmInstantRestoreResourceGroup {
    prefix: pulumi.Input<string>;
    suffix?: pulumi.Input<string>;
}

export interface BackupPolicyVmRetentionDaily {
    count: pulumi.Input<number>;
}

export interface BackupPolicyVmRetentionMonthly {
    count: pulumi.Input<number>;
    days?: pulumi.Input<pulumi.Input<number>[]>;
    includeLastDays?: pulumi.Input<boolean>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    weeks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmRetentionWeekly {
    count: pulumi.Input<number>;
    weekdays: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmRetentionYearly {
    count: pulumi.Input<number>;
    days?: pulumi.Input<pulumi.Input<number>[]>;
    includeLastDays?: pulumi.Input<boolean>;
    months: pulumi.Input<pulumi.Input<string>[]>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    weeks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmTieringPolicy {
    archivedRestorePoint: pulumi.Input<inputs.BackupPolicyVmTieringPolicyArchivedRestorePoint>;
}

export interface BackupPolicyVmTieringPolicyArchivedRestorePoint {
    duration?: pulumi.Input<number>;
    durationType?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface BackupPolicyVmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BackupPolicyVmWorkloadProtectionPolicy {
    backup: pulumi.Input<inputs.BackupPolicyVmWorkloadProtectionPolicyBackup>;
    policyType: pulumi.Input<string>;
    retentionDaily?: pulumi.Input<inputs.BackupPolicyVmWorkloadProtectionPolicyRetentionDaily>;
    retentionMonthly?: pulumi.Input<inputs.BackupPolicyVmWorkloadProtectionPolicyRetentionMonthly>;
    retentionWeekly?: pulumi.Input<inputs.BackupPolicyVmWorkloadProtectionPolicyRetentionWeekly>;
    retentionYearly?: pulumi.Input<inputs.BackupPolicyVmWorkloadProtectionPolicyRetentionYearly>;
    simpleRetention?: pulumi.Input<inputs.BackupPolicyVmWorkloadProtectionPolicySimpleRetention>;
}

export interface BackupPolicyVmWorkloadProtectionPolicyBackup {
    frequency?: pulumi.Input<string>;
    frequencyInMinutes?: pulumi.Input<number>;
    time?: pulumi.Input<string>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmWorkloadProtectionPolicyRetentionDaily {
    count: pulumi.Input<number>;
}

export interface BackupPolicyVmWorkloadProtectionPolicyRetentionMonthly {
    count: pulumi.Input<number>;
    formatType: pulumi.Input<string>;
    monthdays?: pulumi.Input<pulumi.Input<number>[]>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    weeks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmWorkloadProtectionPolicyRetentionWeekly {
    count: pulumi.Input<number>;
    weekdays: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmWorkloadProtectionPolicyRetentionYearly {
    count: pulumi.Input<number>;
    formatType: pulumi.Input<string>;
    monthdays?: pulumi.Input<pulumi.Input<number>[]>;
    months: pulumi.Input<pulumi.Input<string>[]>;
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    weeks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmWorkloadProtectionPolicySimpleRetention {
    count: pulumi.Input<number>;
}

export interface BackupPolicyVmWorkloadSettings {
    compressionEnabled?: pulumi.Input<boolean>;
    timeZone: pulumi.Input<string>;
}

export interface BackupPolicyVmWorkloadTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BackupProtectedFileShareTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BackupProtectedVmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BastionHostIpConfiguration {
    name: pulumi.Input<string>;
    publicIpAddressId: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface BastionHostTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BatchAccountEncryption {
    keyVaultKeyId: pulumi.Input<string>;
}

export interface BatchAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface BatchAccountKeyVaultReference {
    id: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface BatchAccountNetworkProfile {
    accountAccess?: pulumi.Input<inputs.BatchAccountNetworkProfileAccountAccess>;
    nodeManagementAccess?: pulumi.Input<inputs.BatchAccountNetworkProfileNodeManagementAccess>;
}

export interface BatchAccountNetworkProfileAccountAccess {
    defaultAction?: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<inputs.BatchAccountNetworkProfileAccountAccessIpRule>[]>;
}

export interface BatchAccountNetworkProfileAccountAccessIpRule {
    action?: pulumi.Input<string>;
    ipRange: pulumi.Input<string>;
}

export interface BatchAccountNetworkProfileNodeManagementAccess {
    defaultAction?: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<inputs.BatchAccountNetworkProfileNodeManagementAccessIpRule>[]>;
}

export interface BatchAccountNetworkProfileNodeManagementAccessIpRule {
    action?: pulumi.Input<string>;
    ipRange: pulumi.Input<string>;
}

export interface BatchAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BatchApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BatchCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BatchJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BatchPoolAutoScale {
    evaluationInterval?: pulumi.Input<string>;
    formula: pulumi.Input<string>;
}

export interface BatchPoolCertificate {
    id: pulumi.Input<string>;
    storeLocation: pulumi.Input<string>;
    storeName?: pulumi.Input<string>;
    visibilities?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BatchPoolContainerConfiguration {
    containerImageNames?: pulumi.Input<pulumi.Input<string>[]>;
    containerRegistries?: pulumi.Input<pulumi.Input<inputs.BatchPoolContainerConfigurationContainerRegistry>[]>;
    type?: pulumi.Input<string>;
}

export interface BatchPoolContainerConfigurationContainerRegistry {
    password: pulumi.Input<string>;
    registryServer: pulumi.Input<string>;
    userAssignedIdentityId: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface BatchPoolDataDisk {
    caching?: pulumi.Input<string>;
    diskSizeGb: pulumi.Input<number>;
    lun: pulumi.Input<number>;
    storageAccountType?: pulumi.Input<string>;
}

export interface BatchPoolDiskEncryption {
    diskEncryptionTarget: pulumi.Input<string>;
}

export interface BatchPoolExtension {
    autoUpgradeMinorVersion?: pulumi.Input<boolean>;
    automaticUpgradeEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    protectedSettings?: pulumi.Input<string>;
    provisionAfterExtensions?: pulumi.Input<pulumi.Input<string>[]>;
    publisher: pulumi.Input<string>;
    settingsJson?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeHandlerVersion?: pulumi.Input<string>;
}

export interface BatchPoolFixedScale {
    nodeDeallocationMethod?: pulumi.Input<string>;
    resizeTimeout?: pulumi.Input<string>;
    targetDedicatedNodes?: pulumi.Input<number>;
    targetLowPriorityNodes?: pulumi.Input<number>;
}

export interface BatchPoolIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface BatchPoolMount {
    azureBlobFileSystem?: pulumi.Input<inputs.BatchPoolMountAzureBlobFileSystem>;
    azureFileShares?: pulumi.Input<pulumi.Input<inputs.BatchPoolMountAzureFileShare>[]>;
    cifsMounts?: pulumi.Input<pulumi.Input<inputs.BatchPoolMountCifsMount>[]>;
    nfsMounts?: pulumi.Input<pulumi.Input<inputs.BatchPoolMountNfsMount>[]>;
}

export interface BatchPoolMountAzureBlobFileSystem {
    accountKey?: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    blobfuseOptions?: pulumi.Input<string>;
    containerName: pulumi.Input<string>;
    identityId?: pulumi.Input<string>;
    relativeMountPath: pulumi.Input<string>;
    sasKey?: pulumi.Input<string>;
}

export interface BatchPoolMountAzureFileShare {
    accountKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    azureFileUrl: pulumi.Input<string>;
    mountOptions?: pulumi.Input<string>;
    relativeMountPath: pulumi.Input<string>;
}

export interface BatchPoolMountCifsMount {
    mountOptions?: pulumi.Input<string>;
    password: pulumi.Input<string>;
    relativeMountPath: pulumi.Input<string>;
    source: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface BatchPoolMountNfsMount {
    mountOptions?: pulumi.Input<string>;
    relativeMountPath: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface BatchPoolNetworkConfiguration {
    acceleratedNetworkingEnabled?: pulumi.Input<boolean>;
    dynamicVnetAssignmentScope?: pulumi.Input<string>;
    endpointConfigurations?: pulumi.Input<pulumi.Input<inputs.BatchPoolNetworkConfigurationEndpointConfiguration>[]>;
    publicAddressProvisioningType?: pulumi.Input<string>;
    publicIps?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
}

export interface BatchPoolNetworkConfigurationEndpointConfiguration {
    backendPort: pulumi.Input<number>;
    frontendPortRange: pulumi.Input<string>;
    name: pulumi.Input<string>;
    networkSecurityGroupRules?: pulumi.Input<pulumi.Input<inputs.BatchPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule>[]>;
    protocol: pulumi.Input<string>;
}

export interface BatchPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule {
    access: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    sourceAddressPrefix: pulumi.Input<string>;
    sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BatchPoolNodePlacement {
    policy?: pulumi.Input<string>;
}

export interface BatchPoolStartTask {
    commandLine: pulumi.Input<string>;
    commonEnvironmentProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    containers?: pulumi.Input<pulumi.Input<inputs.BatchPoolStartTaskContainer>[]>;
    resourceFiles?: pulumi.Input<pulumi.Input<inputs.BatchPoolStartTaskResourceFile>[]>;
    taskRetryMaximum?: pulumi.Input<number>;
    userIdentity: pulumi.Input<inputs.BatchPoolStartTaskUserIdentity>;
    waitForSuccess?: pulumi.Input<boolean>;
}

export interface BatchPoolStartTaskContainer {
    imageName: pulumi.Input<string>;
    registries?: pulumi.Input<pulumi.Input<inputs.BatchPoolStartTaskContainerRegistry>[]>;
    runOptions?: pulumi.Input<string>;
    workingDirectory?: pulumi.Input<string>;
}

export interface BatchPoolStartTaskContainerRegistry {
    password?: pulumi.Input<string>;
    registryServer: pulumi.Input<string>;
    /**
     * The User Assigned Identity to use for Container Registry access.
     */
    userAssignedIdentityId?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}

export interface BatchPoolStartTaskResourceFile {
    autoStorageContainerName?: pulumi.Input<string>;
    blobPrefix?: pulumi.Input<string>;
    fileMode?: pulumi.Input<string>;
    filePath?: pulumi.Input<string>;
    httpUrl?: pulumi.Input<string>;
    storageContainerUrl?: pulumi.Input<string>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface BatchPoolStartTaskUserIdentity {
    autoUser?: pulumi.Input<inputs.BatchPoolStartTaskUserIdentityAutoUser>;
    userName?: pulumi.Input<string>;
}

export interface BatchPoolStartTaskUserIdentityAutoUser {
    elevationLevel?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}

export interface BatchPoolStorageImageReference {
    id?: pulumi.Input<string>;
    offer?: pulumi.Input<string>;
    publisher?: pulumi.Input<string>;
    sku?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface BatchPoolTaskSchedulingPolicy {
    nodeFillType?: pulumi.Input<string>;
}

export interface BatchPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BatchPoolUserAccount {
    elevationLevel: pulumi.Input<string>;
    linuxUserConfigurations?: pulumi.Input<pulumi.Input<inputs.BatchPoolUserAccountLinuxUserConfiguration>[]>;
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
    windowsUserConfigurations?: pulumi.Input<pulumi.Input<inputs.BatchPoolUserAccountWindowsUserConfiguration>[]>;
}

export interface BatchPoolUserAccountLinuxUserConfiguration {
    gid?: pulumi.Input<number>;
    sshPrivateKey?: pulumi.Input<string>;
    uid?: pulumi.Input<number>;
}

export interface BatchPoolUserAccountWindowsUserConfiguration {
    loginMode: pulumi.Input<string>;
}

export interface BatchPoolWindow {
    enableAutomaticUpdates?: pulumi.Input<boolean>;
}

export interface BillingAccountCostManagementExportExportDataOptions {
    timeFrame: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface BillingAccountCostManagementExportExportDataStorageLocation {
    containerId: pulumi.Input<string>;
    rootFolderPath: pulumi.Input<string>;
}

export interface BillingAccountCostManagementExportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BlueprintAssignmentIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface BlueprintAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelAlexaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelDirectLineSpeechTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelDirectlineSite {
    enabled?: pulumi.Input<boolean>;
    endpointParametersEnabled?: pulumi.Input<boolean>;
    enhancedAuthenticationEnabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    key2?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    storageEnabled?: pulumi.Input<boolean>;
    trustedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    userUploadEnabled?: pulumi.Input<boolean>;
    v1Allowed?: pulumi.Input<boolean>;
    v3Allowed?: pulumi.Input<boolean>;
}

export interface BotChannelDirectlineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelEmailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelFacebookPage {
    accessToken: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface BotChannelFacebookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelLineLineChannel {
    accessToken: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface BotChannelLineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelMsTeamsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelSlackTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelSmsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelWebChatSite {
    endpointParametersEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    storageEnabled?: pulumi.Input<boolean>;
    userUploadEnabled?: pulumi.Input<boolean>;
}

export interface BotChannelWebChatTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotChannelsRegistrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotServiceAzureBotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BotWebAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CapacityReservationGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CapacityReservationSku {
    capacity: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface CapacityReservationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnEndpointCustomDomainCdnManagedHttps {
    certificateType: pulumi.Input<string>;
    protocolType: pulumi.Input<string>;
    tlsVersion?: pulumi.Input<string>;
}

export interface CdnEndpointCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnEndpointCustomDomainUserManagedHttps {
    keyVaultSecretId: pulumi.Input<string>;
    tlsVersion?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRule {
    cacheExpirationAction?: pulumi.Input<inputs.CdnEndpointDeliveryRuleCacheExpirationAction>;
    cacheKeyQueryStringAction?: pulumi.Input<inputs.CdnEndpointDeliveryRuleCacheKeyQueryStringAction>;
    cookiesConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleCookiesCondition>[]>;
    deviceCondition?: pulumi.Input<inputs.CdnEndpointDeliveryRuleDeviceCondition>;
    httpVersionConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleHttpVersionCondition>[]>;
    modifyRequestHeaderActions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleModifyRequestHeaderAction>[]>;
    modifyResponseHeaderActions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleModifyResponseHeaderAction>[]>;
    name: pulumi.Input<string>;
    order: pulumi.Input<number>;
    postArgConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRulePostArgCondition>[]>;
    queryStringConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleQueryStringCondition>[]>;
    remoteAddressConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleRemoteAddressCondition>[]>;
    requestBodyConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleRequestBodyCondition>[]>;
    requestHeaderConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleRequestHeaderCondition>[]>;
    requestMethodCondition?: pulumi.Input<inputs.CdnEndpointDeliveryRuleRequestMethodCondition>;
    requestSchemeCondition?: pulumi.Input<inputs.CdnEndpointDeliveryRuleRequestSchemeCondition>;
    requestUriConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleRequestUriCondition>[]>;
    urlFileExtensionConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleUrlFileExtensionCondition>[]>;
    urlFileNameConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleUrlFileNameCondition>[]>;
    urlPathConditions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointDeliveryRuleUrlPathCondition>[]>;
    urlRedirectAction?: pulumi.Input<inputs.CdnEndpointDeliveryRuleUrlRedirectAction>;
    urlRewriteAction?: pulumi.Input<inputs.CdnEndpointDeliveryRuleUrlRewriteAction>;
}

export interface CdnEndpointDeliveryRuleCacheExpirationAction {
    behavior: pulumi.Input<string>;
    duration?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleCacheKeyQueryStringAction {
    behavior: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleCookiesCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleDeviceCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleHttpVersionCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleModifyRequestHeaderAction {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleModifyResponseHeaderAction {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRulePostArgCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleQueryStringCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleRemoteAddressCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleRequestBodyCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleRequestHeaderCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleRequestMethodCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleRequestSchemeCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleRequestUriCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleUrlFileExtensionCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleUrlFileNameCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleUrlPathCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnEndpointDeliveryRuleUrlRedirectAction {
    fragment?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    queryString?: pulumi.Input<string>;
    redirectType: pulumi.Input<string>;
}

export interface CdnEndpointDeliveryRuleUrlRewriteAction {
    destination: pulumi.Input<string>;
    preserveUnmatchedPath?: pulumi.Input<boolean>;
    sourcePattern: pulumi.Input<string>;
}

export interface CdnEndpointGeoFilter {
    action: pulumi.Input<string>;
    countryCodes: pulumi.Input<pulumi.Input<string>[]>;
    relativePath: pulumi.Input<string>;
}

export interface CdnEndpointGlobalDeliveryRule {
    cacheExpirationAction?: pulumi.Input<inputs.CdnEndpointGlobalDeliveryRuleCacheExpirationAction>;
    cacheKeyQueryStringAction?: pulumi.Input<inputs.CdnEndpointGlobalDeliveryRuleCacheKeyQueryStringAction>;
    modifyRequestHeaderActions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointGlobalDeliveryRuleModifyRequestHeaderAction>[]>;
    modifyResponseHeaderActions?: pulumi.Input<pulumi.Input<inputs.CdnEndpointGlobalDeliveryRuleModifyResponseHeaderAction>[]>;
    urlRedirectAction?: pulumi.Input<inputs.CdnEndpointGlobalDeliveryRuleUrlRedirectAction>;
    urlRewriteAction?: pulumi.Input<inputs.CdnEndpointGlobalDeliveryRuleUrlRewriteAction>;
}

export interface CdnEndpointGlobalDeliveryRuleCacheExpirationAction {
    behavior: pulumi.Input<string>;
    duration?: pulumi.Input<string>;
}

export interface CdnEndpointGlobalDeliveryRuleCacheKeyQueryStringAction {
    behavior: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
}

export interface CdnEndpointGlobalDeliveryRuleModifyRequestHeaderAction {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CdnEndpointGlobalDeliveryRuleModifyResponseHeaderAction {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CdnEndpointGlobalDeliveryRuleUrlRedirectAction {
    fragment?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    queryString?: pulumi.Input<string>;
    redirectType: pulumi.Input<string>;
}

export interface CdnEndpointGlobalDeliveryRuleUrlRewriteAction {
    destination: pulumi.Input<string>;
    preserveUnmatchedPath?: pulumi.Input<boolean>;
    sourcePattern: pulumi.Input<string>;
}

export interface CdnEndpointOrigin {
    hostName: pulumi.Input<string>;
    httpPort?: pulumi.Input<number>;
    httpsPort?: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface CdnEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorCustomDomainAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorCustomDomainTls {
    cdnFrontdoorSecretId?: pulumi.Input<string>;
    certificateType?: pulumi.Input<string>;
    minimumTlsVersion?: pulumi.Input<string>;
}

export interface CdnFrontdoorEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorFirewallPolicyCustomRule {
    action: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    matchConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyCustomRuleMatchCondition>[]>;
    name: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    rateLimitDurationInMinutes?: pulumi.Input<number>;
    rateLimitThreshold?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface CdnFrontdoorFirewallPolicyCustomRuleMatchCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    matchVariable: pulumi.Input<string>;
    negationCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    selector?: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorFirewallPolicyManagedRule {
    action: pulumi.Input<string>;
    exclusions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyManagedRuleExclusion>[]>;
    overrides?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyManagedRuleOverride>[]>;
    type: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface CdnFrontdoorFirewallPolicyManagedRuleExclusion {
    matchVariable: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
}

export interface CdnFrontdoorFirewallPolicyManagedRuleOverride {
    exclusions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyManagedRuleOverrideExclusion>[]>;
    ruleGroupName: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyManagedRuleOverrideRule>[]>;
}

export interface CdnFrontdoorFirewallPolicyManagedRuleOverrideExclusion {
    matchVariable: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
}

export interface CdnFrontdoorFirewallPolicyManagedRuleOverrideRule {
    action: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    exclusions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion>[]>;
    ruleId: pulumi.Input<string>;
}

export interface CdnFrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion {
    matchVariable: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
}

export interface CdnFrontdoorFirewallPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorOriginGroupHealthProbe {
    intervalInSeconds: pulumi.Input<number>;
    path?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    requestType?: pulumi.Input<string>;
}

export interface CdnFrontdoorOriginGroupLoadBalancing {
    additionalLatencyInMilliseconds?: pulumi.Input<number>;
    sampleSize?: pulumi.Input<number>;
    successfulSamplesRequired?: pulumi.Input<number>;
}

export interface CdnFrontdoorOriginGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorOriginPrivateLink {
    location: pulumi.Input<string>;
    privateLinkTargetId: pulumi.Input<string>;
    requestMessage?: pulumi.Input<string>;
    targetType?: pulumi.Input<string>;
}

export interface CdnFrontdoorOriginTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorRouteCache {
    compressionEnabled?: pulumi.Input<boolean>;
    contentTypesToCompresses?: pulumi.Input<pulumi.Input<string>[]>;
    queryStringCachingBehavior?: pulumi.Input<string>;
    queryStrings?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRouteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleActions {
    requestHeaderActions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleActionsRequestHeaderAction>[]>;
    responseHeaderActions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleActionsResponseHeaderAction>[]>;
    routeConfigurationOverrideAction?: pulumi.Input<inputs.CdnFrontdoorRuleActionsRouteConfigurationOverrideAction>;
    urlRedirectAction?: pulumi.Input<inputs.CdnFrontdoorRuleActionsUrlRedirectAction>;
    urlRewriteAction?: pulumi.Input<inputs.CdnFrontdoorRuleActionsUrlRewriteAction>;
}

export interface CdnFrontdoorRuleActionsRequestHeaderAction {
    headerAction: pulumi.Input<string>;
    headerName: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleActionsResponseHeaderAction {
    headerAction: pulumi.Input<string>;
    headerName: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleActionsRouteConfigurationOverrideAction {
    cacheBehavior?: pulumi.Input<string>;
    cacheDuration?: pulumi.Input<string>;
    cdnFrontdoorOriginGroupId?: pulumi.Input<string>;
    compressionEnabled?: pulumi.Input<boolean>;
    forwardingProtocol?: pulumi.Input<string>;
    queryStringCachingBehavior?: pulumi.Input<string>;
    queryStringParameters?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleActionsUrlRedirectAction {
    destinationFragment?: pulumi.Input<string>;
    destinationHostname: pulumi.Input<string>;
    destinationPath?: pulumi.Input<string>;
    queryString?: pulumi.Input<string>;
    redirectProtocol?: pulumi.Input<string>;
    redirectType: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleActionsUrlRewriteAction {
    destination: pulumi.Input<string>;
    preserveUnmatchedPath?: pulumi.Input<boolean>;
    sourcePattern: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditions {
    clientPortConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsClientPortCondition>[]>;
    cookiesConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsCookiesCondition>[]>;
    hostNameConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsHostNameCondition>[]>;
    httpVersionConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsHttpVersionCondition>[]>;
    isDeviceConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsIsDeviceCondition>[]>;
    postArgsConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsPostArgsCondition>[]>;
    queryStringConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsQueryStringCondition>[]>;
    remoteAddressConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsRemoteAddressCondition>[]>;
    requestBodyConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsRequestBodyCondition>[]>;
    requestHeaderConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsRequestHeaderCondition>[]>;
    requestMethodConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsRequestMethodCondition>[]>;
    requestSchemeConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsRequestSchemeCondition>[]>;
    requestUriConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsRequestUriCondition>[]>;
    serverPortConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsServerPortCondition>[]>;
    socketAddressConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsSocketAddressCondition>[]>;
    sslProtocolConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsSslProtocolCondition>[]>;
    urlFileExtensionConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsUrlFileExtensionCondition>[]>;
    urlFilenameConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsUrlFilenameCondition>[]>;
    urlPathConditions?: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorRuleConditionsUrlPathCondition>[]>;
}

export interface CdnFrontdoorRuleConditionsClientPortCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsCookiesCondition {
    cookieName: pulumi.Input<string>;
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsHostNameCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsHttpVersionCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsIsDeviceCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsPostArgsCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    postArgsName: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsQueryStringCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsRemoteAddressCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsRequestBodyCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsRequestHeaderCondition {
    headerName: pulumi.Input<string>;
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsRequestMethodCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsRequestSchemeCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsRequestUriCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsServerPortCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsSocketAddressCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsSslProtocolCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleConditionsUrlFileExtensionCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsUrlFilenameCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleConditionsUrlPathCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorRuleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CdnFrontdoorRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CdnFrontdoorSecretSecret {
    customerCertificates: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorSecretSecretCustomerCertificate>[]>;
}

export interface CdnFrontdoorSecretSecretCustomerCertificate {
    keyVaultCertificateId: pulumi.Input<string>;
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorSecretTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CdnFrontdoorSecurityPolicySecurityPolicies {
    firewall: pulumi.Input<inputs.CdnFrontdoorSecurityPolicySecurityPoliciesFirewall>;
}

export interface CdnFrontdoorSecurityPolicySecurityPoliciesFirewall {
    association: pulumi.Input<inputs.CdnFrontdoorSecurityPolicySecurityPoliciesFirewallAssociation>;
    cdnFrontdoorFirewallPolicyId: pulumi.Input<string>;
}

export interface CdnFrontdoorSecurityPolicySecurityPoliciesFirewallAssociation {
    domains: pulumi.Input<pulumi.Input<inputs.CdnFrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomain>[]>;
    patternsToMatches: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CdnFrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomain {
    active?: pulumi.Input<boolean>;
    cdnFrontdoorDomainId: pulumi.Input<string>;
}

export interface CdnFrontdoorSecurityPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CdnProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ChaosStudioCapabilityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ChaosStudioExperimentIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ChaosStudioExperimentSelector {
    chaosStudioTargetIds: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface ChaosStudioExperimentStep {
    branches: pulumi.Input<pulumi.Input<inputs.ChaosStudioExperimentStepBranch>[]>;
    name: pulumi.Input<string>;
}

export interface ChaosStudioExperimentStepBranch {
    actions: pulumi.Input<pulumi.Input<inputs.ChaosStudioExperimentStepBranchAction>[]>;
    name: pulumi.Input<string>;
}

export interface ChaosStudioExperimentStepBranchAction {
    actionType: pulumi.Input<string>;
    duration?: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    selectorName?: pulumi.Input<string>;
    urn?: pulumi.Input<string>;
}

export interface ChaosStudioExperimentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ChaosStudioTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CognitiveAccountCustomerManagedKey {
    identityClientId?: pulumi.Input<string>;
    keyVaultKeyId: pulumi.Input<string>;
}

export interface CognitiveAccountCustomerManagedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CognitiveAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CognitiveAccountNetworkAcls {
    defaultAction: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<string>[]>;
    virtualNetworkRules?: pulumi.Input<pulumi.Input<inputs.CognitiveAccountNetworkAclsVirtualNetworkRule>[]>;
}

export interface CognitiveAccountNetworkAclsVirtualNetworkRule {
    ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface CognitiveAccountStorage {
    identityClientId?: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface CognitiveAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CognitiveDeploymentModel {
    format: pulumi.Input<string>;
    name: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface CognitiveDeploymentSku {
    capacity?: pulumi.Input<number>;
    family?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface CognitiveDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CommunicationServiceEmailDomainAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CommunicationServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ConfidentialLedgerAzureadBasedServicePrincipal {
    ledgerRoleName: pulumi.Input<string>;
    principalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface ConfidentialLedgerCertificateBasedSecurityPrincipal {
    ledgerRoleName: pulumi.Input<string>;
    pemPublicKey: pulumi.Input<string>;
}

export interface ConfidentialLedgerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ConsumptionBudgetManagementGroupFilter {
    dimensions?: pulumi.Input<pulumi.Input<inputs.ConsumptionBudgetManagementGroupFilterDimension>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ConsumptionBudgetManagementGroupFilterTag>[]>;
}

export interface ConsumptionBudgetManagementGroupFilterDimension {
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConsumptionBudgetManagementGroupFilterTag {
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConsumptionBudgetManagementGroupNotification {
    contactEmails: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface ConsumptionBudgetManagementGroupTimePeriod {
    endDate?: pulumi.Input<string>;
    startDate: pulumi.Input<string>;
}

export interface ConsumptionBudgetManagementGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ConsumptionBudgetResourceGroupFilter {
    dimensions?: pulumi.Input<pulumi.Input<inputs.ConsumptionBudgetResourceGroupFilterDimension>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ConsumptionBudgetResourceGroupFilterTag>[]>;
}

export interface ConsumptionBudgetResourceGroupFilterDimension {
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConsumptionBudgetResourceGroupFilterTag {
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConsumptionBudgetResourceGroupNotification {
    contactEmails?: pulumi.Input<pulumi.Input<string>[]>;
    contactGroups?: pulumi.Input<pulumi.Input<string>[]>;
    contactRoles?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface ConsumptionBudgetResourceGroupTimePeriod {
    endDate?: pulumi.Input<string>;
    startDate: pulumi.Input<string>;
}

export interface ConsumptionBudgetResourceGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ConsumptionBudgetSubscriptionFilter {
    dimensions?: pulumi.Input<pulumi.Input<inputs.ConsumptionBudgetSubscriptionFilterDimension>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.ConsumptionBudgetSubscriptionFilterTag>[]>;
}

export interface ConsumptionBudgetSubscriptionFilterDimension {
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConsumptionBudgetSubscriptionFilterTag {
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConsumptionBudgetSubscriptionNotification {
    contactEmails?: pulumi.Input<pulumi.Input<string>[]>;
    contactGroups?: pulumi.Input<pulumi.Input<string>[]>;
    contactRoles?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface ConsumptionBudgetSubscriptionTimePeriod {
    endDate?: pulumi.Input<string>;
    startDate: pulumi.Input<string>;
}

export interface ConsumptionBudgetSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerAppCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ContainerAppDapr {
    /**
     * The Dapr Application Identifier.
     */
    appId: pulumi.Input<string>;
    /**
     * The port which the application is listening on. This is the same as the `ingress` port.
     */
    appPort?: pulumi.Input<number>;
    /**
     * The protocol for the app. Possible values include `http` and `grpc`. Defaults to `http`.
     */
    appProtocol?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentDaprComponentMetadata {
    /**
     * The name of the Metadata configuration item.
     */
    name: pulumi.Input<string>;
    /**
     * The name of a secret specified in the `secrets` block that contains the value for this metadata configuration item.
     */
    secretName?: pulumi.Input<string>;
    /**
     * The value for this metadata configuration item.
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentDaprComponentSecret {
    /**
     * The identity to use for accessing key vault reference.
     */
    identity?: pulumi.Input<string>;
    /**
     * The Key Vault Secret ID. Could be either one of `id` or `versionless_id`.
     */
    keyVaultSecretId?: pulumi.Input<string>;
    /**
     * The secret name.
     */
    name: pulumi.Input<string>;
    /**
     * The value for this secret.
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentDaprComponentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerAppEnvironmentWorkloadProfile {
    maximumCount?: pulumi.Input<number>;
    minimumCount?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    workloadProfileType: pulumi.Input<string>;
}

export interface ContainerAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ContainerAppIngress {
    /**
     * Should this ingress allow insecure connections?
     */
    allowInsecureConnections?: pulumi.Input<boolean>;
    customDomains?: pulumi.Input<pulumi.Input<inputs.ContainerAppIngressCustomDomain>[]>;
    /**
     * The exposed port on the container for the Ingress traffic.
     */
    exposedPort?: pulumi.Input<number>;
    /**
     * Is this an external Ingress.
     */
    externalEnabled?: pulumi.Input<boolean>;
    /**
     * The FQDN of the ingress.
     */
    fqdn?: pulumi.Input<string>;
    ipSecurityRestrictions?: pulumi.Input<pulumi.Input<inputs.ContainerAppIngressIpSecurityRestriction>[]>;
    /**
     * The target port on the container for the Ingress traffic.
     */
    targetPort: pulumi.Input<number>;
    trafficWeights: pulumi.Input<pulumi.Input<inputs.ContainerAppIngressTrafficWeight>[]>;
    /**
     * The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`, `tcp`. Defaults to `auto`
     */
    transport?: pulumi.Input<string>;
}

export interface ContainerAppIngressCustomDomain {
    certificateBindingType: pulumi.Input<string>;
    certificateId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ContainerAppIngressIpSecurityRestriction {
    /**
     * The action. Allow or Deny.
     */
    action: pulumi.Input<string>;
    /**
     * Describe the IP restriction rule that is being sent to the container-app.
     */
    description?: pulumi.Input<string>;
    /**
     * The incoming IP address or range of IP addresses (in CIDR notation).
     */
    ipAddressRange: pulumi.Input<string>;
    /**
     * Name for the IP restriction rule.
     */
    name: pulumi.Input<string>;
}

export interface ContainerAppIngressTrafficWeight {
    /**
     * The label to apply to the revision as a name prefix for routing traffic.
     */
    label?: pulumi.Input<string>;
    /**
     * This traffic Weight relates to the latest stable Container Revision.
     */
    latestRevision?: pulumi.Input<boolean>;
    /**
     * The percentage of traffic to send to this revision.
     */
    percentage: pulumi.Input<number>;
    /**
     * The suffix string to append to the revision. This must be unique for the Container App's lifetime. A default hash created by the service will be used if this value is omitted.
     */
    revisionSuffix?: pulumi.Input<string>;
}

export interface ContainerAppJobEventTriggerConfig {
    parallelism?: pulumi.Input<number>;
    replicaCompletionCount?: pulumi.Input<number>;
    scales?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobEventTriggerConfigScale>[]>;
}

export interface ContainerAppJobEventTriggerConfigScale {
    maxExecutions?: pulumi.Input<number>;
    minExecutions?: pulumi.Input<number>;
    pollingIntervalInSeconds?: pulumi.Input<number>;
    rules?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobEventTriggerConfigScaleRule>[]>;
}

export interface ContainerAppJobEventTriggerConfigScaleRule {
    authentications?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobEventTriggerConfigScaleRuleAuthentication>[]>;
    customRuleType: pulumi.Input<string>;
    metadata: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
}

export interface ContainerAppJobEventTriggerConfigScaleRuleAuthentication {
    secretName: pulumi.Input<string>;
    triggerParameter: pulumi.Input<string>;
}

export interface ContainerAppJobIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ContainerAppJobManualTriggerConfig {
    parallelism?: pulumi.Input<number>;
    replicaCompletionCount?: pulumi.Input<number>;
}

export interface ContainerAppJobRegistry {
    /**
     * ID of the System or User Managed Identity used to pull images from the Container Registry
     */
    identity?: pulumi.Input<string>;
    /**
     * The name of the Secret Reference containing the password value for this user on the Container Registry.
     */
    passwordSecretName?: pulumi.Input<string>;
    /**
     * The hostname for the Container Registry.
     */
    server: pulumi.Input<string>;
    /**
     * The username to use for this Container Registry.
     */
    username?: pulumi.Input<string>;
}

export interface ContainerAppJobScheduleTriggerConfig {
    cronExpression: pulumi.Input<string>;
    parallelism?: pulumi.Input<number>;
    replicaCompletionCount?: pulumi.Input<number>;
}

export interface ContainerAppJobSecret {
    /**
     * The identity to use for accessing key vault reference.
     */
    identity?: pulumi.Input<string>;
    /**
     * The Key Vault Secret ID. Could be either one of `id` or `versionless_id`.
     */
    keyVaultSecretId?: pulumi.Input<string>;
    /**
     * The secret name.
     */
    name: pulumi.Input<string>;
    /**
     * The value for this secret.
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppJobTemplate {
    containers: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainer>[]>;
    initContainers?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateInitContainer>[]>;
    volumes?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateVolume>[]>;
}

export interface ContainerAppJobTemplateContainer {
    /**
     * A list of args to pass to the container.
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
     */
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
     */
    cpu: pulumi.Input<number>;
    envs?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerEnv>[]>;
    /**
     * The amount of ephemeral storage available to the Container App.
     */
    ephemeralStorage?: pulumi.Input<string>;
    /**
     * The image to use to create the container.
     */
    image: pulumi.Input<string>;
    livenessProbes?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerLivenessProbe>[]>;
    /**
     * The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
     */
    memory: pulumi.Input<string>;
    /**
     * The name of the container.
     */
    name: pulumi.Input<string>;
    readinessProbes?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerReadinessProbe>[]>;
    startupProbes?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerStartupProbe>[]>;
    volumeMounts?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerVolumeMount>[]>;
}

export interface ContainerAppJobTemplateContainerEnv {
    /**
     * The name of the environment variable for the container.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the secret that contains the value for this environment variable.
     */
    secretName?: pulumi.Input<string>;
    /**
     * The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateContainerLivenessProbe {
    /**
     * The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     */
    failureCountThreshold?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerLivenessProbeHeader>[]>;
    /**
     * The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
     */
    host?: pulumi.Input<string>;
    /**
     * The time in seconds to wait after the container has started before the probe is started.
     */
    initialDelay?: pulumi.Input<number>;
    /**
     * How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     */
    intervalSeconds?: pulumi.Input<number>;
    /**
     * The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number on which to connect. Possible values are between `1` and `65535`.
     */
    port: pulumi.Input<number>;
    /**
     * The time in seconds after the container is sent the termination signal before the process if forcibly killed.
     */
    terminationGracePeriodSeconds?: pulumi.Input<number>;
    /**
     * Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
     */
    transport: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateContainerLivenessProbeHeader {
    /**
     * The HTTP Header Name.
     */
    name: pulumi.Input<string>;
    /**
     * The HTTP Header value.
     */
    value: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateContainerReadinessProbe {
    /**
     * The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     */
    failureCountThreshold?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerReadinessProbeHeader>[]>;
    /**
     * The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
     */
    host?: pulumi.Input<string>;
    /**
     * How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     */
    intervalSeconds?: pulumi.Input<number>;
    /**
     * The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number on which to connect. Possible values are between `1` and `65535`.
     */
    port: pulumi.Input<number>;
    /**
     * The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
     */
    successCountThreshold?: pulumi.Input<number>;
    /**
     * Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
     */
    transport: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateContainerReadinessProbeHeader {
    /**
     * The HTTP Header Name.
     */
    name: pulumi.Input<string>;
    /**
     * The HTTP Header value.
     */
    value: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateContainerStartupProbe {
    /**
     * The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     */
    failureCountThreshold?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateContainerStartupProbeHeader>[]>;
    /**
     * The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
     */
    host?: pulumi.Input<string>;
    /**
     * How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     */
    intervalSeconds?: pulumi.Input<number>;
    /**
     * The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number on which to connect. Possible values are between `1` and `65535`.
     */
    port: pulumi.Input<number>;
    /**
     * The time in seconds after the container is sent the termination signal before the process if forcibly killed.
     */
    terminationGracePeriodSeconds?: pulumi.Input<number>;
    /**
     * Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
     */
    transport: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateContainerStartupProbeHeader {
    /**
     * The HTTP Header Name.
     */
    name: pulumi.Input<string>;
    /**
     * The HTTP Header value.
     */
    value: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateContainerVolumeMount {
    /**
     * The name of the Volume to be mounted in the container.
     */
    name: pulumi.Input<string>;
    /**
     * The path in the container at which to mount this volume.
     */
    path: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateInitContainer {
    /**
     * A list of args to pass to the container.
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
     */
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
     */
    cpu?: pulumi.Input<number>;
    envs?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateInitContainerEnv>[]>;
    /**
     * The amount of ephemeral storage available to the Container App.
     */
    ephemeralStorage?: pulumi.Input<string>;
    /**
     * The image to use to create the container.
     */
    image: pulumi.Input<string>;
    /**
     * The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
     */
    memory?: pulumi.Input<string>;
    /**
     * The name of the container.
     */
    name: pulumi.Input<string>;
    volumeMounts?: pulumi.Input<pulumi.Input<inputs.ContainerAppJobTemplateInitContainerVolumeMount>[]>;
}

export interface ContainerAppJobTemplateInitContainerEnv {
    /**
     * The name of the environment variable for the container.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the secret that contains the value for this environment variable.
     */
    secretName?: pulumi.Input<string>;
    /**
     * The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateInitContainerVolumeMount {
    /**
     * The name of the Volume to be mounted in the container.
     */
    name: pulumi.Input<string>;
    /**
     * The path in the container at which to mount this volume.
     */
    path: pulumi.Input<string>;
}

export interface ContainerAppJobTemplateVolume {
    /**
     * The name of the volume.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the `AzureFile` storage. Required when `storage_type` is `AzureFile`
     */
    storageName?: pulumi.Input<string>;
    /**
     * The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
     */
    storageType?: pulumi.Input<string>;
}

export interface ContainerAppJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerAppRegistry {
    /**
     * ID of the System or User Managed Identity used to pull images from the Container Registry
     */
    identity?: pulumi.Input<string>;
    /**
     * The name of the Secret Reference containing the password value for this user on the Container Registry.
     */
    passwordSecretName?: pulumi.Input<string>;
    /**
     * The hostname for the Container Registry.
     */
    server: pulumi.Input<string>;
    /**
     * The username to use for this Container Registry.
     */
    username?: pulumi.Input<string>;
}

export interface ContainerAppSecret {
    /**
     * The identity to use for accessing key vault reference.
     */
    identity?: pulumi.Input<string>;
    /**
     * The Key Vault Secret ID. Could be either one of `id` or `versionless_id`.
     */
    keyVaultSecretId?: pulumi.Input<string>;
    /**
     * The secret name.
     */
    name: pulumi.Input<string>;
    /**
     * The value for this secret.
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppTemplate {
    azureQueueScaleRules?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateAzureQueueScaleRule>[]>;
    containers: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainer>[]>;
    customScaleRules?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateCustomScaleRule>[]>;
    httpScaleRules?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateHttpScaleRule>[]>;
    initContainers?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateInitContainer>[]>;
    /**
     * The maximum number of replicas for this container.
     */
    maxReplicas?: pulumi.Input<number>;
    /**
     * The minimum number of replicas for this container.
     */
    minReplicas?: pulumi.Input<number>;
    /**
     * The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
     */
    revisionSuffix?: pulumi.Input<string>;
    tcpScaleRules?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateTcpScaleRule>[]>;
    volumes?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateVolume>[]>;
}

export interface ContainerAppTemplateAzureQueueScaleRule {
    authentications: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateAzureQueueScaleRuleAuthentication>[]>;
    name: pulumi.Input<string>;
    queueLength: pulumi.Input<number>;
    queueName: pulumi.Input<string>;
}

export interface ContainerAppTemplateAzureQueueScaleRuleAuthentication {
    secretName: pulumi.Input<string>;
    triggerParameter: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainer {
    /**
     * A list of args to pass to the container.
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
     */
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
     */
    cpu: pulumi.Input<number>;
    envs?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerEnv>[]>;
    /**
     * The amount of ephemeral storage available to the Container App.
     */
    ephemeralStorage?: pulumi.Input<string>;
    /**
     * The image to use to create the container.
     */
    image: pulumi.Input<string>;
    livenessProbes?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerLivenessProbe>[]>;
    /**
     * The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
     */
    memory: pulumi.Input<string>;
    /**
     * The name of the container.
     */
    name: pulumi.Input<string>;
    readinessProbes?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerReadinessProbe>[]>;
    startupProbes?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerStartupProbe>[]>;
    volumeMounts?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerVolumeMount>[]>;
}

export interface ContainerAppTemplateContainerEnv {
    /**
     * The name of the environment variable for the container.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the secret that contains the value for this environment variable.
     */
    secretName?: pulumi.Input<string>;
    /**
     * The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainerLivenessProbe {
    /**
     * The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     */
    failureCountThreshold?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerLivenessProbeHeader>[]>;
    /**
     * The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
     */
    host?: pulumi.Input<string>;
    /**
     * The time in seconds to wait after the container has started before the probe is started.
     */
    initialDelay?: pulumi.Input<number>;
    /**
     * How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     */
    intervalSeconds?: pulumi.Input<number>;
    /**
     * The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number on which to connect. Possible values are between `1` and `65535`.
     */
    port: pulumi.Input<number>;
    /**
     * The time in seconds after the container is sent the termination signal before the process if forcibly killed.
     */
    terminationGracePeriodSeconds?: pulumi.Input<number>;
    /**
     * Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
     */
    transport: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainerLivenessProbeHeader {
    /**
     * The HTTP Header Name.
     */
    name: pulumi.Input<string>;
    /**
     * The HTTP Header value.
     */
    value: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainerReadinessProbe {
    /**
     * The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     */
    failureCountThreshold?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerReadinessProbeHeader>[]>;
    /**
     * The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
     */
    host?: pulumi.Input<string>;
    /**
     * How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     */
    intervalSeconds?: pulumi.Input<number>;
    /**
     * The URI to use for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number on which to connect. Possible values are between `1` and `65535`.
     */
    port: pulumi.Input<number>;
    /**
     * The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
     */
    successCountThreshold?: pulumi.Input<number>;
    /**
     * Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
     */
    transport: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainerReadinessProbeHeader {
    /**
     * The HTTP Header Name.
     */
    name: pulumi.Input<string>;
    /**
     * The HTTP Header value.
     */
    value: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainerStartupProbe {
    /**
     * The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     */
    failureCountThreshold?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateContainerStartupProbeHeader>[]>;
    /**
     * The probe hostname. Defaults to the pod IP address. Setting a value for `Host` in `headers` can be used to override this for `http` and `https` type probes.
     */
    host?: pulumi.Input<string>;
    /**
     * How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     */
    intervalSeconds?: pulumi.Input<number>;
    /**
     * The URI to use with the `host` for http type probes. Not valid for `TCP` type probes. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * The port number on which to connect. Possible values are between `1` and `65535`.
     */
    port: pulumi.Input<number>;
    /**
     * The time in seconds after the container is sent the termination signal before the process if forcibly killed.
     */
    terminationGracePeriodSeconds?: pulumi.Input<number>;
    /**
     * Time in seconds after which the probe times out. Possible values are between `1` an `240`. Defaults to `1`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Type of probe. Possible values are `TCP`, `HTTP`, and `HTTPS`.
     */
    transport: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainerStartupProbeHeader {
    /**
     * The HTTP Header Name.
     */
    name: pulumi.Input<string>;
    /**
     * The HTTP Header value.
     */
    value: pulumi.Input<string>;
}

export interface ContainerAppTemplateContainerVolumeMount {
    /**
     * The name of the Volume to be mounted in the container.
     */
    name: pulumi.Input<string>;
    /**
     * The path in the container at which to mount this volume.
     */
    path: pulumi.Input<string>;
}

export interface ContainerAppTemplateCustomScaleRule {
    authentications?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateCustomScaleRuleAuthentication>[]>;
    customRuleType: pulumi.Input<string>;
    metadata: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
}

export interface ContainerAppTemplateCustomScaleRuleAuthentication {
    secretName: pulumi.Input<string>;
    triggerParameter: pulumi.Input<string>;
}

export interface ContainerAppTemplateHttpScaleRule {
    authentications?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateHttpScaleRuleAuthentication>[]>;
    concurrentRequests: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ContainerAppTemplateHttpScaleRuleAuthentication {
    secretName: pulumi.Input<string>;
    triggerParameter?: pulumi.Input<string>;
}

export interface ContainerAppTemplateInitContainer {
    /**
     * A list of args to pass to the container.
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A command to pass to the container to override the default. This is provided as a list of command line elements without spaces.
     */
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The amount of vCPU to allocate to the container. Possible values include `0.25`, `0.5`, `0.75`, `1.0`, `1.25`, `1.5`, `1.75`, and `2.0`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.0` / `2.0` or `0.5` / `1.0`. When there's a workload profile specified, there's no such constraint.
     */
    cpu?: pulumi.Input<number>;
    envs?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateInitContainerEnv>[]>;
    /**
     * The amount of ephemeral storage available to the Container App.
     */
    ephemeralStorage?: pulumi.Input<string>;
    /**
     * The image to use to create the container.
     */
    image: pulumi.Input<string>;
    /**
     * The amount of memory to allocate to the container. Possible values include `0.5Gi`, `1.0Gi`, `1.5Gi`, `2.0Gi`, `2.5Gi`, `3.0Gi`, `3.5Gi`, and `4.0Gi`. **NOTE:** `cpu` and `memory` must be specified in `0.25'/'0.5Gi` combination increments. e.g. `1.25` / `2.5Gi` or `0.75` / `1.5Gi`. When there's a workload profile specified, there's no such constraint.
     */
    memory?: pulumi.Input<string>;
    /**
     * The name of the container.
     */
    name: pulumi.Input<string>;
    volumeMounts?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateInitContainerVolumeMount>[]>;
}

export interface ContainerAppTemplateInitContainerEnv {
    /**
     * The name of the environment variable for the container.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the secret that contains the value for this environment variable.
     */
    secretName?: pulumi.Input<string>;
    /**
     * The value for this environment variable. **NOTE:** This value is ignored if `secret_name` is used
     */
    value?: pulumi.Input<string>;
}

export interface ContainerAppTemplateInitContainerVolumeMount {
    /**
     * The name of the Volume to be mounted in the container.
     */
    name: pulumi.Input<string>;
    /**
     * The path in the container at which to mount this volume.
     */
    path: pulumi.Input<string>;
}

export interface ContainerAppTemplateTcpScaleRule {
    authentications?: pulumi.Input<pulumi.Input<inputs.ContainerAppTemplateTcpScaleRuleAuthentication>[]>;
    concurrentRequests: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ContainerAppTemplateTcpScaleRuleAuthentication {
    secretName: pulumi.Input<string>;
    triggerParameter?: pulumi.Input<string>;
}

export interface ContainerAppTemplateVolume {
    /**
     * The name of the volume.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the `AzureFile` storage. Required when `storage_type` is `AzureFile`
     */
    storageName?: pulumi.Input<string>;
    /**
     * The type of storage volume. Possible values include `AzureFile` and `EmptyDir`. Defaults to `EmptyDir`.
     */
    storageType?: pulumi.Input<string>;
}

export interface ContainerAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerConnectedRegistryNotification {
    action: pulumi.Input<string>;
    digest?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface ContainerConnectedRegistryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerGroupContainer {
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    cpu: pulumi.Input<number>;
    cpuLimit?: pulumi.Input<number>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    image: pulumi.Input<string>;
    livenessProbe?: pulumi.Input<inputs.ContainerGroupContainerLivenessProbe>;
    memory: pulumi.Input<number>;
    memoryLimit?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    ports?: pulumi.Input<pulumi.Input<inputs.ContainerGroupContainerPort>[]>;
    readinessProbe?: pulumi.Input<inputs.ContainerGroupContainerReadinessProbe>;
    secureEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    securities?: pulumi.Input<pulumi.Input<inputs.ContainerGroupContainerSecurity>[]>;
    volumes?: pulumi.Input<pulumi.Input<inputs.ContainerGroupContainerVolume>[]>;
}

export interface ContainerGroupContainerLivenessProbe {
    execs?: pulumi.Input<pulumi.Input<string>[]>;
    failureThreshold?: pulumi.Input<number>;
    httpGets?: pulumi.Input<pulumi.Input<inputs.ContainerGroupContainerLivenessProbeHttpGet>[]>;
    initialDelaySeconds?: pulumi.Input<number>;
    periodSeconds?: pulumi.Input<number>;
    successThreshold?: pulumi.Input<number>;
    timeoutSeconds?: pulumi.Input<number>;
}

export interface ContainerGroupContainerLivenessProbeHttpGet {
    httpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface ContainerGroupContainerPort {
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
}

export interface ContainerGroupContainerReadinessProbe {
    execs?: pulumi.Input<pulumi.Input<string>[]>;
    failureThreshold?: pulumi.Input<number>;
    httpGets?: pulumi.Input<pulumi.Input<inputs.ContainerGroupContainerReadinessProbeHttpGet>[]>;
    initialDelaySeconds?: pulumi.Input<number>;
    periodSeconds?: pulumi.Input<number>;
    successThreshold?: pulumi.Input<number>;
    timeoutSeconds?: pulumi.Input<number>;
}

export interface ContainerGroupContainerReadinessProbeHttpGet {
    httpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    scheme?: pulumi.Input<string>;
}

export interface ContainerGroupContainerSecurity {
    privilegeEnabled: pulumi.Input<boolean>;
}

export interface ContainerGroupContainerVolume {
    emptyDir?: pulumi.Input<boolean>;
    gitRepo?: pulumi.Input<inputs.ContainerGroupContainerVolumeGitRepo>;
    mountPath: pulumi.Input<string>;
    name: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
    secret?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    shareName?: pulumi.Input<string>;
    storageAccountKey?: pulumi.Input<string>;
    storageAccountName?: pulumi.Input<string>;
}

export interface ContainerGroupContainerVolumeGitRepo {
    directory?: pulumi.Input<string>;
    revision?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface ContainerGroupDiagnostics {
    logAnalytics: pulumi.Input<inputs.ContainerGroupDiagnosticsLogAnalytics>;
}

export interface ContainerGroupDiagnosticsLogAnalytics {
    logType?: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    workspaceId: pulumi.Input<string>;
    workspaceKey: pulumi.Input<string>;
}

export interface ContainerGroupDnsConfig {
    nameservers: pulumi.Input<pulumi.Input<string>[]>;
    options?: pulumi.Input<pulumi.Input<string>[]>;
    searchDomains?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ContainerGroupExposedPort {
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
}

export interface ContainerGroupIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ContainerGroupImageRegistryCredential {
    password?: pulumi.Input<string>;
    server: pulumi.Input<string>;
    /**
     * The User Assigned Identity to use for Container Registry access.
     */
    userAssignedIdentityId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ContainerGroupInitContainer {
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    environmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    image: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secureEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    securities?: pulumi.Input<pulumi.Input<inputs.ContainerGroupInitContainerSecurity>[]>;
    volumes?: pulumi.Input<pulumi.Input<inputs.ContainerGroupInitContainerVolume>[]>;
}

export interface ContainerGroupInitContainerSecurity {
    privilegeEnabled: pulumi.Input<boolean>;
}

export interface ContainerGroupInitContainerVolume {
    emptyDir?: pulumi.Input<boolean>;
    gitRepo?: pulumi.Input<inputs.ContainerGroupInitContainerVolumeGitRepo>;
    mountPath: pulumi.Input<string>;
    name: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
    secret?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    shareName?: pulumi.Input<string>;
    storageAccountKey?: pulumi.Input<string>;
    storageAccountName?: pulumi.Input<string>;
}

export interface ContainerGroupInitContainerVolumeGitRepo {
    directory?: pulumi.Input<string>;
    revision?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface ContainerGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryAgentPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryCacheRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryEncryption {
    identityClientId: pulumi.Input<string>;
    keyVaultKeyId: pulumi.Input<string>;
}

export interface ContainerRegistryGeoreplication {
    location: pulumi.Input<string>;
    regionalEndpointEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    zoneRedundancyEnabled?: pulumi.Input<boolean>;
}

export interface ContainerRegistryIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ContainerRegistryNetworkRuleSet {
    defaultAction: pulumi.Input<string>;
    ipRules: pulumi.Input<pulumi.Input<inputs.ContainerRegistryNetworkRuleSetIpRule>[]>;
}

export interface ContainerRegistryNetworkRuleSetIpRule {
    action: pulumi.Input<string>;
    ipRange: pulumi.Input<string>;
}

export interface ContainerRegistryScopeMapTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryTaskAgentSetting {
    cpu: pulumi.Input<number>;
}

export interface ContainerRegistryTaskBaseImageTrigger {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    updateTriggerEndpoint?: pulumi.Input<string>;
    updateTriggerPayloadType?: pulumi.Input<string>;
}

export interface ContainerRegistryTaskDockerStep {
    arguments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    cacheEnabled?: pulumi.Input<boolean>;
    contextAccessToken: pulumi.Input<string>;
    contextPath: pulumi.Input<string>;
    dockerfilePath: pulumi.Input<string>;
    imageNames?: pulumi.Input<pulumi.Input<string>[]>;
    pushEnabled?: pulumi.Input<boolean>;
    secretArguments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    target?: pulumi.Input<string>;
}

export interface ContainerRegistryTaskEncodedStep {
    contextAccessToken?: pulumi.Input<string>;
    contextPath?: pulumi.Input<string>;
    secretValues?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    taskContent: pulumi.Input<string>;
    valueContent?: pulumi.Input<string>;
    values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ContainerRegistryTaskFileStep {
    contextAccessToken?: pulumi.Input<string>;
    contextPath?: pulumi.Input<string>;
    secretValues?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    taskFilePath: pulumi.Input<string>;
    valueFilePath?: pulumi.Input<string>;
    values?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ContainerRegistryTaskIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ContainerRegistryTaskPlatform {
    architecture?: pulumi.Input<string>;
    os: pulumi.Input<string>;
    variant?: pulumi.Input<string>;
}

export interface ContainerRegistryTaskRegistryCredential {
    customs?: pulumi.Input<pulumi.Input<inputs.ContainerRegistryTaskRegistryCredentialCustom>[]>;
    source?: pulumi.Input<inputs.ContainerRegistryTaskRegistryCredentialSource>;
}

export interface ContainerRegistryTaskRegistryCredentialCustom {
    identity?: pulumi.Input<string>;
    loginServer: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface ContainerRegistryTaskRegistryCredentialSource {
    loginMode: pulumi.Input<string>;
}

export interface ContainerRegistryTaskScheduleRunNowTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ContainerRegistryTaskSourceTrigger {
    authentication?: pulumi.Input<inputs.ContainerRegistryTaskSourceTriggerAuthentication>;
    branch?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    events: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    repositoryUrl: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface ContainerRegistryTaskSourceTriggerAuthentication {
    expireInSeconds?: pulumi.Input<number>;
    refreshToken?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    token: pulumi.Input<string>;
    tokenType: pulumi.Input<string>;
}

export interface ContainerRegistryTaskTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryTaskTimerTrigger {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    schedule: pulumi.Input<string>;
}

export interface ContainerRegistryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryTokenPasswordPassword1 {
    expiry?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerRegistryTokenPasswordPassword2 {
    expiry?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ContainerRegistryTokenPasswordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerRegistryWebhookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbAccountAnalyticalStorage {
    schemaType: pulumi.Input<string>;
}

export interface CosmosdbAccountBackup {
    intervalInMinutes?: pulumi.Input<number>;
    retentionInHours?: pulumi.Input<number>;
    storageRedundancy?: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CosmosdbAccountCapability {
    name: pulumi.Input<string>;
}

export interface CosmosdbAccountCapacity {
    totalThroughputLimit: pulumi.Input<number>;
}

export interface CosmosdbAccountConsistencyPolicy {
    consistencyLevel: pulumi.Input<string>;
    maxIntervalInSeconds?: pulumi.Input<number>;
    maxStalenessPrefix?: pulumi.Input<number>;
}

export interface CosmosdbAccountCorsRule {
    allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeInSeconds?: pulumi.Input<number>;
}

export interface CosmosdbAccountGeoLocation {
    failoverPriority: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    zoneRedundant?: pulumi.Input<boolean>;
}

export interface CosmosdbAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CosmosdbAccountRestore {
    databases?: pulumi.Input<pulumi.Input<inputs.CosmosdbAccountRestoreDatabase>[]>;
    gremlinDatabases?: pulumi.Input<pulumi.Input<inputs.CosmosdbAccountRestoreGremlinDatabase>[]>;
    restoreTimestampInUtc: pulumi.Input<string>;
    sourceCosmosdbAccountId: pulumi.Input<string>;
    tablesToRestores?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CosmosdbAccountRestoreDatabase {
    collectionNames?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface CosmosdbAccountRestoreGremlinDatabase {
    graphNames?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface CosmosdbAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbAccountVirtualNetworkRule {
    id: pulumi.Input<string>;
    ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
}

export interface CosmosdbCassandraClusterIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CosmosdbCassandraClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbCassandraDatacenterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbCassandraKeyspaceAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbCassandraKeyspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbCassandraTableAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbCassandraTableSchema {
    clusterKeys?: pulumi.Input<pulumi.Input<inputs.CosmosdbCassandraTableSchemaClusterKey>[]>;
    columns: pulumi.Input<pulumi.Input<inputs.CosmosdbCassandraTableSchemaColumn>[]>;
    partitionKeys: pulumi.Input<pulumi.Input<inputs.CosmosdbCassandraTableSchemaPartitionKey>[]>;
}

export interface CosmosdbCassandraTableSchemaClusterKey {
    name: pulumi.Input<string>;
    orderBy: pulumi.Input<string>;
}

export interface CosmosdbCassandraTableSchemaColumn {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CosmosdbCassandraTableSchemaPartitionKey {
    name: pulumi.Input<string>;
}

export interface CosmosdbCassandraTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbGremlinDatabaseAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbGremlinDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbGremlinGraphAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbGremlinGraphConflictResolutionPolicy {
    conflictResolutionPath?: pulumi.Input<string>;
    conflictResolutionProcedure?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface CosmosdbGremlinGraphIndexPolicy {
    automatic?: pulumi.Input<boolean>;
    compositeIndices?: pulumi.Input<pulumi.Input<inputs.CosmosdbGremlinGraphIndexPolicyCompositeIndex>[]>;
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    includedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    indexingMode: pulumi.Input<string>;
    spatialIndices?: pulumi.Input<pulumi.Input<inputs.CosmosdbGremlinGraphIndexPolicySpatialIndex>[]>;
}

export interface CosmosdbGremlinGraphIndexPolicyCompositeIndex {
    indices: pulumi.Input<pulumi.Input<inputs.CosmosdbGremlinGraphIndexPolicyCompositeIndexIndex>[]>;
}

export interface CosmosdbGremlinGraphIndexPolicyCompositeIndexIndex {
    order: pulumi.Input<string>;
    path: pulumi.Input<string>;
}

export interface CosmosdbGremlinGraphIndexPolicySpatialIndex {
    path: pulumi.Input<string>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CosmosdbGremlinGraphTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbGremlinGraphUniqueKey {
    paths: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CosmosdbMongoCollectionAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbMongoCollectionIndex {
    keys: pulumi.Input<pulumi.Input<string>[]>;
    unique?: pulumi.Input<boolean>;
}

export interface CosmosdbMongoCollectionSystemIndex {
    keys: pulumi.Input<pulumi.Input<string>[]>;
    unique: pulumi.Input<boolean>;
}

export interface CosmosdbMongoCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbMongoDatabaseAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbMongoDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbMongoRoleDefinitionPrivilege {
    actions: pulumi.Input<pulumi.Input<string>[]>;
    resource: pulumi.Input<inputs.CosmosdbMongoRoleDefinitionPrivilegeResource>;
}

export interface CosmosdbMongoRoleDefinitionPrivilegeResource {
    collectionName?: pulumi.Input<string>;
    dbName?: pulumi.Input<string>;
}

export interface CosmosdbMongoRoleDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbMongoUserDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbPostgresqlClusterMaintenanceWindow {
    dayOfWeek?: pulumi.Input<number>;
    startHour?: pulumi.Input<number>;
    startMinute?: pulumi.Input<number>;
}

export interface CosmosdbPostgresqlClusterServer {
    fqdn: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CosmosdbPostgresqlClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbPostgresqlCoordinatorConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbPostgresqlFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbPostgresqlNodeConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbPostgresqlRoleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CosmosdbSqlContainerAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbSqlContainerConflictResolutionPolicy {
    conflictResolutionPath?: pulumi.Input<string>;
    conflictResolutionProcedure?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface CosmosdbSqlContainerIndexingPolicy {
    compositeIndices?: pulumi.Input<pulumi.Input<inputs.CosmosdbSqlContainerIndexingPolicyCompositeIndex>[]>;
    excludedPaths?: pulumi.Input<pulumi.Input<inputs.CosmosdbSqlContainerIndexingPolicyExcludedPath>[]>;
    includedPaths?: pulumi.Input<pulumi.Input<inputs.CosmosdbSqlContainerIndexingPolicyIncludedPath>[]>;
    indexingMode?: pulumi.Input<string>;
    spatialIndices?: pulumi.Input<pulumi.Input<inputs.CosmosdbSqlContainerIndexingPolicySpatialIndex>[]>;
}

export interface CosmosdbSqlContainerIndexingPolicyCompositeIndex {
    indices: pulumi.Input<pulumi.Input<inputs.CosmosdbSqlContainerIndexingPolicyCompositeIndexIndex>[]>;
}

export interface CosmosdbSqlContainerIndexingPolicyCompositeIndexIndex {
    order: pulumi.Input<string>;
    path: pulumi.Input<string>;
}

export interface CosmosdbSqlContainerIndexingPolicyExcludedPath {
    path: pulumi.Input<string>;
}

export interface CosmosdbSqlContainerIndexingPolicyIncludedPath {
    path: pulumi.Input<string>;
}

export interface CosmosdbSqlContainerIndexingPolicySpatialIndex {
    path: pulumi.Input<string>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CosmosdbSqlContainerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbSqlContainerUniqueKey {
    paths: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CosmosdbSqlDatabaseAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbSqlDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbSqlDedicatedGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbSqlFunctionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbSqlRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbSqlRoleDefinitionPermission {
    dataActions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CosmosdbSqlRoleDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbSqlStoredProcedureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbSqlTriggerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CosmosdbTableAutoscaleSettings {
    maxThroughput?: pulumi.Input<number>;
}

export interface CosmosdbTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CostAnomalyAlertTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CostManagementScheduledActionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CustomIpPrefixTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CustomProviderAction {
    endpoint: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CustomProviderResourceType {
    endpoint: pulumi.Input<string>;
    name: pulumi.Input<string>;
    routingType?: pulumi.Input<string>;
}

export interface CustomProviderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CustomProviderValidation {
    specification: pulumi.Input<string>;
}

export interface DashboardGrafanaAzureMonitorWorkspaceIntegration {
    resourceId: pulumi.Input<string>;
}

export interface DashboardGrafanaIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DashboardGrafanaSmtp {
    enabled?: pulumi.Input<boolean>;
    fromAddress: pulumi.Input<string>;
    fromName?: pulumi.Input<string>;
    host: pulumi.Input<string>;
    password: pulumi.Input<string>;
    startTlsPolicy: pulumi.Input<string>;
    user: pulumi.Input<string>;
    verificationSkipEnabled?: pulumi.Input<boolean>;
}

export interface DashboardGrafanaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryCredentialServicePrincipalServicePrincipalKey {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
    secretVersion?: pulumi.Input<string>;
}

export interface DataFactoryCredentialServicePrincipalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryCredentialUserManagedIdentityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryCustomDatasetLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryCustomDatasetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDataFlowSink {
    dataset?: pulumi.Input<inputs.DataFactoryDataFlowSinkDataset>;
    description?: pulumi.Input<string>;
    flowlet?: pulumi.Input<inputs.DataFactoryDataFlowSinkFlowlet>;
    linkedService?: pulumi.Input<inputs.DataFactoryDataFlowSinkLinkedService>;
    name: pulumi.Input<string>;
    rejectedLinkedService?: pulumi.Input<inputs.DataFactoryDataFlowSinkRejectedLinkedService>;
    schemaLinkedService?: pulumi.Input<inputs.DataFactoryDataFlowSinkSchemaLinkedService>;
}

export interface DataFactoryDataFlowSinkDataset {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSinkFlowlet {
    datasetParameters?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSinkLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSinkRejectedLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSinkSchemaLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSource {
    dataset?: pulumi.Input<inputs.DataFactoryDataFlowSourceDataset>;
    description?: pulumi.Input<string>;
    flowlet?: pulumi.Input<inputs.DataFactoryDataFlowSourceFlowlet>;
    linkedService?: pulumi.Input<inputs.DataFactoryDataFlowSourceLinkedService>;
    name: pulumi.Input<string>;
    rejectedLinkedService?: pulumi.Input<inputs.DataFactoryDataFlowSourceRejectedLinkedService>;
    schemaLinkedService?: pulumi.Input<inputs.DataFactoryDataFlowSourceSchemaLinkedService>;
}

export interface DataFactoryDataFlowSourceDataset {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSourceFlowlet {
    datasetParameters?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSourceLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSourceRejectedLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowSourceSchemaLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDataFlowTransformation {
    dataset?: pulumi.Input<inputs.DataFactoryDataFlowTransformationDataset>;
    description?: pulumi.Input<string>;
    flowlet?: pulumi.Input<inputs.DataFactoryDataFlowTransformationFlowlet>;
    linkedService?: pulumi.Input<inputs.DataFactoryDataFlowTransformationLinkedService>;
    name: pulumi.Input<string>;
}

export interface DataFactoryDataFlowTransformationDataset {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowTransformationFlowlet {
    datasetParameters?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDataFlowTransformationLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryDatasetAzureBlobSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetAzureBlobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetAzureSqlTableSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetAzureSqlTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetBinaryAzureBlobStorageLocation {
    container: pulumi.Input<string>;
    dynamicContainerEnabled?: pulumi.Input<boolean>;
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface DataFactoryDatasetBinaryCompression {
    level?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataFactoryDatasetBinaryHttpServerLocation {
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    path: pulumi.Input<string>;
    relativeUrl: pulumi.Input<string>;
}

export interface DataFactoryDatasetBinarySftpServerLocation {
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    path: pulumi.Input<string>;
}

export interface DataFactoryDatasetBinaryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetCosmosdbSqlapiSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetCosmosdbSqlapiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetDelimitedTextAzureBlobFsLocation {
    dynamicFileSystemEnabled?: pulumi.Input<boolean>;
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    fileSystem?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface DataFactoryDatasetDelimitedTextAzureBlobStorageLocation {
    container: pulumi.Input<string>;
    dynamicContainerEnabled?: pulumi.Input<boolean>;
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface DataFactoryDatasetDelimitedTextHttpServerLocation {
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    path: pulumi.Input<string>;
    relativeUrl: pulumi.Input<string>;
}

export interface DataFactoryDatasetDelimitedTextSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetDelimitedTextTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetHttpSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetHttpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetJsonAzureBlobStorageLocation {
    container: pulumi.Input<string>;
    dynamicContainerEnabled?: pulumi.Input<boolean>;
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    path: pulumi.Input<string>;
}

export interface DataFactoryDatasetJsonHttpServerLocation {
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    path: pulumi.Input<string>;
    relativeUrl: pulumi.Input<string>;
}

export interface DataFactoryDatasetJsonSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetJsonTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetMysqlSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetMysqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetParquetAzureBlobFsLocation {
    dynamicFileSystemEnabled?: pulumi.Input<boolean>;
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    fileSystem?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface DataFactoryDatasetParquetAzureBlobStorageLocation {
    container: pulumi.Input<string>;
    dynamicContainerEnabled?: pulumi.Input<boolean>;
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
}

export interface DataFactoryDatasetParquetHttpServerLocation {
    dynamicFilenameEnabled?: pulumi.Input<boolean>;
    dynamicPathEnabled?: pulumi.Input<boolean>;
    filename: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    relativeUrl: pulumi.Input<string>;
}

export interface DataFactoryDatasetParquetSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetParquetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetPostgresqlSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetPostgresqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetSnowflakeSchemaColumn {
    name: pulumi.Input<string>;
    precision?: pulumi.Input<number>;
    scale?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetSnowflakeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryDatasetSqlServerTableSchemaColumn {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface DataFactoryDatasetSqlServerTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryFlowletDataFlowSink {
    dataset?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSinkDataset>;
    description?: pulumi.Input<string>;
    flowlet?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSinkFlowlet>;
    linkedService?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSinkLinkedService>;
    name: pulumi.Input<string>;
    rejectedLinkedService?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSinkRejectedLinkedService>;
    schemaLinkedService?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSinkSchemaLinkedService>;
}

export interface DataFactoryFlowletDataFlowSinkDataset {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSinkFlowlet {
    datasetParameters?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSinkLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSinkRejectedLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSinkSchemaLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSource {
    dataset?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSourceDataset>;
    description?: pulumi.Input<string>;
    flowlet?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSourceFlowlet>;
    linkedService?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSourceLinkedService>;
    name: pulumi.Input<string>;
    rejectedLinkedService?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSourceRejectedLinkedService>;
    schemaLinkedService?: pulumi.Input<inputs.DataFactoryFlowletDataFlowSourceSchemaLinkedService>;
}

export interface DataFactoryFlowletDataFlowSourceDataset {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSourceFlowlet {
    datasetParameters?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSourceLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSourceRejectedLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowSourceSchemaLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryFlowletDataFlowTransformation {
    dataset?: pulumi.Input<inputs.DataFactoryFlowletDataFlowTransformationDataset>;
    description?: pulumi.Input<string>;
    flowlet?: pulumi.Input<inputs.DataFactoryFlowletDataFlowTransformationFlowlet>;
    linkedService?: pulumi.Input<inputs.DataFactoryFlowletDataFlowTransformationLinkedService>;
    name: pulumi.Input<string>;
}

export interface DataFactoryFlowletDataFlowTransformationDataset {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowTransformationFlowlet {
    datasetParameters?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryFlowletDataFlowTransformationLinkedService {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryGithubConfiguration {
    accountName: pulumi.Input<string>;
    branchName: pulumi.Input<string>;
    gitUrl?: pulumi.Input<string>;
    publishingEnabled?: pulumi.Input<boolean>;
    repositoryName: pulumi.Input<string>;
    rootFolder: pulumi.Input<string>;
}

export interface DataFactoryGlobalParameter {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DataFactoryIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisCatalogInfo {
    administratorLogin?: pulumi.Input<string>;
    administratorPassword?: pulumi.Input<string>;
    dualStandbyPairName?: pulumi.Input<string>;
    elasticPoolName?: pulumi.Input<string>;
    pricingTier?: pulumi.Input<string>;
    serverEndpoint: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisCopyComputeScale {
    dataIntegrationUnit?: pulumi.Input<number>;
    timeToLive?: pulumi.Input<number>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisCustomSetupScript {
    blobContainerUri: pulumi.Input<string>;
    sasToken: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetup {
    commandKeys?: pulumi.Input<pulumi.Input<inputs.DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupCommandKey>[]>;
    components?: pulumi.Input<pulumi.Input<inputs.DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupComponent>[]>;
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    powershellVersion?: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupCommandKey {
    keyVaultPassword?: pulumi.Input<inputs.DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupCommandKeyKeyVaultPassword>;
    password?: pulumi.Input<string>;
    targetName: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupCommandKeyKeyVaultPassword {
    linkedServiceName: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secretName: pulumi.Input<string>;
    secretVersion?: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupComponent {
    keyVaultLicense?: pulumi.Input<inputs.DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupComponentKeyVaultLicense>;
    license?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisExpressCustomSetupComponentKeyVaultLicense {
    linkedServiceName: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secretName: pulumi.Input<string>;
    secretVersion?: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisExpressVnetIntegration {
    subnetId: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisPackageStore {
    linkedServiceName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisPipelineExternalComputeScale {
    numberOfExternalNodes?: pulumi.Input<number>;
    numberOfPipelineNodes?: pulumi.Input<number>;
    timeToLive?: pulumi.Input<number>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisProxy {
    path?: pulumi.Input<string>;
    selfHostedIntegrationRuntimeName: pulumi.Input<string>;
    stagingStorageLinkedServiceName: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureSsisVnetIntegration {
    publicIps?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    subnetName?: pulumi.Input<string>;
    vnetId?: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeAzureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeSelfHostedRbacAuthorization {
    resourceId: pulumi.Input<string>;
}

export interface DataFactoryIntegrationRuntimeSelfHostedTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedCustomServiceIntegrationRuntime {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryLinkedCustomServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureBlobStorageKeyVaultSasToken {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureBlobStorageServicePrincipalLinkedKeyVaultKey {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureBlobStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureDatabricksInstancePool {
    clusterVersion: pulumi.Input<string>;
    instancePoolId: pulumi.Input<string>;
    maxNumberOfWorkers?: pulumi.Input<number>;
    minNumberOfWorkers?: pulumi.Input<number>;
}

export interface DataFactoryLinkedServiceAzureDatabricksKeyVaultPassword {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureDatabricksNewClusterConfig {
    clusterVersion: pulumi.Input<string>;
    customTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    driverNodeType?: pulumi.Input<string>;
    initScripts?: pulumi.Input<pulumi.Input<string>[]>;
    logDestination?: pulumi.Input<string>;
    maxNumberOfWorkers?: pulumi.Input<number>;
    minNumberOfWorkers?: pulumi.Input<number>;
    nodeType: pulumi.Input<string>;
    sparkConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sparkEnvironmentVariables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryLinkedServiceAzureDatabricksTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureFileStorageKeyVaultPassword {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureFileStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureFunctionKeyVaultKey {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureFunctionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureSearchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureSqlDatabaseKeyVaultConnectionString {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureSqlDatabaseKeyVaultPassword {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureSqlDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceAzureTableStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceCosmosdbMongoapiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceCosmosdbTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceDataLakeStorageGen2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceKeyVaultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceKustoTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceMysqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceOdataBasicAuthentication {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceOdataTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceOdbcBasicAuthentication {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceOdbcTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServicePostgresqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSftpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSnowflakeKeyVaultPassword {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSnowflakeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSqlServerKeyVaultConnectionString {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSqlServerKeyVaultPassword {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSqlServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSynapseKeyVaultPassword {
    linkedServiceName: pulumi.Input<string>;
    secretName: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceSynapseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryLinkedServiceWebTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryManagedPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataFactoryPipelineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryTriggerBlobEventPipeline {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryTriggerBlobEventTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryTriggerCustomEventPipeline {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryTriggerCustomEventTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryTriggerSchedulePipeline {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryTriggerScheduleSchedule {
    daysOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    hours?: pulumi.Input<pulumi.Input<number>[]>;
    minutes?: pulumi.Input<pulumi.Input<number>[]>;
    monthlies?: pulumi.Input<pulumi.Input<inputs.DataFactoryTriggerScheduleScheduleMonthly>[]>;
}

export interface DataFactoryTriggerScheduleScheduleMonthly {
    week?: pulumi.Input<number>;
    weekday: pulumi.Input<string>;
}

export interface DataFactoryTriggerScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryTriggerTumblingWindowPipeline {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DataFactoryTriggerTumblingWindowRetry {
    count: pulumi.Input<number>;
    interval?: pulumi.Input<number>;
}

export interface DataFactoryTriggerTumblingWindowTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataFactoryTriggerTumblingWindowTriggerDependency {
    offset?: pulumi.Input<string>;
    size?: pulumi.Input<string>;
    triggerName?: pulumi.Input<string>;
}

export interface DataFactoryVstsConfiguration {
    accountName: pulumi.Input<string>;
    branchName: pulumi.Input<string>;
    projectName: pulumi.Input<string>;
    publishingEnabled?: pulumi.Input<boolean>;
    repositoryName: pulumi.Input<string>;
    rootFolder: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface DataProtectionBackupInstanceBlobStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataProtectionBackupInstanceDiskTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataProtectionBackupInstanceKubernetesClusterBackupDatasourceParameters {
    clusterScopedResourcesEnabled?: pulumi.Input<boolean>;
    excludedNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    excludedResourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    includedNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    includedResourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    labelSelectors?: pulumi.Input<pulumi.Input<string>[]>;
    volumeSnapshotEnabled?: pulumi.Input<boolean>;
}

export interface DataProtectionBackupInstanceKubernetesClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataProtectionBackupInstancePostgresqlFlexibleServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataProtectionBackupInstancePostgresqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyBlobStorageRetentionRule {
    criteria: pulumi.Input<inputs.DataProtectionBackupPolicyBlobStorageRetentionRuleCriteria>;
    lifeCycle: pulumi.Input<inputs.DataProtectionBackupPolicyBlobStorageRetentionRuleLifeCycle>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
}

export interface DataProtectionBackupPolicyBlobStorageRetentionRuleCriteria {
    absoluteCriteria?: pulumi.Input<string>;
    daysOfMonths?: pulumi.Input<pulumi.Input<number>[]>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    monthsOfYears?: pulumi.Input<pulumi.Input<string>[]>;
    scheduledBackupTimes?: pulumi.Input<pulumi.Input<string>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataProtectionBackupPolicyBlobStorageRetentionRuleLifeCycle {
    dataStoreType: pulumi.Input<string>;
    duration: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyBlobStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyDiskRetentionRule {
    criteria: pulumi.Input<inputs.DataProtectionBackupPolicyDiskRetentionRuleCriteria>;
    duration: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
}

export interface DataProtectionBackupPolicyDiskRetentionRuleCriteria {
    absoluteCriteria?: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyDiskTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyKubernetesClusterDefaultRetentionRule {
    lifeCycles: pulumi.Input<pulumi.Input<inputs.DataProtectionBackupPolicyKubernetesClusterDefaultRetentionRuleLifeCycle>[]>;
}

export interface DataProtectionBackupPolicyKubernetesClusterDefaultRetentionRuleLifeCycle {
    dataStoreType: pulumi.Input<string>;
    duration: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyKubernetesClusterRetentionRule {
    criteria: pulumi.Input<inputs.DataProtectionBackupPolicyKubernetesClusterRetentionRuleCriteria>;
    lifeCycles: pulumi.Input<pulumi.Input<inputs.DataProtectionBackupPolicyKubernetesClusterRetentionRuleLifeCycle>[]>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
}

export interface DataProtectionBackupPolicyKubernetesClusterRetentionRuleCriteria {
    absoluteCriteria?: pulumi.Input<string>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    monthsOfYears?: pulumi.Input<pulumi.Input<string>[]>;
    scheduledBackupTimes?: pulumi.Input<pulumi.Input<string>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataProtectionBackupPolicyKubernetesClusterRetentionRuleLifeCycle {
    dataStoreType: pulumi.Input<string>;
    duration: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyKubernetesClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyPostgresqlFlexibleServerDefaultRetentionRule {
    lifeCycles: pulumi.Input<pulumi.Input<inputs.DataProtectionBackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleLifeCycle>[]>;
}

export interface DataProtectionBackupPolicyPostgresqlFlexibleServerDefaultRetentionRuleLifeCycle {
    dataStoreType: pulumi.Input<string>;
    duration: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyPostgresqlFlexibleServerRetentionRule {
    criteria: pulumi.Input<inputs.DataProtectionBackupPolicyPostgresqlFlexibleServerRetentionRuleCriteria>;
    lifeCycles: pulumi.Input<pulumi.Input<inputs.DataProtectionBackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycle>[]>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
}

export interface DataProtectionBackupPolicyPostgresqlFlexibleServerRetentionRuleCriteria {
    absoluteCriteria?: pulumi.Input<string>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    monthsOfYears?: pulumi.Input<pulumi.Input<string>[]>;
    scheduledBackupTimes?: pulumi.Input<pulumi.Input<string>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataProtectionBackupPolicyPostgresqlFlexibleServerRetentionRuleLifeCycle {
    dataStoreType: pulumi.Input<string>;
    duration: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyPostgresqlFlexibleServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataProtectionBackupPolicyPostgresqlRetentionRule {
    criteria: pulumi.Input<inputs.DataProtectionBackupPolicyPostgresqlRetentionRuleCriteria>;
    duration: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
}

export interface DataProtectionBackupPolicyPostgresqlRetentionRuleCriteria {
    absoluteCriteria?: pulumi.Input<string>;
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    monthsOfYears?: pulumi.Input<pulumi.Input<string>[]>;
    scheduledBackupTimes?: pulumi.Input<pulumi.Input<string>[]>;
    weeksOfMonths?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataProtectionBackupPolicyPostgresqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataProtectionBackupVaultIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataProtectionBackupVaultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataProtectionResourceGuardTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataShareAccountIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataShareAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataShareDatasetBlobStorageStorageAccount {
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
}

export interface DataShareDatasetBlobStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataShareDatasetDataLakeGen2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataShareDatasetKustoClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataShareDatasetKustoDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DataShareSnapshotSchedule {
    name: pulumi.Input<string>;
    recurrence: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}

export interface DataShareTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseMigrationProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseMigrationServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DataboxEdgeDeviceDeviceProperty {
    capacity: pulumi.Input<number>;
    configuredRoleTypes: pulumi.Input<pulumi.Input<string>[]>;
    culture: pulumi.Input<string>;
    hcsVersion: pulumi.Input<string>;
    model: pulumi.Input<string>;
    nodeCount: pulumi.Input<number>;
    serialNumber: pulumi.Input<string>;
    softwareVersion: pulumi.Input<string>;
    status: pulumi.Input<string>;
    timeZone: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DataboxEdgeDeviceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabricksAccessConnectorIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatabricksAccessConnectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabricksVirtualNetworkPeeringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabricksWorkspaceCustomParameters {
    machineLearningWorkspaceId?: pulumi.Input<string>;
    natGatewayName?: pulumi.Input<string>;
    noPublicIp?: pulumi.Input<boolean>;
    privateSubnetName?: pulumi.Input<string>;
    privateSubnetNetworkSecurityGroupAssociationId?: pulumi.Input<string>;
    publicIpName?: pulumi.Input<string>;
    publicSubnetName?: pulumi.Input<string>;
    publicSubnetNetworkSecurityGroupAssociationId?: pulumi.Input<string>;
    storageAccountName?: pulumi.Input<string>;
    storageAccountSkuName?: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vnetAddressPrefix?: pulumi.Input<string>;
}

export interface DatabricksWorkspaceCustomerManagedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabricksWorkspaceManagedDiskIdentity {
    principalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatabricksWorkspaceRootDbfsCustomerManagedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabricksWorkspaceStorageAccountIdentity {
    principalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatabricksWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatadogMonitorDatadogOrganization {
    apiKey: pulumi.Input<string>;
    applicationKey: pulumi.Input<string>;
    enterpriseAppId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    linkingAuthCode?: pulumi.Input<string>;
    linkingClientId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    redirectUri?: pulumi.Input<string>;
}

export interface DatadogMonitorIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DatadogMonitorSsoConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatadogMonitorTagRuleLog {
    aadLogEnabled?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DatadogMonitorTagRuleLogFilter>[]>;
    resourceLogEnabled?: pulumi.Input<boolean>;
    subscriptionLogEnabled?: pulumi.Input<boolean>;
}

export interface DatadogMonitorTagRuleLogFilter {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DatadogMonitorTagRuleMetric {
    filters?: pulumi.Input<pulumi.Input<inputs.DatadogMonitorTagRuleMetricFilter>[]>;
}

export interface DatadogMonitorTagRuleMetricFilter {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DatadogMonitorTagRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatadogMonitorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatadogMonitorUser {
    email: pulumi.Input<string>;
    name: pulumi.Input<string>;
    phoneNumber?: pulumi.Input<string>;
}

export interface DedicatedHardwareSecurityModuleManagementNetworkProfile {
    networkInterfacePrivateIpAddresses: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface DedicatedHardwareSecurityModuleNetworkProfile {
    networkInterfacePrivateIpAddresses: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface DedicatedHardwareSecurityModuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DedicatedHostGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DedicatedHostTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevCenterCatalogCatalogAdogit {
    branch: pulumi.Input<string>;
    keyVaultKeyUrl: pulumi.Input<string>;
    path: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface DevCenterCatalogCatalogGithub {
    branch: pulumi.Input<string>;
    keyVaultKeyUrl: pulumi.Input<string>;
    path: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface DevCenterCatalogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevCenterDevBoxDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevCenterEnvironmentTypeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevCenterGalleryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DevCenterIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DevCenterNetworkConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevCenterProjectEnvironmentTypeIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DevCenterProjectEnvironmentTypeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevCenterProjectEnvironmentTypeUserRoleAssignment {
    roles: pulumi.Input<pulumi.Input<string>[]>;
    userId: pulumi.Input<string>;
}

export interface DevCenterProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevCenterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevTestGlobalVmShutdownScheduleNotificationSettings {
    email?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    timeInMinutes?: pulumi.Input<number>;
    webhookUrl?: pulumi.Input<string>;
}

export interface DevTestGlobalVmShutdownScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevTestLabTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevTestLinuxVirtualMachineGalleryImageReference {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DevTestLinuxVirtualMachineInboundNatRule {
    backendPort: pulumi.Input<number>;
    frontendPort?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
}

export interface DevTestLinuxVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevTestPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevTestScheduleDailyRecurrence {
    time: pulumi.Input<string>;
}

export interface DevTestScheduleHourlyRecurrence {
    minute: pulumi.Input<number>;
}

export interface DevTestScheduleNotificationSettings {
    status?: pulumi.Input<string>;
    timeInMinutes?: pulumi.Input<number>;
    webhookUrl?: pulumi.Input<string>;
}

export interface DevTestScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevTestScheduleWeeklyRecurrence {
    time: pulumi.Input<string>;
    weekDays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DevTestVirtualNetworkSubnet {
    name?: pulumi.Input<string>;
    sharedPublicIpAddress?: pulumi.Input<inputs.DevTestVirtualNetworkSubnetSharedPublicIpAddress>;
    useInVirtualMachineCreation?: pulumi.Input<string>;
    usePublicIpAddress?: pulumi.Input<string>;
}

export interface DevTestVirtualNetworkSubnetSharedPublicIpAddress {
    allowedPorts?: pulumi.Input<pulumi.Input<inputs.DevTestVirtualNetworkSubnetSharedPublicIpAddressAllowedPort>[]>;
}

export interface DevTestVirtualNetworkSubnetSharedPublicIpAddressAllowedPort {
    backendPort?: pulumi.Input<number>;
    transportProtocol?: pulumi.Input<string>;
}

export interface DevTestVirtualNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DevTestWindowsVirtualMachineGalleryImageReference {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DevTestWindowsVirtualMachineInboundNatRule {
    backendPort: pulumi.Input<number>;
    frontendPort?: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
}

export interface DevTestWindowsVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DigitalTwinsEndpointEventgridTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DigitalTwinsEndpointEventhubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DigitalTwinsEndpointServicebusTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DigitalTwinsInstanceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DigitalTwinsInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DigitalTwinsTimeSeriesDatabaseConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface DiskAccessTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DiskEncryptionSetIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DiskEncryptionSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsARecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsAaaaRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsCaaRecordRecord {
    flags: pulumi.Input<number>;
    tag: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DnsCaaRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsCnameRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsMxRecordRecord {
    exchange: pulumi.Input<string>;
    preference: pulumi.Input<string>;
}

export interface DnsMxRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsNsRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsPtrRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsSrvRecordRecord {
    port: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    target: pulumi.Input<string>;
    weight: pulumi.Input<number>;
}

export interface DnsSrvRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsTxtRecordRecord {
    value: pulumi.Input<string>;
}

export interface DnsTxtRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DnsZoneSoaRecord {
    email: pulumi.Input<string>;
    expireTime?: pulumi.Input<number>;
    fqdn?: pulumi.Input<string>;
    hostName?: pulumi.Input<string>;
    minimumTtl?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<number>;
    retryTime?: pulumi.Input<number>;
    serialNumber?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ttl?: pulumi.Input<number>;
}

export interface DnsZoneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ElasticCloudElasticsearchLogs {
    filteringTags?: pulumi.Input<pulumi.Input<inputs.ElasticCloudElasticsearchLogsFilteringTag>[]>;
    sendActivityLogs?: pulumi.Input<boolean>;
    sendAzureadLogs?: pulumi.Input<boolean>;
    sendSubscriptionLogs?: pulumi.Input<boolean>;
}

export interface ElasticCloudElasticsearchLogsFilteringTag {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ElasticCloudElasticsearchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ElasticSanSku {
    name: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface ElasticSanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ElasticSanVolumeCreateSource {
    sourceId: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
}

export interface ElasticSanVolumeGroupEncryption {
    currentVersionedKeyExpirationTimestamp?: pulumi.Input<string>;
    currentVersionedKeyId?: pulumi.Input<string>;
    keyVaultKeyId: pulumi.Input<string>;
    lastKeyRotationTimestamp?: pulumi.Input<string>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface ElasticSanVolumeGroupIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ElasticSanVolumeGroupNetworkRule {
    action?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface ElasticSanVolumeGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ElasticSanVolumeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EmailCommunicationServiceDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EmailCommunicationServiceDomainVerificationRecord {
    dkim2s: pulumi.Input<pulumi.Input<inputs.EmailCommunicationServiceDomainVerificationRecordDkim2>[]>;
    dkims: pulumi.Input<pulumi.Input<inputs.EmailCommunicationServiceDomainVerificationRecordDkim>[]>;
    dmarcs: pulumi.Input<pulumi.Input<inputs.EmailCommunicationServiceDomainVerificationRecordDmarc>[]>;
    domains: pulumi.Input<pulumi.Input<inputs.EmailCommunicationServiceDomainVerificationRecordDomain>[]>;
    spfs: pulumi.Input<pulumi.Input<inputs.EmailCommunicationServiceDomainVerificationRecordSpf>[]>;
}

export interface EmailCommunicationServiceDomainVerificationRecordDkim {
    name: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EmailCommunicationServiceDomainVerificationRecordDkim2 {
    name: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EmailCommunicationServiceDomainVerificationRecordDmarc {
    name: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EmailCommunicationServiceDomainVerificationRecordDomain {
    name: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EmailCommunicationServiceDomainVerificationRecordSpf {
    name: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface EmailCommunicationServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventgridDomainIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface EventgridDomainInboundIpRule {
    action: pulumi.Input<string>;
    ipMask: pulumi.Input<string>;
}

export interface EventgridDomainInputMappingDefaultValues {
    dataVersion?: pulumi.Input<string>;
    eventType?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface EventgridDomainInputMappingFields {
    dataVersion?: pulumi.Input<string>;
    eventTime?: pulumi.Input<string>;
    eventType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    topic?: pulumi.Input<string>;
}

export interface EventgridDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventgridDomainTopicTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionAdvancedFilter {
    boolEquals?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterBoolEqual>[]>;
    isNotNulls?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterIsNotNull>[]>;
    isNullOrUndefineds?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterIsNullOrUndefined>[]>;
    numberGreaterThanOrEquals?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberGreaterThanOrEqual>[]>;
    numberGreaterThans?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberGreaterThan>[]>;
    numberInRanges?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberInRange>[]>;
    numberIns?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberIn>[]>;
    numberLessThanOrEquals?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberLessThanOrEqual>[]>;
    numberLessThans?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberLessThan>[]>;
    numberNotInRanges?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberNotInRange>[]>;
    numberNotIns?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterNumberNotIn>[]>;
    stringBeginsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringBeginsWith>[]>;
    stringContains?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringContain>[]>;
    stringEndsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringEndsWith>[]>;
    stringIns?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringIn>[]>;
    stringNotBeginsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringNotBeginsWith>[]>;
    stringNotContains?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringNotContain>[]>;
    stringNotEndsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringNotEndsWith>[]>;
    stringNotIns?: pulumi.Input<pulumi.Input<inputs.EventgridEventSubscriptionAdvancedFilterStringNotIn>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterBoolEqual {
    key: pulumi.Input<string>;
    value: pulumi.Input<boolean>;
}

export interface EventgridEventSubscriptionAdvancedFilterIsNotNull {
    key: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionAdvancedFilterIsNullOrUndefined {
    key: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberGreaterThan {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberGreaterThanOrEqual {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberInRange {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<pulumi.Input<number>[]>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberLessThan {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberLessThanOrEqual {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberNotIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterNumberNotInRange {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<pulumi.Input<number>[]>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringBeginsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringContain {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringEndsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringNotBeginsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringNotContain {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringNotEndsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAdvancedFilterStringNotIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridEventSubscriptionAzureFunctionEndpoint {
    functionId: pulumi.Input<string>;
    maxEventsPerBatch?: pulumi.Input<number>;
    preferredBatchSizeInKilobytes?: pulumi.Input<number>;
}

export interface EventgridEventSubscriptionDeadLetterIdentity {
    type: pulumi.Input<string>;
    userAssignedIdentity?: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionDeliveryIdentity {
    type: pulumi.Input<string>;
    userAssignedIdentity?: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionDeliveryProperty {
    headerName: pulumi.Input<string>;
    secret?: pulumi.Input<boolean>;
    sourceField?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionRetryPolicy {
    eventTimeToLive: pulumi.Input<number>;
    maxDeliveryAttempts: pulumi.Input<number>;
}

export interface EventgridEventSubscriptionStorageBlobDeadLetterDestination {
    storageAccountId: pulumi.Input<string>;
    storageBlobContainerName: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionStorageQueueEndpoint {
    queueMessageTimeToLiveInSeconds?: pulumi.Input<number>;
    queueName: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionSubjectFilter {
    caseSensitive?: pulumi.Input<boolean>;
    subjectBeginsWith?: pulumi.Input<string>;
    subjectEndsWith?: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventgridEventSubscriptionWebhookEndpoint {
    activeDirectoryAppIdOrUri?: pulumi.Input<string>;
    activeDirectoryTenantId?: pulumi.Input<string>;
    baseUrl?: pulumi.Input<string>;
    maxEventsPerBatch?: pulumi.Input<number>;
    preferredBatchSizeInKilobytes?: pulumi.Input<number>;
    url: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilter {
    boolEquals?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterBoolEqual>[]>;
    isNotNulls?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterIsNotNull>[]>;
    isNullOrUndefineds?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefined>[]>;
    numberGreaterThanOrEquals?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqual>[]>;
    numberGreaterThans?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberGreaterThan>[]>;
    numberInRanges?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberInRange>[]>;
    numberIns?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberIn>[]>;
    numberLessThanOrEquals?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqual>[]>;
    numberLessThans?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberLessThan>[]>;
    numberNotInRanges?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberNotInRange>[]>;
    numberNotIns?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterNumberNotIn>[]>;
    stringBeginsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringBeginsWith>[]>;
    stringContains?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringContain>[]>;
    stringEndsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringEndsWith>[]>;
    stringIns?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringIn>[]>;
    stringNotBeginsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWith>[]>;
    stringNotContains?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotContain>[]>;
    stringNotEndsWiths?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotEndsWith>[]>;
    stringNotIns?: pulumi.Input<pulumi.Input<inputs.EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotIn>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterBoolEqual {
    key: pulumi.Input<string>;
    value: pulumi.Input<boolean>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterIsNotNull {
    key: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefined {
    key: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberGreaterThan {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqual {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberInRange {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<pulumi.Input<number>[]>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberLessThan {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqual {
    key: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberNotIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<number>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterNumberNotInRange {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<pulumi.Input<number>[]>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringBeginsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringContain {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringEndsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotContain {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotEndsWith {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAdvancedFilterStringNotIn {
    key: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface EventgridSystemTopicEventSubscriptionAzureFunctionEndpoint {
    functionId: pulumi.Input<string>;
    maxEventsPerBatch?: pulumi.Input<number>;
    preferredBatchSizeInKilobytes?: pulumi.Input<number>;
}

export interface EventgridSystemTopicEventSubscriptionDeadLetterIdentity {
    type: pulumi.Input<string>;
    userAssignedIdentity?: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionDeliveryIdentity {
    type: pulumi.Input<string>;
    userAssignedIdentity?: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionDeliveryProperty {
    headerName: pulumi.Input<string>;
    secret?: pulumi.Input<boolean>;
    sourceField?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionRetryPolicy {
    eventTimeToLive: pulumi.Input<number>;
    maxDeliveryAttempts: pulumi.Input<number>;
}

export interface EventgridSystemTopicEventSubscriptionStorageBlobDeadLetterDestination {
    storageAccountId: pulumi.Input<string>;
    storageBlobContainerName: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionStorageQueueEndpoint {
    queueMessageTimeToLiveInSeconds?: pulumi.Input<number>;
    queueName: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionSubjectFilter {
    caseSensitive?: pulumi.Input<boolean>;
    subjectBeginsWith?: pulumi.Input<string>;
    subjectEndsWith?: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventgridSystemTopicEventSubscriptionWebhookEndpoint {
    activeDirectoryAppIdOrUri?: pulumi.Input<string>;
    activeDirectoryTenantId?: pulumi.Input<string>;
    baseUrl?: pulumi.Input<string>;
    maxEventsPerBatch?: pulumi.Input<number>;
    preferredBatchSizeInKilobytes?: pulumi.Input<number>;
    url: pulumi.Input<string>;
}

export interface EventgridSystemTopicIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface EventgridSystemTopicTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventgridTopicIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface EventgridTopicInboundIpRule {
    action: pulumi.Input<string>;
    ipMask: pulumi.Input<string>;
}

export interface EventgridTopicInputMappingDefaultValues {
    dataVersion?: pulumi.Input<string>;
    eventType?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
}

export interface EventgridTopicInputMappingFields {
    dataVersion?: pulumi.Input<string>;
    eventTime?: pulumi.Input<string>;
    eventType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    subject?: pulumi.Input<string>;
    topic?: pulumi.Input<string>;
}

export interface EventgridTopicTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubCaptureDescription {
    destination: pulumi.Input<inputs.EventhubCaptureDescriptionDestination>;
    enabled: pulumi.Input<boolean>;
    encoding: pulumi.Input<string>;
    intervalInSeconds?: pulumi.Input<number>;
    sizeLimitInBytes?: pulumi.Input<number>;
    skipEmptyArchives?: pulumi.Input<boolean>;
}

export interface EventhubCaptureDescriptionDestination {
    archiveNameFormat: pulumi.Input<string>;
    blobContainerName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface EventhubClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubConsumerGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubNamespaceAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubNamespaceCustomerManagedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubNamespaceDisasterRecoveryConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubNamespaceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface EventhubNamespaceNetworkRuleset {
    defaultAction: pulumi.Input<string>;
    ipRules: pulumi.Input<pulumi.Input<inputs.EventhubNamespaceNetworkRulesetIpRule>[]>;
    publicNetworkAccessEnabled: pulumi.Input<boolean>;
    trustedServiceAccessEnabled: pulumi.Input<boolean>;
    virtualNetworkRules: pulumi.Input<pulumi.Input<inputs.EventhubNamespaceNetworkRulesetVirtualNetworkRule>[]>;
}

export interface EventhubNamespaceNetworkRulesetIpRule {
    action: pulumi.Input<string>;
    ipMask: pulumi.Input<string>;
}

export interface EventhubNamespaceNetworkRulesetVirtualNetworkRule {
    ignoreMissingVirtualNetworkServiceEndpoint: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface EventhubNamespaceSchemaGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface EventhubNamespaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EventhubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ExpressRouteCircuitAuthorizationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ExpressRouteCircuitConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ExpressRouteCircuitPeeringIpv6 {
    enabled?: pulumi.Input<boolean>;
    microsoftPeering?: pulumi.Input<inputs.ExpressRouteCircuitPeeringIpv6MicrosoftPeering>;
    primaryPeerAddressPrefix: pulumi.Input<string>;
    routeFilterId?: pulumi.Input<string>;
    secondaryPeerAddressPrefix: pulumi.Input<string>;
}

export interface ExpressRouteCircuitPeeringIpv6MicrosoftPeering {
    advertisedCommunities?: pulumi.Input<pulumi.Input<string>[]>;
    advertisedPublicPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    customerAsn?: pulumi.Input<number>;
    routingRegistryName?: pulumi.Input<string>;
}

export interface ExpressRouteCircuitPeeringMicrosoftPeeringConfig {
    advertisedCommunities?: pulumi.Input<pulumi.Input<string>[]>;
    advertisedPublicPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    customerAsn?: pulumi.Input<number>;
    routingRegistryName?: pulumi.Input<string>;
}

export interface ExpressRouteCircuitPeeringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ExpressRouteCircuitSku {
    family: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface ExpressRouteCircuitTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ExpressRouteConnectionRouting {
    associatedRouteTableId?: pulumi.Input<string>;
    inboundRouteMapId?: pulumi.Input<string>;
    outboundRouteMapId?: pulumi.Input<string>;
    propagatedRouteTable?: pulumi.Input<inputs.ExpressRouteConnectionRoutingPropagatedRouteTable>;
}

export interface ExpressRouteConnectionRoutingPropagatedRouteTable {
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ExpressRouteConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ExpressRouteGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ExpressRoutePortAuthorizationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ExpressRoutePortIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ExpressRoutePortLink1 {
    adminEnabled?: pulumi.Input<boolean>;
    connectorType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    macsecCakKeyvaultSecretId?: pulumi.Input<string>;
    macsecCipher?: pulumi.Input<string>;
    macsecCknKeyvaultSecretId?: pulumi.Input<string>;
    macsecSciEnabled?: pulumi.Input<boolean>;
    patchPanelId?: pulumi.Input<string>;
    rackId?: pulumi.Input<string>;
    routerName?: pulumi.Input<string>;
}

export interface ExpressRoutePortLink2 {
    adminEnabled?: pulumi.Input<boolean>;
    connectorType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interfaceName?: pulumi.Input<string>;
    macsecCakKeyvaultSecretId?: pulumi.Input<string>;
    macsecCipher?: pulumi.Input<string>;
    macsecCknKeyvaultSecretId?: pulumi.Input<string>;
    macsecSciEnabled?: pulumi.Input<boolean>;
    patchPanelId?: pulumi.Input<string>;
    rackId?: pulumi.Input<string>;
    routerName?: pulumi.Input<string>;
}

export interface ExpressRoutePortTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ExtendedCustomLocationAuthentication {
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ExtendedCustomLocationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FederatedIdentityCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallApplicationRuleCollectionRule {
    description?: pulumi.Input<string>;
    fqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    protocols?: pulumi.Input<pulumi.Input<inputs.FirewallApplicationRuleCollectionRuleProtocol>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    targetFqdns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FirewallApplicationRuleCollectionRuleProtocol {
    port: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface FirewallApplicationRuleCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallIpConfiguration {
    name: pulumi.Input<string>;
    privateIpAddress?: pulumi.Input<string>;
    publicIpAddressId?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface FirewallManagementIpConfiguration {
    name: pulumi.Input<string>;
    privateIpAddress?: pulumi.Input<string>;
    publicIpAddressId: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface FirewallNatRuleCollectionRule {
    description?: pulumi.Input<string>;
    destinationAddresses: pulumi.Input<pulumi.Input<string>[]>;
    destinationPorts: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    translatedAddress: pulumi.Input<string>;
    translatedPort: pulumi.Input<string>;
}

export interface FirewallNatRuleCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallNetworkRuleCollectionRule {
    description?: pulumi.Input<string>;
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    destinationFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    destinationPorts: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FirewallNetworkRuleCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallPolicyDns {
    proxyEnabled?: pulumi.Input<boolean>;
    servers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FirewallPolicyExplicitProxy {
    enablePacFile?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    httpPort?: pulumi.Input<number>;
    httpsPort?: pulumi.Input<number>;
    pacFile?: pulumi.Input<string>;
    pacFilePort?: pulumi.Input<number>;
}

export interface FirewallPolicyIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface FirewallPolicyInsights {
    defaultLogAnalyticsWorkspaceId: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    logAnalyticsWorkspaces?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyInsightsLogAnalyticsWorkspace>[]>;
    retentionInDays?: pulumi.Input<number>;
}

export interface FirewallPolicyInsightsLogAnalyticsWorkspace {
    firewallLocation: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface FirewallPolicyIntrusionDetection {
    mode?: pulumi.Input<string>;
    privateRanges?: pulumi.Input<pulumi.Input<string>[]>;
    signatureOverrides?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyIntrusionDetectionSignatureOverride>[]>;
    trafficBypasses?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyIntrusionDetectionTrafficBypass>[]>;
}

export interface FirewallPolicyIntrusionDetectionSignatureOverride {
    id?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

export interface FirewallPolicyIntrusionDetectionTrafficBypass {
    description?: pulumi.Input<string>;
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FirewallPolicyRuleCollectionGroupApplicationRuleCollection {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    rules: pulumi.Input<pulumi.Input<inputs.FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule>[]>;
}

export interface FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule {
    description?: pulumi.Input<string>;
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    destinationFqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
    destinationFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    destinationUrls?: pulumi.Input<pulumi.Input<string>[]>;
    httpHeaders?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader>[]>;
    name: pulumi.Input<string>;
    protocols?: pulumi.Input<pulumi.Input<inputs.FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    terminateTls?: pulumi.Input<boolean>;
    webCategories?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleHttpHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocol {
    port: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface FirewallPolicyRuleCollectionGroupNatRuleCollection {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    rules: pulumi.Input<pulumi.Input<inputs.FirewallPolicyRuleCollectionGroupNatRuleCollectionRule>[]>;
}

export interface FirewallPolicyRuleCollectionGroupNatRuleCollectionRule {
    description?: pulumi.Input<string>;
    destinationAddress?: pulumi.Input<string>;
    destinationPorts?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    translatedAddress?: pulumi.Input<string>;
    translatedFqdn?: pulumi.Input<string>;
    translatedPort: pulumi.Input<number>;
}

export interface FirewallPolicyRuleCollectionGroupNetworkRuleCollection {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    rules: pulumi.Input<pulumi.Input<inputs.FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule>[]>;
}

export interface FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule {
    description?: pulumi.Input<string>;
    destinationAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    destinationFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    destinationIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
    destinationPorts: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    sourceAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    sourceIpGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FirewallPolicyRuleCollectionGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallPolicyThreatIntelligenceAllowlist {
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FirewallPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallPolicyTlsCertificate {
    keyVaultSecretId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface FirewallTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FirewallVirtualHub {
    privateIpAddress?: pulumi.Input<string>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    publicIpCount?: pulumi.Input<number>;
    virtualHubId: pulumi.Input<string>;
}

export interface FluidRelayServerIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface FluidRelayServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FrontdoorBackendPool {
    backends: pulumi.Input<pulumi.Input<inputs.FrontdoorBackendPoolBackend>[]>;
    healthProbeName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    loadBalancingName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface FrontdoorBackendPoolBackend {
    address: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    hostHeader: pulumi.Input<string>;
    httpPort: pulumi.Input<number>;
    httpsPort: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
    weight?: pulumi.Input<number>;
}

export interface FrontdoorBackendPoolHealthProbe {
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    intervalInSeconds?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    probeMethod?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
}

export interface FrontdoorBackendPoolLoadBalancing {
    additionalLatencyMilliseconds?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    sampleSize?: pulumi.Input<number>;
    successfulSamplesRequired?: pulumi.Input<number>;
}

export interface FrontdoorBackendPoolSetting {
    backendPoolsSendReceiveTimeoutSeconds?: pulumi.Input<number>;
    enforceBackendPoolsCertificateNameCheck: pulumi.Input<boolean>;
}

export interface FrontdoorCustomHttpsConfigurationCustomHttpsConfiguration {
    azureKeyVaultCertificateSecretName?: pulumi.Input<string>;
    azureKeyVaultCertificateSecretVersion?: pulumi.Input<string>;
    azureKeyVaultCertificateVaultId?: pulumi.Input<string>;
    certificateSource?: pulumi.Input<string>;
    minimumTlsVersion?: pulumi.Input<string>;
    provisioningState?: pulumi.Input<string>;
    provisioningSubstate?: pulumi.Input<string>;
}

export interface FrontdoorCustomHttpsConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FrontdoorExplicitResourceOrder {
    backendPoolHealthProbeIds: pulumi.Input<pulumi.Input<string>[]>;
    backendPoolIds: pulumi.Input<pulumi.Input<string>[]>;
    backendPoolLoadBalancingIds: pulumi.Input<pulumi.Input<string>[]>;
    frontendEndpointIds: pulumi.Input<pulumi.Input<string>[]>;
    routingRuleIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FrontdoorFirewallPolicyCustomRule {
    action: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    matchConditions?: pulumi.Input<pulumi.Input<inputs.FrontdoorFirewallPolicyCustomRuleMatchCondition>[]>;
    name: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    rateLimitDurationInMinutes?: pulumi.Input<number>;
    rateLimitThreshold?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface FrontdoorFirewallPolicyCustomRuleMatchCondition {
    matchValues: pulumi.Input<pulumi.Input<string>[]>;
    matchVariable: pulumi.Input<string>;
    negationCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    selector?: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FrontdoorFirewallPolicyManagedRule {
    exclusions?: pulumi.Input<pulumi.Input<inputs.FrontdoorFirewallPolicyManagedRuleExclusion>[]>;
    overrides?: pulumi.Input<pulumi.Input<inputs.FrontdoorFirewallPolicyManagedRuleOverride>[]>;
    type: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface FrontdoorFirewallPolicyManagedRuleExclusion {
    matchVariable: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
}

export interface FrontdoorFirewallPolicyManagedRuleOverride {
    exclusions?: pulumi.Input<pulumi.Input<inputs.FrontdoorFirewallPolicyManagedRuleOverrideExclusion>[]>;
    ruleGroupName: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.FrontdoorFirewallPolicyManagedRuleOverrideRule>[]>;
}

export interface FrontdoorFirewallPolicyManagedRuleOverrideExclusion {
    matchVariable: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
}

export interface FrontdoorFirewallPolicyManagedRuleOverrideRule {
    action: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    exclusions?: pulumi.Input<pulumi.Input<inputs.FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion>[]>;
    ruleId: pulumi.Input<string>;
}

export interface FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion {
    matchVariable: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    selector: pulumi.Input<string>;
}

export interface FrontdoorFirewallPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FrontdoorFrontendEndpoint {
    hostName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    sessionAffinityEnabled?: pulumi.Input<boolean>;
    sessionAffinityTtlSeconds?: pulumi.Input<number>;
    webApplicationFirewallPolicyLinkId?: pulumi.Input<string>;
}

export interface FrontdoorRoutingRule {
    acceptedProtocols: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    forwardingConfiguration?: pulumi.Input<inputs.FrontdoorRoutingRuleForwardingConfiguration>;
    frontendEndpoints: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    patternsToMatches: pulumi.Input<pulumi.Input<string>[]>;
    redirectConfiguration?: pulumi.Input<inputs.FrontdoorRoutingRuleRedirectConfiguration>;
}

export interface FrontdoorRoutingRuleForwardingConfiguration {
    backendPoolName: pulumi.Input<string>;
    cacheDuration?: pulumi.Input<string>;
    cacheEnabled?: pulumi.Input<boolean>;
    cacheQueryParameterStripDirective?: pulumi.Input<string>;
    cacheQueryParameters?: pulumi.Input<pulumi.Input<string>[]>;
    cacheUseDynamicCompression?: pulumi.Input<boolean>;
    customForwardingPath?: pulumi.Input<string>;
    forwardingProtocol?: pulumi.Input<string>;
}

export interface FrontdoorRoutingRuleRedirectConfiguration {
    customFragment?: pulumi.Input<string>;
    customHost?: pulumi.Input<string>;
    customPath?: pulumi.Input<string>;
    customQueryString?: pulumi.Input<string>;
    redirectProtocol: pulumi.Input<string>;
    redirectType: pulumi.Input<string>;
}

export interface FrontdoorRulesEngineRule {
    action?: pulumi.Input<inputs.FrontdoorRulesEngineRuleAction>;
    matchConditions?: pulumi.Input<pulumi.Input<inputs.FrontdoorRulesEngineRuleMatchCondition>[]>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
}

export interface FrontdoorRulesEngineRuleAction {
    requestHeaders?: pulumi.Input<pulumi.Input<inputs.FrontdoorRulesEngineRuleActionRequestHeader>[]>;
    responseHeaders?: pulumi.Input<pulumi.Input<inputs.FrontdoorRulesEngineRuleActionResponseHeader>[]>;
}

export interface FrontdoorRulesEngineRuleActionRequestHeader {
    headerActionType?: pulumi.Input<string>;
    headerName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface FrontdoorRulesEngineRuleActionResponseHeader {
    headerActionType?: pulumi.Input<string>;
    headerName?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface FrontdoorRulesEngineRuleMatchCondition {
    negateCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    selector?: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
    variable?: pulumi.Input<string>;
}

export interface FrontdoorRulesEngineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FrontdoorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionAppActiveSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionAppAuthSettings {
    activeDirectory?: pulumi.Input<inputs.FunctionAppAuthSettingsActiveDirectory>;
    additionalLoginParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    defaultProvider?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.FunctionAppAuthSettingsFacebook>;
    google?: pulumi.Input<inputs.FunctionAppAuthSettingsGoogle>;
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.FunctionAppAuthSettingsMicrosoft>;
    runtimeVersion?: pulumi.Input<string>;
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.FunctionAppAuthSettingsTwitter>;
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface FunctionAppAuthSettingsActiveDirectory {
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    clientId: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface FunctionAppAuthSettingsFacebook {
    appId: pulumi.Input<string>;
    appSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppAuthSettingsGoogle {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppAuthSettingsMicrosoft {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppAuthSettingsTwitter {
    consumerKey: pulumi.Input<string>;
    consumerSecret: pulumi.Input<string>;
}

export interface FunctionAppConnectionAuthentication {
    certificate?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    principalId?: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface FunctionAppConnectionSecretStore {
    keyVaultId: pulumi.Input<string>;
}

export interface FunctionAppConnectionString {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface FunctionAppConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionAppFunctionFile {
    /**
     * The content of the file.
     */
    content: pulumi.Input<string>;
    /**
     * The filename of the file to be uploaded.
     */
    name: pulumi.Input<string>;
}

export interface FunctionAppFunctionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionAppHybridConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface FunctionAppSiteConfig {
    alwaysOn?: pulumi.Input<boolean>;
    appScaleLimit?: pulumi.Input<number>;
    autoSwapSlotName?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.FunctionAppSiteConfigCors>;
    dotnetFrameworkVersion?: pulumi.Input<string>;
    elasticInstanceMinimum?: pulumi.Input<number>;
    ftpsState?: pulumi.Input<string>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.FunctionAppSiteConfigIpRestriction>[]>;
    javaVersion?: pulumi.Input<string>;
    linuxFxVersion?: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    preWarmedInstanceCount?: pulumi.Input<number>;
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.FunctionAppSiteConfigScmIpRestriction>[]>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorkerProcess?: pulumi.Input<boolean>;
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
}

export interface FunctionAppSiteConfigCors {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    supportCredentials?: pulumi.Input<boolean>;
}

export interface FunctionAppSiteConfigIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.FunctionAppSiteConfigIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface FunctionAppSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppSiteConfigScmIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.FunctionAppSiteConfigScmIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface FunctionAppSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppSiteCredential {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface FunctionAppSlotAuthSettings {
    activeDirectory?: pulumi.Input<inputs.FunctionAppSlotAuthSettingsActiveDirectory>;
    additionalLoginParams?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    defaultProvider?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.FunctionAppSlotAuthSettingsFacebook>;
    google?: pulumi.Input<inputs.FunctionAppSlotAuthSettingsGoogle>;
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.FunctionAppSlotAuthSettingsMicrosoft>;
    runtimeVersion?: pulumi.Input<string>;
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.FunctionAppSlotAuthSettingsTwitter>;
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface FunctionAppSlotAuthSettingsActiveDirectory {
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    clientId: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface FunctionAppSlotAuthSettingsFacebook {
    appId: pulumi.Input<string>;
    appSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppSlotAuthSettingsGoogle {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppSlotAuthSettingsMicrosoft {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppSlotAuthSettingsTwitter {
    consumerKey: pulumi.Input<string>;
    consumerSecret: pulumi.Input<string>;
}

export interface FunctionAppSlotConnectionString {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface FunctionAppSlotIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface FunctionAppSlotSiteConfig {
    alwaysOn?: pulumi.Input<boolean>;
    appScaleLimit?: pulumi.Input<number>;
    autoSwapSlotName?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.FunctionAppSlotSiteConfigCors>;
    dotnetFrameworkVersion?: pulumi.Input<string>;
    elasticInstanceMinimum?: pulumi.Input<number>;
    ftpsState?: pulumi.Input<string>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.FunctionAppSlotSiteConfigIpRestriction>[]>;
    javaVersion?: pulumi.Input<string>;
    linuxFxVersion?: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    preWarmedInstanceCount?: pulumi.Input<number>;
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.FunctionAppSlotSiteConfigScmIpRestriction>[]>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorkerProcess?: pulumi.Input<boolean>;
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
}

export interface FunctionAppSlotSiteConfigCors {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    supportCredentials?: pulumi.Input<boolean>;
}

export interface FunctionAppSlotSiteConfigIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.FunctionAppSlotSiteConfigIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface FunctionAppSlotSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppSlotSiteConfigScmIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.FunctionAppSlotSiteConfigScmIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface FunctionAppSlotSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAppSlotSiteCredential {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface FunctionAppSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionAppSourceControl {
    branch?: pulumi.Input<string>;
    manualIntegration?: pulumi.Input<boolean>;
    repoUrl?: pulumi.Input<string>;
    rollbackEnabled?: pulumi.Input<boolean>;
    useMercurial?: pulumi.Input<boolean>;
}

export interface FunctionAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GalleryApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GalleryApplicationVersionManageAction {
    install: pulumi.Input<string>;
    remove: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GalleryApplicationVersionSource {
    defaultConfigurationLink?: pulumi.Input<string>;
    mediaLink: pulumi.Input<string>;
}

export interface GalleryApplicationVersionTargetRegion {
    excludeFromLatest?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    regionalReplicaCount: pulumi.Input<number>;
    storageAccountType?: pulumi.Input<string>;
}

export interface GalleryApplicationVersionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetAadb2cDirectoryTimeouts {
    read?: string;
}

export interface GetAadb2cDirectoryTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetActiveDirectoryDomainServiceTimeouts {
    read?: string;
}

export interface GetActiveDirectoryDomainServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAdvisorRecommendationsTimeouts {
    read?: string;
}

export interface GetAdvisorRecommendationsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementApiTimeouts {
    read?: string;
}

export interface GetApiManagementApiTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementApiVersionSetTimeouts {
    read?: string;
}

export interface GetApiManagementApiVersionSetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementGatewayHostNameConfigurationTimeouts {
    read?: string;
}

export interface GetApiManagementGatewayHostNameConfigurationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementGatewayTimeouts {
    read?: string;
}

export interface GetApiManagementGatewayTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementGroupTimeouts {
    read?: string;
}

export interface GetApiManagementGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementProductTimeouts {
    read?: string;
}

export interface GetApiManagementProductTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementTimeouts {
    read?: string;
}

export interface GetApiManagementTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApiManagementUserTimeouts {
    read?: string;
}

export interface GetApiManagementUserTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppConfigurationKeyTimeouts {
    read?: string;
}

export interface GetAppConfigurationKeyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppConfigurationKeysTimeouts {
    read?: string;
}

export interface GetAppConfigurationKeysTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppConfigurationTimeouts {
    read?: string;
}

export interface GetAppConfigurationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppServiceCertificateOrderTimeouts {
    read?: string;
}

export interface GetAppServiceCertificateOrderTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppServiceCertificateTimeouts {
    read?: string;
}

export interface GetAppServiceCertificateTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppServiceEnvironmentV3Timeouts {
    read?: string;
}

export interface GetAppServiceEnvironmentV3TimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppServicePlanTimeouts {
    read?: string;
}

export interface GetAppServicePlanTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAppServiceTimeouts {
    read?: string;
}

export interface GetAppServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApplicationGatewayTimeouts {
    read?: string;
}

export interface GetApplicationGatewayTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApplicationInsightsTimeouts {
    read?: string;
}

export interface GetApplicationInsightsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetApplicationSecurityGroupTimeouts {
    read?: string;
}

export interface GetApplicationSecurityGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetArcMachineTimeouts {
    read?: string;
}

export interface GetArcMachineTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetArcResourceBridgeApplianceTimeouts {
    read?: string;
}

export interface GetArcResourceBridgeApplianceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAttestationProviderTimeouts {
    read?: string;
}

export interface GetAttestationProviderTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationAccountTimeouts {
    read?: string;
}

export interface GetAutomationAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationRunbookTimeouts {
    read?: string;
}

export interface GetAutomationRunbookTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationVariableBoolTimeouts {
    read?: string;
}

export interface GetAutomationVariableBoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationVariableDatetimeTimeouts {
    read?: string;
}

export interface GetAutomationVariableDatetimeTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationVariableIntTimeouts {
    read?: string;
}

export interface GetAutomationVariableIntTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationVariableObjectTimeouts {
    read?: string;
}

export interface GetAutomationVariableObjectTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationVariableStringTimeouts {
    read?: string;
}

export interface GetAutomationVariableStringTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAutomationVariablesTimeouts {
    read?: string;
}

export interface GetAutomationVariablesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAvailabilitySetTimeouts {
    read?: string;
}

export interface GetAvailabilitySetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBackupPolicyFileShareTimeouts {
    read?: string;
}

export interface GetBackupPolicyFileShareTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBackupPolicyVmTimeouts {
    read?: string;
}

export interface GetBackupPolicyVmTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBastionHostTimeouts {
    read?: string;
}

export interface GetBastionHostTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBatchAccountTimeouts {
    read?: string;
}

export interface GetBatchAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBatchApplicationTimeouts {
    read?: string;
}

export interface GetBatchApplicationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBatchCertificateTimeouts {
    read?: string;
}

export interface GetBatchCertificateTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBatchPoolTimeouts {
    read?: string;
}

export interface GetBatchPoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBillingEnrollmentAccountScopeTimeouts {
    read?: string;
}

export interface GetBillingEnrollmentAccountScopeTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBillingMcaAccountScopeTimeouts {
    read?: string;
}

export interface GetBillingMcaAccountScopeTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBillingMpaAccountScopeTimeouts {
    read?: string;
}

export interface GetBillingMpaAccountScopeTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBlueprintDefinitionTimeouts {
    read?: string;
}

export interface GetBlueprintDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBlueprintPublishedVersionTimeouts {
    read?: string;
}

export interface GetBlueprintPublishedVersionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnFrontdoorCustomDomainTimeouts {
    read?: string;
}

export interface GetCdnFrontdoorCustomDomainTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnFrontdoorEndpointTimeouts {
    read?: string;
}

export interface GetCdnFrontdoorEndpointTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnFrontdoorFirewallPolicyTimeouts {
    read?: string;
}

export interface GetCdnFrontdoorFirewallPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnFrontdoorOriginGroupTimeouts {
    read?: string;
}

export interface GetCdnFrontdoorOriginGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnFrontdoorProfileTimeouts {
    read?: string;
}

export interface GetCdnFrontdoorProfileTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnFrontdoorRuleSetTimeouts {
    read?: string;
}

export interface GetCdnFrontdoorRuleSetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnFrontdoorSecretTimeouts {
    read?: string;
}

export interface GetCdnFrontdoorSecretTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCdnProfileTimeouts {
    read?: string;
}

export interface GetCdnProfileTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetClientConfigTimeouts {
    read?: string;
}

export interface GetClientConfigTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCognitiveAccountTimeouts {
    read?: string;
}

export interface GetCognitiveAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCommunicationServiceTimeouts {
    read?: string;
}

export interface GetCommunicationServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetConfidentialLedgerTimeouts {
    read?: string;
}

export interface GetConfidentialLedgerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetConsumptionBudgetResourceGroupTimeouts {
    read?: string;
}

export interface GetConsumptionBudgetResourceGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetConsumptionBudgetSubscriptionTimeouts {
    read?: string;
}

export interface GetConsumptionBudgetSubscriptionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerAppEnvironmentCertificateTimeouts {
    read?: string;
}

export interface GetContainerAppEnvironmentCertificateTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerAppEnvironmentTimeouts {
    read?: string;
}

export interface GetContainerAppEnvironmentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerAppTimeouts {
    read?: string;
}

export interface GetContainerAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerGroupTimeouts {
    read?: string;
}

export interface GetContainerGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerRegistryCacheRuleTimeouts {
    read?: string;
}

export interface GetContainerRegistryCacheRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerRegistryScopeMapTimeouts {
    read?: string;
}

export interface GetContainerRegistryScopeMapTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerRegistryTimeouts {
    read?: string;
}

export interface GetContainerRegistryTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetContainerRegistryTokenTimeouts {
    read?: string;
}

export interface GetContainerRegistryTokenTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCosmosdbAccountTimeouts {
    read?: string;
}

export interface GetCosmosdbAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCosmosdbMongoDatabaseTimeouts {
    read?: string;
}

export interface GetCosmosdbMongoDatabaseTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCosmosdbRestorableDatabaseAccountsTimeouts {
    read?: string;
}

export interface GetCosmosdbRestorableDatabaseAccountsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCosmosdbSqlDatabaseTimeouts {
    read?: string;
}

export interface GetCosmosdbSqlDatabaseTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetCosmosdbSqlRoleDefinitionTimeouts {
    read?: string;
}

export interface GetCosmosdbSqlRoleDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDashboardGrafanaIdentity {
    identityIds?: string[];
    principalId?: string;
    tenantId?: string;
    type: string;
}

export interface GetDashboardGrafanaIdentityArgs {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetDashboardGrafanaTimeouts {
    read?: string;
}

export interface GetDashboardGrafanaTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataFactoryTimeouts {
    read?: string;
}

export interface GetDataFactoryTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataFactoryTriggerScheduleTimeouts {
    read?: string;
}

export interface GetDataFactoryTriggerScheduleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataFactoryTriggerSchedulesTimeouts {
    read?: string;
}

export interface GetDataFactoryTriggerSchedulesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataProtectionBackupVaultTimeouts {
    read?: string;
}

export interface GetDataProtectionBackupVaultTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataShareAccountTimeouts {
    read?: string;
}

export interface GetDataShareAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataShareDatasetBlobStorageTimeouts {
    read?: string;
}

export interface GetDataShareDatasetBlobStorageTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataShareDatasetDataLakeGen2Timeouts {
    read?: string;
}

export interface GetDataShareDatasetDataLakeGen2TimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataShareDatasetKustoClusterTimeouts {
    read?: string;
}

export interface GetDataShareDatasetKustoClusterTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataShareDatasetKustoDatabaseTimeouts {
    read?: string;
}

export interface GetDataShareDatasetKustoDatabaseTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataShareTimeouts {
    read?: string;
}

export interface GetDataShareTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDatabaseMigrationProjectTimeouts {
    read?: string;
}

export interface GetDatabaseMigrationProjectTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDatabaseMigrationServiceTimeouts {
    read?: string;
}

export interface GetDatabaseMigrationServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDataboxEdgeDeviceTimeouts {
    read?: string;
}

export interface GetDataboxEdgeDeviceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDatabricksAccessConnectorTimeouts {
    read?: string;
}

export interface GetDatabricksAccessConnectorTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDatabricksWorkspacePrivateEndpointConnectionTimeouts {
    read?: string;
}

export interface GetDatabricksWorkspacePrivateEndpointConnectionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDatabricksWorkspaceTimeouts {
    read?: string;
}

export interface GetDatabricksWorkspaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDedicatedHostGroupTimeouts {
    read?: string;
}

export interface GetDedicatedHostGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDedicatedHostTimeouts {
    read?: string;
}

export interface GetDedicatedHostTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDevTestLabTimeouts {
    read?: string;
}

export interface GetDevTestLabTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDevTestVirtualNetworkTimeouts {
    read?: string;
}

export interface GetDevTestVirtualNetworkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDigitalTwinsInstanceTimeouts {
    read?: string;
}

export interface GetDigitalTwinsInstanceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDiskAccessTimeouts {
    read?: string;
}

export interface GetDiskAccessTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDiskEncryptionSetTimeouts {
    read?: string;
}

export interface GetDiskEncryptionSetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsARecordTimeouts {
    read?: string;
}

export interface GetDnsARecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsAaaaRecordTimeouts {
    read?: string;
}

export interface GetDnsAaaaRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsCaaRecordTimeouts {
    read?: string;
}

export interface GetDnsCaaRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsCnameRecordTimeouts {
    read?: string;
}

export interface GetDnsCnameRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsMxRecordTimeouts {
    read?: string;
}

export interface GetDnsMxRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsNsRecordTimeouts {
    read?: string;
}

export interface GetDnsNsRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsPtrRecordTimeouts {
    read?: string;
}

export interface GetDnsPtrRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsSoaRecordTimeouts {
    read?: string;
}

export interface GetDnsSoaRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsSrvRecordTimeouts {
    read?: string;
}

export interface GetDnsSrvRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsTxtRecordTimeouts {
    read?: string;
}

export interface GetDnsTxtRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetDnsZoneTimeouts {
    read?: string;
}

export interface GetDnsZoneTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetElasticCloudElasticsearchLog {
    filteringTags?: inputs.GetElasticCloudElasticsearchLogFilteringTag[];
    sendActivityLogs?: boolean;
    sendAzureadLogs?: boolean;
    sendSubscriptionLogs?: boolean;
}

export interface GetElasticCloudElasticsearchLogArgs {
    filteringTags?: pulumi.Input<pulumi.Input<inputs.GetElasticCloudElasticsearchLogFilteringTagArgs>[]>;
    sendActivityLogs?: pulumi.Input<boolean>;
    sendAzureadLogs?: pulumi.Input<boolean>;
    sendSubscriptionLogs?: pulumi.Input<boolean>;
}

export interface GetElasticCloudElasticsearchLogFilteringTag {
    action: string;
    name: string;
    value: string;
}

export interface GetElasticCloudElasticsearchLogFilteringTagArgs {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetElasticCloudElasticsearchTimeouts {
    read?: string;
}

export interface GetElasticCloudElasticsearchTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetElasticSanTimeouts {
    read?: string;
}

export interface GetElasticSanTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetElasticSanVolumeGroupTimeouts {
    read?: string;
}

export interface GetElasticSanVolumeGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetElasticSanVolumeSnapshotTimeouts {
    read?: string;
}

export interface GetElasticSanVolumeSnapshotTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventgridDomainTimeouts {
    read?: string;
}

export interface GetEventgridDomainTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventgridDomainTopicTimeouts {
    read?: string;
}

export interface GetEventgridDomainTopicTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventgridSystemTopicTimeouts {
    read?: string;
}

export interface GetEventgridSystemTopicTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventgridTopicTimeouts {
    read?: string;
}

export interface GetEventgridTopicTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventhubAuthorizationRuleTimeouts {
    read?: string;
}

export interface GetEventhubAuthorizationRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventhubClusterTimeouts {
    read?: string;
}

export interface GetEventhubClusterTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventhubConsumerGroupTimeouts {
    read?: string;
}

export interface GetEventhubConsumerGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventhubNamespaceAuthorizationRuleTimeouts {
    read?: string;
}

export interface GetEventhubNamespaceAuthorizationRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventhubNamespaceTimeouts {
    read?: string;
}

export interface GetEventhubNamespaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventhubSasTimeouts {
    read?: string;
}

export interface GetEventhubSasTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEventhubTimeouts {
    read?: string;
}

export interface GetEventhubTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetExpressRouteCircuitPeeringTimeouts {
    read?: string;
}

export interface GetExpressRouteCircuitPeeringTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetExpressRouteCircuitTimeouts {
    read?: string;
}

export interface GetExpressRouteCircuitTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetExtendedLocationsTimeouts {
    read?: string;
}

export interface GetExtendedLocationsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetFirewallPolicyTimeouts {
    read?: string;
}

export interface GetFirewallPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetFirewallTimeouts {
    read?: string;
}

export interface GetFirewallTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetFunctionAppHostKeysTimeouts {
    read?: string;
}

export interface GetFunctionAppHostKeysTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetFunctionAppTimeouts {
    read?: string;
}

export interface GetFunctionAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetHdinsightClusterTimeouts {
    read?: string;
}

export interface GetHdinsightClusterTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetHealthcareDicomServiceTimeouts {
    read?: string;
}

export interface GetHealthcareDicomServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetHealthcareFhirServiceTimeouts {
    read?: string;
}

export interface GetHealthcareFhirServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetHealthcareMedtechServiceTimeouts {
    read?: string;
}

export interface GetHealthcareMedtechServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetHealthcareServiceTimeouts {
    read?: string;
}

export interface GetHealthcareServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetHealthcareWorkspaceTimeouts {
    read?: string;
}

export interface GetHealthcareWorkspaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetImageTimeouts {
    read?: string;
}

export interface GetImageTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetImagesTimeouts {
    read?: string;
}

export interface GetImagesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIothubDpsSharedAccessPolicyTimeouts {
    read?: string;
}

export interface GetIothubDpsSharedAccessPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIothubDpsTimeouts {
    read?: string;
}

export interface GetIothubDpsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIothubSharedAccessPolicyTimeouts {
    read?: string;
}

export interface GetIothubSharedAccessPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIothubTimeouts {
    read?: string;
}

export interface GetIothubTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIpGroupTimeouts {
    read?: string;
}

export interface GetIpGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIpGroupsTimeouts {
    read?: string;
}

export interface GetIpGroupsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultAccessPolicyTimeouts {
    read?: string;
}

export interface GetKeyVaultAccessPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultCertificateDataTimeouts {
    read?: string;
}

export interface GetKeyVaultCertificateDataTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultCertificateIssuerTimeouts {
    read?: string;
}

export interface GetKeyVaultCertificateIssuerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultCertificateTimeouts {
    read?: string;
}

export interface GetKeyVaultCertificateTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultCertificatesTimeouts {
    read?: string;
}

export interface GetKeyVaultCertificatesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultEncryptedValueTimeouts {
    read?: string;
}

export interface GetKeyVaultEncryptedValueTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultKeyTimeouts {
    read?: string;
}

export interface GetKeyVaultKeyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultManagedHardwareSecurityModuleRoleDefinitionTimeouts {
    read?: string;
}

export interface GetKeyVaultManagedHardwareSecurityModuleRoleDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultManagedHardwareSecurityModuleTimeouts {
    read?: string;
}

export interface GetKeyVaultManagedHardwareSecurityModuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultSecretTimeouts {
    read?: string;
}

export interface GetKeyVaultSecretTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultSecretsTimeouts {
    read?: string;
}

export interface GetKeyVaultSecretsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKeyVaultTimeouts {
    read?: string;
}

export interface GetKeyVaultTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKubernetesClusterNodePoolTimeouts {
    read?: string;
}

export interface GetKubernetesClusterNodePoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKubernetesClusterTimeouts {
    read?: string;
}

export interface GetKubernetesClusterTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKubernetesNodePoolSnapshotTimeouts {
    read?: string;
}

export interface GetKubernetesNodePoolSnapshotTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKubernetesServiceVersionsTimeouts {
    read?: string;
}

export interface GetKubernetesServiceVersionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKustoClusterTimeouts {
    read?: string;
}

export interface GetKustoClusterTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetKustoDatabaseTimeouts {
    read?: string;
}

export interface GetKustoDatabaseTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLbBackendAddressPoolTimeouts {
    read?: string;
}

export interface GetLbBackendAddressPoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLbOutboundRuleTimeouts {
    read?: string;
}

export interface GetLbOutboundRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLbRuleTimeouts {
    read?: string;
}

export interface GetLbRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLbTimeouts {
    read?: string;
}

export interface GetLbTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLinuxFunctionAppTimeouts {
    read?: string;
}

export interface GetLinuxFunctionAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLinuxWebAppTimeouts {
    read?: string;
}

export interface GetLinuxWebAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLoadTestTimeouts {
    read?: string;
}

export interface GetLoadTestTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLocalNetworkGatewayTimeouts {
    read?: string;
}

export interface GetLocalNetworkGatewayTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLocationTimeouts {
    read?: string;
}

export interface GetLocationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLogAnalyticsWorkspaceTimeouts {
    read?: string;
}

export interface GetLogAnalyticsWorkspaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLogicAppIntegrationAccountTimeouts {
    read?: string;
}

export interface GetLogicAppIntegrationAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLogicAppStandardSiteConfig {
    alwaysOn?: boolean;
    appScaleLimit?: number;
    autoSwapSlotName?: string;
    cors?: inputs.GetLogicAppStandardSiteConfigCors;
    dotnetFrameworkVersion?: string;
    elasticInstanceMinimum?: number;
    ftpsState?: string;
    healthCheckPath?: string;
    http2Enabled?: boolean;
    ipRestrictions?: inputs.GetLogicAppStandardSiteConfigIpRestriction[];
    linuxFxVersion?: string;
    minTlsVersion?: string;
    preWarmedInstanceCount?: number;
    publicNetworkAccessEnabled?: boolean;
    runtimeScaleMonitoringEnabled?: boolean;
    scmIpRestrictions?: inputs.GetLogicAppStandardSiteConfigScmIpRestriction[];
    scmMinTlsVersion?: string;
    scmType?: string;
    scmUseMainIpRestriction?: boolean;
    use32BitWorkerProcess?: boolean;
    vnetRouteAllEnabled?: boolean;
    websocketsEnabled?: boolean;
}

export interface GetLogicAppStandardSiteConfigArgs {
    alwaysOn?: pulumi.Input<boolean>;
    appScaleLimit?: pulumi.Input<number>;
    autoSwapSlotName?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.GetLogicAppStandardSiteConfigCorsArgs>;
    dotnetFrameworkVersion?: pulumi.Input<string>;
    elasticInstanceMinimum?: pulumi.Input<number>;
    ftpsState?: pulumi.Input<string>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.GetLogicAppStandardSiteConfigIpRestrictionArgs>[]>;
    linuxFxVersion?: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    preWarmedInstanceCount?: pulumi.Input<number>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.GetLogicAppStandardSiteConfigScmIpRestrictionArgs>[]>;
    scmMinTlsVersion?: pulumi.Input<string>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorkerProcess?: pulumi.Input<boolean>;
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
}

export interface GetLogicAppStandardSiteConfigCors {
    allowedOrigins: string[];
    supportCredentials?: boolean;
}

export interface GetLogicAppStandardSiteConfigCorsArgs {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    supportCredentials?: pulumi.Input<boolean>;
}

export interface GetLogicAppStandardSiteConfigIpRestriction {
    action: string;
    headers: inputs.GetLogicAppStandardSiteConfigIpRestrictionHeader[];
    ipAddress: string;
    name: string;
    priority: number;
    serviceTag: string;
    virtualNetworkSubnetId: string;
}

export interface GetLogicAppStandardSiteConfigIpRestrictionArgs {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.GetLogicAppStandardSiteConfigIpRestrictionHeaderArgs>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface GetLogicAppStandardSiteConfigIpRestrictionHeader {
    xAzureFdids: string[];
    xFdHealthProbes: string[];
    xForwardedFors: string[];
    xForwardedHosts: string[];
}

export interface GetLogicAppStandardSiteConfigIpRestrictionHeaderArgs {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogicAppStandardSiteConfigScmIpRestriction {
    action: string;
    headers: inputs.GetLogicAppStandardSiteConfigScmIpRestrictionHeader[];
    ipAddress: string;
    name: string;
    priority: number;
    serviceTag: string;
    virtualNetworkSubnetId: string;
}

export interface GetLogicAppStandardSiteConfigScmIpRestrictionArgs {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.GetLogicAppStandardSiteConfigScmIpRestrictionHeaderArgs>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface GetLogicAppStandardSiteConfigScmIpRestrictionHeader {
    xAzureFdids: string[];
    xFdHealthProbes: string[];
    xForwardedFors: string[];
    xForwardedHosts: string[];
}

export interface GetLogicAppStandardSiteConfigScmIpRestrictionHeaderArgs {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLogicAppStandardTimeouts {
    read?: string;
}

export interface GetLogicAppStandardTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetLogicAppWorkflowTimeouts {
    read?: string;
}

export interface GetLogicAppWorkflowTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMachineLearningWorkspaceTimeouts {
    read?: string;
}

export interface GetMachineLearningWorkspaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMaintenanceConfigurationTimeouts {
    read?: string;
}

export interface GetMaintenanceConfigurationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetManagedApiTimeouts {
    read?: string;
}

export interface GetManagedApiTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetManagedApplicationDefinitionTimeouts {
    read?: string;
}

export interface GetManagedApplicationDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetManagedDiskTimeouts {
    read?: string;
}

export interface GetManagedDiskTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetManagementGroupTemplateDeploymentTimeouts {
    read?: string;
}

export interface GetManagementGroupTemplateDeploymentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetManagementGroupTimeouts {
    read?: string;
}

export interface GetManagementGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMapsAccountTimeouts {
    read?: string;
}

export interface GetMapsAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMarketplaceAgreementTimeouts {
    read?: string;
}

export interface GetMarketplaceAgreementTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkAttachedDataNetworkTimeouts {
    read?: string;
}

export interface GetMobileNetworkAttachedDataNetworkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkDataNetworkTimeouts {
    read?: string;
}

export interface GetMobileNetworkDataNetworkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkPacketCoreControlPlaneTimeouts {
    read?: string;
}

export interface GetMobileNetworkPacketCoreControlPlaneTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkPacketCoreDataPlaneTimeouts {
    read?: string;
}

export interface GetMobileNetworkPacketCoreDataPlaneTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkServiceTimeouts {
    read?: string;
}

export interface GetMobileNetworkServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkSimGroupTimeouts {
    read?: string;
}

export interface GetMobileNetworkSimGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkSimPolicyTimeouts {
    read?: string;
}

export interface GetMobileNetworkSimPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkSimTimeouts {
    read?: string;
}

export interface GetMobileNetworkSimTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkSiteTimeouts {
    read?: string;
}

export interface GetMobileNetworkSiteTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkSliceTimeouts {
    read?: string;
}

export interface GetMobileNetworkSliceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMobileNetworkTimeouts {
    read?: string;
}

export interface GetMobileNetworkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorActionGroupTimeouts {
    read?: string;
}

export interface GetMonitorActionGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorDataCollectionEndpointTimeouts {
    read?: string;
}

export interface GetMonitorDataCollectionEndpointTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorDataCollectionRuleTimeouts {
    read?: string;
}

export interface GetMonitorDataCollectionRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorDiagnosticCategoriesTimeouts {
    read?: string;
}

export interface GetMonitorDiagnosticCategoriesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorScheduledQueryRulesAlertTimeouts {
    read?: string;
}

export interface GetMonitorScheduledQueryRulesAlertTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorScheduledQueryRulesLogTimeouts {
    read?: string;
}

export interface GetMonitorScheduledQueryRulesLogTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMonitorWorkspaceTimeouts {
    read?: string;
}

export interface GetMonitorWorkspaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMssqlDatabaseTimeouts {
    read?: string;
}

export interface GetMssqlDatabaseTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMssqlElasticpoolTimeouts {
    read?: string;
}

export interface GetMssqlElasticpoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMssqlManagedInstanceTimeouts {
    read?: string;
}

export interface GetMssqlManagedInstanceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMssqlServerTimeouts {
    read?: string;
}

export interface GetMssqlServerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetMysqlFlexibleServerTimeouts {
    read?: string;
}

export interface GetMysqlFlexibleServerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNatGatewayTimeouts {
    read?: string;
}

export interface GetNatGatewayTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappAccountEncryptionTimeouts {
    read?: string;
}

export interface GetNetappAccountEncryptionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappAccountIdentity {
    identityIds?: string[];
    principalId?: string;
    tenantId?: string;
    type: string;
}

export interface GetNetappAccountIdentityArgs {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetNetappAccountTimeouts {
    read?: string;
}

export interface GetNetappAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappPoolTimeouts {
    read?: string;
}

export interface GetNetappPoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappSnapshotPolicyTimeouts {
    read?: string;
}

export interface GetNetappSnapshotPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappSnapshotTimeouts {
    read?: string;
}

export interface GetNetappSnapshotTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappVolumeGroupSapHanaTimeouts {
    read?: string;
}

export interface GetNetappVolumeGroupSapHanaTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappVolumeQuotaRuleTimeouts {
    read?: string;
}

export interface GetNetappVolumeQuotaRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetappVolumeTimeouts {
    read?: string;
}

export interface GetNetappVolumeTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkDdosProtectionPlanTimeouts {
    read?: string;
}

export interface GetNetworkDdosProtectionPlanTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkInterfaceTimeouts {
    read?: string;
}

export interface GetNetworkInterfaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkManagerConnectivityConfigurationTimeouts {
    read?: string;
}

export interface GetNetworkManagerConnectivityConfigurationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkManagerNetworkGroupTimeouts {
    read?: string;
}

export interface GetNetworkManagerNetworkGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkManagerTimeouts {
    read?: string;
}

export interface GetNetworkManagerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkSecurityGroupTimeouts {
    read?: string;
}

export interface GetNetworkSecurityGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkServiceTagsTimeouts {
    read?: string;
}

export interface GetNetworkServiceTagsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNetworkWatcherTimeouts {
    read?: string;
}

export interface GetNetworkWatcherTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNginxCertificateTimeouts {
    read?: string;
}

export interface GetNginxCertificateTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNginxConfigurationTimeouts {
    read?: string;
}

export interface GetNginxConfigurationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNginxDeploymentTimeouts {
    read?: string;
}

export interface GetNginxDeploymentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNotificationHubNamespaceTimeouts {
    read?: string;
}

export interface GetNotificationHubNamespaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetNotificationHubTimeouts {
    read?: string;
}

export interface GetNotificationHubTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetOrchestratedVirtualMachineScaleSetTimeouts {
    read?: string;
}

export interface GetOrchestratedVirtualMachineScaleSetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPaloAltoLocalRulestackTimeouts {
    read?: string;
}

export interface GetPaloAltoLocalRulestackTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPlatformImageTimeouts {
    read?: string;
}

export interface GetPlatformImageTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPolicyAssignmentTimeouts {
    read?: string;
}

export interface GetPolicyAssignmentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPolicyDefinitionBuiltInTimeouts {
    read?: string;
}

export interface GetPolicyDefinitionBuiltInTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPolicyDefinitionTimeouts {
    read?: string;
}

export interface GetPolicyDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPolicySetDefinitionTimeouts {
    read?: string;
}

export interface GetPolicySetDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPolicyVirtualMachineConfigurationAssignmentTimeouts {
    read?: string;
}

export interface GetPolicyVirtualMachineConfigurationAssignmentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPortalDashboardTimeouts {
    read?: string;
}

export interface GetPortalDashboardTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPostgresqlFlexibleServerTimeouts {
    read?: string;
}

export interface GetPostgresqlFlexibleServerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPostgresqlServerTimeouts {
    read?: string;
}

export interface GetPostgresqlServerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsARecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsARecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsAaaaRecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsAaaaRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsCnameRecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsCnameRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsMxRecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsMxRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsPtrRecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsPtrRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsResolverDnsForwardingRulesetTimeouts {
    read?: string;
}

export interface GetPrivateDnsResolverDnsForwardingRulesetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsResolverForwardingRuleTimeouts {
    read?: string;
}

export interface GetPrivateDnsResolverForwardingRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsResolverInboundEndpointTimeouts {
    read?: string;
}

export interface GetPrivateDnsResolverInboundEndpointTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsResolverOutboundEndpointTimeouts {
    read?: string;
}

export interface GetPrivateDnsResolverOutboundEndpointTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsResolverTimeouts {
    read?: string;
}

export interface GetPrivateDnsResolverTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsResolverVirtualNetworkLinkTimeouts {
    read?: string;
}

export interface GetPrivateDnsResolverVirtualNetworkLinkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsSoaRecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsSoaRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsSrvRecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsSrvRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsTxtRecordTimeouts {
    read?: string;
}

export interface GetPrivateDnsTxtRecordTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsZoneTimeouts {
    read?: string;
}

export interface GetPrivateDnsZoneTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateDnsZoneVirtualNetworkLinkTimeouts {
    read?: string;
}

export interface GetPrivateDnsZoneVirtualNetworkLinkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateEndpointConnectionTimeouts {
    read?: string;
}

export interface GetPrivateEndpointConnectionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateLinkServiceEndpointConnectionsTimeouts {
    read?: string;
}

export interface GetPrivateLinkServiceEndpointConnectionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPrivateLinkServiceTimeouts {
    read?: string;
}

export interface GetPrivateLinkServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetProximityPlacementGroupTimeouts {
    read?: string;
}

export interface GetProximityPlacementGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPublicIpPrefixTimeouts {
    read?: string;
}

export interface GetPublicIpPrefixTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPublicIpTimeouts {
    read?: string;
}

export interface GetPublicIpTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPublicIpsTimeouts {
    read?: string;
}

export interface GetPublicIpsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetPublicMaintenanceConfigurationsTimeouts {
    read?: string;
}

export interface GetPublicMaintenanceConfigurationsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetRecoveryServicesVaultTimeouts {
    read?: string;
}

export interface GetRecoveryServicesVaultTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetRedisCacheTimeouts {
    read?: string;
}

export interface GetRedisCacheTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetRedisEnterpriseDatabaseTimeouts {
    read?: string;
}

export interface GetRedisEnterpriseDatabaseTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetResourceGroupTemplateDeploymentTimeouts {
    read?: string;
}

export interface GetResourceGroupTemplateDeploymentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetResourceGroupTimeouts {
    read?: string;
}

export interface GetResourceGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetResourcesTimeouts {
    read?: string;
}

export interface GetResourcesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetRoleDefinitionTimeouts {
    read?: string;
}

export interface GetRoleDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetRoleManagementPolicyTimeouts {
    read?: string;
}

export interface GetRoleManagementPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetRouteFilterTimeouts {
    read?: string;
}

export interface GetRouteFilterTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetRouteTableTimeouts {
    read?: string;
}

export interface GetRouteTableTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSearchServiceTimeouts {
    read?: string;
}

export interface GetSearchServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSentinelAlertRuleAnomalyTimeouts {
    read?: string;
}

export interface GetSentinelAlertRuleAnomalyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSentinelAlertRuleTemplateTimeouts {
    read?: string;
}

export interface GetSentinelAlertRuleTemplateTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSentinelAlertRuleTimeouts {
    read?: string;
}

export interface GetSentinelAlertRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicePlanTimeouts {
    read?: string;
}

export interface GetServicePlanTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusNamespaceAuthorizationRuleTimeouts {
    read?: string;
}

export interface GetServicebusNamespaceAuthorizationRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusNamespaceDisasterRecoveryConfigTimeouts {
    read?: string;
}

export interface GetServicebusNamespaceDisasterRecoveryConfigTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusNamespaceTimeouts {
    read?: string;
}

export interface GetServicebusNamespaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusQueueAuthorizationRuleTimeouts {
    read?: string;
}

export interface GetServicebusQueueAuthorizationRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusQueueTimeouts {
    read?: string;
}

export interface GetServicebusQueueTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusSubscriptionTimeouts {
    read?: string;
}

export interface GetServicebusSubscriptionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusTopicAuthorizationRuleTimeouts {
    read?: string;
}

export interface GetServicebusTopicAuthorizationRuleTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServicebusTopicTimeouts {
    read?: string;
}

export interface GetServicebusTopicTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSharedImageGalleryTimeouts {
    read?: string;
}

export interface GetSharedImageGalleryTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSharedImageTimeouts {
    read?: string;
}

export interface GetSharedImageTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSharedImageVersionTimeouts {
    read?: string;
}

export interface GetSharedImageVersionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSharedImageVersionsTimeouts {
    read?: string;
}

export interface GetSharedImageVersionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSignalrServiceTimeouts {
    read?: string;
}

export interface GetSignalrServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSiteRecoveryFabricTimeouts {
    read?: string;
}

export interface GetSiteRecoveryFabricTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSiteRecoveryProtectionContainerTimeouts {
    read?: string;
}

export interface GetSiteRecoveryProtectionContainerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSiteRecoveryReplicationPolicyTimeouts {
    read?: string;
}

export interface GetSiteRecoveryReplicationPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSiteRecoveryReplicationRecoveryPlanTimeouts {
    read?: string;
}

export interface GetSiteRecoveryReplicationRecoveryPlanTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSnapshotTimeouts {
    read?: string;
}

export interface GetSnapshotTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSourceControlTokenTimeouts {
    read?: string;
}

export interface GetSourceControlTokenTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSpatialAnchorsAccountTimeouts {
    read?: string;
}

export interface GetSpatialAnchorsAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSpringCloudAppTimeouts {
    read?: string;
}

export interface GetSpringCloudAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSpringCloudServiceTimeouts {
    read?: string;
}

export interface GetSpringCloudServiceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSshPublicKeyTimeouts {
    read?: string;
}

export interface GetSshPublicKeyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStackHciClusterTimeouts {
    read?: string;
}

export interface GetStackHciClusterTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStaticWebAppTimeouts {
    read?: string;
}

export interface GetStaticWebAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageAccountBlobContainerSasPermissions {
    add: boolean;
    create: boolean;
    delete: boolean;
    list: boolean;
    read: boolean;
    write: boolean;
}

export interface GetStorageAccountBlobContainerSasPermissionsArgs {
    add: pulumi.Input<boolean>;
    create: pulumi.Input<boolean>;
    delete: pulumi.Input<boolean>;
    list: pulumi.Input<boolean>;
    read: pulumi.Input<boolean>;
    write: pulumi.Input<boolean>;
}

export interface GetStorageAccountBlobContainerSasTimeouts {
    read?: string;
}

export interface GetStorageAccountBlobContainerSasTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageAccountSasPermissions {
    add: boolean;
    create: boolean;
    delete: boolean;
    filter: boolean;
    list: boolean;
    process: boolean;
    read: boolean;
    tag: boolean;
    update: boolean;
    write: boolean;
}

export interface GetStorageAccountSasPermissionsArgs {
    add: pulumi.Input<boolean>;
    create: pulumi.Input<boolean>;
    delete: pulumi.Input<boolean>;
    filter: pulumi.Input<boolean>;
    list: pulumi.Input<boolean>;
    process: pulumi.Input<boolean>;
    read: pulumi.Input<boolean>;
    tag: pulumi.Input<boolean>;
    update: pulumi.Input<boolean>;
    write: pulumi.Input<boolean>;
}

export interface GetStorageAccountSasResourceTypes {
    container: boolean;
    object: boolean;
    service: boolean;
}

export interface GetStorageAccountSasResourceTypesArgs {
    container: pulumi.Input<boolean>;
    object: pulumi.Input<boolean>;
    service: pulumi.Input<boolean>;
}

export interface GetStorageAccountSasServices {
    blob: boolean;
    file: boolean;
    queue: boolean;
    table: boolean;
}

export interface GetStorageAccountSasServicesArgs {
    blob: pulumi.Input<boolean>;
    file: pulumi.Input<boolean>;
    queue: pulumi.Input<boolean>;
    table: pulumi.Input<boolean>;
}

export interface GetStorageAccountSasTimeouts {
    read?: string;
}

export interface GetStorageAccountSasTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageAccountTimeouts {
    read?: string;
}

export interface GetStorageAccountTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageBlobTimeouts {
    read?: string;
}

export interface GetStorageBlobTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageContainerTimeouts {
    read?: string;
}

export interface GetStorageContainerTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageContainersTimeouts {
    read?: string;
}

export interface GetStorageContainersTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageEncryptionScopeTimeouts {
    read?: string;
}

export interface GetStorageEncryptionScopeTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageManagementPolicyTimeouts {
    read?: string;
}

export interface GetStorageManagementPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageQueueTimeouts {
    read?: string;
}

export interface GetStorageQueueTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageShareAcl {
    accessPolicies?: inputs.GetStorageShareAclAccessPolicy[];
    id?: string;
}

export interface GetStorageShareAclArgs {
    accessPolicies?: pulumi.Input<pulumi.Input<inputs.GetStorageShareAclAccessPolicyArgs>[]>;
    id?: pulumi.Input<string>;
}

export interface GetStorageShareAclAccessPolicy {
    expiry: string;
    permissions: string;
    start: string;
}

export interface GetStorageShareAclAccessPolicyArgs {
    expiry: pulumi.Input<string>;
    permissions: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface GetStorageShareTimeouts {
    read?: string;
}

export interface GetStorageShareTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageSyncGroupTimeouts {
    read?: string;
}

export interface GetStorageSyncGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageSyncTimeouts {
    read?: string;
}

export interface GetStorageSyncTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageTableEntitiesTimeouts {
    read?: string;
}

export interface GetStorageTableEntitiesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageTableEntityTimeouts {
    read?: string;
}

export interface GetStorageTableEntityTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStorageTableTimeouts {
    read?: string;
}

export interface GetStorageTableTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetStreamAnalyticsJobTimeouts {
    read?: string;
}

export interface GetStreamAnalyticsJobTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSubnetTimeouts {
    read?: string;
}

export interface GetSubnetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSubscriptionTemplateDeploymentTimeouts {
    read?: string;
}

export interface GetSubscriptionTemplateDeploymentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSubscriptionTimeouts {
    read?: string;
}

export interface GetSubscriptionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSubscriptionsTimeouts {
    read?: string;
}

export interface GetSubscriptionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSynapseWorkspaceTimeouts {
    read?: string;
}

export interface GetSynapseWorkspaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSystemCenterVirtualMachineManagerInventoryItemsTimeouts {
    read?: string;
}

export interface GetSystemCenterVirtualMachineManagerInventoryItemsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetTemplateSpecVersionTimeouts {
    read?: string;
}

export interface GetTemplateSpecVersionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetTenantTemplateDeploymentTimeouts {
    read?: string;
}

export interface GetTenantTemplateDeploymentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetTrafficManagerGeographicalLocationTimeouts {
    read?: string;
}

export interface GetTrafficManagerGeographicalLocationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetTrafficManagerProfileTimeouts {
    read?: string;
}

export interface GetTrafficManagerProfileTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetUserAssignedIdentityTimeouts {
    read?: string;
}

export interface GetUserAssignedIdentityTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualDesktopApplicationGroupTimeouts {
    read?: string;
}

export interface GetVirtualDesktopApplicationGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualDesktopHostPoolTimeouts {
    read?: string;
}

export interface GetVirtualDesktopHostPoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualDesktopWorkspaceTimeouts {
    read?: string;
}

export interface GetVirtualDesktopWorkspaceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualHubConnectionTimeouts {
    read?: string;
}

export interface GetVirtualHubConnectionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualHubRouteTableTimeouts {
    read?: string;
}

export interface GetVirtualHubRouteTableTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualHubTimeouts {
    read?: string;
}

export interface GetVirtualHubTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualMachineScaleSetTimeouts {
    read?: string;
}

export interface GetVirtualMachineScaleSetTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualMachineTimeouts {
    read?: string;
}

export interface GetVirtualMachineTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualNetworkGatewayConnectionTimeouts {
    read?: string;
}

export interface GetVirtualNetworkGatewayConnectionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualNetworkGatewayTimeouts {
    read?: string;
}

export interface GetVirtualNetworkGatewayTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualNetworkTimeouts {
    read?: string;
}

export interface GetVirtualNetworkTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVirtualWanTimeouts {
    read?: string;
}

export interface GetVirtualWanTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVmwarePrivateCloudTimeouts {
    read?: string;
}

export interface GetVmwarePrivateCloudTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVpnGatewayTimeouts {
    read?: string;
}

export interface GetVpnGatewayTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetWebApplicationFirewallPolicyTimeouts {
    read?: string;
}

export interface GetWebApplicationFirewallPolicyTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetWebPubsubPrivateLinkResourceTimeouts {
    read?: string;
}

export interface GetWebPubsubPrivateLinkResourceTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetWebPubsubTimeouts {
    read?: string;
}

export interface GetWebPubsubTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetWindowsFunctionAppTimeouts {
    read?: string;
}

export interface GetWindowsFunctionAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetWindowsWebAppTimeouts {
    read?: string;
}

export interface GetWindowsWebAppTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GraphServicesAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterComponentVersion {
    hadoop: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterComputeIsolation {
    computeIsolationEnabled?: pulumi.Input<boolean>;
    hostSku?: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterDiskEncryption {
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    keyVaultKeyId?: pulumi.Input<string>;
    keyVaultManagedIdentityId?: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterExtension {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterGateway {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterMetastores {
    ambari?: pulumi.Input<inputs.HdinsightHadoopClusterMetastoresAmbari>;
    hive?: pulumi.Input<inputs.HdinsightHadoopClusterMetastoresHive>;
    oozie?: pulumi.Input<inputs.HdinsightHadoopClusterMetastoresOozie>;
}

export interface HdinsightHadoopClusterMetastoresAmbari {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterMetastoresHive {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterMetastoresOozie {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterMonitor {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterNetwork {
    connectionDirection?: pulumi.Input<string>;
    privateLinkEnabled?: pulumi.Input<boolean>;
}

export interface HdinsightHadoopClusterPrivateLinkConfiguration {
    groupId: pulumi.Input<string>;
    ipConfiguration: pulumi.Input<inputs.HdinsightHadoopClusterPrivateLinkConfigurationIpConfiguration>;
    name: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterPrivateLinkConfigurationIpConfiguration {
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAllocationMethod?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRoles {
    edgeNode?: pulumi.Input<inputs.HdinsightHadoopClusterRolesEdgeNode>;
    headNode: pulumi.Input<inputs.HdinsightHadoopClusterRolesHeadNode>;
    workerNode: pulumi.Input<inputs.HdinsightHadoopClusterRolesWorkerNode>;
    zookeeperNode: pulumi.Input<inputs.HdinsightHadoopClusterRolesZookeeperNode>;
}

export interface HdinsightHadoopClusterRolesEdgeNode {
    httpsEndpoints?: pulumi.Input<pulumi.Input<inputs.HdinsightHadoopClusterRolesEdgeNodeHttpsEndpoint>[]>;
    installScriptActions: pulumi.Input<pulumi.Input<inputs.HdinsightHadoopClusterRolesEdgeNodeInstallScriptAction>[]>;
    targetInstanceCount: pulumi.Input<number>;
    uninstallScriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightHadoopClusterRolesEdgeNodeUninstallScriptAction>[]>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesEdgeNodeHttpsEndpoint {
    accessModes?: pulumi.Input<pulumi.Input<string>[]>;
    destinationPort?: pulumi.Input<number>;
    disableGatewayAuth?: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    subDomainSuffix?: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesEdgeNodeInstallScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesEdgeNodeUninstallScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesHeadNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightHadoopClusterRolesHeadNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesHeadNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesWorkerNode {
    autoscale?: pulumi.Input<inputs.HdinsightHadoopClusterRolesWorkerNodeAutoscale>;
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightHadoopClusterRolesWorkerNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    targetInstanceCount: pulumi.Input<number>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesWorkerNodeAutoscale {
    capacity?: pulumi.Input<inputs.HdinsightHadoopClusterRolesWorkerNodeAutoscaleCapacity>;
    recurrence?: pulumi.Input<inputs.HdinsightHadoopClusterRolesWorkerNodeAutoscaleRecurrence>;
}

export interface HdinsightHadoopClusterRolesWorkerNodeAutoscaleCapacity {
    maxInstanceCount: pulumi.Input<number>;
    minInstanceCount: pulumi.Input<number>;
}

export interface HdinsightHadoopClusterRolesWorkerNodeAutoscaleRecurrence {
    schedules: pulumi.Input<pulumi.Input<inputs.HdinsightHadoopClusterRolesWorkerNodeAutoscaleRecurrenceSchedule>[]>;
    timezone: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesWorkerNodeAutoscaleRecurrenceSchedule {
    days: pulumi.Input<pulumi.Input<string>[]>;
    targetInstanceCount: pulumi.Input<number>;
    time: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesWorkerNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesZookeeperNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightHadoopClusterRolesZookeeperNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterRolesZookeeperNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterSecurityProfile {
    aaddsResourceId: pulumi.Input<string>;
    clusterUsersGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    domainName: pulumi.Input<string>;
    domainUserPassword: pulumi.Input<string>;
    domainUsername: pulumi.Input<string>;
    ldapsUrls: pulumi.Input<pulumi.Input<string>[]>;
    msiResourceId: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterStorageAccount {
    isDefault: pulumi.Input<boolean>;
    storageAccountKey: pulumi.Input<string>;
    storageContainerId: pulumi.Input<string>;
    storageResourceId?: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterStorageAccountGen2 {
    filesystemId: pulumi.Input<string>;
    isDefault: pulumi.Input<boolean>;
    managedIdentityResourceId: pulumi.Input<string>;
    storageResourceId: pulumi.Input<string>;
}

export interface HdinsightHadoopClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterComponentVersion {
    hbase: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterComputeIsolation {
    computeIsolationEnabled?: pulumi.Input<boolean>;
    hostSku?: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterDiskEncryption {
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    keyVaultKeyId?: pulumi.Input<string>;
    keyVaultManagedIdentityId?: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterExtension {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterGateway {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterMetastores {
    ambari?: pulumi.Input<inputs.HdinsightHbaseClusterMetastoresAmbari>;
    hive?: pulumi.Input<inputs.HdinsightHbaseClusterMetastoresHive>;
    oozie?: pulumi.Input<inputs.HdinsightHbaseClusterMetastoresOozie>;
}

export interface HdinsightHbaseClusterMetastoresAmbari {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterMetastoresHive {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterMetastoresOozie {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterMonitor {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterNetwork {
    connectionDirection?: pulumi.Input<string>;
    privateLinkEnabled?: pulumi.Input<boolean>;
}

export interface HdinsightHbaseClusterPrivateLinkConfiguration {
    groupId: pulumi.Input<string>;
    ipConfiguration: pulumi.Input<inputs.HdinsightHbaseClusterPrivateLinkConfigurationIpConfiguration>;
    name: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterPrivateLinkConfigurationIpConfiguration {
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAllocationMethod?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRoles {
    headNode: pulumi.Input<inputs.HdinsightHbaseClusterRolesHeadNode>;
    workerNode: pulumi.Input<inputs.HdinsightHbaseClusterRolesWorkerNode>;
    zookeeperNode: pulumi.Input<inputs.HdinsightHbaseClusterRolesZookeeperNode>;
}

export interface HdinsightHbaseClusterRolesHeadNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightHbaseClusterRolesHeadNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRolesHeadNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRolesWorkerNode {
    autoscale?: pulumi.Input<inputs.HdinsightHbaseClusterRolesWorkerNodeAutoscale>;
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightHbaseClusterRolesWorkerNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    targetInstanceCount: pulumi.Input<number>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRolesWorkerNodeAutoscale {
    recurrence?: pulumi.Input<inputs.HdinsightHbaseClusterRolesWorkerNodeAutoscaleRecurrence>;
}

export interface HdinsightHbaseClusterRolesWorkerNodeAutoscaleRecurrence {
    schedules: pulumi.Input<pulumi.Input<inputs.HdinsightHbaseClusterRolesWorkerNodeAutoscaleRecurrenceSchedule>[]>;
    timezone: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRolesWorkerNodeAutoscaleRecurrenceSchedule {
    days: pulumi.Input<pulumi.Input<string>[]>;
    targetInstanceCount: pulumi.Input<number>;
    time: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRolesWorkerNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRolesZookeeperNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightHbaseClusterRolesZookeeperNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterRolesZookeeperNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterSecurityProfile {
    aaddsResourceId: pulumi.Input<string>;
    clusterUsersGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    domainName: pulumi.Input<string>;
    domainUserPassword: pulumi.Input<string>;
    domainUsername: pulumi.Input<string>;
    ldapsUrls: pulumi.Input<pulumi.Input<string>[]>;
    msiResourceId: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterStorageAccount {
    isDefault: pulumi.Input<boolean>;
    storageAccountKey: pulumi.Input<string>;
    storageContainerId: pulumi.Input<string>;
    storageResourceId?: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterStorageAccountGen2 {
    filesystemId: pulumi.Input<string>;
    isDefault: pulumi.Input<boolean>;
    managedIdentityResourceId: pulumi.Input<string>;
    storageResourceId: pulumi.Input<string>;
}

export interface HdinsightHbaseClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterComponentVersion {
    interactiveHive: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterComputeIsolation {
    computeIsolationEnabled?: pulumi.Input<boolean>;
    hostSku?: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterDiskEncryption {
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    keyVaultKeyId?: pulumi.Input<string>;
    keyVaultManagedIdentityId?: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterExtension {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterGateway {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterMetastores {
    ambari?: pulumi.Input<inputs.HdinsightInteractiveQueryClusterMetastoresAmbari>;
    hive?: pulumi.Input<inputs.HdinsightInteractiveQueryClusterMetastoresHive>;
    oozie?: pulumi.Input<inputs.HdinsightInteractiveQueryClusterMetastoresOozie>;
}

export interface HdinsightInteractiveQueryClusterMetastoresAmbari {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterMetastoresHive {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterMetastoresOozie {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterMonitor {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterNetwork {
    connectionDirection?: pulumi.Input<string>;
    privateLinkEnabled?: pulumi.Input<boolean>;
}

export interface HdinsightInteractiveQueryClusterPrivateLinkConfiguration {
    groupId: pulumi.Input<string>;
    ipConfiguration: pulumi.Input<inputs.HdinsightInteractiveQueryClusterPrivateLinkConfigurationIpConfiguration>;
    name: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterPrivateLinkConfigurationIpConfiguration {
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAllocationMethod?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRoles {
    headNode: pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesHeadNode>;
    workerNode: pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesWorkerNode>;
    zookeeperNode: pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesZookeeperNode>;
}

export interface HdinsightInteractiveQueryClusterRolesHeadNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesHeadNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRolesHeadNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRolesWorkerNode {
    autoscale?: pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesWorkerNodeAutoscale>;
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesWorkerNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    targetInstanceCount: pulumi.Input<number>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRolesWorkerNodeAutoscale {
    recurrence?: pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrence>;
}

export interface HdinsightInteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrence {
    schedules: pulumi.Input<pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule>[]>;
    timezone: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule {
    days: pulumi.Input<pulumi.Input<string>[]>;
    targetInstanceCount: pulumi.Input<number>;
    time: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRolesWorkerNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRolesZookeeperNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightInteractiveQueryClusterRolesZookeeperNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterRolesZookeeperNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterSecurityProfile {
    aaddsResourceId: pulumi.Input<string>;
    clusterUsersGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    domainName: pulumi.Input<string>;
    domainUserPassword: pulumi.Input<string>;
    domainUsername: pulumi.Input<string>;
    ldapsUrls: pulumi.Input<pulumi.Input<string>[]>;
    msiResourceId: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterStorageAccount {
    isDefault: pulumi.Input<boolean>;
    storageAccountKey: pulumi.Input<string>;
    storageContainerId: pulumi.Input<string>;
    storageResourceId?: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterStorageAccountGen2 {
    filesystemId: pulumi.Input<string>;
    isDefault: pulumi.Input<boolean>;
    managedIdentityResourceId: pulumi.Input<string>;
    storageResourceId: pulumi.Input<string>;
}

export interface HdinsightInteractiveQueryClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterComponentVersion {
    kafka: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterComputeIsolation {
    computeIsolationEnabled?: pulumi.Input<boolean>;
    hostSku?: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterDiskEncryption {
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    keyVaultKeyId?: pulumi.Input<string>;
    keyVaultManagedIdentityId?: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterExtension {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterGateway {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterMetastores {
    ambari?: pulumi.Input<inputs.HdinsightKafkaClusterMetastoresAmbari>;
    hive?: pulumi.Input<inputs.HdinsightKafkaClusterMetastoresHive>;
    oozie?: pulumi.Input<inputs.HdinsightKafkaClusterMetastoresOozie>;
}

export interface HdinsightKafkaClusterMetastoresAmbari {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterMetastoresHive {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterMetastoresOozie {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterMonitor {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterNetwork {
    connectionDirection?: pulumi.Input<string>;
    privateLinkEnabled?: pulumi.Input<boolean>;
}

export interface HdinsightKafkaClusterPrivateLinkConfiguration {
    groupId: pulumi.Input<string>;
    ipConfiguration: pulumi.Input<inputs.HdinsightKafkaClusterPrivateLinkConfigurationIpConfiguration>;
    name: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterPrivateLinkConfigurationIpConfiguration {
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAllocationMethod?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRestProxy {
    securityGroupId: pulumi.Input<string>;
    securityGroupName: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRoles {
    headNode: pulumi.Input<inputs.HdinsightKafkaClusterRolesHeadNode>;
    kafkaManagementNode?: pulumi.Input<inputs.HdinsightKafkaClusterRolesKafkaManagementNode>;
    workerNode: pulumi.Input<inputs.HdinsightKafkaClusterRolesWorkerNode>;
    zookeeperNode: pulumi.Input<inputs.HdinsightKafkaClusterRolesZookeeperNode>;
}

export interface HdinsightKafkaClusterRolesHeadNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightKafkaClusterRolesHeadNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRolesHeadNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRolesKafkaManagementNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightKafkaClusterRolesKafkaManagementNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRolesKafkaManagementNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRolesWorkerNode {
    numberOfDisksPerNode: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightKafkaClusterRolesWorkerNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    targetInstanceCount: pulumi.Input<number>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRolesWorkerNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRolesZookeeperNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightKafkaClusterRolesZookeeperNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterRolesZookeeperNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterSecurityProfile {
    aaddsResourceId: pulumi.Input<string>;
    clusterUsersGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    domainName: pulumi.Input<string>;
    domainUserPassword: pulumi.Input<string>;
    domainUsername: pulumi.Input<string>;
    ldapsUrls: pulumi.Input<pulumi.Input<string>[]>;
    msiResourceId: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterStorageAccount {
    isDefault: pulumi.Input<boolean>;
    storageAccountKey: pulumi.Input<string>;
    storageContainerId: pulumi.Input<string>;
    storageResourceId?: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterStorageAccountGen2 {
    filesystemId: pulumi.Input<string>;
    isDefault: pulumi.Input<boolean>;
    managedIdentityResourceId: pulumi.Input<string>;
    storageResourceId: pulumi.Input<string>;
}

export interface HdinsightKafkaClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HdinsightSparkClusterComponentVersion {
    spark: pulumi.Input<string>;
}

export interface HdinsightSparkClusterComputeIsolation {
    computeIsolationEnabled?: pulumi.Input<boolean>;
    hostSku?: pulumi.Input<string>;
}

export interface HdinsightSparkClusterDiskEncryption {
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    keyVaultKeyId?: pulumi.Input<string>;
    keyVaultManagedIdentityId?: pulumi.Input<string>;
}

export interface HdinsightSparkClusterExtension {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightSparkClusterGateway {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightSparkClusterMetastores {
    ambari?: pulumi.Input<inputs.HdinsightSparkClusterMetastoresAmbari>;
    hive?: pulumi.Input<inputs.HdinsightSparkClusterMetastoresHive>;
    oozie?: pulumi.Input<inputs.HdinsightSparkClusterMetastoresOozie>;
}

export interface HdinsightSparkClusterMetastoresAmbari {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightSparkClusterMetastoresHive {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightSparkClusterMetastoresOozie {
    databaseName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HdinsightSparkClusterMonitor {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
}

export interface HdinsightSparkClusterNetwork {
    connectionDirection?: pulumi.Input<string>;
    privateLinkEnabled?: pulumi.Input<boolean>;
}

export interface HdinsightSparkClusterPrivateLinkConfiguration {
    groupId: pulumi.Input<string>;
    ipConfiguration: pulumi.Input<inputs.HdinsightSparkClusterPrivateLinkConfigurationIpConfiguration>;
    name: pulumi.Input<string>;
}

export interface HdinsightSparkClusterPrivateLinkConfigurationIpConfiguration {
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAllocationMethod?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRoles {
    headNode: pulumi.Input<inputs.HdinsightSparkClusterRolesHeadNode>;
    workerNode: pulumi.Input<inputs.HdinsightSparkClusterRolesWorkerNode>;
    zookeeperNode: pulumi.Input<inputs.HdinsightSparkClusterRolesZookeeperNode>;
}

export interface HdinsightSparkClusterRolesHeadNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightSparkClusterRolesHeadNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRolesHeadNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRolesWorkerNode {
    autoscale?: pulumi.Input<inputs.HdinsightSparkClusterRolesWorkerNodeAutoscale>;
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightSparkClusterRolesWorkerNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    targetInstanceCount: pulumi.Input<number>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRolesWorkerNodeAutoscale {
    capacity?: pulumi.Input<inputs.HdinsightSparkClusterRolesWorkerNodeAutoscaleCapacity>;
    recurrence?: pulumi.Input<inputs.HdinsightSparkClusterRolesWorkerNodeAutoscaleRecurrence>;
}

export interface HdinsightSparkClusterRolesWorkerNodeAutoscaleCapacity {
    maxInstanceCount: pulumi.Input<number>;
    minInstanceCount: pulumi.Input<number>;
}

export interface HdinsightSparkClusterRolesWorkerNodeAutoscaleRecurrence {
    schedules: pulumi.Input<pulumi.Input<inputs.HdinsightSparkClusterRolesWorkerNodeAutoscaleRecurrenceSchedule>[]>;
    timezone: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRolesWorkerNodeAutoscaleRecurrenceSchedule {
    days: pulumi.Input<pulumi.Input<string>[]>;
    targetInstanceCount: pulumi.Input<number>;
    time: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRolesWorkerNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRolesZookeeperNode {
    password?: pulumi.Input<string>;
    scriptActions?: pulumi.Input<pulumi.Input<inputs.HdinsightSparkClusterRolesZookeeperNodeScriptAction>[]>;
    sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    subnetId?: pulumi.Input<string>;
    username: pulumi.Input<string>;
    virtualNetworkId?: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface HdinsightSparkClusterRolesZookeeperNodeScriptAction {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
    uri: pulumi.Input<string>;
}

export interface HdinsightSparkClusterSecurityProfile {
    aaddsResourceId: pulumi.Input<string>;
    clusterUsersGroupDns?: pulumi.Input<pulumi.Input<string>[]>;
    domainName: pulumi.Input<string>;
    domainUserPassword: pulumi.Input<string>;
    domainUsername: pulumi.Input<string>;
    ldapsUrls: pulumi.Input<pulumi.Input<string>[]>;
    msiResourceId: pulumi.Input<string>;
}

export interface HdinsightSparkClusterStorageAccount {
    isDefault: pulumi.Input<boolean>;
    storageAccountKey: pulumi.Input<string>;
    storageContainerId: pulumi.Input<string>;
    storageResourceId?: pulumi.Input<string>;
}

export interface HdinsightSparkClusterStorageAccountGen2 {
    filesystemId: pulumi.Input<string>;
    isDefault: pulumi.Input<boolean>;
    managedIdentityResourceId: pulumi.Input<string>;
    storageResourceId: pulumi.Input<string>;
}

export interface HdinsightSparkClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthbotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthcareDicomServiceAuthentication {
    audiences: pulumi.Input<pulumi.Input<string>[]>;
    authority: pulumi.Input<string>;
}

export interface HealthcareDicomServiceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface HealthcareDicomServicePrivateEndpoint {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface HealthcareDicomServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthcareFhirServiceAuthentication {
    audience: pulumi.Input<string>;
    authority: pulumi.Input<string>;
    smartProxyEnabled?: pulumi.Input<boolean>;
}

export interface HealthcareFhirServiceCors {
    allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    credentialsAllowed?: pulumi.Input<boolean>;
    maxAgeInSeconds?: pulumi.Input<number>;
}

export interface HealthcareFhirServiceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface HealthcareFhirServiceOciArtifact {
    digest?: pulumi.Input<string>;
    imageName?: pulumi.Input<string>;
    loginServer: pulumi.Input<string>;
}

export interface HealthcareFhirServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthcareMedtechServiceFhirDestinationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthcareMedtechServiceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface HealthcareMedtechServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthcareServiceAuthenticationConfiguration {
    audience?: pulumi.Input<string>;
    authority?: pulumi.Input<string>;
    smartProxyEnabled?: pulumi.Input<boolean>;
}

export interface HealthcareServiceCorsConfiguration {
    allowCredentials?: pulumi.Input<boolean>;
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeInSeconds?: pulumi.Input<number>;
}

export interface HealthcareServiceIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface HealthcareServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HealthcareWorkspacePrivateEndpointConnection {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface HealthcareWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HpcCacheAccessPolicyAccessRule {
    access: pulumi.Input<string>;
    anonymousGid?: pulumi.Input<number>;
    anonymousUid?: pulumi.Input<number>;
    filter?: pulumi.Input<string>;
    rootSquashEnabled?: pulumi.Input<boolean>;
    scope: pulumi.Input<string>;
    submountAccessEnabled?: pulumi.Input<boolean>;
    suidEnabled?: pulumi.Input<boolean>;
}

export interface HpcCacheAccessPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HpcCacheBlobNfsTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HpcCacheBlobTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HpcCacheDefaultAccessPolicy {
    accessRules: pulumi.Input<pulumi.Input<inputs.HpcCacheDefaultAccessPolicyAccessRule>[]>;
}

export interface HpcCacheDefaultAccessPolicyAccessRule {
    access: pulumi.Input<string>;
    anonymousGid?: pulumi.Input<number>;
    anonymousUid?: pulumi.Input<number>;
    filter?: pulumi.Input<string>;
    rootSquashEnabled?: pulumi.Input<boolean>;
    scope: pulumi.Input<string>;
    submountAccessEnabled?: pulumi.Input<boolean>;
    suidEnabled?: pulumi.Input<boolean>;
}

export interface HpcCacheDirectoryActiveDirectory {
    cacheNetbiosName: pulumi.Input<string>;
    dnsPrimaryIp: pulumi.Input<string>;
    dnsSecondaryIp?: pulumi.Input<string>;
    domainName: pulumi.Input<string>;
    domainNetbiosName: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface HpcCacheDirectoryFlatFile {
    groupFileUri: pulumi.Input<string>;
    passwordFileUri: pulumi.Input<string>;
}

export interface HpcCacheDirectoryLdap {
    baseDn: pulumi.Input<string>;
    bind?: pulumi.Input<inputs.HpcCacheDirectoryLdapBind>;
    certificateValidationUri?: pulumi.Input<string>;
    downloadCertificateAutomatically?: pulumi.Input<boolean>;
    encrypted?: pulumi.Input<boolean>;
    server: pulumi.Input<string>;
}

export interface HpcCacheDirectoryLdapBind {
    dn: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface HpcCacheDns {
    searchDomain?: pulumi.Input<string>;
    servers: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HpcCacheIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface HpcCacheNfsTargetNamespaceJunction {
    accessPolicyName?: pulumi.Input<string>;
    namespacePath: pulumi.Input<string>;
    nfsExport: pulumi.Input<string>;
    targetPath?: pulumi.Input<string>;
}

export interface HpcCacheNfsTargetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface HpcCacheTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ImageDataDisk {
    blobUri?: pulumi.Input<string>;
    caching?: pulumi.Input<string>;
    diskEncryptionSetId?: pulumi.Input<string>;
    lun?: pulumi.Input<number>;
    managedDiskId?: pulumi.Input<string>;
    sizeGb?: pulumi.Input<number>;
    /**
     * The type of storage disk
     */
    storageType: pulumi.Input<string>;
}

export interface ImageOsDisk {
    blobUri?: pulumi.Input<string>;
    caching?: pulumi.Input<string>;
    diskEncryptionSetId?: pulumi.Input<string>;
    managedDiskId?: pulumi.Input<string>;
    osState?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    sizeGb?: pulumi.Input<number>;
    /**
     * The type of storage disk
     */
    storageType: pulumi.Input<string>;
}

export interface ImageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IotSecurityDeviceGroupAllowRule {
    connectionFromIpsNotAlloweds?: pulumi.Input<pulumi.Input<string>[]>;
    connectionToIpsNotAlloweds?: pulumi.Input<pulumi.Input<string>[]>;
    localUsersNotAlloweds?: pulumi.Input<pulumi.Input<string>[]>;
    processesNotAlloweds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IotSecurityDeviceGroupRangeRule {
    duration: pulumi.Input<string>;
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface IotSecurityDeviceGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IotSecuritySolutionAdditionalWorkspace {
    dataTypes: pulumi.Input<pulumi.Input<string>[]>;
    workspaceId: pulumi.Input<string>;
}

export interface IotSecuritySolutionRecommendationsEnabled {
    acrAuthentication?: pulumi.Input<boolean>;
    agentSendUnutilizedMsg?: pulumi.Input<boolean>;
    baseline?: pulumi.Input<boolean>;
    edgeHubMemOptimize?: pulumi.Input<boolean>;
    edgeLoggingOption?: pulumi.Input<boolean>;
    inconsistentModuleSettings?: pulumi.Input<boolean>;
    installAgent?: pulumi.Input<boolean>;
    ipFilterDenyAll?: pulumi.Input<boolean>;
    ipFilterPermissiveRule?: pulumi.Input<boolean>;
    openPorts?: pulumi.Input<boolean>;
    permissiveFirewallPolicy?: pulumi.Input<boolean>;
    permissiveInputFirewallRules?: pulumi.Input<boolean>;
    permissiveOutputFirewallRules?: pulumi.Input<boolean>;
    privilegedDockerOptions?: pulumi.Input<boolean>;
    sharedCredentials?: pulumi.Input<boolean>;
    vulnerableTlsCipherSuite?: pulumi.Input<boolean>;
}

export interface IotSecuritySolutionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IotcentralApplicationIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IotcentralApplicationNetworkRuleSetIpRule {
    ipMask: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface IotcentralApplicationNetworkRuleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IotcentralApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IotcentralOrganizationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubCloudToDevice {
    defaultTtl?: pulumi.Input<string>;
    feedbacks?: pulumi.Input<pulumi.Input<inputs.IothubCloudToDeviceFeedback>[]>;
    maxDeliveryCount?: pulumi.Input<number>;
}

export interface IothubCloudToDeviceFeedback {
    lockDuration?: pulumi.Input<string>;
    maxDeliveryCount?: pulumi.Input<number>;
    timeToLive?: pulumi.Input<string>;
}

export interface IothubConsumerGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface IothubDeviceUpdateAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IothubDeviceUpdateAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubDeviceUpdateInstanceDiagnosticStorageAccount {
    connectionString: pulumi.Input<string>;
    id: pulumi.Input<string>;
}

export interface IothubDeviceUpdateInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubDpsCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubDpsIpFilterRule {
    action: pulumi.Input<string>;
    ipMask: pulumi.Input<string>;
    name: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

export interface IothubDpsLinkedHub {
    allocationWeight?: pulumi.Input<number>;
    applyAllocationPolicy?: pulumi.Input<boolean>;
    connectionString: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    location: pulumi.Input<string>;
}

export interface IothubDpsSharedAccessPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubDpsSku {
    capacity: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface IothubDpsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubEndpoint {
    authenticationType: pulumi.Input<string>;
    batchFrequencyInSeconds: pulumi.Input<number>;
    connectionString: pulumi.Input<string>;
    containerName: pulumi.Input<string>;
    encoding: pulumi.Input<string>;
    endpointUri: pulumi.Input<string>;
    entityPath: pulumi.Input<string>;
    fileNameFormat: pulumi.Input<string>;
    identityId: pulumi.Input<string>;
    maxChunkSizeInBytes: pulumi.Input<number>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IothubEndpointCosmosdbAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubEndpointEventhubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubEndpointServicebusQueueTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubEndpointServicebusTopicTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubEndpointStorageContainerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubEnrichment {
    endpointNames: pulumi.Input<pulumi.Input<string>[]>;
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface IothubEnrichmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubFallbackRoute {
    condition?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    endpointNames?: pulumi.Input<pulumi.Input<string>[]>;
    source?: pulumi.Input<string>;
}

export interface IothubFallbackRouteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubFileUpload {
    authenticationType?: pulumi.Input<string>;
    connectionString: pulumi.Input<string>;
    containerName: pulumi.Input<string>;
    defaultTtl?: pulumi.Input<string>;
    identityId?: pulumi.Input<string>;
    lockDuration?: pulumi.Input<string>;
    maxDeliveryCount?: pulumi.Input<number>;
    notifications?: pulumi.Input<boolean>;
    sasTtl?: pulumi.Input<string>;
}

export interface IothubFileUploadTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IothubNetworkRuleSet {
    applyToBuiltinEventhubEndpoint?: pulumi.Input<boolean>;
    defaultAction?: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<inputs.IothubNetworkRuleSetIpRule>[]>;
}

export interface IothubNetworkRuleSetIpRule {
    action?: pulumi.Input<string>;
    ipMask: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface IothubRoute {
    condition: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    endpointNames: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    source: pulumi.Input<string>;
}

export interface IothubRouteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubSharedAccessPolicy {
    keyName: pulumi.Input<string>;
    permissions: pulumi.Input<string>;
    primaryKey: pulumi.Input<string>;
    secondaryKey: pulumi.Input<string>;
}

export interface IothubSharedAccessPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IothubSku {
    capacity: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface IothubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IpGroupCidrTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface IpGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultAccessPolicy {
    applicationId: pulumi.Input<string>;
    certificatePermissions: pulumi.Input<pulumi.Input<string>[]>;
    keyPermissions: pulumi.Input<pulumi.Input<string>[]>;
    objectId: pulumi.Input<string>;
    secretPermissions: pulumi.Input<pulumi.Input<string>[]>;
    storagePermissions: pulumi.Input<pulumi.Input<string>[]>;
    tenantId: pulumi.Input<string>;
}

export interface KeyVaultAccessPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultCertificateCertificate {
    contents: pulumi.Input<string>;
    password?: pulumi.Input<string>;
}

export interface KeyVaultCertificateCertificateAttribute {
    created: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    expires: pulumi.Input<string>;
    notBefore: pulumi.Input<string>;
    recoveryLevel: pulumi.Input<string>;
    updated: pulumi.Input<string>;
}

export interface KeyVaultCertificateCertificatePolicy {
    issuerParameters: pulumi.Input<inputs.KeyVaultCertificateCertificatePolicyIssuerParameters>;
    keyProperties: pulumi.Input<inputs.KeyVaultCertificateCertificatePolicyKeyProperties>;
    lifetimeActions?: pulumi.Input<pulumi.Input<inputs.KeyVaultCertificateCertificatePolicyLifetimeAction>[]>;
    secretProperties: pulumi.Input<inputs.KeyVaultCertificateCertificatePolicySecretProperties>;
    x509CertificateProperties?: pulumi.Input<inputs.KeyVaultCertificateCertificatePolicyX509CertificateProperties>;
}

export interface KeyVaultCertificateCertificatePolicyIssuerParameters {
    name: pulumi.Input<string>;
}

export interface KeyVaultCertificateCertificatePolicyKeyProperties {
    curve?: pulumi.Input<string>;
    exportable: pulumi.Input<boolean>;
    keySize?: pulumi.Input<number>;
    keyType: pulumi.Input<string>;
    reuseKey: pulumi.Input<boolean>;
}

export interface KeyVaultCertificateCertificatePolicyLifetimeAction {
    action: pulumi.Input<inputs.KeyVaultCertificateCertificatePolicyLifetimeActionAction>;
    trigger: pulumi.Input<inputs.KeyVaultCertificateCertificatePolicyLifetimeActionTrigger>;
}

export interface KeyVaultCertificateCertificatePolicyLifetimeActionAction {
    actionType: pulumi.Input<string>;
}

export interface KeyVaultCertificateCertificatePolicyLifetimeActionTrigger {
    daysBeforeExpiry?: pulumi.Input<number>;
    lifetimePercentage?: pulumi.Input<number>;
}

export interface KeyVaultCertificateCertificatePolicySecretProperties {
    contentType: pulumi.Input<string>;
}

export interface KeyVaultCertificateCertificatePolicyX509CertificateProperties {
    extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
    keyUsages: pulumi.Input<pulumi.Input<string>[]>;
    subject: pulumi.Input<string>;
    subjectAlternativeNames?: pulumi.Input<inputs.KeyVaultCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames>;
    validityInMonths: pulumi.Input<number>;
}

export interface KeyVaultCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames {
    dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    upns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KeyVaultCertificateContactsContact {
    email: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
}

export interface KeyVaultCertificateContactsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultCertificateIssuerAdmin {
    emailAddress: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
}

export interface KeyVaultCertificateIssuerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultContact {
    email: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
}

export interface KeyVaultKeyRotationPolicy {
    automatic?: pulumi.Input<inputs.KeyVaultKeyRotationPolicyAutomatic>;
    expireAfter?: pulumi.Input<string>;
    notifyBeforeExpiry?: pulumi.Input<string>;
}

export interface KeyVaultKeyRotationPolicyAutomatic {
    timeAfterCreation?: pulumi.Input<string>;
    timeBeforeExpiry?: pulumi.Input<string>;
}

export interface KeyVaultKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultManagedHardwareSecurityModuleKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultManagedHardwareSecurityModuleNetworkAcls {
    bypass: pulumi.Input<string>;
    defaultAction: pulumi.Input<string>;
}

export interface KeyVaultManagedHardwareSecurityModuleRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface KeyVaultManagedHardwareSecurityModuleRoleDefinitionPermission {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    dataActions?: pulumi.Input<pulumi.Input<string>[]>;
    notActions?: pulumi.Input<pulumi.Input<string>[]>;
    notDataActions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KeyVaultManagedHardwareSecurityModuleRoleDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultManagedHardwareSecurityModuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultManagedStorageAccountSasTokenDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultManagedStorageAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultNetworkAcls {
    bypass: pulumi.Input<string>;
    defaultAction: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<string>[]>;
    virtualNetworkSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KeyVaultSecretTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KeyVaultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesClusterAciConnectorLinux {
    connectorIdentities?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterAciConnectorLinuxConnectorIdentity>[]>;
    subnetName: pulumi.Input<string>;
}

export interface KubernetesClusterAciConnectorLinuxConnectorIdentity {
    clientId: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    userAssignedIdentityId: pulumi.Input<string>;
}

export interface KubernetesClusterApiServerAccessProfile {
    authorizedIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KubernetesClusterAutoScalerProfile {
    balanceSimilarNodeGroups?: pulumi.Input<boolean>;
    emptyBulkDeleteMax?: pulumi.Input<string>;
    expander?: pulumi.Input<string>;
    maxGracefulTerminationSec?: pulumi.Input<string>;
    maxNodeProvisioningTime?: pulumi.Input<string>;
    maxUnreadyNodes?: pulumi.Input<number>;
    maxUnreadyPercentage?: pulumi.Input<number>;
    newPodScaleUpDelay?: pulumi.Input<string>;
    scaleDownDelayAfterAdd?: pulumi.Input<string>;
    scaleDownDelayAfterDelete?: pulumi.Input<string>;
    scaleDownDelayAfterFailure?: pulumi.Input<string>;
    scaleDownUnneeded?: pulumi.Input<string>;
    scaleDownUnready?: pulumi.Input<string>;
    scaleDownUtilizationThreshold?: pulumi.Input<string>;
    scanInterval?: pulumi.Input<string>;
    skipNodesWithLocalStorage?: pulumi.Input<boolean>;
    skipNodesWithSystemPods?: pulumi.Input<boolean>;
}

export interface KubernetesClusterAzureActiveDirectoryRoleBasedAccessControl {
    adminGroupObjectIds?: pulumi.Input<pulumi.Input<string>[]>;
    azureRbacEnabled?: pulumi.Input<boolean>;
    tenantId?: pulumi.Input<string>;
}

export interface KubernetesClusterConfidentialComputing {
    sgxQuoteHelperEnabled: pulumi.Input<boolean>;
}

export interface KubernetesClusterDefaultNodePool {
    autoScalingEnabled?: pulumi.Input<boolean>;
    capacityReservationGroupId?: pulumi.Input<string>;
    fipsEnabled?: pulumi.Input<boolean>;
    gpuInstance?: pulumi.Input<string>;
    hostEncryptionEnabled?: pulumi.Input<boolean>;
    hostGroupId?: pulumi.Input<string>;
    kubeletConfig?: pulumi.Input<inputs.KubernetesClusterDefaultNodePoolKubeletConfig>;
    kubeletDiskType?: pulumi.Input<string>;
    linuxOsConfig?: pulumi.Input<inputs.KubernetesClusterDefaultNodePoolLinuxOsConfig>;
    maxCount?: pulumi.Input<number>;
    maxPods?: pulumi.Input<number>;
    minCount?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    nodeCount?: pulumi.Input<number>;
    nodeLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    nodeNetworkProfile?: pulumi.Input<inputs.KubernetesClusterDefaultNodePoolNodeNetworkProfile>;
    nodePublicIpEnabled?: pulumi.Input<boolean>;
    nodePublicIpPrefixId?: pulumi.Input<string>;
    onlyCriticalAddonsEnabled?: pulumi.Input<boolean>;
    orchestratorVersion?: pulumi.Input<string>;
    osDiskSizeGb?: pulumi.Input<number>;
    osDiskType?: pulumi.Input<string>;
    osSku?: pulumi.Input<string>;
    podSubnetId?: pulumi.Input<string>;
    proximityPlacementGroupId?: pulumi.Input<string>;
    scaleDownMode?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    temporaryNameForRotation?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    ultraSsdEnabled?: pulumi.Input<boolean>;
    upgradeSettings?: pulumi.Input<inputs.KubernetesClusterDefaultNodePoolUpgradeSettings>;
    vmSize: pulumi.Input<string>;
    vnetSubnetId?: pulumi.Input<string>;
    workloadRuntime?: pulumi.Input<string>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KubernetesClusterDefaultNodePoolKubeletConfig {
    allowedUnsafeSysctls?: pulumi.Input<pulumi.Input<string>[]>;
    containerLogMaxLine?: pulumi.Input<number>;
    containerLogMaxSizeMb?: pulumi.Input<number>;
    cpuCfsQuotaEnabled?: pulumi.Input<boolean>;
    cpuCfsQuotaPeriod?: pulumi.Input<string>;
    cpuManagerPolicy?: pulumi.Input<string>;
    imageGcHighThreshold?: pulumi.Input<number>;
    imageGcLowThreshold?: pulumi.Input<number>;
    podMaxPid?: pulumi.Input<number>;
    topologyManagerPolicy?: pulumi.Input<string>;
}

export interface KubernetesClusterDefaultNodePoolLinuxOsConfig {
    swapFileSizeMb?: pulumi.Input<number>;
    sysctlConfig?: pulumi.Input<inputs.KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig>;
    transparentHugePageDefrag?: pulumi.Input<string>;
    transparentHugePageEnabled?: pulumi.Input<string>;
}

export interface KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfig {
    fsAioMaxNr?: pulumi.Input<number>;
    fsFileMax?: pulumi.Input<number>;
    fsInotifyMaxUserWatches?: pulumi.Input<number>;
    fsNrOpen?: pulumi.Input<number>;
    kernelThreadsMax?: pulumi.Input<number>;
    netCoreNetdevMaxBacklog?: pulumi.Input<number>;
    netCoreOptmemMax?: pulumi.Input<number>;
    netCoreRmemDefault?: pulumi.Input<number>;
    netCoreRmemMax?: pulumi.Input<number>;
    netCoreSomaxconn?: pulumi.Input<number>;
    netCoreWmemDefault?: pulumi.Input<number>;
    netCoreWmemMax?: pulumi.Input<number>;
    netIpv4IpLocalPortRangeMax?: pulumi.Input<number>;
    netIpv4IpLocalPortRangeMin?: pulumi.Input<number>;
    netIpv4NeighDefaultGcThresh1?: pulumi.Input<number>;
    netIpv4NeighDefaultGcThresh2?: pulumi.Input<number>;
    netIpv4NeighDefaultGcThresh3?: pulumi.Input<number>;
    netIpv4TcpFinTimeout?: pulumi.Input<number>;
    netIpv4TcpKeepaliveIntvl?: pulumi.Input<number>;
    netIpv4TcpKeepaliveProbes?: pulumi.Input<number>;
    netIpv4TcpKeepaliveTime?: pulumi.Input<number>;
    netIpv4TcpMaxSynBacklog?: pulumi.Input<number>;
    netIpv4TcpMaxTwBuckets?: pulumi.Input<number>;
    netIpv4TcpTwReuse?: pulumi.Input<boolean>;
    netNetfilterNfConntrackBuckets?: pulumi.Input<number>;
    netNetfilterNfConntrackMax?: pulumi.Input<number>;
    vmMaxMapCount?: pulumi.Input<number>;
    vmSwappiness?: pulumi.Input<number>;
    vmVfsCachePressure?: pulumi.Input<number>;
}

export interface KubernetesClusterDefaultNodePoolNodeNetworkProfile {
    allowedHostPorts?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPort>[]>;
    applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    nodePublicIpTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPort {
    portEnd?: pulumi.Input<number>;
    portStart?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
}

export interface KubernetesClusterDefaultNodePoolUpgradeSettings {
    drainTimeoutInMinutes?: pulumi.Input<number>;
    maxSurge: pulumi.Input<string>;
    nodeSoakDurationInMinutes?: pulumi.Input<number>;
}

export interface KubernetesClusterExtensionAksAssignedIdentity {
    principalId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface KubernetesClusterExtensionPlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    promotionCode?: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface KubernetesClusterExtensionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesClusterHttpProxyConfig {
    httpProxy?: pulumi.Input<string>;
    httpsProxy?: pulumi.Input<string>;
    noProxies?: pulumi.Input<pulumi.Input<string>[]>;
    trustedCa?: pulumi.Input<string>;
}

export interface KubernetesClusterIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface KubernetesClusterIngressApplicationGateway {
    effectiveGatewayId?: pulumi.Input<string>;
    gatewayId?: pulumi.Input<string>;
    gatewayName?: pulumi.Input<string>;
    ingressApplicationGatewayIdentities?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity>[]>;
    subnetCidr?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface KubernetesClusterIngressApplicationGatewayIngressApplicationGatewayIdentity {
    clientId: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    userAssignedIdentityId: pulumi.Input<string>;
}

export interface KubernetesClusterKeyManagementService {
    keyVaultKeyId: pulumi.Input<string>;
    keyVaultNetworkAccess?: pulumi.Input<string>;
}

export interface KubernetesClusterKeyVaultSecretsProvider {
    secretIdentities?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterKeyVaultSecretsProviderSecretIdentity>[]>;
    secretRotationEnabled?: pulumi.Input<boolean>;
    secretRotationInterval?: pulumi.Input<string>;
}

export interface KubernetesClusterKeyVaultSecretsProviderSecretIdentity {
    clientId: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    userAssignedIdentityId: pulumi.Input<string>;
}

export interface KubernetesClusterKubeAdminConfig {
    clientCertificate: pulumi.Input<string>;
    clientKey: pulumi.Input<string>;
    clusterCaCertificate: pulumi.Input<string>;
    host: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface KubernetesClusterKubeConfig {
    clientCertificate: pulumi.Input<string>;
    clientKey: pulumi.Input<string>;
    clusterCaCertificate: pulumi.Input<string>;
    host: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface KubernetesClusterKubeletIdentity {
    clientId?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface KubernetesClusterLinuxProfile {
    adminUsername: pulumi.Input<string>;
    sshKey: pulumi.Input<inputs.KubernetesClusterLinuxProfileSshKey>;
}

export interface KubernetesClusterLinuxProfileSshKey {
    keyData: pulumi.Input<string>;
}

export interface KubernetesClusterMaintenanceWindow {
    alloweds?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMaintenanceWindowAllowed>[]>;
    notAlloweds?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMaintenanceWindowNotAllowed>[]>;
}

export interface KubernetesClusterMaintenanceWindowAllowed {
    day: pulumi.Input<string>;
    hours: pulumi.Input<pulumi.Input<number>[]>;
}

export interface KubernetesClusterMaintenanceWindowAutoUpgrade {
    dayOfMonth?: pulumi.Input<number>;
    dayOfWeek?: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    frequency: pulumi.Input<string>;
    interval: pulumi.Input<number>;
    notAlloweds?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed>[]>;
    startDate?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    utcOffset?: pulumi.Input<string>;
    weekIndex?: pulumi.Input<string>;
}

export interface KubernetesClusterMaintenanceWindowAutoUpgradeNotAllowed {
    end: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface KubernetesClusterMaintenanceWindowNodeOs {
    dayOfMonth?: pulumi.Input<number>;
    dayOfWeek?: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    frequency: pulumi.Input<string>;
    interval: pulumi.Input<number>;
    notAlloweds?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMaintenanceWindowNodeOsNotAllowed>[]>;
    startDate?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    utcOffset?: pulumi.Input<string>;
    weekIndex?: pulumi.Input<string>;
}

export interface KubernetesClusterMaintenanceWindowNodeOsNotAllowed {
    end: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface KubernetesClusterMaintenanceWindowNotAllowed {
    end: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface KubernetesClusterMicrosoftDefender {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
}

export interface KubernetesClusterMonitorMetrics {
    annotationsAllowed?: pulumi.Input<string>;
    labelsAllowed?: pulumi.Input<string>;
}

export interface KubernetesClusterNetworkProfile {
    dnsServiceIp?: pulumi.Input<string>;
    ipVersions?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerProfile?: pulumi.Input<inputs.KubernetesClusterNetworkProfileLoadBalancerProfile>;
    loadBalancerSku?: pulumi.Input<string>;
    natGatewayProfile?: pulumi.Input<inputs.KubernetesClusterNetworkProfileNatGatewayProfile>;
    networkDataPlane?: pulumi.Input<string>;
    networkMode?: pulumi.Input<string>;
    networkPlugin: pulumi.Input<string>;
    networkPluginMode?: pulumi.Input<string>;
    networkPolicy?: pulumi.Input<string>;
    outboundType?: pulumi.Input<string>;
    podCidr?: pulumi.Input<string>;
    podCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    serviceCidr?: pulumi.Input<string>;
    serviceCidrs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KubernetesClusterNetworkProfileLoadBalancerProfile {
    effectiveOutboundIps?: pulumi.Input<pulumi.Input<string>[]>;
    idleTimeoutInMinutes?: pulumi.Input<number>;
    managedOutboundIpCount?: pulumi.Input<number>;
    managedOutboundIpv6Count?: pulumi.Input<number>;
    outboundIpAddressIds?: pulumi.Input<pulumi.Input<string>[]>;
    outboundIpPrefixIds?: pulumi.Input<pulumi.Input<string>[]>;
    outboundPortsAllocated?: pulumi.Input<number>;
}

export interface KubernetesClusterNetworkProfileNatGatewayProfile {
    effectiveOutboundIps?: pulumi.Input<pulumi.Input<string>[]>;
    idleTimeoutInMinutes?: pulumi.Input<number>;
    managedOutboundIpCount?: pulumi.Input<number>;
}

export interface KubernetesClusterNodePoolKubeletConfig {
    allowedUnsafeSysctls?: pulumi.Input<pulumi.Input<string>[]>;
    containerLogMaxLine?: pulumi.Input<number>;
    containerLogMaxSizeMb?: pulumi.Input<number>;
    cpuCfsQuotaEnabled?: pulumi.Input<boolean>;
    cpuCfsQuotaPeriod?: pulumi.Input<string>;
    cpuManagerPolicy?: pulumi.Input<string>;
    imageGcHighThreshold?: pulumi.Input<number>;
    imageGcLowThreshold?: pulumi.Input<number>;
    podMaxPid?: pulumi.Input<number>;
    topologyManagerPolicy?: pulumi.Input<string>;
}

export interface KubernetesClusterNodePoolLinuxOsConfig {
    swapFileSizeMb?: pulumi.Input<number>;
    sysctlConfig?: pulumi.Input<inputs.KubernetesClusterNodePoolLinuxOsConfigSysctlConfig>;
    transparentHugePageDefrag?: pulumi.Input<string>;
    transparentHugePageEnabled?: pulumi.Input<string>;
}

export interface KubernetesClusterNodePoolLinuxOsConfigSysctlConfig {
    fsAioMaxNr?: pulumi.Input<number>;
    fsFileMax?: pulumi.Input<number>;
    fsInotifyMaxUserWatches?: pulumi.Input<number>;
    fsNrOpen?: pulumi.Input<number>;
    kernelThreadsMax?: pulumi.Input<number>;
    netCoreNetdevMaxBacklog?: pulumi.Input<number>;
    netCoreOptmemMax?: pulumi.Input<number>;
    netCoreRmemDefault?: pulumi.Input<number>;
    netCoreRmemMax?: pulumi.Input<number>;
    netCoreSomaxconn?: pulumi.Input<number>;
    netCoreWmemDefault?: pulumi.Input<number>;
    netCoreWmemMax?: pulumi.Input<number>;
    netIpv4IpLocalPortRangeMax?: pulumi.Input<number>;
    netIpv4IpLocalPortRangeMin?: pulumi.Input<number>;
    netIpv4NeighDefaultGcThresh1?: pulumi.Input<number>;
    netIpv4NeighDefaultGcThresh2?: pulumi.Input<number>;
    netIpv4NeighDefaultGcThresh3?: pulumi.Input<number>;
    netIpv4TcpFinTimeout?: pulumi.Input<number>;
    netIpv4TcpKeepaliveIntvl?: pulumi.Input<number>;
    netIpv4TcpKeepaliveProbes?: pulumi.Input<number>;
    netIpv4TcpKeepaliveTime?: pulumi.Input<number>;
    netIpv4TcpMaxSynBacklog?: pulumi.Input<number>;
    netIpv4TcpMaxTwBuckets?: pulumi.Input<number>;
    netIpv4TcpTwReuse?: pulumi.Input<boolean>;
    netNetfilterNfConntrackBuckets?: pulumi.Input<number>;
    netNetfilterNfConntrackMax?: pulumi.Input<number>;
    vmMaxMapCount?: pulumi.Input<number>;
    vmSwappiness?: pulumi.Input<number>;
    vmVfsCachePressure?: pulumi.Input<number>;
}

export interface KubernetesClusterNodePoolNodeNetworkProfile {
    allowedHostPorts?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterNodePoolNodeNetworkProfileAllowedHostPort>[]>;
    applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    nodePublicIpTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface KubernetesClusterNodePoolNodeNetworkProfileAllowedHostPort {
    portEnd?: pulumi.Input<number>;
    portStart?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
}

export interface KubernetesClusterNodePoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesClusterNodePoolUpgradeSettings {
    drainTimeoutInMinutes?: pulumi.Input<number>;
    maxSurge: pulumi.Input<string>;
    nodeSoakDurationInMinutes?: pulumi.Input<number>;
}

export interface KubernetesClusterNodePoolWindowsProfile {
    outboundNatEnabled?: pulumi.Input<boolean>;
}

export interface KubernetesClusterOmsAgent {
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    msiAuthForMonitoringEnabled?: pulumi.Input<boolean>;
    omsAgentIdentities?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterOmsAgentOmsAgentIdentity>[]>;
}

export interface KubernetesClusterOmsAgentOmsAgentIdentity {
    clientId: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    userAssignedIdentityId: pulumi.Input<string>;
}

export interface KubernetesClusterServiceMeshProfile {
    certificateAuthority?: pulumi.Input<inputs.KubernetesClusterServiceMeshProfileCertificateAuthority>;
    externalIngressGatewayEnabled?: pulumi.Input<boolean>;
    internalIngressGatewayEnabled?: pulumi.Input<boolean>;
    mode: pulumi.Input<string>;
    revisions: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KubernetesClusterServiceMeshProfileCertificateAuthority {
    certChainObjectName: pulumi.Input<string>;
    certObjectName: pulumi.Input<string>;
    keyObjectName: pulumi.Input<string>;
    keyVaultId: pulumi.Input<string>;
    rootCertObjectName: pulumi.Input<string>;
}

export interface KubernetesClusterServicePrincipal {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface KubernetesClusterStorageProfile {
    blobDriverEnabled?: pulumi.Input<boolean>;
    diskDriverEnabled?: pulumi.Input<boolean>;
    fileDriverEnabled?: pulumi.Input<boolean>;
    snapshotControllerEnabled?: pulumi.Input<boolean>;
}

export interface KubernetesClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesClusterTrustedAccessRoleBindingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesClusterWebAppRouting {
    dnsZoneIds: pulumi.Input<pulumi.Input<string>[]>;
    webAppRoutingIdentities?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterWebAppRoutingWebAppRoutingIdentity>[]>;
}

export interface KubernetesClusterWebAppRoutingWebAppRoutingIdentity {
    clientId: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    userAssignedIdentityId: pulumi.Input<string>;
}

export interface KubernetesClusterWindowsProfile {
    adminPassword: pulumi.Input<string>;
    adminUsername: pulumi.Input<string>;
    gmsa?: pulumi.Input<inputs.KubernetesClusterWindowsProfileGmsa>;
    license?: pulumi.Input<string>;
}

export interface KubernetesClusterWindowsProfileGmsa {
    dnsServer: pulumi.Input<string>;
    rootDomain: pulumi.Input<string>;
}

export interface KubernetesClusterWorkloadAutoscalerProfile {
    kedaEnabled?: pulumi.Input<boolean>;
    verticalPodAutoscalerEnabled?: pulumi.Input<boolean>;
}

export interface KubernetesFleetManagerHubProfile {
    dnsPrefix: pulumi.Input<string>;
    fqdn?: pulumi.Input<string>;
    kubernetesVersion?: pulumi.Input<string>;
}

export interface KubernetesFleetManagerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesFleetMemberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateRunManagedClusterUpdate {
    nodeImageSelection?: pulumi.Input<inputs.KubernetesFleetUpdateRunManagedClusterUpdateNodeImageSelection>;
    upgrade: pulumi.Input<inputs.KubernetesFleetUpdateRunManagedClusterUpdateUpgrade>;
}

export interface KubernetesFleetUpdateRunManagedClusterUpdateNodeImageSelection {
    type: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateRunManagedClusterUpdateUpgrade {
    kubernetesVersion?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateRunStage {
    afterStageWaitInSeconds?: pulumi.Input<number>;
    groups: pulumi.Input<pulumi.Input<inputs.KubernetesFleetUpdateRunStageGroup>[]>;
    name: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateRunStageGroup {
    name: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateRunTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateStrategyStage {
    afterStageWaitInSeconds?: pulumi.Input<number>;
    groups: pulumi.Input<pulumi.Input<inputs.KubernetesFleetUpdateStrategyStageGroup>[]>;
    name: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateStrategyStageGroup {
    name: pulumi.Input<string>;
}

export interface KubernetesFleetUpdateStrategyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesFluxConfigurationBlobStorage {
    accountKey?: pulumi.Input<string>;
    containerId: pulumi.Input<string>;
    localAuthReference?: pulumi.Input<string>;
    managedIdentity?: pulumi.Input<inputs.KubernetesFluxConfigurationBlobStorageManagedIdentity>;
    sasToken?: pulumi.Input<string>;
    servicePrincipal?: pulumi.Input<inputs.KubernetesFluxConfigurationBlobStorageServicePrincipal>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
}

export interface KubernetesFluxConfigurationBlobStorageManagedIdentity {
    clientId: pulumi.Input<string>;
}

export interface KubernetesFluxConfigurationBlobStorageServicePrincipal {
    clientCertificateBase64?: pulumi.Input<string>;
    clientCertificatePassword?: pulumi.Input<string>;
    clientCertificateSendChain?: pulumi.Input<boolean>;
    clientId: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface KubernetesFluxConfigurationBucket {
    accessKey?: pulumi.Input<string>;
    bucketName: pulumi.Input<string>;
    localAuthReference?: pulumi.Input<string>;
    secretKeyBase64?: pulumi.Input<string>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
    tlsEnabled?: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface KubernetesFluxConfigurationGitRepository {
    httpsCaCertBase64?: pulumi.Input<string>;
    httpsKeyBase64?: pulumi.Input<string>;
    httpsUser?: pulumi.Input<string>;
    localAuthReference?: pulumi.Input<string>;
    referenceType: pulumi.Input<string>;
    referenceValue: pulumi.Input<string>;
    sshKnownHostsBase64?: pulumi.Input<string>;
    sshPrivateKeyBase64?: pulumi.Input<string>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
    url: pulumi.Input<string>;
}

export interface KubernetesFluxConfigurationKustomization {
    dependsOns?: pulumi.Input<pulumi.Input<string>[]>;
    garbageCollectionEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    recreatingEnabled?: pulumi.Input<boolean>;
    retryIntervalInSeconds?: pulumi.Input<number>;
    syncIntervalInSeconds?: pulumi.Input<number>;
    timeoutInSeconds?: pulumi.Input<number>;
}

export interface KubernetesFluxConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoAttachedDatabaseConfigurationSharing {
    externalTablesToExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    externalTablesToIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    materializedViewsToExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    materializedViewsToIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    tablesToExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    tablesToIncludes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KustoAttachedDatabaseConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoClusterCustomerManagedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoClusterIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface KustoClusterLanguageExtension {
    image: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface KustoClusterManagedPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoClusterOptimizedAutoScale {
    maximumInstances: pulumi.Input<number>;
    minimumInstances: pulumi.Input<number>;
}

export interface KustoClusterPrincipalAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface KustoClusterSku {
    capacity?: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface KustoClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoClusterVirtualNetworkConfiguration {
    dataManagementPublicIpId: pulumi.Input<string>;
    enginePublicIpId: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface KustoCosmosdbDataConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface KustoDatabasePrincipalAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface KustoDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoEventgridDataConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoEventhubDataConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KustoIothubDataConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface KustoScriptTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbBackendAddressPoolAddressInboundNatRulePortMapping {
    backendPort: pulumi.Input<number>;
    frontendPort: pulumi.Input<number>;
    inboundNatRuleName: pulumi.Input<string>;
}

export interface LbBackendAddressPoolAddressTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbBackendAddressPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbBackendAddressPoolTunnelInterface {
    identifier: pulumi.Input<number>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LbFrontendIpConfiguration {
    gatewayLoadBalancerFrontendIpConfigurationId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inboundNatRules?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerRules?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    outboundRules?: pulumi.Input<pulumi.Input<string>[]>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAddressAllocation?: pulumi.Input<string>;
    privateIpAddressVersion?: pulumi.Input<string>;
    publicIpAddressId?: pulumi.Input<string>;
    publicIpPrefixId?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LbNatPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbNatRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbOutboundRuleFrontendIpConfiguration {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface LbOutboundRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbProbeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LighthouseAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface LighthouseDefinitionAuthorization {
    delegatedRoleDefinitionIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalDisplayName?: pulumi.Input<string>;
    principalId: pulumi.Input<string>;
    roleDefinitionId: pulumi.Input<string>;
}

export interface LighthouseDefinitionEligibleAuthorization {
    justInTimeAccessPolicy?: pulumi.Input<inputs.LighthouseDefinitionEligibleAuthorizationJustInTimeAccessPolicy>;
    principalDisplayName?: pulumi.Input<string>;
    principalId: pulumi.Input<string>;
    roleDefinitionId: pulumi.Input<string>;
}

export interface LighthouseDefinitionEligibleAuthorizationJustInTimeAccessPolicy {
    approvers?: pulumi.Input<pulumi.Input<inputs.LighthouseDefinitionEligibleAuthorizationJustInTimeAccessPolicyApprover>[]>;
    maximumActivationDuration?: pulumi.Input<string>;
    multiFactorAuthProvider?: pulumi.Input<string>;
}

export interface LighthouseDefinitionEligibleAuthorizationJustInTimeAccessPolicyApprover {
    principalDisplayName?: pulumi.Input<string>;
    principalId: pulumi.Input<string>;
}

export interface LighthouseDefinitionPlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface LighthouseDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LinuxFunctionAppAuthSettings {
    activeDirectory?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsGithub>;
    google?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface LinuxFunctionAppAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxFunctionAppAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxFunctionAppAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.LinuxFunctionAppAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface LinuxFunctionAppAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface LinuxFunctionAppAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface LinuxFunctionAppAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface LinuxFunctionAppBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.LinuxFunctionAppBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface LinuxFunctionAppBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface LinuxFunctionAppConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface LinuxFunctionAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxFunctionAppSiteConfig {
    /**
     * If this Linux Web App is Always On enabled. Defaults to `false`.
     */
    alwaysOn?: pulumi.Input<boolean>;
    /**
     * The URL of the API definition that describes this Linux Function App.
     */
    apiDefinitionUrl?: pulumi.Input<string>;
    /**
     * The ID of the API Management API for this Linux Function App.
     */
    apiManagementApiId?: pulumi.Input<string>;
    /**
     * The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
     */
    appCommandLine?: pulumi.Input<string>;
    /**
     * The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
     */
    appScaleLimit?: pulumi.Input<number>;
    appServiceLogs?: pulumi.Input<inputs.LinuxFunctionAppSiteConfigAppServiceLogs>;
    /**
     * The Connection String for linking the Linux Function App to Application Insights.
     */
    applicationInsightsConnectionString?: pulumi.Input<string>;
    /**
     * The Instrumentation Key for connecting the Linux Function App to Application Insights.
     */
    applicationInsightsKey?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.LinuxFunctionAppSiteConfigApplicationStack>;
    /**
     * The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
     */
    containerRegistryManagedIdentityClientId?: pulumi.Input<string>;
    /**
     * Should connections for Azure Container Registry use Managed Identity.
     */
    containerRegistryUseManagedIdentity?: pulumi.Input<boolean>;
    cors?: pulumi.Input<inputs.LinuxFunctionAppSiteConfigCors>;
    /**
     * Specifies a list of Default Documents for the Linux Web App.
     */
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is detailed error logging enabled
     */
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans.
     */
    elasticInstanceMinimum?: pulumi.Input<number>;
    /**
     * State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
     */
    ftpsState?: pulumi.Input<string>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    /**
     * The path to be checked for this function app health.
     */
    healthCheckPath?: pulumi.Input<string>;
    /**
     * Specifies if the http2 protocol should be enabled. Defaults to `false`.
     */
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSiteConfigIpRestriction>[]>;
    /**
     * The Linux FX Version
     */
    linuxFxVersion?: pulumi.Input<string>;
    /**
     * The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
     */
    loadBalancingMode?: pulumi.Input<string>;
    /**
     * The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
     */
    managedPipelineMode?: pulumi.Input<string>;
    /**
     * The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    minimumTlsVersion?: pulumi.Input<string>;
    /**
     * The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
     */
    preWarmedInstanceCount?: pulumi.Input<number>;
    /**
     * Should Remote Debugging be enabled. Defaults to `false`.
     */
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    /**
     * The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022``
     */
    remoteDebuggingVersion?: pulumi.Input<string>;
    /**
     * Should Functions Runtime Scale Monitoring be enabled.
     */
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSiteConfigScmIpRestriction>[]>;
    /**
     * Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    scmMinimumTlsVersion?: pulumi.Input<string>;
    /**
     * The SCM Type in use by the Linux Function App.
     */
    scmType?: pulumi.Input<string>;
    /**
     * Should the Linux Function App `ip_restriction` configuration be used for the SCM also.
     */
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    /**
     * Should the Linux Web App use a 32-bit worker.
     */
    use32BitWorker?: pulumi.Input<boolean>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    /**
     * Should Web Sockets be enabled. Defaults to `false`.
     */
    websocketsEnabled?: pulumi.Input<boolean>;
    /**
     * The number of Workers for this Linux Function App.
     */
    workerCount?: pulumi.Input<number>;
}

export interface LinuxFunctionAppSiteConfigAppServiceLogs {
    /**
     * The amount of disk space to use for logs. Valid values are between `25` and `100`.
     */
    diskQuotaMb?: pulumi.Input<number>;
    /**
     * The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
     */
    retentionPeriodDays?: pulumi.Input<number>;
}

export interface LinuxFunctionAppSiteConfigApplicationStack {
    /**
     * A docker block
     */
    dockers?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSiteConfigApplicationStackDocker>[]>;
    /**
     * The version of .Net. Possible values are `3.1`, `6.0` and `7.0`
     */
    dotnetVersion?: pulumi.Input<string>;
    /**
     * The version of Java to use. Possible values are `8`, `11`, and `17`
     */
    javaVersion?: pulumi.Input<string>;
    /**
     * The version of Node to use. Possible values include `12`, `14`, `16`, `18` and `20`
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * The version of PowerShell Core to use. Possibles values are `7`, `7.2`, and `7.4`
     */
    powershellCoreVersion?: pulumi.Input<string>;
    /**
     * The version of Python to use. Possible values include `3.12`, `3.11`, `3.10`, `3.9`, `3.8`, and `3.7`.
     */
    pythonVersion?: pulumi.Input<string>;
    useCustomRuntime?: pulumi.Input<boolean>;
    /**
     * Should the DotNet process use an isolated runtime. Defaults to `false`.
     */
    useDotnetIsolatedRuntime?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppSiteConfigApplicationStackDocker {
    /**
     * The name of the Docker image to use.
     */
    imageName: pulumi.Input<string>;
    /**
     * The image tag of the image to use.
     */
    imageTag: pulumi.Input<string>;
    /**
     * The password for the account to use to connect to the registry.
     */
    registryPassword?: pulumi.Input<string>;
    /**
     * The URL of the docker registry.
     */
    registryUrl: pulumi.Input<string>;
    /**
     * The username to use for connections to the registry.
     */
    registryUsername?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotAuthSettings {
    activeDirectory?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsGithub>;
    google?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.LinuxFunctionAppSlotAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.LinuxFunctionAppSlotBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotSiteConfig {
    /**
     * If this Linux Web App is Always On enabled. Defaults to `false`.
     */
    alwaysOn?: pulumi.Input<boolean>;
    /**
     * The URL of the API definition that describes this Linux Function App.
     */
    apiDefinitionUrl?: pulumi.Input<string>;
    /**
     * The ID of the API Management API for this Linux Function App.
     */
    apiManagementApiId?: pulumi.Input<string>;
    /**
     * The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
     */
    appCommandLine?: pulumi.Input<string>;
    /**
     * The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
     */
    appScaleLimit?: pulumi.Input<number>;
    appServiceLogs?: pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigAppServiceLogs>;
    /**
     * The Connection String for linking the Linux Function App to Application Insights.
     */
    applicationInsightsConnectionString?: pulumi.Input<string>;
    /**
     * The Instrumentation Key for connecting the Linux Function App to Application Insights.
     */
    applicationInsightsKey?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigApplicationStack>;
    autoSwapSlotName?: pulumi.Input<string>;
    /**
     * The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.
     */
    containerRegistryManagedIdentityClientId?: pulumi.Input<string>;
    /**
     * Should connections for Azure Container Registry use Managed Identity.
     */
    containerRegistryUseManagedIdentity?: pulumi.Input<boolean>;
    cors?: pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigCors>;
    /**
     * Specifies a list of Default Documents for the Linux Web App.
     */
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is detailed error logging enabled
     */
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans.
     */
    elasticInstanceMinimum?: pulumi.Input<number>;
    /**
     * State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
     */
    ftpsState?: pulumi.Input<string>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    /**
     * The path to be checked for this function app health.
     */
    healthCheckPath?: pulumi.Input<string>;
    /**
     * Specifies if the http2 protocol should be enabled. Defaults to `false`.
     */
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigIpRestriction>[]>;
    /**
     * The Linux FX Version
     */
    linuxFxVersion?: pulumi.Input<string>;
    /**
     * The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
     */
    loadBalancingMode?: pulumi.Input<string>;
    /**
     * The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
     */
    managedPipelineMode?: pulumi.Input<string>;
    /**
     * The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    minimumTlsVersion?: pulumi.Input<string>;
    /**
     * The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
     */
    preWarmedInstanceCount?: pulumi.Input<number>;
    /**
     * Should Remote Debugging be enabled. Defaults to `false`.
     */
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    /**
     * The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`
     */
    remoteDebuggingVersion?: pulumi.Input<string>;
    /**
     * Should Functions Runtime Scale Monitoring be enabled.
     */
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigScmIpRestriction>[]>;
    /**
     * Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    scmMinimumTlsVersion?: pulumi.Input<string>;
    /**
     * The SCM Type in use by the Linux Function App.
     */
    scmType?: pulumi.Input<string>;
    /**
     * Should the Linux Function App `ip_restriction` configuration be used for the SCM also.
     */
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    /**
     * Should the Linux Web App use a 32-bit worker.
     */
    use32BitWorker?: pulumi.Input<boolean>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    /**
     * Should Web Sockets be enabled. Defaults to `false`.
     */
    websocketsEnabled?: pulumi.Input<boolean>;
    /**
     * The number of Workers for this Linux Function App.
     */
    workerCount?: pulumi.Input<number>;
}

export interface LinuxFunctionAppSlotSiteConfigAppServiceLogs {
    /**
     * The amount of disk space to use for logs. Valid values are between `25` and `100`.
     */
    diskQuotaMb?: pulumi.Input<number>;
    /**
     * The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
     */
    retentionPeriodDays?: pulumi.Input<number>;
}

export interface LinuxFunctionAppSlotSiteConfigApplicationStack {
    /**
     * A docker block
     */
    dockers?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigApplicationStackDocker>[]>;
    /**
     * The version of .Net. Possible values are `3.1`, `6.0` and `7.0`
     */
    dotnetVersion?: pulumi.Input<string>;
    /**
     * The version of Java to use. Possible values are `8`, `11`, and `17`
     */
    javaVersion?: pulumi.Input<string>;
    /**
     * The version of Node to use. Possible values include `12`, `14`, `16`, `18` and `20`
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * The version of PowerShell Core to use. Possibles values are `7`, `7.2`, and `7.4`
     */
    powershellCoreVersion?: pulumi.Input<string>;
    /**
     * The version of Python to use. Possible values include `3.12`, `3.11`, `3.10`, `3.9`, `3.8`, and `3.7`.
     */
    pythonVersion?: pulumi.Input<string>;
    useCustomRuntime?: pulumi.Input<boolean>;
    /**
     * Should the DotNet process use an isolated runtime. Defaults to `false`.
     */
    useDotnetIsolatedRuntime?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppSlotSiteConfigApplicationStackDocker {
    /**
     * The name of the Docker image to use.
     */
    imageName: pulumi.Input<string>;
    /**
     * The image tag of the image to use.
     */
    imageTag: pulumi.Input<string>;
    /**
     * The password for the account to use to connect to the registry.
     */
    registryPassword?: pulumi.Input<string>;
    /**
     * The URL of the docker registry.
     */
    registryUrl: pulumi.Input<string>;
    /**
     * The username to use for connections to the registry.
     */
    registryUsername?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface LinuxFunctionAppSlotSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxFunctionAppSlotSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppSlotSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxFunctionAppSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LinuxFunctionAppStickySettings {
    appSettingNames?: pulumi.Input<pulumi.Input<string>[]>;
    connectionStringNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxFunctionAppStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxFunctionAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineAdditionalCapabilities {
    hibernationEnabled?: pulumi.Input<boolean>;
    ultraSsdEnabled?: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineAdminSshKey {
    publicKey: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface LinuxVirtualMachineBootDiagnostics {
    storageAccountUri?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineGalleryApplication {
    automaticUpgradeEnabled?: pulumi.Input<boolean>;
    configurationBlobUri?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    tag?: pulumi.Input<string>;
    treatFailureAsDeploymentFailureEnabled?: pulumi.Input<boolean>;
    versionId: pulumi.Input<string>;
}

export interface LinuxVirtualMachineIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxVirtualMachineOsDisk {
    caching: pulumi.Input<string>;
    diffDiskSettings?: pulumi.Input<inputs.LinuxVirtualMachineOsDiskDiffDiskSettings>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    secureVmDiskEncryptionSetId?: pulumi.Input<string>;
    securityEncryptionType?: pulumi.Input<string>;
    storageAccountType: pulumi.Input<string>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineOsDiskDiffDiskSettings {
    option: pulumi.Input<string>;
    placement?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineOsImageNotification {
    timeout?: pulumi.Input<string>;
}

export interface LinuxVirtualMachinePlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetAdditionalCapabilities {
    ultraSsdEnabled?: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineScaleSetAdminSshKey {
    publicKey: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetAutomaticInstanceRepair {
    action?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    gracePeriod?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicy {
    disableAutomaticRollback: pulumi.Input<boolean>;
    enableAutomaticOsUpgrade: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineScaleSetBootDiagnostics {
    storageAccountUri?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetDataDisk {
    caching: pulumi.Input<string>;
    createOption?: pulumi.Input<string>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb: pulumi.Input<number>;
    lun: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    storageAccountType: pulumi.Input<string>;
    ultraSsdDiskIopsReadWrite?: pulumi.Input<number>;
    ultraSsdDiskMbpsReadWrite?: pulumi.Input<number>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineScaleSetExtension {
    autoUpgradeMinorVersion?: pulumi.Input<boolean>;
    automaticUpgradeEnabled?: pulumi.Input<boolean>;
    forceUpdateTag?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    protectedSettings?: pulumi.Input<string>;
    protectedSettingsFromKeyVault?: pulumi.Input<inputs.LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault>;
    provisionAfterExtensions?: pulumi.Input<pulumi.Input<string>[]>;
    publisher: pulumi.Input<string>;
    settings?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeHandlerVersion: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault {
    secretUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetGalleryApplication {
    configurationBlobUri?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    tag?: pulumi.Input<string>;
    versionId: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetNetworkInterface {
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    enableAcceleratedNetworking?: pulumi.Input<boolean>;
    enableIpForwarding?: pulumi.Input<boolean>;
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration>[]>;
    name: pulumi.Input<string>;
    networkSecurityGroupId?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineScaleSetNetworkInterfaceIpConfiguration {
    applicationGatewayBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerInboundNatRulesIds?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<inputs.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress>[]>;
    subnetId?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress {
    domainNameLabel?: pulumi.Input<string>;
    idleTimeoutInMinutes?: pulumi.Input<number>;
    ipTags?: pulumi.Input<pulumi.Input<inputs.LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag>[]>;
    name: pulumi.Input<string>;
    publicIpPrefixId?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag {
    tag: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetOsDisk {
    caching: pulumi.Input<string>;
    diffDiskSettings?: pulumi.Input<inputs.LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    secureVmDiskEncryptionSetId?: pulumi.Input<string>;
    securityEncryptionType?: pulumi.Input<string>;
    storageAccountType: pulumi.Input<string>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineScaleSetOsDiskDiffDiskSettings {
    option: pulumi.Input<string>;
    placement?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetPlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetRollingUpgradePolicy {
    crossZoneUpgradesEnabled?: pulumi.Input<boolean>;
    maxBatchInstancePercent: pulumi.Input<number>;
    maxUnhealthyInstancePercent: pulumi.Input<number>;
    maxUnhealthyUpgradedInstancePercent: pulumi.Input<number>;
    maximumSurgeInstancesEnabled?: pulumi.Input<boolean>;
    pauseTimeBetweenBatches: pulumi.Input<string>;
    prioritizeUnhealthyInstancesEnabled?: pulumi.Input<boolean>;
}

export interface LinuxVirtualMachineScaleSetScaleIn {
    forceDeletionEnabled?: pulumi.Input<boolean>;
    rule?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetSecret {
    certificates: pulumi.Input<pulumi.Input<inputs.LinuxVirtualMachineScaleSetSecretCertificate>[]>;
    keyVaultId: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetSecretCertificate {
    url: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetSourceImageReference {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetSpotRestore {
    enabled?: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetTerminationNotification {
    enabled: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineScaleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineSecret {
    certificates: pulumi.Input<pulumi.Input<inputs.LinuxVirtualMachineSecretCertificate>[]>;
    keyVaultId: pulumi.Input<string>;
}

export interface LinuxVirtualMachineSecretCertificate {
    url: pulumi.Input<string>;
}

export interface LinuxVirtualMachineSourceImageReference {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface LinuxVirtualMachineTerminationNotification {
    enabled: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface LinuxVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LinuxWebAppAuthSettings {
    activeDirectory?: pulumi.Input<inputs.LinuxWebAppAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.LinuxWebAppAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.LinuxWebAppAuthSettingsGithub>;
    google?: pulumi.Input<inputs.LinuxWebAppAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.LinuxWebAppAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.LinuxWebAppAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface LinuxWebAppAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxWebAppAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxWebAppAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.LinuxWebAppAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface LinuxWebAppAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface LinuxWebAppAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface LinuxWebAppAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface LinuxWebAppAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface LinuxWebAppAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface LinuxWebAppBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.LinuxWebAppBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface LinuxWebAppBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface LinuxWebAppConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface LinuxWebAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxWebAppLogs {
    applicationLogs?: pulumi.Input<inputs.LinuxWebAppLogsApplicationLogs>;
    detailedErrorMessages?: pulumi.Input<boolean>;
    failedRequestTracing?: pulumi.Input<boolean>;
    httpLogs?: pulumi.Input<inputs.LinuxWebAppLogsHttpLogs>;
}

export interface LinuxWebAppLogsApplicationLogs {
    azureBlobStorage?: pulumi.Input<inputs.LinuxWebAppLogsApplicationLogsAzureBlobStorage>;
    fileSystemLevel: pulumi.Input<string>;
}

export interface LinuxWebAppLogsApplicationLogsAzureBlobStorage {
    level: pulumi.Input<string>;
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface LinuxWebAppLogsHttpLogs {
    azureBlobStorage?: pulumi.Input<inputs.LinuxWebAppLogsHttpLogsAzureBlobStorage>;
    fileSystem?: pulumi.Input<inputs.LinuxWebAppLogsHttpLogsFileSystem>;
}

export interface LinuxWebAppLogsHttpLogsAzureBlobStorage {
    retentionInDays?: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface LinuxWebAppLogsHttpLogsFileSystem {
    retentionInDays: pulumi.Input<number>;
    retentionInMb: pulumi.Input<number>;
}

export interface LinuxWebAppSiteConfig {
    alwaysOn?: pulumi.Input<boolean>;
    apiDefinitionUrl?: pulumi.Input<string>;
    apiManagementApiId?: pulumi.Input<string>;
    appCommandLine?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.LinuxWebAppSiteConfigApplicationStack>;
    autoHealSetting?: pulumi.Input<inputs.LinuxWebAppSiteConfigAutoHealSetting>;
    containerRegistryManagedIdentityClientId?: pulumi.Input<string>;
    containerRegistryUseManagedIdentity?: pulumi.Input<boolean>;
    cors?: pulumi.Input<inputs.LinuxWebAppSiteConfigCors>;
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    ftpsState?: pulumi.Input<string>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSiteConfigIpRestriction>[]>;
    linuxFxVersion?: pulumi.Input<string>;
    loadBalancingMode?: pulumi.Input<string>;
    localMysqlEnabled?: pulumi.Input<boolean>;
    managedPipelineMode?: pulumi.Input<string>;
    minimumTlsVersion?: pulumi.Input<string>;
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    remoteDebuggingVersion?: pulumi.Input<string>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSiteConfigScmIpRestriction>[]>;
    scmMinimumTlsVersion?: pulumi.Input<string>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorker?: pulumi.Input<boolean>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
    workerCount?: pulumi.Input<number>;
}

export interface LinuxWebAppSiteConfigApplicationStack {
    dockerImageName?: pulumi.Input<string>;
    dockerRegistryPassword?: pulumi.Input<string>;
    dockerRegistryUrl?: pulumi.Input<string>;
    dockerRegistryUsername?: pulumi.Input<string>;
    dotnetVersion?: pulumi.Input<string>;
    goVersion?: pulumi.Input<string>;
    javaServer?: pulumi.Input<string>;
    javaServerVersion?: pulumi.Input<string>;
    javaVersion?: pulumi.Input<string>;
    nodeVersion?: pulumi.Input<string>;
    phpVersion?: pulumi.Input<string>;
    pythonVersion?: pulumi.Input<string>;
    rubyVersion?: pulumi.Input<string>;
}

export interface LinuxWebAppSiteConfigAutoHealSetting {
    action?: pulumi.Input<inputs.LinuxWebAppSiteConfigAutoHealSettingAction>;
    trigger?: pulumi.Input<inputs.LinuxWebAppSiteConfigAutoHealSettingTrigger>;
}

export interface LinuxWebAppSiteConfigAutoHealSettingAction {
    actionType: pulumi.Input<string>;
    minimumProcessExecutionTime?: pulumi.Input<string>;
}

export interface LinuxWebAppSiteConfigAutoHealSettingTrigger {
    requests?: pulumi.Input<inputs.LinuxWebAppSiteConfigAutoHealSettingTriggerRequests>;
    slowRequest?: pulumi.Input<inputs.LinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequest>;
    slowRequestWithPaths?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequestWithPath>[]>;
    statusCodes?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSiteConfigAutoHealSettingTriggerStatusCode>[]>;
}

export interface LinuxWebAppSiteConfigAutoHealSettingTriggerRequests {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
}

export interface LinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequest {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface LinuxWebAppSiteConfigAutoHealSettingTriggerSlowRequestWithPath {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface LinuxWebAppSiteConfigAutoHealSettingTriggerStatusCode {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    statusCodeRange: pulumi.Input<string>;
    subStatus?: pulumi.Input<number>;
    win32StatusCode?: pulumi.Input<number>;
}

export interface LinuxWebAppSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface LinuxWebAppSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxWebAppSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxWebAppSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface LinuxWebAppSlotAuthSettings {
    activeDirectory?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsGithub>;
    google?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.LinuxWebAppSlotAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface LinuxWebAppSlotAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface LinuxWebAppSlotAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface LinuxWebAppSlotAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface LinuxWebAppSlotBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.LinuxWebAppSlotBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface LinuxWebAppSlotBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface LinuxWebAppSlotIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxWebAppSlotLogs {
    applicationLogs?: pulumi.Input<inputs.LinuxWebAppSlotLogsApplicationLogs>;
    detailedErrorMessages?: pulumi.Input<boolean>;
    failedRequestTracing?: pulumi.Input<boolean>;
    httpLogs?: pulumi.Input<inputs.LinuxWebAppSlotLogsHttpLogs>;
}

export interface LinuxWebAppSlotLogsApplicationLogs {
    azureBlobStorage?: pulumi.Input<inputs.LinuxWebAppSlotLogsApplicationLogsAzureBlobStorage>;
    fileSystemLevel: pulumi.Input<string>;
}

export interface LinuxWebAppSlotLogsApplicationLogsAzureBlobStorage {
    level: pulumi.Input<string>;
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface LinuxWebAppSlotLogsHttpLogs {
    azureBlobStorage?: pulumi.Input<inputs.LinuxWebAppSlotLogsHttpLogsAzureBlobStorage>;
    fileSystem?: pulumi.Input<inputs.LinuxWebAppSlotLogsHttpLogsFileSystem>;
}

export interface LinuxWebAppSlotLogsHttpLogsAzureBlobStorage {
    retentionInDays?: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface LinuxWebAppSlotLogsHttpLogsFileSystem {
    retentionInDays: pulumi.Input<number>;
    retentionInMb: pulumi.Input<number>;
}

export interface LinuxWebAppSlotSiteConfig {
    alwaysOn?: pulumi.Input<boolean>;
    apiDefinitionUrl?: pulumi.Input<string>;
    apiManagementApiId?: pulumi.Input<string>;
    appCommandLine?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.LinuxWebAppSlotSiteConfigApplicationStack>;
    autoHealSetting?: pulumi.Input<inputs.LinuxWebAppSlotSiteConfigAutoHealSetting>;
    autoSwapSlotName?: pulumi.Input<string>;
    containerRegistryManagedIdentityClientId?: pulumi.Input<string>;
    containerRegistryUseManagedIdentity?: pulumi.Input<boolean>;
    cors?: pulumi.Input<inputs.LinuxWebAppSlotSiteConfigCors>;
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    ftpsState?: pulumi.Input<string>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSlotSiteConfigIpRestriction>[]>;
    linuxFxVersion?: pulumi.Input<string>;
    loadBalancingMode?: pulumi.Input<string>;
    localMysqlEnabled?: pulumi.Input<boolean>;
    managedPipelineMode?: pulumi.Input<string>;
    minimumTlsVersion?: pulumi.Input<string>;
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    remoteDebuggingVersion?: pulumi.Input<string>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSlotSiteConfigScmIpRestriction>[]>;
    scmMinimumTlsVersion?: pulumi.Input<string>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorker?: pulumi.Input<boolean>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
    workerCount?: pulumi.Input<number>;
}

export interface LinuxWebAppSlotSiteConfigApplicationStack {
    dockerImageName?: pulumi.Input<string>;
    dockerRegistryPassword?: pulumi.Input<string>;
    dockerRegistryUrl?: pulumi.Input<string>;
    dockerRegistryUsername?: pulumi.Input<string>;
    dotnetVersion?: pulumi.Input<string>;
    goVersion?: pulumi.Input<string>;
    javaServer?: pulumi.Input<string>;
    javaServerVersion?: pulumi.Input<string>;
    javaVersion?: pulumi.Input<string>;
    nodeVersion?: pulumi.Input<string>;
    phpVersion?: pulumi.Input<string>;
    pythonVersion?: pulumi.Input<string>;
    rubyVersion?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotSiteConfigAutoHealSetting {
    action?: pulumi.Input<inputs.LinuxWebAppSlotSiteConfigAutoHealSettingAction>;
    trigger?: pulumi.Input<inputs.LinuxWebAppSlotSiteConfigAutoHealSettingTrigger>;
}

export interface LinuxWebAppSlotSiteConfigAutoHealSettingAction {
    actionType: pulumi.Input<string>;
    minimumProcessExecutionTime?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotSiteConfigAutoHealSettingTrigger {
    requests?: pulumi.Input<inputs.LinuxWebAppSlotSiteConfigAutoHealSettingTriggerRequests>;
    slowRequest?: pulumi.Input<inputs.LinuxWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest>;
    slowRequestWithPaths?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequestWithPath>[]>;
    statusCodes?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode>[]>;
}

export interface LinuxWebAppSlotSiteConfigAutoHealSettingTriggerRequests {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
}

export interface LinuxWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface LinuxWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequestWithPath {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface LinuxWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    statusCodeRange: pulumi.Input<string>;
    subStatus?: pulumi.Input<number>;
    win32StatusCode?: pulumi.Input<number>;
}

export interface LinuxWebAppSlotSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface LinuxWebAppSlotSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSlotSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.LinuxWebAppSlotSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface LinuxWebAppSlotSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppSlotSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface LinuxWebAppSlotStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxWebAppSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LinuxWebAppStickySettings {
    appSettingNames?: pulumi.Input<pulumi.Input<string>[]>;
    connectionStringNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LinuxWebAppStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LinuxWebAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LoadTestEncryption {
    identity: pulumi.Input<inputs.LoadTestEncryptionIdentity>;
    keyUrl: pulumi.Input<string>;
}

export interface LoadTestEncryptionIdentity {
    identityId: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LoadTestIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LoadTestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LocalNetworkGatewayBgpSettings {
    asn: pulumi.Input<number>;
    bgpPeeringAddress: pulumi.Input<string>;
    peerWeight?: pulumi.Input<number>;
}

export interface LocalNetworkGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsClusterCustomerManagedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsClusterIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LogAnalyticsClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsDataExportRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsDatasourceWindowsEventTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsDatasourceWindowsPerformanceCounterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLinkedServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsLinkedStorageAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsQueryPackQueryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsQueryPackTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsSavedSearchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface LogAnalyticsSolutionPlan {
    name?: pulumi.Input<string>;
    product: pulumi.Input<string>;
    promotionCode?: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface LogAnalyticsSolutionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsStorageInsightsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsWorkspaceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LogAnalyticsWorkspaceTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogAnalyticsWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppActionCustomTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppActionHttpRunAfter {
    actionName: pulumi.Input<string>;
    actionResult: pulumi.Input<string>;
}

export interface LogicAppActionHttpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountAgreementGuestIdentity {
    qualifier: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountAgreementHostIdentity {
    qualifier: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountAgreementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountAssemblyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountBatchConfigurationReleaseCriteria {
    batchSize?: pulumi.Input<number>;
    messageCount?: pulumi.Input<number>;
    recurrence?: pulumi.Input<inputs.LogicAppIntegrationAccountBatchConfigurationReleaseCriteriaRecurrence>;
}

export interface LogicAppIntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
    endTime?: pulumi.Input<string>;
    frequency: pulumi.Input<string>;
    interval: pulumi.Input<number>;
    schedule?: pulumi.Input<inputs.LogicAppIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule>;
    startTime?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
    hours?: pulumi.Input<pulumi.Input<number>[]>;
    minutes?: pulumi.Input<pulumi.Input<number>[]>;
    monthDays?: pulumi.Input<pulumi.Input<number>[]>;
    monthlies?: pulumi.Input<pulumi.Input<inputs.LogicAppIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly>[]>;
    weekDays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogicAppIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly {
    week: pulumi.Input<number>;
    weekday: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountBatchConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountCertificateKeyVaultKey {
    keyName: pulumi.Input<string>;
    keyVaultId: pulumi.Input<string>;
    keyVersion?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountMapTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountPartnerBusinessIdentity {
    qualifier: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountPartnerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountSchemaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountSessionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppIntegrationAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppStandardConnectionString {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogicAppStandardIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LogicAppStandardSiteConfig {
    alwaysOn?: pulumi.Input<boolean>;
    appScaleLimit?: pulumi.Input<number>;
    autoSwapSlotName?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.LogicAppStandardSiteConfigCors>;
    dotnetFrameworkVersion?: pulumi.Input<string>;
    elasticInstanceMinimum?: pulumi.Input<number>;
    ftpsState?: pulumi.Input<string>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.LogicAppStandardSiteConfigIpRestriction>[]>;
    linuxFxVersion?: pulumi.Input<string>;
    minTlsVersion?: pulumi.Input<string>;
    preWarmedInstanceCount?: pulumi.Input<number>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.LogicAppStandardSiteConfigScmIpRestriction>[]>;
    scmMinTlsVersion?: pulumi.Input<string>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorkerProcess?: pulumi.Input<boolean>;
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
}

export interface LogicAppStandardSiteConfigCors {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    supportCredentials?: pulumi.Input<boolean>;
}

export interface LogicAppStandardSiteConfigIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.LogicAppStandardSiteConfigIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface LogicAppStandardSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogicAppStandardSiteConfigScmIpRestriction {
    action: pulumi.Input<string>;
    headers: pulumi.Input<pulumi.Input<inputs.LogicAppStandardSiteConfigScmIpRestrictionHeader>[]>;
    ipAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    serviceTag: pulumi.Input<string>;
    virtualNetworkSubnetId: pulumi.Input<string>;
}

export interface LogicAppStandardSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogicAppStandardSiteCredential {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface LogicAppStandardTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppTriggerCustomTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppTriggerHttpRequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppTriggerRecurrenceSchedule {
    atTheseHours?: pulumi.Input<pulumi.Input<number>[]>;
    atTheseMinutes?: pulumi.Input<pulumi.Input<number>[]>;
    onTheseDays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogicAppTriggerRecurrenceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LogicAppWorkflowAccessControl {
    action?: pulumi.Input<inputs.LogicAppWorkflowAccessControlAction>;
    content?: pulumi.Input<inputs.LogicAppWorkflowAccessControlContent>;
    trigger?: pulumi.Input<inputs.LogicAppWorkflowAccessControlTrigger>;
    workflowManagement?: pulumi.Input<inputs.LogicAppWorkflowAccessControlWorkflowManagement>;
}

export interface LogicAppWorkflowAccessControlAction {
    allowedCallerIpAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogicAppWorkflowAccessControlContent {
    allowedCallerIpAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogicAppWorkflowAccessControlTrigger {
    allowedCallerIpAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
    openAuthenticationPolicies?: pulumi.Input<pulumi.Input<inputs.LogicAppWorkflowAccessControlTriggerOpenAuthenticationPolicy>[]>;
}

export interface LogicAppWorkflowAccessControlTriggerOpenAuthenticationPolicy {
    claims: pulumi.Input<pulumi.Input<inputs.LogicAppWorkflowAccessControlTriggerOpenAuthenticationPolicyClaim>[]>;
    name: pulumi.Input<string>;
}

export interface LogicAppWorkflowAccessControlTriggerOpenAuthenticationPolicyClaim {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LogicAppWorkflowAccessControlWorkflowManagement {
    allowedCallerIpAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogicAppWorkflowIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface LogicAppWorkflowTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MachineLearningComputeClusterIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MachineLearningComputeClusterScaleSettings {
    maxNodeCount: pulumi.Input<number>;
    minNodeCount: pulumi.Input<number>;
    scaleDownNodesAfterIdleDuration: pulumi.Input<string>;
}

export interface MachineLearningComputeClusterSsh {
    adminPassword?: pulumi.Input<string>;
    adminUsername: pulumi.Input<string>;
    keyValue?: pulumi.Input<string>;
}

export interface MachineLearningComputeClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MachineLearningComputeInstanceAssignToUser {
    objectId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface MachineLearningComputeInstanceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MachineLearningComputeInstanceSsh {
    port?: pulumi.Input<number>;
    publicKey: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface MachineLearningComputeInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MachineLearningDatastoreBlobstorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MachineLearningDatastoreDatalakeGen2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MachineLearningDatastoreFileshareTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MachineLearningInferenceClusterIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MachineLearningInferenceClusterSsl {
    cert?: pulumi.Input<string>;
    cname?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    leafDomainLabel?: pulumi.Input<string>;
    overwriteExistingDomain?: pulumi.Input<boolean>;
}

export interface MachineLearningInferenceClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MachineLearningSynapseSparkIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MachineLearningSynapseSparkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MachineLearningWorkspaceEncryption {
    keyId: pulumi.Input<string>;
    keyVaultId: pulumi.Input<string>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface MachineLearningWorkspaceFeatureStore {
    computerSparkRuntimeVersion?: pulumi.Input<string>;
    offlineConnectionName?: pulumi.Input<string>;
    onlineConnectionName?: pulumi.Input<string>;
}

export interface MachineLearningWorkspaceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MachineLearningWorkspaceManagedNetwork {
    isolationMode?: pulumi.Input<string>;
}

export interface MachineLearningWorkspaceServerlessCompute {
    publicIpEnabled?: pulumi.Input<boolean>;
    subnetId?: pulumi.Input<string>;
}

export interface MachineLearningWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MaintenanceAssignmentDedicatedHostTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MaintenanceAssignmentDynamicScopeFilter {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    osTypes?: pulumi.Input<pulumi.Input<string>[]>;
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    tagFilter?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.MaintenanceAssignmentDynamicScopeFilterTag>[]>;
}

export interface MaintenanceAssignmentDynamicScopeFilterTag {
    tag: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceAssignmentDynamicScopeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MaintenanceAssignmentVirtualMachineScaleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MaintenanceAssignmentVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MaintenanceConfigurationInstallPatches {
    linuxes?: pulumi.Input<pulumi.Input<inputs.MaintenanceConfigurationInstallPatchesLinux>[]>;
    reboot?: pulumi.Input<string>;
    windows?: pulumi.Input<pulumi.Input<inputs.MaintenanceConfigurationInstallPatchesWindow>[]>;
}

export interface MaintenanceConfigurationInstallPatchesLinux {
    classificationsToIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    packageNamesMaskToExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    packageNamesMaskToIncludes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceConfigurationInstallPatchesWindow {
    classificationsToIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    kbNumbersToExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    kbNumbersToIncludes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MaintenanceConfigurationWindow {
    duration?: pulumi.Input<string>;
    expirationDateTime?: pulumi.Input<string>;
    recurEvery?: pulumi.Input<string>;
    startDateTime: pulumi.Input<string>;
    timeZone: pulumi.Input<string>;
}

export interface ManagedApplicationDefinitionAuthorization {
    roleDefinitionId: pulumi.Input<string>;
    servicePrincipalId: pulumi.Input<string>;
}

export interface ManagedApplicationDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagedApplicationPlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    promotionCode?: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface ManagedApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagedDiskEncryptionSettings {
    diskEncryptionKey: pulumi.Input<inputs.ManagedDiskEncryptionSettingsDiskEncryptionKey>;
    keyEncryptionKey?: pulumi.Input<inputs.ManagedDiskEncryptionSettingsKeyEncryptionKey>;
}

export interface ManagedDiskEncryptionSettingsDiskEncryptionKey {
    secretUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface ManagedDiskEncryptionSettingsKeyEncryptionKey {
    keyUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface ManagedDiskSasTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ManagedDiskTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagedLustreFileSystemEncryptionKey {
    keyUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface ManagedLustreFileSystemHsmSetting {
    containerId: pulumi.Input<string>;
    importPrefix?: pulumi.Input<string>;
    loggingContainerId: pulumi.Input<string>;
}

export interface ManagedLustreFileSystemIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface ManagedLustreFileSystemMaintenanceWindow {
    dayOfWeek: pulumi.Input<string>;
    timeOfDayInUtc: pulumi.Input<string>;
}

export interface ManagedLustreFileSystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementGroupPolicyAssignmentIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ManagementGroupPolicyAssignmentNonComplianceMessage {
    content: pulumi.Input<string>;
    policyDefinitionReferenceId?: pulumi.Input<string>;
}

export interface ManagementGroupPolicyAssignmentOverride {
    selectors?: pulumi.Input<pulumi.Input<inputs.ManagementGroupPolicyAssignmentOverrideSelector>[]>;
    value: pulumi.Input<string>;
}

export interface ManagementGroupPolicyAssignmentOverrideSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind?: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ManagementGroupPolicyAssignmentResourceSelector {
    name?: pulumi.Input<string>;
    selectors: pulumi.Input<pulumi.Input<inputs.ManagementGroupPolicyAssignmentResourceSelectorSelector>[]>;
}

export interface ManagementGroupPolicyAssignmentResourceSelectorSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ManagementGroupPolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementGroupPolicyExemptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementGroupPolicyRemediationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementGroupSubscriptionAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ManagementGroupTemplateDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ManagementLockTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MapsAccountCors {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MapsAccountDataStore {
    storageAccountId?: pulumi.Input<string>;
    uniqueName: pulumi.Input<string>;
}

export interface MapsAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MapsAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MapsCreatorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MarketplaceAgreementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MarketplaceRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MediaServicesAccountFilterPresentationTimeRange {
    endInUnits?: pulumi.Input<number>;
    forceEnd?: pulumi.Input<boolean>;
    liveBackoffInUnits?: pulumi.Input<number>;
    presentationWindowInUnits?: pulumi.Input<number>;
    startInUnits?: pulumi.Input<number>;
    unitTimescaleInMilliseconds: pulumi.Input<number>;
}

export interface MediaServicesAccountFilterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MediaServicesAccountFilterTrackSelection {
    conditions: pulumi.Input<pulumi.Input<inputs.MediaServicesAccountFilterTrackSelectionCondition>[]>;
}

export interface MediaServicesAccountFilterTrackSelectionCondition {
    operation: pulumi.Input<string>;
    property: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MobileNetworkAttachedDataNetworkNetworkAddressPortTranslation {
    icmpPinholeTimeoutInSeconds?: pulumi.Input<number>;
    pinholeMaximumNumber?: pulumi.Input<number>;
    portRange?: pulumi.Input<inputs.MobileNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange>;
    tcpPinholeTimeoutInSeconds?: pulumi.Input<number>;
    tcpPortReuseMinimumHoldTimeInSeconds?: pulumi.Input<number>;
    udpPinholeTimeoutInSeconds?: pulumi.Input<number>;
    udpPortReuseMinimumHoldTimeInSeconds?: pulumi.Input<number>;
}

export interface MobileNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange {
    maximum?: pulumi.Input<number>;
    minimum?: pulumi.Input<number>;
}

export interface MobileNetworkAttachedDataNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkDataNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkPacketCoreControlPlaneIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface MobileNetworkPacketCoreControlPlaneLocalDiagnosticsAccess {
    authenticationType: pulumi.Input<string>;
    httpsServerCertificateUrl?: pulumi.Input<string>;
}

export interface MobileNetworkPacketCoreControlPlanePlatform {
    arcKubernetesClusterId?: pulumi.Input<string>;
    customLocationId?: pulumi.Input<string>;
    edgeDeviceId?: pulumi.Input<string>;
    stackHciClusterId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MobileNetworkPacketCoreControlPlaneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkPacketCoreDataPlaneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkServicePccRule {
    name: pulumi.Input<string>;
    precedence: pulumi.Input<number>;
    qosPolicy?: pulumi.Input<inputs.MobileNetworkServicePccRuleQosPolicy>;
    serviceDataFlowTemplates: pulumi.Input<pulumi.Input<inputs.MobileNetworkServicePccRuleServiceDataFlowTemplate>[]>;
    trafficControlEnabled?: pulumi.Input<boolean>;
}

export interface MobileNetworkServicePccRuleQosPolicy {
    allocationAndRetentionPriorityLevel?: pulumi.Input<number>;
    guaranteedBitRate?: pulumi.Input<inputs.MobileNetworkServicePccRuleQosPolicyGuaranteedBitRate>;
    maximumBitRate: pulumi.Input<inputs.MobileNetworkServicePccRuleQosPolicyMaximumBitRate>;
    preemptionCapability?: pulumi.Input<string>;
    preemptionVulnerability?: pulumi.Input<string>;
    qosIndicator: pulumi.Input<number>;
}

export interface MobileNetworkServicePccRuleQosPolicyGuaranteedBitRate {
    downlink: pulumi.Input<string>;
    uplink: pulumi.Input<string>;
}

export interface MobileNetworkServicePccRuleQosPolicyMaximumBitRate {
    downlink: pulumi.Input<string>;
    uplink: pulumi.Input<string>;
}

export interface MobileNetworkServicePccRuleServiceDataFlowTemplate {
    direction: pulumi.Input<string>;
    name: pulumi.Input<string>;
    ports?: pulumi.Input<pulumi.Input<string>[]>;
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    remoteIpLists: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MobileNetworkServiceServiceQosPolicy {
    allocationAndRetentionPriorityLevel?: pulumi.Input<number>;
    maximumBitRate: pulumi.Input<inputs.MobileNetworkServiceServiceQosPolicyMaximumBitRate>;
    preemptionCapability?: pulumi.Input<string>;
    preemptionVulnerability?: pulumi.Input<string>;
    qosIndicator?: pulumi.Input<number>;
}

export interface MobileNetworkServiceServiceQosPolicyMaximumBitRate {
    downlink: pulumi.Input<string>;
    uplink: pulumi.Input<string>;
}

export interface MobileNetworkServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkSimGroupIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface MobileNetworkSimGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkSimPolicySlice {
    dataNetworks: pulumi.Input<pulumi.Input<inputs.MobileNetworkSimPolicySliceDataNetwork>[]>;
    defaultDataNetworkId: pulumi.Input<string>;
    sliceId: pulumi.Input<string>;
}

export interface MobileNetworkSimPolicySliceDataNetwork {
    additionalAllowedSessionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    allocationAndRetentionPriorityLevel?: pulumi.Input<number>;
    allowedServicesIds: pulumi.Input<pulumi.Input<string>[]>;
    dataNetworkId: pulumi.Input<string>;
    defaultSessionType?: pulumi.Input<string>;
    maxBufferedPackets?: pulumi.Input<number>;
    preemptionCapability?: pulumi.Input<string>;
    preemptionVulnerability?: pulumi.Input<string>;
    qosIndicator: pulumi.Input<number>;
    sessionAggregateMaximumBitRate: pulumi.Input<inputs.MobileNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate>;
}

export interface MobileNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate {
    downlink: pulumi.Input<string>;
    uplink: pulumi.Input<string>;
}

export interface MobileNetworkSimPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkSimPolicyUserEquipmentAggregateMaximumBitRate {
    downlink: pulumi.Input<string>;
    uplink: pulumi.Input<string>;
}

export interface MobileNetworkSimStaticIpConfiguration {
    attachedDataNetworkId: pulumi.Input<string>;
    sliceId: pulumi.Input<string>;
    staticIpv4Address?: pulumi.Input<string>;
}

export interface MobileNetworkSimTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkSiteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkSliceSingleNetworkSliceSelectionAssistanceInformation {
    sliceDifferentiator?: pulumi.Input<string>;
    sliceServiceType: pulumi.Input<number>;
}

export interface MobileNetworkSliceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MobileNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAadDiagnosticSettingEnabledLog {
    category: pulumi.Input<string>;
    retentionPolicy: pulumi.Input<inputs.MonitorAadDiagnosticSettingEnabledLogRetentionPolicy>;
}

export interface MonitorAadDiagnosticSettingEnabledLogRetentionPolicy {
    days?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface MonitorAadDiagnosticSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorActionGroupArmRoleReceiver {
    name: pulumi.Input<string>;
    roleId: pulumi.Input<string>;
    useCommonAlertSchema?: pulumi.Input<boolean>;
}

export interface MonitorActionGroupAutomationRunbookReceiver {
    automationAccountId: pulumi.Input<string>;
    isGlobalRunbook: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    runbookName: pulumi.Input<string>;
    serviceUri: pulumi.Input<string>;
    useCommonAlertSchema?: pulumi.Input<boolean>;
    webhookResourceId: pulumi.Input<string>;
}

export interface MonitorActionGroupAzureAppPushReceiver {
    emailAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface MonitorActionGroupAzureFunctionReceiver {
    functionAppResourceId: pulumi.Input<string>;
    functionName: pulumi.Input<string>;
    httpTriggerUrl: pulumi.Input<string>;
    name: pulumi.Input<string>;
    useCommonAlertSchema?: pulumi.Input<boolean>;
}

export interface MonitorActionGroupEmailReceiver {
    emailAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    useCommonAlertSchema?: pulumi.Input<boolean>;
}

export interface MonitorActionGroupEventHubReceiver {
    eventHubName: pulumi.Input<string>;
    eventHubNamespace: pulumi.Input<string>;
    name: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    useCommonAlertSchema?: pulumi.Input<boolean>;
}

export interface MonitorActionGroupItsmReceiver {
    connectionId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region: pulumi.Input<string>;
    ticketConfiguration: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}

export interface MonitorActionGroupLogicAppReceiver {
    callbackUrl: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    useCommonAlertSchema?: pulumi.Input<boolean>;
}

export interface MonitorActionGroupSmsReceiver {
    countryCode: pulumi.Input<string>;
    name: pulumi.Input<string>;
    phoneNumber: pulumi.Input<string>;
}

export interface MonitorActionGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorActionGroupVoiceReceiver {
    countryCode: pulumi.Input<string>;
    name: pulumi.Input<string>;
    phoneNumber: pulumi.Input<string>;
}

export interface MonitorActionGroupWebhookReceiver {
    aadAuth?: pulumi.Input<inputs.MonitorActionGroupWebhookReceiverAadAuth>;
    name: pulumi.Input<string>;
    serviceUri: pulumi.Input<string>;
    useCommonAlertSchema?: pulumi.Input<boolean>;
}

export interface MonitorActionGroupWebhookReceiverAadAuth {
    identifierUri?: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface MonitorActivityLogAlertAction {
    actionGroupId: pulumi.Input<string>;
    webhookProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface MonitorActivityLogAlertCriteria {
    caller?: pulumi.Input<string>;
    category: pulumi.Input<string>;
    level?: pulumi.Input<string>;
    levels?: pulumi.Input<pulumi.Input<string>[]>;
    operationName?: pulumi.Input<string>;
    recommendationCategory?: pulumi.Input<string>;
    recommendationImpact?: pulumi.Input<string>;
    recommendationType?: pulumi.Input<string>;
    resourceGroup?: pulumi.Input<string>;
    resourceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    resourceHealth?: pulumi.Input<inputs.MonitorActivityLogAlertCriteriaResourceHealth>;
    resourceId?: pulumi.Input<string>;
    resourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    resourceProvider?: pulumi.Input<string>;
    resourceProviders?: pulumi.Input<pulumi.Input<string>[]>;
    resourceType?: pulumi.Input<string>;
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceHealth?: pulumi.Input<inputs.MonitorActivityLogAlertCriteriaServiceHealth>;
    status?: pulumi.Input<string>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
    subStatus?: pulumi.Input<string>;
    subStatuses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorActivityLogAlertCriteriaResourceHealth {
    currents?: pulumi.Input<pulumi.Input<string>[]>;
    previouses?: pulumi.Input<pulumi.Input<string>[]>;
    reasons?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorActivityLogAlertCriteriaServiceHealth {
    events?: pulumi.Input<pulumi.Input<string>[]>;
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    services?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorActivityLogAlertTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleActionGroupCondition {
    alertContext?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionAlertContext>;
    alertRuleId?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionAlertRuleId>;
    alertRuleName?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionAlertRuleName>;
    description?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionDescription>;
    monitorCondition?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionMonitorCondition>;
    monitorService?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionMonitorService>;
    severity?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionSeverity>;
    signalType?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionSignalType>;
    targetResource?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionTargetResource>;
    targetResourceGroup?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionTargetResourceGroup>;
    targetResourceType?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupConditionTargetResourceType>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionAlertContext {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionAlertRuleId {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionAlertRuleName {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionDescription {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionMonitorCondition {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionMonitorService {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionSeverity {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionSignalType {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionTargetResource {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionTargetResourceGroup {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupConditionTargetResourceType {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupSchedule {
    effectiveFrom?: pulumi.Input<string>;
    effectiveUntil?: pulumi.Input<string>;
    recurrence?: pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupScheduleRecurrence>;
    timeZone?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleActionGroupScheduleRecurrence {
    dailies?: pulumi.Input<pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupScheduleRecurrenceDaily>[]>;
    monthlies?: pulumi.Input<pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupScheduleRecurrenceMonthly>[]>;
    weeklies?: pulumi.Input<pulumi.Input<inputs.MonitorAlertProcessingRuleActionGroupScheduleRecurrenceWeekly>[]>;
}

export interface MonitorAlertProcessingRuleActionGroupScheduleRecurrenceDaily {
    endTime: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleActionGroupScheduleRecurrenceMonthly {
    daysOfMonths: pulumi.Input<pulumi.Input<number>[]>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleActionGroupScheduleRecurrenceWeekly {
    daysOfWeeks: pulumi.Input<pulumi.Input<string>[]>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleActionGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleSuppressionCondition {
    alertContext?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionAlertContext>;
    alertRuleId?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionAlertRuleId>;
    alertRuleName?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionAlertRuleName>;
    description?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionDescription>;
    monitorCondition?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionMonitorCondition>;
    monitorService?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionMonitorService>;
    severity?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionSeverity>;
    signalType?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionSignalType>;
    targetResource?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionTargetResource>;
    targetResourceGroup?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionTargetResourceGroup>;
    targetResourceType?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionConditionTargetResourceType>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionAlertContext {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionAlertRuleId {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionAlertRuleName {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionDescription {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionMonitorCondition {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionMonitorService {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionSeverity {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionSignalType {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionTargetResource {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionTargetResourceGroup {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionConditionTargetResourceType {
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionSchedule {
    effectiveFrom?: pulumi.Input<string>;
    effectiveUntil?: pulumi.Input<string>;
    recurrence?: pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionScheduleRecurrence>;
    timeZone?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleSuppressionScheduleRecurrence {
    dailies?: pulumi.Input<pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionScheduleRecurrenceDaily>[]>;
    monthlies?: pulumi.Input<pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionScheduleRecurrenceMonthly>[]>;
    weeklies?: pulumi.Input<pulumi.Input<inputs.MonitorAlertProcessingRuleSuppressionScheduleRecurrenceWeekly>[]>;
}

export interface MonitorAlertProcessingRuleSuppressionScheduleRecurrenceDaily {
    endTime: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleSuppressionScheduleRecurrenceMonthly {
    daysOfMonths: pulumi.Input<pulumi.Input<number>[]>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleSuppressionScheduleRecurrenceWeekly {
    daysOfWeeks: pulumi.Input<pulumi.Input<string>[]>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
}

export interface MonitorAlertProcessingRuleSuppressionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAlertPrometheusRuleGroupRule {
    actions?: pulumi.Input<pulumi.Input<inputs.MonitorAlertPrometheusRuleGroupRuleAction>[]>;
    alert?: pulumi.Input<string>;
    alertResolution?: pulumi.Input<inputs.MonitorAlertPrometheusRuleGroupRuleAlertResolution>;
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    enabled?: pulumi.Input<boolean>;
    expression: pulumi.Input<string>;
    for?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    record?: pulumi.Input<string>;
    severity?: pulumi.Input<number>;
}

export interface MonitorAlertPrometheusRuleGroupRuleAction {
    actionGroupId: pulumi.Input<string>;
    actionProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface MonitorAlertPrometheusRuleGroupRuleAlertResolution {
    autoResolved?: pulumi.Input<boolean>;
    timeToResolve?: pulumi.Input<string>;
}

export interface MonitorAlertPrometheusRuleGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorAutoscaleSettingNotification {
    email?: pulumi.Input<inputs.MonitorAutoscaleSettingNotificationEmail>;
    webhooks?: pulumi.Input<pulumi.Input<inputs.MonitorAutoscaleSettingNotificationWebhook>[]>;
}

export interface MonitorAutoscaleSettingNotificationEmail {
    customEmails?: pulumi.Input<pulumi.Input<string>[]>;
    sendToSubscriptionAdministrator?: pulumi.Input<boolean>;
    sendToSubscriptionCoAdministrator?: pulumi.Input<boolean>;
}

export interface MonitorAutoscaleSettingNotificationWebhook {
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    serviceUri: pulumi.Input<string>;
}

export interface MonitorAutoscaleSettingPredictive {
    lookAheadTime?: pulumi.Input<string>;
    scaleMode: pulumi.Input<string>;
}

export interface MonitorAutoscaleSettingProfile {
    capacity: pulumi.Input<inputs.MonitorAutoscaleSettingProfileCapacity>;
    fixedDate?: pulumi.Input<inputs.MonitorAutoscaleSettingProfileFixedDate>;
    name: pulumi.Input<string>;
    recurrence?: pulumi.Input<inputs.MonitorAutoscaleSettingProfileRecurrence>;
    rules?: pulumi.Input<pulumi.Input<inputs.MonitorAutoscaleSettingProfileRule>[]>;
}

export interface MonitorAutoscaleSettingProfileCapacity {
    default: pulumi.Input<number>;
    maximum: pulumi.Input<number>;
    minimum: pulumi.Input<number>;
}

export interface MonitorAutoscaleSettingProfileFixedDate {
    end: pulumi.Input<string>;
    start: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}

export interface MonitorAutoscaleSettingProfileRecurrence {
    days: pulumi.Input<pulumi.Input<string>[]>;
    hours: pulumi.Input<pulumi.Input<number>[]>;
    minutes: pulumi.Input<pulumi.Input<number>[]>;
    timezone?: pulumi.Input<string>;
}

export interface MonitorAutoscaleSettingProfileRule {
    metricTrigger: pulumi.Input<inputs.MonitorAutoscaleSettingProfileRuleMetricTrigger>;
    scaleAction: pulumi.Input<inputs.MonitorAutoscaleSettingProfileRuleScaleAction>;
}

export interface MonitorAutoscaleSettingProfileRuleMetricTrigger {
    dimensions?: pulumi.Input<pulumi.Input<inputs.MonitorAutoscaleSettingProfileRuleMetricTriggerDimension>[]>;
    divideByInstanceCount?: pulumi.Input<boolean>;
    metricName: pulumi.Input<string>;
    metricNamespace?: pulumi.Input<string>;
    metricResourceId: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    statistic: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
    timeAggregation: pulumi.Input<string>;
    timeGrain: pulumi.Input<string>;
    timeWindow: pulumi.Input<string>;
}

export interface MonitorAutoscaleSettingProfileRuleMetricTriggerDimension {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorAutoscaleSettingProfileRuleScaleAction {
    cooldown: pulumi.Input<string>;
    direction: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<number>;
}

export interface MonitorAutoscaleSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorDataCollectionEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDataFlow {
    builtInTransform?: pulumi.Input<string>;
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    outputStream?: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
    transformKql?: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDataSources {
    dataImport?: pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesDataImport>;
    extensions?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesExtension>[]>;
    iisLogs?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesIisLog>[]>;
    logFiles?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesLogFile>[]>;
    performanceCounters?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesPerformanceCounter>[]>;
    platformTelemetries?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesPlatformTelemetry>[]>;
    prometheusForwarders?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesPrometheusForwarder>[]>;
    syslogs?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesSyslog>[]>;
    windowsEventLogs?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesWindowsEventLog>[]>;
    windowsFirewallLogs?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesWindowsFirewallLog>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesDataImport {
    eventHubDataSources: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesDataImportEventHubDataSource>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesDataImportEventHubDataSource {
    consumerGroup?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    stream: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDataSourcesExtension {
    extensionJson?: pulumi.Input<string>;
    extensionName: pulumi.Input<string>;
    inputDataSources?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesIisLog {
    logDirectories?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesLogFile {
    filePatterns: pulumi.Input<pulumi.Input<string>[]>;
    format: pulumi.Input<string>;
    name: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesLogFileSettings>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesLogFileSettings {
    text: pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesLogFileSettingsText>;
}

export interface MonitorDataCollectionRuleDataSourcesLogFileSettingsText {
    recordStartTimestampFormat: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDataSourcesPerformanceCounter {
    counterSpecifiers: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    samplingFrequencyInSeconds: pulumi.Input<number>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesPlatformTelemetry {
    name: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesPrometheusForwarder {
    labelIncludeFilters?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDataSourcesPrometheusForwarderLabelIncludeFilter>[]>;
    name: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesPrometheusForwarderLabelIncludeFilter {
    label: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDataSourcesSyslog {
    facilityNames: pulumi.Input<pulumi.Input<string>[]>;
    logLevels: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesWindowsEventLog {
    name: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
    xPathQueries: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDataSourcesWindowsFirewallLog {
    name: pulumi.Input<string>;
    streams: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorDataCollectionRuleDestinations {
    azureMonitorMetrics?: pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsAzureMonitorMetrics>;
    eventHub?: pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsEventHub>;
    eventHubDirect?: pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsEventHubDirect>;
    logAnalytics?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsLogAnalytic>[]>;
    monitorAccounts?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsMonitorAccount>[]>;
    storageBlobDirects?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsStorageBlobDirect>[]>;
    storageBlobs?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsStorageBlob>[]>;
    storageTableDirects?: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleDestinationsStorageTableDirect>[]>;
}

export interface MonitorDataCollectionRuleDestinationsAzureMonitorMetrics {
    name: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDestinationsEventHub {
    eventHubId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDestinationsEventHubDirect {
    eventHubId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDestinationsLogAnalytic {
    name: pulumi.Input<string>;
    workspaceResourceId: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDestinationsMonitorAccount {
    monitorAccountId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDestinationsStorageBlob {
    containerName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDestinationsStorageBlobDirect {
    containerName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleDestinationsStorageTableDirect {
    name: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
    tableName: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleStreamDeclaration {
    columns: pulumi.Input<pulumi.Input<inputs.MonitorDataCollectionRuleStreamDeclarationColumn>[]>;
    streamName: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleStreamDeclarationColumn {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorDataCollectionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorDiagnosticSettingEnabledLog {
    category?: pulumi.Input<string>;
    categoryGroup?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    retentionPolicy?: pulumi.Input<inputs.MonitorDiagnosticSettingEnabledLogRetentionPolicy>;
}

export interface MonitorDiagnosticSettingEnabledLogRetentionPolicy {
    days?: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
}

export interface MonitorDiagnosticSettingMetric {
    category: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    retentionPolicy?: pulumi.Input<inputs.MonitorDiagnosticSettingMetricRetentionPolicy>;
}

export interface MonitorDiagnosticSettingMetricRetentionPolicy {
    days?: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
}

export interface MonitorDiagnosticSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorLogProfileRetentionPolicy {
    days?: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
}

export interface MonitorLogProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorMetricAlertAction {
    actionGroupId: pulumi.Input<string>;
    webhookProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface MonitorMetricAlertApplicationInsightsWebTestLocationAvailabilityCriteria {
    componentId: pulumi.Input<string>;
    failedLocationCount: pulumi.Input<number>;
    webTestId: pulumi.Input<string>;
}

export interface MonitorMetricAlertCriteria {
    aggregation: pulumi.Input<string>;
    dimensions?: pulumi.Input<pulumi.Input<inputs.MonitorMetricAlertCriteriaDimension>[]>;
    metricName: pulumi.Input<string>;
    metricNamespace: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    skipMetricValidation?: pulumi.Input<boolean>;
    threshold: pulumi.Input<number>;
}

export interface MonitorMetricAlertCriteriaDimension {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorMetricAlertDynamicCriteria {
    aggregation: pulumi.Input<string>;
    alertSensitivity: pulumi.Input<string>;
    dimensions?: pulumi.Input<pulumi.Input<inputs.MonitorMetricAlertDynamicCriteriaDimension>[]>;
    evaluationFailureCount?: pulumi.Input<number>;
    evaluationTotalCount?: pulumi.Input<number>;
    ignoreDataBefore?: pulumi.Input<string>;
    metricName: pulumi.Input<string>;
    metricNamespace: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    skipMetricValidation?: pulumi.Input<boolean>;
}

export interface MonitorMetricAlertDynamicCriteriaDimension {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorMetricAlertTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorPrivateLinkScopeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorPrivateLinkScopedServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MonitorScheduledQueryRulesAlertAction {
    actionGroups: pulumi.Input<pulumi.Input<string>[]>;
    customWebhookPayload?: pulumi.Input<string>;
    emailSubject?: pulumi.Input<string>;
}

export interface MonitorScheduledQueryRulesAlertTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorScheduledQueryRulesAlertTrigger {
    metricTrigger?: pulumi.Input<inputs.MonitorScheduledQueryRulesAlertTriggerMetricTrigger>;
    operator: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
}

export interface MonitorScheduledQueryRulesAlertTriggerMetricTrigger {
    metricColumn?: pulumi.Input<string>;
    metricTriggerType: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
}

export interface MonitorScheduledQueryRulesAlertV2Action {
    actionGroups?: pulumi.Input<pulumi.Input<string>[]>;
    customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface MonitorScheduledQueryRulesAlertV2Criteria {
    dimensions?: pulumi.Input<pulumi.Input<inputs.MonitorScheduledQueryRulesAlertV2CriteriaDimension>[]>;
    failingPeriods?: pulumi.Input<inputs.MonitorScheduledQueryRulesAlertV2CriteriaFailingPeriods>;
    metricMeasureColumn?: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    query: pulumi.Input<string>;
    resourceIdColumn?: pulumi.Input<string>;
    threshold: pulumi.Input<number>;
    timeAggregationMethod: pulumi.Input<string>;
}

export interface MonitorScheduledQueryRulesAlertV2CriteriaDimension {
    name: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorScheduledQueryRulesAlertV2CriteriaFailingPeriods {
    minimumFailingPeriodsToTriggerAlert: pulumi.Input<number>;
    numberOfEvaluationPeriods: pulumi.Input<number>;
}

export interface MonitorScheduledQueryRulesAlertV2Identity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MonitorScheduledQueryRulesAlertV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorScheduledQueryRulesLogCriteria {
    dimensions: pulumi.Input<pulumi.Input<inputs.MonitorScheduledQueryRulesLogCriteriaDimension>[]>;
    metricName: pulumi.Input<string>;
}

export interface MonitorScheduledQueryRulesLogCriteriaDimension {
    name: pulumi.Input<string>;
    operator?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorScheduledQueryRulesLogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorSmartDetectorAlertRuleActionGroup {
    emailSubject?: pulumi.Input<string>;
    ids: pulumi.Input<pulumi.Input<string>[]>;
    webhookPayload?: pulumi.Input<string>;
}

export interface MonitorSmartDetectorAlertRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MonitorWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlDatabaseExtendedAuditingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlDatabaseIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface MssqlDatabaseImport {
    administratorLogin: pulumi.Input<string>;
    administratorLoginPassword: pulumi.Input<string>;
    authenticationType: pulumi.Input<string>;
    storageAccountId?: pulumi.Input<string>;
    storageKey: pulumi.Input<string>;
    storageKeyType: pulumi.Input<string>;
    storageUri: pulumi.Input<string>;
}

export interface MssqlDatabaseLongTermRetentionPolicy {
    monthlyRetention?: pulumi.Input<string>;
    weekOfYear?: pulumi.Input<number>;
    weeklyRetention?: pulumi.Input<string>;
    yearlyRetention?: pulumi.Input<string>;
}

export interface MssqlDatabaseShortTermRetentionPolicy {
    backupIntervalInHours?: pulumi.Input<number>;
    retentionDays: pulumi.Input<number>;
}

export interface MssqlDatabaseThreatDetectionPolicy {
    disabledAlerts?: pulumi.Input<pulumi.Input<string>[]>;
    emailAccountAdmins?: pulumi.Input<string>;
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    retentionDays?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    storageAccountAccessKey?: pulumi.Input<string>;
    storageEndpoint?: pulumi.Input<string>;
}

export interface MssqlDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResult {
    results: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlElasticpoolPerDatabaseSettings {
    maxCapacity: pulumi.Input<number>;
    minCapacity: pulumi.Input<number>;
}

export interface MssqlElasticpoolSku {
    capacity: pulumi.Input<number>;
    family?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface MssqlElasticpoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlFailoverGroupPartnerServer {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
}

export interface MssqlFailoverGroupReadWriteEndpointFailoverPolicy {
    graceMinutes?: pulumi.Input<number>;
    mode: pulumi.Input<string>;
}

export interface MssqlFailoverGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlJobAgentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlJobCredentialTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlManagedDatabaseLongTermRetentionPolicy {
    monthlyRetention?: pulumi.Input<string>;
    weekOfYear?: pulumi.Input<number>;
    weeklyRetention?: pulumi.Input<string>;
    yearlyRetention?: pulumi.Input<string>;
}

export interface MssqlManagedDatabasePointInTimeRestore {
    restorePointInTime: pulumi.Input<string>;
    sourceDatabaseId: pulumi.Input<string>;
}

export interface MssqlManagedDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlManagedInstanceActiveDirectoryAdministratorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlManagedInstanceFailoverGroupPartnerRegion {
    location: pulumi.Input<string>;
    role: pulumi.Input<string>;
}

export interface MssqlManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy {
    graceMinutes?: pulumi.Input<number>;
    mode: pulumi.Input<string>;
}

export interface MssqlManagedInstanceFailoverGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlManagedInstanceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MssqlManagedInstanceSecurityAlertPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlManagedInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlManagedInstanceTransparentDataEncryptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlManagedInstanceVulnerabilityAssessmentRecurringScans {
    emailSubscriptionAdmins?: pulumi.Input<boolean>;
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
}

export interface MssqlManagedInstanceVulnerabilityAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlOutboundFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MssqlServerAzureadAdministrator {
    azureadAuthenticationOnly?: pulumi.Input<boolean>;
    loginUsername: pulumi.Input<string>;
    objectId: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface MssqlServerDnsAliasTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MssqlServerExtendedAuditingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlServerIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface MssqlServerMicrosoftSupportAuditingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlServerSecurityAlertPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlServerTransparentDataEncryptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlServerVulnerabilityAssessmentRecurringScans {
    emailSubscriptionAdmins?: pulumi.Input<boolean>;
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
}

export interface MssqlServerVulnerabilityAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlVirtualMachineAssessment {
    enabled?: pulumi.Input<boolean>;
    runImmediately?: pulumi.Input<boolean>;
    schedule?: pulumi.Input<inputs.MssqlVirtualMachineAssessmentSchedule>;
}

export interface MssqlVirtualMachineAssessmentSchedule {
    dayOfWeek: pulumi.Input<string>;
    monthlyOccurrence?: pulumi.Input<number>;
    startTime: pulumi.Input<string>;
    weeklyInterval?: pulumi.Input<number>;
}

export interface MssqlVirtualMachineAutoBackup {
    encryptionEnabled?: pulumi.Input<boolean>;
    encryptionPassword?: pulumi.Input<string>;
    manualSchedule?: pulumi.Input<inputs.MssqlVirtualMachineAutoBackupManualSchedule>;
    retentionPeriodInDays: pulumi.Input<number>;
    storageAccountAccessKey: pulumi.Input<string>;
    storageBlobEndpoint: pulumi.Input<string>;
    systemDatabasesBackupEnabled?: pulumi.Input<boolean>;
}

export interface MssqlVirtualMachineAutoBackupManualSchedule {
    daysOfWeeks?: pulumi.Input<pulumi.Input<string>[]>;
    fullBackupFrequency: pulumi.Input<string>;
    fullBackupStartHour: pulumi.Input<number>;
    fullBackupWindowInHours: pulumi.Input<number>;
    logBackupFrequencyInMinutes: pulumi.Input<number>;
}

export interface MssqlVirtualMachineAutoPatching {
    dayOfWeek: pulumi.Input<string>;
    maintenanceWindowDurationInMinutes: pulumi.Input<number>;
    maintenanceWindowStartingHour: pulumi.Input<number>;
}

export interface MssqlVirtualMachineAvailabilityGroupListenerLoadBalancerConfiguration {
    loadBalancerId: pulumi.Input<string>;
    privateIpAddress: pulumi.Input<string>;
    probePort: pulumi.Input<number>;
    sqlVirtualMachineIds: pulumi.Input<pulumi.Input<string>[]>;
    subnetId: pulumi.Input<string>;
}

export interface MssqlVirtualMachineAvailabilityGroupListenerMultiSubnetIpConfiguration {
    privateIpAddress: pulumi.Input<string>;
    sqlVirtualMachineId: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface MssqlVirtualMachineAvailabilityGroupListenerReplica {
    commit: pulumi.Input<string>;
    failoverMode: pulumi.Input<string>;
    readableSecondary: pulumi.Input<string>;
    role: pulumi.Input<string>;
    sqlVirtualMachineId: pulumi.Input<string>;
}

export interface MssqlVirtualMachineAvailabilityGroupListenerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MssqlVirtualMachineGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlVirtualMachineGroupWsfcDomainProfile {
    clusterBootstrapAccountName?: pulumi.Input<string>;
    clusterOperatorAccountName?: pulumi.Input<string>;
    clusterSubnetType: pulumi.Input<string>;
    fqdn: pulumi.Input<string>;
    organizationalUnitPath?: pulumi.Input<string>;
    sqlServiceAccountName?: pulumi.Input<string>;
    storageAccountPrimaryKey?: pulumi.Input<string>;
    storageAccountUrl?: pulumi.Input<string>;
}

export interface MssqlVirtualMachineKeyVaultCredential {
    keyVaultUrl: pulumi.Input<string>;
    name: pulumi.Input<string>;
    servicePrincipalName: pulumi.Input<string>;
    servicePrincipalSecret: pulumi.Input<string>;
}

export interface MssqlVirtualMachineSqlInstance {
    adhocWorkloadsOptimizationEnabled?: pulumi.Input<boolean>;
    collation?: pulumi.Input<string>;
    instantFileInitializationEnabled?: pulumi.Input<boolean>;
    lockPagesInMemoryEnabled?: pulumi.Input<boolean>;
    maxDop?: pulumi.Input<number>;
    maxServerMemoryMb?: pulumi.Input<number>;
    minServerMemoryMb?: pulumi.Input<number>;
}

export interface MssqlVirtualMachineStorageConfiguration {
    dataSettings?: pulumi.Input<inputs.MssqlVirtualMachineStorageConfigurationDataSettings>;
    diskType: pulumi.Input<string>;
    logSettings?: pulumi.Input<inputs.MssqlVirtualMachineStorageConfigurationLogSettings>;
    storageWorkloadType: pulumi.Input<string>;
    systemDbOnDataDiskEnabled?: pulumi.Input<boolean>;
    tempDbSettings?: pulumi.Input<inputs.MssqlVirtualMachineStorageConfigurationTempDbSettings>;
}

export interface MssqlVirtualMachineStorageConfigurationDataSettings {
    defaultFilePath: pulumi.Input<string>;
    luns: pulumi.Input<pulumi.Input<number>[]>;
}

export interface MssqlVirtualMachineStorageConfigurationLogSettings {
    defaultFilePath: pulumi.Input<string>;
    luns: pulumi.Input<pulumi.Input<number>[]>;
}

export interface MssqlVirtualMachineStorageConfigurationTempDbSettings {
    dataFileCount?: pulumi.Input<number>;
    dataFileGrowthInMb?: pulumi.Input<number>;
    dataFileSizeMb?: pulumi.Input<number>;
    defaultFilePath: pulumi.Input<string>;
    logFileGrowthMb?: pulumi.Input<number>;
    logFileSizeMb?: pulumi.Input<number>;
    luns: pulumi.Input<pulumi.Input<number>[]>;
}

export interface MssqlVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MssqlVirtualMachineWsfcDomainCredential {
    clusterBootstrapAccountPassword: pulumi.Input<string>;
    clusterOperatorAccountPassword: pulumi.Input<string>;
    sqlServiceAccountPassword: pulumi.Input<string>;
}

export interface MssqlVirtualNetworkRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlFlexibleDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface MysqlFlexibleServerActiveDirectoryAdministratorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlFlexibleServerConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlFlexibleServerCustomerManagedKey {
    geoBackupKeyVaultKeyId?: pulumi.Input<string>;
    geoBackupUserAssignedIdentityId?: pulumi.Input<string>;
    keyVaultKeyId?: pulumi.Input<string>;
    primaryUserAssignedIdentityId?: pulumi.Input<string>;
}

export interface MysqlFlexibleServerFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MysqlFlexibleServerHighAvailability {
    mode: pulumi.Input<string>;
    standbyAvailabilityZone?: pulumi.Input<string>;
}

export interface MysqlFlexibleServerIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface MysqlFlexibleServerMaintenanceWindow {
    dayOfWeek?: pulumi.Input<number>;
    startHour?: pulumi.Input<number>;
    startMinute?: pulumi.Input<number>;
}

export interface MysqlFlexibleServerStorage {
    autoGrowEnabled?: pulumi.Input<boolean>;
    ioScalingEnabled?: pulumi.Input<boolean>;
    iops?: pulumi.Input<number>;
    sizeGb?: pulumi.Input<number>;
}

export interface MysqlFlexibleServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NatGatewayPublicIpAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NatGatewayPublicIpPrefixAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NatGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetappAccountActiveDirectory {
    /**
     * If enabled, AES encryption will be enabled for SMB communication.
     */
    aesEncryptionEnabled?: pulumi.Input<boolean>;
    dnsServers: pulumi.Input<pulumi.Input<string>[]>;
    domain: pulumi.Input<string>;
    /**
     * Name of the active directory machine. This optional parameter is used only while creating kerberos volume.
     */
    kerberosAdName?: pulumi.Input<string>;
    /**
     * IP address of the KDC server (usually same the DC). This optional parameter is used only while creating kerberos volume.
     */
    kerberosKdcIp?: pulumi.Input<string>;
    /**
     * Specifies whether or not the LDAP traffic needs to be secured via TLS.
     */
    ldapOverTlsEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether or not the LDAP traffic needs to be signed.
     */
    ldapSigningEnabled?: pulumi.Input<boolean>;
    /**
     * If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes.
     */
    localNfsUsersWithLdapAllowed?: pulumi.Input<boolean>;
    /**
     * The Organizational Unit (OU) within the Windows Active Directory where machines will be created. If blank, defaults to 'CN=Computers'
     */
    organizationalUnit?: pulumi.Input<string>;
    password: pulumi.Input<string>;
    /**
     * When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.
     */
    serverRootCaCertificate?: pulumi.Input<string>;
    /**
     * The Active Directory site the service will limit Domain Controller discovery to. If blank, defaults to 'Default-First-Site-Name'
     */
    siteName?: pulumi.Input<string>;
    smbServerName: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface NetappAccountEncryptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetappAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface NetappAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetappPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetappSnapshotPolicyDailySchedule {
    hour: pulumi.Input<number>;
    minute: pulumi.Input<number>;
    snapshotsToKeep: pulumi.Input<number>;
}

export interface NetappSnapshotPolicyHourlySchedule {
    minute: pulumi.Input<number>;
    snapshotsToKeep: pulumi.Input<number>;
}

export interface NetappSnapshotPolicyMonthlySchedule {
    daysOfMonths: pulumi.Input<pulumi.Input<number>[]>;
    hour: pulumi.Input<number>;
    minute: pulumi.Input<number>;
    snapshotsToKeep: pulumi.Input<number>;
}

export interface NetappSnapshotPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetappSnapshotPolicyWeeklySchedule {
    daysOfWeeks: pulumi.Input<pulumi.Input<string>[]>;
    hour: pulumi.Input<number>;
    minute: pulumi.Input<number>;
    snapshotsToKeep: pulumi.Input<number>;
}

export interface NetappSnapshotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetappVolumeDataProtectionReplication {
    endpointType?: pulumi.Input<string>;
    remoteVolumeLocation: pulumi.Input<string>;
    remoteVolumeResourceId: pulumi.Input<string>;
    replicationFrequency: pulumi.Input<string>;
}

export interface NetappVolumeDataProtectionSnapshotPolicy {
    snapshotPolicyId: pulumi.Input<string>;
}

export interface NetappVolumeExportPolicyRule {
    allowedClients: pulumi.Input<pulumi.Input<string>[]>;
    kerberos5ReadOnlyEnabled?: pulumi.Input<boolean>;
    kerberos5ReadWriteEnabled?: pulumi.Input<boolean>;
    kerberos5iReadOnlyEnabled?: pulumi.Input<boolean>;
    kerberos5iReadWriteEnabled?: pulumi.Input<boolean>;
    kerberos5pReadOnlyEnabled?: pulumi.Input<boolean>;
    kerberos5pReadWriteEnabled?: pulumi.Input<boolean>;
    protocolsEnableds?: pulumi.Input<pulumi.Input<string>[]>;
    rootAccessEnabled?: pulumi.Input<boolean>;
    ruleIndex: pulumi.Input<number>;
    unixReadOnly?: pulumi.Input<boolean>;
    unixReadWrite?: pulumi.Input<boolean>;
}

export interface NetappVolumeGroupSapHanaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetappVolumeGroupSapHanaVolume {
    capacityPoolId: pulumi.Input<string>;
    dataProtectionReplication?: pulumi.Input<inputs.NetappVolumeGroupSapHanaVolumeDataProtectionReplication>;
    dataProtectionSnapshotPolicy?: pulumi.Input<inputs.NetappVolumeGroupSapHanaVolumeDataProtectionSnapshotPolicy>;
    exportPolicyRules: pulumi.Input<pulumi.Input<inputs.NetappVolumeGroupSapHanaVolumeExportPolicyRule>[]>;
    id?: pulumi.Input<string>;
    mountIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    protocols: pulumi.Input<pulumi.Input<string>[]>;
    proximityPlacementGroupId?: pulumi.Input<string>;
    securityStyle: pulumi.Input<string>;
    serviceLevel: pulumi.Input<string>;
    snapshotDirectoryVisible: pulumi.Input<boolean>;
    storageQuotaInGb: pulumi.Input<number>;
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    throughputInMibps: pulumi.Input<number>;
    volumePath: pulumi.Input<string>;
    volumeSpecName: pulumi.Input<string>;
}

export interface NetappVolumeGroupSapHanaVolumeDataProtectionReplication {
    endpointType?: pulumi.Input<string>;
    remoteVolumeLocation: pulumi.Input<string>;
    remoteVolumeResourceId: pulumi.Input<string>;
    replicationFrequency: pulumi.Input<string>;
}

export interface NetappVolumeGroupSapHanaVolumeDataProtectionSnapshotPolicy {
    snapshotPolicyId: pulumi.Input<string>;
}

export interface NetappVolumeGroupSapHanaVolumeExportPolicyRule {
    allowedClients: pulumi.Input<string>;
    nfsv3Enabled: pulumi.Input<boolean>;
    nfsv41Enabled: pulumi.Input<boolean>;
    rootAccessEnabled?: pulumi.Input<boolean>;
    ruleIndex: pulumi.Input<number>;
    unixReadOnly?: pulumi.Input<boolean>;
    unixReadWrite?: pulumi.Input<boolean>;
}

export interface NetappVolumeQuotaRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetappVolumeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkConnectionMonitorEndpoint {
    address?: pulumi.Input<string>;
    coverageLevel?: pulumi.Input<string>;
    excludedIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    filter?: pulumi.Input<inputs.NetworkConnectionMonitorEndpointFilter>;
    includedIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    targetResourceId?: pulumi.Input<string>;
    targetResourceType?: pulumi.Input<string>;
}

export interface NetworkConnectionMonitorEndpointFilter {
    items?: pulumi.Input<pulumi.Input<inputs.NetworkConnectionMonitorEndpointFilterItem>[]>;
    type?: pulumi.Input<string>;
}

export interface NetworkConnectionMonitorEndpointFilterItem {
    address?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface NetworkConnectionMonitorTestConfiguration {
    httpConfiguration?: pulumi.Input<inputs.NetworkConnectionMonitorTestConfigurationHttpConfiguration>;
    icmpConfiguration?: pulumi.Input<inputs.NetworkConnectionMonitorTestConfigurationIcmpConfiguration>;
    name: pulumi.Input<string>;
    preferredIpVersion?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    successThreshold?: pulumi.Input<inputs.NetworkConnectionMonitorTestConfigurationSuccessThreshold>;
    tcpConfiguration?: pulumi.Input<inputs.NetworkConnectionMonitorTestConfigurationTcpConfiguration>;
    testFrequencyInSeconds?: pulumi.Input<number>;
}

export interface NetworkConnectionMonitorTestConfigurationHttpConfiguration {
    method?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    preferHttps?: pulumi.Input<boolean>;
    requestHeaders?: pulumi.Input<pulumi.Input<inputs.NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader>[]>;
    validStatusCodeRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkConnectionMonitorTestConfigurationHttpConfigurationRequestHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NetworkConnectionMonitorTestConfigurationIcmpConfiguration {
    traceRouteEnabled?: pulumi.Input<boolean>;
}

export interface NetworkConnectionMonitorTestConfigurationSuccessThreshold {
    checksFailedPercent?: pulumi.Input<number>;
    roundTripTimeMs?: pulumi.Input<number>;
}

export interface NetworkConnectionMonitorTestConfigurationTcpConfiguration {
    destinationPortBehavior?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    traceRouteEnabled?: pulumi.Input<boolean>;
}

export interface NetworkConnectionMonitorTestGroup {
    destinationEndpoints: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    sourceEndpoints: pulumi.Input<pulumi.Input<string>[]>;
    testConfigurationNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkConnectionMonitorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkDdosProtectionPlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFunctionAzureTrafficCollectorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkFunctionCollectorPolicyIpfxEmission {
    destinationTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkFunctionCollectorPolicyIpfxIngestion {
    sourceResourceIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkFunctionCollectorPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetworkInterfaceApplicationSecurityGroupAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetworkInterfaceBackendAddressPoolAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetworkInterfaceIpConfiguration {
    gatewayLoadBalancerFrontendIpConfigurationId?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAddressAllocation: pulumi.Input<string>;
    privateIpAddressVersion?: pulumi.Input<string>;
    publicIpAddressId?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface NetworkInterfaceNatRuleAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetworkInterfaceSecurityGroupAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetworkInterfaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerAdminRuleCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerAdminRuleDestination {
    addressPrefix: pulumi.Input<string>;
    addressPrefixType: pulumi.Input<string>;
}

export interface NetworkManagerAdminRuleSource {
    addressPrefix: pulumi.Input<string>;
    addressPrefixType: pulumi.Input<string>;
}

export interface NetworkManagerAdminRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerConnectivityConfigurationAppliesToGroup {
    globalMeshEnabled?: pulumi.Input<boolean>;
    groupConnectivity: pulumi.Input<string>;
    networkGroupId: pulumi.Input<string>;
    useHubGateway?: pulumi.Input<boolean>;
}

export interface NetworkManagerConnectivityConfigurationHub {
    resourceId: pulumi.Input<string>;
    resourceType: pulumi.Input<string>;
}

export interface NetworkManagerConnectivityConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerCrossTenantScope {
    managementGroups: pulumi.Input<pulumi.Input<string>[]>;
    subscriptions: pulumi.Input<pulumi.Input<string>[]>;
    tenantId: pulumi.Input<string>;
}

export interface NetworkManagerDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerManagementGroupConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerNetworkGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerScope {
    managementGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    subscriptionIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkManagerScopeConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerSecurityAdminConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerStaticMemberTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetworkManagerSubscriptionConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkManagerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkPacketCaptureFilter {
    localIpAddress?: pulumi.Input<string>;
    localPort?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    remoteIpAddress?: pulumi.Input<string>;
    remotePort?: pulumi.Input<string>;
}

export interface NetworkPacketCaptureStorageLocation {
    filePath?: pulumi.Input<string>;
    storageAccountId?: pulumi.Input<string>;
    storagePath?: pulumi.Input<string>;
}

export interface NetworkPacketCaptureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NetworkProfileContainerNetworkInterface {
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.NetworkProfileContainerNetworkInterfaceIpConfiguration>[]>;
    name: pulumi.Input<string>;
}

export interface NetworkProfileContainerNetworkInterfaceIpConfiguration {
    name: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface NetworkProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkSecurityGroupSecurityRule {
    access: pulumi.Input<string>;
    description: pulumi.Input<string>;
    destinationAddressPrefix: pulumi.Input<string>;
    destinationAddressPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    destinationApplicationSecurityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    destinationPortRange: pulumi.Input<string>;
    destinationPortRanges: pulumi.Input<pulumi.Input<string>[]>;
    direction: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    sourceAddressPrefix: pulumi.Input<string>;
    sourceAddressPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    sourceApplicationSecurityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    sourcePortRange: pulumi.Input<string>;
    sourcePortRanges: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkSecurityGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkSecurityRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkWatcherFlowLogRetentionPolicy {
    days: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
}

export interface NetworkWatcherFlowLogTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkWatcherFlowLogTrafficAnalytics {
    enabled: pulumi.Input<boolean>;
    intervalInMinutes?: pulumi.Input<number>;
    workspaceId: pulumi.Input<string>;
    workspaceRegion: pulumi.Input<string>;
    workspaceResourceId: pulumi.Input<string>;
}

export interface NetworkWatcherTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NewRelicMonitorIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface NewRelicMonitorPlan {
    billingCycle?: pulumi.Input<string>;
    effectiveDate: pulumi.Input<string>;
    planId?: pulumi.Input<string>;
    usageType?: pulumi.Input<string>;
}

export interface NewRelicMonitorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface NewRelicMonitorUser {
    email: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    phoneNumber: pulumi.Input<string>;
}

export interface NewRelicTagRuleLogTagFilter {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NewRelicTagRuleMetricTagFilter {
    action: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NewRelicTagRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NginxCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NginxConfigurationConfigFile {
    content: pulumi.Input<string>;
    virtualPath: pulumi.Input<string>;
}

export interface NginxConfigurationProtectedFile {
    content: pulumi.Input<string>;
    virtualPath: pulumi.Input<string>;
}

export interface NginxConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NginxDeploymentAutoScaleProfile {
    maxCapacity: pulumi.Input<number>;
    minCapacity: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface NginxDeploymentFrontendPrivate {
    allocationMethod: pulumi.Input<string>;
    ipAddress: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface NginxDeploymentFrontendPublic {
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NginxDeploymentIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface NginxDeploymentLoggingStorageAccount {
    containerName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface NginxDeploymentNetworkInterface {
    subnetId: pulumi.Input<string>;
}

export interface NginxDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NotificationHubApnsCredential {
    applicationMode: pulumi.Input<string>;
    bundleId: pulumi.Input<string>;
    keyId: pulumi.Input<string>;
    teamId: pulumi.Input<string>;
    token: pulumi.Input<string>;
}

export interface NotificationHubAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NotificationHubBrowserCredential {
    subject: pulumi.Input<string>;
    vapidPrivateKey: pulumi.Input<string>;
    vapidPublicKey: pulumi.Input<string>;
}

export interface NotificationHubGcmCredential {
    apiKey: pulumi.Input<string>;
}

export interface NotificationHubNamespaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NotificationHubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OrbitalContactProfileLink {
    channels: pulumi.Input<pulumi.Input<inputs.OrbitalContactProfileLinkChannel>[]>;
    direction: pulumi.Input<string>;
    name: pulumi.Input<string>;
    polarization: pulumi.Input<string>;
}

export interface OrbitalContactProfileLinkChannel {
    bandwidthMhz: pulumi.Input<number>;
    centerFrequencyMhz: pulumi.Input<number>;
    demodulationConfiguration?: pulumi.Input<string>;
    endPoints: pulumi.Input<pulumi.Input<inputs.OrbitalContactProfileLinkChannelEndPoint>[]>;
    modulationConfiguration?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface OrbitalContactProfileLinkChannelEndPoint {
    endPointName: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    port: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface OrbitalContactProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OrbitalContactTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface OrbitalSpacecraftLink {
    bandwidthMhz: pulumi.Input<number>;
    centerFrequencyMhz: pulumi.Input<number>;
    direction: pulumi.Input<string>;
    name: pulumi.Input<string>;
    polarization: pulumi.Input<string>;
}

export interface OrbitalSpacecraftTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetAdditionalCapabilities {
    ultraSsdEnabled?: pulumi.Input<boolean>;
}

export interface OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair {
    action?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    gracePeriod?: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetBootDiagnostics {
    storageAccountUri?: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetDataDisk {
    caching: pulumi.Input<string>;
    createOption?: pulumi.Input<string>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    lun?: pulumi.Input<number>;
    storageAccountType: pulumi.Input<string>;
    ultraSsdDiskIopsReadWrite?: pulumi.Input<number>;
    ultraSsdDiskMbpsReadWrite?: pulumi.Input<number>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface OrchestratedVirtualMachineScaleSetExtension {
    autoUpgradeMinorVersionEnabled?: pulumi.Input<boolean>;
    extensionsToProvisionAfterVmCreations?: pulumi.Input<pulumi.Input<string>[]>;
    failureSuppressionEnabled?: pulumi.Input<boolean>;
    forceExtensionExecutionOnChange?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    protectedSettings?: pulumi.Input<string>;
    protectedSettingsFromKeyVault?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault>;
    publisher: pulumi.Input<string>;
    settings?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeHandlerVersion: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault {
    secretUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetNetworkInterface {
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    enableAcceleratedNetworking?: pulumi.Input<boolean>;
    enableIpForwarding?: pulumi.Input<boolean>;
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration>[]>;
    name: pulumi.Input<string>;
    networkSecurityGroupId?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
}

export interface OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfiguration {
    applicationGatewayBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress>[]>;
    subnetId?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress {
    domainNameLabel?: pulumi.Input<string>;
    idleTimeoutInMinutes?: pulumi.Input<number>;
    ipTags?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag>[]>;
    name: pulumi.Input<string>;
    publicIpPrefixId?: pulumi.Input<string>;
    skuName?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag {
    tag: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsDisk {
    caching: pulumi.Input<string>;
    diffDiskSettings?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettings>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    storageAccountType: pulumi.Input<string>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettings {
    option: pulumi.Input<string>;
    placement?: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfile {
    customData?: pulumi.Input<string>;
    linuxConfiguration?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileLinuxConfiguration>;
    windowsConfiguration?: pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileLinuxConfiguration {
    adminPassword?: pulumi.Input<string>;
    adminSshKeys?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey>[]>;
    adminUsername: pulumi.Input<string>;
    computerNamePrefix?: pulumi.Input<string>;
    disablePasswordAuthentication?: pulumi.Input<boolean>;
    patchAssessmentMode?: pulumi.Input<string>;
    patchMode?: pulumi.Input<string>;
    provisionVmAgent?: pulumi.Input<boolean>;
    secrets?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret>[]>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationAdminSshKey {
    publicKey: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecret {
    certificates: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate>[]>;
    keyVaultId: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileLinuxConfigurationSecretCertificate {
    url: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileWindowsConfiguration {
    additionalUnattendContents?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent>[]>;
    adminPassword: pulumi.Input<string>;
    adminUsername: pulumi.Input<string>;
    computerNamePrefix?: pulumi.Input<string>;
    enableAutomaticUpdates?: pulumi.Input<boolean>;
    hotpatchingEnabled?: pulumi.Input<boolean>;
    patchAssessmentMode?: pulumi.Input<string>;
    patchMode?: pulumi.Input<string>;
    provisionVmAgent?: pulumi.Input<boolean>;
    secrets?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret>[]>;
    timezone?: pulumi.Input<string>;
    winrmListeners?: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener>[]>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationAdditionalUnattendContent {
    content: pulumi.Input<string>;
    setting: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecret {
    certificates: pulumi.Input<pulumi.Input<inputs.OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate>[]>;
    keyVaultId: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationSecretCertificate {
    store: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetOsProfileWindowsConfigurationWinrmListener {
    certificateUrl?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetPlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetPriorityMix {
    baseRegularCount?: pulumi.Input<number>;
    regularPercentageAboveBase?: pulumi.Input<number>;
}

export interface OrchestratedVirtualMachineScaleSetSourceImageReference {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetTerminationNotification {
    enabled: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface OrchestratedVirtualMachineScaleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoLocalRulestackCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoLocalRulestackFqdnListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoLocalRulestackOutboundTrustCertificateAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PaloAltoLocalRulestackOutboundUntrustCertificateAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PaloAltoLocalRulestackPrefixListTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoLocalRulestackRuleCategory {
    customUrls: pulumi.Input<pulumi.Input<string>[]>;
    feeds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PaloAltoLocalRulestackRuleDestination {
    cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    feeds?: pulumi.Input<pulumi.Input<string>[]>;
    localRulestackFqdnListIds?: pulumi.Input<pulumi.Input<string>[]>;
    localRulestackPrefixListIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PaloAltoLocalRulestackRuleSource {
    cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    feeds?: pulumi.Input<pulumi.Input<string>[]>;
    localRulestackPrefixListIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PaloAltoLocalRulestackRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoLocalRulestackTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubLocalRulestackDestinationNat {
    backendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualHubLocalRulestackDestinationNatBackendConfig>;
    frontendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualHubLocalRulestackDestinationNatFrontendConfig>;
    name: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubLocalRulestackDestinationNatBackendConfig {
    port: pulumi.Input<number>;
    publicIpAddress: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubLocalRulestackDestinationNatFrontendConfig {
    port: pulumi.Input<number>;
    publicIpAddressId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubLocalRulestackDnsSettings {
    azureDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    useAzureDns?: pulumi.Input<boolean>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubLocalRulestackNetworkProfile {
    egressNatIpAddressIds?: pulumi.Input<pulumi.Input<string>[]>;
    egressNatIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipOfTrustForUserDefinedRoutes?: pulumi.Input<string>;
    networkVirtualApplianceId: pulumi.Input<string>;
    publicIpAddressIds: pulumi.Input<pulumi.Input<string>[]>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    trustedAddressRanges?: pulumi.Input<pulumi.Input<string>[]>;
    trustedSubnetId?: pulumi.Input<string>;
    untrustedSubnetId?: pulumi.Input<string>;
    virtualHubId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubLocalRulestackTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubPanoramaDestinationNat {
    backendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualHubPanoramaDestinationNatBackendConfig>;
    frontendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualHubPanoramaDestinationNatFrontendConfig>;
    name: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubPanoramaDestinationNatBackendConfig {
    port: pulumi.Input<number>;
    publicIpAddress: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubPanoramaDestinationNatFrontendConfig {
    port: pulumi.Input<number>;
    publicIpAddressId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubPanoramaDnsSettings {
    azureDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    useAzureDns?: pulumi.Input<boolean>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubPanoramaNetworkProfile {
    egressNatIpAddressIds?: pulumi.Input<pulumi.Input<string>[]>;
    egressNatIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipOfTrustForUserDefinedRoutes?: pulumi.Input<string>;
    networkVirtualApplianceId: pulumi.Input<string>;
    publicIpAddressIds: pulumi.Input<pulumi.Input<string>[]>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    trustedAddressRanges?: pulumi.Input<pulumi.Input<string>[]>;
    trustedSubnetId?: pulumi.Input<string>;
    untrustedSubnetId?: pulumi.Input<string>;
    virtualHubId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubPanoramaPanorama {
    deviceGroupName: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    panoramaServer1: pulumi.Input<string>;
    panoramaServer2: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
    virtualMachineSshKey: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualHubPanoramaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackDestinationNat {
    backendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfig>;
    frontendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatFrontendConfig>;
    name: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfig {
    port: pulumi.Input<number>;
    publicIpAddress: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatFrontendConfig {
    port: pulumi.Input<number>;
    publicIpAddressId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackDnsSettings {
    azureDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    useAzureDns?: pulumi.Input<boolean>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfile {
    egressNatIpAddressIds?: pulumi.Input<pulumi.Input<string>[]>;
    egressNatIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    publicIpAddressIds: pulumi.Input<pulumi.Input<string>[]>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    trustedAddressRanges?: pulumi.Input<pulumi.Input<string>[]>;
    vnetConfiguration: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfiguration>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfiguration {
    ipOfTrustForUserDefinedRoutes?: pulumi.Input<string>;
    trustedSubnetId?: pulumi.Input<string>;
    untrustedSubnetId?: pulumi.Input<string>;
    virtualNetworkId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNat {
    backendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNatBackendConfig>;
    frontendConfig?: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNatFrontendConfig>;
    name: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNatBackendConfig {
    port: pulumi.Input<number>;
    publicIpAddress: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDestinationNatFrontendConfig {
    port: pulumi.Input<number>;
    publicIpAddressId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaDnsSettings {
    azureDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    useAzureDns?: pulumi.Input<boolean>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaNetworkProfile {
    egressNatIpAddressIds?: pulumi.Input<pulumi.Input<string>[]>;
    egressNatIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    publicIpAddressIds: pulumi.Input<pulumi.Input<string>[]>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    trustedAddressRanges?: pulumi.Input<pulumi.Input<string>[]>;
    vnetConfiguration: pulumi.Input<inputs.PaloAltoNextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfiguration>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfiguration {
    ipOfTrustForUserDefinedRoutes?: pulumi.Input<string>;
    trustedSubnetId?: pulumi.Input<string>;
    untrustedSubnetId?: pulumi.Input<string>;
    virtualNetworkId: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaPanorama {
    deviceGroupName: pulumi.Input<string>;
    hostName: pulumi.Input<string>;
    name: pulumi.Input<string>;
    panoramaServer1: pulumi.Input<string>;
    panoramaServer2: pulumi.Input<string>;
    templateName: pulumi.Input<string>;
    virtualMachineSshKey: pulumi.Input<string>;
}

export interface PaloAltoNextGenerationFirewallVirtualNetworkPanoramaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PaloAltoVirtualNetworkApplianceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PimActiveRoleAssignmentSchedule {
    expiration?: pulumi.Input<inputs.PimActiveRoleAssignmentScheduleExpiration>;
    /**
     * The start date/time of the role assignment
     */
    startDateTime?: pulumi.Input<string>;
}

export interface PimActiveRoleAssignmentScheduleExpiration {
    /**
     * The duration of the role assignment in days
     */
    durationDays?: pulumi.Input<number>;
    /**
     * The duration of the role assignment in hours
     */
    durationHours?: pulumi.Input<number>;
    /**
     * The end date/time of the role assignment
     */
    endDateTime?: pulumi.Input<string>;
}

export interface PimActiveRoleAssignmentTicket {
    /**
     * User-supplied ticket number to be included with the request
     */
    number?: pulumi.Input<string>;
    /**
     * User-supplied ticket system name to be included with the request
     */
    system?: pulumi.Input<string>;
}

export interface PimActiveRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PimEligibleRoleAssignmentSchedule {
    expiration?: pulumi.Input<inputs.PimEligibleRoleAssignmentScheduleExpiration>;
    /**
     * The start date/time
     */
    startDateTime?: pulumi.Input<string>;
}

export interface PimEligibleRoleAssignmentScheduleExpiration {
    /**
     * The duration of the eligible role assignment in days
     */
    durationDays?: pulumi.Input<number>;
    /**
     * The duration of the eligible role assignment in hours
     */
    durationHours?: pulumi.Input<number>;
    /**
     * The end date/time of the eligible role assignment
     */
    endDateTime?: pulumi.Input<string>;
}

export interface PimEligibleRoleAssignmentTicket {
    /**
     * User-supplied ticket number to be included with the request
     */
    number?: pulumi.Input<string>;
    /**
     * User-supplied ticket system name to be included with the request
     */
    system?: pulumi.Input<string>;
}

export interface PimEligibleRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PointToSiteVpnGatewayConnectionConfiguration {
    internetSecurityEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    route?: pulumi.Input<inputs.PointToSiteVpnGatewayConnectionConfigurationRoute>;
    vpnClientAddressPool: pulumi.Input<inputs.PointToSiteVpnGatewayConnectionConfigurationVpnClientAddressPool>;
}

export interface PointToSiteVpnGatewayConnectionConfigurationRoute {
    associatedRouteTableId: pulumi.Input<string>;
    inboundRouteMapId?: pulumi.Input<string>;
    outboundRouteMapId?: pulumi.Input<string>;
    propagatedRouteTable?: pulumi.Input<inputs.PointToSiteVpnGatewayConnectionConfigurationRoutePropagatedRouteTable>;
}

export interface PointToSiteVpnGatewayConnectionConfigurationRoutePropagatedRouteTable {
    ids: pulumi.Input<pulumi.Input<string>[]>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PointToSiteVpnGatewayConnectionConfigurationVpnClientAddressPool {
    addressPrefixes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PointToSiteVpnGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PolicyDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PolicySetDefinitionPolicyDefinitionGroup {
    additionalMetadataResourceId?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface PolicySetDefinitionPolicyDefinitionReference {
    parameterValues?: pulumi.Input<string>;
    policyDefinitionId: pulumi.Input<string>;
    policyGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    referenceId?: pulumi.Input<string>;
}

export interface PolicySetDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PolicyVirtualMachineConfigurationAssignmentConfiguration {
    assignmentType?: pulumi.Input<string>;
    contentHash?: pulumi.Input<string>;
    contentUri?: pulumi.Input<string>;
    parameters?: pulumi.Input<pulumi.Input<inputs.PolicyVirtualMachineConfigurationAssignmentConfigurationParameter>[]>;
    version?: pulumi.Input<string>;
}

export interface PolicyVirtualMachineConfigurationAssignmentConfigurationParameter {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface PolicyVirtualMachineConfigurationAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PortalDashboardTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PortalTenantConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlActiveDirectoryAdministratorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PostgresqlDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PostgresqlFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerActiveDirectoryAdministratorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerAuthentication {
    activeDirectoryAuthEnabled?: pulumi.Input<boolean>;
    passwordAuthEnabled?: pulumi.Input<boolean>;
    tenantId?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerCustomerManagedKey {
    geoBackupKeyVaultKeyId?: pulumi.Input<string>;
    geoBackupUserAssignedIdentityId?: pulumi.Input<string>;
    keyVaultKeyId: pulumi.Input<string>;
    primaryUserAssignedIdentityId?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerHighAvailability {
    mode: pulumi.Input<string>;
    standbyAvailabilityZone?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerMaintenanceWindow {
    dayOfWeek?: pulumi.Input<number>;
    startHour?: pulumi.Input<number>;
    startMinute?: pulumi.Input<number>;
}

export interface PostgresqlFlexibleServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlFlexibleServerVirtualEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlServerIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface PostgresqlServerKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlServerThreatDetectionPolicy {
    disabledAlerts?: pulumi.Input<pulumi.Input<string>[]>;
    emailAccountAdmins?: pulumi.Input<boolean>;
    emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    retentionDays?: pulumi.Input<number>;
    storageAccountAccessKey?: pulumi.Input<string>;
    storageEndpoint?: pulumi.Input<string>;
}

export interface PostgresqlServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PostgresqlVirtualNetworkRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PowerbiEmbeddedTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsARecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsAaaaRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsCnameRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsMxRecordRecord {
    exchange: pulumi.Input<string>;
    preference: pulumi.Input<number>;
}

export interface PrivateDnsMxRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsPtrRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsResolverDnsForwardingRulesetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsResolverForwardingRuleTargetDnsServer {
    ipAddress: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface PrivateDnsResolverForwardingRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsResolverInboundEndpointIpConfigurations {
    privateIpAddress?: pulumi.Input<string>;
    privateIpAllocationMethod?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface PrivateDnsResolverInboundEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsResolverOutboundEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsResolverTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsResolverVirtualNetworkLinkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsSrvRecordRecord {
    port: pulumi.Input<number>;
    priority: pulumi.Input<number>;
    target: pulumi.Input<string>;
    weight: pulumi.Input<number>;
}

export interface PrivateDnsSrvRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsTxtRecordRecord {
    value: pulumi.Input<string>;
}

export interface PrivateDnsTxtRecordTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsZoneSoaRecord {
    email: pulumi.Input<string>;
    expireTime?: pulumi.Input<number>;
    fqdn?: pulumi.Input<string>;
    hostName?: pulumi.Input<string>;
    minimumTtl?: pulumi.Input<number>;
    refreshTime?: pulumi.Input<number>;
    retryTime?: pulumi.Input<number>;
    serialNumber?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ttl?: pulumi.Input<number>;
}

export interface PrivateDnsZoneTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateDnsZoneVirtualNetworkLinkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateEndpointApplicationSecurityGroupAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface PrivateEndpointCustomDnsConfig {
    fqdn: pulumi.Input<string>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PrivateEndpointIpConfiguration {
    memberName?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    privateIpAddress: pulumi.Input<string>;
    subresourceName?: pulumi.Input<string>;
}

export interface PrivateEndpointNetworkInterface {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface PrivateEndpointPrivateDnsZoneConfig {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
    privateDnsZoneId: pulumi.Input<string>;
    recordSets: pulumi.Input<pulumi.Input<inputs.PrivateEndpointPrivateDnsZoneConfigRecordSet>[]>;
}

export interface PrivateEndpointPrivateDnsZoneConfigRecordSet {
    fqdn: pulumi.Input<string>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface PrivateEndpointPrivateDnsZoneGroup {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    privateDnsZoneIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PrivateEndpointPrivateServiceConnection {
    isManualConnection: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    privateConnectionResourceAlias?: pulumi.Input<string>;
    privateConnectionResourceId?: pulumi.Input<string>;
    privateIpAddress?: pulumi.Input<string>;
    requestMessage?: pulumi.Input<string>;
    subresourceNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface PrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PrivateLinkServiceNatIpConfiguration {
    name: pulumi.Input<string>;
    primary: pulumi.Input<boolean>;
    privateIpAddress?: pulumi.Input<string>;
    privateIpAddressVersion?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface PrivateLinkServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProviderFeature {
    apiManagements?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureApiManagement>[]>;
    appConfigurations?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureAppConfiguration>[]>;
    applicationInsights?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureApplicationInsight>[]>;
    cognitiveAccounts?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureCognitiveAccount>[]>;
    keyVaults?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureKeyVault>[]>;
    logAnalyticsWorkspaces?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureLogAnalyticsWorkspace>[]>;
    machineLearnings?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureMachineLearning>[]>;
    managedDisks?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureManagedDisk>[]>;
    postgresqlFlexibleServers?: pulumi.Input<pulumi.Input<inputs.ProviderFeaturePostgresqlFlexibleServer>[]>;
    recoveryServices?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureRecoveryService>[]>;
    recoveryServicesVaults?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureRecoveryServicesVault>[]>;
    resourceGroups?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureResourceGroup>[]>;
    subscriptions?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureSubscription>[]>;
    templateDeployments?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureTemplateDeployment>[]>;
    virtualMachineScaleSets?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureVirtualMachineScaleSet>[]>;
    virtualMachines?: pulumi.Input<pulumi.Input<inputs.ProviderFeatureVirtualMachine>[]>;
}

export interface ProviderFeatureApiManagement {
    purgeSoftDeleteOnDestroy?: pulumi.Input<boolean>;
    recoverSoftDeleted?: pulumi.Input<boolean>;
}

export interface ProviderFeatureAppConfiguration {
    purgeSoftDeleteOnDestroy?: pulumi.Input<boolean>;
    recoverSoftDeleted?: pulumi.Input<boolean>;
}

export interface ProviderFeatureApplicationInsight {
    disableGeneratedRule?: pulumi.Input<boolean>;
}

export interface ProviderFeatureCognitiveAccount {
    purgeSoftDeleteOnDestroy?: pulumi.Input<boolean>;
}

export interface ProviderFeatureKeyVault {
    /**
     * When enabled soft-deleted `azurerm.KeyVault` resources will be permanently deleted (e.g purged), when destroyed
     */
    purgeSoftDeleteOnDestroy?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultCertificate` resources will be permanently deleted (e.g purged), when destroyed
     */
    purgeSoftDeletedCertificatesOnDestroy?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultManagedHardwareSecurityModuleKey` resources will be permanently deleted (e.g purged), when destroyed
     */
    purgeSoftDeletedHardwareSecurityModuleKeysOnDestroy?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultManagedHardwareSecurityModule` resources will be permanently deleted (e.g purged), when destroyed
     */
    purgeSoftDeletedHardwareSecurityModulesOnDestroy?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultKey` resources will be permanently deleted (e.g purged), when destroyed
     */
    purgeSoftDeletedKeysOnDestroy?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultSecret` resources will be permanently deleted (e.g purged), when destroyed
     */
    purgeSoftDeletedSecretsOnDestroy?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultCertificate` resources will be restored, instead of creating new ones
     */
    recoverSoftDeletedCertificates?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultManagedHardwareSecurityModuleKey` resources will be restored, instead of creating new ones
     */
    recoverSoftDeletedHardwareSecurityModuleKeys?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVault` resources will be restored, instead of creating new ones
     */
    recoverSoftDeletedKeyVaults?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultKey` resources will be restored, instead of creating new ones
     */
    recoverSoftDeletedKeys?: pulumi.Input<boolean>;
    /**
     * When enabled soft-deleted `azurerm.KeyVaultSecret` resources will be restored, instead of creating new ones
     */
    recoverSoftDeletedSecrets?: pulumi.Input<boolean>;
}

export interface ProviderFeatureLogAnalyticsWorkspace {
    permanentlyDeleteOnDestroy?: pulumi.Input<boolean>;
}

export interface ProviderFeatureMachineLearning {
    purgeSoftDeletedWorkspaceOnDestroy?: pulumi.Input<boolean>;
}

export interface ProviderFeatureManagedDisk {
    expandWithoutDowntime?: pulumi.Input<boolean>;
}

export interface ProviderFeaturePostgresqlFlexibleServer {
    restartServerOnConfigurationValueChange?: pulumi.Input<boolean>;
}

export interface ProviderFeatureRecoveryService {
    purgeProtectedItemsFromVaultOnDestroy?: pulumi.Input<boolean>;
    vmBackupStopProtectionAndRetainDataOnDestroy?: pulumi.Input<boolean>;
}

export interface ProviderFeatureRecoveryServicesVault {
    recoverSoftDeletedBackupProtectedVm?: pulumi.Input<boolean>;
}

export interface ProviderFeatureResourceGroup {
    preventDeletionIfContainsResources?: pulumi.Input<boolean>;
}

export interface ProviderFeatureSubscription {
    preventCancellationOnDestroy?: pulumi.Input<boolean>;
}

export interface ProviderFeatureTemplateDeployment {
    deleteNestedItemsDuringDeletion: pulumi.Input<boolean>;
}

export interface ProviderFeatureVirtualMachine {
    deleteOsDiskOnDeletion?: pulumi.Input<boolean>;
    detachImplicitDataDiskOnDeletion?: pulumi.Input<boolean>;
    gracefulShutdown?: pulumi.Input<boolean>;
    skipShutdownAndForceDelete?: pulumi.Input<boolean>;
}

export interface ProviderFeatureVirtualMachineScaleSet {
    forceDelete?: pulumi.Input<boolean>;
    reimageOnManualUpgrade?: pulumi.Input<boolean>;
    rollInstancesWhenRequired?: pulumi.Input<boolean>;
    scaleToZeroBeforeDeletion?: pulumi.Input<boolean>;
}

export interface ProximityPlacementGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PublicIpPrefixTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PublicIpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PurviewAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface PurviewAccountManagedResource {
    eventHubNamespaceId: pulumi.Input<string>;
    resourceGroupId: pulumi.Input<string>;
    storageAccountId: pulumi.Input<string>;
}

export interface PurviewAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RecoveryServicesVaultEncryption {
    infrastructureEncryptionEnabled: pulumi.Input<boolean>;
    keyId: pulumi.Input<string>;
    useSystemAssignedIdentity?: pulumi.Input<boolean>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface RecoveryServicesVaultIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface RecoveryServicesVaultMonitoring {
    alertsForAllJobFailuresEnabled?: pulumi.Input<boolean>;
    alertsForCriticalOperationFailuresEnabled?: pulumi.Input<boolean>;
}

export interface RecoveryServicesVaultResourceGuardAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface RecoveryServicesVaultTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterApiServerProfile {
    ipAddress?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    visibility: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterClusterProfile {
    domain: pulumi.Input<string>;
    fipsEnabled?: pulumi.Input<boolean>;
    managedResourceGroupName?: pulumi.Input<string>;
    pullSecret?: pulumi.Input<string>;
    resourceGroupId?: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterIngressProfile {
    ipAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    visibility: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterMainProfile {
    diskEncryptionSetId?: pulumi.Input<string>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterNetworkProfile {
    outboundType?: pulumi.Input<string>;
    podCidr: pulumi.Input<string>;
    preconfiguredNetworkSecurityGroupEnabled?: pulumi.Input<boolean>;
    serviceCidr: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterServicePrincipal {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedhatOpenshiftClusterWorkerProfile {
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb: pulumi.Input<number>;
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    nodeCount: pulumi.Input<number>;
    subnetId: pulumi.Input<string>;
    vmSize: pulumi.Input<string>;
}

export interface RedisCacheAccessPolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface RedisCacheAccessPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedisCacheIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface RedisCachePatchSchedule {
    dayOfWeek: pulumi.Input<string>;
    maintenanceWindow?: pulumi.Input<string>;
    startHourUtc?: pulumi.Input<number>;
}

export interface RedisCacheRedisConfiguration {
    activeDirectoryAuthenticationEnabled?: pulumi.Input<boolean>;
    aofBackupEnabled?: pulumi.Input<boolean>;
    aofStorageConnectionString0?: pulumi.Input<string>;
    aofStorageConnectionString1?: pulumi.Input<string>;
    authenticationEnabled?: pulumi.Input<boolean>;
    dataPersistenceAuthenticationMethod?: pulumi.Input<string>;
    maxclients?: pulumi.Input<number>;
    maxfragmentationmemoryReserved?: pulumi.Input<number>;
    maxmemoryDelta?: pulumi.Input<number>;
    maxmemoryPolicy?: pulumi.Input<string>;
    maxmemoryReserved?: pulumi.Input<number>;
    notifyKeyspaceEvents?: pulumi.Input<string>;
    rdbBackupEnabled?: pulumi.Input<boolean>;
    rdbBackupFrequency?: pulumi.Input<number>;
    rdbBackupMaxSnapshotCount?: pulumi.Input<number>;
    rdbStorageConnectionString?: pulumi.Input<string>;
    storageAccountSubscriptionId?: pulumi.Input<string>;
}

export interface RedisCacheTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedisEnterpriseClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedisEnterpriseDatabaseModule {
    args?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface RedisEnterpriseDatabaseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedisFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedisLinkedServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface RelayHybridConnectionAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RelayHybridConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RelayNamespaceAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RelayNamespaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzureCliContainer {
    containerGroupName?: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzureCliEnvironmentVariable {
    name: pulumi.Input<string>;
    secureValue?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzureCliIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzureCliStorageAccount {
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzureCliTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzurePowerShellContainer {
    containerGroupName?: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzurePowerShellEnvironmentVariable {
    name: pulumi.Input<string>;
    secureValue?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzurePowerShellIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzurePowerShellStorageAccount {
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ResourceDeploymentScriptAzurePowerShellTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementExportExportDataOptions {
    timeFrame: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementExportExportDataStorageLocation {
    containerId: pulumi.Input<string>;
    rootFolderPath: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementExportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementViewDataset {
    aggregations: pulumi.Input<pulumi.Input<inputs.ResourceGroupCostManagementViewDatasetAggregation>[]>;
    granularity: pulumi.Input<string>;
    groupings?: pulumi.Input<pulumi.Input<inputs.ResourceGroupCostManagementViewDatasetGrouping>[]>;
    sortings?: pulumi.Input<pulumi.Input<inputs.ResourceGroupCostManagementViewDatasetSorting>[]>;
}

export interface ResourceGroupCostManagementViewDatasetAggregation {
    columnName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementViewDatasetGrouping {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementViewDatasetSorting {
    direction: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementViewKpi {
    type: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementViewPivot {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ResourceGroupCostManagementViewTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceGroupPolicyAssignmentIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ResourceGroupPolicyAssignmentNonComplianceMessage {
    content: pulumi.Input<string>;
    policyDefinitionReferenceId?: pulumi.Input<string>;
}

export interface ResourceGroupPolicyAssignmentOverride {
    selectors?: pulumi.Input<pulumi.Input<inputs.ResourceGroupPolicyAssignmentOverrideSelector>[]>;
    value: pulumi.Input<string>;
}

export interface ResourceGroupPolicyAssignmentOverrideSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind?: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceGroupPolicyAssignmentResourceSelector {
    name?: pulumi.Input<string>;
    selectors: pulumi.Input<pulumi.Input<inputs.ResourceGroupPolicyAssignmentResourceSelectorSelector>[]>;
}

export interface ResourceGroupPolicyAssignmentResourceSelectorSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourceGroupPolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceGroupPolicyExemptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceGroupPolicyRemediationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceGroupTemplateDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceManagementPrivateLinkAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ResourceManagementPrivateLinkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ResourcePolicyAssignmentIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ResourcePolicyAssignmentNonComplianceMessage {
    content: pulumi.Input<string>;
    policyDefinitionReferenceId?: pulumi.Input<string>;
}

export interface ResourcePolicyAssignmentOverride {
    selectors?: pulumi.Input<pulumi.Input<inputs.ResourcePolicyAssignmentOverrideSelector>[]>;
    value: pulumi.Input<string>;
}

export interface ResourcePolicyAssignmentOverrideSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind?: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourcePolicyAssignmentResourceSelector {
    name?: pulumi.Input<string>;
    selectors: pulumi.Input<pulumi.Input<inputs.ResourcePolicyAssignmentResourceSelectorSelector>[]>;
}

export interface ResourcePolicyAssignmentResourceSelectorSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ResourcePolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourcePolicyExemptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourcePolicyRemediationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ResourceProviderRegistrationFeature {
    name: pulumi.Input<string>;
    registered: pulumi.Input<boolean>;
}

export interface ResourceProviderRegistrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RestorePointCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface RoleDefinitionPermission {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    dataActions?: pulumi.Input<pulumi.Input<string>[]>;
    notActions?: pulumi.Input<pulumi.Input<string>[]>;
    notDataActions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RoleDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RoleManagementPolicyActivationRules {
    /**
     * The approval stages for the activation
     */
    approvalStage?: pulumi.Input<inputs.RoleManagementPolicyActivationRulesApprovalStage>;
    /**
     * The time after which the an activation can be valid for
     */
    maximumDuration?: pulumi.Input<string>;
    /**
     * Whether an approval is required for activation
     */
    requireApproval?: pulumi.Input<boolean>;
    /**
     * Whether a justification is required during activation
     */
    requireJustification?: pulumi.Input<boolean>;
    /**
     * Whether multi-factor authentication is required during activation
     */
    requireMultifactorAuthentication?: pulumi.Input<boolean>;
    /**
     * Whether ticket information is required during activation
     */
    requireTicketInfo?: pulumi.Input<boolean>;
    /**
     * Whether a conditional access context is required during activation
     */
    requiredConditionalAccessAuthenticationContext?: pulumi.Input<string>;
}

export interface RoleManagementPolicyActivationRulesApprovalStage {
    /**
     * The IDs of the users or groups who can approve the activation
     */
    primaryApprovers: pulumi.Input<pulumi.Input<inputs.RoleManagementPolicyActivationRulesApprovalStagePrimaryApprover>[]>;
}

export interface RoleManagementPolicyActivationRulesApprovalStagePrimaryApprover {
    /**
     * The ID of the object to act as an approver
     */
    objectId: pulumi.Input<string>;
    /**
     * The type of object acting as an approver
     */
    type: pulumi.Input<string>;
}

export interface RoleManagementPolicyActiveAssignmentRules {
    /**
     * Must the assignment have an expiry date
     */
    expirationRequired?: pulumi.Input<boolean>;
    /**
     * The duration after which assignments expire
     */
    expireAfter?: pulumi.Input<string>;
    /**
     * Whether a justification is required to make an assignment
     */
    requireJustification?: pulumi.Input<boolean>;
    /**
     * Whether multi-factor authentication is required to make an assignment
     */
    requireMultifactorAuthentication?: pulumi.Input<boolean>;
    /**
     * Whether ticket information is required to make an assignment
     */
    requireTicketInfo?: pulumi.Input<boolean>;
}

export interface RoleManagementPolicyEligibleAssignmentRules {
    /**
     * Must the assignment have an expiry date
     */
    expirationRequired?: pulumi.Input<boolean>;
    /**
     * The duration after which assignments expire
     */
    expireAfter?: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRules {
    /**
     * Notifications about active assignments
     */
    activeAssignments?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesActiveAssignments>;
    /**
     * Notifications about activations of eligible assignments
     */
    eligibleActivations?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleActivations>;
    /**
     * Notifications about eligible assignments
     */
    eligibleAssignments?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleAssignments>;
}

export interface RoleManagementPolicyNotificationRulesActiveAssignments {
    /**
     * Admin notification settings
     */
    adminNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotifications>;
    /**
     * Approver notification settings
     */
    approverNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotifications>;
    /**
     * Assignee notification settings
     */
    assigneeNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotifications>;
}

export interface RoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesEligibleActivations {
    /**
     * Admin notification settings
     */
    adminNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications>;
    /**
     * Approver notification settings
     */
    approverNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications>;
    /**
     * Assignee notification settings
     */
    assigneeNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications>;
}

export interface RoleManagementPolicyNotificationRulesEligibleActivationsAdminNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesEligibleActivationsApproverNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesEligibleActivationsAssigneeNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesEligibleAssignments {
    /**
     * Admin notification settings
     */
    adminNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications>;
    /**
     * Approver notification settings
     */
    approverNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleAssignmentsApproverNotifications>;
    /**
     * Assignee notification settings
     */
    assigneeNotifications?: pulumi.Input<inputs.RoleManagementPolicyNotificationRulesEligibleAssignmentsAssigneeNotifications>;
}

export interface RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesEligibleAssignmentsApproverNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyNotificationRulesEligibleAssignmentsAssigneeNotifications {
    /**
     * The additional recipients to notify
     */
    additionalRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the default recipients are notified
     */
    defaultRecipients: pulumi.Input<boolean>;
    /**
     * What level of notifications are sent
     */
    notificationLevel: pulumi.Input<string>;
}

export interface RoleManagementPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RouteFilterRule {
    access: pulumi.Input<string>;
    communities: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    ruleType: pulumi.Input<string>;
}

export interface RouteFilterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RouteMapRule {
    actions?: pulumi.Input<pulumi.Input<inputs.RouteMapRuleAction>[]>;
    matchCriterions?: pulumi.Input<pulumi.Input<inputs.RouteMapRuleMatchCriterion>[]>;
    name: pulumi.Input<string>;
    nextStepIfMatched?: pulumi.Input<string>;
}

export interface RouteMapRuleAction {
    parameters?: pulumi.Input<pulumi.Input<inputs.RouteMapRuleActionParameter>[]>;
    type: pulumi.Input<string>;
}

export interface RouteMapRuleActionParameter {
    asPaths?: pulumi.Input<pulumi.Input<string>[]>;
    communities?: pulumi.Input<pulumi.Input<string>[]>;
    routePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RouteMapRuleMatchCriterion {
    asPaths?: pulumi.Input<pulumi.Input<string>[]>;
    communities?: pulumi.Input<pulumi.Input<string>[]>;
    matchCondition: pulumi.Input<string>;
    routePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RouteMapTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RouteServerBgpConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface RouteServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RouteTableRoute {
    addressPrefix: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nextHopInIpAddress: pulumi.Input<string>;
    nextHopType: pulumi.Input<string>;
}

export interface RouteTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RouteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SearchServiceIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SearchServiceQueryKey {
    key: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SearchServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SearchSharedPrivateLinkServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterAssessmentPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterAssessmentStatus {
    cause?: pulumi.Input<string>;
    code: pulumi.Input<string>;
    description?: pulumi.Input<string>;
}

export interface SecurityCenterAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterAutoProvisioningTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterAutomationAction {
    connectionString?: pulumi.Input<string>;
    resourceId: pulumi.Input<string>;
    triggerUrl?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SecurityCenterAutomationSource {
    eventSource: pulumi.Input<string>;
    ruleSets?: pulumi.Input<pulumi.Input<inputs.SecurityCenterAutomationSourceRuleSet>[]>;
}

export interface SecurityCenterAutomationSourceRuleSet {
    rules: pulumi.Input<pulumi.Input<inputs.SecurityCenterAutomationSourceRuleSetRule>[]>;
}

export interface SecurityCenterAutomationSourceRuleSetRule {
    expectedValue: pulumi.Input<string>;
    operator: pulumi.Input<string>;
    propertyPath: pulumi.Input<string>;
    propertyType: pulumi.Input<string>;
}

export interface SecurityCenterAutomationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterContactTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterServerVulnerabilityAssessmentVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SecurityCenterServerVulnerabilityAssessmentsSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterSettingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterStorageDefenderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterSubscriptionPricingExtension {
    additionalExtensionProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
}

export interface SecurityCenterSubscriptionPricingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityCenterWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyBuiltInMultiSelectObservation {
    description: pulumi.Input<string>;
    name: pulumi.Input<string>;
    supportedValues: pulumi.Input<pulumi.Input<string>[]>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SentinelAlertRuleAnomalyBuiltInPrioritizedExcludeObservation {
    description: pulumi.Input<string>;
    exclude: pulumi.Input<string>;
    name: pulumi.Input<string>;
    prioritize: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyBuiltInRequiredDataConnector {
    connectorId: pulumi.Input<string>;
    dataTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SentinelAlertRuleAnomalyBuiltInSingleSelectObservation {
    description: pulumi.Input<string>;
    name: pulumi.Input<string>;
    supportedValues: pulumi.Input<pulumi.Input<string>[]>;
    value: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyBuiltInThresholdObservation {
    description: pulumi.Input<string>;
    max: pulumi.Input<string>;
    min: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyBuiltInTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyDuplicateMultiSelectObservation {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    supportedValues?: pulumi.Input<pulumi.Input<string>[]>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SentinelAlertRuleAnomalyDuplicatePrioritizedExcludeObservation {
    description?: pulumi.Input<string>;
    exclude?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    prioritize?: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyDuplicateRequiredDataConnector {
    connectorId: pulumi.Input<string>;
    dataTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SentinelAlertRuleAnomalyDuplicateSingleSelectObservation {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    supportedValues?: pulumi.Input<pulumi.Input<string>[]>;
    value: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyDuplicateThresholdObservation {
    description?: pulumi.Input<string>;
    max?: pulumi.Input<string>;
    min?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SentinelAlertRuleAnomalyDuplicateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleFusionSource {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    subTypes?: pulumi.Input<pulumi.Input<inputs.SentinelAlertRuleFusionSourceSubType>[]>;
}

export interface SentinelAlertRuleFusionSourceSubType {
    enabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    severitiesAlloweds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SentinelAlertRuleFusionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleMachineLearningBehaviorAnalyticsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleMsSecurityIncidentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleNrtAlertDetailsOverride {
    descriptionFormat?: pulumi.Input<string>;
    displayNameFormat?: pulumi.Input<string>;
    dynamicProperties?: pulumi.Input<pulumi.Input<inputs.SentinelAlertRuleNrtAlertDetailsOverrideDynamicProperty>[]>;
    severityColumnName?: pulumi.Input<string>;
    tacticsColumnName?: pulumi.Input<string>;
}

export interface SentinelAlertRuleNrtAlertDetailsOverrideDynamicProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SentinelAlertRuleNrtEntityMapping {
    entityType: pulumi.Input<string>;
    fieldMappings: pulumi.Input<pulumi.Input<inputs.SentinelAlertRuleNrtEntityMappingFieldMapping>[]>;
}

export interface SentinelAlertRuleNrtEntityMappingFieldMapping {
    columnName: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
}

export interface SentinelAlertRuleNrtEventGrouping {
    aggregationMethod: pulumi.Input<string>;
}

export interface SentinelAlertRuleNrtIncident {
    createIncidentEnabled: pulumi.Input<boolean>;
    grouping: pulumi.Input<inputs.SentinelAlertRuleNrtIncidentGrouping>;
}

export interface SentinelAlertRuleNrtIncidentGrouping {
    byAlertDetails?: pulumi.Input<pulumi.Input<string>[]>;
    byCustomDetails?: pulumi.Input<pulumi.Input<string>[]>;
    byEntities?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    entityMatchingMethod?: pulumi.Input<string>;
    lookbackDuration?: pulumi.Input<string>;
    reopenClosedIncidents?: pulumi.Input<boolean>;
}

export interface SentinelAlertRuleNrtSentinelEntityMapping {
    columnName: pulumi.Input<string>;
}

export interface SentinelAlertRuleNrtTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleScheduledAlertDetailsOverride {
    descriptionFormat?: pulumi.Input<string>;
    displayNameFormat?: pulumi.Input<string>;
    dynamicProperties?: pulumi.Input<pulumi.Input<inputs.SentinelAlertRuleScheduledAlertDetailsOverrideDynamicProperty>[]>;
    severityColumnName?: pulumi.Input<string>;
    tacticsColumnName?: pulumi.Input<string>;
}

export interface SentinelAlertRuleScheduledAlertDetailsOverrideDynamicProperty {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SentinelAlertRuleScheduledEntityMapping {
    entityType: pulumi.Input<string>;
    fieldMappings: pulumi.Input<pulumi.Input<inputs.SentinelAlertRuleScheduledEntityMappingFieldMapping>[]>;
}

export interface SentinelAlertRuleScheduledEntityMappingFieldMapping {
    columnName: pulumi.Input<string>;
    identifier: pulumi.Input<string>;
}

export interface SentinelAlertRuleScheduledEventGrouping {
    aggregationMethod: pulumi.Input<string>;
}

export interface SentinelAlertRuleScheduledIncident {
    createIncidentEnabled: pulumi.Input<boolean>;
    grouping: pulumi.Input<inputs.SentinelAlertRuleScheduledIncidentGrouping>;
}

export interface SentinelAlertRuleScheduledIncidentGrouping {
    byAlertDetails?: pulumi.Input<pulumi.Input<string>[]>;
    byCustomDetails?: pulumi.Input<pulumi.Input<string>[]>;
    byEntities?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
    entityMatchingMethod?: pulumi.Input<string>;
    lookbackDuration?: pulumi.Input<string>;
    reopenClosedIncidents?: pulumi.Input<boolean>;
}

export interface SentinelAlertRuleScheduledSentinelEntityMapping {
    columnName: pulumi.Input<string>;
}

export interface SentinelAlertRuleScheduledTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAlertRuleThreatIntelligenceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelAutomationRuleActionIncident {
    classification?: pulumi.Input<string>;
    classificationComment?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    order: pulumi.Input<number>;
    ownerId?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}

export interface SentinelAutomationRuleActionPlaybook {
    logicAppId: pulumi.Input<string>;
    order: pulumi.Input<number>;
    tenantId?: pulumi.Input<string>;
}

export interface SentinelAutomationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelDataConnectorAwsCloudTrailTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelDataConnectorAwsS3Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelDataConnectorAzureActiveDirectoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorAzureAdvancedThreatProtectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorAzureSecurityCenterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorDynamics365Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorIotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorMicrosoftCloudAppSecurityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelDataConnectorMicrosoftDefenderAdvancedThreatProtectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorMicrosoftThreatIntelligenceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorMicrosoftThreatProtectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorOffice365ProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorOffice365Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelDataConnectorOfficeAtpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorOfficeIrmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorOfficePowerBiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelDataConnectorThreatIntelligenceTaxiiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelDataConnectorThreatIntelligenceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelLogAnalyticsWorkspaceOnboardingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SentinelMetadataAuthor {
    email?: pulumi.Input<string>;
    link?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface SentinelMetadataCategory {
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    verticals?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SentinelMetadataSource {
    id?: pulumi.Input<string>;
    kind: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

export interface SentinelMetadataSupport {
    email?: pulumi.Input<string>;
    link?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tier: pulumi.Input<string>;
}

export interface SentinelMetadataTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelThreatIntelligenceIndicatorExternalReference {
    description?: pulumi.Input<string>;
    hashes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    id?: pulumi.Input<string>;
    sourceName?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface SentinelThreatIntelligenceIndicatorGranularMarking {
    language?: pulumi.Input<string>;
    markingRef?: pulumi.Input<string>;
    selectors?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SentinelThreatIntelligenceIndicatorKillChainPhase {
    name?: pulumi.Input<string>;
}

export interface SentinelThreatIntelligenceIndicatorParsedPattern {
    patternTypeKey: pulumi.Input<string>;
    patternTypeValues: pulumi.Input<pulumi.Input<inputs.SentinelThreatIntelligenceIndicatorParsedPatternPatternTypeValue>[]>;
}

export interface SentinelThreatIntelligenceIndicatorParsedPatternPatternTypeValue {
    value: pulumi.Input<string>;
    valueType: pulumi.Input<string>;
}

export interface SentinelThreatIntelligenceIndicatorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelWatchlistItemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SentinelWatchlistTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ServiceFabricClusterAzureActiveDirectory {
    clientApplicationId: pulumi.Input<string>;
    clusterApplicationId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface ServiceFabricClusterCertificate {
    thumbprint: pulumi.Input<string>;
    thumbprintSecondary?: pulumi.Input<string>;
    x509StoreName: pulumi.Input<string>;
}

export interface ServiceFabricClusterCertificateCommonNames {
    commonNames: pulumi.Input<pulumi.Input<inputs.ServiceFabricClusterCertificateCommonNamesCommonName>[]>;
    x509StoreName: pulumi.Input<string>;
}

export interface ServiceFabricClusterCertificateCommonNamesCommonName {
    certificateCommonName: pulumi.Input<string>;
    certificateIssuerThumbprint?: pulumi.Input<string>;
}

export interface ServiceFabricClusterClientCertificateCommonName {
    commonName: pulumi.Input<string>;
    isAdmin: pulumi.Input<boolean>;
    issuerThumbprint?: pulumi.Input<string>;
}

export interface ServiceFabricClusterClientCertificateThumbprint {
    isAdmin: pulumi.Input<boolean>;
    thumbprint: pulumi.Input<string>;
}

export interface ServiceFabricClusterDiagnosticsConfig {
    blobEndpoint: pulumi.Input<string>;
    protectedAccountKeyName: pulumi.Input<string>;
    queueEndpoint: pulumi.Input<string>;
    storageAccountName: pulumi.Input<string>;
    tableEndpoint: pulumi.Input<string>;
}

export interface ServiceFabricClusterFabricSetting {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ServiceFabricClusterNodeType {
    applicationPorts?: pulumi.Input<inputs.ServiceFabricClusterNodeTypeApplicationPorts>;
    capacities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    clientEndpointPort: pulumi.Input<number>;
    durabilityLevel?: pulumi.Input<string>;
    ephemeralPorts?: pulumi.Input<inputs.ServiceFabricClusterNodeTypeEphemeralPorts>;
    httpEndpointPort: pulumi.Input<number>;
    instanceCount: pulumi.Input<number>;
    isPrimary: pulumi.Input<boolean>;
    isStateless?: pulumi.Input<boolean>;
    multipleAvailabilityZones?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    placementProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    reverseProxyEndpointPort?: pulumi.Input<number>;
}

export interface ServiceFabricClusterNodeTypeApplicationPorts {
    endPort: pulumi.Input<number>;
    startPort: pulumi.Input<number>;
}

export interface ServiceFabricClusterNodeTypeEphemeralPorts {
    endPort: pulumi.Input<number>;
    startPort: pulumi.Input<number>;
}

export interface ServiceFabricClusterReverseProxyCertificate {
    thumbprint: pulumi.Input<string>;
    thumbprintSecondary?: pulumi.Input<string>;
    x509StoreName: pulumi.Input<string>;
}

export interface ServiceFabricClusterReverseProxyCertificateCommonNames {
    commonNames: pulumi.Input<pulumi.Input<inputs.ServiceFabricClusterReverseProxyCertificateCommonNamesCommonName>[]>;
    x509StoreName: pulumi.Input<string>;
}

export interface ServiceFabricClusterReverseProxyCertificateCommonNamesCommonName {
    certificateCommonName: pulumi.Input<string>;
    certificateIssuerThumbprint?: pulumi.Input<string>;
}

export interface ServiceFabricClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceFabricClusterUpgradePolicy {
    deltaHealthPolicy?: pulumi.Input<inputs.ServiceFabricClusterUpgradePolicyDeltaHealthPolicy>;
    forceRestartEnabled?: pulumi.Input<boolean>;
    healthCheckRetryTimeout?: pulumi.Input<string>;
    healthCheckStableDuration?: pulumi.Input<string>;
    healthCheckWaitDuration?: pulumi.Input<string>;
    healthPolicy?: pulumi.Input<inputs.ServiceFabricClusterUpgradePolicyHealthPolicy>;
    upgradeDomainTimeout?: pulumi.Input<string>;
    upgradeReplicaSetCheckTimeout?: pulumi.Input<string>;
    upgradeTimeout?: pulumi.Input<string>;
}

export interface ServiceFabricClusterUpgradePolicyDeltaHealthPolicy {
    maxDeltaUnhealthyApplicationsPercent?: pulumi.Input<number>;
    maxDeltaUnhealthyNodesPercent?: pulumi.Input<number>;
    maxUpgradeDomainDeltaUnhealthyNodesPercent?: pulumi.Input<number>;
}

export interface ServiceFabricClusterUpgradePolicyHealthPolicy {
    maxUnhealthyApplicationsPercent?: pulumi.Input<number>;
    maxUnhealthyNodesPercent?: pulumi.Input<number>;
}

export interface ServiceFabricManagedClusterAuthentication {
    activeDirectory?: pulumi.Input<inputs.ServiceFabricManagedClusterAuthenticationActiveDirectory>;
    certificates?: pulumi.Input<pulumi.Input<inputs.ServiceFabricManagedClusterAuthenticationCertificate>[]>;
}

export interface ServiceFabricManagedClusterAuthenticationActiveDirectory {
    clientApplicationId: pulumi.Input<string>;
    clusterApplicationId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface ServiceFabricManagedClusterAuthenticationCertificate {
    commonName?: pulumi.Input<string>;
    thumbprint: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ServiceFabricManagedClusterCustomFabricSetting {
    parameter: pulumi.Input<string>;
    section: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ServiceFabricManagedClusterLbRule {
    backendPort: pulumi.Input<number>;
    frontendPort: pulumi.Input<number>;
    probeProtocol: pulumi.Input<string>;
    probeRequestPath?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface ServiceFabricManagedClusterNodeType {
    applicationPortRange: pulumi.Input<string>;
    capacities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    dataDiskSizeGb: pulumi.Input<number>;
    dataDiskType?: pulumi.Input<string>;
    ephemeralPortRange: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    multiplePlacementGroupsEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    placementProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    primary?: pulumi.Input<boolean>;
    stateless?: pulumi.Input<boolean>;
    vmImageOffer: pulumi.Input<string>;
    vmImagePublisher: pulumi.Input<string>;
    vmImageSku: pulumi.Input<string>;
    vmImageVersion: pulumi.Input<string>;
    vmInstanceCount: pulumi.Input<number>;
    vmSecrets?: pulumi.Input<pulumi.Input<inputs.ServiceFabricManagedClusterNodeTypeVmSecret>[]>;
    vmSize: pulumi.Input<string>;
}

export interface ServiceFabricManagedClusterNodeTypeVmSecret {
    certificates: pulumi.Input<pulumi.Input<inputs.ServiceFabricManagedClusterNodeTypeVmSecretCertificate>[]>;
    vaultId: pulumi.Input<string>;
}

export interface ServiceFabricManagedClusterNodeTypeVmSecretCertificate {
    store: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface ServiceFabricManagedClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicePlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusNamespaceAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusNamespaceCustomerManagedKey {
    identityId: pulumi.Input<string>;
    infrastructureEncryptionEnabled?: pulumi.Input<boolean>;
    keyVaultKeyId: pulumi.Input<string>;
}

export interface ServicebusNamespaceDisasterRecoveryConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusNamespaceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface ServicebusNamespaceNetworkRuleSet {
    defaultAction?: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<string>[]>;
    networkRules?: pulumi.Input<pulumi.Input<inputs.ServicebusNamespaceNetworkRuleSetNetworkRule>[]>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    trustedServicesAllowed?: pulumi.Input<boolean>;
}

export interface ServicebusNamespaceNetworkRuleSetNetworkRule {
    ignoreMissingVnetServiceEndpoint?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
}

export interface ServicebusNamespaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusQueueAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusQueueTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusSubscriptionClientScopedSubscription {
    clientId?: pulumi.Input<string>;
    isClientScopedSubscriptionDurable?: pulumi.Input<boolean>;
    isClientScopedSubscriptionShareable?: pulumi.Input<boolean>;
}

export interface ServicebusSubscriptionRuleCorrelationFilter {
    contentType?: pulumi.Input<string>;
    correlationId?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    messageId?: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    replyTo?: pulumi.Input<string>;
    replyToSessionId?: pulumi.Input<string>;
    sessionId?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface ServicebusSubscriptionRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusSubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusTopicAuthorizationRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicebusTopicTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SharedImageGallerySharing {
    communityGallery?: pulumi.Input<inputs.SharedImageGallerySharingCommunityGallery>;
    permission: pulumi.Input<string>;
}

export interface SharedImageGallerySharingCommunityGallery {
    eula: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    prefix: pulumi.Input<string>;
    publisherEmail: pulumi.Input<string>;
    publisherUri: pulumi.Input<string>;
}

export interface SharedImageGalleryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SharedImageIdentifier {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
}

export interface SharedImagePurchasePlan {
    name: pulumi.Input<string>;
    product?: pulumi.Input<string>;
    publisher?: pulumi.Input<string>;
}

export interface SharedImageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SharedImageVersionTargetRegion {
    diskEncryptionSetId?: pulumi.Input<string>;
    excludeFromLatestEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    regionalReplicaCount: pulumi.Input<number>;
    storageAccountType?: pulumi.Input<string>;
}

export interface SharedImageVersionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SignalrServiceCor {
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SignalrServiceCustomCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SignalrServiceCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SignalrServiceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SignalrServiceLiveTrace {
    connectivityLogsEnabled?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    httpRequestLogsEnabled?: pulumi.Input<boolean>;
    messagingLogsEnabled?: pulumi.Input<boolean>;
}

export interface SignalrServiceNetworkAclPrivateEndpoint {
    allowedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
    deniedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id: pulumi.Input<string>;
}

export interface SignalrServiceNetworkAclPublicNetwork {
    allowedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
    deniedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SignalrServiceNetworkAclTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SignalrServiceSku {
    capacity: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface SignalrServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SignalrServiceUpstreamEndpoint {
    categoryPatterns: pulumi.Input<pulumi.Input<string>[]>;
    eventPatterns: pulumi.Input<pulumi.Input<string>[]>;
    hubPatterns: pulumi.Input<pulumi.Input<string>[]>;
    urlTemplate: pulumi.Input<string>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface SignalrSharedPrivateLinkResourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SiteRecoveryFabricTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SiteRecoveryHypervNetworkMappingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SiteRecoveryHypervReplicationPolicyAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SiteRecoveryHypervReplicationPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SiteRecoveryNetworkMappingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SiteRecoveryProtectionContainerMappingAutomaticUpdate {
    authenticationType?: pulumi.Input<string>;
    automationAccountId?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
}

export interface SiteRecoveryProtectionContainerMappingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SiteRecoveryProtectionContainerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SiteRecoveryReplicatedVmManagedDisk {
    diskId: pulumi.Input<string>;
    stagingStorageAccountId: pulumi.Input<string>;
    targetDiskEncryptionSetId: pulumi.Input<string>;
    targetDiskEncryptions: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicatedVmManagedDiskTargetDiskEncryption>[]>;
    targetDiskType: pulumi.Input<string>;
    targetReplicaDiskType: pulumi.Input<string>;
    targetResourceGroupId: pulumi.Input<string>;
}

export interface SiteRecoveryReplicatedVmManagedDiskTargetDiskEncryption {
    diskEncryptionKeys: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicatedVmManagedDiskTargetDiskEncryptionDiskEncryptionKey>[]>;
    keyEncryptionKeys: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicatedVmManagedDiskTargetDiskEncryptionKeyEncryptionKey>[]>;
}

export interface SiteRecoveryReplicatedVmManagedDiskTargetDiskEncryptionDiskEncryptionKey {
    secretUrl: pulumi.Input<string>;
    vaultId: pulumi.Input<string>;
}

export interface SiteRecoveryReplicatedVmManagedDiskTargetDiskEncryptionKeyEncryptionKey {
    keyUrl: pulumi.Input<string>;
    vaultId: pulumi.Input<string>;
}

export interface SiteRecoveryReplicatedVmNetworkInterface {
    failoverTestPublicIpAddressId: pulumi.Input<string>;
    failoverTestStaticIp: pulumi.Input<string>;
    failoverTestSubnetName: pulumi.Input<string>;
    recoveryPublicIpAddressId: pulumi.Input<string>;
    sourceNetworkInterfaceId: pulumi.Input<string>;
    targetStaticIp: pulumi.Input<string>;
    targetSubnetName: pulumi.Input<string>;
}

export interface SiteRecoveryReplicatedVmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SiteRecoveryReplicatedVmUnmanagedDisk {
    diskUri: pulumi.Input<string>;
    stagingStorageAccountId: pulumi.Input<string>;
    targetStorageAccountId: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanAzureToAzureSettings {
    primaryEdgeZone?: pulumi.Input<string>;
    primaryZone?: pulumi.Input<string>;
    recoveryEdgeZone?: pulumi.Input<string>;
    recoveryZone?: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanBootRecoveryGroup {
    postActions?: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicationRecoveryPlanBootRecoveryGroupPostAction>[]>;
    preActions?: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicationRecoveryPlanBootRecoveryGroupPreAction>[]>;
    replicatedProtectedItems?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SiteRecoveryReplicationRecoveryPlanBootRecoveryGroupPostAction {
    fabricLocation?: pulumi.Input<string>;
    failOverDirections: pulumi.Input<pulumi.Input<string>[]>;
    failOverTypes: pulumi.Input<pulumi.Input<string>[]>;
    manualActionInstruction?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    runbookId?: pulumi.Input<string>;
    scriptPath?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanBootRecoveryGroupPreAction {
    fabricLocation?: pulumi.Input<string>;
    failOverDirections: pulumi.Input<pulumi.Input<string>[]>;
    failOverTypes: pulumi.Input<pulumi.Input<string>[]>;
    manualActionInstruction?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    runbookId?: pulumi.Input<string>;
    scriptPath?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanFailoverRecoveryGroup {
    postActions?: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicationRecoveryPlanFailoverRecoveryGroupPostAction>[]>;
    preActions?: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicationRecoveryPlanFailoverRecoveryGroupPreAction>[]>;
}

export interface SiteRecoveryReplicationRecoveryPlanFailoverRecoveryGroupPostAction {
    fabricLocation?: pulumi.Input<string>;
    failOverDirections: pulumi.Input<pulumi.Input<string>[]>;
    failOverTypes: pulumi.Input<pulumi.Input<string>[]>;
    manualActionInstruction?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    runbookId?: pulumi.Input<string>;
    scriptPath?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanFailoverRecoveryGroupPreAction {
    fabricLocation?: pulumi.Input<string>;
    failOverDirections: pulumi.Input<pulumi.Input<string>[]>;
    failOverTypes: pulumi.Input<pulumi.Input<string>[]>;
    manualActionInstruction?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    runbookId?: pulumi.Input<string>;
    scriptPath?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanShutdownRecoveryGroup {
    postActions?: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicationRecoveryPlanShutdownRecoveryGroupPostAction>[]>;
    preActions?: pulumi.Input<pulumi.Input<inputs.SiteRecoveryReplicationRecoveryPlanShutdownRecoveryGroupPreAction>[]>;
}

export interface SiteRecoveryReplicationRecoveryPlanShutdownRecoveryGroupPostAction {
    fabricLocation?: pulumi.Input<string>;
    failOverDirections: pulumi.Input<pulumi.Input<string>[]>;
    failOverTypes: pulumi.Input<pulumi.Input<string>[]>;
    manualActionInstruction?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    runbookId?: pulumi.Input<string>;
    scriptPath?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanShutdownRecoveryGroupPreAction {
    fabricLocation?: pulumi.Input<string>;
    failOverDirections: pulumi.Input<pulumi.Input<string>[]>;
    failOverTypes: pulumi.Input<pulumi.Input<string>[]>;
    manualActionInstruction?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    runbookId?: pulumi.Input<string>;
    scriptPath?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SiteRecoveryReplicationRecoveryPlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SiteRecoveryServicesVaultHypervSiteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SiteRecoveryVmwareReplicatedVmManagedDisk {
    diskId: pulumi.Input<string>;
    logStorageAccountId?: pulumi.Input<string>;
    targetDiskEncryptionSetId?: pulumi.Input<string>;
    targetDiskType: pulumi.Input<string>;
}

export interface SiteRecoveryVmwareReplicatedVmNetworkInterface {
    isPrimary: pulumi.Input<boolean>;
    sourceMacAddress: pulumi.Input<string>;
    targetStaticIp?: pulumi.Input<string>;
    targetSubnetName?: pulumi.Input<string>;
    testSubnetName?: pulumi.Input<string>;
}

export interface SiteRecoveryVmwareReplicatedVmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SiteRecoveryVmwareReplicationPolicyAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SiteRecoveryVmwareReplicationPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SnapshotEncryptionSettings {
    diskEncryptionKey: pulumi.Input<inputs.SnapshotEncryptionSettingsDiskEncryptionKey>;
    keyEncryptionKey?: pulumi.Input<inputs.SnapshotEncryptionSettingsKeyEncryptionKey>;
}

export interface SnapshotEncryptionSettingsDiskEncryptionKey {
    secretUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface SnapshotEncryptionSettingsKeyEncryptionKey {
    keyUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface SnapshotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SourceControlTokenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpatialAnchorsAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudAcceleratorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SpringCloudActiveDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudApiPortalCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudApiPortalSso {
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    issuerUri?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SpringCloudApiPortalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudAppCosmosdbAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudAppCustomPersistentDisk {
    mountOptions?: pulumi.Input<pulumi.Input<string>[]>;
    mountPath: pulumi.Input<string>;
    readOnlyEnabled?: pulumi.Input<boolean>;
    shareName: pulumi.Input<string>;
    storageName: pulumi.Input<string>;
}

export interface SpringCloudAppDynamicsApplicationPerformanceMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SpringCloudAppIngressSettings {
    backendProtocol?: pulumi.Input<string>;
    readTimeoutInSeconds?: pulumi.Input<number>;
    sendTimeoutInSeconds?: pulumi.Input<number>;
    sessionAffinity?: pulumi.Input<string>;
    sessionCookieMaxAge?: pulumi.Input<number>;
}

export interface SpringCloudAppMysqlAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudAppPersistentDisk {
    mountPath?: pulumi.Input<string>;
    sizeInGb: pulumi.Input<number>;
}

export interface SpringCloudAppRedisAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudApplicationInsightsApplicationPerformanceMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudApplicationLiveViewTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SpringCloudBuildDeploymentQuota {
    cpu?: pulumi.Input<string>;
    memory?: pulumi.Input<string>;
}

export interface SpringCloudBuildDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudBuildPackBindingLaunch {
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    secrets?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface SpringCloudBuildPackBindingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudBuilderBuildPackGroup {
    buildPackIds?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface SpringCloudBuilderStack {
    id: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface SpringCloudBuilderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SpringCloudConfigurationServiceRepository {
    caCertificateId?: pulumi.Input<string>;
    hostKey?: pulumi.Input<string>;
    hostKeyAlgorithm?: pulumi.Input<string>;
    label: pulumi.Input<string>;
    name: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    patterns: pulumi.Input<pulumi.Input<string>[]>;
    privateKey?: pulumi.Input<string>;
    searchPaths?: pulumi.Input<pulumi.Input<string>[]>;
    strictHostKeyChecking?: pulumi.Input<boolean>;
    uri: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface SpringCloudConfigurationServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudConnectionAuthentication {
    certificate?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    principalId?: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SpringCloudConnectionSecretStore {
    keyVaultId: pulumi.Input<string>;
}

export interface SpringCloudConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudContainerDeploymentQuota {
    cpu?: pulumi.Input<string>;
    memory?: pulumi.Input<string>;
}

export interface SpringCloudContainerDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudCustomizedAcceleratorGitRepository {
    basicAuth?: pulumi.Input<inputs.SpringCloudCustomizedAcceleratorGitRepositoryBasicAuth>;
    branch?: pulumi.Input<string>;
    caCertificateId?: pulumi.Input<string>;
    commit?: pulumi.Input<string>;
    gitTag?: pulumi.Input<string>;
    intervalInSeconds?: pulumi.Input<number>;
    path?: pulumi.Input<string>;
    sshAuth?: pulumi.Input<inputs.SpringCloudCustomizedAcceleratorGitRepositorySshAuth>;
    url: pulumi.Input<string>;
}

export interface SpringCloudCustomizedAcceleratorGitRepositoryBasicAuth {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SpringCloudCustomizedAcceleratorGitRepositorySshAuth {
    hostKey?: pulumi.Input<string>;
    hostKeyAlgorithm?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
}

export interface SpringCloudCustomizedAcceleratorTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudDevToolPortalSso {
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    metadataUrl?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SpringCloudDevToolPortalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudDynatraceApplicationPerformanceMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudElasticApplicationPerformanceMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudGatewayApiMetadata {
    description?: pulumi.Input<string>;
    documentationUrl?: pulumi.Input<string>;
    serverUrl?: pulumi.Input<string>;
    title?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface SpringCloudGatewayClientAuthorization {
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    verificationEnabled?: pulumi.Input<boolean>;
}

export interface SpringCloudGatewayCors {
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
    allowedOriginPatterns?: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    credentialsAllowed?: pulumi.Input<boolean>;
    exposedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeSeconds?: pulumi.Input<number>;
}

export interface SpringCloudGatewayCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudGatewayLocalResponseCachePerInstance {
    size?: pulumi.Input<string>;
    timeToLive?: pulumi.Input<string>;
}

export interface SpringCloudGatewayLocalResponseCachePerRoute {
    size?: pulumi.Input<string>;
    timeToLive?: pulumi.Input<string>;
}

export interface SpringCloudGatewayQuota {
    cpu?: pulumi.Input<string>;
    memory?: pulumi.Input<string>;
}

export interface SpringCloudGatewayRouteConfigOpenApi {
    uri?: pulumi.Input<string>;
}

export interface SpringCloudGatewayRouteConfigRoute {
    classificationTags?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    order: pulumi.Input<number>;
    predicates?: pulumi.Input<pulumi.Input<string>[]>;
    ssoValidationEnabled?: pulumi.Input<boolean>;
    title?: pulumi.Input<string>;
    tokenRelay?: pulumi.Input<boolean>;
    uri?: pulumi.Input<string>;
}

export interface SpringCloudGatewayRouteConfigTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudGatewaySso {
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    issuerUri?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SpringCloudGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudJavaDeploymentQuota {
    cpu?: pulumi.Input<string>;
    memory?: pulumi.Input<string>;
}

export interface SpringCloudJavaDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudNewRelicApplicationPerformanceMonitoringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudServiceConfigServerGitSetting {
    httpBasicAuth?: pulumi.Input<inputs.SpringCloudServiceConfigServerGitSettingHttpBasicAuth>;
    label?: pulumi.Input<string>;
    repositories?: pulumi.Input<pulumi.Input<inputs.SpringCloudServiceConfigServerGitSettingRepository>[]>;
    searchPaths?: pulumi.Input<pulumi.Input<string>[]>;
    sshAuth?: pulumi.Input<inputs.SpringCloudServiceConfigServerGitSettingSshAuth>;
    uri: pulumi.Input<string>;
}

export interface SpringCloudServiceConfigServerGitSettingHttpBasicAuth {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SpringCloudServiceConfigServerGitSettingRepository {
    httpBasicAuth?: pulumi.Input<inputs.SpringCloudServiceConfigServerGitSettingRepositoryHttpBasicAuth>;
    label?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    patterns?: pulumi.Input<pulumi.Input<string>[]>;
    searchPaths?: pulumi.Input<pulumi.Input<string>[]>;
    sshAuth?: pulumi.Input<inputs.SpringCloudServiceConfigServerGitSettingRepositorySshAuth>;
    uri: pulumi.Input<string>;
}

export interface SpringCloudServiceConfigServerGitSettingRepositoryHttpBasicAuth {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SpringCloudServiceConfigServerGitSettingRepositorySshAuth {
    hostKey?: pulumi.Input<string>;
    hostKeyAlgorithm?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    strictHostKeyCheckingEnabled?: pulumi.Input<boolean>;
}

export interface SpringCloudServiceConfigServerGitSettingSshAuth {
    hostKey?: pulumi.Input<string>;
    hostKeyAlgorithm?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    strictHostKeyCheckingEnabled?: pulumi.Input<boolean>;
}

export interface SpringCloudServiceContainerRegistry {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
    server: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SpringCloudServiceDefaultBuildService {
    containerRegistryName?: pulumi.Input<string>;
}

export interface SpringCloudServiceMarketplace {
    plan: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface SpringCloudServiceNetwork {
    appNetworkResourceGroup?: pulumi.Input<string>;
    appSubnetId: pulumi.Input<string>;
    cidrRanges: pulumi.Input<pulumi.Input<string>[]>;
    outboundType?: pulumi.Input<string>;
    readTimeoutSeconds?: pulumi.Input<number>;
    serviceRuntimeNetworkResourceGroup?: pulumi.Input<string>;
    serviceRuntimeSubnetId: pulumi.Input<string>;
}

export interface SpringCloudServiceRequiredNetworkTrafficRule {
    direction: pulumi.Input<string>;
    fqdns: pulumi.Input<pulumi.Input<string>[]>;
    ipAddresses: pulumi.Input<pulumi.Input<string>[]>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
}

export interface SpringCloudServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SpringCloudServiceTrace {
    connectionString?: pulumi.Input<string>;
    sampleRate?: pulumi.Input<number>;
}

export interface SpringCloudStorageTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SshPublicKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackHciClusterIdentity {
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StackHciClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StackHciLogicalNetworkSubnet {
    addressPrefix?: pulumi.Input<string>;
    ipAllocationMethod: pulumi.Input<string>;
    ipPools?: pulumi.Input<pulumi.Input<inputs.StackHciLogicalNetworkSubnetIpPool>[]>;
    routes?: pulumi.Input<pulumi.Input<inputs.StackHciLogicalNetworkSubnetRoute>[]>;
    vlanId?: pulumi.Input<number>;
}

export interface StackHciLogicalNetworkSubnetIpPool {
    end: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface StackHciLogicalNetworkSubnetRoute {
    addressPrefix: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nextHopIpAddress: pulumi.Input<string>;
}

export interface StackHciLogicalNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StaticSiteCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface StaticSiteIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StaticSiteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StaticWebAppBasicAuth {
    environments: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface StaticWebAppCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface StaticWebAppFunctionAppRegistrationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface StaticWebAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StaticWebAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageAccountAzureFilesAuthentication {
    activeDirectory?: pulumi.Input<inputs.StorageAccountAzureFilesAuthenticationActiveDirectory>;
    defaultShareLevelPermission?: pulumi.Input<string>;
    directoryType: pulumi.Input<string>;
}

export interface StorageAccountAzureFilesAuthenticationActiveDirectory {
    domainGuid: pulumi.Input<string>;
    domainName: pulumi.Input<string>;
    domainSid?: pulumi.Input<string>;
    forestName?: pulumi.Input<string>;
    netbiosDomainName?: pulumi.Input<string>;
    storageSid?: pulumi.Input<string>;
}

export interface StorageAccountBlobProperties {
    changeFeedEnabled?: pulumi.Input<boolean>;
    changeFeedRetentionInDays?: pulumi.Input<number>;
    containerDeleteRetentionPolicy?: pulumi.Input<inputs.StorageAccountBlobPropertiesContainerDeleteRetentionPolicy>;
    corsRules?: pulumi.Input<pulumi.Input<inputs.StorageAccountBlobPropertiesCorsRule>[]>;
    defaultServiceVersion?: pulumi.Input<string>;
    deleteRetentionPolicy?: pulumi.Input<inputs.StorageAccountBlobPropertiesDeleteRetentionPolicy>;
    lastAccessTimeEnabled?: pulumi.Input<boolean>;
    restorePolicy?: pulumi.Input<inputs.StorageAccountBlobPropertiesRestorePolicy>;
    versioningEnabled?: pulumi.Input<boolean>;
}

export interface StorageAccountBlobPropertiesContainerDeleteRetentionPolicy {
    days?: pulumi.Input<number>;
}

export interface StorageAccountBlobPropertiesCorsRule {
    allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeInSeconds: pulumi.Input<number>;
}

export interface StorageAccountBlobPropertiesDeleteRetentionPolicy {
    days?: pulumi.Input<number>;
    permanentDeleteEnabled?: pulumi.Input<boolean>;
}

export interface StorageAccountBlobPropertiesRestorePolicy {
    days: pulumi.Input<number>;
}

export interface StorageAccountCustomDomain {
    name: pulumi.Input<string>;
    useSubdomain?: pulumi.Input<boolean>;
}

export interface StorageAccountCustomerManagedKey {
    keyVaultKeyId?: pulumi.Input<string>;
    managedHsmKeyId?: pulumi.Input<string>;
    userAssignedIdentityId: pulumi.Input<string>;
}

export interface StorageAccountCustomerManagedKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageAccountIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StorageAccountImmutabilityPolicy {
    allowProtectedAppendWrites: pulumi.Input<boolean>;
    periodSinceCreationInDays: pulumi.Input<number>;
    state: pulumi.Input<string>;
}

export interface StorageAccountLocalUserPermissionScope {
    permissions: pulumi.Input<inputs.StorageAccountLocalUserPermissionScopePermissions>;
    resourceName: pulumi.Input<string>;
    service: pulumi.Input<string>;
}

export interface StorageAccountLocalUserPermissionScopePermissions {
    create?: pulumi.Input<boolean>;
    delete?: pulumi.Input<boolean>;
    list?: pulumi.Input<boolean>;
    read?: pulumi.Input<boolean>;
    write?: pulumi.Input<boolean>;
}

export interface StorageAccountLocalUserSshAuthorizedKey {
    description?: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface StorageAccountLocalUserTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageAccountNetworkRules {
    bypasses?: pulumi.Input<pulumi.Input<string>[]>;
    defaultAction: pulumi.Input<string>;
    ipRules?: pulumi.Input<pulumi.Input<string>[]>;
    privateLinkAccesses?: pulumi.Input<pulumi.Input<inputs.StorageAccountNetworkRulesPrivateLinkAccess>[]>;
    virtualNetworkSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface StorageAccountNetworkRulesPrivateLinkAccess {
    endpointResourceId: pulumi.Input<string>;
    endpointTenantId?: pulumi.Input<string>;
}

export interface StorageAccountNetworkRulesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageAccountQueueProperties {
    corsRules?: pulumi.Input<pulumi.Input<inputs.StorageAccountQueuePropertiesCorsRule>[]>;
    hourMetrics?: pulumi.Input<inputs.StorageAccountQueuePropertiesHourMetrics>;
    logging?: pulumi.Input<inputs.StorageAccountQueuePropertiesLogging>;
    minuteMetrics?: pulumi.Input<inputs.StorageAccountQueuePropertiesMinuteMetrics>;
}

export interface StorageAccountQueuePropertiesCorsRule {
    allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeInSeconds: pulumi.Input<number>;
}

export interface StorageAccountQueuePropertiesHourMetrics {
    enabled: pulumi.Input<boolean>;
    includeApis?: pulumi.Input<boolean>;
    retentionPolicyDays?: pulumi.Input<number>;
    version: pulumi.Input<string>;
}

export interface StorageAccountQueuePropertiesLogging {
    delete: pulumi.Input<boolean>;
    read: pulumi.Input<boolean>;
    retentionPolicyDays?: pulumi.Input<number>;
    version: pulumi.Input<string>;
    write: pulumi.Input<boolean>;
}

export interface StorageAccountQueuePropertiesMinuteMetrics {
    enabled: pulumi.Input<boolean>;
    includeApis?: pulumi.Input<boolean>;
    retentionPolicyDays?: pulumi.Input<number>;
    version: pulumi.Input<string>;
}

export interface StorageAccountRouting {
    choice?: pulumi.Input<string>;
    publishInternetEndpoints?: pulumi.Input<boolean>;
    publishMicrosoftEndpoints?: pulumi.Input<boolean>;
}

export interface StorageAccountSasPolicy {
    expirationAction?: pulumi.Input<string>;
    expirationPeriod: pulumi.Input<string>;
}

export interface StorageAccountShareProperties {
    corsRules?: pulumi.Input<pulumi.Input<inputs.StorageAccountSharePropertiesCorsRule>[]>;
    retentionPolicy?: pulumi.Input<inputs.StorageAccountSharePropertiesRetentionPolicy>;
    smb?: pulumi.Input<inputs.StorageAccountSharePropertiesSmb>;
}

export interface StorageAccountSharePropertiesCorsRule {
    allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposedHeaders: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeInSeconds: pulumi.Input<number>;
}

export interface StorageAccountSharePropertiesRetentionPolicy {
    days?: pulumi.Input<number>;
}

export interface StorageAccountSharePropertiesSmb {
    authenticationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    channelEncryptionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    kerberosTicketEncryptionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    multichannelEnabled?: pulumi.Input<boolean>;
    versions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface StorageAccountStaticWebsite {
    error404Document?: pulumi.Input<string>;
    indexDocument?: pulumi.Input<string>;
}

export interface StorageAccountTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageBlobInventoryPolicyRule {
    filter?: pulumi.Input<inputs.StorageBlobInventoryPolicyRuleFilter>;
    format: pulumi.Input<string>;
    name: pulumi.Input<string>;
    schedule: pulumi.Input<string>;
    schemaFields: pulumi.Input<pulumi.Input<string>[]>;
    scope: pulumi.Input<string>;
    storageContainerName: pulumi.Input<string>;
}

export interface StorageBlobInventoryPolicyRuleFilter {
    blobTypes: pulumi.Input<pulumi.Input<string>[]>;
    excludePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    includeBlobVersions?: pulumi.Input<boolean>;
    includeDeleted?: pulumi.Input<boolean>;
    includeSnapshots?: pulumi.Input<boolean>;
    prefixMatches?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface StorageBlobInventoryPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageBlobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageContainerImmutabilityPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageContainerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageDataLakeGen2FilesystemAce {
    id?: pulumi.Input<string>;
    permissions: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StorageDataLakeGen2FilesystemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageDataLakeGen2PathAce {
    id?: pulumi.Input<string>;
    permissions: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StorageDataLakeGen2PathTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageEncryptionScopeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageManagementPolicyRule {
    actions: pulumi.Input<inputs.StorageManagementPolicyRuleActions>;
    enabled: pulumi.Input<boolean>;
    filters: pulumi.Input<inputs.StorageManagementPolicyRuleFilters>;
    name: pulumi.Input<string>;
}

export interface StorageManagementPolicyRuleActions {
    baseBlob?: pulumi.Input<inputs.StorageManagementPolicyRuleActionsBaseBlob>;
    snapshot?: pulumi.Input<inputs.StorageManagementPolicyRuleActionsSnapshot>;
    version?: pulumi.Input<inputs.StorageManagementPolicyRuleActionsVersion>;
}

export interface StorageManagementPolicyRuleActionsBaseBlob {
    autoTierToHotFromCoolEnabled?: pulumi.Input<boolean>;
    deleteAfterDaysSinceCreationGreaterThan?: pulumi.Input<number>;
    deleteAfterDaysSinceLastAccessTimeGreaterThan?: pulumi.Input<number>;
    deleteAfterDaysSinceModificationGreaterThan?: pulumi.Input<number>;
    tierToArchiveAfterDaysSinceCreationGreaterThan?: pulumi.Input<number>;
    tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan?: pulumi.Input<number>;
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: pulumi.Input<number>;
    tierToArchiveAfterDaysSinceModificationGreaterThan?: pulumi.Input<number>;
    tierToColdAfterDaysSinceCreationGreaterThan?: pulumi.Input<number>;
    tierToColdAfterDaysSinceLastAccessTimeGreaterThan?: pulumi.Input<number>;
    tierToColdAfterDaysSinceModificationGreaterThan?: pulumi.Input<number>;
    tierToCoolAfterDaysSinceCreationGreaterThan?: pulumi.Input<number>;
    tierToCoolAfterDaysSinceLastAccessTimeGreaterThan?: pulumi.Input<number>;
    tierToCoolAfterDaysSinceModificationGreaterThan?: pulumi.Input<number>;
}

export interface StorageManagementPolicyRuleActionsSnapshot {
    changeTierToArchiveAfterDaysSinceCreation?: pulumi.Input<number>;
    changeTierToCoolAfterDaysSinceCreation?: pulumi.Input<number>;
    deleteAfterDaysSinceCreationGreaterThan?: pulumi.Input<number>;
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: pulumi.Input<number>;
    tierToColdAfterDaysSinceCreationGreaterThan?: pulumi.Input<number>;
}

export interface StorageManagementPolicyRuleActionsVersion {
    changeTierToArchiveAfterDaysSinceCreation?: pulumi.Input<number>;
    changeTierToCoolAfterDaysSinceCreation?: pulumi.Input<number>;
    deleteAfterDaysSinceCreation?: pulumi.Input<number>;
    tierToArchiveAfterDaysSinceLastTierChangeGreaterThan?: pulumi.Input<number>;
    tierToColdAfterDaysSinceCreationGreaterThan?: pulumi.Input<number>;
}

export interface StorageManagementPolicyRuleFilters {
    blobTypes: pulumi.Input<pulumi.Input<string>[]>;
    matchBlobIndexTags?: pulumi.Input<pulumi.Input<inputs.StorageManagementPolicyRuleFiltersMatchBlobIndexTag>[]>;
    prefixMatches?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface StorageManagementPolicyRuleFiltersMatchBlobIndexTag {
    name: pulumi.Input<string>;
    operation?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface StorageManagementPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageMoverAgentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageMoverJobDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageMoverProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageMoverSourceEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageMoverTargetEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageMoverTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageObjectReplicationRule {
    copyBlobsCreatedAfter?: pulumi.Input<string>;
    destinationContainerName: pulumi.Input<string>;
    filterOutBlobsWithPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    sourceContainerName: pulumi.Input<string>;
}

export interface StorageObjectReplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageQueueTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageShareAcl {
    accessPolicies?: pulumi.Input<pulumi.Input<inputs.StorageShareAclAccessPolicy>[]>;
    id: pulumi.Input<string>;
}

export interface StorageShareAclAccessPolicy {
    expiry?: pulumi.Input<string>;
    permissions: pulumi.Input<string>;
    start?: pulumi.Input<string>;
}

export interface StorageShareDirectoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageShareFileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageShareTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageSyncCloudEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface StorageSyncGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface StorageSyncServerEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageSyncTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageTableAcl {
    accessPolicies?: pulumi.Input<pulumi.Input<inputs.StorageTableAclAccessPolicy>[]>;
    id: pulumi.Input<string>;
}

export interface StorageTableAclAccessPolicy {
    expiry: pulumi.Input<string>;
    permissions: pulumi.Input<string>;
    start: pulumi.Input<string>;
}

export interface StorageTableEntityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StorageTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsFunctionJavascriptUdaInput {
    configurationParameter?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsFunctionJavascriptUdaOutput {
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsFunctionJavascriptUdaTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsFunctionJavascriptUdfInput {
    configurationParameter?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsFunctionJavascriptUdfOutput {
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsFunctionJavascriptUdfTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsJobIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsJobJobStorageAccount {
    accountKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    authenticationMode?: pulumi.Input<string>;
}

export interface StreamAnalyticsJobScheduleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsJobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsManagedPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputBlobSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    format?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputBlobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputCosmosdbTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputEventhubSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    format?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputEventhubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputFunctionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputMssqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputPowerbiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputServicebusQueueSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    format?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputServicebusQueueTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputServicebusTopicSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    format?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputServicebusTopicTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputSynapseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsOutputTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsReferenceInputBlobSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsReferenceInputBlobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsReferenceInputMssqlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputBlobSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputBlobTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputEventhubSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputEventhubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputEventhubV2Serialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputEventhubV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputIothubSerialization {
    encoding?: pulumi.Input<string>;
    fieldDelimiter?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface StreamAnalyticsStreamInputIothubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubnetDelegation {
    name: pulumi.Input<string>;
    serviceDelegation: pulumi.Input<inputs.SubnetDelegationServiceDelegation>;
}

export interface SubnetDelegationServiceDelegation {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface SubnetNatGatewayAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SubnetNetworkSecurityGroupAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SubnetRouteTableAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SubnetServiceEndpointStoragePolicyDefinition {
    description?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    service?: pulumi.Input<string>;
    serviceResources: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SubnetServiceEndpointStoragePolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubnetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubscriptionCostManagementExportExportDataOptions {
    timeFrame: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SubscriptionCostManagementExportExportDataStorageLocation {
    containerId: pulumi.Input<string>;
    rootFolderPath: pulumi.Input<string>;
}

export interface SubscriptionCostManagementExportTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubscriptionCostManagementViewDataset {
    aggregations: pulumi.Input<pulumi.Input<inputs.SubscriptionCostManagementViewDatasetAggregation>[]>;
    granularity: pulumi.Input<string>;
    groupings?: pulumi.Input<pulumi.Input<inputs.SubscriptionCostManagementViewDatasetGrouping>[]>;
    sortings?: pulumi.Input<pulumi.Input<inputs.SubscriptionCostManagementViewDatasetSorting>[]>;
}

export interface SubscriptionCostManagementViewDatasetAggregation {
    columnName: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SubscriptionCostManagementViewDatasetGrouping {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SubscriptionCostManagementViewDatasetSorting {
    direction: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface SubscriptionCostManagementViewKpi {
    type: pulumi.Input<string>;
}

export interface SubscriptionCostManagementViewPivot {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SubscriptionCostManagementViewTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubscriptionPolicyAssignmentIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SubscriptionPolicyAssignmentNonComplianceMessage {
    content: pulumi.Input<string>;
    policyDefinitionReferenceId?: pulumi.Input<string>;
}

export interface SubscriptionPolicyAssignmentOverride {
    selectors?: pulumi.Input<pulumi.Input<inputs.SubscriptionPolicyAssignmentOverrideSelector>[]>;
    value: pulumi.Input<string>;
}

export interface SubscriptionPolicyAssignmentOverrideSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind?: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SubscriptionPolicyAssignmentResourceSelector {
    name?: pulumi.Input<string>;
    selectors: pulumi.Input<pulumi.Input<inputs.SubscriptionPolicyAssignmentResourceSelectorSelector>[]>;
}

export interface SubscriptionPolicyAssignmentResourceSelectorSelector {
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    kind: pulumi.Input<string>;
    notIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SubscriptionPolicyAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubscriptionPolicyExemptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubscriptionPolicyRemediationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubscriptionTemplateDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SubscriptionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseFirewallRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseIntegrationRuntimeAzureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseIntegrationRuntimeSelfHostedTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseLinkedServiceIntegrationRuntime {
    name: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface SynapseLinkedServiceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseManagedPrivateEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SynapsePrivateLinkHubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseRoleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface SynapseSparkPoolAutoPause {
    delayInMinutes: pulumi.Input<number>;
}

export interface SynapseSparkPoolAutoScale {
    maxNodeCount: pulumi.Input<number>;
    minNodeCount: pulumi.Input<number>;
}

export interface SynapseSparkPoolLibraryRequirement {
    content: pulumi.Input<string>;
    filename: pulumi.Input<string>;
}

export interface SynapseSparkPoolSparkConfig {
    content: pulumi.Input<string>;
    filename: pulumi.Input<string>;
}

export interface SynapseSparkPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseSqlPoolExtendedAuditingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseSqlPoolRestore {
    pointInTime: pulumi.Input<string>;
    sourceDatabaseId: pulumi.Input<string>;
}

export interface SynapseSqlPoolSecurityAlertPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseSqlPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseSqlPoolVulnerabilityAssessmentBaselineBaseline {
    results: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SynapseSqlPoolVulnerabilityAssessmentBaselineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseSqlPoolVulnerabilityAssessmentRecurringScans {
    emailSubscriptionAdminsEnabled?: pulumi.Input<boolean>;
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
}

export interface SynapseSqlPoolVulnerabilityAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseSqlPoolWorkloadClassifierTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseSqlPoolWorkloadGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseWorkspaceAadAdminTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseWorkspaceAzureDevopsRepo {
    accountName: pulumi.Input<string>;
    branchName: pulumi.Input<string>;
    lastCommitId?: pulumi.Input<string>;
    projectName: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
    rootFolder: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
}

export interface SynapseWorkspaceCustomerManagedKey {
    keyName?: pulumi.Input<string>;
    keyVersionlessId: pulumi.Input<string>;
    userAssignedIdentityId?: pulumi.Input<string>;
}

export interface SynapseWorkspaceExtendedAuditingPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseWorkspaceGithubRepo {
    accountName: pulumi.Input<string>;
    branchName: pulumi.Input<string>;
    gitUrl?: pulumi.Input<string>;
    lastCommitId?: pulumi.Input<string>;
    repositoryName: pulumi.Input<string>;
    rootFolder: pulumi.Input<string>;
}

export interface SynapseWorkspaceIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SynapseWorkspaceKeyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseWorkspaceSecurityAlertPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseWorkspaceSqlAadAdminTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SynapseWorkspaceVulnerabilityAssessmentRecurringScans {
    emailSubscriptionAdminsEnabled?: pulumi.Input<boolean>;
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    enabled?: pulumi.Input<boolean>;
}

export interface SynapseWorkspaceVulnerabilityAssessmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SystemCenterVirtualMachineManagerAvailabilitySetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SystemCenterVirtualMachineManagerCloudTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SystemCenterVirtualMachineManagerServerTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SystemCenterVirtualMachineManagerVirtualMachineTemplateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SystemCenterVirtualMachineManagerVirtualNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TenantTemplateDeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TrafficManagerAzureEndpointCustomHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface TrafficManagerAzureEndpointSubnet {
    first: pulumi.Input<string>;
    last?: pulumi.Input<string>;
    scope?: pulumi.Input<number>;
}

export interface TrafficManagerAzureEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TrafficManagerExternalEndpointCustomHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface TrafficManagerExternalEndpointSubnet {
    first: pulumi.Input<string>;
    last?: pulumi.Input<string>;
    scope?: pulumi.Input<number>;
}

export interface TrafficManagerExternalEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TrafficManagerNestedEndpointCustomHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface TrafficManagerNestedEndpointSubnet {
    first: pulumi.Input<string>;
    last?: pulumi.Input<string>;
    scope?: pulumi.Input<number>;
}

export interface TrafficManagerNestedEndpointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TrafficManagerProfileDnsConfig {
    relativeName: pulumi.Input<string>;
    ttl: pulumi.Input<number>;
}

export interface TrafficManagerProfileMonitorConfig {
    customHeaders?: pulumi.Input<pulumi.Input<inputs.TrafficManagerProfileMonitorConfigCustomHeader>[]>;
    expectedStatusCodeRanges?: pulumi.Input<pulumi.Input<string>[]>;
    intervalInSeconds?: pulumi.Input<number>;
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    timeoutInSeconds?: pulumi.Input<number>;
    toleratedNumberOfFailures?: pulumi.Input<number>;
}

export interface TrafficManagerProfileMonitorConfigCustomHeader {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface TrafficManagerProfileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface UserAssignedIdentityTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualDesktopApplicationGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualDesktopApplicationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualDesktopHostPoolRegistrationInfoTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualDesktopHostPoolScheduledAgentUpdates {
    enabled?: pulumi.Input<boolean>;
    schedules?: pulumi.Input<pulumi.Input<inputs.VirtualDesktopHostPoolScheduledAgentUpdatesSchedule>[]>;
    timezone?: pulumi.Input<string>;
    useSessionHostTimezone?: pulumi.Input<boolean>;
}

export interface VirtualDesktopHostPoolScheduledAgentUpdatesSchedule {
    dayOfWeek: pulumi.Input<string>;
    hourOfDay: pulumi.Input<number>;
}

export interface VirtualDesktopHostPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualDesktopScalingPlanHostPool {
    hostpoolId: pulumi.Input<string>;
    scalingPlanEnabled: pulumi.Input<boolean>;
}

export interface VirtualDesktopScalingPlanHostPoolAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualDesktopScalingPlanSchedule {
    daysOfWeeks: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    offPeakLoadBalancingAlgorithm: pulumi.Input<string>;
    offPeakStartTime: pulumi.Input<string>;
    peakLoadBalancingAlgorithm: pulumi.Input<string>;
    peakStartTime: pulumi.Input<string>;
    rampDownCapacityThresholdPercent: pulumi.Input<number>;
    rampDownForceLogoffUsers: pulumi.Input<boolean>;
    rampDownLoadBalancingAlgorithm: pulumi.Input<string>;
    rampDownMinimumHostsPercent: pulumi.Input<number>;
    rampDownNotificationMessage: pulumi.Input<string>;
    rampDownStartTime: pulumi.Input<string>;
    rampDownStopHostsWhen: pulumi.Input<string>;
    rampDownWaitTimeMinutes: pulumi.Input<number>;
    rampUpCapacityThresholdPercent?: pulumi.Input<number>;
    rampUpLoadBalancingAlgorithm: pulumi.Input<string>;
    rampUpMinimumHostsPercent?: pulumi.Input<number>;
    rampUpStartTime: pulumi.Input<string>;
}

export interface VirtualDesktopScalingPlanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualDesktopWorkspaceApplicationGroupAssociationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface VirtualDesktopWorkspaceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubBgpConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubConnectionRouting {
    associatedRouteTableId?: pulumi.Input<string>;
    inboundRouteMapId?: pulumi.Input<string>;
    outboundRouteMapId?: pulumi.Input<string>;
    propagatedRouteTable?: pulumi.Input<inputs.VirtualHubConnectionRoutingPropagatedRouteTable>;
    staticVnetLocalRouteOverrideCriteria?: pulumi.Input<string>;
    staticVnetRoutes?: pulumi.Input<pulumi.Input<inputs.VirtualHubConnectionRoutingStaticVnetRoute>[]>;
}

export interface VirtualHubConnectionRoutingPropagatedRouteTable {
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualHubConnectionRoutingStaticVnetRoute {
    addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    nextHopIpAddress?: pulumi.Input<string>;
}

export interface VirtualHubConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubIpTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubRoute {
    addressPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    nextHopIpAddress: pulumi.Input<string>;
}

export interface VirtualHubRouteTableRoute {
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    destinationsType: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nextHop: pulumi.Input<string>;
    nextHopType?: pulumi.Input<string>;
}

export interface VirtualHubRouteTableRouteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubRouteTableTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubRoutingIntentRoutingPolicy {
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    nextHop: pulumi.Input<string>;
}

export interface VirtualHubRoutingIntentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubSecurityPartnerProviderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualHubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineAdditionalCapabilities {
    ultraSsdEnabled: pulumi.Input<boolean>;
}

export interface VirtualMachineAutomanageConfigurationAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface VirtualMachineBootDiagnostics {
    enabled: pulumi.Input<boolean>;
    storageUri: pulumi.Input<string>;
}

export interface VirtualMachineDataDiskAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineExtensionProtectedSettingsFromKeyVault {
    secretUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface VirtualMachineExtensionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineGalleryApplicationAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface VirtualMachineImplicitDataDiskFromSourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineOsProfile {
    adminPassword?: pulumi.Input<string>;
    adminUsername: pulumi.Input<string>;
    computerName: pulumi.Input<string>;
    customData?: pulumi.Input<string>;
}

export interface VirtualMachineOsProfileLinuxConfig {
    disablePasswordAuthentication: pulumi.Input<boolean>;
    sshKeys?: pulumi.Input<pulumi.Input<inputs.VirtualMachineOsProfileLinuxConfigSshKey>[]>;
}

export interface VirtualMachineOsProfileLinuxConfigSshKey {
    keyData: pulumi.Input<string>;
    path: pulumi.Input<string>;
}

export interface VirtualMachineOsProfileSecret {
    sourceVaultId: pulumi.Input<string>;
    vaultCertificates?: pulumi.Input<pulumi.Input<inputs.VirtualMachineOsProfileSecretVaultCertificate>[]>;
}

export interface VirtualMachineOsProfileSecretVaultCertificate {
    certificateStore?: pulumi.Input<string>;
    certificateUrl: pulumi.Input<string>;
}

export interface VirtualMachineOsProfileWindowsConfig {
    additionalUnattendConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig>[]>;
    enableAutomaticUpgrades?: pulumi.Input<boolean>;
    provisionVmAgent?: pulumi.Input<boolean>;
    timezone?: pulumi.Input<string>;
    winrms?: pulumi.Input<pulumi.Input<inputs.VirtualMachineOsProfileWindowsConfigWinrm>[]>;
}

export interface VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig {
    component: pulumi.Input<string>;
    content: pulumi.Input<string>;
    pass: pulumi.Input<string>;
    settingName: pulumi.Input<string>;
}

export interface VirtualMachineOsProfileWindowsConfigWinrm {
    certificateUrl?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface VirtualMachinePacketCaptureFilter {
    localIpAddress?: pulumi.Input<string>;
    localPort?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    remoteIpAddress?: pulumi.Input<string>;
    remotePort?: pulumi.Input<string>;
}

export interface VirtualMachinePacketCaptureStorageLocation {
    filePath?: pulumi.Input<string>;
    storageAccountId?: pulumi.Input<string>;
    storagePath?: pulumi.Input<string>;
}

export interface VirtualMachinePacketCaptureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface VirtualMachinePlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface VirtualMachineRestorePointCollectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineRestorePointTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface VirtualMachineRunCommandErrorBlobManagedIdentity {
    clientId?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
}

export interface VirtualMachineRunCommandInstanceView {
    endTime: pulumi.Input<string>;
    errorMessage: pulumi.Input<string>;
    executionMessage: pulumi.Input<string>;
    executionState: pulumi.Input<string>;
    exitCode: pulumi.Input<number>;
    output: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}

export interface VirtualMachineRunCommandOutputBlobManagedIdentity {
    clientId?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
}

export interface VirtualMachineRunCommandParameter {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface VirtualMachineRunCommandProtectedParameter {
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface VirtualMachineRunCommandSource {
    commandId?: pulumi.Input<string>;
    script?: pulumi.Input<string>;
    scriptUri?: pulumi.Input<string>;
    scriptUriManagedIdentity?: pulumi.Input<inputs.VirtualMachineRunCommandSourceScriptUriManagedIdentity>;
}

export interface VirtualMachineRunCommandSourceScriptUriManagedIdentity {
    clientId?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
}

export interface VirtualMachineRunCommandTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetBootDiagnostics {
    enabled?: pulumi.Input<boolean>;
    storageUri: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetExtension {
    autoUpgradeMinorVersion?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    protectedSettings?: pulumi.Input<string>;
    provisionAfterExtensions?: pulumi.Input<pulumi.Input<string>[]>;
    publisher: pulumi.Input<string>;
    settings?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeHandlerVersion: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault {
    secretUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetExtensionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetNetworkProfile {
    acceleratedNetworking?: pulumi.Input<boolean>;
    dnsSettings?: pulumi.Input<inputs.VirtualMachineScaleSetNetworkProfileDnsSettings>;
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.VirtualMachineScaleSetNetworkProfileIpConfiguration>[]>;
    ipForwarding?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    networkSecurityGroupId?: pulumi.Input<string>;
    primary: pulumi.Input<boolean>;
}

export interface VirtualMachineScaleSetNetworkProfileDnsSettings {
    dnsServers: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualMachineScaleSetNetworkProfileIpConfiguration {
    applicationGatewayBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerInboundNatRulesIds?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    primary: pulumi.Input<boolean>;
    publicIpAddressConfiguration?: pulumi.Input<inputs.VirtualMachineScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration>;
    subnetId: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration {
    domainNameLabel: pulumi.Input<string>;
    idleTimeout: pulumi.Input<number>;
    name: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetOsProfile {
    adminPassword?: pulumi.Input<string>;
    adminUsername: pulumi.Input<string>;
    computerNamePrefix: pulumi.Input<string>;
    customData?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetOsProfileLinuxConfig {
    disablePasswordAuthentication?: pulumi.Input<boolean>;
    sshKeys?: pulumi.Input<pulumi.Input<inputs.VirtualMachineScaleSetOsProfileLinuxConfigSshKey>[]>;
}

export interface VirtualMachineScaleSetOsProfileLinuxConfigSshKey {
    keyData?: pulumi.Input<string>;
    path: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetOsProfileSecret {
    sourceVaultId: pulumi.Input<string>;
    vaultCertificates?: pulumi.Input<pulumi.Input<inputs.VirtualMachineScaleSetOsProfileSecretVaultCertificate>[]>;
}

export interface VirtualMachineScaleSetOsProfileSecretVaultCertificate {
    certificateStore?: pulumi.Input<string>;
    certificateUrl: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetOsProfileWindowsConfig {
    additionalUnattendConfigs?: pulumi.Input<pulumi.Input<inputs.VirtualMachineScaleSetOsProfileWindowsConfigAdditionalUnattendConfig>[]>;
    enableAutomaticUpgrades?: pulumi.Input<boolean>;
    provisionVmAgent?: pulumi.Input<boolean>;
    winrms?: pulumi.Input<pulumi.Input<inputs.VirtualMachineScaleSetOsProfileWindowsConfigWinrm>[]>;
}

export interface VirtualMachineScaleSetOsProfileWindowsConfigAdditionalUnattendConfig {
    component: pulumi.Input<string>;
    content: pulumi.Input<string>;
    pass: pulumi.Input<string>;
    settingName: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetOsProfileWindowsConfigWinrm {
    certificateUrl?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetPacketCaptureFilter {
    localIpAddress?: pulumi.Input<string>;
    localPort?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    remoteIpAddress?: pulumi.Input<string>;
    remotePort?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetPacketCaptureMachineScope {
    excludeInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    includeInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualMachineScaleSetPacketCaptureStorageLocation {
    filePath?: pulumi.Input<string>;
    storageAccountId?: pulumi.Input<string>;
    storagePath?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetPacketCaptureTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetPlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetRollingUpgradePolicy {
    maxBatchInstancePercent?: pulumi.Input<number>;
    maxUnhealthyInstancePercent?: pulumi.Input<number>;
    maxUnhealthyUpgradedInstancePercent?: pulumi.Input<number>;
    pauseTimeBetweenBatches?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetSku {
    capacity: pulumi.Input<number>;
    name: pulumi.Input<string>;
    tier?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetStorageProfileDataDisk {
    caching?: pulumi.Input<string>;
    createOption: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    lun: pulumi.Input<number>;
    managedDiskType?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetStorageProfileImageReference {
    id?: pulumi.Input<string>;
    offer?: pulumi.Input<string>;
    publisher?: pulumi.Input<string>;
    sku?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface VirtualMachineScaleSetStorageProfileOsDisk {
    caching?: pulumi.Input<string>;
    createOption: pulumi.Input<string>;
    image?: pulumi.Input<string>;
    managedDiskType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    vhdContainers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualMachineScaleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualMachineStorageDataDisk {
    caching?: pulumi.Input<string>;
    createOption: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    lun: pulumi.Input<number>;
    managedDiskId?: pulumi.Input<string>;
    managedDiskType?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    vhdUri?: pulumi.Input<string>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface VirtualMachineStorageImageReference {
    id?: pulumi.Input<string>;
    offer?: pulumi.Input<string>;
    publisher?: pulumi.Input<string>;
    sku?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface VirtualMachineStorageOsDisk {
    caching?: pulumi.Input<string>;
    createOption: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    imageUri?: pulumi.Input<string>;
    managedDiskId?: pulumi.Input<string>;
    managedDiskType?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    vhdUri?: pulumi.Input<string>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface VirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualNetworkDdosProtectionPlan {
    enable: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
}

export interface VirtualNetworkDnsServersTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualNetworkEncryption {
    enforcement: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayBgpSettings {
    asn?: pulumi.Input<number>;
    peerWeight?: pulumi.Input<number>;
    peeringAddresses?: pulumi.Input<pulumi.Input<inputs.VirtualNetworkGatewayBgpSettingsPeeringAddress>[]>;
}

export interface VirtualNetworkGatewayBgpSettingsPeeringAddress {
    apipaAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    defaultAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    ipConfigurationName?: pulumi.Input<string>;
    tunnelIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualNetworkGatewayConnectionCustomBgpAddresses {
    primary: pulumi.Input<string>;
    secondary?: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayConnectionIpsecPolicy {
    dhGroup: pulumi.Input<string>;
    ikeEncryption: pulumi.Input<string>;
    ikeIntegrity: pulumi.Input<string>;
    ipsecEncryption: pulumi.Input<string>;
    ipsecIntegrity: pulumi.Input<string>;
    pfsGroup: pulumi.Input<string>;
    saDatasize?: pulumi.Input<number>;
    saLifetime?: pulumi.Input<number>;
}

export interface VirtualNetworkGatewayConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayConnectionTrafficSelectorPolicy {
    localAddressCidrs: pulumi.Input<pulumi.Input<string>[]>;
    remoteAddressCidrs: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualNetworkGatewayCustomRoute {
    addressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualNetworkGatewayIpConfiguration {
    name?: pulumi.Input<string>;
    privateIpAddressAllocation?: pulumi.Input<string>;
    publicIpAddressId: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayNatRuleExternalMapping {
    addressSpace: pulumi.Input<string>;
    portRange?: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayNatRuleInternalMapping {
    addressSpace: pulumi.Input<string>;
    portRange?: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayNatRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayPolicyGroup {
    isDefault?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    policyMembers: pulumi.Input<pulumi.Input<inputs.VirtualNetworkGatewayPolicyGroupPolicyMember>[]>;
    priority?: pulumi.Input<number>;
}

export interface VirtualNetworkGatewayPolicyGroupPolicyMember {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayVpnClientConfiguration {
    aadAudience?: pulumi.Input<string>;
    aadIssuer?: pulumi.Input<string>;
    aadTenant?: pulumi.Input<string>;
    addressSpaces: pulumi.Input<pulumi.Input<string>[]>;
    ipsecPolicy?: pulumi.Input<inputs.VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy>;
    radiusServerAddress?: pulumi.Input<string>;
    radiusServerSecret?: pulumi.Input<string>;
    radiusServers?: pulumi.Input<pulumi.Input<inputs.VirtualNetworkGatewayVpnClientConfigurationRadiusServer>[]>;
    revokedCertificates?: pulumi.Input<pulumi.Input<inputs.VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate>[]>;
    rootCertificates?: pulumi.Input<pulumi.Input<inputs.VirtualNetworkGatewayVpnClientConfigurationRootCertificate>[]>;
    virtualNetworkGatewayClientConnections?: pulumi.Input<pulumi.Input<inputs.VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection>[]>;
    vpnAuthTypes?: pulumi.Input<pulumi.Input<string>[]>;
    vpnClientProtocols?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualNetworkGatewayVpnClientConfigurationIpsecPolicy {
    dhGroup: pulumi.Input<string>;
    ikeEncryption: pulumi.Input<string>;
    ikeIntegrity: pulumi.Input<string>;
    ipsecEncryption: pulumi.Input<string>;
    ipsecIntegrity: pulumi.Input<string>;
    pfsGroup: pulumi.Input<string>;
    saDataSizeInKilobytes: pulumi.Input<number>;
    saLifetimeInSeconds: pulumi.Input<number>;
}

export interface VirtualNetworkGatewayVpnClientConfigurationRadiusServer {
    address: pulumi.Input<string>;
    score: pulumi.Input<number>;
    secret: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate {
    name: pulumi.Input<string>;
    thumbprint: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayVpnClientConfigurationRootCertificate {
    name: pulumi.Input<string>;
    publicCertData: pulumi.Input<string>;
}

export interface VirtualNetworkGatewayVpnClientConfigurationVirtualNetworkGatewayClientConnection {
    addressPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    policyGroupNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualNetworkPeeringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualNetworkSubnet {
    addressPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    defaultOutboundAccessEnabled: pulumi.Input<boolean>;
    delegations: pulumi.Input<pulumi.Input<inputs.VirtualNetworkSubnetDelegation>[]>;
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
    privateEndpointNetworkPolicies: pulumi.Input<string>;
    privateLinkServiceNetworkPoliciesEnabled: pulumi.Input<boolean>;
    routeTableId: pulumi.Input<string>;
    securityGroup: pulumi.Input<string>;
    serviceEndpointPolicyIds: pulumi.Input<pulumi.Input<string>[]>;
    serviceEndpoints: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VirtualNetworkSubnetDelegation {
    name: pulumi.Input<string>;
    serviceDelegations: pulumi.Input<pulumi.Input<inputs.VirtualNetworkSubnetDelegationServiceDelegation>[]>;
}

export interface VirtualNetworkSubnetDelegationServiceDelegation {
    actions: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
}

export interface VirtualNetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VirtualWanTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VmwareClusterTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VmwareExpressRouteAuthorizationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface VmwareNetappVolumeAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface VmwarePrivateCloudCircuit {
    expressRouteId: pulumi.Input<string>;
    expressRoutePrivatePeeringId: pulumi.Input<string>;
    primarySubnetCidr: pulumi.Input<string>;
    secondarySubnetCidr: pulumi.Input<string>;
}

export interface VmwarePrivateCloudManagementCluster {
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<number>;
    size: pulumi.Input<number>;
}

export interface VmwarePrivateCloudTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VoiceServicesCommunicationsGatewayServiceLocation {
    allowedMediaSourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    allowedSignalingSourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    esrpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    location: pulumi.Input<string>;
    operatorAddresses: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VoiceServicesCommunicationsGatewayTestLineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VoiceServicesCommunicationsGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpnGatewayBgpSettings {
    asn: pulumi.Input<number>;
    bgpPeeringAddress?: pulumi.Input<string>;
    instance0BgpPeeringAddress?: pulumi.Input<inputs.VpnGatewayBgpSettingsInstance0BgpPeeringAddress>;
    instance1BgpPeeringAddress?: pulumi.Input<inputs.VpnGatewayBgpSettingsInstance1BgpPeeringAddress>;
    peerWeight: pulumi.Input<number>;
}

export interface VpnGatewayBgpSettingsInstance0BgpPeeringAddress {
    customIps: pulumi.Input<pulumi.Input<string>[]>;
    defaultIps?: pulumi.Input<pulumi.Input<string>[]>;
    ipConfigurationId?: pulumi.Input<string>;
    tunnelIps?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpnGatewayBgpSettingsInstance1BgpPeeringAddress {
    customIps: pulumi.Input<pulumi.Input<string>[]>;
    defaultIps?: pulumi.Input<pulumi.Input<string>[]>;
    ipConfigurationId?: pulumi.Input<string>;
    tunnelIps?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpnGatewayConnectionRouting {
    associatedRouteTable: pulumi.Input<string>;
    inboundRouteMapId?: pulumi.Input<string>;
    outboundRouteMapId?: pulumi.Input<string>;
    propagatedRouteTable?: pulumi.Input<inputs.VpnGatewayConnectionRoutingPropagatedRouteTable>;
}

export interface VpnGatewayConnectionRoutingPropagatedRouteTable {
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    routeTableIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpnGatewayConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpnGatewayConnectionTrafficSelectorPolicy {
    localAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
    remoteAddressRanges: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpnGatewayConnectionVpnLink {
    bandwidthMbps?: pulumi.Input<number>;
    bgpEnabled?: pulumi.Input<boolean>;
    connectionMode?: pulumi.Input<string>;
    customBgpAddresses?: pulumi.Input<pulumi.Input<inputs.VpnGatewayConnectionVpnLinkCustomBgpAddress>[]>;
    egressNatRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    ingressNatRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
    ipsecPolicies?: pulumi.Input<pulumi.Input<inputs.VpnGatewayConnectionVpnLinkIpsecPolicy>[]>;
    localAzureIpAddressEnabled?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    policyBasedTrafficSelectorEnabled?: pulumi.Input<boolean>;
    protocol?: pulumi.Input<string>;
    ratelimitEnabled?: pulumi.Input<boolean>;
    routeWeight?: pulumi.Input<number>;
    sharedKey?: pulumi.Input<string>;
    vpnSiteLinkId: pulumi.Input<string>;
}

export interface VpnGatewayConnectionVpnLinkCustomBgpAddress {
    ipAddress: pulumi.Input<string>;
    ipConfigurationId: pulumi.Input<string>;
}

export interface VpnGatewayConnectionVpnLinkIpsecPolicy {
    dhGroup: pulumi.Input<string>;
    encryptionAlgorithm: pulumi.Input<string>;
    ikeEncryptionAlgorithm: pulumi.Input<string>;
    ikeIntegrityAlgorithm: pulumi.Input<string>;
    integrityAlgorithm: pulumi.Input<string>;
    pfsGroup: pulumi.Input<string>;
    saDataSizeKb: pulumi.Input<number>;
    saLifetimeSec: pulumi.Input<number>;
}

export interface VpnGatewayNatRuleExternalMapping {
    addressSpace: pulumi.Input<string>;
    portRange?: pulumi.Input<string>;
}

export interface VpnGatewayNatRuleInternalMapping {
    addressSpace: pulumi.Input<string>;
    portRange?: pulumi.Input<string>;
}

export interface VpnGatewayNatRuleTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpnGatewayTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpnServerConfigurationAzureActiveDirectoryAuthentication {
    audience: pulumi.Input<string>;
    issuer: pulumi.Input<string>;
    tenant: pulumi.Input<string>;
}

export interface VpnServerConfigurationClientRevokedCertificate {
    name: pulumi.Input<string>;
    thumbprint: pulumi.Input<string>;
}

export interface VpnServerConfigurationClientRootCertificate {
    name: pulumi.Input<string>;
    publicCertData: pulumi.Input<string>;
}

export interface VpnServerConfigurationIpsecPolicy {
    dhGroup: pulumi.Input<string>;
    ikeEncryption: pulumi.Input<string>;
    ikeIntegrity: pulumi.Input<string>;
    ipsecEncryption: pulumi.Input<string>;
    ipsecIntegrity: pulumi.Input<string>;
    pfsGroup: pulumi.Input<string>;
    saDataSizeKilobytes: pulumi.Input<number>;
    saLifetimeSeconds: pulumi.Input<number>;
}

export interface VpnServerConfigurationPolicyGroupPolicy {
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface VpnServerConfigurationPolicyGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpnServerConfigurationRadius {
    clientRootCertificates?: pulumi.Input<pulumi.Input<inputs.VpnServerConfigurationRadiusClientRootCertificate>[]>;
    serverRootCertificates?: pulumi.Input<pulumi.Input<inputs.VpnServerConfigurationRadiusServerRootCertificate>[]>;
    servers?: pulumi.Input<pulumi.Input<inputs.VpnServerConfigurationRadiusServer>[]>;
}

export interface VpnServerConfigurationRadiusClientRootCertificate {
    name: pulumi.Input<string>;
    thumbprint: pulumi.Input<string>;
}

export interface VpnServerConfigurationRadiusServer {
    address: pulumi.Input<string>;
    score: pulumi.Input<number>;
    secret: pulumi.Input<string>;
}

export interface VpnServerConfigurationRadiusServerRootCertificate {
    name: pulumi.Input<string>;
    publicCertData: pulumi.Input<string>;
}

export interface VpnServerConfigurationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpnSiteLink {
    bgp?: pulumi.Input<inputs.VpnSiteLinkBgp>;
    fqdn?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    providerName?: pulumi.Input<string>;
    speedInMbps?: pulumi.Input<number>;
}

export interface VpnSiteLinkBgp {
    asn: pulumi.Input<number>;
    peeringAddress: pulumi.Input<string>;
}

export interface VpnSiteO365Policy {
    trafficCategory?: pulumi.Input<inputs.VpnSiteO365PolicyTrafficCategory>;
}

export interface VpnSiteO365PolicyTrafficCategory {
    allowEndpointEnabled?: pulumi.Input<boolean>;
    defaultEndpointEnabled?: pulumi.Input<boolean>;
    optimizeEndpointEnabled?: pulumi.Input<boolean>;
}

export interface VpnSiteTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebAppActiveSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebAppHybridConnectionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyCustomRule {
    action: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    groupRateLimitBy?: pulumi.Input<string>;
    matchConditions: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyCustomRuleMatchCondition>[]>;
    name?: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    rateLimitDuration?: pulumi.Input<string>;
    rateLimitThreshold?: pulumi.Input<number>;
    ruleType: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyCustomRuleMatchCondition {
    matchValues?: pulumi.Input<pulumi.Input<string>[]>;
    matchVariables: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyCustomRuleMatchConditionMatchVariable>[]>;
    negationCondition?: pulumi.Input<boolean>;
    operator: pulumi.Input<string>;
    transforms?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WebApplicationFirewallPolicyCustomRuleMatchConditionMatchVariable {
    selector?: pulumi.Input<string>;
    variableName: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyManagedRules {
    exclusions?: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyManagedRulesExclusion>[]>;
    managedRuleSets: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyManagedRulesManagedRuleSet>[]>;
}

export interface WebApplicationFirewallPolicyManagedRulesExclusion {
    excludedRuleSet?: pulumi.Input<inputs.WebApplicationFirewallPolicyManagedRulesExclusionExcludedRuleSet>;
    matchVariable: pulumi.Input<string>;
    selector: pulumi.Input<string>;
    selectorMatchOperator: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyManagedRulesExclusionExcludedRuleSet {
    ruleGroups?: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyManagedRulesExclusionExcludedRuleSetRuleGroup>[]>;
    type?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyManagedRulesExclusionExcludedRuleSetRuleGroup {
    excludedRules?: pulumi.Input<pulumi.Input<string>[]>;
    ruleGroupName: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyManagedRulesManagedRuleSet {
    ruleGroupOverrides?: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyManagedRulesManagedRuleSetRuleGroupOverride>[]>;
    type?: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyManagedRulesManagedRuleSetRuleGroupOverride {
    ruleGroupName: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyManagedRulesManagedRuleSetRuleGroupOverrideRule>[]>;
}

export interface WebApplicationFirewallPolicyManagedRulesManagedRuleSetRuleGroupOverrideRule {
    action?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyPolicySettings {
    enabled?: pulumi.Input<boolean>;
    fileUploadLimitInMb?: pulumi.Input<number>;
    jsChallengeCookieExpirationInMinutes?: pulumi.Input<number>;
    logScrubbing?: pulumi.Input<inputs.WebApplicationFirewallPolicyPolicySettingsLogScrubbing>;
    maxRequestBodySizeInKb?: pulumi.Input<number>;
    mode?: pulumi.Input<string>;
    requestBodyCheck?: pulumi.Input<boolean>;
    requestBodyEnforcement?: pulumi.Input<boolean>;
    requestBodyInspectLimitInKb?: pulumi.Input<number>;
}

export interface WebApplicationFirewallPolicyPolicySettingsLogScrubbing {
    enabled?: pulumi.Input<boolean>;
    rules?: pulumi.Input<pulumi.Input<inputs.WebApplicationFirewallPolicyPolicySettingsLogScrubbingRule>[]>;
}

export interface WebApplicationFirewallPolicyPolicySettingsLogScrubbingRule {
    enabled?: pulumi.Input<boolean>;
    matchVariable: pulumi.Input<string>;
    /**
     * When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
     */
    selector?: pulumi.Input<string>;
    selectorMatchOperator?: pulumi.Input<string>;
}

export interface WebApplicationFirewallPolicyTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebPubsubCustomCertificateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface WebPubsubCustomDomainTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface WebPubsubHubEventHandler {
    auth?: pulumi.Input<inputs.WebPubsubHubEventHandlerAuth>;
    systemEvents?: pulumi.Input<pulumi.Input<string>[]>;
    urlTemplate: pulumi.Input<string>;
    userEventPattern?: pulumi.Input<string>;
}

export interface WebPubsubHubEventHandlerAuth {
    managedIdentityId: pulumi.Input<string>;
}

export interface WebPubsubHubEventListener {
    eventhubName: pulumi.Input<string>;
    eventhubNamespaceName: pulumi.Input<string>;
    systemEventNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    userEventNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WebPubsubHubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebPubsubIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WebPubsubLiveTrace {
    connectivityLogsEnabled?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    httpRequestLogsEnabled?: pulumi.Input<boolean>;
    messagingLogsEnabled?: pulumi.Input<boolean>;
}

export interface WebPubsubNetworkAclPrivateEndpoint {
    allowedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
    deniedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id: pulumi.Input<string>;
}

export interface WebPubsubNetworkAclPublicNetwork {
    allowedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
    deniedRequestTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WebPubsubNetworkAclTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebPubsubSharedPrivateLinkResourceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebPubsubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WindowsFunctionAppAuthSettings {
    activeDirectory?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsGithub>;
    google?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface WindowsFunctionAppAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsFunctionAppAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsFunctionAppAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.WindowsFunctionAppAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface WindowsFunctionAppAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface WindowsFunctionAppAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface WindowsFunctionAppAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface WindowsFunctionAppBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.WindowsFunctionAppBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface WindowsFunctionAppBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface WindowsFunctionAppConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface WindowsFunctionAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsFunctionAppSiteConfig {
    /**
     * If this Windows Web App is Always On enabled. Defaults to `false`.
     */
    alwaysOn?: pulumi.Input<boolean>;
    /**
     * The URL of the API definition that describes this Windows Function App.
     */
    apiDefinitionUrl?: pulumi.Input<string>;
    /**
     * The ID of the API Management API for this Windows Function App.
     */
    apiManagementApiId?: pulumi.Input<string>;
    /**
     * The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
     */
    appCommandLine?: pulumi.Input<string>;
    /**
     * The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
     */
    appScaleLimit?: pulumi.Input<number>;
    appServiceLogs?: pulumi.Input<inputs.WindowsFunctionAppSiteConfigAppServiceLogs>;
    /**
     * The Connection String for linking the Windows Function App to Application Insights.
     */
    applicationInsightsConnectionString?: pulumi.Input<string>;
    /**
     * The Instrumentation Key for connecting the Windows Function App to Application Insights.
     */
    applicationInsightsKey?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.WindowsFunctionAppSiteConfigApplicationStack>;
    cors?: pulumi.Input<inputs.WindowsFunctionAppSiteConfigCors>;
    /**
     * Specifies a list of Default Documents for the Windows Web App.
     */
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is detailed error logging enabled
     */
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
     */
    elasticInstanceMinimum?: pulumi.Input<number>;
    /**
     * State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
     */
    ftpsState?: pulumi.Input<string>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    /**
     * The path to be checked for this function app health.
     */
    healthCheckPath?: pulumi.Input<string>;
    /**
     * Specifies if the http2 protocol should be enabled. Defaults to `false`.
     */
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSiteConfigIpRestriction>[]>;
    /**
     * The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
     */
    loadBalancingMode?: pulumi.Input<string>;
    /**
     * The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
     */
    managedPipelineMode?: pulumi.Input<string>;
    /**
     * The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    minimumTlsVersion?: pulumi.Input<string>;
    /**
     * The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
     */
    preWarmedInstanceCount?: pulumi.Input<number>;
    /**
     * Should Remote Debugging be enabled. Defaults to `false`.
     */
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    /**
     * The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`
     */
    remoteDebuggingVersion?: pulumi.Input<string>;
    /**
     * Should Functions Runtime Scale Monitoring be enabled.
     */
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSiteConfigScmIpRestriction>[]>;
    /**
     * Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    scmMinimumTlsVersion?: pulumi.Input<string>;
    /**
     * The SCM Type in use by the Windows Function App.
     */
    scmType?: pulumi.Input<string>;
    /**
     * Should the Windows Function App `ip_restriction` configuration be used for the SCM also.
     */
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    /**
     * Should the Windows Web App use a 32-bit worker.
     */
    use32BitWorker?: pulumi.Input<boolean>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    /**
     * Should Web Sockets be enabled. Defaults to `false`.
     */
    websocketsEnabled?: pulumi.Input<boolean>;
    /**
     * The Windows FX Version string.
     */
    windowsFxVersion?: pulumi.Input<string>;
    /**
     * The number of Workers for this Windows Function App.
     */
    workerCount?: pulumi.Input<number>;
}

export interface WindowsFunctionAppSiteConfigAppServiceLogs {
    /**
     * The amount of disk space to use for logs. Valid values are between `25` and `100`.
     */
    diskQuotaMb?: pulumi.Input<number>;
    /**
     * The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
     */
    retentionPeriodDays?: pulumi.Input<number>;
}

export interface WindowsFunctionAppSiteConfigApplicationStack {
    /**
     * The version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0` and `v7.0`
     */
    dotnetVersion?: pulumi.Input<string>;
    /**
     * The version of Java to use. Possible values are `1.8`, `11` and `17`
     */
    javaVersion?: pulumi.Input<string>;
    /**
     * The version of Node to use. Possible values include `12`, `14`, `16` and `18`
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * The PowerShell Core version to use. Possible values are `7`, `7.2`, and `7.4`
     */
    powershellCoreVersion?: pulumi.Input<string>;
    /**
     * Does the Function App use a custom Application Stack?
     */
    useCustomRuntime?: pulumi.Input<boolean>;
    /**
     * Should the DotNet process use an isolated runtime. Defaults to `false`.
     */
    useDotnetIsolatedRuntime?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotAuthSettings {
    activeDirectory?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsGithub>;
    google?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.WindowsFunctionAppSlotAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.WindowsFunctionAppSlotBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotSiteConfig {
    /**
     * If this Windows Web App is Always On enabled. Defaults to `false`.
     */
    alwaysOn?: pulumi.Input<boolean>;
    /**
     * The URL of the API definition that describes this Windows Function App.
     */
    apiDefinitionUrl?: pulumi.Input<string>;
    /**
     * The ID of the API Management API for this Windows Function App.
     */
    apiManagementApiId?: pulumi.Input<string>;
    /**
     * The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).
     */
    appCommandLine?: pulumi.Input<string>;
    /**
     * The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.
     */
    appScaleLimit?: pulumi.Input<number>;
    appServiceLogs?: pulumi.Input<inputs.WindowsFunctionAppSlotSiteConfigAppServiceLogs>;
    /**
     * The Connection String for linking the Windows Function App to Application Insights.
     */
    applicationInsightsConnectionString?: pulumi.Input<string>;
    /**
     * The Instrumentation Key for connecting the Windows Function App to Application Insights.
     */
    applicationInsightsKey?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.WindowsFunctionAppSlotSiteConfigApplicationStack>;
    autoSwapSlotName?: pulumi.Input<string>;
    cors?: pulumi.Input<inputs.WindowsFunctionAppSlotSiteConfigCors>;
    /**
     * Specifies a list of Default Documents for the Windows Web App.
     */
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is detailed error logging enabled
     */
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.
     */
    elasticInstanceMinimum?: pulumi.Input<number>;
    /**
     * State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.
     */
    ftpsState?: pulumi.Input<string>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    /**
     * The path to be checked for this function app health.
     */
    healthCheckPath?: pulumi.Input<string>;
    /**
     * Specifies if the http2 protocol should be enabled. Defaults to `false`.
     */
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSlotSiteConfigIpRestriction>[]>;
    /**
     * The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.
     */
    loadBalancingMode?: pulumi.Input<string>;
    /**
     * The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.
     */
    managedPipelineMode?: pulumi.Input<string>;
    /**
     * The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    minimumTlsVersion?: pulumi.Input<string>;
    /**
     * The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.
     */
    preWarmedInstanceCount?: pulumi.Input<number>;
    /**
     * Should Remote Debugging be enabled. Defaults to `false`.
     */
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    /**
     * The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`
     */
    remoteDebuggingVersion?: pulumi.Input<string>;
    /**
     * Should Functions Runtime Scale Monitoring be enabled.
     */
    runtimeScaleMonitoringEnabled?: pulumi.Input<boolean>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSlotSiteConfigScmIpRestriction>[]>;
    /**
     * Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.
     */
    scmMinimumTlsVersion?: pulumi.Input<string>;
    /**
     * The SCM Type in use by the Windows Function App.
     */
    scmType?: pulumi.Input<string>;
    /**
     * Should the Windows Function App `ip_restriction` configuration be used for the SCM also.
     */
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    /**
     * Should the Windows Function App use a 32-bit worker.
     */
    use32BitWorker?: pulumi.Input<boolean>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    /**
     * Should Web Sockets be enabled. Defaults to `false`.
     */
    websocketsEnabled?: pulumi.Input<boolean>;
    /**
     * The Windows FX Version string.
     */
    windowsFxVersion?: pulumi.Input<string>;
    /**
     * The number of Workers for this Windows Function App.
     */
    workerCount?: pulumi.Input<number>;
}

export interface WindowsFunctionAppSlotSiteConfigAppServiceLogs {
    /**
     * The amount of disk space to use for logs. Valid values are between `25` and `100`.
     */
    diskQuotaMb?: pulumi.Input<number>;
    /**
     * The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).
     */
    retentionPeriodDays?: pulumi.Input<number>;
}

export interface WindowsFunctionAppSlotSiteConfigApplicationStack {
    /**
     * The version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0` and `v7.0`
     */
    dotnetVersion?: pulumi.Input<string>;
    /**
     * The version of Java to use. Possible values are `1.8`, `11` and `17`
     */
    javaVersion?: pulumi.Input<string>;
    /**
     * The version of Node to use. Possible values include `12`, `14`, `16` and `18`
     */
    nodeVersion?: pulumi.Input<string>;
    /**
     * The PowerShell Core version to use. Possible values are `7`, `7.2`, and `7.4`
     */
    powershellCoreVersion?: pulumi.Input<string>;
    /**
     * Does the Function App use a custom Application Stack?
     */
    useCustomRuntime?: pulumi.Input<boolean>;
    /**
     * Should the DotNet process use an isolated runtime. Defaults to `false`.
     */
    useDotnetIsolatedRuntime?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppSlotSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface WindowsFunctionAppSlotSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSlotSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsFunctionAppSlotSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppSlotSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsFunctionAppSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WindowsFunctionAppStickySettings {
    appSettingNames?: pulumi.Input<pulumi.Input<string>[]>;
    connectionStringNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsFunctionAppStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsFunctionAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineAdditionalCapabilities {
    hibernationEnabled?: pulumi.Input<boolean>;
    ultraSsdEnabled?: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineAdditionalUnattendContent {
    content: pulumi.Input<string>;
    setting: pulumi.Input<string>;
}

export interface WindowsVirtualMachineBootDiagnostics {
    storageAccountUri?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineGalleryApplication {
    automaticUpgradeEnabled?: pulumi.Input<boolean>;
    configurationBlobUri?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    tag?: pulumi.Input<string>;
    treatFailureAsDeploymentFailureEnabled?: pulumi.Input<boolean>;
    versionId: pulumi.Input<string>;
}

export interface WindowsVirtualMachineIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsVirtualMachineOsDisk {
    caching: pulumi.Input<string>;
    diffDiskSettings?: pulumi.Input<inputs.WindowsVirtualMachineOsDiskDiffDiskSettings>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    secureVmDiskEncryptionSetId?: pulumi.Input<string>;
    securityEncryptionType?: pulumi.Input<string>;
    storageAccountType: pulumi.Input<string>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineOsDiskDiffDiskSettings {
    option: pulumi.Input<string>;
    placement?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineOsImageNotification {
    timeout?: pulumi.Input<string>;
}

export interface WindowsVirtualMachinePlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetAdditionalCapabilities {
    ultraSsdEnabled?: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineScaleSetAdditionalUnattendContent {
    content: pulumi.Input<string>;
    setting: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetAutomaticInstanceRepair {
    action?: pulumi.Input<string>;
    enabled: pulumi.Input<boolean>;
    gracePeriod?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy {
    disableAutomaticRollback: pulumi.Input<boolean>;
    enableAutomaticOsUpgrade: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineScaleSetBootDiagnostics {
    storageAccountUri?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetDataDisk {
    caching: pulumi.Input<string>;
    createOption?: pulumi.Input<string>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb: pulumi.Input<number>;
    lun: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    storageAccountType: pulumi.Input<string>;
    ultraSsdDiskIopsReadWrite?: pulumi.Input<number>;
    ultraSsdDiskMbpsReadWrite?: pulumi.Input<number>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineScaleSetExtension {
    autoUpgradeMinorVersion?: pulumi.Input<boolean>;
    automaticUpgradeEnabled?: pulumi.Input<boolean>;
    forceUpdateTag?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    protectedSettings?: pulumi.Input<string>;
    protectedSettingsFromKeyVault?: pulumi.Input<inputs.WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault>;
    provisionAfterExtensions?: pulumi.Input<pulumi.Input<string>[]>;
    publisher: pulumi.Input<string>;
    settings?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    typeHandlerVersion: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault {
    secretUrl: pulumi.Input<string>;
    sourceVaultId: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetGalleryApplication {
    configurationBlobUri?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    tag?: pulumi.Input<string>;
    versionId: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetNetworkInterface {
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    enableAcceleratedNetworking?: pulumi.Input<boolean>;
    enableIpForwarding?: pulumi.Input<boolean>;
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration>[]>;
    name: pulumi.Input<string>;
    networkSecurityGroupId?: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineScaleSetNetworkInterfaceIpConfiguration {
    applicationGatewayBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
    loadBalancerInboundNatRulesIds?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    primary?: pulumi.Input<boolean>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<inputs.WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress>[]>;
    subnetId?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddress {
    domainNameLabel?: pulumi.Input<string>;
    idleTimeoutInMinutes?: pulumi.Input<number>;
    ipTags?: pulumi.Input<pulumi.Input<inputs.WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag>[]>;
    name: pulumi.Input<string>;
    publicIpPrefixId?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTag {
    tag: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetOsDisk {
    caching: pulumi.Input<string>;
    diffDiskSettings?: pulumi.Input<inputs.WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings>;
    diskEncryptionSetId?: pulumi.Input<string>;
    diskSizeGb?: pulumi.Input<number>;
    secureVmDiskEncryptionSetId?: pulumi.Input<string>;
    securityEncryptionType?: pulumi.Input<string>;
    storageAccountType: pulumi.Input<string>;
    writeAcceleratorEnabled?: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineScaleSetOsDiskDiffDiskSettings {
    option: pulumi.Input<string>;
    placement?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetPlan {
    name: pulumi.Input<string>;
    product: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetRollingUpgradePolicy {
    crossZoneUpgradesEnabled?: pulumi.Input<boolean>;
    maxBatchInstancePercent: pulumi.Input<number>;
    maxUnhealthyInstancePercent: pulumi.Input<number>;
    maxUnhealthyUpgradedInstancePercent: pulumi.Input<number>;
    maximumSurgeInstancesEnabled?: pulumi.Input<boolean>;
    pauseTimeBetweenBatches: pulumi.Input<string>;
    prioritizeUnhealthyInstancesEnabled?: pulumi.Input<boolean>;
}

export interface WindowsVirtualMachineScaleSetScaleIn {
    forceDeletionEnabled?: pulumi.Input<boolean>;
    rule?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetSecret {
    certificates: pulumi.Input<pulumi.Input<inputs.WindowsVirtualMachineScaleSetSecretCertificate>[]>;
    keyVaultId: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetSecretCertificate {
    store: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetSourceImageReference {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetSpotRestore {
    enabled?: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetTerminationNotification {
    enabled: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineScaleSetWinrmListener {
    certificateUrl?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface WindowsVirtualMachineSecret {
    certificates: pulumi.Input<pulumi.Input<inputs.WindowsVirtualMachineSecretCertificate>[]>;
    keyVaultId: pulumi.Input<string>;
}

export interface WindowsVirtualMachineSecretCertificate {
    store: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface WindowsVirtualMachineSourceImageReference {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface WindowsVirtualMachineTerminationNotification {
    enabled: pulumi.Input<boolean>;
    timeout?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WindowsVirtualMachineWinrmListener {
    certificateUrl?: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface WindowsWebAppAuthSettings {
    activeDirectory?: pulumi.Input<inputs.WindowsWebAppAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.WindowsWebAppAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.WindowsWebAppAuthSettingsGithub>;
    google?: pulumi.Input<inputs.WindowsWebAppAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.WindowsWebAppAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.WindowsWebAppAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface WindowsWebAppAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsWebAppAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsWebAppAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.WindowsWebAppAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface WindowsWebAppAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface WindowsWebAppAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface WindowsWebAppAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface WindowsWebAppAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface WindowsWebAppAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface WindowsWebAppBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.WindowsWebAppBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface WindowsWebAppBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface WindowsWebAppConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface WindowsWebAppIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsWebAppLogs {
    applicationLogs?: pulumi.Input<inputs.WindowsWebAppLogsApplicationLogs>;
    detailedErrorMessages?: pulumi.Input<boolean>;
    failedRequestTracing?: pulumi.Input<boolean>;
    httpLogs?: pulumi.Input<inputs.WindowsWebAppLogsHttpLogs>;
}

export interface WindowsWebAppLogsApplicationLogs {
    azureBlobStorage?: pulumi.Input<inputs.WindowsWebAppLogsApplicationLogsAzureBlobStorage>;
    fileSystemLevel: pulumi.Input<string>;
}

export interface WindowsWebAppLogsApplicationLogsAzureBlobStorage {
    level: pulumi.Input<string>;
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface WindowsWebAppLogsHttpLogs {
    azureBlobStorage?: pulumi.Input<inputs.WindowsWebAppLogsHttpLogsAzureBlobStorage>;
    fileSystem?: pulumi.Input<inputs.WindowsWebAppLogsHttpLogsFileSystem>;
}

export interface WindowsWebAppLogsHttpLogsAzureBlobStorage {
    retentionInDays?: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface WindowsWebAppLogsHttpLogsFileSystem {
    retentionInDays: pulumi.Input<number>;
    retentionInMb: pulumi.Input<number>;
}

export interface WindowsWebAppSiteConfig {
    alwaysOn?: pulumi.Input<boolean>;
    apiDefinitionUrl?: pulumi.Input<string>;
    apiManagementApiId?: pulumi.Input<string>;
    appCommandLine?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.WindowsWebAppSiteConfigApplicationStack>;
    autoHealSetting?: pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSetting>;
    containerRegistryManagedIdentityClientId?: pulumi.Input<string>;
    containerRegistryUseManagedIdentity?: pulumi.Input<boolean>;
    cors?: pulumi.Input<inputs.WindowsWebAppSiteConfigCors>;
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    ftpsState?: pulumi.Input<string>;
    handlerMappings?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigHandlerMapping>[]>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigIpRestriction>[]>;
    linuxFxVersion?: pulumi.Input<string>;
    loadBalancingMode?: pulumi.Input<string>;
    localMysqlEnabled?: pulumi.Input<boolean>;
    managedPipelineMode?: pulumi.Input<string>;
    minimumTlsVersion?: pulumi.Input<string>;
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    remoteDebuggingVersion?: pulumi.Input<string>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigScmIpRestriction>[]>;
    scmMinimumTlsVersion?: pulumi.Input<string>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorker?: pulumi.Input<boolean>;
    virtualApplications?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigVirtualApplication>[]>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
    windowsFxVersion?: pulumi.Input<string>;
    workerCount?: pulumi.Input<number>;
}

export interface WindowsWebAppSiteConfigApplicationStack {
    currentStack?: pulumi.Input<string>;
    dockerImageName?: pulumi.Input<string>;
    dockerRegistryPassword?: pulumi.Input<string>;
    dockerRegistryUrl?: pulumi.Input<string>;
    dockerRegistryUsername?: pulumi.Input<string>;
    /**
     * The version of DotNetCore to use.
     */
    dotnetCoreVersion?: pulumi.Input<string>;
    dotnetVersion?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    javaContainer?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    javaContainerVersion?: pulumi.Input<string>;
    /**
     * Should the application use the embedded web server for the version of Java in use.
     */
    javaEmbeddedServerEnabled?: pulumi.Input<boolean>;
    javaVersion?: pulumi.Input<string>;
    nodeVersion?: pulumi.Input<string>;
    phpVersion?: pulumi.Input<string>;
    python?: pulumi.Input<boolean>;
    tomcatVersion?: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigAutoHealSetting {
    action: pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSettingAction>;
    trigger: pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSettingTrigger>;
}

export interface WindowsWebAppSiteConfigAutoHealSettingAction {
    actionType: pulumi.Input<string>;
    customAction?: pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSettingActionCustomAction>;
    minimumProcessExecutionTime?: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigAutoHealSettingActionCustomAction {
    executable: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigAutoHealSettingTrigger {
    privateMemoryKb?: pulumi.Input<number>;
    requests?: pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSettingTriggerRequests>;
    slowRequest?: pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequest>;
    slowRequestWithPaths?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequestWithPath>[]>;
    statusCodes?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigAutoHealSettingTriggerStatusCode>[]>;
}

export interface WindowsWebAppSiteConfigAutoHealSettingTriggerRequests {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequest {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigAutoHealSettingTriggerSlowRequestWithPath {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigAutoHealSettingTriggerStatusCode {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    statusCodeRange: pulumi.Input<string>;
    subStatus?: pulumi.Input<number>;
    win32StatusCode?: pulumi.Input<number>;
}

export interface WindowsWebAppSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface WindowsWebAppSiteConfigHandlerMapping {
    arguments?: pulumi.Input<string>;
    extension: pulumi.Input<string>;
    scriptProcessorPath: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSiteConfigVirtualApplication {
    physicalPath: pulumi.Input<string>;
    preload: pulumi.Input<boolean>;
    virtualDirectories?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory>[]>;
    virtualPath: pulumi.Input<string>;
}

export interface WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory {
    physicalPath?: pulumi.Input<string>;
    virtualPath?: pulumi.Input<string>;
}

export interface WindowsWebAppSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface WindowsWebAppSlotAuthSettings {
    activeDirectory?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsActiveDirectory>;
    /**
     * Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.
     */
    additionalLoginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * Should the Authentication / Authorization feature be enabled?
     */
    enabled: pulumi.Input<boolean>;
    facebook?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsFacebook>;
    github?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsGithub>;
    google?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsGoogle>;
    /**
     * The OpenID Connect Issuer URI that represents the entity which issues access tokens.
     */
    issuer?: pulumi.Input<string>;
    microsoft?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsMicrosoft>;
    /**
     * The RuntimeVersion of the Authentication / Authorization feature in use.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionHours?: pulumi.Input<number>;
    /**
     * Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    twitter?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsTwitter>;
    /**
     * The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.
     */
    unauthenticatedClientAction?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotAuthSettingsActiveDirectory {
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotAuthSettingsFacebook {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.
     */
    appSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.
     */
    appSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsGithub {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsGoogle {
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, "openid", "profile", and "email" are used as default scopes.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsMicrosoft {
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.
     */
    oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsTwitter {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.
     */
    consumerSecret?: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.
     */
    consumerSecretSettingName?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotAuthSettingsV2 {
    activeDirectoryV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2>;
    appleV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2AppleV2>;
    /**
     * Should the AuthV2 Settings be enabled. Defaults to `false`
     */
    authEnabled?: pulumi.Input<boolean>;
    azureStaticWebAppV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2>;
    /**
     * The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.
     */
    configFilePath?: pulumi.Input<string>;
    customOidcV2s?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2CustomOidcV2>[]>;
    /**
     * The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.
     */
    defaultProvider?: pulumi.Input<string>;
    /**
     * The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     */
    excludedPaths?: pulumi.Input<pulumi.Input<string>[]>;
    facebookV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2FacebookV2>;
    /**
     * The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`
     */
    forwardProxyConvention?: pulumi.Input<string>;
    /**
     * The name of the header containing the host of the request.
     */
    forwardProxyCustomHostHeaderName?: pulumi.Input<string>;
    /**
     * The name of the header containing the scheme of the request.
     */
    forwardProxyCustomSchemeHeaderName?: pulumi.Input<string>;
    githubV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2GithubV2>;
    googleV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2GoogleV2>;
    /**
     * The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`
     */
    httpRouteApiPrefix?: pulumi.Input<string>;
    login: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2Login>;
    microsoftV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2MicrosoftV2>;
    /**
     * Should the authentication flow be used for all requests.
     */
    requireAuthentication?: pulumi.Input<boolean>;
    /**
     * Should HTTPS be required on connections? Defaults to true.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`
     */
    runtimeVersion?: pulumi.Input<string>;
    twitterV2?: pulumi.Input<inputs.WindowsWebAppSlotAuthSettingsV2TwitterV2>;
    /**
     * The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.
     */
    unauthenticatedAction?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotAuthSettingsV2ActiveDirectoryV2 {
    /**
     * The list of allowed Applications for the Default Authorisation Policy.
     */
    allowedApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Group Names for the Default Authorisation Policy.
     */
    allowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of allowed Identities for the Default Authorisation Policy.
     */
    allowedIdentities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Client to use to authenticate with Azure Active Directory.
     */
    clientId: pulumi.Input<string>;
    /**
     * The thumbprint of the certificate used for signing purposes.
     */
    clientSecretCertificateThumbprint?: pulumi.Input<string>;
    /**
     * The App Setting name that contains the client secret of the Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * A list of Allowed Client Applications in the JWT Claim.
     */
    jwtAllowedClientApplications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of Allowed Groups in the JWT Claim.
     */
    jwtAllowedGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.
     */
    loginParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.
     */
    tenantAuthEndpoint: pulumi.Input<string>;
    /**
     * Should the www-authenticate provider should be omitted from the request? Defaults to `false`
     */
    wwwAuthenticationDisabled?: pulumi.Input<boolean>;
}

export interface WindowsWebAppSlotAuthSettingsV2AppleV2 {
    /**
     * The OpenID Connect Client ID for the Apple web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Apple Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsV2AzureStaticWebAppV2 {
    /**
     * The ID of the Client to use to authenticate with Azure Static Web App Authentication.
     */
    clientId: pulumi.Input<string>;
}

export interface WindowsWebAppSlotAuthSettingsV2CustomOidcV2 {
    /**
     * The endpoint to make the Authorisation Request.
     */
    authorisationEndpoint?: pulumi.Input<string>;
    /**
     * The endpoint that provides the keys necessary to validate the token.
     */
    certificationUri?: pulumi.Input<string>;
    /**
     * The Client Credential Method used. Currently the only supported value is `ClientSecretPost`.
     */
    clientCredentialMethod?: pulumi.Input<string>;
    /**
     * The ID of the Client to use to authenticate with this Custom OIDC.
     */
    clientId: pulumi.Input<string>;
    /**
     * The App Setting name that contains the secret for this Custom OIDC Client.
     */
    clientSecretSettingName?: pulumi.Input<string>;
    /**
     * The endpoint that issued the Token.
     */
    issuerEndpoint?: pulumi.Input<string>;
    /**
     * The name of the Custom OIDC Authentication Provider.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the claim that contains the users name.
     */
    nameClaimType?: pulumi.Input<string>;
    /**
     * The endpoint that contains all the configuration endpoints for this Custom OIDC provider.
     */
    openidConfigurationEndpoint: pulumi.Input<string>;
    /**
     * The list of the scopes that should be requested while authenticating.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The endpoint used to request a Token.
     */
    tokenEndpoint?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotAuthSettingsV2FacebookV2 {
    /**
     * The App ID of the Facebook app used for login.
     */
    appId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `app_secret` value used for Facebook Login.
     */
    appSecretSettingName: pulumi.Input<string>;
    /**
     * The version of the Facebook API to be used while logging in.
     */
    graphApiVersion?: pulumi.Input<string>;
    /**
     * Specifies a list of scopes to be requested as part of Facebook Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsV2GithubV2 {
    /**
     * The ID of the GitHub app used for login.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for GitHub Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsV2GoogleV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OpenID Connect Client ID for the Google web application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name that contains the `client_secret` value used for Google Login.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsV2Login {
    /**
     * External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.
     */
    allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.
     */
    cookieExpirationConvention?: pulumi.Input<string>;
    /**
     * The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.
     */
    cookieExpirationTime?: pulumi.Input<string>;
    /**
     * The endpoint to which logout requests should be made.
     */
    logoutEndpoint?: pulumi.Input<string>;
    /**
     * The time after the request is made when the nonce should expire. Defaults to `00:05:00`.
     */
    nonceExpirationTime?: pulumi.Input<string>;
    /**
     * Should the fragments from the request be preserved after the login request is made. Defaults to `false`.
     */
    preserveUrlFragmentsForLogins?: pulumi.Input<boolean>;
    /**
     * The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.
     */
    tokenRefreshExtensionTime?: pulumi.Input<number>;
    /**
     * Should the Token Store configuration Enabled. Defaults to `false`
     */
    tokenStoreEnabled?: pulumi.Input<boolean>;
    /**
     * The directory path in the App Filesystem in which the tokens will be stored.
     */
    tokenStorePath?: pulumi.Input<string>;
    /**
     * The name of the app setting which contains the SAS URL of the blob storage containing the tokens.
     */
    tokenStoreSasSettingName?: pulumi.Input<string>;
    /**
     * Should the nonce be validated while completing the login flow. Defaults to `true`.
     */
    validateNonce?: pulumi.Input<boolean>;
}

export interface WindowsWebAppSlotAuthSettingsV2MicrosoftV2 {
    /**
     * Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     */
    allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OAuth 2.0 client ID that was created for the app used for authentication.
     */
    clientId: pulumi.Input<string>;
    /**
     * The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     */
    clientSecretSettingName: pulumi.Input<string>;
    /**
     * The list of Login scopes that will be requested as part of Microsoft Account authentication.
     */
    loginScopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotAuthSettingsV2TwitterV2 {
    /**
     * The OAuth 1.0a consumer key of the Twitter application used for sign-in.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.
     */
    consumerSecretSettingName: pulumi.Input<string>;
}

export interface WindowsWebAppSlotBackup {
    /**
     * Should this backup job be enabled?
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Backup.
     */
    name: pulumi.Input<string>;
    schedule: pulumi.Input<inputs.WindowsWebAppSlotBackupSchedule>;
    /**
     * The SAS URL to the container.
     */
    storageAccountUrl: pulumi.Input<string>;
}

export interface WindowsWebAppSlotBackupSchedule {
    /**
     * How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).
     */
    frequencyInterval: pulumi.Input<number>;
    /**
     * The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.
     */
    frequencyUnit: pulumi.Input<string>;
    /**
     * Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.
     */
    keepAtLeastOneBackup?: pulumi.Input<boolean>;
    /**
     * The time the backup was last attempted.
     */
    lastExecutionTime?: pulumi.Input<string>;
    /**
     * After how many days backups should be deleted.
     */
    retentionPeriodDays?: pulumi.Input<number>;
    /**
     * When the schedule should start working in RFC-3339 format.
     */
    startTime?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotConnectionString {
    /**
     * The name which should be used for this Connection.
     */
    name: pulumi.Input<string>;
    /**
     * Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.
     */
    type: pulumi.Input<string>;
    /**
     * The connection string value.
     */
    value: pulumi.Input<string>;
}

export interface WindowsWebAppSlotIdentity {
    identityIds?: pulumi.Input<pulumi.Input<string>[]>;
    principalId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsWebAppSlotLogs {
    applicationLogs?: pulumi.Input<inputs.WindowsWebAppSlotLogsApplicationLogs>;
    detailedErrorMessages?: pulumi.Input<boolean>;
    failedRequestTracing?: pulumi.Input<boolean>;
    httpLogs?: pulumi.Input<inputs.WindowsWebAppSlotLogsHttpLogs>;
}

export interface WindowsWebAppSlotLogsApplicationLogs {
    azureBlobStorage?: pulumi.Input<inputs.WindowsWebAppSlotLogsApplicationLogsAzureBlobStorage>;
    fileSystemLevel: pulumi.Input<string>;
}

export interface WindowsWebAppSlotLogsApplicationLogsAzureBlobStorage {
    level: pulumi.Input<string>;
    retentionInDays: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface WindowsWebAppSlotLogsHttpLogs {
    azureBlobStorage?: pulumi.Input<inputs.WindowsWebAppSlotLogsHttpLogsAzureBlobStorage>;
    fileSystem?: pulumi.Input<inputs.WindowsWebAppSlotLogsHttpLogsFileSystem>;
}

export interface WindowsWebAppSlotLogsHttpLogsAzureBlobStorage {
    retentionInDays?: pulumi.Input<number>;
    sasUrl: pulumi.Input<string>;
}

export interface WindowsWebAppSlotLogsHttpLogsFileSystem {
    retentionInDays: pulumi.Input<number>;
    retentionInMb: pulumi.Input<number>;
}

export interface WindowsWebAppSlotSiteConfig {
    alwaysOn?: pulumi.Input<boolean>;
    apiDefinitionUrl?: pulumi.Input<string>;
    apiManagementApiId?: pulumi.Input<string>;
    appCommandLine?: pulumi.Input<string>;
    applicationStack?: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigApplicationStack>;
    autoHealSetting?: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSetting>;
    autoSwapSlotName?: pulumi.Input<string>;
    containerRegistryManagedIdentityClientId?: pulumi.Input<string>;
    containerRegistryUseManagedIdentity?: pulumi.Input<boolean>;
    cors?: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigCors>;
    defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
    detailedErrorLoggingEnabled?: pulumi.Input<boolean>;
    ftpsState?: pulumi.Input<string>;
    handlerMappings?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigHandlerMapping>[]>;
    /**
     * The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`
     */
    healthCheckEvictionTimeInMin?: pulumi.Input<number>;
    healthCheckPath?: pulumi.Input<string>;
    http2Enabled?: pulumi.Input<boolean>;
    ipRestrictionDefaultAction?: pulumi.Input<string>;
    ipRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigIpRestriction>[]>;
    loadBalancingMode?: pulumi.Input<string>;
    localMysqlEnabled?: pulumi.Input<boolean>;
    managedPipelineMode?: pulumi.Input<string>;
    minimumTlsVersion?: pulumi.Input<string>;
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    remoteDebuggingVersion?: pulumi.Input<string>;
    scmIpRestrictionDefaultAction?: pulumi.Input<string>;
    scmIpRestrictions?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigScmIpRestriction>[]>;
    scmMinimumTlsVersion?: pulumi.Input<string>;
    scmType?: pulumi.Input<string>;
    scmUseMainIpRestriction?: pulumi.Input<boolean>;
    use32BitWorker?: pulumi.Input<boolean>;
    virtualApplications?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigVirtualApplication>[]>;
    /**
     * Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.
     */
    vnetRouteAllEnabled?: pulumi.Input<boolean>;
    websocketsEnabled?: pulumi.Input<boolean>;
    windowsFxVersion?: pulumi.Input<string>;
    workerCount?: pulumi.Input<number>;
}

export interface WindowsWebAppSlotSiteConfigApplicationStack {
    currentStack?: pulumi.Input<string>;
    dockerImageName?: pulumi.Input<string>;
    dockerRegistryPassword?: pulumi.Input<string>;
    dockerRegistryUrl?: pulumi.Input<string>;
    dockerRegistryUsername?: pulumi.Input<string>;
    /**
     * The version of DotNetCore to use.
     */
    dotnetCoreVersion?: pulumi.Input<string>;
    dotnetVersion?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    javaContainer?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    javaContainerVersion?: pulumi.Input<string>;
    /**
     * Should the application use the embedded web server for the version of Java in use.
     */
    javaEmbeddedServerEnabled?: pulumi.Input<boolean>;
    javaVersion?: pulumi.Input<string>;
    nodeVersion?: pulumi.Input<string>;
    phpVersion?: pulumi.Input<string>;
    python?: pulumi.Input<boolean>;
    tomcatVersion?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSetting {
    action: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSettingAction>;
    trigger: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSettingTrigger>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSettingAction {
    actionType: pulumi.Input<string>;
    customAction?: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSettingActionCustomAction>;
    minimumProcessExecutionTime?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSettingActionCustomAction {
    executable: pulumi.Input<string>;
    parameters?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSettingTrigger {
    privateMemoryKb?: pulumi.Input<number>;
    requests?: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequests>;
    slowRequest?: pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest>;
    slowRequestWithPaths?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequestWithPath>[]>;
    statusCodes?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode>[]>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequests {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequest {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSettingTriggerSlowRequestWithPath {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    timeTaken: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigAutoHealSettingTriggerStatusCode {
    count: pulumi.Input<number>;
    interval: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    statusCodeRange: pulumi.Input<string>;
    subStatus?: pulumi.Input<number>;
    win32StatusCode?: pulumi.Input<number>;
}

export interface WindowsWebAppSlotSiteConfigCors {
    /**
     * Specifies a list of origins that should be allowed to make cross-origin calls.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Are credentials allowed in CORS requests? Defaults to `false`.
     */
    supportCredentials?: pulumi.Input<boolean>;
}

export interface WindowsWebAppSlotSiteConfigHandlerMapping {
    arguments?: pulumi.Input<string>;
    extension: pulumi.Input<string>;
    scriptProcessorPath: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotSiteConfigScmIpRestriction {
    /**
     * The action to take. Possible values are `Allow` or `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the IP restriction rule.
     */
    description?: pulumi.Input<string>;
    headers?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigScmIpRestrictionHeader>[]>;
    /**
     * The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this `ip_restriction`.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority value of this `ip_restriction`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Service Tag used for this IP Restriction.
     */
    serviceTag?: pulumi.Input<string>;
    /**
     * The Virtual Network Subnet ID used for this IP Restriction.
     */
    virtualNetworkSubnetId?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigScmIpRestrictionHeader {
    xAzureFdids: pulumi.Input<pulumi.Input<string>[]>;
    xFdHealthProbes: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedFors: pulumi.Input<pulumi.Input<string>[]>;
    xForwardedHosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppSlotSiteConfigVirtualApplication {
    physicalPath: pulumi.Input<string>;
    preload: pulumi.Input<boolean>;
    virtualDirectories?: pulumi.Input<pulumi.Input<inputs.WindowsWebAppSlotSiteConfigVirtualApplicationVirtualDirectory>[]>;
    virtualPath: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteConfigVirtualApplicationVirtualDirectory {
    physicalPath?: pulumi.Input<string>;
    virtualPath?: pulumi.Input<string>;
}

export interface WindowsWebAppSlotSiteCredential {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface WindowsWebAppSlotStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsWebAppSlotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WindowsWebAppStickySettings {
    appSettingNames?: pulumi.Input<pulumi.Input<string>[]>;
    connectionStringNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface WindowsWebAppStorageAccount {
    accessKey: pulumi.Input<string>;
    accountName: pulumi.Input<string>;
    mountPath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    shareName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface WindowsWebAppTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WorkloadsSapDiscoveryVirtualInstanceIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface WorkloadsSapDiscoveryVirtualInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceSingleServerConfiguration {
    appResourceGroupName: pulumi.Input<string>;
    databaseType?: pulumi.Input<string>;
    diskVolumeConfigurations?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration>[]>;
    secondaryIpEnabled?: pulumi.Input<boolean>;
    subnetId: pulumi.Input<string>;
    virtualMachineConfiguration: pulumi.Input<inputs.WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfiguration>;
    virtualMachineResourceNames?: pulumi.Input<inputs.WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNames>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration {
    numberOfDisks: pulumi.Input<number>;
    sizeInGb: pulumi.Input<number>;
    skuName: pulumi.Input<string>;
    volumeName: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfiguration {
    image: pulumi.Input<inputs.WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationImage>;
    osProfile: pulumi.Input<inputs.WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfile>;
    virtualMachineSize: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationImage {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfile {
    adminUsername: pulumi.Input<string>;
    sshPrivateKey: pulumi.Input<string>;
    sshPublicKey: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNames {
    dataDisks?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesDataDisk>[]>;
    hostName?: pulumi.Input<string>;
    networkInterfaceNames?: pulumi.Input<pulumi.Input<string>[]>;
    osDiskName?: pulumi.Input<string>;
    virtualMachineName?: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesDataDisk {
    names: pulumi.Input<pulumi.Input<string>[]>;
    volumeName: pulumi.Input<string>;
}

export interface WorkloadsSapSingleNodeVirtualInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceIdentity {
    identityIds: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfiguration {
    appResourceGroupName: pulumi.Input<string>;
    applicationServerConfiguration: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfiguration>;
    centralServerConfiguration: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfiguration>;
    databaseServerConfiguration: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfiguration>;
    highAvailabilityType?: pulumi.Input<string>;
    resourceNames?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNames>;
    secondaryIpEnabled?: pulumi.Input<boolean>;
    transportCreateAndMount?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationTransportCreateAndMount>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfiguration {
    instanceCount: pulumi.Input<number>;
    subnetId: pulumi.Input<string>;
    virtualMachineConfiguration: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfiguration>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfiguration {
    image: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImage>;
    osProfile: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfile>;
    virtualMachineSize: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationImage {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfigurationVirtualMachineConfigurationOsProfile {
    adminUsername: pulumi.Input<string>;
    sshPrivateKey: pulumi.Input<string>;
    sshPublicKey: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfiguration {
    instanceCount: pulumi.Input<number>;
    subnetId: pulumi.Input<string>;
    virtualMachineConfiguration: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfigurationVirtualMachineConfiguration>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfigurationVirtualMachineConfiguration {
    image: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImage>;
    osProfile: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfile>;
    virtualMachineSize: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationImage {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfigurationVirtualMachineConfigurationOsProfile {
    adminUsername: pulumi.Input<string>;
    sshPrivateKey: pulumi.Input<string>;
    sshPublicKey: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfiguration {
    databaseType?: pulumi.Input<string>;
    diskVolumeConfigurations?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfiguration>[]>;
    instanceCount: pulumi.Input<number>;
    subnetId: pulumi.Input<string>;
    virtualMachineConfiguration: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfiguration>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationDiskVolumeConfiguration {
    numberOfDisks: pulumi.Input<number>;
    sizeInGb: pulumi.Input<number>;
    skuName: pulumi.Input<string>;
    volumeName: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfiguration {
    image: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImage>;
    osProfile: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfile>;
    virtualMachineSize: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationImage {
    offer: pulumi.Input<string>;
    publisher: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfigurationVirtualMachineConfigurationOsProfile {
    adminUsername: pulumi.Input<string>;
    sshPrivateKey: pulumi.Input<string>;
    sshPublicKey: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNames {
    applicationServer?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesApplicationServer>;
    centralServer?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServer>;
    databaseServer?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServer>;
    sharedStorage?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesSharedStorage>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesApplicationServer {
    availabilitySetName?: pulumi.Input<string>;
    virtualMachines?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesApplicationServerVirtualMachine>[]>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesApplicationServerVirtualMachine {
    dataDisks?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesApplicationServerVirtualMachineDataDisk>[]>;
    hostName?: pulumi.Input<string>;
    networkInterfaceNames?: pulumi.Input<pulumi.Input<string>[]>;
    osDiskName?: pulumi.Input<string>;
    virtualMachineName?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesApplicationServerVirtualMachineDataDisk {
    names: pulumi.Input<pulumi.Input<string>[]>;
    volumeName: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServer {
    availabilitySetName?: pulumi.Input<string>;
    loadBalancer?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServerLoadBalancer>;
    virtualMachines?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServerVirtualMachine>[]>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServerLoadBalancer {
    backendPoolNames?: pulumi.Input<pulumi.Input<string>[]>;
    frontendIpConfigurationNames?: pulumi.Input<pulumi.Input<string>[]>;
    healthProbeNames?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServerVirtualMachine {
    dataDisks?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServerVirtualMachineDataDisk>[]>;
    hostName?: pulumi.Input<string>;
    networkInterfaceNames?: pulumi.Input<pulumi.Input<string>[]>;
    osDiskName?: pulumi.Input<string>;
    virtualMachineName?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesCentralServerVirtualMachineDataDisk {
    names: pulumi.Input<pulumi.Input<string>[]>;
    volumeName: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServer {
    availabilitySetName?: pulumi.Input<string>;
    loadBalancer?: pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServerLoadBalancer>;
    virtualMachines?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServerVirtualMachine>[]>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServerLoadBalancer {
    backendPoolNames?: pulumi.Input<pulumi.Input<string>[]>;
    frontendIpConfigurationNames?: pulumi.Input<pulumi.Input<string>[]>;
    healthProbeNames?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServerVirtualMachine {
    dataDisks?: pulumi.Input<pulumi.Input<inputs.WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineDataDisk>[]>;
    hostName?: pulumi.Input<string>;
    networkInterfaceNames?: pulumi.Input<pulumi.Input<string>[]>;
    osDiskName?: pulumi.Input<string>;
    virtualMachineName?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesDatabaseServerVirtualMachineDataDisk {
    names: pulumi.Input<pulumi.Input<string>[]>;
    volumeName: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationResourceNamesSharedStorage {
    accountName?: pulumi.Input<string>;
    privateEndpointName?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceThreeTierConfigurationTransportCreateAndMount {
    resourceGroupId?: pulumi.Input<string>;
    storageAccountName?: pulumi.Input<string>;
}

export interface WorkloadsSapThreeTierVirtualInstanceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}
export namespace config {
}
