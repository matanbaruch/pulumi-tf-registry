// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLocation(args: GetLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getLocation:getLocation", {
        "id": args.id,
        "location": args.location,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocation.
 */
export interface GetLocationArgs {
    id?: string;
    location: string;
    timeouts?: inputs.GetLocationTimeouts;
}

/**
 * A collection of values returned by getLocation.
 */
export interface GetLocationResult {
    readonly displayName: string;
    readonly id: string;
    readonly location: string;
    readonly timeouts?: outputs.GetLocationTimeouts;
    readonly zoneMappings: outputs.GetLocationZoneMapping[];
}
export function getLocationOutput(args: GetLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationResult> {
    return pulumi.output(args).apply((a: any) => getLocation(a, opts))
}

/**
 * A collection of arguments for invoking getLocation.
 */
export interface GetLocationOutputArgs {
    id?: pulumi.Input<string>;
    location: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetLocationTimeoutsArgs>;
}
