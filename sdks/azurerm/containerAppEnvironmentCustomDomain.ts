// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ContainerAppEnvironmentCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing ContainerAppEnvironmentCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerAppEnvironmentCustomDomainState, opts?: pulumi.CustomResourceOptions): ContainerAppEnvironmentCustomDomain {
        return new ContainerAppEnvironmentCustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/containerAppEnvironmentCustomDomain:ContainerAppEnvironmentCustomDomain';

    /**
     * Returns true if the given object is an instance of ContainerAppEnvironmentCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerAppEnvironmentCustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerAppEnvironmentCustomDomain.__pulumiType;
    }

    /**
     * The Custom Domain Certificate Private Key as a base64 encoded PFX or PEM.
     */
    public readonly certificateBlobBase64!: pulumi.Output<string>;
    /**
     * The Custom Domain Certificate password.
     */
    public readonly certificatePassword!: pulumi.Output<string>;
    /**
     * The Container App Managed Environment ID to configure this Custom Domain on.
     */
    public readonly containerAppEnvironmentId!: pulumi.Output<string>;
    /**
     * The Custom Domain DNS suffix for this Container App Environment.
     */
    public readonly dnsSuffix!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ContainerAppEnvironmentCustomDomainTimeouts | undefined>;

    /**
     * Create a ContainerAppEnvironmentCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerAppEnvironmentCustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerAppEnvironmentCustomDomainArgs | ContainerAppEnvironmentCustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerAppEnvironmentCustomDomainState | undefined;
            resourceInputs["certificateBlobBase64"] = state ? state.certificateBlobBase64 : undefined;
            resourceInputs["certificatePassword"] = state ? state.certificatePassword : undefined;
            resourceInputs["containerAppEnvironmentId"] = state ? state.containerAppEnvironmentId : undefined;
            resourceInputs["dnsSuffix"] = state ? state.dnsSuffix : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as ContainerAppEnvironmentCustomDomainArgs | undefined;
            if ((!args || args.certificateBlobBase64 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificateBlobBase64'");
            }
            if ((!args || args.certificatePassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certificatePassword'");
            }
            if ((!args || args.containerAppEnvironmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerAppEnvironmentId'");
            }
            if ((!args || args.dnsSuffix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dnsSuffix'");
            }
            resourceInputs["certificateBlobBase64"] = args ? args.certificateBlobBase64 : undefined;
            resourceInputs["certificatePassword"] = args?.certificatePassword ? pulumi.secret(args.certificatePassword) : undefined;
            resourceInputs["containerAppEnvironmentId"] = args ? args.containerAppEnvironmentId : undefined;
            resourceInputs["dnsSuffix"] = args ? args.dnsSuffix : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["certificatePassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ContainerAppEnvironmentCustomDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ContainerAppEnvironmentCustomDomain resources.
 */
export interface ContainerAppEnvironmentCustomDomainState {
    /**
     * The Custom Domain Certificate Private Key as a base64 encoded PFX or PEM.
     */
    certificateBlobBase64?: pulumi.Input<string>;
    /**
     * The Custom Domain Certificate password.
     */
    certificatePassword?: pulumi.Input<string>;
    /**
     * The Container App Managed Environment ID to configure this Custom Domain on.
     */
    containerAppEnvironmentId?: pulumi.Input<string>;
    /**
     * The Custom Domain DNS suffix for this Container App Environment.
     */
    dnsSuffix?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ContainerAppEnvironmentCustomDomainTimeouts>;
}

/**
 * The set of arguments for constructing a ContainerAppEnvironmentCustomDomain resource.
 */
export interface ContainerAppEnvironmentCustomDomainArgs {
    /**
     * The Custom Domain Certificate Private Key as a base64 encoded PFX or PEM.
     */
    certificateBlobBase64: pulumi.Input<string>;
    /**
     * The Custom Domain Certificate password.
     */
    certificatePassword: pulumi.Input<string>;
    /**
     * The Container App Managed Environment ID to configure this Custom Domain on.
     */
    containerAppEnvironmentId: pulumi.Input<string>;
    /**
     * The Custom Domain DNS suffix for this Container App Environment.
     */
    dnsSuffix: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ContainerAppEnvironmentCustomDomainTimeouts>;
}
