// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AutomationWebhook extends pulumi.CustomResource {
    /**
     * Get an existing AutomationWebhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutomationWebhookState, opts?: pulumi.CustomResourceOptions): AutomationWebhook {
        return new AutomationWebhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/automationWebhook:AutomationWebhook';

    /**
     * Returns true if the given object is an instance of AutomationWebhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomationWebhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomationWebhook.__pulumiType;
    }

    public readonly automationAccountName!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly expiryTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly parameters!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly runOnWorkerGroup!: pulumi.Output<string | undefined>;
    public readonly runbookName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.AutomationWebhookTimeouts | undefined>;
    public readonly uri!: pulumi.Output<string>;

    /**
     * Create a AutomationWebhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationWebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutomationWebhookArgs | AutomationWebhookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutomationWebhookState | undefined;
            resourceInputs["automationAccountName"] = state ? state.automationAccountName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["expiryTime"] = state ? state.expiryTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["runOnWorkerGroup"] = state ? state.runOnWorkerGroup : undefined;
            resourceInputs["runbookName"] = state ? state.runbookName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as AutomationWebhookArgs | undefined;
            if ((!args || args.automationAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if ((!args || args.expiryTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'expiryTime'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.runbookName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runbookName'");
            }
            resourceInputs["automationAccountName"] = args ? args.automationAccountName : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["expiryTime"] = args ? args.expiryTime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["runOnWorkerGroup"] = args ? args.runOnWorkerGroup : undefined;
            resourceInputs["runbookName"] = args ? args.runbookName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["uri"] = args?.uri ? pulumi.secret(args.uri) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["uri"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AutomationWebhook.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutomationWebhook resources.
 */
export interface AutomationWebhookState {
    automationAccountName?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    expiryTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    resourceGroupName?: pulumi.Input<string>;
    runOnWorkerGroup?: pulumi.Input<string>;
    runbookName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AutomationWebhookTimeouts>;
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutomationWebhook resource.
 */
export interface AutomationWebhookArgs {
    automationAccountName: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    expiryTime: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    resourceGroupName: pulumi.Input<string>;
    runOnWorkerGroup?: pulumi.Input<string>;
    runbookName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.AutomationWebhookTimeouts>;
    uri?: pulumi.Input<string>;
}
