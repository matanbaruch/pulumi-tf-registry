// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AutomationRunbook extends pulumi.CustomResource {
    /**
     * Get an existing AutomationRunbook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutomationRunbookState, opts?: pulumi.CustomResourceOptions): AutomationRunbook {
        return new AutomationRunbook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/automationRunbook:AutomationRunbook';

    /**
     * Returns true if the given object is an instance of AutomationRunbook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomationRunbook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomationRunbook.__pulumiType;
    }

    public readonly automationAccountName!: pulumi.Output<string>;
    public readonly content!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly draft!: pulumi.Output<outputs.AutomationRunbookDraft | undefined>;
    public readonly jobSchedules!: pulumi.Output<outputs.AutomationRunbookJobSchedule[]>;
    public readonly location!: pulumi.Output<string>;
    public readonly logActivityTraceLevel!: pulumi.Output<number | undefined>;
    public readonly logProgress!: pulumi.Output<boolean>;
    public readonly logVerbose!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly publishContentLink!: pulumi.Output<outputs.AutomationRunbookPublishContentLink | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly runbookType!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.AutomationRunbookTimeouts | undefined>;

    /**
     * Create a AutomationRunbook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationRunbookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutomationRunbookArgs | AutomationRunbookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutomationRunbookState | undefined;
            resourceInputs["automationAccountName"] = state ? state.automationAccountName : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["draft"] = state ? state.draft : undefined;
            resourceInputs["jobSchedules"] = state ? state.jobSchedules : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["logActivityTraceLevel"] = state ? state.logActivityTraceLevel : undefined;
            resourceInputs["logProgress"] = state ? state.logProgress : undefined;
            resourceInputs["logVerbose"] = state ? state.logVerbose : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publishContentLink"] = state ? state.publishContentLink : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["runbookType"] = state ? state.runbookType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as AutomationRunbookArgs | undefined;
            if ((!args || args.automationAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.logProgress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logProgress'");
            }
            if ((!args || args.logVerbose === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logVerbose'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.runbookType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runbookType'");
            }
            resourceInputs["automationAccountName"] = args ? args.automationAccountName : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["draft"] = args ? args.draft : undefined;
            resourceInputs["jobSchedules"] = args ? args.jobSchedules : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["logActivityTraceLevel"] = args ? args.logActivityTraceLevel : undefined;
            resourceInputs["logProgress"] = args ? args.logProgress : undefined;
            resourceInputs["logVerbose"] = args ? args.logVerbose : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publishContentLink"] = args ? args.publishContentLink : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["runbookType"] = args ? args.runbookType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutomationRunbook.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutomationRunbook resources.
 */
export interface AutomationRunbookState {
    automationAccountName?: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    draft?: pulumi.Input<inputs.AutomationRunbookDraft>;
    jobSchedules?: pulumi.Input<pulumi.Input<inputs.AutomationRunbookJobSchedule>[]>;
    location?: pulumi.Input<string>;
    logActivityTraceLevel?: pulumi.Input<number>;
    logProgress?: pulumi.Input<boolean>;
    logVerbose?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    publishContentLink?: pulumi.Input<inputs.AutomationRunbookPublishContentLink>;
    resourceGroupName?: pulumi.Input<string>;
    runbookType?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AutomationRunbookTimeouts>;
}

/**
 * The set of arguments for constructing a AutomationRunbook resource.
 */
export interface AutomationRunbookArgs {
    automationAccountName: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    draft?: pulumi.Input<inputs.AutomationRunbookDraft>;
    jobSchedules?: pulumi.Input<pulumi.Input<inputs.AutomationRunbookJobSchedule>[]>;
    location: pulumi.Input<string>;
    logActivityTraceLevel?: pulumi.Input<number>;
    logProgress: pulumi.Input<boolean>;
    logVerbose: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    publishContentLink?: pulumi.Input<inputs.AutomationRunbookPublishContentLink>;
    resourceGroupName: pulumi.Input<string>;
    runbookType: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.AutomationRunbookTimeouts>;
}
