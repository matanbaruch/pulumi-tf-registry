// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationInsightsAnalyticsItem extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationInsightsAnalyticsItem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationInsightsAnalyticsItemState, opts?: pulumi.CustomResourceOptions): ApplicationInsightsAnalyticsItem {
        return new ApplicationInsightsAnalyticsItem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/applicationInsightsAnalyticsItem:ApplicationInsightsAnalyticsItem';

    /**
     * Returns true if the given object is an instance of ApplicationInsightsAnalyticsItem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationInsightsAnalyticsItem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationInsightsAnalyticsItem.__pulumiType;
    }

    public readonly applicationInsightsId!: pulumi.Output<string>;
    public readonly content!: pulumi.Output<string>;
    public readonly functionAlias!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly scope!: pulumi.Output<string>;
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeModified!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.ApplicationInsightsAnalyticsItemTimeouts | undefined>;
    public readonly type!: pulumi.Output<string>;
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a ApplicationInsightsAnalyticsItem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationInsightsAnalyticsItemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationInsightsAnalyticsItemArgs | ApplicationInsightsAnalyticsItemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationInsightsAnalyticsItemState | undefined;
            resourceInputs["applicationInsightsId"] = state ? state.applicationInsightsId : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["functionAlias"] = state ? state.functionAlias : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeModified"] = state ? state.timeModified : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ApplicationInsightsAnalyticsItemArgs | undefined;
            if ((!args || args.applicationInsightsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationInsightsId'");
            }
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["applicationInsightsId"] = args ? args.applicationInsightsId : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["functionAlias"] = args ? args.functionAlias : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeModified"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationInsightsAnalyticsItem.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplicationInsightsAnalyticsItem resources.
 */
export interface ApplicationInsightsAnalyticsItemState {
    applicationInsightsId?: pulumi.Input<string>;
    content?: pulumi.Input<string>;
    functionAlias?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    timeModified?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApplicationInsightsAnalyticsItemTimeouts>;
    type?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationInsightsAnalyticsItem resource.
 */
export interface ApplicationInsightsAnalyticsItemArgs {
    applicationInsightsId: pulumi.Input<string>;
    content: pulumi.Input<string>;
    functionAlias?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scope: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.ApplicationInsightsAnalyticsItemTimeouts>;
    type: pulumi.Input<string>;
}
