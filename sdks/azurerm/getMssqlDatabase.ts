// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMssqlDatabase(args: GetMssqlDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetMssqlDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getMssqlDatabase:getMssqlDatabase", {
        "id": args.id,
        "name": args.name,
        "serverId": args.serverId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMssqlDatabase.
 */
export interface GetMssqlDatabaseArgs {
    id?: string;
    name: string;
    serverId: string;
    timeouts?: inputs.GetMssqlDatabaseTimeouts;
}

/**
 * A collection of values returned by getMssqlDatabase.
 */
export interface GetMssqlDatabaseResult {
    readonly collation: string;
    readonly elasticPoolId: string;
    readonly enclaveType: string;
    readonly id: string;
    readonly identities: outputs.GetMssqlDatabaseIdentity[];
    readonly licenseType: string;
    readonly maxSizeGb: number;
    readonly name: string;
    readonly readReplicaCount: number;
    readonly readScale: boolean;
    readonly serverId: string;
    readonly skuName: string;
    readonly storageAccountType: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetMssqlDatabaseTimeouts;
    readonly transparentDataEncryptionEnabled: boolean;
    readonly transparentDataEncryptionKeyAutomaticRotationEnabled: boolean;
    readonly transparentDataEncryptionKeyVaultKeyId: string;
    readonly zoneRedundant: boolean;
}
export function getMssqlDatabaseOutput(args: GetMssqlDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMssqlDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getMssqlDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getMssqlDatabase.
 */
export interface GetMssqlDatabaseOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    serverId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetMssqlDatabaseTimeoutsArgs>;
}
