// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataShare(args: GetDataShareArgs, opts?: pulumi.InvokeOptions): Promise<GetDataShareResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getDataShare:getDataShare", {
        "accountId": args.accountId,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataShare.
 */
export interface GetDataShareArgs {
    accountId: string;
    id?: string;
    name: string;
    timeouts?: inputs.GetDataShareTimeouts;
}

/**
 * A collection of values returned by getDataShare.
 */
export interface GetDataShareResult {
    readonly accountId: string;
    readonly description: string;
    readonly id: string;
    readonly kind: string;
    readonly name: string;
    readonly snapshotSchedules: outputs.GetDataShareSnapshotSchedule[];
    readonly terms: string;
    readonly timeouts?: outputs.GetDataShareTimeouts;
}
export function getDataShareOutput(args: GetDataShareOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataShareResult> {
    return pulumi.output(args).apply((a: any) => getDataShare(a, opts))
}

/**
 * A collection of arguments for invoking getDataShare.
 */
export interface GetDataShareOutputArgs {
    accountId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetDataShareTimeoutsArgs>;
}
