// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageAccountSas(args: GetStorageAccountSasArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageAccountSasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getStorageAccountSas:getStorageAccountSas", {
        "connectionString": args.connectionString,
        "expiry": args.expiry,
        "httpsOnly": args.httpsOnly,
        "id": args.id,
        "ipAddresses": args.ipAddresses,
        "permissions": args.permissions,
        "resourceTypes": args.resourceTypes,
        "services": args.services,
        "signedVersion": args.signedVersion,
        "start": args.start,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageAccountSas.
 */
export interface GetStorageAccountSasArgs {
    connectionString: string;
    expiry: string;
    httpsOnly?: boolean;
    id?: string;
    ipAddresses?: string;
    permissions: inputs.GetStorageAccountSasPermissions;
    resourceTypes: inputs.GetStorageAccountSasResourceTypes;
    services: inputs.GetStorageAccountSasServices;
    signedVersion?: string;
    start: string;
    timeouts?: inputs.GetStorageAccountSasTimeouts;
}

/**
 * A collection of values returned by getStorageAccountSas.
 */
export interface GetStorageAccountSasResult {
    readonly connectionString: string;
    readonly expiry: string;
    readonly httpsOnly?: boolean;
    readonly id: string;
    readonly ipAddresses?: string;
    readonly permissions: outputs.GetStorageAccountSasPermissions;
    readonly resourceTypes: outputs.GetStorageAccountSasResourceTypes;
    readonly sas: string;
    readonly services: outputs.GetStorageAccountSasServices;
    readonly signedVersion?: string;
    readonly start: string;
    readonly timeouts?: outputs.GetStorageAccountSasTimeouts;
}
export function getStorageAccountSasOutput(args: GetStorageAccountSasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageAccountSasResult> {
    return pulumi.output(args).apply((a: any) => getStorageAccountSas(a, opts))
}

/**
 * A collection of arguments for invoking getStorageAccountSas.
 */
export interface GetStorageAccountSasOutputArgs {
    connectionString: pulumi.Input<string>;
    expiry: pulumi.Input<string>;
    httpsOnly?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<string>;
    permissions: pulumi.Input<inputs.GetStorageAccountSasPermissionsArgs>;
    resourceTypes: pulumi.Input<inputs.GetStorageAccountSasResourceTypesArgs>;
    services: pulumi.Input<inputs.GetStorageAccountSasServicesArgs>;
    signedVersion?: pulumi.Input<string>;
    start: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetStorageAccountSasTimeoutsArgs>;
}
