// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SentinelMetadata extends pulumi.CustomResource {
    /**
     * Get an existing SentinelMetadata resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SentinelMetadataState, opts?: pulumi.CustomResourceOptions): SentinelMetadata {
        return new SentinelMetadata(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/sentinelMetadata:SentinelMetadata';

    /**
     * Returns true if the given object is an instance of SentinelMetadata.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SentinelMetadata {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SentinelMetadata.__pulumiType;
    }

    public readonly author!: pulumi.Output<outputs.SentinelMetadataAuthor | undefined>;
    public readonly category!: pulumi.Output<outputs.SentinelMetadataCategory | undefined>;
    public readonly contentId!: pulumi.Output<string>;
    public readonly contentSchemaVersion!: pulumi.Output<string | undefined>;
    public readonly customVersion!: pulumi.Output<string | undefined>;
    public readonly dependency!: pulumi.Output<string | undefined>;
    public readonly firstPublishDate!: pulumi.Output<string | undefined>;
    public readonly iconId!: pulumi.Output<string | undefined>;
    public readonly kind!: pulumi.Output<string>;
    public readonly lastPublishDate!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly parentId!: pulumi.Output<string>;
    public readonly previewImages!: pulumi.Output<string[] | undefined>;
    public readonly previewImagesDarks!: pulumi.Output<string[] | undefined>;
    public readonly providers!: pulumi.Output<string[] | undefined>;
    public readonly source!: pulumi.Output<outputs.SentinelMetadataSource | undefined>;
    public readonly support!: pulumi.Output<outputs.SentinelMetadataSupport | undefined>;
    public readonly threatAnalysisTactics!: pulumi.Output<string[] | undefined>;
    public readonly threatAnalysisTechniques!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.SentinelMetadataTimeouts | undefined>;
    public readonly version!: pulumi.Output<string | undefined>;
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a SentinelMetadata resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SentinelMetadataArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SentinelMetadataArgs | SentinelMetadataState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SentinelMetadataState | undefined;
            resourceInputs["author"] = state ? state.author : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["contentId"] = state ? state.contentId : undefined;
            resourceInputs["contentSchemaVersion"] = state ? state.contentSchemaVersion : undefined;
            resourceInputs["customVersion"] = state ? state.customVersion : undefined;
            resourceInputs["dependency"] = state ? state.dependency : undefined;
            resourceInputs["firstPublishDate"] = state ? state.firstPublishDate : undefined;
            resourceInputs["iconId"] = state ? state.iconId : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["lastPublishDate"] = state ? state.lastPublishDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["previewImages"] = state ? state.previewImages : undefined;
            resourceInputs["previewImagesDarks"] = state ? state.previewImagesDarks : undefined;
            resourceInputs["providers"] = state ? state.providers : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["support"] = state ? state.support : undefined;
            resourceInputs["threatAnalysisTactics"] = state ? state.threatAnalysisTactics : undefined;
            resourceInputs["threatAnalysisTechniques"] = state ? state.threatAnalysisTechniques : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as SentinelMetadataArgs | undefined;
            if ((!args || args.contentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentId'");
            }
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.parentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentId'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["author"] = args ? args.author : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["contentId"] = args ? args.contentId : undefined;
            resourceInputs["contentSchemaVersion"] = args ? args.contentSchemaVersion : undefined;
            resourceInputs["customVersion"] = args ? args.customVersion : undefined;
            resourceInputs["dependency"] = args ? args.dependency : undefined;
            resourceInputs["firstPublishDate"] = args ? args.firstPublishDate : undefined;
            resourceInputs["iconId"] = args ? args.iconId : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["lastPublishDate"] = args ? args.lastPublishDate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["previewImages"] = args ? args.previewImages : undefined;
            resourceInputs["previewImagesDarks"] = args ? args.previewImagesDarks : undefined;
            resourceInputs["providers"] = args ? args.providers : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["support"] = args ? args.support : undefined;
            resourceInputs["threatAnalysisTactics"] = args ? args.threatAnalysisTactics : undefined;
            resourceInputs["threatAnalysisTechniques"] = args ? args.threatAnalysisTechniques : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SentinelMetadata.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SentinelMetadata resources.
 */
export interface SentinelMetadataState {
    author?: pulumi.Input<inputs.SentinelMetadataAuthor>;
    category?: pulumi.Input<inputs.SentinelMetadataCategory>;
    contentId?: pulumi.Input<string>;
    contentSchemaVersion?: pulumi.Input<string>;
    customVersion?: pulumi.Input<string>;
    dependency?: pulumi.Input<string>;
    firstPublishDate?: pulumi.Input<string>;
    iconId?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    lastPublishDate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    previewImages?: pulumi.Input<pulumi.Input<string>[]>;
    previewImagesDarks?: pulumi.Input<pulumi.Input<string>[]>;
    providers?: pulumi.Input<pulumi.Input<string>[]>;
    source?: pulumi.Input<inputs.SentinelMetadataSource>;
    support?: pulumi.Input<inputs.SentinelMetadataSupport>;
    threatAnalysisTactics?: pulumi.Input<pulumi.Input<string>[]>;
    threatAnalysisTechniques?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.SentinelMetadataTimeouts>;
    version?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SentinelMetadata resource.
 */
export interface SentinelMetadataArgs {
    author?: pulumi.Input<inputs.SentinelMetadataAuthor>;
    category?: pulumi.Input<inputs.SentinelMetadataCategory>;
    contentId: pulumi.Input<string>;
    contentSchemaVersion?: pulumi.Input<string>;
    customVersion?: pulumi.Input<string>;
    dependency?: pulumi.Input<string>;
    firstPublishDate?: pulumi.Input<string>;
    iconId?: pulumi.Input<string>;
    kind: pulumi.Input<string>;
    lastPublishDate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parentId: pulumi.Input<string>;
    previewImages?: pulumi.Input<pulumi.Input<string>[]>;
    previewImagesDarks?: pulumi.Input<pulumi.Input<string>[]>;
    providers?: pulumi.Input<pulumi.Input<string>[]>;
    source?: pulumi.Input<inputs.SentinelMetadataSource>;
    support?: pulumi.Input<inputs.SentinelMetadataSupport>;
    threatAnalysisTactics?: pulumi.Input<pulumi.Input<string>[]>;
    threatAnalysisTechniques?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.SentinelMetadataTimeouts>;
    version?: pulumi.Input<string>;
    workspaceId: pulumi.Input<string>;
}
