// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApiManagementApi(args: GetApiManagementApiArgs, opts?: pulumi.InvokeOptions): Promise<GetApiManagementApiResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getApiManagementApi:getApiManagementApi", {
        "apiManagementName": args.apiManagementName,
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "revision": args.revision,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApiManagementApi.
 */
export interface GetApiManagementApiArgs {
    apiManagementName: string;
    id?: string;
    name: string;
    resourceGroupName: string;
    revision: string;
    timeouts?: inputs.GetApiManagementApiTimeouts;
}

/**
 * A collection of values returned by getApiManagementApi.
 */
export interface GetApiManagementApiResult {
    readonly apiManagementName: string;
    readonly description: string;
    readonly displayName: string;
    readonly id: string;
    readonly isCurrent: boolean;
    readonly isOnline: boolean;
    readonly name: string;
    readonly path: string;
    readonly protocols: string[];
    readonly resourceGroupName: string;
    readonly revision: string;
    readonly serviceUrl: string;
    readonly soapPassThrough: boolean;
    readonly subscriptionKeyParameterNames: outputs.GetApiManagementApiSubscriptionKeyParameterName[];
    readonly subscriptionRequired: boolean;
    readonly timeouts?: outputs.GetApiManagementApiTimeouts;
    readonly version: string;
    readonly versionSetId: string;
}
export function getApiManagementApiOutput(args: GetApiManagementApiOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiManagementApiResult> {
    return pulumi.output(args).apply((a: any) => getApiManagementApi(a, opts))
}

/**
 * A collection of arguments for invoking getApiManagementApi.
 */
export interface GetApiManagementApiOutputArgs {
    apiManagementName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    revision: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetApiManagementApiTimeoutsArgs>;
}
