// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LbBackendAddressPoolAddress extends pulumi.CustomResource {
    /**
     * Get an existing LbBackendAddressPoolAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbBackendAddressPoolAddressState, opts?: pulumi.CustomResourceOptions): LbBackendAddressPoolAddress {
        return new LbBackendAddressPoolAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/lbBackendAddressPoolAddress:LbBackendAddressPoolAddress';

    /**
     * Returns true if the given object is an instance of LbBackendAddressPoolAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LbBackendAddressPoolAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LbBackendAddressPoolAddress.__pulumiType;
    }

    /**
     * For global load balancer, user needs to specify the `backend_address_ip_configuration_id` of the added regional load
     * balancers
     */
    public readonly backendAddressIpConfigurationId!: pulumi.Output<string | undefined>;
    public readonly backendAddressPoolId!: pulumi.Output<string>;
    public /*out*/ readonly inboundNatRulePortMappings!: pulumi.Output<outputs.LbBackendAddressPoolAddressInboundNatRulePortMapping[]>;
    public readonly ipAddress!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.LbBackendAddressPoolAddressTimeouts | undefined>;
    public readonly virtualNetworkId!: pulumi.Output<string | undefined>;

    /**
     * Create a LbBackendAddressPoolAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbBackendAddressPoolAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbBackendAddressPoolAddressArgs | LbBackendAddressPoolAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbBackendAddressPoolAddressState | undefined;
            resourceInputs["backendAddressIpConfigurationId"] = state ? state.backendAddressIpConfigurationId : undefined;
            resourceInputs["backendAddressPoolId"] = state ? state.backendAddressPoolId : undefined;
            resourceInputs["inboundNatRulePortMappings"] = state ? state.inboundNatRulePortMappings : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["virtualNetworkId"] = state ? state.virtualNetworkId : undefined;
        } else {
            const args = argsOrState as LbBackendAddressPoolAddressArgs | undefined;
            if ((!args || args.backendAddressPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backendAddressPoolId'");
            }
            resourceInputs["backendAddressIpConfigurationId"] = args ? args.backendAddressIpConfigurationId : undefined;
            resourceInputs["backendAddressPoolId"] = args ? args.backendAddressPoolId : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["virtualNetworkId"] = args ? args.virtualNetworkId : undefined;
            resourceInputs["inboundNatRulePortMappings"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LbBackendAddressPoolAddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LbBackendAddressPoolAddress resources.
 */
export interface LbBackendAddressPoolAddressState {
    /**
     * For global load balancer, user needs to specify the `backend_address_ip_configuration_id` of the added regional load
     * balancers
     */
    backendAddressIpConfigurationId?: pulumi.Input<string>;
    backendAddressPoolId?: pulumi.Input<string>;
    inboundNatRulePortMappings?: pulumi.Input<pulumi.Input<inputs.LbBackendAddressPoolAddressInboundNatRulePortMapping>[]>;
    ipAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LbBackendAddressPoolAddressTimeouts>;
    virtualNetworkId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LbBackendAddressPoolAddress resource.
 */
export interface LbBackendAddressPoolAddressArgs {
    /**
     * For global load balancer, user needs to specify the `backend_address_ip_configuration_id` of the added regional load
     * balancers
     */
    backendAddressIpConfigurationId?: pulumi.Input<string>;
    backendAddressPoolId: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.LbBackendAddressPoolAddressTimeouts>;
    virtualNetworkId?: pulumi.Input<string>;
}
