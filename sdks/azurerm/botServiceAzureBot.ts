// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BotServiceAzureBot extends pulumi.CustomResource {
    /**
     * Get an existing BotServiceAzureBot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BotServiceAzureBotState, opts?: pulumi.CustomResourceOptions): BotServiceAzureBot {
        return new BotServiceAzureBot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/botServiceAzureBot:BotServiceAzureBot';

    /**
     * Returns true if the given object is an instance of BotServiceAzureBot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BotServiceAzureBot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BotServiceAzureBot.__pulumiType;
    }

    public readonly cmkKeyVaultKeyUrl!: pulumi.Output<string | undefined>;
    public readonly developerAppInsightsApiKey!: pulumi.Output<string | undefined>;
    public readonly developerAppInsightsApplicationId!: pulumi.Output<string | undefined>;
    public readonly developerAppInsightsKey!: pulumi.Output<string | undefined>;
    public readonly displayName!: pulumi.Output<string>;
    public readonly endpoint!: pulumi.Output<string | undefined>;
    public readonly iconUrl!: pulumi.Output<string | undefined>;
    public readonly localAuthenticationEnabled!: pulumi.Output<boolean | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly luisAppIds!: pulumi.Output<string[] | undefined>;
    public readonly luisKey!: pulumi.Output<string | undefined>;
    public readonly microsoftAppId!: pulumi.Output<string>;
    public readonly microsoftAppMsiId!: pulumi.Output<string | undefined>;
    public readonly microsoftAppTenantId!: pulumi.Output<string | undefined>;
    public readonly microsoftAppType!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly sku!: pulumi.Output<string>;
    public readonly streamingEndpointEnabled!: pulumi.Output<boolean | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.BotServiceAzureBotTimeouts | undefined>;

    /**
     * Create a BotServiceAzureBot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotServiceAzureBotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BotServiceAzureBotArgs | BotServiceAzureBotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BotServiceAzureBotState | undefined;
            resourceInputs["cmkKeyVaultKeyUrl"] = state ? state.cmkKeyVaultKeyUrl : undefined;
            resourceInputs["developerAppInsightsApiKey"] = state ? state.developerAppInsightsApiKey : undefined;
            resourceInputs["developerAppInsightsApplicationId"] = state ? state.developerAppInsightsApplicationId : undefined;
            resourceInputs["developerAppInsightsKey"] = state ? state.developerAppInsightsKey : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["iconUrl"] = state ? state.iconUrl : undefined;
            resourceInputs["localAuthenticationEnabled"] = state ? state.localAuthenticationEnabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["luisAppIds"] = state ? state.luisAppIds : undefined;
            resourceInputs["luisKey"] = state ? state.luisKey : undefined;
            resourceInputs["microsoftAppId"] = state ? state.microsoftAppId : undefined;
            resourceInputs["microsoftAppMsiId"] = state ? state.microsoftAppMsiId : undefined;
            resourceInputs["microsoftAppTenantId"] = state ? state.microsoftAppTenantId : undefined;
            resourceInputs["microsoftAppType"] = state ? state.microsoftAppType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["streamingEndpointEnabled"] = state ? state.streamingEndpointEnabled : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as BotServiceAzureBotArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.microsoftAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'microsoftAppId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["cmkKeyVaultKeyUrl"] = args ? args.cmkKeyVaultKeyUrl : undefined;
            resourceInputs["developerAppInsightsApiKey"] = args?.developerAppInsightsApiKey ? pulumi.secret(args.developerAppInsightsApiKey) : undefined;
            resourceInputs["developerAppInsightsApplicationId"] = args ? args.developerAppInsightsApplicationId : undefined;
            resourceInputs["developerAppInsightsKey"] = args ? args.developerAppInsightsKey : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["iconUrl"] = args ? args.iconUrl : undefined;
            resourceInputs["localAuthenticationEnabled"] = args ? args.localAuthenticationEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["luisAppIds"] = args ? args.luisAppIds : undefined;
            resourceInputs["luisKey"] = args?.luisKey ? pulumi.secret(args.luisKey) : undefined;
            resourceInputs["microsoftAppId"] = args ? args.microsoftAppId : undefined;
            resourceInputs["microsoftAppMsiId"] = args ? args.microsoftAppMsiId : undefined;
            resourceInputs["microsoftAppTenantId"] = args ? args.microsoftAppTenantId : undefined;
            resourceInputs["microsoftAppType"] = args ? args.microsoftAppType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["streamingEndpointEnabled"] = args ? args.streamingEndpointEnabled : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["developerAppInsightsApiKey", "luisKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BotServiceAzureBot.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BotServiceAzureBot resources.
 */
export interface BotServiceAzureBotState {
    cmkKeyVaultKeyUrl?: pulumi.Input<string>;
    developerAppInsightsApiKey?: pulumi.Input<string>;
    developerAppInsightsApplicationId?: pulumi.Input<string>;
    developerAppInsightsKey?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    iconUrl?: pulumi.Input<string>;
    localAuthenticationEnabled?: pulumi.Input<boolean>;
    location?: pulumi.Input<string>;
    luisAppIds?: pulumi.Input<pulumi.Input<string>[]>;
    luisKey?: pulumi.Input<string>;
    microsoftAppId?: pulumi.Input<string>;
    microsoftAppMsiId?: pulumi.Input<string>;
    microsoftAppTenantId?: pulumi.Input<string>;
    microsoftAppType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    resourceGroupName?: pulumi.Input<string>;
    sku?: pulumi.Input<string>;
    streamingEndpointEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.BotServiceAzureBotTimeouts>;
}

/**
 * The set of arguments for constructing a BotServiceAzureBot resource.
 */
export interface BotServiceAzureBotArgs {
    cmkKeyVaultKeyUrl?: pulumi.Input<string>;
    developerAppInsightsApiKey?: pulumi.Input<string>;
    developerAppInsightsApplicationId?: pulumi.Input<string>;
    developerAppInsightsKey?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    iconUrl?: pulumi.Input<string>;
    localAuthenticationEnabled?: pulumi.Input<boolean>;
    location: pulumi.Input<string>;
    luisAppIds?: pulumi.Input<pulumi.Input<string>[]>;
    luisKey?: pulumi.Input<string>;
    microsoftAppId: pulumi.Input<string>;
    microsoftAppMsiId?: pulumi.Input<string>;
    microsoftAppTenantId?: pulumi.Input<string>;
    microsoftAppType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    resourceGroupName: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    streamingEndpointEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.BotServiceAzureBotTimeouts>;
}
