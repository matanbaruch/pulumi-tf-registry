// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatabaseMigrationProject(args: GetDatabaseMigrationProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseMigrationProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getDatabaseMigrationProject:getDatabaseMigrationProject", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatabaseMigrationProject.
 */
export interface GetDatabaseMigrationProjectArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    serviceName: string;
    timeouts?: inputs.GetDatabaseMigrationProjectTimeouts;
}

/**
 * A collection of values returned by getDatabaseMigrationProject.
 */
export interface GetDatabaseMigrationProjectResult {
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    readonly serviceName: string;
    readonly sourcePlatform: string;
    readonly tags: {[key: string]: string};
    readonly targetPlatform: string;
    readonly timeouts?: outputs.GetDatabaseMigrationProjectTimeouts;
}
export function getDatabaseMigrationProjectOutput(args: GetDatabaseMigrationProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseMigrationProjectResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseMigrationProject(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseMigrationProject.
 */
export interface GetDatabaseMigrationProjectOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetDatabaseMigrationProjectTimeoutsArgs>;
}
