// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubscriptions(args?: GetSubscriptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getSubscriptions:getSubscriptions", {
        "displayNameContains": args.displayNameContains,
        "displayNamePrefix": args.displayNamePrefix,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubscriptions.
 */
export interface GetSubscriptionsArgs {
    displayNameContains?: string;
    displayNamePrefix?: string;
    id?: string;
    timeouts?: inputs.GetSubscriptionsTimeouts;
}

/**
 * A collection of values returned by getSubscriptions.
 */
export interface GetSubscriptionsResult {
    readonly displayNameContains?: string;
    readonly displayNamePrefix?: string;
    readonly id: string;
    readonly subscriptions: outputs.GetSubscriptionsSubscription[];
    readonly timeouts?: outputs.GetSubscriptionsTimeouts;
}
export function getSubscriptionsOutput(args?: GetSubscriptionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionsResult> {
    return pulumi.output(args).apply((a: any) => getSubscriptions(a, opts))
}

/**
 * A collection of arguments for invoking getSubscriptions.
 */
export interface GetSubscriptionsOutputArgs {
    displayNameContains?: pulumi.Input<string>;
    displayNamePrefix?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSubscriptionsTimeoutsArgs>;
}
