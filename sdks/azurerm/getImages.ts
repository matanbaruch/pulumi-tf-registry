// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImages(args: GetImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetImagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getImages:getImages", {
        "id": args.id,
        "resourceGroupName": args.resourceGroupName,
        "tagsFilter": args.tagsFilter,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesArgs {
    id?: string;
    resourceGroupName: string;
    tagsFilter?: {[key: string]: string};
    timeouts?: inputs.GetImagesTimeouts;
}

/**
 * A collection of values returned by getImages.
 */
export interface GetImagesResult {
    readonly id: string;
    readonly images: outputs.GetImagesImage[];
    readonly resourceGroupName: string;
    readonly tagsFilter?: {[key: string]: string};
    readonly timeouts?: outputs.GetImagesTimeouts;
}
export function getImagesOutput(args: GetImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagesResult> {
    return pulumi.output(args).apply((a: any) => getImages(a, opts))
}

/**
 * A collection of arguments for invoking getImages.
 */
export interface GetImagesOutputArgs {
    id?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    tagsFilter?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.GetImagesTimeoutsArgs>;
}
