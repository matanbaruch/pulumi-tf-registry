// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SiteRecoveryProtectionContainerMapping extends pulumi.CustomResource {
    /**
     * Get an existing SiteRecoveryProtectionContainerMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SiteRecoveryProtectionContainerMappingState, opts?: pulumi.CustomResourceOptions): SiteRecoveryProtectionContainerMapping {
        return new SiteRecoveryProtectionContainerMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/siteRecoveryProtectionContainerMapping:SiteRecoveryProtectionContainerMapping';

    /**
     * Returns true if the given object is an instance of SiteRecoveryProtectionContainerMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SiteRecoveryProtectionContainerMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SiteRecoveryProtectionContainerMapping.__pulumiType;
    }

    public readonly automaticUpdate!: pulumi.Output<outputs.SiteRecoveryProtectionContainerMappingAutomaticUpdate | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly recoveryFabricName!: pulumi.Output<string>;
    public readonly recoveryReplicationPolicyId!: pulumi.Output<string>;
    public readonly recoverySourceProtectionContainerName!: pulumi.Output<string>;
    public readonly recoveryTargetProtectionContainerId!: pulumi.Output<string>;
    public readonly recoveryVaultName!: pulumi.Output<string>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SiteRecoveryProtectionContainerMappingTimeouts | undefined>;

    /**
     * Create a SiteRecoveryProtectionContainerMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SiteRecoveryProtectionContainerMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SiteRecoveryProtectionContainerMappingArgs | SiteRecoveryProtectionContainerMappingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SiteRecoveryProtectionContainerMappingState | undefined;
            resourceInputs["automaticUpdate"] = state ? state.automaticUpdate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recoveryFabricName"] = state ? state.recoveryFabricName : undefined;
            resourceInputs["recoveryReplicationPolicyId"] = state ? state.recoveryReplicationPolicyId : undefined;
            resourceInputs["recoverySourceProtectionContainerName"] = state ? state.recoverySourceProtectionContainerName : undefined;
            resourceInputs["recoveryTargetProtectionContainerId"] = state ? state.recoveryTargetProtectionContainerId : undefined;
            resourceInputs["recoveryVaultName"] = state ? state.recoveryVaultName : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SiteRecoveryProtectionContainerMappingArgs | undefined;
            if ((!args || args.recoveryFabricName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryFabricName'");
            }
            if ((!args || args.recoveryReplicationPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryReplicationPolicyId'");
            }
            if ((!args || args.recoverySourceProtectionContainerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoverySourceProtectionContainerName'");
            }
            if ((!args || args.recoveryTargetProtectionContainerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryTargetProtectionContainerId'");
            }
            if ((!args || args.recoveryVaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryVaultName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["automaticUpdate"] = args ? args.automaticUpdate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recoveryFabricName"] = args ? args.recoveryFabricName : undefined;
            resourceInputs["recoveryReplicationPolicyId"] = args ? args.recoveryReplicationPolicyId : undefined;
            resourceInputs["recoverySourceProtectionContainerName"] = args ? args.recoverySourceProtectionContainerName : undefined;
            resourceInputs["recoveryTargetProtectionContainerId"] = args ? args.recoveryTargetProtectionContainerId : undefined;
            resourceInputs["recoveryVaultName"] = args ? args.recoveryVaultName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SiteRecoveryProtectionContainerMapping.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SiteRecoveryProtectionContainerMapping resources.
 */
export interface SiteRecoveryProtectionContainerMappingState {
    automaticUpdate?: pulumi.Input<inputs.SiteRecoveryProtectionContainerMappingAutomaticUpdate>;
    name?: pulumi.Input<string>;
    recoveryFabricName?: pulumi.Input<string>;
    recoveryReplicationPolicyId?: pulumi.Input<string>;
    recoverySourceProtectionContainerName?: pulumi.Input<string>;
    recoveryTargetProtectionContainerId?: pulumi.Input<string>;
    recoveryVaultName?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SiteRecoveryProtectionContainerMappingTimeouts>;
}

/**
 * The set of arguments for constructing a SiteRecoveryProtectionContainerMapping resource.
 */
export interface SiteRecoveryProtectionContainerMappingArgs {
    automaticUpdate?: pulumi.Input<inputs.SiteRecoveryProtectionContainerMappingAutomaticUpdate>;
    name?: pulumi.Input<string>;
    recoveryFabricName: pulumi.Input<string>;
    recoveryReplicationPolicyId: pulumi.Input<string>;
    recoverySourceProtectionContainerName: pulumi.Input<string>;
    recoveryTargetProtectionContainerId: pulumi.Input<string>;
    recoveryVaultName: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SiteRecoveryProtectionContainerMappingTimeouts>;
}
