// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SpringCloudGatewayRouteConfig extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudGatewayRouteConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudGatewayRouteConfigState, opts?: pulumi.CustomResourceOptions): SpringCloudGatewayRouteConfig {
        return new SpringCloudGatewayRouteConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig';

    /**
     * Returns true if the given object is an instance of SpringCloudGatewayRouteConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudGatewayRouteConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudGatewayRouteConfig.__pulumiType;
    }

    public readonly filters!: pulumi.Output<string[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly openApi!: pulumi.Output<outputs.SpringCloudGatewayRouteConfigOpenApi | undefined>;
    public readonly predicates!: pulumi.Output<string[] | undefined>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly routes!: pulumi.Output<outputs.SpringCloudGatewayRouteConfigRoute[] | undefined>;
    public readonly springCloudAppId!: pulumi.Output<string | undefined>;
    public readonly springCloudGatewayId!: pulumi.Output<string>;
    public readonly ssoValidationEnabled!: pulumi.Output<boolean | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.SpringCloudGatewayRouteConfigTimeouts | undefined>;

    /**
     * Create a SpringCloudGatewayRouteConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudGatewayRouteConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudGatewayRouteConfigArgs | SpringCloudGatewayRouteConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudGatewayRouteConfigState | undefined;
            resourceInputs["filters"] = state ? state.filters : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["openApi"] = state ? state.openApi : undefined;
            resourceInputs["predicates"] = state ? state.predicates : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["springCloudAppId"] = state ? state.springCloudAppId : undefined;
            resourceInputs["springCloudGatewayId"] = state ? state.springCloudGatewayId : undefined;
            resourceInputs["ssoValidationEnabled"] = state ? state.ssoValidationEnabled : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as SpringCloudGatewayRouteConfigArgs | undefined;
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.springCloudGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudGatewayId'");
            }
            resourceInputs["filters"] = args ? args.filters : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openApi"] = args ? args.openApi : undefined;
            resourceInputs["predicates"] = args ? args.predicates : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["springCloudAppId"] = args ? args.springCloudAppId : undefined;
            resourceInputs["springCloudGatewayId"] = args ? args.springCloudGatewayId : undefined;
            resourceInputs["ssoValidationEnabled"] = args ? args.ssoValidationEnabled : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudGatewayRouteConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudGatewayRouteConfig resources.
 */
export interface SpringCloudGatewayRouteConfigState {
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    openApi?: pulumi.Input<inputs.SpringCloudGatewayRouteConfigOpenApi>;
    predicates?: pulumi.Input<pulumi.Input<string>[]>;
    protocol?: pulumi.Input<string>;
    routes?: pulumi.Input<pulumi.Input<inputs.SpringCloudGatewayRouteConfigRoute>[]>;
    springCloudAppId?: pulumi.Input<string>;
    springCloudGatewayId?: pulumi.Input<string>;
    ssoValidationEnabled?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.SpringCloudGatewayRouteConfigTimeouts>;
}

/**
 * The set of arguments for constructing a SpringCloudGatewayRouteConfig resource.
 */
export interface SpringCloudGatewayRouteConfigArgs {
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    openApi?: pulumi.Input<inputs.SpringCloudGatewayRouteConfigOpenApi>;
    predicates?: pulumi.Input<pulumi.Input<string>[]>;
    protocol: pulumi.Input<string>;
    routes?: pulumi.Input<pulumi.Input<inputs.SpringCloudGatewayRouteConfigRoute>[]>;
    springCloudAppId?: pulumi.Input<string>;
    springCloudGatewayId: pulumi.Input<string>;
    ssoValidationEnabled?: pulumi.Input<boolean>;
    timeouts?: pulumi.Input<inputs.SpringCloudGatewayRouteConfigTimeouts>;
}
