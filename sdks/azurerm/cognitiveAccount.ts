// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CognitiveAccount extends pulumi.CustomResource {
    /**
     * Get an existing CognitiveAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CognitiveAccountState, opts?: pulumi.CustomResourceOptions): CognitiveAccount {
        return new CognitiveAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/cognitiveAccount:CognitiveAccount';

    /**
     * Returns true if the given object is an instance of CognitiveAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CognitiveAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CognitiveAccount.__pulumiType;
    }

    public readonly customQuestionAnsweringSearchServiceId!: pulumi.Output<string | undefined>;
    public readonly customQuestionAnsweringSearchServiceKey!: pulumi.Output<string | undefined>;
    public readonly customSubdomainName!: pulumi.Output<string | undefined>;
    public readonly customerManagedKey!: pulumi.Output<outputs.CognitiveAccountCustomerManagedKey | undefined>;
    public readonly dynamicThrottlingEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    public readonly fqdns!: pulumi.Output<string[] | undefined>;
    public readonly identity!: pulumi.Output<outputs.CognitiveAccountIdentity | undefined>;
    public readonly kind!: pulumi.Output<string>;
    public readonly localAuthEnabled!: pulumi.Output<boolean | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly metricsAdvisorAadClientId!: pulumi.Output<string | undefined>;
    public readonly metricsAdvisorAadTenantId!: pulumi.Output<string | undefined>;
    public readonly metricsAdvisorSuperUserName!: pulumi.Output<string | undefined>;
    public readonly metricsAdvisorWebsiteName!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkAcls!: pulumi.Output<outputs.CognitiveAccountNetworkAcls | undefined>;
    public readonly outboundNetworkAccessRestricted!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly primaryAccessKey!: pulumi.Output<string>;
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    public readonly qnaRuntimeEndpoint!: pulumi.Output<string | undefined>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public /*out*/ readonly secondaryAccessKey!: pulumi.Output<string>;
    public readonly skuName!: pulumi.Output<string>;
    public readonly storages!: pulumi.Output<outputs.CognitiveAccountStorage[] | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.CognitiveAccountTimeouts | undefined>;

    /**
     * Create a CognitiveAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CognitiveAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CognitiveAccountArgs | CognitiveAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CognitiveAccountState | undefined;
            resourceInputs["customQuestionAnsweringSearchServiceId"] = state ? state.customQuestionAnsweringSearchServiceId : undefined;
            resourceInputs["customQuestionAnsweringSearchServiceKey"] = state ? state.customQuestionAnsweringSearchServiceKey : undefined;
            resourceInputs["customSubdomainName"] = state ? state.customSubdomainName : undefined;
            resourceInputs["customerManagedKey"] = state ? state.customerManagedKey : undefined;
            resourceInputs["dynamicThrottlingEnabled"] = state ? state.dynamicThrottlingEnabled : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["fqdns"] = state ? state.fqdns : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["localAuthEnabled"] = state ? state.localAuthEnabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["metricsAdvisorAadClientId"] = state ? state.metricsAdvisorAadClientId : undefined;
            resourceInputs["metricsAdvisorAadTenantId"] = state ? state.metricsAdvisorAadTenantId : undefined;
            resourceInputs["metricsAdvisorSuperUserName"] = state ? state.metricsAdvisorSuperUserName : undefined;
            resourceInputs["metricsAdvisorWebsiteName"] = state ? state.metricsAdvisorWebsiteName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkAcls"] = state ? state.networkAcls : undefined;
            resourceInputs["outboundNetworkAccessRestricted"] = state ? state.outboundNetworkAccessRestricted : undefined;
            resourceInputs["primaryAccessKey"] = state ? state.primaryAccessKey : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["qnaRuntimeEndpoint"] = state ? state.qnaRuntimeEndpoint : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["secondaryAccessKey"] = state ? state.secondaryAccessKey : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["storages"] = state ? state.storages : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CognitiveAccountArgs | undefined;
            if ((!args || args.kind === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kind'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.skuName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            resourceInputs["customQuestionAnsweringSearchServiceId"] = args ? args.customQuestionAnsweringSearchServiceId : undefined;
            resourceInputs["customQuestionAnsweringSearchServiceKey"] = args?.customQuestionAnsweringSearchServiceKey ? pulumi.secret(args.customQuestionAnsweringSearchServiceKey) : undefined;
            resourceInputs["customSubdomainName"] = args ? args.customSubdomainName : undefined;
            resourceInputs["customerManagedKey"] = args ? args.customerManagedKey : undefined;
            resourceInputs["dynamicThrottlingEnabled"] = args ? args.dynamicThrottlingEnabled : undefined;
            resourceInputs["fqdns"] = args ? args.fqdns : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["localAuthEnabled"] = args ? args.localAuthEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["metricsAdvisorAadClientId"] = args ? args.metricsAdvisorAadClientId : undefined;
            resourceInputs["metricsAdvisorAadTenantId"] = args ? args.metricsAdvisorAadTenantId : undefined;
            resourceInputs["metricsAdvisorSuperUserName"] = args ? args.metricsAdvisorSuperUserName : undefined;
            resourceInputs["metricsAdvisorWebsiteName"] = args ? args.metricsAdvisorWebsiteName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkAcls"] = args ? args.networkAcls : undefined;
            resourceInputs["outboundNetworkAccessRestricted"] = args ? args.outboundNetworkAccessRestricted : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["qnaRuntimeEndpoint"] = args ? args.qnaRuntimeEndpoint : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["storages"] = args ? args.storages : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["primaryAccessKey"] = undefined /*out*/;
            resourceInputs["secondaryAccessKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["customQuestionAnsweringSearchServiceKey", "primaryAccessKey", "secondaryAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CognitiveAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CognitiveAccount resources.
 */
export interface CognitiveAccountState {
    customQuestionAnsweringSearchServiceId?: pulumi.Input<string>;
    customQuestionAnsweringSearchServiceKey?: pulumi.Input<string>;
    customSubdomainName?: pulumi.Input<string>;
    customerManagedKey?: pulumi.Input<inputs.CognitiveAccountCustomerManagedKey>;
    dynamicThrottlingEnabled?: pulumi.Input<boolean>;
    endpoint?: pulumi.Input<string>;
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    identity?: pulumi.Input<inputs.CognitiveAccountIdentity>;
    kind?: pulumi.Input<string>;
    localAuthEnabled?: pulumi.Input<boolean>;
    location?: pulumi.Input<string>;
    metricsAdvisorAadClientId?: pulumi.Input<string>;
    metricsAdvisorAadTenantId?: pulumi.Input<string>;
    metricsAdvisorSuperUserName?: pulumi.Input<string>;
    metricsAdvisorWebsiteName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkAcls?: pulumi.Input<inputs.CognitiveAccountNetworkAcls>;
    outboundNetworkAccessRestricted?: pulumi.Input<boolean>;
    primaryAccessKey?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    qnaRuntimeEndpoint?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    secondaryAccessKey?: pulumi.Input<string>;
    skuName?: pulumi.Input<string>;
    storages?: pulumi.Input<pulumi.Input<inputs.CognitiveAccountStorage>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CognitiveAccountTimeouts>;
}

/**
 * The set of arguments for constructing a CognitiveAccount resource.
 */
export interface CognitiveAccountArgs {
    customQuestionAnsweringSearchServiceId?: pulumi.Input<string>;
    customQuestionAnsweringSearchServiceKey?: pulumi.Input<string>;
    customSubdomainName?: pulumi.Input<string>;
    customerManagedKey?: pulumi.Input<inputs.CognitiveAccountCustomerManagedKey>;
    dynamicThrottlingEnabled?: pulumi.Input<boolean>;
    fqdns?: pulumi.Input<pulumi.Input<string>[]>;
    identity?: pulumi.Input<inputs.CognitiveAccountIdentity>;
    kind: pulumi.Input<string>;
    localAuthEnabled?: pulumi.Input<boolean>;
    location: pulumi.Input<string>;
    metricsAdvisorAadClientId?: pulumi.Input<string>;
    metricsAdvisorAadTenantId?: pulumi.Input<string>;
    metricsAdvisorSuperUserName?: pulumi.Input<string>;
    metricsAdvisorWebsiteName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkAcls?: pulumi.Input<inputs.CognitiveAccountNetworkAcls>;
    outboundNetworkAccessRestricted?: pulumi.Input<boolean>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    qnaRuntimeEndpoint?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    skuName: pulumi.Input<string>;
    storages?: pulumi.Input<pulumi.Input<inputs.CognitiveAccountStorage>[]>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    timeouts?: pulumi.Input<inputs.CognitiveAccountTimeouts>;
}
