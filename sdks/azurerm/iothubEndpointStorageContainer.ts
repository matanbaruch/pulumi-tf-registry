// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IothubEndpointStorageContainer extends pulumi.CustomResource {
    /**
     * Get an existing IothubEndpointStorageContainer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IothubEndpointStorageContainerState, opts?: pulumi.CustomResourceOptions): IothubEndpointStorageContainer {
        return new IothubEndpointStorageContainer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:index/iothubEndpointStorageContainer:IothubEndpointStorageContainer';

    /**
     * Returns true if the given object is an instance of IothubEndpointStorageContainer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IothubEndpointStorageContainer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IothubEndpointStorageContainer.__pulumiType;
    }

    public readonly authenticationType!: pulumi.Output<string | undefined>;
    public readonly batchFrequencyInSeconds!: pulumi.Output<number | undefined>;
    public readonly connectionString!: pulumi.Output<string | undefined>;
    public readonly containerName!: pulumi.Output<string>;
    public readonly encoding!: pulumi.Output<string | undefined>;
    public readonly endpointUri!: pulumi.Output<string | undefined>;
    public readonly fileNameFormat!: pulumi.Output<string | undefined>;
    public readonly identityId!: pulumi.Output<string | undefined>;
    public readonly iothubId!: pulumi.Output<string>;
    public readonly maxChunkSizeInBytes!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly resourceGroupName!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.IothubEndpointStorageContainerTimeouts | undefined>;

    /**
     * Create a IothubEndpointStorageContainer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IothubEndpointStorageContainerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IothubEndpointStorageContainerArgs | IothubEndpointStorageContainerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IothubEndpointStorageContainerState | undefined;
            resourceInputs["authenticationType"] = state ? state.authenticationType : undefined;
            resourceInputs["batchFrequencyInSeconds"] = state ? state.batchFrequencyInSeconds : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["containerName"] = state ? state.containerName : undefined;
            resourceInputs["encoding"] = state ? state.encoding : undefined;
            resourceInputs["endpointUri"] = state ? state.endpointUri : undefined;
            resourceInputs["fileNameFormat"] = state ? state.fileNameFormat : undefined;
            resourceInputs["identityId"] = state ? state.identityId : undefined;
            resourceInputs["iothubId"] = state ? state.iothubId : undefined;
            resourceInputs["maxChunkSizeInBytes"] = state ? state.maxChunkSizeInBytes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as IothubEndpointStorageContainerArgs | undefined;
            if ((!args || args.containerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerName'");
            }
            if ((!args || args.iothubId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iothubId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["authenticationType"] = args ? args.authenticationType : undefined;
            resourceInputs["batchFrequencyInSeconds"] = args ? args.batchFrequencyInSeconds : undefined;
            resourceInputs["connectionString"] = args?.connectionString ? pulumi.secret(args.connectionString) : undefined;
            resourceInputs["containerName"] = args ? args.containerName : undefined;
            resourceInputs["encoding"] = args ? args.encoding : undefined;
            resourceInputs["endpointUri"] = args ? args.endpointUri : undefined;
            resourceInputs["fileNameFormat"] = args ? args.fileNameFormat : undefined;
            resourceInputs["identityId"] = args ? args.identityId : undefined;
            resourceInputs["iothubId"] = args ? args.iothubId : undefined;
            resourceInputs["maxChunkSizeInBytes"] = args ? args.maxChunkSizeInBytes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["connectionString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IothubEndpointStorageContainer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IothubEndpointStorageContainer resources.
 */
export interface IothubEndpointStorageContainerState {
    authenticationType?: pulumi.Input<string>;
    batchFrequencyInSeconds?: pulumi.Input<number>;
    connectionString?: pulumi.Input<string>;
    containerName?: pulumi.Input<string>;
    encoding?: pulumi.Input<string>;
    endpointUri?: pulumi.Input<string>;
    fileNameFormat?: pulumi.Input<string>;
    identityId?: pulumi.Input<string>;
    iothubId?: pulumi.Input<string>;
    maxChunkSizeInBytes?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    resourceGroupName?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IothubEndpointStorageContainerTimeouts>;
}

/**
 * The set of arguments for constructing a IothubEndpointStorageContainer resource.
 */
export interface IothubEndpointStorageContainerArgs {
    authenticationType?: pulumi.Input<string>;
    batchFrequencyInSeconds?: pulumi.Input<number>;
    connectionString?: pulumi.Input<string>;
    containerName: pulumi.Input<string>;
    encoding?: pulumi.Input<string>;
    endpointUri?: pulumi.Input<string>;
    fileNameFormat?: pulumi.Input<string>;
    identityId?: pulumi.Input<string>;
    iothubId: pulumi.Input<string>;
    maxChunkSizeInBytes?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.IothubEndpointStorageContainerTimeouts>;
}
