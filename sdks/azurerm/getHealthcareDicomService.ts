// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHealthcareDicomService(args: GetHealthcareDicomServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetHealthcareDicomServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getHealthcareDicomService:getHealthcareDicomService", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHealthcareDicomService.
 */
export interface GetHealthcareDicomServiceArgs {
    id?: string;
    name: string;
    timeouts?: inputs.GetHealthcareDicomServiceTimeouts;
    workspaceId: string;
}

/**
 * A collection of values returned by getHealthcareDicomService.
 */
export interface GetHealthcareDicomServiceResult {
    readonly authentications: outputs.GetHealthcareDicomServiceAuthentication[];
    readonly id: string;
    readonly identities: outputs.GetHealthcareDicomServiceIdentity[];
    readonly location: string;
    readonly name: string;
    readonly privateEndpoints: outputs.GetHealthcareDicomServicePrivateEndpoint[];
    readonly serviceUrl: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetHealthcareDicomServiceTimeouts;
    readonly workspaceId: string;
}
export function getHealthcareDicomServiceOutput(args: GetHealthcareDicomServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHealthcareDicomServiceResult> {
    return pulumi.output(args).apply((a: any) => getHealthcareDicomService(a, opts))
}

/**
 * A collection of arguments for invoking getHealthcareDicomService.
 */
export interface GetHealthcareDicomServiceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetHealthcareDicomServiceTimeoutsArgs>;
    workspaceId: pulumi.Input<string>;
}
