// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDashboardGrafana(args: GetDashboardGrafanaArgs, opts?: pulumi.InvokeOptions): Promise<GetDashboardGrafanaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getDashboardGrafana:getDashboardGrafana", {
        "id": args.id,
        "identity": args.identity,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDashboardGrafana.
 */
export interface GetDashboardGrafanaArgs {
    id?: string;
    identity?: inputs.GetDashboardGrafanaIdentity;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetDashboardGrafanaTimeouts;
}

/**
 * A collection of values returned by getDashboardGrafana.
 */
export interface GetDashboardGrafanaResult {
    readonly apiKeyEnabled: boolean;
    readonly autoGeneratedDomainNameLabelScope: string;
    readonly azureMonitorWorkspaceIntegrations: outputs.GetDashboardGrafanaAzureMonitorWorkspaceIntegration[];
    readonly deterministicOutboundIpEnabled: boolean;
    readonly endpoint: string;
    readonly grafanaMajorVersion: string;
    readonly grafanaVersion: string;
    readonly id: string;
    readonly identity?: outputs.GetDashboardGrafanaIdentity;
    readonly location: string;
    readonly name: string;
    readonly outboundIps: string[];
    readonly publicNetworkAccessEnabled: boolean;
    readonly resourceGroupName: string;
    readonly sku: string;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetDashboardGrafanaTimeouts;
    readonly zoneRedundancyEnabled: boolean;
}
export function getDashboardGrafanaOutput(args: GetDashboardGrafanaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDashboardGrafanaResult> {
    return pulumi.output(args).apply((a: any) => getDashboardGrafana(a, opts))
}

/**
 * A collection of arguments for invoking getDashboardGrafana.
 */
export interface GetDashboardGrafanaOutputArgs {
    id?: pulumi.Input<string>;
    identity?: pulumi.Input<inputs.GetDashboardGrafanaIdentityArgs>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetDashboardGrafanaTimeoutsArgs>;
}
