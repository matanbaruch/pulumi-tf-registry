// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorActionGroup(args: GetMonitorActionGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorActionGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getMonitorActionGroup:getMonitorActionGroup", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorActionGroup.
 */
export interface GetMonitorActionGroupArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetMonitorActionGroupTimeouts;
}

/**
 * A collection of values returned by getMonitorActionGroup.
 */
export interface GetMonitorActionGroupResult {
    readonly armRoleReceivers: outputs.GetMonitorActionGroupArmRoleReceiver[];
    readonly automationRunbookReceivers: outputs.GetMonitorActionGroupAutomationRunbookReceiver[];
    readonly azureAppPushReceivers: outputs.GetMonitorActionGroupAzureAppPushReceiver[];
    readonly azureFunctionReceivers: outputs.GetMonitorActionGroupAzureFunctionReceiver[];
    readonly emailReceivers: outputs.GetMonitorActionGroupEmailReceiver[];
    readonly enabled: boolean;
    readonly eventHubReceivers: outputs.GetMonitorActionGroupEventHubReceiver[];
    readonly id: string;
    readonly itsmReceivers: outputs.GetMonitorActionGroupItsmReceiver[];
    readonly logicAppReceivers: outputs.GetMonitorActionGroupLogicAppReceiver[];
    readonly name: string;
    readonly resourceGroupName: string;
    readonly shortName: string;
    readonly smsReceivers: outputs.GetMonitorActionGroupSmsReceiver[];
    readonly timeouts?: outputs.GetMonitorActionGroupTimeouts;
    readonly voiceReceivers: outputs.GetMonitorActionGroupVoiceReceiver[];
    readonly webhookReceivers: outputs.GetMonitorActionGroupWebhookReceiver[];
}
export function getMonitorActionGroupOutput(args: GetMonitorActionGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorActionGroupResult> {
    return pulumi.output(args).apply((a: any) => getMonitorActionGroup(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorActionGroup.
 */
export interface GetMonitorActionGroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetMonitorActionGroupTimeoutsArgs>;
}
