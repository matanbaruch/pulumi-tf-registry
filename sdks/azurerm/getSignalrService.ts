// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSignalrService(args: GetSignalrServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetSignalrServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azurerm:index/getSignalrService:getSignalrService", {
        "id": args.id,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSignalrService.
 */
export interface GetSignalrServiceArgs {
    id?: string;
    name: string;
    resourceGroupName: string;
    timeouts?: inputs.GetSignalrServiceTimeouts;
}

/**
 * A collection of values returned by getSignalrService.
 */
export interface GetSignalrServiceResult {
    readonly aadAuthEnabled: boolean;
    readonly hostname: string;
    readonly id: string;
    readonly ipAddress: string;
    readonly localAuthEnabled: boolean;
    readonly location: string;
    readonly name: string;
    readonly primaryAccessKey: string;
    readonly primaryConnectionString: string;
    readonly publicNetworkAccessEnabled: boolean;
    readonly publicPort: number;
    readonly resourceGroupName: string;
    readonly secondaryAccessKey: string;
    readonly secondaryConnectionString: string;
    readonly serverPort: number;
    readonly serverlessConnectionTimeoutInSeconds: number;
    readonly tags: {[key: string]: string};
    readonly timeouts?: outputs.GetSignalrServiceTimeouts;
    readonly tlsClientCertEnabled: boolean;
}
export function getSignalrServiceOutput(args: GetSignalrServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSignalrServiceResult> {
    return pulumi.output(args).apply((a: any) => getSignalrService(a, opts))
}

/**
 * A collection of arguments for invoking getSignalrService.
 */
export interface GetSignalrServiceOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resourceGroupName: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSignalrServiceTimeoutsArgs>;
}
