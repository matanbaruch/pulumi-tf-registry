// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAccountMember(args: GetAccountMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountMemberResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getAccountMember:getAccountMember", {
        "accountId": args.accountId,
        "email": args.email,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccountMember.
 */
export interface GetAccountMemberArgs {
    accountId?: string;
    email: string;
}

/**
 * A collection of values returned by getAccountMember.
 */
export interface GetAccountMemberResult {
    readonly accountId?: string;
    readonly accountRoleId: string;
    readonly accountRoleName: string;
    readonly actorId: string;
    readonly email: string;
    readonly firstName: string;
    readonly handle: string;
    readonly id: string;
    readonly lastName: string;
    readonly userId: string;
}
export function getAccountMemberOutput(args: GetAccountMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountMemberResult> {
    return pulumi.output(args).apply((a: any) => getAccountMember(a, opts))
}

/**
 * A collection of arguments for invoking getAccountMember.
 */
export interface GetAccountMemberOutputArgs {
    accountId?: pulumi.Input<string>;
    email: pulumi.Input<string>;
}
