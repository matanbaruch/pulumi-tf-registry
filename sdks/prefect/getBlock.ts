// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBlock(args?: GetBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getBlock:getBlock", {
        "accountId": args.accountId,
        "id": args.id,
        "name": args.name,
        "typeSlug": args.typeSlug,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlock.
 */
export interface GetBlockArgs {
    accountId?: string;
    id?: string;
    name?: string;
    typeSlug?: string;
    workspaceId?: string;
}

/**
 * A collection of values returned by getBlock.
 */
export interface GetBlockResult {
    readonly accountId?: string;
    readonly created: string;
    readonly data: string;
    readonly id: string;
    readonly name: string;
    readonly typeSlug: string;
    readonly updated: string;
    readonly workspaceId?: string;
}
export function getBlockOutput(args?: GetBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockResult> {
    return pulumi.output(args).apply((a: any) => getBlock(a, opts))
}

/**
 * A collection of arguments for invoking getBlock.
 */
export interface GetBlockOutputArgs {
    accountId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    typeSlug?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}
