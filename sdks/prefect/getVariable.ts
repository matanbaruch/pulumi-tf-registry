// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVariable(args?: GetVariableArgs, opts?: pulumi.InvokeOptions): Promise<GetVariableResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getVariable:getVariable", {
        "accountId": args.accountId,
        "id": args.id,
        "name": args.name,
        "workspaceId": args.workspaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVariable.
 */
export interface GetVariableArgs {
    accountId?: string;
    id?: string;
    name?: string;
    workspaceId?: string;
}

/**
 * A collection of values returned by getVariable.
 */
export interface GetVariableResult {
    readonly accountId?: string;
    readonly created: string;
    readonly id: string;
    readonly name: string;
    readonly tags: string[];
    readonly updated: string;
    readonly value: string;
    readonly workspaceId?: string;
}
export function getVariableOutput(args?: GetVariableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVariableResult> {
    return pulumi.output(args).apply((a: any) => getVariable(a, opts))
}

/**
 * A collection of arguments for invoking getVariable.
 */
export interface GetVariableOutputArgs {
    accountId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    workspaceId?: pulumi.Input<string>;
}
