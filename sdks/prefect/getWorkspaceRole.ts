// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getWorkspaceRole(args: GetWorkspaceRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getWorkspaceRole:getWorkspaceRole", {
        "accountId": args.accountId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkspaceRole.
 */
export interface GetWorkspaceRoleArgs {
    accountId?: string;
    name: string;
}

/**
 * A collection of values returned by getWorkspaceRole.
 */
export interface GetWorkspaceRoleResult {
    readonly accountId?: string;
    readonly created: string;
    readonly description: string;
    readonly id: string;
    readonly inheritedRoleId: string;
    readonly name: string;
    readonly scopes: string[];
    readonly updated: string;
}
export function getWorkspaceRoleOutput(args: GetWorkspaceRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceRoleResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceRole(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceRole.
 */
export interface GetWorkspaceRoleOutputArgs {
    accountId?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
