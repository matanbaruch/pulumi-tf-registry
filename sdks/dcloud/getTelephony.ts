// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTelephony(args: GetTelephonyArgs, opts?: pulumi.InvokeOptions): Promise<GetTelephonyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dcloud:index/getTelephony:getTelephony", {
        "id": args.id,
        "topologyUid": args.topologyUid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTelephony.
 */
export interface GetTelephonyArgs {
    id?: string;
    topologyUid: string;
}

/**
 * A collection of values returned by getTelephony.
 */
export interface GetTelephonyResult {
    readonly id: string;
    readonly telephonyItems: outputs.GetTelephonyTelephonyItem[];
    readonly topologyUid: string;
}
export function getTelephonyOutput(args: GetTelephonyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTelephonyResult> {
    return pulumi.output(args).apply((a: any) => getTelephony(a, opts))
}

/**
 * A collection of arguments for invoking getTelephony.
 */
export interface GetTelephonyOutputArgs {
    id?: pulumi.Input<string>;
    topologyUid: pulumi.Input<string>;
}
