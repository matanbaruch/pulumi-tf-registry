// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getExternalDns(args: GetExternalDnsArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalDnsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dcloud:index/getExternalDns:getExternalDns", {
        "id": args.id,
        "topologyUid": args.topologyUid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getExternalDns.
 */
export interface GetExternalDnsArgs {
    id?: string;
    topologyUid: string;
}

/**
 * A collection of values returned by getExternalDns.
 */
export interface GetExternalDnsResult {
    readonly externalDns: outputs.GetExternalDnsExternalDn[];
    readonly id: string;
    readonly topologyUid: string;
}
export function getExternalDnsOutput(args: GetExternalDnsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExternalDnsResult> {
    return pulumi.output(args).apply((a: any) => getExternalDns(a, opts))
}

/**
 * A collection of arguments for invoking getExternalDns.
 */
export interface GetExternalDnsOutputArgs {
    id?: pulumi.Input<string>;
    topologyUid: pulumi.Input<string>;
}
