// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVms(args: GetVmsArgs, opts?: pulumi.InvokeOptions): Promise<GetVmsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dcloud:index/getVms:getVms", {
        "id": args.id,
        "topologyUid": args.topologyUid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVms.
 */
export interface GetVmsArgs {
    id?: string;
    topologyUid: string;
}

/**
 * A collection of values returned by getVms.
 */
export interface GetVmsResult {
    readonly id: string;
    readonly topologyUid: string;
    readonly vms: outputs.GetVmsVm[];
}
export function getVmsOutput(args: GetVmsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmsResult> {
    return pulumi.output(args).apply((a: any) => getVms(a, opts))
}

/**
 * A collection of arguments for invoking getVms.
 */
export interface GetVmsOutputArgs {
    id?: pulumi.Input<string>;
    topologyUid: pulumi.Input<string>;
}
