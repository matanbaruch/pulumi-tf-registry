// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ExternalDnsSrvRecord {
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    service: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
}

export interface HwNetworkInterface {
    networkInterfaceId: pulumi.Input<string>;
    networkUid: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
}

export interface HwStartOrderStartPosition {
    delaySeconds: pulumi.Input<number>;
    hwName?: pulumi.Input<string>;
    hwUid: pulumi.Input<string>;
    position: pulumi.Input<number>;
}

export interface ScenarioOption {
    displayName: pulumi.Input<string>;
    internalName: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
}

export interface VmAdvancedSettings {
    allDisksNonPersistent: pulumi.Input<boolean>;
    biosUuid: pulumi.Input<string>;
    nameInHypervisor: pulumi.Input<string>;
    notStarted: pulumi.Input<boolean>;
}

export interface VmGuestAutomation {
    command: pulumi.Input<string>;
    delaySeconds: pulumi.Input<number>;
}

export interface VmNetworkInterface {
    ipAddress?: pulumi.Input<string>;
    macAddress?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    networkUid: pulumi.Input<string>;
    rdpAutoLogin?: pulumi.Input<boolean>;
    rdpEnabled?: pulumi.Input<boolean>;
    sshEnabled?: pulumi.Input<boolean>;
    type: pulumi.Input<string>;
    uid?: pulumi.Input<string>;
}

export interface VmRemoteAccess {
    displayCredentials?: pulumi.Input<inputs.VmRemoteAccessDisplayCredentials>;
    internalUrls?: pulumi.Input<pulumi.Input<inputs.VmRemoteAccessInternalUrl>[]>;
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vmConsoleEnabled: pulumi.Input<boolean>;
}

export interface VmRemoteAccessDisplayCredentials {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface VmRemoteAccessInternalUrl {
    description: pulumi.Input<string>;
    location: pulumi.Input<string>;
}

export interface VmStartOrderStartPosition {
    delaySeconds: pulumi.Input<number>;
    position: pulumi.Input<number>;
    vmName?: pulumi.Input<string>;
    vmUid: pulumi.Input<string>;
}

export interface VmStopOrderStopPosition {
    position: pulumi.Input<number>;
    vmName?: pulumi.Input<string>;
    vmUid: pulumi.Input<string>;
}
