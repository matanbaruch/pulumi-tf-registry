// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMailServers(args: GetMailServersArgs, opts?: pulumi.InvokeOptions): Promise<GetMailServersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dcloud:index/getMailServers:getMailServers", {
        "id": args.id,
        "topologyUid": args.topologyUid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMailServers.
 */
export interface GetMailServersArgs {
    id?: string;
    topologyUid: string;
}

/**
 * A collection of values returned by getMailServers.
 */
export interface GetMailServersResult {
    readonly id: string;
    readonly mailServers: outputs.GetMailServersMailServer[];
    readonly topologyUid: string;
}
export function getMailServersOutput(args: GetMailServersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMailServersResult> {
    return pulumi.output(args).apply((a: any) => getMailServers(a, opts))
}

/**
 * A collection of arguments for invoking getMailServers.
 */
export interface GetMailServersOutputArgs {
    id?: pulumi.Input<string>;
    topologyUid: pulumi.Input<string>;
}
