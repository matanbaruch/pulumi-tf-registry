// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVlan(args?: GetVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetVlanResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metal:index/getVlan:getVlan", {
        "facility": args.facility,
        "id": args.id,
        "metro": args.metro,
        "projectId": args.projectId,
        "vlanId": args.vlanId,
        "vxlan": args.vxlan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanArgs {
    facility?: string;
    id?: string;
    metro?: string;
    projectId?: string;
    vlanId?: string;
    vxlan?: number;
}

/**
 * A collection of values returned by getVlan.
 */
export interface GetVlanResult {
    readonly assignedDevicesIds: string[];
    readonly description: string;
    readonly facility: string;
    readonly id: string;
    readonly metro: string;
    readonly projectId: string;
    readonly vlanId: string;
    readonly vxlan: number;
}
export function getVlanOutput(args?: GetVlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVlanResult> {
    return pulumi.output(args).apply((a: any) => getVlan(a, opts))
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanOutputArgs {
    facility?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    metro?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    vlanId?: pulumi.Input<string>;
    vxlan?: pulumi.Input<number>;
}
