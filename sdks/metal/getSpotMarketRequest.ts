// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSpotMarketRequest(args: GetSpotMarketRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetSpotMarketRequestResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metal:index/getSpotMarketRequest:getSpotMarketRequest", {
        "id": args.id,
        "requestId": args.requestId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpotMarketRequest.
 */
export interface GetSpotMarketRequestArgs {
    id?: string;
    requestId: string;
    timeouts?: inputs.GetSpotMarketRequestTimeouts;
}

/**
 * A collection of values returned by getSpotMarketRequest.
 */
export interface GetSpotMarketRequestResult {
    readonly deviceIds: string[];
    readonly devicesMax: number;
    readonly devicesMin: number;
    readonly endAt: string;
    readonly facilities: string[];
    readonly id: string;
    readonly maxBidPrice: number;
    readonly metro: string;
    readonly plan: string;
    readonly projectId: string;
    readonly requestId: string;
    readonly timeouts?: outputs.GetSpotMarketRequestTimeouts;
}
export function getSpotMarketRequestOutput(args: GetSpotMarketRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpotMarketRequestResult> {
    return pulumi.output(args).apply((a: any) => getSpotMarketRequest(a, opts))
}

/**
 * A collection of arguments for invoking getSpotMarketRequest.
 */
export interface GetSpotMarketRequestOutputArgs {
    id?: pulumi.Input<string>;
    requestId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetSpotMarketRequestTimeoutsArgs>;
}
