// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFacility(args: GetFacilityArgs, opts?: pulumi.InvokeOptions): Promise<GetFacilityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metal:index/getFacility:getFacility", {
        "capacities": args.capacities,
        "code": args.code,
        "featuresRequireds": args.featuresRequireds,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFacility.
 */
export interface GetFacilityArgs {
    capacities?: inputs.GetFacilityCapacity[];
    code: string;
    featuresRequireds?: string[];
    id?: string;
}

/**
 * A collection of values returned by getFacility.
 */
export interface GetFacilityResult {
    readonly capacities?: outputs.GetFacilityCapacity[];
    readonly code: string;
    readonly features: string[];
    readonly featuresRequireds?: string[];
    readonly id: string;
    readonly metro: string;
    readonly name: string;
}
export function getFacilityOutput(args: GetFacilityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFacilityResult> {
    return pulumi.output(args).apply((a: any) => getFacility(a, opts))
}

/**
 * A collection of arguments for invoking getFacility.
 */
export interface GetFacilityOutputArgs {
    capacities?: pulumi.Input<pulumi.Input<inputs.GetFacilityCapacityArgs>[]>;
    code: pulumi.Input<string>;
    featuresRequireds?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
}
