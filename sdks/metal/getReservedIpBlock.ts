// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getReservedIpBlock(args?: GetReservedIpBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetReservedIpBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metal:index/getReservedIpBlock:getReservedIpBlock", {
        "id": args.id,
        "ipAddress": args.ipAddress,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReservedIpBlock.
 */
export interface GetReservedIpBlockArgs {
    id?: string;
    ipAddress?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getReservedIpBlock.
 */
export interface GetReservedIpBlockResult {
    readonly address: string;
    readonly addressFamily: number;
    readonly cidr: number;
    readonly cidrNotation: string;
    readonly facility: string;
    readonly gateway: string;
    readonly global: boolean;
    readonly id: string;
    readonly ipAddress?: string;
    readonly manageable: boolean;
    readonly management: boolean;
    readonly metro: string;
    readonly netmask: string;
    readonly network: string;
    readonly projectId: string;
    readonly public: boolean;
    readonly quantity: number;
    readonly type: string;
    readonly vrfId: number;
}
export function getReservedIpBlockOutput(args?: GetReservedIpBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReservedIpBlockResult> {
    return pulumi.output(args).apply((a: any) => getReservedIpBlock(a, opts))
}

/**
 * A collection of arguments for invoking getReservedIpBlock.
 */
export interface GetReservedIpBlockOutputArgs {
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
