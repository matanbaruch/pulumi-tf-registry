// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ConnectionPort {
    id: pulumi.Input<string>;
    linkStatus: pulumi.Input<string>;
    name: pulumi.Input<string>;
    role: pulumi.Input<string>;
    speed: pulumi.Input<number>;
    status: pulumi.Input<string>;
    virtualCircuitIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ConnectionServiceToken {
    expiresAt: pulumi.Input<string>;
    id: pulumi.Input<string>;
    maxAllowedSpeed: pulumi.Input<string>;
    role: pulumi.Input<string>;
    state: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DeviceIpAddress {
    /**
     * CIDR suffix for IP block assigned to this device
     */
    cidr?: pulumi.Input<number>;
    /**
     * IDs of reservations to pick the blocks from
     */
    reservationIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * one of public_ipv4,private_ipv4,public_ipv6
     */
    type: pulumi.Input<string>;
}

export interface DeviceNetwork {
    address: pulumi.Input<string>;
    cidr: pulumi.Input<number>;
    family: pulumi.Input<number>;
    gateway: pulumi.Input<string>;
    public: pulumi.Input<boolean>;
}

export interface DevicePort {
    bonded: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    mac: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DeviceReinstall {
    /**
     * Whether the OS disk should be filled with `00h` bytes before reinstall
     */
    deprovisionFast?: pulumi.Input<boolean>;
    /**
     * Whether the device should be reinstalled instead of destroyed
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Whether the non-OS disks should be kept or wiped during reinstall
     */
    preserveData?: pulumi.Input<boolean>;
}

export interface DeviceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetFacilityCapacity {
    /**
     * Plan which has to be available in selected location
     */
    plan: string;
    quantity?: number;
}

export interface GetFacilityCapacityArgs {
    /**
     * Plan which has to be available in selected location
     */
    plan: pulumi.Input<string>;
    quantity?: pulumi.Input<number>;
}

export interface GetMetroCapacity {
    /**
     * Plan which has to be available in selected location
     */
    plan: string;
    quantity?: number;
}

export interface GetMetroCapacityArgs {
    /**
     * Plan which has to be available in selected location
     */
    plan: pulumi.Input<string>;
    quantity?: pulumi.Input<number>;
}

export interface GetPlansFilter {
    /**
     * If is set to true, the values are joined with an AND, and the requests returns only the results that match all specified values
     */
    all?: boolean;
    /**
     * The attribute used to filter. Filter attributes are case-sensitive
     */
    attribute: string;
    /**
     * The type of comparison to apply. One of: in (default), re, substring, less_than, less_than_or_equal, greater_than, greater_than_or_equal
     */
    matchBy?: string;
    /**
     * The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR by default, and the request returns all results that match any of the specified values
     */
    values: string[];
}

export interface GetPlansFilterArgs {
    /**
     * If is set to true, the values are joined with an AND, and the requests returns only the results that match all specified values
     */
    all?: pulumi.Input<boolean>;
    /**
     * The attribute used to filter. Filter attributes are case-sensitive
     */
    attribute: pulumi.Input<string>;
    /**
     * The type of comparison to apply. One of: in (default), re, substring, less_than, less_than_or_equal, greater_than, greater_than_or_equal
     */
    matchBy?: pulumi.Input<string>;
    /**
     * The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR by default, and the request returns all results that match any of the specified values
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPlansSort {
    /**
     * The attribute used to sort the results. Sort attributes are case-sensitive
     */
    attribute: string;
    /**
     * Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
     */
    direction?: string;
}

export interface GetPlansSortArgs {
    /**
     * The attribute used to sort the results. Sort attributes are case-sensitive
     */
    attribute: pulumi.Input<string>;
    /**
     * Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
     */
    direction?: pulumi.Input<string>;
}

export interface GetSpotMarketRequestTimeouts {
    create?: string;
    default?: string;
    delete?: string;
    update?: string;
}

export interface GetSpotMarketRequestTimeoutsArgs {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface OrganizationAddress {
    /**
     * Postal address
     */
    address: pulumi.Input<string>;
    /**
     * City name
     */
    city: pulumi.Input<string>;
    /**
     * Two letter country code (ISO 3166-1 alpha-2), e.g. US
     */
    country: pulumi.Input<string>;
    /**
     * State name
     */
    state?: pulumi.Input<string>;
    /**
     * Zip Code
     */
    zipCode: pulumi.Input<string>;
}

export interface PortTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProjectBgpConfig {
    /**
     * Autonomous System Number for local BGP deployment
     */
    asn: pulumi.Input<number>;
    /**
     * "local" or "global", the local is likely to be usable immediately, the global will need to be review by Equinix Metal engineers
     */
    deploymentType: pulumi.Input<string>;
    /**
     * The maximum number of route filters allowed per server
     */
    maxPrefix?: pulumi.Input<number>;
    /**
     * Password for BGP session in plaintext (not a checksum)
     */
    md5?: pulumi.Input<string>;
    /**
     * Status of BGP configuration in the project
     */
    status?: pulumi.Input<string>;
}

export interface ReservedIpBlockTimeouts {
    create?: pulumi.Input<string>;
}

export interface SpotMarketRequestInstanceParameters {
    alwaysPxe?: pulumi.Input<boolean>;
    billingCycle: pulumi.Input<string>;
    customdata?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    features?: pulumi.Input<pulumi.Input<string>[]>;
    hostname: pulumi.Input<string>;
    ipxeScriptUrl?: pulumi.Input<string>;
    locked?: pulumi.Input<boolean>;
    operatingSystem: pulumi.Input<string>;
    plan: pulumi.Input<string>;
    projectSshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    termintationTime?: pulumi.Input<string>;
    userSshKeys?: pulumi.Input<pulumi.Input<string>[]>;
    userdata?: pulumi.Input<string>;
}

export interface SpotMarketRequestTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface VolumeAttachment {
    href: pulumi.Input<string>;
}

export interface VolumeSnapshotPolicy {
    snapshotCount: pulumi.Input<number>;
    snapshotFrequency: pulumi.Input<string>;
}

export interface VrfTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}
