// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMetro(args: GetMetroArgs, opts?: pulumi.InvokeOptions): Promise<GetMetroResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metal:index/getMetro:getMetro", {
        "capacities": args.capacities,
        "code": args.code,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMetro.
 */
export interface GetMetroArgs {
    capacities?: inputs.GetMetroCapacity[];
    code: string;
}

/**
 * A collection of values returned by getMetro.
 */
export interface GetMetroResult {
    readonly capacities?: outputs.GetMetroCapacity[];
    readonly code: string;
    readonly country: string;
    readonly id: string;
    readonly name: string;
}
export function getMetroOutput(args: GetMetroOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetroResult> {
    return pulumi.output(args).apply((a: any) => getMetro(a, opts))
}

/**
 * A collection of arguments for invoking getMetro.
 */
export interface GetMetroOutputArgs {
    capacities?: pulumi.Input<pulumi.Input<inputs.GetMetroCapacityArgs>[]>;
    code: pulumi.Input<string>;
}
