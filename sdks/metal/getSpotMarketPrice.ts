// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSpotMarketPrice(args: GetSpotMarketPriceArgs, opts?: pulumi.InvokeOptions): Promise<GetSpotMarketPriceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("metal:index/getSpotMarketPrice:getSpotMarketPrice", {
        "facility": args.facility,
        "id": args.id,
        "metro": args.metro,
        "plan": args.plan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpotMarketPrice.
 */
export interface GetSpotMarketPriceArgs {
    facility?: string;
    id?: string;
    metro?: string;
    plan: string;
}

/**
 * A collection of values returned by getSpotMarketPrice.
 */
export interface GetSpotMarketPriceResult {
    readonly facility?: string;
    readonly id: string;
    readonly metro?: string;
    readonly plan: string;
    readonly price: number;
}
export function getSpotMarketPriceOutput(args: GetSpotMarketPriceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpotMarketPriceResult> {
    return pulumi.output(args).apply((a: any) => getSpotMarketPrice(a, opts))
}

/**
 * A collection of arguments for invoking getSpotMarketPrice.
 */
export interface GetSpotMarketPriceOutputArgs {
    facility?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    metro?: pulumi.Input<string>;
    plan: pulumi.Input<string>;
}
