// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNamespace(args: GetNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kestra:index/getNamespace:getNamespace", {
        "id": args.id,
        "namespaceId": args.namespaceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNamespace.
 */
export interface GetNamespaceArgs {
    id?: string;
    namespaceId: string;
}

/**
 * A collection of values returned by getNamespace.
 */
export interface GetNamespaceResult {
    readonly description: string;
    readonly id: string;
    readonly namespaceId: string;
    readonly pluginDefaults: string;
    readonly tenantId: string;
    readonly variables: string;
}
export function getNamespaceOutput(args: GetNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamespaceResult> {
    return pulumi.output(args).apply((a: any) => getNamespace(a, opts))
}

/**
 * A collection of arguments for invoking getNamespace.
 */
export interface GetNamespaceOutputArgs {
    id?: pulumi.Input<string>;
    namespaceId: pulumi.Input<string>;
}
