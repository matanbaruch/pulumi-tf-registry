// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKv(args: GetKvArgs, opts?: pulumi.InvokeOptions): Promise<GetKvResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kestra:index/getKv:getKv", {
        "id": args.id,
        "key": args.key,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKv.
 */
export interface GetKvArgs {
    id?: string;
    key: string;
    namespace: string;
}

/**
 * A collection of values returned by getKv.
 */
export interface GetKvResult {
    readonly id: string;
    readonly key: string;
    readonly namespace: string;
    readonly tenantId: string;
    readonly type: string;
    readonly value: string;
}
export function getKvOutput(args: GetKvOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKvResult> {
    return pulumi.output(args).apply((a: any) => getKv(a, opts))
}

/**
 * A collection of arguments for invoking getKv.
 */
export interface GetKvOutputArgs {
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
