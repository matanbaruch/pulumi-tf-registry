// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBinding(args: GetBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetBindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kestra:index/getBinding:getBinding", {
        "bindingId": args.bindingId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBinding.
 */
export interface GetBindingArgs {
    bindingId: string;
    id?: string;
}

/**
 * A collection of values returned by getBinding.
 */
export interface GetBindingResult {
    readonly bindingId: string;
    readonly externalId: string;
    readonly id: string;
    readonly namespace: string;
    readonly roleId: string;
    readonly tenantId: string;
    readonly type: string;
}
export function getBindingOutput(args: GetBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBindingResult> {
    return pulumi.output(args).apply((a: any) => getBinding(a, opts))
}

/**
 * A collection of arguments for invoking getBinding.
 */
export interface GetBindingOutputArgs {
    bindingId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
