// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CamPolicy extends pulumi.CustomResource {
    /**
     * Get an existing CamPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CamPolicyState, opts?: pulumi.CustomResourceOptions): CamPolicy {
        return new CamPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/camPolicy:CamPolicy';

    /**
     * Returns true if the given object is an instance of CamPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CamPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CamPolicy.__pulumiType;
    }

    /**
     * Create time of the CAM policy.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the CAM policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly document!: pulumi.Output<string>;
    /**
     * Name of CAM policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Type of the policy strategy. Valid values: `1`, `2`. `1` means customer strategy and `2` means preset strategy.
     */
    public /*out*/ readonly type!: pulumi.Output<number>;
    /**
     * The last update time of the CAM policy.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a CamPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CamPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CamPolicyArgs | CamPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CamPolicyState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["document"] = state ? state.document : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as CamPolicyArgs | undefined;
            if ((!args || args.document === undefined) && !opts.urn) {
                throw new Error("Missing required property 'document'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["document"] = args ? args.document : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CamPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CamPolicy resources.
 */
export interface CamPolicyState {
    /**
     * Create time of the CAM policy.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the CAM policy.
     */
    description?: pulumi.Input<string>;
    document?: pulumi.Input<string>;
    /**
     * Name of CAM policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Type of the policy strategy. Valid values: `1`, `2`. `1` means customer strategy and `2` means preset strategy.
     */
    type?: pulumi.Input<number>;
    /**
     * The last update time of the CAM policy.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CamPolicy resource.
 */
export interface CamPolicyArgs {
    /**
     * Description of the CAM policy.
     */
    description?: pulumi.Input<string>;
    document: pulumi.Input<string>;
    /**
     * Name of CAM policy.
     */
    name?: pulumi.Input<string>;
}
