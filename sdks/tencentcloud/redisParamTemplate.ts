// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class RedisParamTemplate extends pulumi.CustomResource {
    /**
     * Get an existing RedisParamTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RedisParamTemplateState, opts?: pulumi.CustomResourceOptions): RedisParamTemplate {
        return new RedisParamTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/redisParamTemplate:RedisParamTemplate';

    /**
     * Returns true if the given object is an instance of RedisParamTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RedisParamTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RedisParamTemplate.__pulumiType;
    }

    /**
     * Parameter template description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Parameter template name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Readonly full parameter list details.
     */
    public /*out*/ readonly paramDetails!: pulumi.Output<outputs.RedisParamTemplateParamDetail[]>;
    /**
     * Specify override parameter list, NOTE: Do not remove override params once set, removing will not take effects to current
     * value.
     */
    public readonly paramsOverrides!: pulumi.Output<outputs.RedisParamTemplateParamsOverride[] | undefined>;
    /**
     * Specify product type. Valid values: 1 (Redis 2.8 Memory Edition in cluster architecture), 2 (Redis 2.8 Memory Edition in
     * standard architecture), 3 (CKV 3.2 Memory Edition in standard architecture), 4 (CKV 3.2 Memory Edition in cluster
     * architecture), 5 (Redis 2.8 Memory Edition in standalone architecture), 6 (Redis 4.0 Memory Edition in standard
     * architecture), 7 (Redis 4.0 Memory Edition in cluster architecture), 8 (Redis 5.0 Memory Edition in standard
     * architecture), 9 (Redis 5.0 Memory Edition in cluster architecture). If `template_id` is specified, this parameter can
     * be left blank; otherwise, it is required.
     */
    public readonly productType!: pulumi.Output<number | undefined>;
    /**
     * Specify which existed template import from.
     */
    public readonly templateId!: pulumi.Output<string | undefined>;

    /**
     * Create a RedisParamTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RedisParamTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RedisParamTemplateArgs | RedisParamTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RedisParamTemplateState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paramDetails"] = state ? state.paramDetails : undefined;
            resourceInputs["paramsOverrides"] = state ? state.paramsOverrides : undefined;
            resourceInputs["productType"] = state ? state.productType : undefined;
            resourceInputs["templateId"] = state ? state.templateId : undefined;
        } else {
            const args = argsOrState as RedisParamTemplateArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paramsOverrides"] = args ? args.paramsOverrides : undefined;
            resourceInputs["productType"] = args ? args.productType : undefined;
            resourceInputs["templateId"] = args ? args.templateId : undefined;
            resourceInputs["paramDetails"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RedisParamTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RedisParamTemplate resources.
 */
export interface RedisParamTemplateState {
    /**
     * Parameter template description.
     */
    description?: pulumi.Input<string>;
    /**
     * Parameter template name.
     */
    name?: pulumi.Input<string>;
    /**
     * Readonly full parameter list details.
     */
    paramDetails?: pulumi.Input<pulumi.Input<inputs.RedisParamTemplateParamDetail>[]>;
    /**
     * Specify override parameter list, NOTE: Do not remove override params once set, removing will not take effects to current
     * value.
     */
    paramsOverrides?: pulumi.Input<pulumi.Input<inputs.RedisParamTemplateParamsOverride>[]>;
    /**
     * Specify product type. Valid values: 1 (Redis 2.8 Memory Edition in cluster architecture), 2 (Redis 2.8 Memory Edition in
     * standard architecture), 3 (CKV 3.2 Memory Edition in standard architecture), 4 (CKV 3.2 Memory Edition in cluster
     * architecture), 5 (Redis 2.8 Memory Edition in standalone architecture), 6 (Redis 4.0 Memory Edition in standard
     * architecture), 7 (Redis 4.0 Memory Edition in cluster architecture), 8 (Redis 5.0 Memory Edition in standard
     * architecture), 9 (Redis 5.0 Memory Edition in cluster architecture). If `template_id` is specified, this parameter can
     * be left blank; otherwise, it is required.
     */
    productType?: pulumi.Input<number>;
    /**
     * Specify which existed template import from.
     */
    templateId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RedisParamTemplate resource.
 */
export interface RedisParamTemplateArgs {
    /**
     * Parameter template description.
     */
    description?: pulumi.Input<string>;
    /**
     * Parameter template name.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify override parameter list, NOTE: Do not remove override params once set, removing will not take effects to current
     * value.
     */
    paramsOverrides?: pulumi.Input<pulumi.Input<inputs.RedisParamTemplateParamsOverride>[]>;
    /**
     * Specify product type. Valid values: 1 (Redis 2.8 Memory Edition in cluster architecture), 2 (Redis 2.8 Memory Edition in
     * standard architecture), 3 (CKV 3.2 Memory Edition in standard architecture), 4 (CKV 3.2 Memory Edition in cluster
     * architecture), 5 (Redis 2.8 Memory Edition in standalone architecture), 6 (Redis 4.0 Memory Edition in standard
     * architecture), 7 (Redis 4.0 Memory Edition in cluster architecture), 8 (Redis 5.0 Memory Edition in standard
     * architecture), 9 (Redis 5.0 Memory Edition in cluster architecture). If `template_id` is specified, this parameter can
     * be left blank; otherwise, it is required.
     */
    productType?: pulumi.Input<number>;
    /**
     * Specify which existed template import from.
     */
    templateId?: pulumi.Input<string>;
}
