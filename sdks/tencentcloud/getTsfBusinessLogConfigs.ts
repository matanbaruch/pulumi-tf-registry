// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTsfBusinessLogConfigs(args?: GetTsfBusinessLogConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetTsfBusinessLogConfigsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTsfBusinessLogConfigs:getTsfBusinessLogConfigs", {
        "configIdLists": args.configIdLists,
        "disableProgramAuthCheck": args.disableProgramAuthCheck,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
        "searchWord": args.searchWord,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTsfBusinessLogConfigs.
 */
export interface GetTsfBusinessLogConfigsArgs {
    configIdLists?: string[];
    disableProgramAuthCheck?: boolean;
    id?: string;
    resultOutputFile?: string;
    searchWord?: string;
}

/**
 * A collection of values returned by getTsfBusinessLogConfigs.
 */
export interface GetTsfBusinessLogConfigsResult {
    readonly configIdLists?: string[];
    readonly disableProgramAuthCheck?: boolean;
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly results: outputs.GetTsfBusinessLogConfigsResult[];
    readonly searchWord?: string;
}
export function getTsfBusinessLogConfigsOutput(args?: GetTsfBusinessLogConfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTsfBusinessLogConfigsResult> {
    return pulumi.output(args).apply((a: any) => getTsfBusinessLogConfigs(a, opts))
}

/**
 * A collection of arguments for invoking getTsfBusinessLogConfigs.
 */
export interface GetTsfBusinessLogConfigsOutputArgs {
    configIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    disableProgramAuthCheck?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    searchWord?: pulumi.Input<string>;
}
