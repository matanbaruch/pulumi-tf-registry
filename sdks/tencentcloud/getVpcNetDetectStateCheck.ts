// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcNetDetectStateCheck(args: GetVpcNetDetectStateCheckArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcNetDetectStateCheckResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getVpcNetDetectStateCheck:getVpcNetDetectStateCheck", {
        "detectDestinationIps": args.detectDestinationIps,
        "id": args.id,
        "netDetectId": args.netDetectId,
        "netDetectName": args.netDetectName,
        "nextHopDestination": args.nextHopDestination,
        "nextHopType": args.nextHopType,
        "resultOutputFile": args.resultOutputFile,
        "subnetId": args.subnetId,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcNetDetectStateCheck.
 */
export interface GetVpcNetDetectStateCheckArgs {
    detectDestinationIps: string[];
    id?: string;
    netDetectId?: string;
    netDetectName?: string;
    nextHopDestination: string;
    nextHopType: string;
    resultOutputFile?: string;
    subnetId?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getVpcNetDetectStateCheck.
 */
export interface GetVpcNetDetectStateCheckResult {
    readonly detectDestinationIps: string[];
    readonly id: string;
    readonly netDetectId?: string;
    readonly netDetectIpStateSets: outputs.GetVpcNetDetectStateCheckNetDetectIpStateSet[];
    readonly netDetectName?: string;
    readonly nextHopDestination: string;
    readonly nextHopType: string;
    readonly resultOutputFile?: string;
    readonly subnetId?: string;
    readonly vpcId?: string;
}
export function getVpcNetDetectStateCheckOutput(args: GetVpcNetDetectStateCheckOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcNetDetectStateCheckResult> {
    return pulumi.output(args).apply((a: any) => getVpcNetDetectStateCheck(a, opts))
}

/**
 * A collection of arguments for invoking getVpcNetDetectStateCheck.
 */
export interface GetVpcNetDetectStateCheckOutputArgs {
    detectDestinationIps: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    netDetectId?: pulumi.Input<string>;
    netDetectName?: pulumi.Input<string>;
    nextHopDestination: pulumi.Input<string>;
    nextHopType: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
