// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcRouteConflicts(args: GetVpcRouteConflictsArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcRouteConflictsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getVpcRouteConflicts:getVpcRouteConflicts", {
        "destinationCidrBlocks": args.destinationCidrBlocks,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
        "routeTableId": args.routeTableId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcRouteConflicts.
 */
export interface GetVpcRouteConflictsArgs {
    destinationCidrBlocks: string[];
    id?: string;
    resultOutputFile?: string;
    routeTableId: string;
}

/**
 * A collection of values returned by getVpcRouteConflicts.
 */
export interface GetVpcRouteConflictsResult {
    readonly destinationCidrBlocks: string[];
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly routeConflictSets: outputs.GetVpcRouteConflictsRouteConflictSet[];
    readonly routeTableId: string;
}
export function getVpcRouteConflictsOutput(args: GetVpcRouteConflictsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcRouteConflictsResult> {
    return pulumi.output(args).apply((a: any) => getVpcRouteConflicts(a, opts))
}

/**
 * A collection of arguments for invoking getVpcRouteConflicts.
 */
export interface GetVpcRouteConflictsOutputArgs {
    destinationCidrBlocks: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    routeTableId: pulumi.Input<string>;
}
