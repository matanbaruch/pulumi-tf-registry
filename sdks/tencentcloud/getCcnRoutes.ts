// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCcnRoutes(args: GetCcnRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetCcnRoutesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCcnRoutes:getCcnRoutes", {
        "ccnId": args.ccnId,
        "filters": args.filters,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCcnRoutes.
 */
export interface GetCcnRoutesArgs {
    ccnId: string;
    filters?: inputs.GetCcnRoutesFilter[];
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCcnRoutes.
 */
export interface GetCcnRoutesResult {
    readonly ccnId: string;
    readonly filters?: outputs.GetCcnRoutesFilter[];
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly routeLists: outputs.GetCcnRoutesRouteList[];
}
export function getCcnRoutesOutput(args: GetCcnRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCcnRoutesResult> {
    return pulumi.output(args).apply((a: any) => getCcnRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getCcnRoutes.
 */
export interface GetCcnRoutesOutputArgs {
    ccnId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetCcnRoutesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
