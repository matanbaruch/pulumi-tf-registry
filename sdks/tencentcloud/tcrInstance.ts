// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TcrInstance extends pulumi.CustomResource {
    /**
     * Get an existing TcrInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TcrInstanceState, opts?: pulumi.CustomResourceOptions): TcrInstance {
        return new TcrInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/tcrInstance:TcrInstance';

    /**
     * Returns true if the given object is an instance of TcrInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TcrInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TcrInstance.__pulumiType;
    }

    /**
     * Indicate to delete the COS bucket which is auto-created with the instance or not.
     */
    public readonly deleteBucket!: pulumi.Output<boolean | undefined>;
    /**
     * Instance expiration time (prepaid).
     */
    public /*out*/ readonly expiredAt!: pulumi.Output<string>;
    /**
     * Length of time to purchase an instance (in month). Must set when registry_charge_type is prepaid.
     */
    public readonly instanceChargeTypePrepaidPeriod!: pulumi.Output<number | undefined>;
    /**
     * Auto renewal flag. 1: manual renewal, 2: automatic renewal, 3: no renewal and no notification. Must set when
     * registry_charge_type is prepaid.
     */
    public readonly instanceChargeTypePrepaidRenewFlag!: pulumi.Output<number | undefined>;
    /**
     * TCR types. Valid values are: `standard`, `basic`, `premium`.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Internal address for access of the TCR instance.
     */
    public /*out*/ readonly internalEndPoint!: pulumi.Output<string>;
    /**
     * Name of the TCR instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Control public network access.
     */
    public readonly openPublicOperation!: pulumi.Output<boolean | undefined>;
    /**
     * Public address for access of the TCR instance.
     */
    public /*out*/ readonly publicDomain!: pulumi.Output<string>;
    /**
     * Status of the TCR instance public network access.
     */
    public /*out*/ readonly publicStatus!: pulumi.Output<string>;
    /**
     * Charge type of instance. 1: postpaid; 2: prepaid. Default is postpaid.
     */
    public readonly registryChargeType!: pulumi.Output<number | undefined>;
    /**
     * Specify List of instance Replications, premium only. The available [source region
     * list](https://www.tencentcloud.com/document/api/1051/41101) is here.
     */
    public readonly replications!: pulumi.Output<outputs.TcrInstanceReplication[] | undefined>;
    /**
     * Public network access allowlist policies of the TCR instance. Only available when `open_public_operation` is `true`.
     */
    public readonly securityPolicies!: pulumi.Output<outputs.TcrInstanceSecurityPolicy[] | undefined>;
    /**
     * Status of the TCR instance.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The available tags within this TCR instance.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a TcrInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TcrInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TcrInstanceArgs | TcrInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TcrInstanceState | undefined;
            resourceInputs["deleteBucket"] = state ? state.deleteBucket : undefined;
            resourceInputs["expiredAt"] = state ? state.expiredAt : undefined;
            resourceInputs["instanceChargeTypePrepaidPeriod"] = state ? state.instanceChargeTypePrepaidPeriod : undefined;
            resourceInputs["instanceChargeTypePrepaidRenewFlag"] = state ? state.instanceChargeTypePrepaidRenewFlag : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["internalEndPoint"] = state ? state.internalEndPoint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["openPublicOperation"] = state ? state.openPublicOperation : undefined;
            resourceInputs["publicDomain"] = state ? state.publicDomain : undefined;
            resourceInputs["publicStatus"] = state ? state.publicStatus : undefined;
            resourceInputs["registryChargeType"] = state ? state.registryChargeType : undefined;
            resourceInputs["replications"] = state ? state.replications : undefined;
            resourceInputs["securityPolicies"] = state ? state.securityPolicies : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as TcrInstanceArgs | undefined;
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            resourceInputs["deleteBucket"] = args ? args.deleteBucket : undefined;
            resourceInputs["instanceChargeTypePrepaidPeriod"] = args ? args.instanceChargeTypePrepaidPeriod : undefined;
            resourceInputs["instanceChargeTypePrepaidRenewFlag"] = args ? args.instanceChargeTypePrepaidRenewFlag : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openPublicOperation"] = args ? args.openPublicOperation : undefined;
            resourceInputs["registryChargeType"] = args ? args.registryChargeType : undefined;
            resourceInputs["replications"] = args ? args.replications : undefined;
            resourceInputs["securityPolicies"] = args ? args.securityPolicies : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["expiredAt"] = undefined /*out*/;
            resourceInputs["internalEndPoint"] = undefined /*out*/;
            resourceInputs["publicDomain"] = undefined /*out*/;
            resourceInputs["publicStatus"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TcrInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TcrInstance resources.
 */
export interface TcrInstanceState {
    /**
     * Indicate to delete the COS bucket which is auto-created with the instance or not.
     */
    deleteBucket?: pulumi.Input<boolean>;
    /**
     * Instance expiration time (prepaid).
     */
    expiredAt?: pulumi.Input<string>;
    /**
     * Length of time to purchase an instance (in month). Must set when registry_charge_type is prepaid.
     */
    instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
    /**
     * Auto renewal flag. 1: manual renewal, 2: automatic renewal, 3: no renewal and no notification. Must set when
     * registry_charge_type is prepaid.
     */
    instanceChargeTypePrepaidRenewFlag?: pulumi.Input<number>;
    /**
     * TCR types. Valid values are: `standard`, `basic`, `premium`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Internal address for access of the TCR instance.
     */
    internalEndPoint?: pulumi.Input<string>;
    /**
     * Name of the TCR instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Control public network access.
     */
    openPublicOperation?: pulumi.Input<boolean>;
    /**
     * Public address for access of the TCR instance.
     */
    publicDomain?: pulumi.Input<string>;
    /**
     * Status of the TCR instance public network access.
     */
    publicStatus?: pulumi.Input<string>;
    /**
     * Charge type of instance. 1: postpaid; 2: prepaid. Default is postpaid.
     */
    registryChargeType?: pulumi.Input<number>;
    /**
     * Specify List of instance Replications, premium only. The available [source region
     * list](https://www.tencentcloud.com/document/api/1051/41101) is here.
     */
    replications?: pulumi.Input<pulumi.Input<inputs.TcrInstanceReplication>[]>;
    /**
     * Public network access allowlist policies of the TCR instance. Only available when `open_public_operation` is `true`.
     */
    securityPolicies?: pulumi.Input<pulumi.Input<inputs.TcrInstanceSecurityPolicy>[]>;
    /**
     * Status of the TCR instance.
     */
    status?: pulumi.Input<string>;
    /**
     * The available tags within this TCR instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a TcrInstance resource.
 */
export interface TcrInstanceArgs {
    /**
     * Indicate to delete the COS bucket which is auto-created with the instance or not.
     */
    deleteBucket?: pulumi.Input<boolean>;
    /**
     * Length of time to purchase an instance (in month). Must set when registry_charge_type is prepaid.
     */
    instanceChargeTypePrepaidPeriod?: pulumi.Input<number>;
    /**
     * Auto renewal flag. 1: manual renewal, 2: automatic renewal, 3: no renewal and no notification. Must set when
     * registry_charge_type is prepaid.
     */
    instanceChargeTypePrepaidRenewFlag?: pulumi.Input<number>;
    /**
     * TCR types. Valid values are: `standard`, `basic`, `premium`.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Name of the TCR instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Control public network access.
     */
    openPublicOperation?: pulumi.Input<boolean>;
    /**
     * Charge type of instance. 1: postpaid; 2: prepaid. Default is postpaid.
     */
    registryChargeType?: pulumi.Input<number>;
    /**
     * Specify List of instance Replications, premium only. The available [source region
     * list](https://www.tencentcloud.com/document/api/1051/41101) is here.
     */
    replications?: pulumi.Input<pulumi.Input<inputs.TcrInstanceReplication>[]>;
    /**
     * Public network access allowlist policies of the TCR instance. Only available when `open_public_operation` is `true`.
     */
    securityPolicies?: pulumi.Input<pulumi.Input<inputs.TcrInstanceSecurityPolicy>[]>;
    /**
     * The available tags within this TCR instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
