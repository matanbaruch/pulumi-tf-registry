// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorAlarmPolicy(args: GetMonitorAlarmPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorAlarmPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMonitorAlarmPolicy:getMonitorAlarmPolicy", {
        "dimensions": args.dimensions,
        "enables": args.enables,
        "field": args.field,
        "id": args.id,
        "instanceGroupId": args.instanceGroupId,
        "module": args.module,
        "monitorTypes": args.monitorTypes,
        "namespaces": args.namespaces,
        "needCorrespondence": args.needCorrespondence,
        "notBindAll": args.notBindAll,
        "notBindingNoticeRule": args.notBindingNoticeRule,
        "notInstanceGroup": args.notInstanceGroup,
        "noticeIds": args.noticeIds,
        "oneClickPolicyTypes": args.oneClickPolicyTypes,
        "order": args.order,
        "policyName": args.policyName,
        "policyTypes": args.policyTypes,
        "projectIds": args.projectIds,
        "promInsId": args.promInsId,
        "receiverGroups": args.receiverGroups,
        "receiverOnCallFormIds": args.receiverOnCallFormIds,
        "receiverUids": args.receiverUids,
        "resultOutputFile": args.resultOutputFile,
        "ruleTypes": args.ruleTypes,
        "triggerTasks": args.triggerTasks,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorAlarmPolicy.
 */
export interface GetMonitorAlarmPolicyArgs {
    dimensions?: string;
    enables?: number[];
    field?: string;
    id?: string;
    instanceGroupId?: number;
    module: string;
    monitorTypes?: string[];
    namespaces?: string[];
    needCorrespondence?: number;
    notBindAll?: number;
    notBindingNoticeRule?: number;
    notInstanceGroup?: number;
    noticeIds?: string[];
    oneClickPolicyTypes?: string[];
    order?: string;
    policyName?: string;
    policyTypes?: string[];
    projectIds?: number[];
    promInsId?: string;
    receiverGroups?: number[];
    receiverOnCallFormIds?: string[];
    receiverUids?: number[];
    resultOutputFile?: string;
    ruleTypes?: string[];
    triggerTasks?: inputs.GetMonitorAlarmPolicyTriggerTask[];
}

/**
 * A collection of values returned by getMonitorAlarmPolicy.
 */
export interface GetMonitorAlarmPolicyResult {
    readonly dimensions?: string;
    readonly enables?: number[];
    readonly field?: string;
    readonly id: string;
    readonly instanceGroupId?: number;
    readonly module: string;
    readonly monitorTypes?: string[];
    readonly namespaces?: string[];
    readonly needCorrespondence?: number;
    readonly notBindAll?: number;
    readonly notBindingNoticeRule?: number;
    readonly notInstanceGroup?: number;
    readonly noticeIds?: string[];
    readonly oneClickPolicyTypes?: string[];
    readonly order?: string;
    readonly policies: outputs.GetMonitorAlarmPolicyPolicy[];
    readonly policyName?: string;
    readonly policyTypes?: string[];
    readonly projectIds?: number[];
    readonly promInsId?: string;
    readonly receiverGroups?: number[];
    readonly receiverOnCallFormIds?: string[];
    readonly receiverUids?: number[];
    readonly resultOutputFile?: string;
    readonly ruleTypes?: string[];
    readonly triggerTasks?: outputs.GetMonitorAlarmPolicyTriggerTask[];
}
export function getMonitorAlarmPolicyOutput(args: GetMonitorAlarmPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorAlarmPolicyResult> {
    return pulumi.output(args).apply((a: any) => getMonitorAlarmPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorAlarmPolicy.
 */
export interface GetMonitorAlarmPolicyOutputArgs {
    dimensions?: pulumi.Input<string>;
    enables?: pulumi.Input<pulumi.Input<number>[]>;
    field?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceGroupId?: pulumi.Input<number>;
    module: pulumi.Input<string>;
    monitorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    needCorrespondence?: pulumi.Input<number>;
    notBindAll?: pulumi.Input<number>;
    notBindingNoticeRule?: pulumi.Input<number>;
    notInstanceGroup?: pulumi.Input<number>;
    noticeIds?: pulumi.Input<pulumi.Input<string>[]>;
    oneClickPolicyTypes?: pulumi.Input<pulumi.Input<string>[]>;
    order?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    policyTypes?: pulumi.Input<pulumi.Input<string>[]>;
    projectIds?: pulumi.Input<pulumi.Input<number>[]>;
    promInsId?: pulumi.Input<string>;
    receiverGroups?: pulumi.Input<pulumi.Input<number>[]>;
    receiverOnCallFormIds?: pulumi.Input<pulumi.Input<string>[]>;
    receiverUids?: pulumi.Input<pulumi.Input<number>[]>;
    resultOutputFile?: pulumi.Input<string>;
    ruleTypes?: pulumi.Input<pulumi.Input<string>[]>;
    triggerTasks?: pulumi.Input<pulumi.Input<inputs.GetMonitorAlarmPolicyTriggerTaskArgs>[]>;
}
