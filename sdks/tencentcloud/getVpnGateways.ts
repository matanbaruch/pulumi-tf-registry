// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpnGateways(args?: GetVpnGatewaysArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnGatewaysResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getVpnGateways:getVpnGateways", {
        "id": args.id,
        "name": args.name,
        "publicIpAddress": args.publicIpAddress,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpnGateways.
 */
export interface GetVpnGatewaysArgs {
    id?: string;
    name?: string;
    publicIpAddress?: string;
    resultOutputFile?: string;
    tags?: {[key: string]: string};
    vpcId?: string;
    zone?: string;
}

/**
 * A collection of values returned by getVpnGateways.
 */
export interface GetVpnGatewaysResult {
    readonly gatewayLists: outputs.GetVpnGatewaysGatewayList[];
    readonly id?: string;
    readonly name?: string;
    readonly publicIpAddress?: string;
    readonly resultOutputFile?: string;
    readonly tags?: {[key: string]: string};
    readonly vpcId?: string;
    readonly zone?: string;
}
export function getVpnGatewaysOutput(args?: GetVpnGatewaysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpnGatewaysResult> {
    return pulumi.output(args).apply((a: any) => getVpnGateways(a, opts))
}

/**
 * A collection of arguments for invoking getVpnGateways.
 */
export interface GetVpnGatewaysOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    publicIpAddress?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    vpcId?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
