// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCdnDomains(args?: GetCdnDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetCdnDomainsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCdnDomains:getCdnDomains", {
        "domain": args.domain,
        "fullUrlCache": args.fullUrlCache,
        "httpsSwitch": args.httpsSwitch,
        "id": args.id,
        "originPullProtocol": args.originPullProtocol,
        "resultOutputFile": args.resultOutputFile,
        "serviceType": args.serviceType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCdnDomains.
 */
export interface GetCdnDomainsArgs {
    domain?: string;
    fullUrlCache?: boolean;
    httpsSwitch?: string;
    id?: string;
    originPullProtocol?: string;
    resultOutputFile?: string;
    serviceType?: string;
}

/**
 * A collection of values returned by getCdnDomains.
 */
export interface GetCdnDomainsResult {
    readonly domain?: string;
    readonly domainLists: outputs.GetCdnDomainsDomainList[];
    readonly fullUrlCache?: boolean;
    readonly httpsSwitch?: string;
    readonly id: string;
    readonly originPullProtocol?: string;
    readonly resultOutputFile?: string;
    readonly serviceType?: string;
}
export function getCdnDomainsOutput(args?: GetCdnDomainsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCdnDomainsResult> {
    return pulumi.output(args).apply((a: any) => getCdnDomains(a, opts))
}

/**
 * A collection of arguments for invoking getCdnDomains.
 */
export interface GetCdnDomainsOutputArgs {
    domain?: pulumi.Input<string>;
    fullUrlCache?: pulumi.Input<boolean>;
    httpsSwitch?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    originPullProtocol?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    serviceType?: pulumi.Input<string>;
}
