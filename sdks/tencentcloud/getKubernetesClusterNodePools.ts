// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesClusterNodePools(args: GetKubernetesClusterNodePoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesClusterNodePoolsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getKubernetesClusterNodePools:getKubernetesClusterNodePools", {
        "clusterId": args.clusterId,
        "filters": args.filters,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesClusterNodePools.
 */
export interface GetKubernetesClusterNodePoolsArgs {
    clusterId: string;
    filters?: inputs.GetKubernetesClusterNodePoolsFilter[];
    id?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getKubernetesClusterNodePools.
 */
export interface GetKubernetesClusterNodePoolsResult {
    readonly clusterId: string;
    readonly filters?: outputs.GetKubernetesClusterNodePoolsFilter[];
    readonly id: string;
    readonly nodePoolSets: outputs.GetKubernetesClusterNodePoolsNodePoolSet[];
    readonly resultOutputFile?: string;
}
export function getKubernetesClusterNodePoolsOutput(args: GetKubernetesClusterNodePoolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesClusterNodePoolsResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesClusterNodePools(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesClusterNodePools.
 */
export interface GetKubernetesClusterNodePoolsOutputArgs {
    clusterId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetKubernetesClusterNodePoolsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
