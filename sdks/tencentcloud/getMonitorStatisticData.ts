// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMonitorStatisticData(args: GetMonitorStatisticDataArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitorStatisticDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getMonitorStatisticData:getMonitorStatisticData", {
        "conditions": args.conditions,
        "groupBys": args.groupBys,
        "id": args.id,
        "metricNames": args.metricNames,
        "module": args.module,
        "namespace": args.namespace,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMonitorStatisticData.
 */
export interface GetMonitorStatisticDataArgs {
    conditions?: inputs.GetMonitorStatisticDataCondition[];
    groupBys?: string[];
    id?: string;
    metricNames: string[];
    module: string;
    namespace: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMonitorStatisticData.
 */
export interface GetMonitorStatisticDataResult {
    readonly conditions?: outputs.GetMonitorStatisticDataCondition[];
    readonly datas: outputs.GetMonitorStatisticDataData[];
    readonly endTime: string;
    readonly groupBys?: string[];
    readonly id: string;
    readonly metricNames: string[];
    readonly module: string;
    readonly namespace: string;
    readonly period: number;
    readonly resultOutputFile?: string;
    readonly startTime: string;
}
export function getMonitorStatisticDataOutput(args: GetMonitorStatisticDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorStatisticDataResult> {
    return pulumi.output(args).apply((a: any) => getMonitorStatisticData(a, opts))
}

/**
 * A collection of arguments for invoking getMonitorStatisticData.
 */
export interface GetMonitorStatisticDataOutputArgs {
    conditions?: pulumi.Input<pulumi.Input<inputs.GetMonitorStatisticDataConditionArgs>[]>;
    groupBys?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    metricNames: pulumi.Input<pulumi.Input<string>[]>;
    module: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
