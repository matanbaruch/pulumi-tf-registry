// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApiGatewayThrottlingApis(args?: GetApiGatewayThrottlingApisArgs, opts?: pulumi.InvokeOptions): Promise<GetApiGatewayThrottlingApisResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getApiGatewayThrottlingApis:getApiGatewayThrottlingApis", {
        "environmentNames": args.environmentNames,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
        "serviceId": args.serviceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApiGatewayThrottlingApis.
 */
export interface GetApiGatewayThrottlingApisArgs {
    environmentNames?: string[];
    id?: string;
    resultOutputFile?: string;
    serviceId?: string;
}

/**
 * A collection of values returned by getApiGatewayThrottlingApis.
 */
export interface GetApiGatewayThrottlingApisResult {
    readonly environmentNames?: string[];
    readonly id: string;
    readonly lists: outputs.GetApiGatewayThrottlingApisList[];
    readonly resultOutputFile?: string;
    readonly serviceId?: string;
}
export function getApiGatewayThrottlingApisOutput(args?: GetApiGatewayThrottlingApisOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiGatewayThrottlingApisResult> {
    return pulumi.output(args).apply((a: any) => getApiGatewayThrottlingApis(a, opts))
}

/**
 * A collection of arguments for invoking getApiGatewayThrottlingApis.
 */
export interface GetApiGatewayThrottlingApisOutputArgs {
    environmentNames?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    serviceId?: pulumi.Input<string>;
}
