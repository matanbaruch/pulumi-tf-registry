// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTcrWebhookTriggerLogs(args: GetTcrWebhookTriggerLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetTcrWebhookTriggerLogsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTcrWebhookTriggerLogs:getTcrWebhookTriggerLogs", {
        "id": args.id,
        "namespace": args.namespace,
        "registryId": args.registryId,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
        "triggerId": args.triggerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTcrWebhookTriggerLogs.
 */
export interface GetTcrWebhookTriggerLogsArgs {
    id?: string;
    namespace: string;
    registryId: string;
    resultOutputFile?: string;
    tags?: {[key: string]: string};
    triggerId: number;
}

/**
 * A collection of values returned by getTcrWebhookTriggerLogs.
 */
export interface GetTcrWebhookTriggerLogsResult {
    readonly id: string;
    readonly logs: outputs.GetTcrWebhookTriggerLogsLog[];
    readonly namespace: string;
    readonly registryId: string;
    readonly resultOutputFile?: string;
    readonly tags?: {[key: string]: string};
    readonly triggerId: number;
}
export function getTcrWebhookTriggerLogsOutput(args: GetTcrWebhookTriggerLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTcrWebhookTriggerLogsResult> {
    return pulumi.output(args).apply((a: any) => getTcrWebhookTriggerLogs(a, opts))
}

/**
 * A collection of arguments for invoking getTcrWebhookTriggerLogs.
 */
export interface GetTcrWebhookTriggerLogsOutputArgs {
    id?: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
    registryId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    triggerId: pulumi.Input<number>;
}
