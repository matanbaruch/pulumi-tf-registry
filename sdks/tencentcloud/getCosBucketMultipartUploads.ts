// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCosBucketMultipartUploads(args: GetCosBucketMultipartUploadsArgs, opts?: pulumi.InvokeOptions): Promise<GetCosBucketMultipartUploadsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCosBucketMultipartUploads:getCosBucketMultipartUploads", {
        "bucket": args.bucket,
        "delimiter": args.delimiter,
        "encodingType": args.encodingType,
        "id": args.id,
        "prefix": args.prefix,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCosBucketMultipartUploads.
 */
export interface GetCosBucketMultipartUploadsArgs {
    bucket: string;
    delimiter?: string;
    encodingType?: string;
    id?: string;
    prefix?: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getCosBucketMultipartUploads.
 */
export interface GetCosBucketMultipartUploadsResult {
    readonly bucket: string;
    readonly delimiter?: string;
    readonly encodingType?: string;
    readonly id: string;
    readonly prefix?: string;
    readonly resultOutputFile?: string;
    readonly uploads: outputs.GetCosBucketMultipartUploadsUpload[];
}
export function getCosBucketMultipartUploadsOutput(args: GetCosBucketMultipartUploadsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCosBucketMultipartUploadsResult> {
    return pulumi.output(args).apply((a: any) => getCosBucketMultipartUploads(a, opts))
}

/**
 * A collection of arguments for invoking getCosBucketMultipartUploads.
 */
export interface GetCosBucketMultipartUploadsOutputArgs {
    bucket: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    encodingType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
