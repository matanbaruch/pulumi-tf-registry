// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTdmqRocketmqTopic(args: GetTdmqRocketmqTopicArgs, opts?: pulumi.InvokeOptions): Promise<GetTdmqRocketmqTopicResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTdmqRocketmqTopic:getTdmqRocketmqTopic", {
        "clusterId": args.clusterId,
        "filterName": args.filterName,
        "filterTypes": args.filterTypes,
        "id": args.id,
        "namespaceId": args.namespaceId,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTdmqRocketmqTopic.
 */
export interface GetTdmqRocketmqTopicArgs {
    clusterId: string;
    filterName?: string;
    filterTypes?: string[];
    id?: string;
    namespaceId: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getTdmqRocketmqTopic.
 */
export interface GetTdmqRocketmqTopicResult {
    readonly clusterId: string;
    readonly filterName?: string;
    readonly filterTypes?: string[];
    readonly id: string;
    readonly namespaceId: string;
    readonly resultOutputFile?: string;
    readonly topics: outputs.GetTdmqRocketmqTopicTopic[];
}
export function getTdmqRocketmqTopicOutput(args: GetTdmqRocketmqTopicOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTdmqRocketmqTopicResult> {
    return pulumi.output(args).apply((a: any) => getTdmqRocketmqTopic(a, opts))
}

/**
 * A collection of arguments for invoking getTdmqRocketmqTopic.
 */
export interface GetTdmqRocketmqTopicOutputArgs {
    clusterId: pulumi.Input<string>;
    filterName?: pulumi.Input<string>;
    filterTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    namespaceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
