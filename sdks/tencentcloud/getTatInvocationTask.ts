// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTatInvocationTask(args?: GetTatInvocationTaskArgs, opts?: pulumi.InvokeOptions): Promise<GetTatInvocationTaskResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getTatInvocationTask:getTatInvocationTask", {
        "filters": args.filters,
        "hideOutput": args.hideOutput,
        "id": args.id,
        "invocationTaskIds": args.invocationTaskIds,
        "resultOutputFile": args.resultOutputFile,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTatInvocationTask.
 */
export interface GetTatInvocationTaskArgs {
    filters?: inputs.GetTatInvocationTaskFilter[];
    hideOutput?: boolean;
    id?: string;
    invocationTaskIds?: string[];
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getTatInvocationTask.
 */
export interface GetTatInvocationTaskResult {
    readonly filters?: outputs.GetTatInvocationTaskFilter[];
    readonly hideOutput?: boolean;
    readonly id: string;
    readonly invocationTaskIds?: string[];
    readonly invocationTaskSets: outputs.GetTatInvocationTaskInvocationTaskSet[];
    readonly resultOutputFile?: string;
}
export function getTatInvocationTaskOutput(args?: GetTatInvocationTaskOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTatInvocationTaskResult> {
    return pulumi.output(args).apply((a: any) => getTatInvocationTask(a, opts))
}

/**
 * A collection of arguments for invoking getTatInvocationTask.
 */
export interface GetTatInvocationTaskOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetTatInvocationTaskFilterArgs>[]>;
    hideOutput?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    invocationTaskIds?: pulumi.Input<pulumi.Input<string>[]>;
    resultOutputFile?: pulumi.Input<string>;
}
