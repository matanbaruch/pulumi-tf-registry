// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCkafkaGroupOffsets(args: GetCkafkaGroupOffsetsArgs, opts?: pulumi.InvokeOptions): Promise<GetCkafkaGroupOffsetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getCkafkaGroupOffsets:getCkafkaGroupOffsets", {
        "group": args.group,
        "id": args.id,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "searchWord": args.searchWord,
        "topics": args.topics,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCkafkaGroupOffsets.
 */
export interface GetCkafkaGroupOffsetsArgs {
    group: string;
    id?: string;
    instanceId: string;
    resultOutputFile?: string;
    searchWord?: string;
    topics?: string[];
}

/**
 * A collection of values returned by getCkafkaGroupOffsets.
 */
export interface GetCkafkaGroupOffsetsResult {
    readonly group: string;
    readonly id: string;
    readonly instanceId: string;
    readonly resultOutputFile?: string;
    readonly searchWord?: string;
    readonly topicLists: outputs.GetCkafkaGroupOffsetsTopicList[];
    readonly topics?: string[];
}
export function getCkafkaGroupOffsetsOutput(args: GetCkafkaGroupOffsetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCkafkaGroupOffsetsResult> {
    return pulumi.output(args).apply((a: any) => getCkafkaGroupOffsets(a, opts))
}

/**
 * A collection of arguments for invoking getCkafkaGroupOffsets.
 */
export interface GetCkafkaGroupOffsetsOutputArgs {
    group: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    searchWord?: pulumi.Input<string>;
    topics?: pulumi.Input<pulumi.Input<string>[]>;
}
