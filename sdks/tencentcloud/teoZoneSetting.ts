// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TeoZoneSetting extends pulumi.CustomResource {
    /**
     * Get an existing TeoZoneSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TeoZoneSettingState, opts?: pulumi.CustomResourceOptions): TeoZoneSetting {
        return new TeoZoneSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/teoZoneSetting:TeoZoneSetting';

    /**
     * Returns true if the given object is an instance of TeoZoneSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TeoZoneSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TeoZoneSetting.__pulumiType;
    }

    /**
     * Acceleration area of the zone. Valid values: `mainland`, `overseas`.
     */
    public /*out*/ readonly area!: pulumi.Output<string>;
    /**
     * Cache expiration time configuration.
     */
    public readonly cache!: pulumi.Output<outputs.TeoZoneSettingCache | undefined>;
    /**
     * Node cache key configuration.
     */
    public readonly cacheKey!: pulumi.Output<outputs.TeoZoneSettingCacheKey | undefined>;
    /**
     * Cache pre-refresh configuration.
     */
    public readonly cachePrefresh!: pulumi.Output<outputs.TeoZoneSettingCachePrefresh | undefined>;
    /**
     * Origin-pull client IP header configuration.
     */
    public readonly clientIpHeader!: pulumi.Output<outputs.TeoZoneSettingClientIpHeader | undefined>;
    /**
     * Smart compression configuration.
     */
    public readonly compression!: pulumi.Output<outputs.TeoZoneSettingCompression | undefined>;
    /**
     * Force HTTPS redirect configuration.
     */
    public readonly forceRedirect!: pulumi.Output<outputs.TeoZoneSettingForceRedirect | undefined>;
    /**
     * HTTPS acceleration configuration.
     */
    public readonly https!: pulumi.Output<outputs.TeoZoneSettingHttps | undefined>;
    /**
     * IPv6 access configuration.
     */
    public readonly ipv6!: pulumi.Output<outputs.TeoZoneSettingIpv6 | undefined>;
    /**
     * Browser cache configuration.
     */
    public readonly maxAge!: pulumi.Output<outputs.TeoZoneSettingMaxAge | undefined>;
    /**
     * Offline cache configuration.
     */
    public readonly offlineCache!: pulumi.Output<outputs.TeoZoneSettingOfflineCache | undefined>;
    /**
     * Origin server configuration.
     */
    public readonly origin!: pulumi.Output<outputs.TeoZoneSettingOrigin | undefined>;
    /**
     * Maximum size of files transferred over POST request.
     */
    public readonly postMaxSize!: pulumi.Output<outputs.TeoZoneSettingPostMaxSize | undefined>;
    /**
     * QUIC access configuration.
     */
    public readonly quic!: pulumi.Output<outputs.TeoZoneSettingQuic | undefined>;
    /**
     * Smart acceleration configuration.
     */
    public readonly smartRouting!: pulumi.Output<outputs.TeoZoneSettingSmartRouting | undefined>;
    /**
     * HTTP2 origin-pull configuration.
     */
    public readonly upstreamHttp2!: pulumi.Output<outputs.TeoZoneSettingUpstreamHttp2 | undefined>;
    /**
     * WebSocket configuration.
     */
    public readonly webSocket!: pulumi.Output<outputs.TeoZoneSettingWebSocket | undefined>;
    /**
     * Site ID.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a TeoZoneSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TeoZoneSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TeoZoneSettingArgs | TeoZoneSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TeoZoneSettingState | undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["cache"] = state ? state.cache : undefined;
            resourceInputs["cacheKey"] = state ? state.cacheKey : undefined;
            resourceInputs["cachePrefresh"] = state ? state.cachePrefresh : undefined;
            resourceInputs["clientIpHeader"] = state ? state.clientIpHeader : undefined;
            resourceInputs["compression"] = state ? state.compression : undefined;
            resourceInputs["forceRedirect"] = state ? state.forceRedirect : undefined;
            resourceInputs["https"] = state ? state.https : undefined;
            resourceInputs["ipv6"] = state ? state.ipv6 : undefined;
            resourceInputs["maxAge"] = state ? state.maxAge : undefined;
            resourceInputs["offlineCache"] = state ? state.offlineCache : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["postMaxSize"] = state ? state.postMaxSize : undefined;
            resourceInputs["quic"] = state ? state.quic : undefined;
            resourceInputs["smartRouting"] = state ? state.smartRouting : undefined;
            resourceInputs["upstreamHttp2"] = state ? state.upstreamHttp2 : undefined;
            resourceInputs["webSocket"] = state ? state.webSocket : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as TeoZoneSettingArgs | undefined;
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["cache"] = args ? args.cache : undefined;
            resourceInputs["cacheKey"] = args ? args.cacheKey : undefined;
            resourceInputs["cachePrefresh"] = args ? args.cachePrefresh : undefined;
            resourceInputs["clientIpHeader"] = args ? args.clientIpHeader : undefined;
            resourceInputs["compression"] = args ? args.compression : undefined;
            resourceInputs["forceRedirect"] = args ? args.forceRedirect : undefined;
            resourceInputs["https"] = args ? args.https : undefined;
            resourceInputs["ipv6"] = args ? args.ipv6 : undefined;
            resourceInputs["maxAge"] = args ? args.maxAge : undefined;
            resourceInputs["offlineCache"] = args ? args.offlineCache : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["postMaxSize"] = args ? args.postMaxSize : undefined;
            resourceInputs["quic"] = args ? args.quic : undefined;
            resourceInputs["smartRouting"] = args ? args.smartRouting : undefined;
            resourceInputs["upstreamHttp2"] = args ? args.upstreamHttp2 : undefined;
            resourceInputs["webSocket"] = args ? args.webSocket : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["area"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TeoZoneSetting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TeoZoneSetting resources.
 */
export interface TeoZoneSettingState {
    /**
     * Acceleration area of the zone. Valid values: `mainland`, `overseas`.
     */
    area?: pulumi.Input<string>;
    /**
     * Cache expiration time configuration.
     */
    cache?: pulumi.Input<inputs.TeoZoneSettingCache>;
    /**
     * Node cache key configuration.
     */
    cacheKey?: pulumi.Input<inputs.TeoZoneSettingCacheKey>;
    /**
     * Cache pre-refresh configuration.
     */
    cachePrefresh?: pulumi.Input<inputs.TeoZoneSettingCachePrefresh>;
    /**
     * Origin-pull client IP header configuration.
     */
    clientIpHeader?: pulumi.Input<inputs.TeoZoneSettingClientIpHeader>;
    /**
     * Smart compression configuration.
     */
    compression?: pulumi.Input<inputs.TeoZoneSettingCompression>;
    /**
     * Force HTTPS redirect configuration.
     */
    forceRedirect?: pulumi.Input<inputs.TeoZoneSettingForceRedirect>;
    /**
     * HTTPS acceleration configuration.
     */
    https?: pulumi.Input<inputs.TeoZoneSettingHttps>;
    /**
     * IPv6 access configuration.
     */
    ipv6?: pulumi.Input<inputs.TeoZoneSettingIpv6>;
    /**
     * Browser cache configuration.
     */
    maxAge?: pulumi.Input<inputs.TeoZoneSettingMaxAge>;
    /**
     * Offline cache configuration.
     */
    offlineCache?: pulumi.Input<inputs.TeoZoneSettingOfflineCache>;
    /**
     * Origin server configuration.
     */
    origin?: pulumi.Input<inputs.TeoZoneSettingOrigin>;
    /**
     * Maximum size of files transferred over POST request.
     */
    postMaxSize?: pulumi.Input<inputs.TeoZoneSettingPostMaxSize>;
    /**
     * QUIC access configuration.
     */
    quic?: pulumi.Input<inputs.TeoZoneSettingQuic>;
    /**
     * Smart acceleration configuration.
     */
    smartRouting?: pulumi.Input<inputs.TeoZoneSettingSmartRouting>;
    /**
     * HTTP2 origin-pull configuration.
     */
    upstreamHttp2?: pulumi.Input<inputs.TeoZoneSettingUpstreamHttp2>;
    /**
     * WebSocket configuration.
     */
    webSocket?: pulumi.Input<inputs.TeoZoneSettingWebSocket>;
    /**
     * Site ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TeoZoneSetting resource.
 */
export interface TeoZoneSettingArgs {
    /**
     * Cache expiration time configuration.
     */
    cache?: pulumi.Input<inputs.TeoZoneSettingCache>;
    /**
     * Node cache key configuration.
     */
    cacheKey?: pulumi.Input<inputs.TeoZoneSettingCacheKey>;
    /**
     * Cache pre-refresh configuration.
     */
    cachePrefresh?: pulumi.Input<inputs.TeoZoneSettingCachePrefresh>;
    /**
     * Origin-pull client IP header configuration.
     */
    clientIpHeader?: pulumi.Input<inputs.TeoZoneSettingClientIpHeader>;
    /**
     * Smart compression configuration.
     */
    compression?: pulumi.Input<inputs.TeoZoneSettingCompression>;
    /**
     * Force HTTPS redirect configuration.
     */
    forceRedirect?: pulumi.Input<inputs.TeoZoneSettingForceRedirect>;
    /**
     * HTTPS acceleration configuration.
     */
    https?: pulumi.Input<inputs.TeoZoneSettingHttps>;
    /**
     * IPv6 access configuration.
     */
    ipv6?: pulumi.Input<inputs.TeoZoneSettingIpv6>;
    /**
     * Browser cache configuration.
     */
    maxAge?: pulumi.Input<inputs.TeoZoneSettingMaxAge>;
    /**
     * Offline cache configuration.
     */
    offlineCache?: pulumi.Input<inputs.TeoZoneSettingOfflineCache>;
    /**
     * Origin server configuration.
     */
    origin?: pulumi.Input<inputs.TeoZoneSettingOrigin>;
    /**
     * Maximum size of files transferred over POST request.
     */
    postMaxSize?: pulumi.Input<inputs.TeoZoneSettingPostMaxSize>;
    /**
     * QUIC access configuration.
     */
    quic?: pulumi.Input<inputs.TeoZoneSettingQuic>;
    /**
     * Smart acceleration configuration.
     */
    smartRouting?: pulumi.Input<inputs.TeoZoneSettingSmartRouting>;
    /**
     * HTTP2 origin-pull configuration.
     */
    upstreamHttp2?: pulumi.Input<inputs.TeoZoneSettingUpstreamHttp2>;
    /**
     * WebSocket configuration.
     */
    webSocket?: pulumi.Input<inputs.TeoZoneSettingWebSocket>;
    /**
     * Site ID.
     */
    zoneId: pulumi.Input<string>;
}
