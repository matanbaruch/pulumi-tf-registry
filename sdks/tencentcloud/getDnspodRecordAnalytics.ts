// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnspodRecordAnalytics(args: GetDnspodRecordAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetDnspodRecordAnalyticsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getDnspodRecordAnalytics:getDnspodRecordAnalytics", {
        "dnsFormat": args.dnsFormat,
        "domain": args.domain,
        "domainId": args.domainId,
        "endDate": args.endDate,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
        "startDate": args.startDate,
        "subdomain": args.subdomain,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnspodRecordAnalytics.
 */
export interface GetDnspodRecordAnalyticsArgs {
    dnsFormat?: string;
    domain: string;
    domainId?: number;
    endDate: string;
    id?: string;
    resultOutputFile?: string;
    startDate: string;
    subdomain: string;
}

/**
 * A collection of values returned by getDnspodRecordAnalytics.
 */
export interface GetDnspodRecordAnalyticsResult {
    readonly aliasDatas: outputs.GetDnspodRecordAnalyticsAliasData[];
    readonly datas: outputs.GetDnspodRecordAnalyticsData[];
    readonly dnsFormat?: string;
    readonly domain: string;
    readonly domainId?: number;
    readonly endDate: string;
    readonly id: string;
    readonly infos: outputs.GetDnspodRecordAnalyticsInfo[];
    readonly resultOutputFile?: string;
    readonly startDate: string;
    readonly subdomain: string;
}
export function getDnspodRecordAnalyticsOutput(args: GetDnspodRecordAnalyticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnspodRecordAnalyticsResult> {
    return pulumi.output(args).apply((a: any) => getDnspodRecordAnalytics(a, opts))
}

/**
 * A collection of arguments for invoking getDnspodRecordAnalytics.
 */
export interface GetDnspodRecordAnalyticsOutputArgs {
    dnsFormat?: pulumi.Input<string>;
    domain: pulumi.Input<string>;
    domainId?: pulumi.Input<number>;
    endDate: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    startDate: pulumi.Input<string>;
    subdomain: pulumi.Input<string>;
}
