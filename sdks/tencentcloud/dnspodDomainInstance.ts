// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DnspodDomainInstance extends pulumi.CustomResource {
    /**
     * Get an existing DnspodDomainInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnspodDomainInstanceState, opts?: pulumi.CustomResourceOptions): DnspodDomainInstance {
        return new DnspodDomainInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:index/dnspodDomainInstance:DnspodDomainInstance';

    /**
     * Returns true if the given object is an instance of DnspodDomainInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DnspodDomainInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DnspodDomainInstance.__pulumiType;
    }

    /**
     * Create time of the domain.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The Domain.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The Group Id of Domain.
     */
    public readonly groupId!: pulumi.Output<number | undefined>;
    /**
     * Whether to Mark the Domain.
     */
    public readonly isMark!: pulumi.Output<string>;
    /**
     * The remark of Domain.
     */
    public readonly remark!: pulumi.Output<string | undefined>;
    /**
     * Is secondary DNS enabled.
     */
    public /*out*/ readonly slaveDns!: pulumi.Output<string>;
    /**
     * The status of Domain.
     */
    public readonly status!: pulumi.Output<string | undefined>;

    /**
     * Create a DnspodDomainInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnspodDomainInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnspodDomainInstanceArgs | DnspodDomainInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DnspodDomainInstanceState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["isMark"] = state ? state.isMark : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["slaveDns"] = state ? state.slaveDns : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as DnspodDomainInstanceArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["isMark"] = args ? args.isMark : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["slaveDns"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DnspodDomainInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DnspodDomainInstance resources.
 */
export interface DnspodDomainInstanceState {
    /**
     * Create time of the domain.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The Domain.
     */
    domain?: pulumi.Input<string>;
    /**
     * The Group Id of Domain.
     */
    groupId?: pulumi.Input<number>;
    /**
     * Whether to Mark the Domain.
     */
    isMark?: pulumi.Input<string>;
    /**
     * The remark of Domain.
     */
    remark?: pulumi.Input<string>;
    /**
     * Is secondary DNS enabled.
     */
    slaveDns?: pulumi.Input<string>;
    /**
     * The status of Domain.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DnspodDomainInstance resource.
 */
export interface DnspodDomainInstanceArgs {
    /**
     * The Domain.
     */
    domain: pulumi.Input<string>;
    /**
     * The Group Id of Domain.
     */
    groupId?: pulumi.Input<number>;
    /**
     * Whether to Mark the Domain.
     */
    isMark?: pulumi.Input<string>;
    /**
     * The remark of Domain.
     */
    remark?: pulumi.Input<string>;
    /**
     * The status of Domain.
     */
    status?: pulumi.Input<string>;
}
