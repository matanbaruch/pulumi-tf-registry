// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApiGatewayApiAppService(args: GetApiGatewayApiAppServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetApiGatewayApiAppServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:index/getApiGatewayApiAppService:getApiGatewayApiAppService", {
        "apiRegion": args.apiRegion,
        "id": args.id,
        "resultOutputFile": args.resultOutputFile,
        "serviceId": args.serviceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApiGatewayApiAppService.
 */
export interface GetApiGatewayApiAppServiceArgs {
    apiRegion: string;
    id?: string;
    resultOutputFile?: string;
    serviceId: string;
}

/**
 * A collection of values returned by getApiGatewayApiAppService.
 */
export interface GetApiGatewayApiAppServiceResult {
    readonly apiIdStatusSets: outputs.GetApiGatewayApiAppServiceApiIdStatusSet[];
    readonly apiRegion: string;
    readonly apiTotalCount: number;
    readonly availableEnvironments: string[];
    readonly createdTime: string;
    readonly id: string;
    readonly innerHttpPort: number;
    readonly innerHttpsPort: number;
    readonly internalSubDomain: string;
    readonly ipVersion: string;
    readonly modifiedTime: string;
    readonly netTypes: string[];
    readonly outerSubDomain: string;
    readonly protocol: string;
    readonly resultOutputFile?: string;
    readonly serviceDesc: string;
    readonly serviceId: string;
    readonly serviceName: string;
    readonly setId: number;
    readonly usagePlanLists: outputs.GetApiGatewayApiAppServiceUsagePlanList[];
    readonly usagePlanTotalCount: number;
    readonly userType: string;
}
export function getApiGatewayApiAppServiceOutput(args: GetApiGatewayApiAppServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiGatewayApiAppServiceResult> {
    return pulumi.output(args).apply((a: any) => getApiGatewayApiAppService(a, opts))
}

/**
 * A collection of arguments for invoking getApiGatewayApiAppService.
 */
export interface GetApiGatewayApiAppServiceOutputArgs {
    apiRegion: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    serviceId: pulumi.Input<string>;
}
